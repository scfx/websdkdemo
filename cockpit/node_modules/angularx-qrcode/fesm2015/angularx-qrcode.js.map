{"version":3,"file":"angularx-qrcode.js","sources":["../../projects/angularx-qrcode/src/lib/angularx-qrcode.component.ts","../../projects/angularx-qrcode/src/lib/angularx-qrcode.module.ts","../../../projects/angularx-qrcode/src/public-api.ts","../../../projects/angularx-qrcode/src/angularx-qrcode.ts"],"names":["QRCode.toDataURL","QRCode.toCanvas","QRCode.toString"],"mappings":"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","sourcesContent":["import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  Renderer2,\n  ViewChild,\n} from '@angular/core';\nimport * as QRCode from 'qrcode';\nimport {\n  QRCodeErrorCorrectionLevel,\n  QRCodeVersion,\n  QRCodeElementType,\n} from './types';\n\n@Component({\n  selector: 'qrcode',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `<div #qrcElement [class]=\"cssClass\"></div>`,\n})\nexport class QRCodeComponent implements OnChanges {\n  // Deprecated\n  @Input() public colordark = '';\n  @Input() public colorlight = '';\n  @Input() public level = '';\n  @Input() public hidetitle = false;\n  @Input() public size = 0;\n  @Input() public usesvg = false;\n\n  // Valid for 1.x and 2.x\n  @Input() public allowEmptyString = false;\n  @Input() public qrdata = '';\n\n  // New fields introduced in 2.0.0\n  @Input() public colorDark = '#000000ff';\n  @Input() public colorLight = '#ffffffff';\n  @Input() public cssClass = 'qrcode';\n  @Input() public elementType: keyof typeof QRCodeElementType = 'canvas';\n  @Input()\n  public errorCorrectionLevel: keyof typeof QRCodeErrorCorrectionLevel = 'M';\n  @Input() public margin = 4;\n  @Input() public scale = 4;\n  @Input() public version: QRCodeVersion | undefined;\n  @Input() public width = 10;\n\n  @ViewChild('qrcElement', { static: true }) public qrcElement: ElementRef;\n\n  constructor(private renderer: Renderer2) {\n    // Deprecation warnings\n    if (this.colordark !== '') {\n      console.warn('[angularx-qrcode] colordark is deprecated, use colorDark.');\n    }\n    if (this.colorlight !== '') {\n      console.warn(\n        '[angularx-qrcode] colorlight is deprecated, use colorLight.'\n      );\n    }\n    if (this.level !== '') {\n      console.warn(\n        '[angularx-qrcode] level is deprecated, use errorCorrectionLevel.'\n      );\n    }\n    if (this.hidetitle !== false) {\n      console.warn('[angularx-qrcode] hidetitle is deprecated.');\n    }\n    if (this.size !== 0) {\n      console.warn(\n        '[angularx-qrcode] size is deprecated, use `width`. Defaults to 10.'\n      );\n    }\n    if (this.usesvg !== false) {\n      console.warn(\n        `[angularx-qrcode] usesvg is deprecated, use [elementType]=\"'svg'\".`\n      );\n    }\n  }\n\n  public ngOnChanges(): void {\n    this.createQRCode();\n  }\n\n  protected isValidQrCodeText(data: string | null): boolean {\n    if (this.allowEmptyString === false) {\n      return !(\n        typeof data === 'undefined' ||\n        data === '' ||\n        data === 'null' ||\n        data === null\n      );\n    }\n    return !(typeof data === 'undefined');\n  }\n\n  private toDataURL(): Promise<any> {\n    return new Promise(\n      (resolve: (arg: any) => any, reject: (arg: any) => any) => {\n        QRCode.toDataURL(\n          this.qrdata,\n          {\n            color: {\n              dark: this.colorDark,\n              light: this.colorLight,\n            },\n            errorCorrectionLevel: this.errorCorrectionLevel,\n            margin: this.margin,\n            scale: this.scale,\n            version: this.version,\n            width: this.width,\n          },\n          (err, url) => {\n            if (err) {\n              reject(err);\n            } else {\n              resolve(url);\n            }\n          }\n        );\n      }\n    );\n  }\n\n  private toCanvas(canvas: Element): Promise<any> {\n    return new Promise(\n      (resolve: (arg: any) => any, reject: (arg: any) => any) => {\n        QRCode.toCanvas(\n          canvas,\n          this.qrdata,\n          {\n            color: {\n              dark: this.colorDark,\n              light: this.colorLight,\n            },\n            errorCorrectionLevel: this.errorCorrectionLevel,\n            margin: this.margin,\n            scale: this.scale,\n            version: this.version,\n            width: this.width,\n          },\n          (error) => {\n            if (error) {\n              reject(error);\n            } else {\n              resolve('success');\n            }\n          }\n        );\n      }\n    );\n  }\n\n  private toSVG(): Promise<any> {\n    return new Promise(\n      (resolve: (arg: any) => any, reject: (arg: any) => any) => {\n        QRCode.toString(\n          this.qrdata,\n          {\n            color: {\n              dark: this.colorDark,\n              light: this.colorLight,\n            },\n            errorCorrectionLevel: this.errorCorrectionLevel,\n            margin: this.margin,\n            scale: this.scale,\n            type: 'svg',\n            version: this.version,\n            width: this.width,\n          },\n          (err, url) => {\n            if (err) {\n              reject(err);\n            } else {\n              resolve(url);\n            }\n          }\n        );\n      }\n    );\n  }\n\n  private renderElement(element: Element): void {\n    for (const node of this.qrcElement.nativeElement.childNodes) {\n      this.renderer.removeChild(this.qrcElement.nativeElement, node);\n    }\n    this.renderer.appendChild(this.qrcElement.nativeElement, element);\n  }\n\n  private createQRCode(): void {\n    // Set sensitive defaults\n    if (this.version && this.version > 40) {\n      console.warn('[angularx-qrcode] max value for `version` is 40');\n      this.version = 40;\n    } else if (this.version && this.version < 1) {\n      console.warn('[angularx-qrcode]`min value for `version` is 1');\n      this.version = 1;\n    } else if (this.version !== undefined && isNaN(this.version)) {\n      console.warn(\n        '[angularx-qrcode] version should be a number, defaulting to auto.'\n      );\n      this.version = undefined;\n    }\n\n    try {\n      if (!this.isValidQrCodeText(this.qrdata)) {\n        throw new Error(\n          '[angularx-qrcode] Field `qrdata` is empty, set`allowEmptyString=\"true\"` to overwrite this behaviour.'\n        );\n      }\n\n      let element: Element;\n\n      switch (this.elementType) {\n        case 'canvas':\n          element = this.renderer.createElement('canvas');\n          this.toCanvas(element)\n            .then(() => {\n              this.renderElement(element);\n            })\n            .catch((e) => {\n              console.error('[angularx-qrcode] canvas error: ', e);\n            });\n          break;\n        case 'svg':\n          element = this.renderer.createElement('div');\n          this.toSVG()\n            .then((svgString: string) => {\n              this.renderer.setProperty(element, 'innerHTML', svgString);\n              const innerElement = element.firstChild as Element;\n              this.renderer.setAttribute(\n                innerElement,\n                'height',\n                `${this.width}`\n              );\n              this.renderer.setAttribute(\n                innerElement,\n                'width',\n                `${this.width}`\n              );\n\n              this.renderElement(innerElement);\n            })\n            .catch((e) => {\n              console.error('[angularx-qrcode] svg error: ', e);\n            });\n          break;\n        case 'url':\n        case 'img':\n        default:\n          element = this.renderer.createElement('img');\n          this.toDataURL()\n            .then((dataUrl: string) => {\n              element.setAttribute('src', dataUrl);\n              this.renderElement(element);\n            })\n            .catch((e) => {\n              console.error('[angularx-qrcode] img/url error: ', e);\n            });\n      }\n    } catch (e) {\n      console.error('[angularx-qrcode] Error generating QR Code: ', e.message);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { QRCodeComponent } from './angularx-qrcode.component';\n\n@NgModule({\n  providers: [],\n  declarations: [QRCodeComponent],\n  exports: [QRCodeComponent],\n})\nexport class QRCodeModule {}\n","/*\n * Public API Surface of angularx-qrcode\n */\n\nexport { QRCodeComponent } from './lib/angularx-qrcode.component';\nexport { QRCodeModule } from './lib/angularx-qrcode.module';\nexport * from './lib/types';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}