/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
import * as ɵngcc0 from '@angular/core';
var TabsetConfig = /** @class */ (function () {
    function TabsetConfig() {
        /**
         * provides default navigation context class: 'tabs' or 'pills'
         */
        this.type = 'tabs';
        /**
         * provides possibility to set keyNavigations enable or disable, by default is enable
         */
        this.isKeysAllowed = true;
        /**
         * aria label for tab list
         */
        this.ariaLabel = 'Tabs';
    }
    /** @nocollapse */ TabsetConfig.ɵprov = i0.ɵɵdefineInjectable({ factory: function TabsetConfig_Factory() { return new TabsetConfig(); }, token: TabsetConfig, providedIn: "root" });
TabsetConfig.ɵfac = function TabsetConfig_Factory(t) { return new (t || TabsetConfig)(); };
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TabsetConfig, [{
        type: Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return []; }, null); })();
    return TabsetConfig;
}());
export { TabsetConfig };
if (false) {
    /**
     * provides default navigation context class: 'tabs' or 'pills'
     * @type {?}
     */
    TabsetConfig.prototype.type;
    /**
     * provides possibility to set keyNavigations enable or disable, by default is enable
     * @type {?}
     */
    TabsetConfig.prototype.isKeysAllowed;
    /**
     * aria label for tab list
     * @type {?}
     */
    TabsetConfig.prototype.ariaLabel;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFic2V0LmNvbmZpZy5qcyIsInNvdXJjZXMiOlsibmd4LWJvb3RzdHJhcC90YWJzL3RhYnNldC5jb25maWcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0M7O0FBQ0E7QUFHVSxJQUhWO0FBQ1k7QUFFWjtBQUM0QztBQUFZLFFBQ3RELFNBQUksR0FBRyxNQUFNLENBQUM7QUFDaEI7QUFBWTtBQUNFO0FBQ1osUUFEQSxrQkFBYSxHQUFHLElBQUksQ0FBQztBQUN2QjtBQUFZO0FBQ0U7QUFFWixRQUZBLGNBQVMsR0FBRyxNQUFNLENBQUM7QUFDckIsS0FBQyxBQVBRO2dEQUhSLFVBQVUsU0FBQyxzQkFDVixVQUFVLEVBQUUsTUFBTSxrQkFDbkIsN0hBQ1M7Ozs7Ozs7Z0RBR3FFO0FBQUMsdUJBUmhGO0FBQUUsQ0FZRCxBQVZELElBVUM7QUFDRCxTQVJhLFlBQVk7QUFDeEI7QUFBYTtBQUFRO0FBRW5CO0FBQWlCO0FBQVEsSUFEMUIsNEJBQWM7QUFDaEI7QUFBUTtBQUNGO0FBQWlCO0FBQ2hCLElBREwscUNBQXFCO0FBQ3ZCO0FBQVE7QUFDRjtBQUNMO0FBQ00sSUFGTCxpQ0FBbUI7QUFDckI7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQEluamVjdGFibGUoe1xuICBwcm92aWRlZEluOiAncm9vdCdcbn0pXG5leHBvcnQgY2xhc3MgVGFic2V0Q29uZmlnIHtcbiAgLyoqIHByb3ZpZGVzIGRlZmF1bHQgbmF2aWdhdGlvbiBjb250ZXh0IGNsYXNzOiAndGFicycgb3IgJ3BpbGxzJyAqL1xuICB0eXBlID0gJ3RhYnMnO1xuICAvKiogcHJvdmlkZXMgcG9zc2liaWxpdHkgdG8gc2V0IGtleU5hdmlnYXRpb25zIGVuYWJsZSBvciBkaXNhYmxlLCBieSBkZWZhdWx0IGlzIGVuYWJsZSAqL1xuICBpc0tleXNBbGxvd2VkID0gdHJ1ZTtcbiAgLyoqIGFyaWEgbGFiZWwgZm9yIHRhYiBsaXN0ICovXG4gIGFyaWFMYWJlbCA9ICdUYWJzJztcbn1cbiJdfQ==