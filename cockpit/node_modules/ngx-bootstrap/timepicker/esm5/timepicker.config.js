/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
/**
 * Provides default configuration values for timepicker
 */
import * as ɵngcc0 from '@angular/core';
var TimepickerConfig = /** @class */ (function () {
    function TimepickerConfig() {
        /**
         * hours change step
         */
        this.hourStep = 1;
        /**
         * minutes change step
         */
        this.minuteStep = 5;
        /**
         * seconds changes step
         */
        this.secondsStep = 10;
        /**
         * if true works in 12H mode and displays AM/PM. If false works in 24H mode and hides AM/PM
         */
        this.showMeridian = true;
        /**
         * meridian labels based on locale
         */
        this.meridians = ['AM', 'PM'];
        /**
         * if true hours and minutes fields will be readonly
         */
        this.readonlyInput = false;
        /**
         * if true hours and minutes fields will be disabled
         */
        this.disabled = false;
        /**
         * if true scroll inside hours and minutes inputs will change time
         */
        this.mousewheel = true;
        /**
         * if true the values of hours and minutes can be changed using the up/down arrow keys on the keyboard
         */
        this.arrowkeys = true;
        /**
         * if true spinner arrows above and below the inputs will be shown
         */
        this.showSpinners = true;
        /**
         * show seconds in timepicker
         */
        this.showSeconds = false;
        /**
         * show minutes in timepicker
         */
        this.showMinutes = true;
        /**
         * placeholder for hours field in timepicker
         */
        this.hoursPlaceholder = 'HH';
        /**
         * placeholder for minutes field in timepicker
         */
        this.minutesPlaceholder = 'MM';
        /**
         * placeholder for seconds field in timepicker
         */
        this.secondsPlaceholder = 'SS';
        /**
         * hours aria label
         */
        this.ariaLabelHours = 'hours';
        /**
         * minutes aria label
         */
        this.ariaLabelMinutes = 'minutes';
        /**
         * seconds aria label
         */
        this.ariaLabelSeconds = 'seconds';
    }
    /** @nocollapse */ TimepickerConfig.ɵprov = i0.ɵɵdefineInjectable({ factory: function TimepickerConfig_Factory() { return new TimepickerConfig(); }, token: TimepickerConfig, providedIn: "root" });
TimepickerConfig.ɵfac = function TimepickerConfig_Factory(t) { return new (t || TimepickerConfig)(); };
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TimepickerConfig, [{
        type: Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return []; }, null); })();
    return TimepickerConfig;
}());
export { TimepickerConfig };
if (false) {
    /**
     * hours change step
     * @type {?}
     */
    TimepickerConfig.prototype.hourStep;
    /**
     * minutes change step
     * @type {?}
     */
    TimepickerConfig.prototype.minuteStep;
    /**
     * seconds changes step
     * @type {?}
     */
    TimepickerConfig.prototype.secondsStep;
    /**
     * if true works in 12H mode and displays AM/PM. If false works in 24H mode and hides AM/PM
     * @type {?}
     */
    TimepickerConfig.prototype.showMeridian;
    /**
     * meridian labels based on locale
     * @type {?}
     */
    TimepickerConfig.prototype.meridians;
    /**
     * if true hours and minutes fields will be readonly
     * @type {?}
     */
    TimepickerConfig.prototype.readonlyInput;
    /**
     * if true hours and minutes fields will be disabled
     * @type {?}
     */
    TimepickerConfig.prototype.disabled;
    /**
     * if true scroll inside hours and minutes inputs will change time
     * @type {?}
     */
    TimepickerConfig.prototype.mousewheel;
    /**
     * if true the values of hours and minutes can be changed using the up/down arrow keys on the keyboard
     * @type {?}
     */
    TimepickerConfig.prototype.arrowkeys;
    /**
     * if true spinner arrows above and below the inputs will be shown
     * @type {?}
     */
    TimepickerConfig.prototype.showSpinners;
    /**
     * show seconds in timepicker
     * @type {?}
     */
    TimepickerConfig.prototype.showSeconds;
    /**
     * show minutes in timepicker
     * @type {?}
     */
    TimepickerConfig.prototype.showMinutes;
    /**
     * minimum time user can select
     * @type {?}
     */
    TimepickerConfig.prototype.min;
    /**
     * maximum time user can select
     * @type {?}
     */
    TimepickerConfig.prototype.max;
    /**
     * placeholder for hours field in timepicker
     * @type {?}
     */
    TimepickerConfig.prototype.hoursPlaceholder;
    /**
     * placeholder for minutes field in timepicker
     * @type {?}
     */
    TimepickerConfig.prototype.minutesPlaceholder;
    /**
     * placeholder for seconds field in timepicker
     * @type {?}
     */
    TimepickerConfig.prototype.secondsPlaceholder;
    /**
     * hours aria label
     * @type {?}
     */
    TimepickerConfig.prototype.ariaLabelHours;
    /**
     * minutes aria label
     * @type {?}
     */
    TimepickerConfig.prototype.ariaLabelMinutes;
    /**
     * seconds aria label
     * @type {?}
     */
    TimepickerConfig.prototype.ariaLabelSeconds;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGltZXBpY2tlci5jb25maWcuanMiLCJzb3VyY2VzIjpbIm5neC1ib290c3RyYXAvdGltZXBpY2tlci90aW1lcGlja2VyLmNvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQztBQUNvQztBQUFJO0FBR3ZDOztBQUZEO0FBR2MsSUFIZDtBQUNnQjtBQUVaO0FBQ0g7QUFBWSxRQUNYLGFBQVEsR0FBRyxDQUFDLENBQUM7QUFDZjtBQUFZO0FBQ0U7QUFDTixRQUROLGVBQVUsR0FBRyxDQUFDLENBQUM7QUFDakI7QUFBWTtBQUNFO0FBQ1IsUUFESixnQkFBVyxHQUFHLEVBQUUsQ0FBQztBQUNuQjtBQUFZO0FBQ0U7QUFDWCxRQURELGlCQUFZLEdBQUcsSUFBSSxDQUFDO0FBQ3RCO0FBQVk7QUFDRTtBQUFZLFFBQXhCLGNBQVMsR0FBRyxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQztBQUMzQjtBQUFZO0FBQ0U7QUFDYixRQURDLGtCQUFhLEdBQUcsS0FBSyxDQUFDO0FBQ3hCO0FBQVk7QUFDRTtBQUNSLFFBREosYUFBUSxHQUFHLEtBQUssQ0FBQztBQUNuQjtBQUFZO0FBQ0U7QUFDVCxRQURILGVBQVUsR0FBRyxJQUFJLENBQUM7QUFDcEI7QUFBWTtBQUNFO0FBQ1IsUUFESixjQUFTLEdBQUcsSUFBSSxDQUFDO0FBQ25CO0FBQVk7QUFDRTtBQUNYLFFBREQsaUJBQVksR0FBRyxJQUFJLENBQUM7QUFDdEI7QUFBWTtBQUNFO0FBQ1gsUUFERCxnQkFBVyxHQUFHLEtBQUssQ0FBQztBQUN0QjtBQUFZO0FBQ0U7QUFDVixRQURGLGdCQUFXLEdBQUcsSUFBSSxDQUFDO0FBQ3JCO0FBQVk7QUFFRTtBQUFZLFFBR3hCLHFCQUFnQixHQUFHLElBQUksQ0FBQztBQUMxQjtBQUFZO0FBQ0U7QUFBWSxRQUF4Qix1QkFBa0IsR0FBRyxJQUFJLENBQUM7QUFDNUI7QUFBWTtBQUNFO0FBQVksUUFBeEIsdUJBQWtCLEdBQUcsSUFBSSxDQUFDO0FBQzVCO0FBQVk7QUFDRTtBQUFZLFFBQXhCLG1CQUFjLEdBQUcsT0FBTyxDQUFDO0FBQzNCO0FBQVk7QUFDRTtBQUFZLFFBQXhCLHFCQUFnQixHQUFHLFNBQVMsQ0FBQztBQUMvQjtBQUFZO0FBQ0U7QUFBWSxRQUF4QixxQkFBZ0IsR0FBRyxTQUFTLENBQUM7QUFDL0IsS0FBQyxBQXpDUTtvREFIUixVQUFVLFNBQUMsc0JBQ1YsVUFBVSxFQUFFLE1BQU0sa0JBQ25CLGpJQUNTOzs7Ozs7O2dEQU80QjtBQUFDLDJCQWJ2QztBQUFFLENBK0NELEFBNUNELElBNENDO0FBQ0QsU0ExQ2EsZ0JBQWdCO0FBQzVCO0FBQWE7QUFBUTtBQUVsQjtBQUFpQjtBQUNyQixJQUZFLG9DQUFhO0FBQ2Y7QUFBUTtBQUNGO0FBQ0Q7QUFBUSxJQURYLHNDQUFlO0FBQ2pCO0FBQVE7QUFDRjtBQUNIO0FBQVEsSUFEVCx1Q0FBaUI7QUFDbkI7QUFBUTtBQUNGO0FBQ047QUFBUSxJQUROLHdDQUFvQjtBQUN0QjtBQUFRO0FBQ0Y7QUFBaUI7QUFDcEIsSUFERCxxQ0FBeUI7QUFDM0I7QUFBUTtBQUNGO0FBQWlCO0FBQ2pCLElBREoseUNBQXNCO0FBQ3hCO0FBQVE7QUFDRjtBQUNIO0FBQVEsSUFEVCxvQ0FBaUI7QUFDbkI7QUFBUTtBQUNGO0FBQ0o7QUFBUSxJQURSLHNDQUFrQjtBQUNwQjtBQUFRO0FBQ0Y7QUFDSDtBQUFRLElBRFQscUNBQWlCO0FBQ25CO0FBQVE7QUFDRjtBQUNOO0FBQVEsSUFETix3Q0FBb0I7QUFDdEI7QUFBUTtBQUNGO0FBQ047QUFBUSxJQUROLHVDQUFvQjtBQUN0QjtBQUFRO0FBQ0Y7QUFDTDtBQUFRLElBRFAsdUNBQW1CO0FBQ3JCO0FBQVE7QUFDRjtBQUNJO0FBQVEsSUFEaEIsK0JBQVU7QUFDWjtBQUFRO0FBQ0Y7QUFDSTtBQUFRLElBRGhCLCtCQUFVO0FBQ1o7QUFBUTtBQUNGO0FBQWlCO0FBQ25CLElBREYsNENBQXdCO0FBQzFCO0FBQVE7QUFDRjtBQUFpQjtBQUNyQixJQURBLDhDQUEwQjtBQUM1QjtBQUFRO0FBQ0Y7QUFBaUI7QUFDckIsSUFEQSw4Q0FBMEI7QUFDNUI7QUFBUTtBQUNGO0FBQWlCO0FBQ3BCLElBREQsMENBQXlCO0FBQzNCO0FBQVE7QUFDRjtBQUFpQjtBQUFRLElBQTdCLDRDQUE2QjtBQUMvQjtBQUFRO0FBQ0Y7QUFBaUI7QUFBUSxJQUE3Qiw0Q0FBNkI7QUFDL0I7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuLyoqIFByb3ZpZGVzIGRlZmF1bHQgY29uZmlndXJhdGlvbiB2YWx1ZXMgZm9yIHRpbWVwaWNrZXIgKi9cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnXG59KVxuZXhwb3J0IGNsYXNzIFRpbWVwaWNrZXJDb25maWcge1xuICAvKiogaG91cnMgY2hhbmdlIHN0ZXAgKi9cbiAgaG91clN0ZXAgPSAxO1xuICAvKiogbWludXRlcyBjaGFuZ2Ugc3RlcCAqL1xuICBtaW51dGVTdGVwID0gNTtcbiAgLyoqIHNlY29uZHMgY2hhbmdlcyBzdGVwICovXG4gIHNlY29uZHNTdGVwID0gMTA7XG4gIC8qKiBpZiB0cnVlIHdvcmtzIGluIDEySCBtb2RlIGFuZCBkaXNwbGF5cyBBTS9QTS4gSWYgZmFsc2Ugd29ya3MgaW4gMjRIIG1vZGUgYW5kIGhpZGVzIEFNL1BNICovXG4gIHNob3dNZXJpZGlhbiA9IHRydWU7XG4gIC8qKiBtZXJpZGlhbiBsYWJlbHMgYmFzZWQgb24gbG9jYWxlICovXG4gIG1lcmlkaWFucyA9IFsnQU0nLCAnUE0nXTtcbiAgLyoqIGlmIHRydWUgaG91cnMgYW5kIG1pbnV0ZXMgZmllbGRzIHdpbGwgYmUgcmVhZG9ubHkgKi9cbiAgcmVhZG9ubHlJbnB1dCA9IGZhbHNlO1xuICAvKiogaWYgdHJ1ZSBob3VycyBhbmQgbWludXRlcyBmaWVsZHMgd2lsbCBiZSBkaXNhYmxlZCAqL1xuICBkaXNhYmxlZCA9IGZhbHNlO1xuICAvKiogaWYgdHJ1ZSBzY3JvbGwgaW5zaWRlIGhvdXJzIGFuZCBtaW51dGVzIGlucHV0cyB3aWxsIGNoYW5nZSB0aW1lICovXG4gIG1vdXNld2hlZWwgPSB0cnVlO1xuICAvKiogaWYgdHJ1ZSB0aGUgdmFsdWVzIG9mIGhvdXJzIGFuZCBtaW51dGVzIGNhbiBiZSBjaGFuZ2VkIHVzaW5nIHRoZSB1cC9kb3duIGFycm93IGtleXMgb24gdGhlIGtleWJvYXJkICovXG4gIGFycm93a2V5cyA9IHRydWU7XG4gIC8qKiBpZiB0cnVlIHNwaW5uZXIgYXJyb3dzIGFib3ZlIGFuZCBiZWxvdyB0aGUgaW5wdXRzIHdpbGwgYmUgc2hvd24gKi9cbiAgc2hvd1NwaW5uZXJzID0gdHJ1ZTtcbiAgLyoqIHNob3cgc2Vjb25kcyBpbiB0aW1lcGlja2VyICovXG4gIHNob3dTZWNvbmRzID0gZmFsc2U7XG4gIC8qKiBzaG93IG1pbnV0ZXMgaW4gdGltZXBpY2tlciAqL1xuICBzaG93TWludXRlcyA9IHRydWU7XG4gIC8qKiBtaW5pbXVtIHRpbWUgdXNlciBjYW4gc2VsZWN0ICovXG4gIG1pbjogRGF0ZTtcbiAgLyoqIG1heGltdW0gdGltZSB1c2VyIGNhbiBzZWxlY3QgKi9cbiAgbWF4OiBEYXRlO1xuICAvKiogcGxhY2Vob2xkZXIgZm9yIGhvdXJzIGZpZWxkIGluIHRpbWVwaWNrZXIgKi9cbiAgaG91cnNQbGFjZWhvbGRlciA9ICdISCc7XG4gIC8qKiBwbGFjZWhvbGRlciBmb3IgbWludXRlcyBmaWVsZCBpbiB0aW1lcGlja2VyICovXG4gIG1pbnV0ZXNQbGFjZWhvbGRlciA9ICdNTSc7XG4gIC8qKiBwbGFjZWhvbGRlciBmb3Igc2Vjb25kcyBmaWVsZCBpbiB0aW1lcGlja2VyICovXG4gIHNlY29uZHNQbGFjZWhvbGRlciA9ICdTUyc7XG4gIC8qKiBob3VycyBhcmlhIGxhYmVsICovXG4gIGFyaWFMYWJlbEhvdXJzID0gJ2hvdXJzJztcbiAgLyoqIG1pbnV0ZXMgYXJpYSBsYWJlbCAqL1xuICBhcmlhTGFiZWxNaW51dGVzID0gJ21pbnV0ZXMnO1xuICAvKiogc2Vjb25kcyBhcmlhIGxhYmVsICovXG4gIGFyaWFMYWJlbFNlY29uZHMgPSAnc2Vjb25kcyc7XG59XG4iXX0=