{"version":3,"file":"ngx-formly-core.js","sources":["@ngx-formly/core/lib/utils.ts","@ngx-formly/core/lib/services/formly.config.ts","@ngx-formly/core/lib/services/formly.form.builder.ts","@ngx-formly/core/lib/extensions/field-form/utils.ts","@ngx-formly/core/lib/components/formly.form.ts","@ngx-formly/core/lib/components/formly.field.ts","@ngx-formly/core/lib/components/formly.attributes.ts","@ngx-formly/core/lib/templates/field.type.ts","@ngx-formly/core/lib/templates/field-array.type.ts","@ngx-formly/core/lib/templates/field.wrapper.ts","@ngx-formly/core/lib/templates/formly.group.ts","@ngx-formly/core/lib/templates/formly.validation-message.ts","@ngx-formly/core/lib/templates/field-template.type.ts","@ngx-formly/core/lib/extensions/field-expression/utils.ts","@ngx-formly/core/lib/extensions/field-expression/field-expression.ts","@ngx-formly/core/lib/extensions/field-validation/field-validation.ts","@ngx-formly/core/lib/extensions/field-form/field-form.ts","@ngx-formly/core/lib/extensions/core/core.ts","@ngx-formly/core/lib/core.module.ts"],"names":["tslib_1.__values","tslib_1.__spread","tslib_1.__extends","updateValidity","updateControlValidity"],"mappings":"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AA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AA8BA,AA9BA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AA2BA,AA1BA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AAAA,AAAA,AAA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AA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AACA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEA,AACA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AACA,AAAA,AAAA,AACA,AAAA,AAAA,AACA,AACA,AAAA,AAAA,AC9SA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAqBA,AApyCA,AAxvkBA,AAjxlJA,AAiBA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AACA,AAEA,AAwCA,AACA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAltCA,AAAA,AAAA,AACA,AAAA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAxCA,AAAA,AAqEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAQA,AAAA,AAlDA","sourcesContent":["import { FormlyFieldConfig } from './core';\nimport { isObservable } from 'rxjs';\nimport { AbstractControl } from '@angular/forms';\nimport { FormlyFieldConfigCache } from './components/formly.field.config';\n\nexport function getFieldId(formId: string, field: FormlyFieldConfig, index: string|number) {\n  if (field.id) return field.id;\n  let type = field.type;\n  if (!type && field.template) type = 'template';\n  return [formId, type, field.key, index].join('_');\n}\n\nexport function getKeyPath(field: FormlyFieldConfigCache): string[] {\n  if (!field.key) {\n    return [];\n  }\n\n  /* We store the keyPath in the field for performance reasons. This function will be called frequently. */\n  if (!field._keyPath || field._keyPath.key !== field.key) {\n    let path: string[] = [];\n    if (typeof field.key === 'string') {\n      const key = field.key.indexOf('[') === -1\n        ? field.key\n        : field.key.replace(/\\[(\\w+)\\]/g, '.$1');\n      path = key.indexOf('.') !== -1 ? key.split('.') : [key];\n    } else if (Array.isArray(field.key)) {\n      path = field.key.slice(0);\n    } else {\n      path = [`${field.key}`];\n    }\n\n    field._keyPath = { key: field.key, path };\n  }\n\n  return field._keyPath.path.slice(0);\n}\n\nexport const FORMLY_VALIDATORS = ['required', 'pattern', 'minLength', 'maxLength', 'min', 'max'];\n\nexport function assignFieldValue(field: FormlyFieldConfigCache, value: any) {\n  let paths = getKeyPath(field);\n  if (paths.length === 0) {\n    return;\n  }\n\n  let root = field;\n  while (root.parent) {\n    root = root.parent;\n    paths = [...getKeyPath(root), ...paths];\n  }\n\n  if (value === undefined && field.resetOnHide) {\n    const k = paths.pop();\n    const m = paths.reduce((model, path) => model[path] || {}, root.model);\n    delete m[k];\n    return;\n  }\n\n  assignModelValue(root.model, paths, value);\n}\n\nexport function assignModelValue(model: any, paths: string[], value: any) {\n  for (let i = 0; i < (paths.length - 1); i++) {\n    const path = paths[i];\n    if (!model[path] || !isObject(model[path])) {\n      model[path] = /^\\d+$/.test(paths[i + 1]) ? [] : {};\n    }\n\n    model = model[path];\n  }\n\n  model[paths[paths.length - 1]] = clone(value);\n}\n\nexport function getFieldInitialValue(field: FormlyFieldConfig) {\n  let value = field.options['_initialModel'];\n  let paths = getKeyPath(field);\n  while (field.parent) {\n    field = field.parent;\n    paths = [...getKeyPath(field), ...paths];\n  }\n\n  for (const path of paths) {\n    if (!value) {\n      return undefined;\n    }\n    value = value[path];\n  }\n\n  return value;\n}\n\nexport function getFieldValue(field: FormlyFieldConfig): any {\n  let model = field.parent.model;\n  for (const path of getKeyPath(field)) {\n    if (!model) {\n      return model;\n    }\n    model = model[path];\n  }\n\n  return model;\n}\n\nexport function reverseDeepMerge(dest: any, ...args: any[]) {\n  args.forEach(src => {\n    for (let srcArg in src) {\n      if (isNullOrUndefined(dest[srcArg]) || isBlankString(dest[srcArg])) {\n        dest[srcArg] = clone(src[srcArg]);\n      } else if (objAndSameType(dest[srcArg], src[srcArg])) {\n        reverseDeepMerge(dest[srcArg], src[srcArg]);\n      }\n    }\n  });\n  return dest;\n}\n\nexport function isNullOrUndefined(value: any) {\n  return value === undefined || value === null;\n}\n\nexport function isUndefined(value: any) {\n  return value === undefined;\n}\n\nexport function isBlankString(value: any) {\n  return value === '';\n}\n\nexport function isFunction(value: any) {\n  return typeof(value) === 'function';\n}\n\nexport function objAndSameType(obj1: any, obj2: any) {\n  return isObject(obj1) && isObject(obj2)\n    && Object.getPrototypeOf(obj1) === Object.getPrototypeOf(obj2)\n    && !(Array.isArray(obj1) || Array.isArray(obj2));\n}\n\nexport function isObject(x: any) {\n  return x != null && typeof x === 'object';\n}\n\nexport function isPromise(obj: any): obj is Promise<any> {\n  return !!obj && typeof obj.then === 'function';\n}\n\nexport function clone(value: any): any {\n  if (\n    !isObject(value)\n    || isObservable(value)\n    || /* instanceof SafeHtmlImpl */ value.changingThisBreaksApplicationSecurity\n    || ['RegExp', 'FileList', 'File', 'Blob'].indexOf(value.constructor.name) !== -1\n  ) {\n    return value;\n  }\n\n  // https://github.com/moment/moment/blob/master/moment.js#L252\n  if (value._isAMomentObject && isFunction(value.clone)) {\n    return value.clone();\n  }\n\n  if (value instanceof AbstractControl) {\n    return null;\n  }\n\n  if (value instanceof Date) {\n    return new Date(value.getTime());\n  }\n\n  if (Array.isArray(value)) {\n    return value.slice(0).map(v => clone(v));\n  }\n\n  // best way to clone a js object maybe\n  // https://stackoverflow.com/questions/41474986/how-to-clone-a-javascript-es6-class-instance\n  const proto = Object.getPrototypeOf(value);\n  let c = Object.create(proto);\n  c = Object.setPrototypeOf(c, proto);\n  // need to make a deep copy so we dont use Object.assign\n  // also Object.assign wont copy property descriptor exactly\n  return Object.keys(value).reduce((newVal, prop) => {\n    const propDesc = Object.getOwnPropertyDescriptor(value, prop);\n    if (propDesc.get) {\n      Object.defineProperty(newVal, prop, propDesc);\n    } else {\n      newVal[prop] = clone(value[prop]);\n    }\n\n    return newVal;\n  }, c);\n}\n\nexport function defineHiddenProp(field: any, prop: string, defaultValue: any) {\n  Object.defineProperty(field, prop, { enumerable: false, writable: true, configurable: true });\n  field[prop] = defaultValue;\n}\n\nexport function wrapProperty<T = any>(\n  o: any,\n  prop: string,\n  setFn: (change: {currentValue: T, previousValue?: T, firstChange: boolean}) => void,\n) {\n  if (!o._observers) {\n    defineHiddenProp(o, '_observers', {});\n  }\n\n  if (!o._observers[prop]) {\n    o._observers[prop] = [];\n  }\n\n  let fns: typeof setFn[] = o._observers[prop];\n  if (fns.indexOf(setFn) === -1) {\n    fns.push(setFn);\n    setFn({ currentValue: o[prop], firstChange: true });\n    if (fns.length === 1) {\n      defineHiddenProp(o, `___$${prop}`, o[prop]);\n      Object.defineProperty(o, prop, {\n        configurable: true,\n        get: () => o[`___$${prop}`],\n        set: currentValue => {\n          if (currentValue !== o[`___$${prop}`]) {\n            const previousValue = o[`___$${prop}`];\n            o[`___$${prop}`] = currentValue;\n            fns.forEach(changeFn => changeFn({ previousValue, currentValue, firstChange: false }));\n          }\n        },\n      });\n    }\n  }\n\n  return () => fns.splice(fns.indexOf(setFn), 1);\n}\n\nexport function reduceFormUpdateValidityCalls(form: any, action: Function) {\n  const updateValidity = form._updateTreeValidity.bind(form);\n\n  let updateValidityArgs = { called: false, emitEvent: false };\n  form._updateTreeValidity = ({ emitEvent } = { emitEvent: true }) => updateValidityArgs = { called: true, emitEvent: emitEvent || updateValidityArgs.emitEvent };\n  action();\n\n  updateValidityArgs.called && updateValidity({ emitEvent: updateValidityArgs.emitEvent });\n  form._updateTreeValidity = updateValidity;\n}\n","import { Injectable, InjectionToken, ComponentRef } from '@angular/core';\nimport { ValidationErrors, AbstractControl } from '@angular/forms';\nimport { FieldType } from './../templates/field.type';\nimport { reverseDeepMerge, defineHiddenProp } from './../utils';\nimport { FormlyFieldConfig, FormlyFieldConfigCache } from '../components/formly.field.config';\nimport { Observable } from 'rxjs';\n\nexport const FORMLY_CONFIG = new InjectionToken<FormlyConfig>('FORMLY_CONFIG');\n\n/** @experimental */\nexport interface FormlyExtension {\n  prePopulate?(field: FormlyFieldConfig): void;\n  onPopulate?(field: FormlyFieldConfig): void;\n  postPopulate?(field: FormlyFieldConfig): void;\n}\n\n/**\n * Maintains list of formly field directive types. This can be used to register new field templates.\n */\n@Injectable({ providedIn: 'root' })\nexport class FormlyConfig {\n  types: {[name: string]: TypeOption} = {};\n  validators: { [name: string]: ValidatorOption } = {};\n  wrappers: { [name: string]: WrapperOption } = {};\n  messages: { [name: string]: ValidationMessageOption['message'] } = {};\n  templateManipulators: {\n    preWrapper: ManipulatorWrapper[];\n    postWrapper: ManipulatorWrapper[];\n  } = {\n    preWrapper: [],\n    postWrapper: [],\n  };\n  extras: ConfigOption['extras'] = {\n    checkExpressionOn: 'changeDetectionCheck',\n    lazyRender: false,\n    showError: function(field: FieldType) {\n      return field.formControl && field.formControl.invalid && (field.formControl.touched || (field.options.parentForm && field.options.parentForm.submitted) || !!(field.field.validation && field.field.validation.show));\n    },\n  };\n  extensions: { [name: string]: FormlyExtension } = {};\n\n  addConfig(config: ConfigOption) {\n    if (config.types) {\n      config.types.forEach(type => this.setType(type));\n    }\n    if (config.validators) {\n      config.validators.forEach(validator => this.setValidator(validator));\n    }\n    if (config.wrappers) {\n      config.wrappers.forEach(wrapper => this.setWrapper(wrapper));\n    }\n    if (config.manipulators) {\n      console.warn(`NgxFormly: passing 'manipulators' config is deprecated, use custom extension instead.`);\n      config.manipulators.forEach(manipulator => this.setManipulator(manipulator));\n    }\n    if (config.validationMessages) {\n      config.validationMessages.forEach(validation => this.addValidatorMessage(validation.name, validation.message));\n    }\n    if (config.extensions) {\n      config.extensions.forEach(c => this.extensions[c.name] = c.extension);\n    }\n    if (config.extras) {\n      this.extras = { ...this.extras, ...config.extras };\n    }\n  }\n\n  setType(options: TypeOption | TypeOption[]) {\n    if (Array.isArray(options)) {\n      options.forEach((option) => this.setType(option));\n    } else {\n      if (!this.types[options.name]) {\n        this.types[options.name] = <TypeOption>{ name: options.name };\n      }\n\n      ['component', 'extends', 'defaultOptions', 'wrappers'].forEach(prop => {\n        if (options.hasOwnProperty(prop)) {\n          this.types[options.name][prop] = options[prop];\n        }\n      });\n    }\n  }\n\n  getType(name: string): TypeOption {\n    if (!this.types[name]) {\n      throw new Error(`[Formly Error] The type \"${name}\" could not be found. Please make sure that is registered through the FormlyModule declaration.`);\n    }\n\n    this.mergeExtendedType(name);\n\n    return this.types[name];\n  }\n\n  getMergedField(field: FormlyFieldConfig = {}): any {\n    const type = this.getType(field.type);\n    if (type.defaultOptions) {\n      reverseDeepMerge(field, type.defaultOptions);\n    }\n\n    const extendDefaults = type.extends && this.getType(type.extends).defaultOptions;\n    if (extendDefaults) {\n      reverseDeepMerge(field, extendDefaults);\n    }\n\n    if (field && field.optionsTypes) {\n      field.optionsTypes.forEach(option => {\n        const defaultOptions = this.getType(option).defaultOptions;\n        if (defaultOptions) {\n          reverseDeepMerge(field, defaultOptions);\n        }\n      });\n    }\n\n    const componentRef = this.resolveFieldTypeRef(field);\n    if (componentRef && componentRef.instance && componentRef.instance.defaultOptions) {\n      reverseDeepMerge(field, componentRef.instance.defaultOptions);\n    }\n\n    if (!field.wrappers && type.wrappers) {\n      field.wrappers = [...type.wrappers];\n    }\n  }\n\n  /** @internal */\n  resolveFieldTypeRef(field: FormlyFieldConfigCache = {}): ComponentRef<FieldType> {\n    if (!field.type) {\n      return null;\n    }\n\n    const type = this.getType(field.type);\n    if (!type.component || type['_componentRef']) {\n      return type['_componentRef'];\n    }\n\n    const { _resolver, _injector } = field.parent.options;\n    const componentRef = _resolver\n      .resolveComponentFactory<FieldType>(type.component)\n      .create(_injector);\n\n    defineHiddenProp(type, '_componentRef', componentRef);\n    componentRef.destroy();\n\n    return type['_componentRef'];\n  }\n\n  setWrapper(options: WrapperOption) {\n    this.wrappers[options.name] = options;\n    if (options.types) {\n      options.types.forEach((type) => {\n        this.setTypeWrapper(type, options.name);\n      });\n    }\n  }\n\n  getWrapper(name: string): WrapperOption {\n    if (!this.wrappers[name]) {\n      throw new Error(`[Formly Error] The wrapper \"${name}\" could not be found. Please make sure that is registered through the FormlyModule declaration.`);\n    }\n\n    return this.wrappers[name];\n  }\n\n  setTypeWrapper(type: string, name: string) {\n    if (!this.types[type]) {\n      this.types[type] = <TypeOption>{};\n    }\n    if (!this.types[type].wrappers) {\n      this.types[type].wrappers = [];\n    }\n    if (this.types[type].wrappers.indexOf(name) === -1) {\n      this.types[type].wrappers.push(name);\n    }\n  }\n\n  setValidator(options: ValidatorOption) {\n    this.validators[options.name] = options;\n  }\n\n  getValidator(name: string): ValidatorOption {\n    if (!this.validators[name]) {\n      throw new Error(`[Formly Error] The validator \"${name}\" could not be found. Please make sure that is registered through the FormlyModule declaration.`);\n    }\n\n    return this.validators[name];\n  }\n\n  addValidatorMessage(name: string, message: ValidationMessageOption['message']) {\n    this.messages[name] = message;\n  }\n\n  getValidatorMessage(name: string) {\n    return this.messages[name];\n  }\n\n  setManipulator(manipulator: ManipulatorOption) {\n    new manipulator.class()[manipulator.method](this);\n  }\n\n  private mergeExtendedType(name: string) {\n    if (!this.types[name].extends) {\n      return;\n    }\n\n    const extendedType = this.getType(this.types[name].extends);\n    if (!this.types[name].component) {\n      this.types[name].component = extendedType.component;\n    }\n\n    if (!this.types[name].wrappers) {\n      this.types[name].wrappers = extendedType.wrappers;\n    }\n  }\n}\nexport interface TypeOption {\n  name: string;\n  component?: any;\n  wrappers?: string[];\n  extends?: string;\n  defaultOptions?: FormlyFieldConfig;\n}\n\nexport interface WrapperOption {\n  name: string;\n  component: any;\n  types?: string[];\n}\n\nexport interface FieldValidatorFn {\n  (c: AbstractControl, field: FormlyFieldConfig, options?: { [id: string]: any; }): ValidationErrors | null;\n}\n\nexport interface ValidatorOption {\n  name: string;\n  validation: FieldValidatorFn;\n  options?: { [id: string]: any };\n}\n\nexport interface ExtensionOption {\n  name: string;\n  extension: FormlyExtension;\n}\n\nexport interface ValidationMessageOption {\n  name: string;\n  message: string | ((error: any, field: FormlyFieldConfig) => string | Observable<string>);\n}\n\nexport interface ManipulatorOption {\n  class?: { new (): any };\n  method?: string;\n}\n\nexport interface ManipulatorWrapper {\n  (f: FormlyFieldConfig): string;\n}\n\nexport interface TemplateManipulators {\n  preWrapper?: ManipulatorWrapper[];\n  postWrapper?: ManipulatorWrapper[];\n}\n\nexport interface ConfigOption {\n  types?: TypeOption[];\n  wrappers?: WrapperOption[];\n  validators?: ValidatorOption[];\n  extensions?: ExtensionOption[];\n  validationMessages?: ValidationMessageOption[];\n\n  /** @deprecated use `extensions` instead */\n  manipulators?: ManipulatorOption[];\n  extras?: {\n    /** @deprecated use `extensions` instead */\n    fieldTransform?: any,\n    immutable?: boolean,\n    showError?: (field: FieldType) => boolean;\n\n    /**\n     * Defines the option which formly rely on to check field expression properties.\n     * - `modelChange`: perform a check when the value of the form control changes (Will be set by default in the next major version).\n     * - `changeDetectionCheck`: triggers an immediate check when `ngDoCheck` is called.\n     *\n     * Defaults to `changeDetectionCheck`.\n     */\n    checkExpressionOn?: 'modelChange' | 'changeDetectionCheck',\n\n    /**\n     * Whether to lazily render field components or not when marked as hidden.\n     * - `true`: lazily render field components (Will be set by default in the next major version).\n     * - `false`: render field components and use CSS to control their visibility.\n     *\n     * Defaults to `false`.\n     */\n    lazyRender?: boolean,\n\n    /**\n     * When true, reset the value of hidden fields.\n     *\n     * Defaults to `false`.\n     */\n    resetFieldOnHide?: boolean,\n  };\n}\n","import { Injectable, ComponentFactoryResolver, Injector, ChangeDetectorRef } from '@angular/core';\nimport { FormGroup, FormArray } from '@angular/forms';\nimport { FormlyConfig } from './formly.config';\nimport { FormlyFieldConfig, FormlyFormOptions, FormlyFieldConfigCache, FormlyValueChangeEvent, FormlyFormOptionsCache } from '../components/formly.field.config';\nimport { Subject } from 'rxjs';\nimport { defineHiddenProp, reduceFormUpdateValidityCalls } from '../utils';\n\n@Injectable({ providedIn: 'root' })\nexport class FormlyFormBuilder {\n  constructor(\n    private formlyConfig: FormlyConfig,\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private injector: Injector,\n  ) {}\n\n  buildForm(formControl: FormGroup | FormArray, fieldGroup: FormlyFieldConfig[] = [], model: any, options: FormlyFormOptions) {\n    if (!this.formlyConfig.extensions.core) {\n      throw new Error('NgxFormly: missing `forRoot()` call. use `forRoot()` when registering the `FormlyModule`.');\n    }\n\n    const field = { fieldGroup, model, formControl, options: this._setOptions(options) };\n    reduceFormUpdateValidityCalls(formControl, () => this._buildForm(field));\n    field.options._checkField(field, true);\n  }\n\n  private _buildForm(field: FormlyFieldConfigCache) {\n    this.getExtensions().forEach(extension => extension.prePopulate && extension.prePopulate(field));\n    this.getExtensions().forEach(extension => extension.onPopulate && extension.onPopulate(field));\n\n    if (field.fieldGroup) {\n      field.fieldGroup.forEach((f) => this._buildForm(f));\n    }\n\n    this.getExtensions().forEach(extension => extension.postPopulate && extension.postPopulate(field));\n  }\n\n  private getExtensions() {\n    return Object.keys(this.formlyConfig.extensions).map(name => this.formlyConfig.extensions[name]);\n  }\n\n  private _setOptions(options: FormlyFormOptionsCache) {\n    options = options || {};\n    options.formState = options.formState || {};\n\n    if (!options.showError) {\n      options.showError = this.formlyConfig.extras.showError;\n    }\n\n    if (!options.fieldChanges) {\n      defineHiddenProp(options, 'fieldChanges', new Subject<FormlyValueChangeEvent>());\n    }\n\n    if (!options._resolver) {\n      defineHiddenProp(options, '_resolver', this.componentFactoryResolver);\n    }\n\n    if (!options._injector) {\n      defineHiddenProp(options, '_injector', this.injector);\n    }\n\n    if (!options._hiddenFieldsForCheck) {\n      options._hiddenFieldsForCheck = [];\n    }\n\n    if (!options._markForCheck) {\n      options._markForCheck = (field) => {\n        if (field._componentRefs) {\n          field._componentRefs.forEach(ref => {\n            // NOTE: we cannot use ref.changeDetectorRef, see https://github.com/ngx-formly/ngx-formly/issues/2191\n            const changeDetectorRef = ref.injector.get(ChangeDetectorRef);\n            changeDetectorRef.markForCheck();\n          });\n        }\n\n        if (field.fieldGroup) {\n          field.fieldGroup.forEach(f => options._markForCheck(f));\n        }\n      };\n    }\n\n    if (!options._buildField) {\n      options._buildField = (field: FormlyFieldConfig) => {\n        this.buildForm(field.form, field.fieldGroup, field.model, field.options);\n        return field;\n      };\n    }\n\n    return options;\n  }\n}\n","import { FormArray, FormGroup, FormControl, AbstractControl } from '@angular/forms';\nimport { FormlyFieldConfig } from '../../core';\nimport { getKeyPath, getFieldValue, isNullOrUndefined, defineHiddenProp, wrapProperty } from '../../utils';\nimport { FormlyFieldConfigCache } from '../../components/formly.field.config';\nimport { EventEmitter } from '@angular/core';\n\nexport function unregisterControl(field: FormlyFieldConfig, emitEvent = false) {\n  const form = field.formControl.parent as FormArray | FormGroup;\n  if (!form) {\n    return;\n  }\n\n  const control = field.formControl;\n  const opts = { emitEvent };\n  if (form instanceof FormArray) {\n    const key = form.controls.findIndex(c => c === control);\n    if (key !== -1) {\n      updateControl(form, opts, () => form.removeAt(key));\n    }\n  } else if (form instanceof FormGroup) {\n    const paths = getKeyPath(field);\n    const key = paths[paths.length - 1];\n    if (form.get([key]) === control) {\n      updateControl(form, opts, () => form.removeControl(key));\n    }\n  }\n\n  control.setParent(null);\n}\n\nexport function findControl(field: FormlyFieldConfig): AbstractControl {\n  if (field.formControl) {\n    return field.formControl;\n  }\n\n  if (field['shareFormControl'] === false) {\n    return null;\n  }\n\n  const form = field.parent.formControl as FormGroup;\n\n  return form ? form.get(getKeyPath(field)) : null;\n}\n\nexport function registerControl(field: FormlyFieldConfigCache, control?: any, emitEvent = false) {\n  control = control || field.formControl;\n  if (!control['_fields']) {\n    defineHiddenProp(control, '_fields', []);\n  }\n  if (control['_fields'].indexOf(field) === -1) {\n    control['_fields'].push(field);\n  }\n\n  if (!field.formControl && control) {\n    defineHiddenProp(field, 'formControl', control);\n\n    field.templateOptions.disabled = !!field.templateOptions.disabled;\n    wrapProperty(field.templateOptions, 'disabled', ({ firstChange, currentValue }) => {\n      if (!firstChange) {\n        currentValue ? field.formControl.disable() : field.formControl.enable();\n      }\n    });\n    if (control.registerOnDisabledChange) {\n      control.registerOnDisabledChange(\n        (value: boolean) => {\n          field.templateOptions['___$disabled'] = value;\n          // TODO remove in V6\n          field.options && field.options._markForCheck(field);\n        },\n      );\n    }\n  }\n\n  let parent = field.parent.formControl as FormGroup;\n  if (!parent || !field.key) {\n    return;\n  }\n\n  const paths = getKeyPath(field);\n  const value = getFieldValue(field);\n  if (\n    !(isNullOrUndefined(control.value) && isNullOrUndefined(value))\n    && control.value !== value\n    && control instanceof FormControl\n  ) {\n    control.patchValue(value);\n  }\n\n  for (let i = 0; i < (paths.length - 1); i++) {\n    const path = paths[i];\n    if (!parent.get([path])) {\n      updateControl(\n        parent,\n        { emitEvent },\n        () => parent.setControl(path, new FormGroup({})),\n      );\n    }\n\n    parent = <FormGroup> parent.get([path]);\n  }\n\n  const key = paths[paths.length - 1];\n  if (!field._hide && parent.get([key]) !== control) {\n    updateControl(\n      parent,\n      { emitEvent },\n      () => parent.setControl(key, control),\n    );\n  }\n}\n\nexport function updateValidity(c: AbstractControl) {\n  const status = c.status;\n  c.updateValueAndValidity({ emitEvent: false });\n  if (status !== c.status) {\n    (c.statusChanges as EventEmitter<string>).emit(c.status);\n  }\n}\n\nfunction updateControl(form: FormGroup|FormArray, opts: { emitEvent: boolean }, action: Function) {\n  /**\n   *  workaround for https://github.com/angular/angular/issues/27679\n   */\n  if (form instanceof FormGroup && !form['__patchForEachChild']) {\n    defineHiddenProp(form, '__patchForEachChild', true);\n    (form as any)._forEachChild = (cb: Function) => {\n      Object\n        .keys(form.controls)\n        .forEach(k => form.controls[k] && cb(form.controls[k], k));\n    };\n  }\n\n  /**\n   * workaround for https://github.com/angular/angular/issues/20439\n   */\n  const updateValueAndValidity = form.updateValueAndValidity.bind(form);\n  if (opts.emitEvent === false) {\n    form.updateValueAndValidity = (opts) => {\n      updateValueAndValidity({ ...(opts || {}), emitEvent: false });\n    };\n  }\n\n  action();\n\n  if (opts.emitEvent === false) {\n    form.updateValueAndValidity = updateValueAndValidity;\n  }\n}\n\nexport function clearControl(form: AbstractControl) {\n  form['_fields'] && delete form['_fields'];\n  form.setValidators(null);\n  form.setAsyncValidators(null);\n\n  if (form instanceof FormGroup || form instanceof FormArray) {\n    Object.keys(form.controls)\n      .forEach((k) => clearControl(form.controls[k]));\n  }\n}\n","import { Component, DoCheck, OnChanges, Input, SimpleChanges, Optional, EventEmitter, Output, OnDestroy, Attribute, ViewChild, ElementRef, NgZone } from '@angular/core';\nimport { FormGroup, FormArray, FormGroupDirective, FormControl } from '@angular/forms';\nimport { FormlyFieldConfig, FormlyFormOptions, FormlyFormOptionsCache } from './formly.field.config';\nimport { FormlyFormBuilder } from '../services/formly.form.builder';\nimport { FormlyConfig } from '../services/formly.config';\nimport { assignFieldValue, isNullOrUndefined, wrapProperty, clone, defineHiddenProp, getKeyPath, isObject } from '../utils';\nimport { Subscription, Subject } from 'rxjs';\nimport { debounceTime, switchMap, distinctUntilChanged, take } from 'rxjs/operators';\nimport { clearControl } from '../extensions/field-form/utils';\n\n@Component({\n  selector: 'formly-form',\n  template: `\n    <formly-field *ngFor=\"let field of fields\"\n      hide-deprecation\n      [form]=\"field.form\"\n      [options]=\"field.options\"\n      [model]=\"field.model\"\n      [field]=\"field\">\n    </formly-field>\n    <ng-container #content>\n      <ng-content></ng-content>\n    </ng-container>\n  `,\n  providers: [FormlyFormBuilder],\n})\nexport class FormlyForm implements DoCheck, OnChanges, OnDestroy {\n  @Input() form: FormGroup | FormArray;\n\n  @Input()\n  set model(model: any) { this._model = this.immutable ? clone(model) : model; }\n  get model() {\n    if (!this._model) {\n      this._model = {};\n    }\n\n    return this._model;\n  }\n\n  @Input()\n  set fields(fields: FormlyFieldConfig[]) { this._fields = this.immutable ? clone(fields) : fields; }\n  get fields() { return this._fields || []; }\n\n  @Input()\n  set options(options: FormlyFormOptions) { this._options = this.immutable ? clone(options) : options; }\n  get options() { return this._options; }\n\n  @Output() modelChange = new EventEmitter<any>();\n  @ViewChild('content') set content(content: ElementRef<HTMLElement>) {\n    if (content && content.nativeElement.nextSibling) {\n      console.warn(`NgxFormly: content projection for 'formly-form' component is deprecated since v5.5, you should avoid passing content inside the 'formly-form' tag.`);\n    }\n  }\n\n  private immutable = false;\n  private _model: any;\n  private _modelChangeValue: any = {};\n  private _fields: FormlyFieldConfig[];\n  private _options: FormlyFormOptions;\n  private modelChangeSubs: Subscription[] = [];\n  private modelChange$ = new Subject<void>();\n  private modelChangeSub = this.modelChange$.pipe(\n    switchMap(() => this.ngZone.onStable.asObservable().pipe(take(1))),\n  ).subscribe(() => this.ngZone.runGuarded(() => {\n    // runGuarded is used to keep the expression changes in-sync\n    // https://github.com/ngx-formly/ngx-formly/issues/2095\n    this.checkExpressionChange();\n    this.modelChange.emit(this._modelChangeValue = clone(this.model));\n  }));\n\n  constructor(\n    private formlyBuilder: FormlyFormBuilder,\n    private formlyConfig: FormlyConfig,\n    private ngZone: NgZone,\n    // tslint:disable-next-line\n    @Attribute('immutable') immutable,\n    @Optional() private parentFormGroup: FormGroupDirective,\n  ) {\n    if (immutable !== null) {\n      console.warn(`NgxFormly: passing 'immutable' attribute to 'formly-form' component is deprecated since v5.5, enable immutable mode through NgModule declaration instead.`);\n    }\n\n    this.immutable = (immutable !== null) || !!formlyConfig.extras.immutable;\n  }\n\n  ngDoCheck() {\n    if (this.formlyConfig.extras.checkExpressionOn === 'changeDetectionCheck') {\n      this.checkExpressionChange();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    // https://github.com/ngx-formly/ngx-formly/issues/2294\n    if (changes.model && this.field) {\n      this.field.model = this.model;\n    }\n\n    if (changes.fields && this.form) {\n      clearControl(this.form);\n    }\n\n    if (changes.fields || changes.form || (changes.model && this._modelChangeValue !== changes.model.currentValue)) {\n      this.form = this.form || (new FormGroup({}));\n      this.setOptions();\n      this.options.updateInitialValue();\n      this.clearModelSubscriptions();\n      this.formlyBuilder.buildForm(this.form, this.fields, this.model, this.options);\n      this.trackModelChanges(this.fields);\n    }\n  }\n\n  ngOnDestroy() {\n    this.modelChangeSub.unsubscribe();\n    this.clearModelSubscriptions();\n  }\n\n  changeModel({ key, value, field }: { key: string, value: any, field: FormlyFieldConfig }) {\n    assignFieldValue(field, value);\n    this.modelChange$.next();\n  }\n\n  setOptions() {\n    if (!this.options) {\n      this.options = {};\n    }\n\n    if (!this.options.resetModel) {\n      this.options.resetModel = (model ?: any) => {\n        model = clone(isNullOrUndefined(model) ? (<FormlyFormOptionsCache> this.options)._initialModel : model);\n        if (this.model) {\n          Object.keys(this.model).forEach(k => delete this.model[k]);\n          Object.assign(this.model, model || {});\n        }\n\n        (<FormlyFormOptionsCache> this.options)._buildForm();\n\n        // we should call `NgForm::resetForm` to ensure changing `submitted` state after resetting form\n        // but only when the current component is a root one.\n        if (this.options.parentForm && this.options.parentForm.control === this.form) {\n          this.options.parentForm.resetForm(this.model);\n        } else {\n          this.form.reset(this.model);\n        }\n      };\n    }\n\n    if (!this.options.parentForm && this.parentFormGroup) {\n      defineHiddenProp(this.options, 'parentForm', this.parentFormGroup);\n      wrapProperty(this.options.parentForm, 'submitted', ({ firstChange }) => {\n        if (!firstChange) {\n          this.checkExpressionChange();\n          (<FormlyFormOptionsCache> this.options)._markForCheck({\n            fieldGroup: this.fields,\n            model: this.model,\n            formControl: this.form,\n            options: this.options,\n          });\n        }\n      });\n    }\n\n    if (!this.options.updateInitialValue) {\n      this.options.updateInitialValue = () => (<FormlyFormOptionsCache> this.options)._initialModel = clone(this.model);\n    }\n\n    if (!(<FormlyFormOptionsCache> this.options)._buildForm) {\n      (<FormlyFormOptionsCache> this.options)._buildForm = (emitModelChange = false) => {\n        this.clearModelSubscriptions();\n        this.formlyBuilder.buildForm(this.form, this.fields, this.model, this.options);\n        this.trackModelChanges(this.fields);\n\n        if (emitModelChange) {\n          this.modelChange.emit(this._modelChangeValue = clone(this.model));\n        }\n      };\n    }\n  }\n\n  private checkExpressionChange() {\n    if (this.options && (<FormlyFormOptionsCache> this.options)._checkField) {\n      (<FormlyFormOptionsCache> this.options)._checkField({\n        fieldGroup: this.fields,\n        model: this.model,\n        formControl: this.form,\n        options: this.options,\n      });\n    }\n  }\n\n  private trackModelChanges(fields: FormlyFieldConfig[], rootKey: string[] = []) {\n    fields.forEach(field => {\n      if (field.key && !field.fieldGroup) {\n        const control = field.formControl;\n        let valueChanges = control.valueChanges.pipe(\n          distinctUntilChanged((x, y) => {\n            if (x !== y || Array.isArray(x) || isObject(x)) {\n              return false;\n            }\n\n            return true;\n          }),\n        );\n\n        const { updateOn, debounce } = field.modelOptions;\n        if ((!updateOn || updateOn === 'change') && debounce && debounce.default > 0) {\n          valueChanges = control.valueChanges.pipe(debounceTime(debounce.default));\n        }\n\n        this.modelChangeSubs.push(valueChanges.subscribe((value) => {\n          // workaround for https://github.com/angular/angular/issues/13792\n          if (control instanceof FormControl && control['_fields'] && control['_fields'].length > 1) {\n            control.patchValue(value, { emitEvent: false, onlySelf: true });\n          }\n\n          if (field.parsers && field.parsers.length > 0) {\n            field.parsers.forEach(parserFn => value = parserFn(value));\n          }\n\n          this.changeModel({ key: [...rootKey, ...getKeyPath(field)].join('.'), value, field });\n        }));\n\n        // workaround for v5 (https://github.com/ngx-formly/ngx-formly/issues/2061)\n        const observers = control.valueChanges['observers'];\n        if (observers && observers.length > 1) {\n          observers.unshift(observers.pop());\n        }\n      }\n\n      if (field.fieldGroup && field.fieldGroup.length > 0) {\n        this.trackModelChanges(field.fieldGroup, field.key ? [...rootKey, ...getKeyPath(field)] : rootKey);\n      }\n    });\n  }\n\n  private clearModelSubscriptions() {\n    this.modelChangeSubs.forEach(sub => sub.unsubscribe());\n    this.modelChangeSubs = [];\n  }\n\n  private get field(): any {\n    return this.fields && this.fields[0] && this.fields[0].parent;\n  }\n}\n","import {\n  Component, EventEmitter, Input, Output,\n  ViewContainerRef, ViewChild, ComponentRef, SimpleChanges, Attribute, ComponentFactoryResolver,\n  OnInit, OnChanges, OnDestroy, DoCheck, AfterContentInit, AfterContentChecked, AfterViewInit, AfterViewChecked, Renderer2, ElementRef,\n} from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { FormlyConfig } from '../services/formly.config';\nimport { FormlyFieldConfig, FormlyFormOptions, FormlyFieldConfigCache } from './formly.field.config';\nimport { defineHiddenProp, wrapProperty } from '../utils';\nimport { FieldWrapper } from '../templates/field.wrapper';\nimport { FieldType } from '../templates/field.type';\nimport { isObservable } from 'rxjs';\n\n@Component({\n  selector: 'formly-field',\n  template: `<ng-template #container></ng-template>`,\n})\nexport class FormlyField implements OnInit, OnChanges, DoCheck, AfterContentInit, AfterContentChecked, AfterViewInit, AfterViewChecked, OnDestroy {\n  @Input() field: FormlyFieldConfig;\n\n  warnDeprecation = false;\n\n  @Input() set model(m: any) {\n    this.warnDeprecation && console.warn(`NgxFormly: passing 'model' input to '${this.constructor.name}' component is not required anymore, you may remove it!`);\n  }\n\n  @Input() set form(form: FormGroup) {\n    this.warnDeprecation && console.warn(`NgxFormly: passing 'form' input to '${this.constructor.name}' component is not required anymore, you may remove it!`);\n  }\n\n  @Input() set options(options: FormlyFormOptions) {\n    this.warnDeprecation && console.warn(`NgxFormly: passing 'options' input to '${this.constructor.name}' component is not required anymore, you may remove it!`);\n  }\n\n  @Output() modelChange: EventEmitter<any> = new EventEmitter();\n  // TODO: remove `any`, once dropping angular `V7` support.\n  @ViewChild('container', <any> {read: ViewContainerRef, static: true }) containerRef: ViewContainerRef;\n  private hostObservers: Function[] = [];\n  private componentRefs: any[] = [];\n  private hooksObservers: Function[] = [];\n\n  constructor(\n    private formlyConfig: FormlyConfig,\n    private renderer: Renderer2,\n    private resolver: ComponentFactoryResolver,\n    private elementRef: ElementRef,\n    // tslint:disable-next-line\n    @Attribute('hide-deprecation') hideDeprecation,\n  ) {\n    this.warnDeprecation = hideDeprecation === null;\n  }\n\n  ngAfterContentInit() {\n    this.triggerHook('afterContentInit');\n  }\n\n  ngAfterContentChecked() {\n    this.triggerHook('afterContentChecked');\n  }\n\n  ngAfterViewInit() {\n    this.triggerHook('afterViewInit');\n  }\n\n  ngAfterViewChecked() {\n    this.triggerHook('afterViewChecked');\n  }\n\n  ngDoCheck() {\n    this.triggerHook('doCheck');\n  }\n\n  ngOnInit() {\n    this.triggerHook('onInit');\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.triggerHook('onChanges', changes);\n  }\n\n  ngOnDestroy() {\n    this.resetRefs(this.field);\n    this.hostObservers.forEach(unsubscribe => unsubscribe());\n    this.hooksObservers.forEach(unsubscribe => unsubscribe());\n    this.triggerHook('onDestroy');\n  }\n\n  private renderField(containerRef: ViewContainerRef, f: FormlyFieldConfigCache, wrappers: string[] = []) {\n    if (this.containerRef === containerRef) {\n      this.resetRefs(this.field);\n      this.containerRef.clear();\n      wrappers = this.field ? this.field.wrappers : [];\n    }\n\n    if (wrappers && wrappers.length > 0) {\n      const [wrapper, ...wps] = wrappers;\n      const { component } = this.formlyConfig.getWrapper(wrapper);\n\n      const ref = containerRef.createComponent<FieldWrapper>(this.resolver.resolveComponentFactory(component));\n      this.attachComponentRef(ref, f);\n      wrapProperty<ViewContainerRef>(ref.instance, 'fieldComponent', ({ firstChange, previousValue, currentValue }) => {\n        if (currentValue) {\n          const viewRef = previousValue ? previousValue.detach() : null;\n          if (viewRef && !viewRef.destroyed) {\n            currentValue.insert(viewRef);\n          } else {\n            this.renderField(currentValue, f, wps);\n          }\n\n          !firstChange && ref.changeDetectorRef.detectChanges();\n        }\n      });\n    } else if (f && f.type) {\n      const { component } = this.formlyConfig.getType(f.type);\n      const ref = containerRef.createComponent<FieldWrapper>(this.resolver.resolveComponentFactory(component));\n      this.attachComponentRef(ref, f);\n    }\n  }\n\n  private triggerHook(name: string, changes?: SimpleChanges) {\n    if (this.field && this.field.hooks && this.field.hooks[name]) {\n      if (!changes || changes.field) {\n        const r = this.field.hooks[name](this.field);\n        if (isObservable(r) && ['onInit', 'afterContentInit', 'afterViewInit'].indexOf(name) !== -1) {\n          const sub = r.subscribe();\n          this.hooksObservers.push(() => sub.unsubscribe());\n        }\n      }\n    }\n\n    if (this.field && this.field.lifecycle && this.field.lifecycle[name]) {\n      this.field.lifecycle[name](\n        this.field.form,\n        this.field,\n        this.field.model,\n        this.field.options,\n      );\n    }\n\n    if (name === 'onChanges' && changes.field) {\n      this.resetRefs(changes.field.previousValue);\n      this.render();\n    }\n  }\n\n  private attachComponentRef<T extends FieldType>(ref: ComponentRef<T>, field: FormlyFieldConfigCache) {\n    this.componentRefs.push(ref);\n    field._componentRefs.push(ref);\n    Object.assign(ref.instance, { field });\n  }\n\n  private render() {\n    if (!this.field) {\n      return;\n    }\n\n    this.hostObservers.forEach(unsubscribe => unsubscribe());\n    this.hostObservers = [\n      wrapProperty(this.field, 'hide', ({ firstChange, currentValue }) => {\n        if (!this.formlyConfig.extras.lazyRender) {\n          firstChange && this.renderField(this.containerRef, this.field);\n          if (!firstChange || (firstChange && currentValue)) {\n            this.renderer.setStyle(this.elementRef.nativeElement, 'display', currentValue ? 'none' : '');\n          }\n        } else {\n          if (currentValue) {\n            this.containerRef.clear();\n          } else {\n            this.renderField(this.containerRef, this.field);\n          }\n        }\n      }),\n      wrapProperty(this.field, 'className', ({ firstChange, currentValue }) => {\n        if (!firstChange || (firstChange && currentValue)) {\n          this.renderer.setAttribute(this.elementRef.nativeElement, 'class', currentValue);\n        }\n      }),\n    ];\n  }\n\n  private resetRefs(field: FormlyFieldConfigCache) {\n    if (field) {\n      if (field._componentRefs) {\n        field._componentRefs = field._componentRefs.filter(ref => this.componentRefs.indexOf(ref) === -1);\n      } else {\n        defineHiddenProp(this.field, '_componentRefs', []);\n      }\n    }\n\n    this.componentRefs = [];\n  }\n}\n","import { Directive, ElementRef, Input, OnChanges, SimpleChanges, Renderer2, DoCheck, Inject, OnDestroy } from '@angular/core';\nimport { FormlyFieldConfig, FormlyTemplateOptions } from './formly.field.config';\nimport { wrapProperty, defineHiddenProp, FORMLY_VALIDATORS } from '../utils';\nimport { DOCUMENT } from '@angular/common';\n\n@Directive({\n  selector: '[formlyAttributes]',\n  host: {\n    '(focus)': 'onFocus($event)',\n    '(blur)': 'onBlur($event)',\n    '(change)': 'onChange($event)',\n  },\n})\nexport class FormlyAttributes implements OnChanges, DoCheck, OnDestroy {\n  @Input('formlyAttributes') field: FormlyFieldConfig;\n  @Input() id: string;\n\n  private document: Document;\n  private uiAttributesCache: any = {};\n  private uiAttributes = [\n    ...FORMLY_VALIDATORS,\n    'tabindex',\n    'placeholder',\n    'readonly',\n    'disabled',\n    'step',\n  ];\n\n  /**\n   * HostBinding doesn't register listeners conditionally which may produce some perf issues.\n   *\n   * Formly issue: https://github.com/ngx-formly/ngx-formly/issues/1991\n   */\n  private uiEvents = {\n    listeners: [],\n    events: [\n      'click',\n      'keyup',\n      'keydown',\n      'keypress',\n    ],\n  };\n\n  get to(): FormlyTemplateOptions { return this.field.templateOptions || {}; }\n\n  private get fieldAttrElements(): ElementRef[] { return (this.field && this.field['_elementRefs']) || []; }\n\n  constructor(\n    private renderer: Renderer2,\n    private elementRef: ElementRef,\n    @Inject(DOCUMENT) _document: any,\n  ) {\n    this.document = _document;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.field) {\n      this.field.name && this.setAttribute('name', this.field.name);\n      this.uiEvents.listeners.forEach(listener => listener());\n      this.uiEvents.events.forEach(eventName => {\n        if (this.to && this.to[eventName]) {\n          this.uiEvents.listeners.push(\n            this.renderer.listen(\n              this.elementRef.nativeElement,\n              eventName,\n              (e) => this.to[eventName](this.field, e),\n            ),\n          );\n        }\n      });\n\n      if (this.to && this.to.attributes) {\n        wrapProperty(this.to, 'attributes', ({ currentValue, previousValue }) => {\n          if (previousValue) {\n            Object.keys(previousValue).forEach(attr => this.removeAttribute(attr));\n          }\n\n          if (currentValue) {\n            Object.keys(currentValue).forEach(attr => this.setAttribute(attr, currentValue[attr]));\n          }\n        });\n      }\n\n      this.detachElementRef(changes.field.previousValue);\n      this.attachElementRef(changes.field.currentValue);\n      if (this.fieldAttrElements.length === 1) {\n        !this.id && this.field.id && this.setAttribute('id', this.field.id);\n        wrapProperty(this.field, 'focus', ({ currentValue }) => {\n          this.toggleFocus(currentValue);\n        });\n      }\n    }\n\n    if (changes.id) {\n      this.setAttribute('id', this.id);\n    }\n  }\n\n  /**\n   * We need to re-evaluate all the attributes on every change detection cycle, because\n   * by using a HostBinding we run into certain edge cases. This means that whatever logic\n   * is in here has to be super lean or we risk seriously damaging or destroying the performance.\n   *\n   * Formly issue: https://github.com/ngx-formly/ngx-formly/issues/1317\n   * Material issue: https://github.com/angular/components/issues/14024\n   */\n  ngDoCheck() {\n    this.uiAttributes.forEach(attr => {\n      const value = this.to[attr];\n      if (this.uiAttributesCache[attr] !== value) {\n        this.uiAttributesCache[attr] = value;\n        if (value || value === 0) {\n          this.setAttribute(attr, value === true ? attr : `${value}`);\n        } else {\n          this.removeAttribute(attr);\n        }\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.uiEvents.listeners.forEach(listener => listener());\n    this.detachElementRef(this.field);\n  }\n\n  toggleFocus(value: boolean) {\n    const element = this.fieldAttrElements ? this.fieldAttrElements[0] : null;\n    if (!element || !element.nativeElement.focus) {\n      return;\n    }\n\n    const isFocused = !!this.document.activeElement\n      && this.fieldAttrElements\n        .some(({ nativeElement }) => this.document.activeElement === nativeElement || nativeElement.contains(this.document.activeElement));\n\n    if (value && !isFocused) {\n      element.nativeElement.focus();\n    } else if (!value && isFocused) {\n      element.nativeElement.blur();\n    }\n  }\n\n  onFocus($event: any) {\n    this.field['___$focus'] = true;\n    if (this.to.focus) {\n      this.to.focus(this.field, $event);\n    }\n  }\n\n  onBlur($event: any) {\n    this.field['___$focus'] = false;\n    if (this.to.blur) {\n      this.to.blur(this.field, $event);\n    }\n  }\n\n  onChange($event: any) {\n    if (this.to.change) {\n      this.to.change(this.field, $event);\n    }\n\n    if (this.field.formControl) {\n      this.field.formControl.markAsDirty();\n    }\n  }\n\n  private attachElementRef(f: FormlyFieldConfig) {\n    if (!f) {\n      return;\n    }\n\n    if (f['_elementRefs'] && f['_elementRefs'].indexOf(this.elementRef) === -1) {\n      f['_elementRefs'].push(this.elementRef);\n    } else {\n      defineHiddenProp(f, '_elementRefs', [this.elementRef]);\n    }\n  }\n\n  private detachElementRef(f: FormlyFieldConfig) {\n    const index = f && f['_elementRefs'] ? this.fieldAttrElements.indexOf(this.elementRef) : -1;\n    if (index !== -1) {\n      this.field['_elementRefs'].splice(index, 1);\n    }\n  }\n\n  private setAttribute(attr: string, value: string) {\n    this.renderer.setAttribute(this.elementRef.nativeElement, attr, value);\n  }\n\n  private removeAttribute(attr: string) {\n    this.renderer.removeAttribute(this.elementRef.nativeElement, attr);\n  }\n}\n","import { Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { FormlyFieldConfig } from '../components/formly.field.config';\n\nexport abstract class FieldType<F extends FormlyFieldConfig = FormlyFieldConfig> {\n  @Input() field: F;\n  defaultOptions?: F;\n\n  @Input()\n  get model() { return this.field.model; }\n  set model(m: any) { console.warn(`NgxFormly: passing 'model' input to '${this.constructor.name}' component is not required anymore, you may remove it!`); }\n\n  @Input()\n  get form() { return <FormGroup> this.field.parent.formControl; }\n  set form(form) { console.warn(`NgxFormly: passing 'form' input to '${this.constructor.name}' component is not required anymore, you may remove it!`); }\n\n  @Input()\n  get options() { return this.field.options; }\n  set options(options: F['options']) { console.warn(`NgxFormly: passing 'options' input to '${this.constructor.name}' component is not required anymore, you may remove it!`); }\n\n  get key() { return this.field.key; }\n\n  get formControl() { return this.field.formControl; }\n\n  get to() { return this.field.templateOptions || {}; }\n\n  get showError(): boolean { return this.options.showError(this); }\n\n  get id(): string { return this.field.id; }\n\n  get formState() { return this.options.formState || {}; }\n}\n\n/**\n * @deprecated use `FieldType` instead\n */\nexport abstract class Field extends FieldType {\n  constructor() {\n    super();\n    console.warn(`NgxFormly: 'Field' has been renamed to 'FieldType', extend 'FieldType' instead.`);\n  }\n}\n","import { Inject, Optional } from '@angular/core';\nimport { FormArray } from '@angular/forms';\nimport { FieldType } from './field.type';\nimport { clone, isNullOrUndefined, assignFieldValue } from '../utils';\nimport { FormlyFormBuilder } from '../services/formly.form.builder';\nimport { FormlyFieldConfig } from '../components/formly.field.config';\nimport { FORMLY_CONFIG, FormlyExtension } from '../services/formly.config';\nimport { registerControl, unregisterControl, findControl } from '../extensions/field-form/utils';\nimport { Directive } from '@angular/core';\n\n// TODO remove `selector` in V6\n// tslint:disable-next-line\n@Directive({ selector: '[ÉµfieldArray]' })\nexport abstract class FieldArrayType<F extends FormlyFieldConfig = FormlyFieldConfig> extends FieldType<F> implements FormlyExtension {\n  get formControl() {\n    return this.field.formControl as FormArray;\n  }\n\n  defaultOptions: any = {\n    defaultValue: [],\n  };\n\n  constructor(@Inject(FORMLY_CONFIG) @Optional() builder?: FormlyFormBuilder) {\n    super();\n\n    if (builder instanceof FormlyFormBuilder) {\n      console.warn(`NgxFormly: passing 'FormlyFormBuilder' to '${this.constructor.name}' type is not required anymore, you may remove it!`);\n    }\n  }\n\n  onPopulate(field: FormlyFieldConfig) {\n    if (!field.formControl && field.key) {\n      const control = findControl(field);\n      registerControl(field, control ? control : new FormArray([], { updateOn: field.modelOptions.updateOn }));\n    }\n\n    field.fieldGroup = field.fieldGroup || [];\n\n    const length = field.model ? field.model.length : 0;\n    if (field.fieldGroup.length > length) {\n      for (let i = field.fieldGroup.length - 1; i >= length; --i) {\n        unregisterControl(field.fieldGroup[i]);\n        field.fieldGroup.splice(i, 1);\n      }\n    }\n\n    for (let i = field.fieldGroup.length; i < length; i++) {\n      const f = { ...clone(field.fieldArray), key: `${i}` };\n      field.fieldGroup.push(f);\n    }\n  }\n\n  add(i?: number, initialModel?: any, { markAsDirty } = { markAsDirty: true }) {\n    i = isNullOrUndefined(i) ? this.field.fieldGroup.length : i;\n    if (!this.model) {\n      assignFieldValue(this.field, []);\n    }\n\n    this.model.splice(i, 0, initialModel ? clone(initialModel) : undefined);\n\n    (<any> this.options)._buildForm(true);\n    markAsDirty && this.formControl.markAsDirty();\n  }\n\n  remove(i: number, { markAsDirty } = { markAsDirty: true }) {\n    this.model.splice(i, 1);\n    unregisterControl(this.field.fieldGroup[i], true);\n    this.field.fieldGroup.splice(i, 1);\n    this.field.fieldGroup.forEach((f, key) => f.key = `${key}`);\n\n    (<any> this.options)._buildForm(true);\n    markAsDirty && this.formControl.markAsDirty();\n  }\n}\n","import { ViewContainerRef, ViewChild } from '@angular/core';\nimport { FieldType } from './field.type';\nimport { FormlyFieldConfig } from '../components/formly.field.config';\n\nexport abstract class FieldWrapper<F extends FormlyFieldConfig = FormlyFieldConfig> extends FieldType<F> {\n  // TODO: remove `any`, once dropping angular `V7` support.\n  @ViewChild('fieldComponent', <any>{ read: ViewContainerRef, static: false }) fieldComponent: ViewContainerRef;\n}\n","import { Component } from '@angular/core';\nimport { FieldType } from './field.type';\n\n@Component({\n  selector: 'formly-group',\n  template: `\n    <formly-field *ngFor=\"let f of field.fieldGroup\" [field]=\"f\"></formly-field>\n    <ng-content></ng-content>\n  `,\n  host: {\n    '[class]': 'field.fieldGroupClassName || \"\"',\n  },\n})\nexport class FormlyGroup extends FieldType {\n  defaultOptions = {\n    defaultValue: {},\n  };\n}\n","import { Component, Input, ChangeDetectionStrategy, OnChanges } from '@angular/core';\nimport { FormlyConfig, ValidationMessageOption } from '../services/formly.config';\nimport { FormlyFieldConfig } from '../components/formly.field.config';\nimport { isObject } from '../utils';\nimport { Observable, isObservable, of } from 'rxjs';\nimport { startWith, switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'formly-validation-message',\n  template: `{{ errorMessage$ | async }}`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FormlyValidationMessage implements OnChanges {\n  @Input() field: FormlyFieldConfig;\n  errorMessage$: Observable<string>;\n\n  constructor(private formlyConfig: FormlyConfig) {}\n\n  ngOnChanges() {\n    this.errorMessage$ = this.field.formControl.statusChanges.pipe(\n      startWith(null),\n      switchMap(() => isObservable(this.errorMessage)\n        ? this.errorMessage\n        : of(this.errorMessage),\n      ),\n    );\n  }\n\n  get errorMessage() {\n    const fieldForm = this.field.formControl;\n    for (let error in fieldForm.errors) {\n      if (fieldForm.errors.hasOwnProperty(error)) {\n        let message: ValidationMessageOption['message'] = this.formlyConfig.getValidatorMessage(error);\n\n        if (isObject(fieldForm.errors[error])) {\n          if (fieldForm.errors[error].errorPath) {\n            return;\n          }\n\n          if (fieldForm.errors[error].message) {\n            message = fieldForm.errors[error].message;\n          }\n        }\n\n        if (this.field.validation && this.field.validation.messages && this.field.validation.messages[error]) {\n          message = this.field.validation.messages[error];\n        }\n\n        if (this.field.validators && this.field.validators[error] && this.field.validators[error].message) {\n          message = this.field.validators[error].message;\n        }\n\n        if (this.field.asyncValidators && this.field.asyncValidators[error] && this.field.asyncValidators[error].message) {\n          message = this.field.asyncValidators[error].message;\n        }\n\n        if (typeof message === 'function') {\n          return message(fieldForm.errors[error], this.field);\n        }\n\n        return message;\n      }\n    }\n  }\n}\n","import { Component } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { FieldType } from './field.type';\n\n@Component({\n  selector: 'formly-template',\n  template: `<div [innerHtml]=\"template\"></div>`,\n})\nexport class FormlyTemplateType extends FieldType {\n  get template() {\n    if (this.field && (this.field.template !== this.innerHtml.template)) {\n      this.innerHtml = {\n        template: this.field.template,\n        content: this.to.safeHtml\n          ? this.sanitizer.bypassSecurityTrustHtml(this.field.template)\n          : this.field.template,\n      };\n    }\n\n    return this.innerHtml.content;\n  }\n\n  private innerHtml = { content: null, template: null };\n  constructor(private sanitizer: DomSanitizer) {\n    super();\n  }\n}\n","export function evalStringExpression(expression: string, argNames: string[]) {\n  try {\n    if (expression.indexOf('this.field') !== -1) {\n      console.warn(`NgxFormly: using 'this.field' in expressionProperties is deprecated since v5.1, use 'field' instead.`);\n    }\n\n    return Function(...argNames, `return ${expression};`) as any;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport function evalExpressionValueSetter(expression: string, argNames: string[]) {\n  try {\n    return Function(...argNames, `${expression} = expressionValue;`) as (value: any) => void;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport function evalExpression(expression: string | Function | boolean, thisArg: any, argVal: any[]): any {\n  if (expression instanceof Function) {\n    return expression.apply(thisArg, argVal);\n  } else {\n    return expression ? true : false;\n  }\n}\n","import { FormlyFieldConfig, FormlyValueChangeEvent, FormlyFieldConfigCache } from '../../components/formly.field.config';\nimport { isObject, isNullOrUndefined, isUndefined, isFunction, defineHiddenProp, wrapProperty, reduceFormUpdateValidityCalls, getFieldValue, assignFieldValue } from '../../utils';\nimport { evalExpression, evalStringExpression } from './utils';\nimport { Observable, Subscription } from 'rxjs';\nimport { FormlyExtension } from '../../services/formly.config';\nimport { unregisterControl, registerControl, updateValidity } from '../field-form/utils';\nimport { FormArray } from '@angular/forms';\n\n/** @experimental */\nexport class FieldExpressionExtension implements FormlyExtension {\n  prePopulate(field: FormlyFieldConfigCache) {\n    if (field.parent || field.options._checkField) {\n      return;\n    }\n\n    let checkLocked = false;\n    field.options._checkField = (f, ignoreCache) => {\n      if (!checkLocked) {\n        checkLocked = true;\n        reduceFormUpdateValidityCalls(\n          f.formControl,\n          () => this.checkField(f, ignoreCache),\n        );\n        checkLocked = false;\n      }\n    };\n  }\n\n  postPopulate(field: FormlyFieldConfigCache) {\n    if (!field.parent || field._expressionProperties) {\n      return;\n    }\n\n    // cache built expression\n    defineHiddenProp(field, '_expressionProperties', {});\n\n    if (field.expressionProperties) {\n      for (const key in field.expressionProperties) {\n        const expressionProperty = field.expressionProperties[key];\n\n        if (typeof expressionProperty === 'string' || isFunction(expressionProperty)) {\n          field._expressionProperties[key] = {\n            expression: this._evalExpression(\n              key,\n              expressionProperty,\n              key === 'templateOptions.disabled' && field.parent.expressionProperties && field.parent.expressionProperties.hasOwnProperty('templateOptions.disabled')\n                ? () => field.parent.templateOptions.disabled\n                : undefined,\n            ),\n          };\n          if (key === 'templateOptions.disabled') {\n            Object.defineProperty(field._expressionProperties[key], 'expressionValue', {\n              get: () => field.templateOptions.disabled,\n              set: () => { },\n              enumerable: true,\n              configurable: true,\n            });\n          }\n        } else if (expressionProperty instanceof Observable) {\n          const subscribe = () => (expressionProperty as Observable<any>)\n            .subscribe(v => {\n              this.setExprValue(field, key, v);\n              if (field.options && field.options._markForCheck) {\n                field.options._markForCheck(field);\n              }\n            });\n\n          let subscription: Subscription = subscribe();\n          const onInit = field.hooks.onInit;\n          field.hooks.onInit = () => {\n            if (subscription === null) {\n              subscription = subscribe();\n            }\n            return onInit && onInit(field);\n          };\n\n          const onDestroy = field.hooks.onDestroy;\n          field.hooks.onDestroy = () => {\n            onDestroy && onDestroy(field);\n            subscription.unsubscribe();\n            subscription = null;\n          };\n        }\n      }\n    }\n\n    if (field.hideExpression) {\n      // delete hide value in order to force re-evaluate it in FormlyFormExpression.\n      delete field.hide;\n\n      field.hideExpression = this._evalExpression(\n        'hide',\n        field.hideExpression,\n        () => {\n          let root = field.parent;\n          while (root.parent && !root.hide) {\n            root = root.parent;\n          }\n\n          return root.hide;\n        },\n      );\n    } else {\n      wrapProperty(field, 'hide', ({ currentValue, firstChange }) => {\n        field._hide = currentValue;\n        if (!firstChange || (firstChange && currentValue === true)) {\n          field.options._hiddenFieldsForCheck.push(field);\n        }\n      });\n    }\n  }\n\n  private _evalExpression(prop: string, expression, parentExpression?) {\n    return (model: any, formState: any, field: FormlyFieldConfig) => {\n      try {\n        if (typeof expression === 'string') {\n          expression = evalStringExpression(expression, ['model', 'formState', 'field']);\n        }\n\n        if (typeof expression !== 'function') {\n          expression = () => !!expression;\n        }\n\n        return (parentExpression && parentExpression()) || expression(model, formState, field);\n      } catch (error) {\n        error.message = `[Formly Error] [Expression \"${prop}\"] ${error.message}`;\n        throw error;\n      }\n    };\n  }\n\n  private checkField(field: FormlyFieldConfigCache, ignoreCache = false) {\n    this._checkField(field, ignoreCache);\n\n    field.options._hiddenFieldsForCheck\n      .sort(f => f.hide ? -1 : 1)\n      .forEach(f => this.toggleFormControl(f, !!f.hide, !ignoreCache));\n\n    field.options._hiddenFieldsForCheck = [];\n  }\n\n  private _checkField(field: FormlyFieldConfigCache, ignoreCache = false) {\n    let markForCheck = false;\n    field.fieldGroup.forEach(f => {\n      this.checkFieldExpressionChange(f, ignoreCache) && (markForCheck = true);\n      if (this.checkFieldVisibilityChange(f, ignoreCache)) {\n        field.options._hiddenFieldsForCheck.push(f);\n        markForCheck = true;\n      }\n\n      if (f.fieldGroup && f.fieldGroup.length > 0) {\n        this._checkField(f, ignoreCache);\n      }\n    });\n\n    if (markForCheck && field.options && field.options._markForCheck) {\n      field.options._markForCheck(field);\n    }\n  }\n\n  private checkFieldExpressionChange(field: FormlyFieldConfigCache, ignoreCache): boolean {\n    if (!field || !field._expressionProperties) {\n      return false;\n    }\n\n    let markForCheck = false;\n    const expressionProperties = field._expressionProperties;\n\n    for (const key in expressionProperties) {\n      let expressionValue = evalExpression(expressionProperties[key].expression, { field }, [field.model, field.options.formState, field]);\n      if (key === 'templateOptions.disabled') {\n        expressionValue = !!expressionValue;\n      }\n\n      if (\n        ignoreCache || (\n          expressionProperties[key].expressionValue !== expressionValue\n          && (!isObject(expressionValue) || JSON.stringify(expressionValue) !== JSON.stringify(expressionProperties[key].expressionValue))\n        )\n      ) {\n        markForCheck = true;\n        expressionProperties[key].expressionValue = expressionValue;\n        this.setExprValue(field, key, expressionValue);\n      }\n    }\n\n    return markForCheck;\n  }\n\n  private checkFieldVisibilityChange(field: FormlyFieldConfigCache, ignoreCache): boolean {\n    if (!field || isNullOrUndefined(field.hideExpression)) {\n      return false;\n    }\n\n    const hideExpressionResult: boolean = !!evalExpression(\n      field.hideExpression,\n      { field },\n      [field.model, field.options.formState, field],\n    );\n    let markForCheck = false;\n    if (hideExpressionResult !== field.hide || ignoreCache) {\n      markForCheck = true;\n      // toggle hide\n      field.hide = hideExpressionResult;\n      field.templateOptions.hidden = hideExpressionResult;\n    }\n\n    return markForCheck;\n  }\n\n  private setDisabledState(field: FormlyFieldConfig, value: boolean) {\n    if (field.fieldGroup) {\n      field.fieldGroup\n        .filter(f => !f.expressionProperties || !f.expressionProperties.hasOwnProperty('templateOptions.disabled'))\n        .forEach(f => this.setDisabledState(f, value));\n    }\n\n    if (field.key && field.templateOptions.disabled !== value) {\n      field.templateOptions.disabled = value;\n    }\n  }\n\n  private toggleFormControl(field: FormlyFieldConfigCache, hide: boolean, resetOnHide: boolean) {\n    if (field.formControl && field.key) {\n      defineHiddenProp(field, '_hide', !!(hide || field.hide));\n      const c = field.formControl;\n      if (c['_fields'].length > 1) {\n        updateValidity(c);\n      }\n\n      if (hide === true && c['_fields'].every(f => !!f._hide)) {\n        unregisterControl(field, true);\n        if (resetOnHide && field.resetOnHide) {\n          field.formControl.reset({ value: undefined, disabled: field.formControl.disabled });\n          if (field.fieldGroup) {\n            assignFieldValue(field, undefined);\n\n            if (field.formControl instanceof FormArray) {\n              field.fieldGroup.length = 0;\n            }\n          }\n        }\n      } else if (hide === false) {\n        if (field.resetOnHide && field.parent && !isUndefined(field.defaultValue) && isUndefined(getFieldValue(field))) {\n          assignFieldValue(field, field.defaultValue);\n        }\n        registerControl(field, undefined, true);\n        if (field.resetOnHide && field.fieldArray && (field.fieldGroup || []).length !== (field.model || []).length) {\n          (<any> field.options)._buildForm(true);\n        }\n      }\n    }\n\n    if (field.fieldGroup) {\n      field.fieldGroup\n        .filter(f => !f.hideExpression)\n        .forEach(f => this.toggleFormControl(f, hide, resetOnHide));\n    }\n\n    if (field.options.fieldChanges) {\n      field.options.fieldChanges.next(<FormlyValueChangeEvent> { field, type: 'hidden', value: hide });\n    }\n  }\n\n  private setExprValue(field: FormlyFieldConfigCache, prop: string, value: any) {\n    try {\n      let target = field;\n      const paths = (prop.indexOf('[') === -1 ? prop : prop.replace(/\\[(\\w+)\\]/g, '.$1')).split('.');\n      const lastIndex = paths.length - 1;\n      for (let i = 0; i < lastIndex; i++) {\n        target = target[paths[i]];\n      }\n\n      target[paths[lastIndex]] = value;\n    } catch (error) {\n      error.message = `[Formly Error] [Expression \"${prop}\"] ${error.message}`;\n      throw error;\n    }\n\n    if (prop === 'templateOptions.disabled' && field.key) {\n      this.setDisabledState(field, value);\n    }\n\n    if (prop.indexOf('model.') === 0) {\n      const path = prop.replace(/^model\\./, ''),\n        control = field.key && prop === path ? field.formControl : field.parent.formControl.get(path);\n\n      if (\n        control\n        && !(isNullOrUndefined(control.value) && isNullOrUndefined(value))\n        && control.value !== value\n      ) {\n        control.patchValue(value, { emitEvent: false });\n      }\n    }\n\n    this.emitExpressionChanges(field, prop, value);\n  }\n\n  private emitExpressionChanges(field: FormlyFieldConfigCache, property: string, value: any) {\n    if (!field.options.fieldChanges) {\n      return;\n    }\n\n    field.options.fieldChanges.next({\n      field: field,\n      type: 'expressionChanges',\n      property,\n      value,\n    });\n  }\n}\n","import { FormlyExtension, FormlyConfig, ValidatorOption } from '../../services/formly.config';\nimport { FormlyFieldConfigCache } from '../../components/formly.field.config';\nimport { AbstractControl, Validators, ValidatorFn } from '@angular/forms';\nimport { FORMLY_VALIDATORS, defineHiddenProp, isPromise, wrapProperty, clone, isObject } from '../../utils';\nimport { updateValidity } from '../field-form/utils';\nimport { isObservable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/** @experimental */\nexport class FieldValidationExtension implements FormlyExtension {\n  constructor(private formlyConfig: FormlyConfig) {}\n\n  onPopulate(field: FormlyFieldConfigCache) {\n    this.initFieldValidation(field, 'validators');\n    this.initFieldValidation(field, 'asyncValidators');\n  }\n\n  private initFieldValidation(field: FormlyFieldConfigCache, type: 'validators' | 'asyncValidators') {\n    const validators: ValidatorFn[] = [];\n    if (type === 'validators' && !(field.hasOwnProperty('fieldGroup') && !field.key)) {\n      validators.push(this.getPredefinedFieldValidation(field));\n    }\n\n    if (field[type]) {\n      for (const validatorName in field[type]) {\n        if (validatorName === 'validation' && !Array.isArray(field[type].validation)) {\n          field[type].validation = [field[type].validation];\n          console.warn(`NgxFormly(${field.key}): passing a non array value to the 'validation' is deprecated, pass an array instead`);\n        }\n\n        validatorName === 'validation'\n          ? validators.push(...field[type].validation.map(v => this.wrapNgValidatorFn(field, v)))\n          : validators.push(this.wrapNgValidatorFn(field, field[type][validatorName], validatorName))\n        ;\n      }\n    }\n\n    defineHiddenProp(field, '_' + type, validators);\n  }\n\n  private getPredefinedFieldValidation(field: FormlyFieldConfigCache): ValidatorFn {\n    let VALIDATORS = [];\n    FORMLY_VALIDATORS.forEach(opt => wrapProperty(field.templateOptions, opt, ({ currentValue, firstChange }) => {\n      VALIDATORS = VALIDATORS.filter(o => o !== opt);\n      if (currentValue != null && currentValue !== false) {\n        VALIDATORS.push(opt);\n      }\n      if (!firstChange && field.formControl) {\n        updateValidity(field.formControl);\n      }\n    }));\n\n    return (control: AbstractControl) => {\n      if (VALIDATORS.length === 0) {\n        return null;\n      }\n\n      return Validators.compose(VALIDATORS.map(opt => () => {\n        const value = field.templateOptions[opt];\n        switch (opt) {\n          case 'required':\n            return Validators.required(control);\n          case 'pattern':\n            return Validators.pattern(value)(control);\n          case 'minLength':\n            return Validators.minLength(value)(control);\n          case 'maxLength':\n            return Validators.maxLength(value)(control);\n          case 'min':\n            return Validators.min(value)(control);\n          case 'max':\n            return Validators.max(value)(control);\n        }\n      }))(control);\n    };\n  }\n\n  private wrapNgValidatorFn(field: FormlyFieldConfigCache, validator: any, validatorName?: string) {\n    let validatorOption: ValidatorOption = null;\n    if (typeof validator === 'string') {\n      validatorOption = clone(this.formlyConfig.getValidator(validator));\n    }\n\n    if (typeof validator === 'object' && validator.name) {\n      validatorOption = clone(this.formlyConfig.getValidator(validator.name));\n      if (validator.options) {\n        validatorOption.options = validator.options;\n      }\n    }\n\n    if (typeof validator === 'object' && validator.expression) {\n      const { expression, ...options } = validator;\n      validatorOption = {\n        name: validatorName,\n        validation: expression,\n        options: Object.keys(options).length > 0 ? options : null,\n      };\n    }\n\n    if (typeof validator === 'function') {\n      validatorOption = {\n        name: validatorName,\n        validation: validator,\n      };\n    }\n\n    return (control: AbstractControl) => {\n      const errors: any = validatorOption.validation(control, field, validatorOption.options);\n      if (isPromise(errors)) {\n        return errors.then(v => this.handleAsyncResult(field, validatorName ? !!v : v, validatorOption));\n      }\n\n      if (isObservable(errors)) {\n        return errors.pipe(map(v => this.handleAsyncResult(field, validatorName ? !!v : v, validatorOption)));\n      }\n\n      return this.handleResult(field, validatorName ? !!errors : errors, validatorOption);\n    };\n  }\n\n  private handleAsyncResult(field: FormlyFieldConfigCache, errors: any, options: ValidatorOption) {\n    // workaround for https://github.com/angular/angular/issues/13200\n    if (field.options && field.options._markForCheck) {\n      field.options._markForCheck(field);\n    }\n\n    return this.handleResult(field, errors, options);\n  }\n\n  private handleResult(field: FormlyFieldConfigCache, errors: any, { name, options }: ValidatorOption) {\n    if (typeof errors === 'boolean') {\n      errors = errors ? null : { [name]: options ? options : true };\n    }\n\n    const ctrl = field.formControl;\n    ctrl['_childrenErrors'] && ctrl['_childrenErrors'][name] && ctrl['_childrenErrors'][name]();\n\n    if (isObject(errors)) {\n      Object.keys(errors).forEach(name => {\n        const errorPath = errors[name].errorPath\n          ? errors[name].errorPath\n          : (options || {}).errorPath;\n\n        const childCtrl = errorPath ? field.formControl.get(errorPath) : null;\n        if (childCtrl) {\n          const { errorPath, ...opts } = errors[name];\n          childCtrl.setErrors({ ...(childCtrl.errors || {}), [name]: opts });\n\n          !ctrl['_childrenErrors'] && defineHiddenProp(ctrl, '_childrenErrors', {});\n          ctrl['_childrenErrors'][name] = () => {\n            const { [name]: toDelete, ...childErrors } = childCtrl.errors || {};\n            childCtrl.setErrors(Object.keys(childErrors).length === 0 ? null : childErrors);\n          };\n        }\n      });\n    }\n\n    return errors;\n  }\n}\n","import { FormlyExtension, FormlyConfig } from '../../services/formly.config';\nimport { FormlyFieldConfigCache } from '../../components/formly.field.config';\nimport { FormGroup, FormControl, AbstractControlOptions, Validators, ValidatorFn, AsyncValidatorFn } from '@angular/forms';\nimport { getFieldValue, defineHiddenProp } from '../../utils';\nimport { registerControl, findControl, updateValidity as updateControlValidity } from './utils';\nimport { of } from 'rxjs';\n\n/** @experimental */\nexport class FieldFormExtension implements FormlyExtension {\n  constructor(private config: FormlyConfig) { }\n\n  onPopulate(field: FormlyFieldConfigCache) {\n    if (!field.parent) {\n      return;\n    }\n\n    if (field.fieldGroup && !field.key) {\n      defineHiddenProp(field, 'formControl', field.parent.formControl);\n    } else {\n      this.addFormControl(field);\n    }\n  }\n\n  postPopulate(field: FormlyFieldConfigCache) {\n    if (field.parent) {\n      return;\n    }\n\n    const fieldsToUpdate = this.setValidators(field);\n    if (fieldsToUpdate.length === 0) {\n      return;\n    }\n\n    if (fieldsToUpdate.length === 1) {\n      fieldsToUpdate[0].formControl.updateValueAndValidity();\n    } else {\n      (field.formControl as any)._updateTreeValidity();\n    }\n  }\n\n  private addFormControl(field: FormlyFieldConfigCache) {\n    let control = findControl(field);\n    if (!control) {\n      const controlOptions: AbstractControlOptions = { updateOn: field.modelOptions.updateOn };\n      const value = field.key ? getFieldValue(field) : field.defaultValue;\n\n      const ref = this.config ? this.config.resolveFieldTypeRef(field) : null;\n      if (ref && ref.componentType && ref.componentType['createControl']) {\n        const component = ref.componentType;\n        console.warn(`NgxFormly: '${component.name}::createControl' is deprecated since v5.0, use 'prePopulate' hook instead.`);\n        control = component['createControl'](value, field);\n      } else if (field.fieldGroup) {\n        // TODO: move to postPopulate\n        control = new FormGroup({}, controlOptions);\n      } else {\n        control = new FormControl(value, controlOptions);\n      }\n    }\n\n    registerControl(field, control);\n  }\n\n  private setValidators(field: FormlyFieldConfigCache) {\n    let updateValidity = false;\n    if (field.key || !field.parent || (!field.key && !field.fieldGroup)) {\n      const { formControl: c } = field;\n      const disabled = field.templateOptions ? field.templateOptions.disabled : false;\n      if (disabled && c.enabled) {\n        c.disable({ emitEvent: false, onlySelf: true });\n        if (!c.parent) {\n          updateControlValidity(c);\n        } else {\n          updateValidity = true;\n        }\n      }\n\n      if (null === c.validator || null === c.asyncValidator) {\n        c.setValidators(() => {\n          const v = Validators.compose(this.mergeValidators<ValidatorFn>(field, '_validators'));\n\n          return v ? v(c) : null;\n        });\n        c.setAsyncValidators(() => {\n          const v = Validators.composeAsync(this.mergeValidators<AsyncValidatorFn>(field, '_asyncValidators'));\n\n          return v ? v(c) : of(null);\n        });\n\n        if (!c.parent) {\n          updateControlValidity(c);\n        } else {\n          updateValidity = true;\n        }\n      }\n    }\n\n    const fieldsToUpdate = updateValidity ? [field] : [];\n    (field.fieldGroup || []).forEach(f => {\n      const childrenToUpdate = this.setValidators(f);\n      if (!updateValidity) {\n        fieldsToUpdate.push(...childrenToUpdate);\n      }\n    });\n\n    return fieldsToUpdate;\n  }\n\n  private mergeValidators<T>(field: FormlyFieldConfigCache, type: '_validators' | '_asyncValidators'): T[] {\n    const validators: any = [];\n    const c = field.formControl;\n    if (c && c['_fields'] && c['_fields'].length > 1) {\n      c['_fields']\n        .filter((f: FormlyFieldConfigCache) => !f._hide)\n        .forEach((f: FormlyFieldConfigCache) => validators.push(...f[type]));\n    } else {\n      validators.push(...field[type]);\n    }\n\n    if (field.fieldGroup) {\n      field.fieldGroup\n        .filter(f => !f.key && f.fieldGroup)\n        .forEach(f => validators.push(...this.mergeValidators(f, type)));\n    }\n\n    return validators;\n  }\n}\n","import { FormlyExtension, FormlyConfig, TemplateManipulators } from '../../services/formly.config';\nimport { FormlyFieldConfigCache, FormlyFieldConfig } from '../../components/formly.field.config';\nimport { FormGroup } from '@angular/forms';\nimport { getFieldId, isUndefined, getFieldValue, reverseDeepMerge, assignFieldValue } from '../../utils';\n\n/** @experimental */\nexport class CoreExtension implements FormlyExtension {\n  private formId = 0;\n  constructor(private formlyConfig: FormlyConfig) { }\n\n  prePopulate(field: FormlyFieldConfigCache) {\n    this.getFieldComponentInstance(field).prePopulate();\n    if (field.parent) {\n      return;\n    }\n\n    const fieldTransforms = (field.options && field.options.fieldTransform) || this.formlyConfig.extras.fieldTransform;\n    (Array.isArray(fieldTransforms) ? fieldTransforms : [fieldTransforms]).forEach(fieldTransform => {\n      if (fieldTransform) {\n        console.warn(`NgxFormly: fieldTransform is deprecated since v5.0, use custom extension instead.`);\n        const fieldGroup = fieldTransform(field.fieldGroup, field.model, <FormGroup>field.formControl, field.options);\n        if (!fieldGroup) {\n          throw new Error('fieldTransform must return an array of fields');\n        }\n      }\n    });\n  }\n\n  onPopulate(field: FormlyFieldConfigCache) {\n    this.initFieldOptions(field);\n    this.getFieldComponentInstance(field).onPopulate();\n    if (field.fieldGroup) {\n      field.fieldGroup.forEach((f, index) => {\n        Object.defineProperty(f, 'parent', { get: () => field, configurable: true });\n        Object.defineProperty(f, 'index', { get: () => index, configurable: true });\n        this.formId++;\n      });\n    }\n  }\n\n  postPopulate(field: FormlyFieldConfigCache) {\n    this.getFieldComponentInstance(field).postPopulate();\n  }\n\n  private initFieldOptions(field: FormlyFieldConfigCache) {\n    const root = <FormlyFieldConfigCache> field.parent;\n    if (!root) {\n      return;\n    }\n\n    Object.defineProperty(field, 'form', { get: () => root.formControl, configurable: true });\n    Object.defineProperty(field, 'options', { get: () => root.options, configurable: true });\n    Object.defineProperty(field, 'model', {\n      get: () => field.key && field.fieldGroup ? getFieldValue(field) : root.model,\n      configurable: true,\n    });\n\n    reverseDeepMerge(field, {\n      id: getFieldId(`formly_${this.formId}`, field, field['index']),\n      hooks: {},\n      modelOptions: {},\n      templateOptions: !field.type || !field.key ? {} : {\n        label: '',\n        placeholder: '',\n        focus: false,\n        disabled: false,\n      },\n    });\n\n    if (this.formlyConfig.extras.resetFieldOnHide && field.resetOnHide !== false) {\n      field.resetOnHide = true;\n    }\n\n    if (field.lifecycle) {\n      console.warn(`NgxFormly: 'lifecycle' is deprecated since v5.0, use 'hooks' instead.`);\n    }\n\n    if (\n      field.type !== 'formly-template'\n      && (\n        field.template\n        || (field.expressionProperties && field.expressionProperties.template)\n      )\n    ) {\n      if (field.type) {\n        console.warn(`NgxFormly: passing 'type' property is not allowed when 'template' is set.`);\n      }\n      field.type = 'formly-template';\n    }\n\n    if (!field.type && field.fieldGroup) {\n      field.type = 'formly-group';\n    }\n\n    if (field.type) {\n      this.formlyConfig.getMergedField(field);\n    }\n\n    if (field.parent) {\n      let setDefaultValue = !isUndefined(field.key)\n        && !isUndefined(field.defaultValue)\n        && isUndefined(getFieldValue(field))\n        && (!field.resetOnHide || !(field.hide || field.hideExpression));\n      if (setDefaultValue && field.resetOnHide) {\n        let parent = field.parent;\n        while (parent && !parent.hideExpression && !parent.hide) {\n          parent = parent.parent;\n        }\n        setDefaultValue = !parent || !(parent.hideExpression || parent.hide);\n      }\n\n      if (setDefaultValue) {\n        assignFieldValue(field, field.defaultValue);\n      }\n    }\n\n    this.initFieldWrappers(field);\n  }\n\n  private initFieldWrappers(field: FormlyFieldConfig) {\n    field.wrappers = field.wrappers || [];\n    const fieldTemplateManipulators: TemplateManipulators = {\n      preWrapper: [],\n      postWrapper: [],\n      ...(field.templateOptions.templateManipulators || {}),\n    };\n\n    field.wrappers = [\n      ...this.formlyConfig.templateManipulators.preWrapper.map(m => m(field)),\n      ...fieldTemplateManipulators.preWrapper.map(m => m(field)),\n      ...field.wrappers,\n      ...this.formlyConfig.templateManipulators.postWrapper.map(m => m(field)),\n      ...fieldTemplateManipulators.postWrapper.map(m => m(field)),\n    ].filter((el, i, a) => el && i === a.indexOf(el));\n  }\n\n  private getFieldComponentInstance(field: FormlyFieldConfigCache) {\n    const componentRef = this.formlyConfig.resolveFieldTypeRef(field);\n    const instance: FormlyExtension = componentRef ? componentRef.instance as any : {};\n\n    return {\n      prePopulate: () => instance.prePopulate && instance.prePopulate(field),\n      onPopulate: () => instance.onPopulate && instance.onPopulate(field),\n      postPopulate: () => instance.postPopulate && instance.postPopulate(field),\n    };\n  }\n}\n","import { NgModule, ModuleWithProviders, ANALYZE_FOR_ENTRY_COMPONENTS, Inject, Optional } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormlyForm } from './components/formly.form';\nimport { FormlyField } from './components/formly.field';\nimport { FormlyAttributes } from './components/formly.attributes';\nimport { FormlyConfig, ConfigOption, FORMLY_CONFIG } from './services/formly.config';\nimport { FormlyFormBuilder } from './services/formly.form.builder';\nimport { FormlyGroup } from './templates/formly.group';\nimport { FormlyValidationMessage } from './templates/formly.validation-message';\nimport { FormlyTemplateType } from './templates/field-template.type';\n\nimport { FieldExpressionExtension } from './extensions/field-expression/field-expression';\nimport { FieldValidationExtension } from './extensions/field-validation/field-validation';\nimport { FieldFormExtension } from './extensions/field-form/field-form';\nimport { CoreExtension } from './extensions/core/core';\nimport { FieldArrayType } from './templates/field-array.type';\n\nexport function defaultFormlyConfig(formlyConfig: FormlyConfig): ConfigOption {\n  return {\n    types: [\n      { name: 'formly-group', component: FormlyGroup },\n      { name: 'formly-template', component: FormlyTemplateType },\n    ],\n    extensions: [\n      { name: 'core', extension: new CoreExtension(formlyConfig) },\n      { name: 'field-validation', extension: new FieldValidationExtension(formlyConfig) },\n      { name: 'field-form', extension: new FieldFormExtension(formlyConfig) },\n      { name: 'field-expression', extension: new FieldExpressionExtension() },\n    ],\n  };\n}\n\n@NgModule({\n  declarations: [\n    FormlyForm,\n    FormlyField,\n    FormlyAttributes,\n    FormlyGroup,\n    FormlyValidationMessage,\n    FormlyTemplateType,\n    FieldArrayType as any,\n  ],\n  entryComponents: [FormlyGroup, FormlyTemplateType],\n  exports: [FormlyForm, FormlyField, FormlyAttributes, FormlyGroup, FormlyValidationMessage],\n  imports: [CommonModule],\n})\nexport class FormlyModule {\n  static forRoot(config: ConfigOption = {}): ModuleWithProviders<FormlyModule> {\n    return {\n      ngModule: FormlyModule,\n      providers: [\n        { provide: FORMLY_CONFIG, multi: true, useFactory: defaultFormlyConfig, deps: [FormlyConfig] },\n        { provide: FORMLY_CONFIG, useValue: config, multi: true },\n        { provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: config, multi: true },\n        FormlyConfig,\n        FormlyFormBuilder,\n      ],\n    };\n  }\n\n  static forChild(config: ConfigOption = {}): ModuleWithProviders<FormlyModule> {\n    return {\n      ngModule: FormlyModule,\n      providers: [\n        { provide: FORMLY_CONFIG, multi: true, useFactory: defaultFormlyConfig, deps: [FormlyConfig] },\n        { provide: FORMLY_CONFIG, useValue: config, multi: true },\n        { provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: config, multi: true },\n        FormlyFormBuilder,\n      ],\n    };\n  }\n\n  constructor(\n    configService: FormlyConfig,\n    @Optional() @Inject(FORMLY_CONFIG) configs: ConfigOption[] = [],\n  ) {\n    if (!configs) {\n      return;\n    }\n\n    configs.forEach(config => configService.addConfig(config));\n  }\n}\n"]}