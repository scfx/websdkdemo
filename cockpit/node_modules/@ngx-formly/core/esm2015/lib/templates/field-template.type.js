/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component } from '@angular/core';
import { DomSanitizer } from '@angular/platform-browser';
import { FieldType } from './field.type';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/platform-browser';
export class FormlyTemplateType extends FieldType {
    /**
     * @param {?} sanitizer
     */
    constructor(sanitizer) {
        super();
        this.sanitizer = sanitizer;
        this.innerHtml = { content: null, template: null };
    }
    /**
     * @return {?}
     */
    get template() {
        if (this.field && (this.field.template !== this.innerHtml.template)) {
            this.innerHtml = {
                template: this.field.template,
                content: this.to.safeHtml
                    ? this.sanitizer.bypassSecurityTrustHtml(this.field.template)
                    : this.field.template,
            };
        }
        return this.innerHtml.content;
    }
}
FormlyTemplateType.ɵfac = function FormlyTemplateType_Factory(t) { return new (t || FormlyTemplateType)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DomSanitizer)); };
FormlyTemplateType.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: FormlyTemplateType, selectors: [["formly-template"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 1, consts: [[3, "innerHtml"]], template: function FormlyTemplateType_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelement(0, "div", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("innerHtml", ctx.template, ɵngcc0.ɵɵsanitizeHtml);
    } }, encapsulation: 2 });
/** @nocollapse */
FormlyTemplateType.ctorParameters = () => [
    { type: DomSanitizer }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FormlyTemplateType, [{
        type: Component,
        args: [{
                selector: 'formly-template',
                template: `<div [innerHtml]="template"></div>`
            }]
    }], function () { return [{ type: ɵngcc1.DomSanitizer }]; }, null); })();
if (false) {
    /**
     * @type {?}
     * @private
     */
    FormlyTemplateType.prototype.innerHtml;
    /**
     * @type {?}
     * @private
     */
    FormlyTemplateType.prototype.sanitizer;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmllbGQtdGVtcGxhdGUudHlwZS5qcyIsInNvdXJjZXMiOlsiQG5neC1mb3JtbHkvY29yZS9saWIvdGVtcGxhdGVzL2ZpZWxkLXRlbXBsYXRlLnR5cGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDMUMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBQ3pELE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxjQUFjLENBQUM7OztBQU16QyxNQUFNLE9BQU8sa0JBQW1CLFNBQVEsU0FBUztBQUNqRDtBQUFRO0FBQ1M7QUFBUSxJQWF2QixZQUFvQixTQUF1QjtBQUM3QyxRQUFJLEtBQUssRUFBRSxDQUFDO0FBQ1osUUFGc0IsY0FBUyxHQUFULFNBQVMsQ0FBYztBQUFDLFFBRHBDLGNBQVMsR0FBRyxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxDQUFDO0FBQ3hELElBRUUsQ0FBQztBQUNIO0FBQ007QUFBbUI7QUFBUSxJQWxCL0IsSUFBSSxRQUFRO0FBQ2QsUUFBSSxJQUFJLElBQUksQ0FBQyxLQUFLLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLFFBQVEsS0FBSyxJQUFJLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxFQUFFO0FBQ3pFLFlBQU0sSUFBSSxDQUFDLFNBQVMsR0FBRztBQUN2QixnQkFBUSxRQUFRLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRO0FBQ3JDLGdCQUFRLE9BQU8sRUFBRSxJQUFJLENBQUMsRUFBRSxDQUFDLFFBQVE7QUFDakMsb0JBQVUsQ0FBQyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsdUJBQXVCLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUM7QUFDdkUsb0JBQVUsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUTtBQUMvQixhQUFPLENBQUM7QUFDUixTQUFLO0FBQ0wsUUFDSSxPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDO0FBQ2xDLElBQUUsQ0FBQztBQUNIOzhDQWpCQyxTQUFTLFNBQUMsa0JBQ1QsUUFBUSxFQUFFLGlCQUFpQixrQkFDM0IsUUFBUSxFQUFFO2tCQUFvQyxjQUMvQzs7Ozs2QkFDRztBQUFDO0FBQW1CO0FBQ1IsWUFSUCxZQUFZO0FBQUc7Ozs7Ozs7NkVBQUU7QUFBQztBQUFhO0FBQVE7QUFDekM7QUFBZ0I7QUFBUSxJQW9CN0IsdUNBQXNEO0FBQ3hEO0FBQVE7QUFBaUI7QUFBZ0I7QUFDekMsSUFEYyx1Q0FBK0I7QUFBQztBQUFFIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBEb21TYW5pdGl6ZXIgfSBmcm9tICdAYW5ndWxhci9wbGF0Zm9ybS1icm93c2VyJztcbmltcG9ydCB7IEZpZWxkVHlwZSB9IGZyb20gJy4vZmllbGQudHlwZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2Zvcm1seS10ZW1wbGF0ZScsXG4gIHRlbXBsYXRlOiBgPGRpdiBbaW5uZXJIdG1sXT1cInRlbXBsYXRlXCI+PC9kaXY+YCxcbn0pXG5leHBvcnQgY2xhc3MgRm9ybWx5VGVtcGxhdGVUeXBlIGV4dGVuZHMgRmllbGRUeXBlIHtcbiAgZ2V0IHRlbXBsYXRlKCkge1xuICAgIGlmICh0aGlzLmZpZWxkICYmICh0aGlzLmZpZWxkLnRlbXBsYXRlICE9PSB0aGlzLmlubmVySHRtbC50ZW1wbGF0ZSkpIHtcbiAgICAgIHRoaXMuaW5uZXJIdG1sID0ge1xuICAgICAgICB0ZW1wbGF0ZTogdGhpcy5maWVsZC50ZW1wbGF0ZSxcbiAgICAgICAgY29udGVudDogdGhpcy50by5zYWZlSHRtbFxuICAgICAgICAgID8gdGhpcy5zYW5pdGl6ZXIuYnlwYXNzU2VjdXJpdHlUcnVzdEh0bWwodGhpcy5maWVsZC50ZW1wbGF0ZSlcbiAgICAgICAgICA6IHRoaXMuZmllbGQudGVtcGxhdGUsXG4gICAgICB9O1xuICAgIH1cblxuICAgIHJldHVybiB0aGlzLmlubmVySHRtbC5jb250ZW50O1xuICB9XG5cbiAgcHJpdmF0ZSBpbm5lckh0bWwgPSB7IGNvbnRlbnQ6IG51bGwsIHRlbXBsYXRlOiBudWxsIH07XG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgc2FuaXRpemVyOiBEb21TYW5pdGl6ZXIpIHtcbiAgICBzdXBlcigpO1xuICB9XG59XG4iXX0=