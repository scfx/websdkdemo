/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component } from '@angular/core';
import { FieldType } from './field.type';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from '../components/formly.field';

function FormlyGroup_formly_field_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "formly-field", 1);
} if (rf & 2) {
    const f_r1 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("field", f_r1);
} }
const _c0 = ["*"];
export class FormlyGroup extends FieldType {
    constructor() {
        super(...arguments);
        this.defaultOptions = {
            defaultValue: {},
        };
    }
}
FormlyGroup.ɵfac = /*@__PURE__*/ function () { let ɵFormlyGroup_BaseFactory; return function FormlyGroup_Factory(t) { return (ɵFormlyGroup_BaseFactory || (ɵFormlyGroup_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(FormlyGroup)))(t || FormlyGroup); }; }();
FormlyGroup.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: FormlyGroup, selectors: [["formly-group"]], hostVars: 2, hostBindings: function FormlyGroup_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.field.fieldGroupClassName || "");
    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 2, vars: 1, consts: [[3, "field", 4, "ngFor", "ngForOf"], [3, "field"]], template: function FormlyGroup_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵtemplate(0, FormlyGroup_formly_field_0_Template, 1, 1, "formly-field", 0);
        ɵngcc0.ɵɵprojection(1);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngForOf", ctx.field.fieldGroup);
    } }, directives: [ɵngcc1.NgForOf, ɵngcc2.FormlyField], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FormlyGroup, [{
        type: Component,
        args: [{
                selector: 'formly-group',
                template: `
    <formly-field *ngFor="let f of field.fieldGroup" [field]="f"></formly-field>
    <ng-content></ng-content>
  `,
                host: {
                    '[class]': 'field.fieldGroupClassName || ""'
                }
            }]
    }], null, null); })();
if (false) {
    /** @type {?} */
    FormlyGroup.prototype.defaultOptions;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybWx5Lmdyb3VwLmpzIiwic291cmNlcyI6WyJAbmd4LWZvcm1seS9jb3JlL2xpYi90ZW1wbGF0ZXMvZm9ybWx5Lmdyb3VwLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzFDLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxjQUFjLENBQUM7Ozs7Ozs7Ozs7OztBQVl6QyxNQUFNLE9BQU8sV0FBWSxTQUFRLFNBQVM7QUFDMUMsSUFYQTtBQUNHO0FBQ0MsUUFTRixtQkFBYyxHQUFHO0FBQ25CLFlBQUksWUFBWSxFQUFFLEVBQUU7QUFDcEIsU0FBRyxDQUFDO0FBQ0osSUFBQSxDQUFDO0FBQ0Q7dUNBZkMsU0FBUyxTQUFDLGtCQUNULFFBQVEsRUFBRSxjQUFjLGtCQUN4QixRQUFRLEVBQUUsb0hBR1Q7UUFDRCxJQUFJLEVBQUUsc0JBQ0osU0FBUyxFQUFFLGlDQUFpQyxtQkFDN0MsY0FDRjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzBCQUNHO0FBQUM7QUFBYTtBQUFxQixJQUNyQyxxQ0FFRTtBQUNKO0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEZpZWxkVHlwZSB9IGZyb20gJy4vZmllbGQudHlwZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2Zvcm1seS1ncm91cCcsXG4gIHRlbXBsYXRlOiBgXG4gICAgPGZvcm1seS1maWVsZCAqbmdGb3I9XCJsZXQgZiBvZiBmaWVsZC5maWVsZEdyb3VwXCIgW2ZpZWxkXT1cImZcIj48L2Zvcm1seS1maWVsZD5cbiAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XG4gIGAsXG4gIGhvc3Q6IHtcbiAgICAnW2NsYXNzXSc6ICdmaWVsZC5maWVsZEdyb3VwQ2xhc3NOYW1lIHx8IFwiXCInLFxuICB9LFxufSlcbmV4cG9ydCBjbGFzcyBGb3JtbHlHcm91cCBleHRlbmRzIEZpZWxkVHlwZSB7XG4gIGRlZmF1bHRPcHRpb25zID0ge1xuICAgIGRlZmF1bHRWYWx1ZToge30sXG4gIH07XG59XG4iXX0=