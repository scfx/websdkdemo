{"version":3,"file":"default-subscriptions.component.d.ts","sources":["default-subscriptions.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { FormBuilder, FormGroup } from '@angular/forms';\nimport { IApplication } from '@c8y/client';\nimport { AlertService } from '@c8y/ngx-components';\nimport { DefaultSubscriptions, PartialAppsList } from './default-subscriptions.model';\nimport { DefaultSubscriptionsService } from './default-subscriptions.service';\n/**\n * The component shows the main view for managing default subscriptions configuration.\n */\nexport declare class DefaultSubscriptionsComponent {\n    private fb;\n    private defaultSubscriptionsService;\n    private alertService;\n    /** Default subscriptions inherited from parent tenant. */\n    parentDefaultSubscriptions: DefaultSubscriptions;\n    /** Default subscriptions defined in the current tenant. */\n    currentDefaultSubscriptions: DefaultSubscriptions;\n    /** Form object. */\n    form: FormGroup;\n    /** Whether the configuration is being loaded. */\n    loading: boolean;\n    /** Hint text for disabled checkboxes. */\n    disabledCheckboxHint: any;\n    constructor(fb: FormBuilder, defaultSubscriptionsService: DefaultSubscriptionsService, alertService: AlertService);\n    /** Initializes the loading of the form and the current settings. */\n    ngOnInit(): Promise<void>;\n    /** Loads the list of apps, builds the form and hooks value change events for override switches. */\n    initForm(): Promise<void>;\n    /**\n     * Checks if given application row should be displayed.\n     * The row is displayed when any of its checkboxes is selected or any of the lists is being overridden.\n     */\n    shouldShowAppRow(appRowRawValue: any): boolean;\n    /** Checks if there are no application rows to be displayed. */\n    isEmptyView(): boolean;\n    /**\n     * Checks if given application is subscribed (present in the given list of applications).\n     * @param app Application object to check.\n     * @param subscribedApps The list of application objects to check against.\n     * @returns True, if the application is present in the list.\n     */\n    isSubscribed(app: IApplication, subscribedApps: PartialAppsList): boolean;\n    /** Saves the current value of form object to backend. */\n    save(): Promise<void>;\n    private onOverrideOnCreationSubscriptionsChange;\n    private enableSubscribeOnCreationCheckboxes;\n    private disableSubscribeOnCreationCheckboxes;\n    private restoreSubscribeOnCreationFromParent;\n    private onOverrideOnUpgradeSubscriptionsChange;\n    private enableSubscribeOnUpgradeCheckboxes;\n    private disableSubscribeOnUpgradeCheckboxes;\n    private restoreSubscribeOnUpgradeFromParent;\n    private loadDefaultSubscriptions;\n    private getDefaultSubscriptionsForSave;\n}\n"]}