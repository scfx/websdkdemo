{"version":3,"file":"opcua-address-space-tree.component.d.ts","sources":["opcua-address-space-tree.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnInit, EventEmitter, OnDestroy, OnChanges, SimpleChanges } from '@angular/core';\nimport { AddressSpaceNode, AddressSpaceService, NodeNavigationData } from './address-space.service';\nimport { OpcuaService } from './opcuaService';\nimport { AlertService } from '@c8y/ngx-components';\nimport { DynamicDataSource } from './dynamic-data-source';\nimport { NestedTreeControl } from '@angular/cdk/tree';\nimport { Subscription } from 'rxjs';\nexport declare class OpcuaAddressSpaceTreeComponent implements OnInit, OnDestroy, OnChanges {\n    private addressSpaceService;\n    private opcuaService;\n    private alertService;\n    set moId(id: string);\n    node: any;\n    focusEmitter: EventEmitter<AddressSpaceNode>;\n    selectedNode: EventEmitter<AddressSpaceNode>;\n    nestedTreeControl: NestedTreeControl<AddressSpaceNode>;\n    dataSource: DynamicDataSource;\n    focused: AddressSpaceNode;\n    loading: boolean;\n    subscriptionRef: Subscription;\n    nodeNavDataSubscription: Subscription;\n    private _moId;\n    private destroy$;\n    constructor(addressSpaceService: AddressSpaceService, opcuaService: OpcuaService, alertService: AlertService);\n    getChildren: (node: AddressSpaceNode) => AddressSpaceNode[];\n    hasChild: (_: number, _nodeData: AddressSpaceNode) => boolean;\n    ngOnInit(): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    initializeDataSet(): void;\n    ngOnDestroy(): void;\n    openNode(nodeNavData: NodeNavigationData): Promise<void>;\n    setChildNodes(nodes: AddressSpaceNode[], ids: string[]): void;\n    setupTree(nodeId?: string): Promise<void>;\n    getMoId(): string;\n    getIcon(nodeClassName: any): any;\n    toggleFocusedNode(node: any): void;\n    isFocusedNode(node: AddressSpaceNode): boolean;\n    private getRelativePath;\n}\n"]}