{"version":3,"file":"opcuaService.d.ts","sources":["opcuaService.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { FetchClient, InventoryService } from '@c8y/client';\nimport { OpcuaServer } from './opcua-server.interface';\nimport { Router } from '@angular/router';\nimport { AlertService } from '@c8y/ngx-components';\nexport declare class OpcuaService {\n    private client;\n    private inventoryService;\n    private router;\n    private alertService;\n    private binaryService;\n    private microserviceUrl;\n    private deviceTypeProtocolUrl;\n    private header;\n    constructor(client: FetchClient, inventoryService: InventoryService, router: Router, alertService: AlertService);\n    getServers(id: string): Promise<import(\"@c8y/client\").IFetchResponse>;\n    createServer(data: OpcuaServer): Promise<import(\"@c8y/client\").IFetchResponse>;\n    updateServer(server: OpcuaServer): Promise<any>;\n    removeServer(data: OpcuaServer): Promise<import(\"@c8y/client\").IFetchResponse>;\n    getKeystore(binaryId: string): Promise<import(\"@c8y/client\").IResult<import(\"@c8y/client\").IManagedObject>>;\n    uploadKeystore(file: File): Promise<import(\"@c8y/client\").IResult<import(\"@c8y/client\").IManagedObjectBinary>>;\n    updateKeystore(id: string, file: File): Promise<import(\"@c8y/client\").IResult<import(\"@c8y/client\").IManagedObjectBinary>>;\n    removeKeystore(id: string): Promise<import(\"@c8y/client\").IResult<null>>;\n    getMoId(): string;\n    getId(): string;\n    getDeviceProtocol(id: string): Promise<import(\"@c8y/client\").IFetchResponse>;\n    updateDeviceProtocol(data: any): Promise<import(\"@c8y/client\").IFetchResponse>;\n    createDeviceProtocol(data: any): Promise<import(\"@c8y/client\").IFetchResponse>;\n    private doesGatewayIdExist;\n    private doesIdExist;\n    private cleanUpPayload;\n}\n"]}