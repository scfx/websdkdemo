(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(require('@angular/core'),require('@c8y/client'),require('@c8y/ngx-components'),require('@angular/router'),require('@angular/forms'),require('@angular/common'),exports, require('@angular/core'), require('@c8y/ngx-components'), require('@c8y/client'), require('lodash-es'), require('@angular/router'), require('rxjs'), require('rxjs/operators')) :
    typeof define === 'function' && define.amd ? define('@c8y/ngx-components/protocol-lpwan', ['@angular/core','@c8y/client','@c8y/ngx-components','@angular/router','@angular/forms','@angular/common','exports', '@angular/core', '@c8y/ngx-components', '@c8y/client', 'lodash-es', '@angular/router', 'rxjs', 'rxjs/operators'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.ng.core,global.c8y.client,global.c8y.ngxComponents,global.ng.router,global.ng.forms,global.ng.common,(global.c8y = global.c8y || {}, global.c8y["ngx-components"] = global.c8y["ngx-components"] || {}, global.c8y["ngx-components"]["protocol-lpwan"] = {}), global.ng.core, global.c8y["ngx-components"], global.client, global.lodashEs, global.ng.router, global.rxjs, global.rxjs.operators));
})(this, (function (ɵngcc0,ɵngcc1,ɵngcc2,ɵngcc3,ɵngcc4,ɵngcc5,exports, core, ngxComponents, client, lodashEs, router, rxjs, operators) { 
var _c0 = ["lpwanSetDeviceProtocolForm"];
function LpwanAssignDeviceProtocolComponent_div_10_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelement(1, "c8y-loading");
    ɵngcc0.ɵɵelementEnd();
} }
function LpwanAssignDeviceProtocolComponent_div_11_p_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "p", 16);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r3 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r3.device.type, " ");
} }
function LpwanAssignDeviceProtocolComponent_div_11_p_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "p", 16);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r4 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r4.currentProtocol.name, " ");
} }
function LpwanAssignDeviceProtocolComponent_div_11_c8y_li_9_Template(rf, ctx) { if (rf & 1) {
    var _r8 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "c8y-li", 17);
    ɵngcc0.ɵɵlistener("click", function LpwanAssignDeviceProtocolComponent_div_11_c8y_li_9_Template_c8y_li_click_0_listener() { var restoredCtx = ɵngcc0.ɵɵrestoreView(_r8); var protocol_r6 = restoredCtx.$implicit; var ctx_r7 = ɵngcc0.ɵɵnextContext(2); ctx_r7.newProtocol = protocol_r6; return ctx_r7.setPipe(""); });
    ɵngcc0.ɵɵelement(1, "c8y-highlight", 18);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var protocol_r6 = ctx.$implicit;
    var ctx_r5 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("text", protocol_r6.name)("pattern", ctx_r5.pattern);
} }
function LpwanAssignDeviceProtocolComponent_div_11_Template(rf, ctx) { if (rf & 1) {
    var _r10 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelementStart(1, "div", 10);
    ɵngcc0.ɵɵelementStart(2, "label", 11);
    ɵngcc0.ɵɵtext(3, "Current device protocol");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(4, LpwanAssignDeviceProtocolComponent_div_11_p_4_Template, 2, 1, "p", 12);
    ɵngcc0.ɵɵtemplate(5, LpwanAssignDeviceProtocolComponent_div_11_p_5_Template, 2, 1, "p", 12);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(6, "c8y-form-group");
    ɵngcc0.ɵɵelementStart(7, "c8y-typeahead", 13);
    ɵngcc0.ɵɵlistener("ngModelChange", function LpwanAssignDeviceProtocolComponent_div_11_Template_c8y_typeahead_ngModelChange_7_listener($event) { ɵngcc0.ɵɵrestoreView(_r10); var ctx_r9 = ɵngcc0.ɵɵnextContext(); return ctx_r9.newProtocol = $event; })("onSearch", function LpwanAssignDeviceProtocolComponent_div_11_Template_c8y_typeahead_onSearch_7_listener($event) { ɵngcc0.ɵɵrestoreView(_r10); var ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11.setPipe($event); });
    ɵngcc0.ɵɵpipe(8, "translate");
    ɵngcc0.ɵɵtemplate(9, LpwanAssignDeviceProtocolComponent_div_11_c8y_li_9_Template, 2, 2, "c8y-li", 14);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(10, "c8y-messages");
    ɵngcc0.ɵɵelement(11, "c8y-message", 15);
    ɵngcc0.ɵɵpipe(12, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r2.currentProtocol);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r2.currentProtocol);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵpropertyInterpolate("placeholder", ɵngcc0.ɵɵpipeBind1(8, 9, "Select new device protocol"));
    ɵngcc0.ɵɵproperty("ngModel", ctx_r2.newProtocol)("allowFreeEntries", false);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("c8yForOf", ctx_r2.availableProtocols)("c8yForLoadMore", "hidden")("c8yForPipe", ctx_r2.filterProtocols);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("text", ɵngcc0.ɵɵpipeBind1(12, 11, "Select one of the protocols."));
} }
'use strict';

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    /** @deprecated */
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    /** @deprecated */
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    function __spreadArray(to, from, pack) {
        if (pack || arguments.length === 2)
            for (var i = 0, l = from.length, ar; i < l; i++) {
                if (ar || !(i in from)) {
                    if (!ar)
                        ar = Array.prototype.slice.call(from, 0, i);
                    ar[i] = from[i];
                }
            }
        return to.concat(ar || Array.prototype.slice.call(from));
    }
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, state, kind, f) {
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    }
    function __classPrivateFieldSet(receiver, state, value, kind, f) {
        if (kind === "m")
            throw new TypeError("Private method is not writable");
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    }

    var LpwanSetDeviceProtocolService = /** @class */ (function () {
        function LpwanSetDeviceProtocolService(inventoryService, client, identityService) {
            this.inventoryService = inventoryService;
            this.client = client;
            this.identityService = identityService;
            this.supportedDevicesCfgs = [
                {
                    name: 'lora',
                    match: function (device) { return lodashEs.get(device, 'c8y_LpwanDevice.lpwanDeviceType') === 'Lora'; },
                    protocolTypes: ['c8y_ActilityDeviceType', 'c8y_LoraDeviceType', 'c8y_LpwanDeviceType'],
                    externalIdTypes: ['c8y_LoriotEUI', 'c8y_Serial']
                },
                {
                    name: 'sigfox',
                    match: function (device) { return lodashEs.get(device, 'c8y_LpwanDevice.serviceProvider') === 'Sigfox'; },
                    protocolTypes: ['c8y_SigfoxDeviceType', 'c8y_LpwanDeviceType'],
                    externalIdTypes: ['com.sigfox.deviceId']
                }
            ];
            this.header = { 'Content-Type': 'application/json' };
        }
        LpwanSetDeviceProtocolService.prototype.refreshCache = function (device) {
            return __awaiter(this, void 0, void 0, function () {
                var externalId, url, options;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.getExternalId(device)];
                        case 1:
                            externalId = _a.sent();
                            if (externalId) {
                                url = this.getMicroserviceUrl(device) + "/refreshCache/" + externalId;
                                options = {
                                    method: 'POST',
                                    headers: this.header,
                                    body: JSON.stringify({})
                                };
                                return [2 /*return*/, this.client.fetch(url, options)];
                            }
                            return [2 /*return*/];
                    }
                });
            });
        };
        LpwanSetDeviceProtocolService.prototype.getMicroserviceUrl = function (device) {
            var serviceProvider = device.c8y_LpwanDevice.serviceProvider;
            var serviceName = serviceProvider.toLowerCase();
            if (serviceProvider === 'Sigfox') {
                serviceName = 'sigfox-agent';
            }
            return "/service/" + serviceName;
        };
        LpwanSetDeviceProtocolService.prototype.isSupportedDevice = function (device) {
            return this.supportedDevicesCfgs.some(function (_a) {
                var match = _a.match;
                return match(device);
            });
        };
        LpwanSetDeviceProtocolService.prototype.getCurrentProtocol = function (device) {
            return __awaiter(this, void 0, void 0, function () {
                var lpwanDevice, protocolId, externalId;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            lpwanDevice = device.c8y_LpwanDevice;
                            if (!lpwanDevice.typeExternalId) return [3 /*break*/, 2];
                            return [4 /*yield*/, this.identityService.detail(lpwanDevice.typeExternalId)];
                        case 1:
                            externalId = (_a.sent()).data;
                            protocolId = externalId.managedObject.id;
                            _a.label = 2;
                        case 2:
                            if (!protocolId && lpwanDevice.type) {
                                protocolId = lpwanDevice.type.split('/')[2];
                            }
                            if (!protocolId) {
                                return [2 /*return*/, null];
                            }
                            return [4 /*yield*/, this.inventoryService.detail(protocolId)];
                        case 3: return [2 /*return*/, (_a.sent()).data];
                    }
                });
            });
        };
        LpwanSetDeviceProtocolService.prototype.applyProtocol = function (device, selectedProtocol) {
            return __awaiter(this, void 0, void 0, function () {
                var _a, protocolExternalId, externalId, type;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0: return [4 /*yield*/, this.identityService.list(selectedProtocol.id)];
                        case 1:
                            _a = __read.apply(void 0, [(_b.sent()).data, 1]), protocolExternalId = _a[0];
                            externalId = protocolExternalId.externalId, type = protocolExternalId.type;
                            device.c8y_LpwanDevice.typeExternalId = { externalId: externalId, type: type };
                            device.c8y_LpwanDevice.type = 'inventory/managedObjects/' + selectedProtocol.id;
                            device.type = selectedProtocol.name;
                            return [2 /*return*/, this.inventoryService.update(device)];
                    }
                });
            });
        };
        LpwanSetDeviceProtocolService.prototype.getAvailableProtocols = function (device) {
            return __awaiter(this, void 0, void 0, function () {
                var query;
                return __generator(this, function (_a) {
                    query = {
                        __filter: {
                            type: { __in: this.getProtocolTypesMatchingDevice(device) }
                        },
                        __orderby: [{ name: 1 }]
                    };
                    return [2 /*return*/, this.inventoryService.listQuery(query, { withTotalPages: true, pageSize: 5 })];
                });
            });
        };
        LpwanSetDeviceProtocolService.prototype.getProtocolTypesMatchingDevice = function (device) {
            var matchingCfg = this.supportedDevicesCfgs.find(function (_a) {
                var match = _a.match;
                return match(device);
            });
            return matchingCfg ? matchingCfg.protocolTypes : [];
        };
        LpwanSetDeviceProtocolService.prototype.getExternalId = function (device) {
            return __awaiter(this, void 0, void 0, function () {
                var matchingCfg, externalIds, externalId;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            matchingCfg = this.supportedDevicesCfgs.find(function (_a) {
                                var match = _a.match;
                                return match(device);
                            });
                            return [4 /*yield*/, this.identityService.list(device.id)];
                        case 1:
                            externalIds = (_a.sent()).data;
                            externalId = externalIds.find(function (_a) {
                                var type = _a.type;
                                return matchingCfg.externalIdTypes.includes(type);
                            });
                            return [2 /*return*/, externalId ? externalId.externalId : null];
                    }
                });
            });
        };
LpwanSetDeviceProtocolService.ɵfac = function LpwanSetDeviceProtocolService_Factory(t) { return new (t || LpwanSetDeviceProtocolService)(ɵngcc0.ɵɵinject(ɵngcc1.InventoryService), ɵngcc0.ɵɵinject(ɵngcc1.FetchClient), ɵngcc0.ɵɵinject(ɵngcc1.IdentityService)); };
LpwanSetDeviceProtocolService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: LpwanSetDeviceProtocolService, factory: function (t) { return LpwanSetDeviceProtocolService.ɵfac(t); } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LpwanSetDeviceProtocolService, [{
        type: core.Injectable
    }], function () { return [{ type: ɵngcc1.InventoryService }, { type: ɵngcc1.FetchClient }, { type: ɵngcc1.IdentityService }]; }, null); })();
        return LpwanSetDeviceProtocolService;
    }());
    LpwanSetDeviceProtocolService.ctorParameters = function () { return [
        { type: client.InventoryService },
        { type: client.FetchClient },
        { type: client.IdentityService }
    ]; };

    var LpwanAssignDeviceProtocolComponent = /** @class */ (function () {
        function LpwanAssignDeviceProtocolComponent(lpwanService, alertService, router, inventoryService) {
            this.lpwanService = lpwanService;
            this.alertService = alertService;
            this.router = router;
            this.inventoryService = inventoryService;
            this.filterProtocols = rxjs.pipe();
            this.pattern = '';
        }
        LpwanAssignDeviceProtocolComponent.prototype.ngOnInit = function () {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.reload()];
                        case 1:
                            _a.sent();
                            this.setPipe('');
                            return [2 /*return*/];
                    }
                });
            });
        };
        LpwanAssignDeviceProtocolComponent.prototype.setPipe = function (filterStr) {
            var _this = this;
            this.pattern = filterStr;
            this.filterProtocols = rxjs.pipe(operators.map(function (protocols) { return protocols.filter(function (protocol) { return (!_this.currentProtocol || _this.currentProtocol.id !== protocol.id) &&
                (!filterStr || protocol.name.toLowerCase().indexOf(filterStr.toLowerCase()) > -1); }); }));
        };
        LpwanAssignDeviceProtocolComponent.prototype.reload = function () {
            return __awaiter(this, void 0, void 0, function () {
                var _a, _b, ex_1;
                return __generator(this, function (_c) {
                    switch (_c.label) {
                        case 0:
                            this.loading = true;
                            this.newProtocol = null;
                            _c.label = 1;
                        case 1:
                            _c.trys.push([1, 5, 6, 7]);
                            return [4 /*yield*/, this.loadDevice()];
                        case 2:
                            _c.sent();
                            _a = this;
                            return [4 /*yield*/, this.lpwanService.getAvailableProtocols(this.device)];
                        case 3:
                            _a.availableProtocols = _c.sent();
                            _b = this;
                            return [4 /*yield*/, this.lpwanService.getCurrentProtocol(this.device)];
                        case 4:
                            _b.currentProtocol = _c.sent();
                            return [3 /*break*/, 7];
                        case 5:
                            ex_1 = _c.sent();
                            this.alertService.addServerFailure(ex_1);
                            return [3 /*break*/, 7];
                        case 6:
                            this.loading = false;
                            return [7 /*endfinally*/];
                        case 7: return [2 /*return*/];
                    }
                });
            });
        };
        LpwanAssignDeviceProtocolComponent.prototype.loadDevice = function () {
            return __awaiter(this, void 0, void 0, function () {
                var deviceId, data;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            deviceId = this.router.routerState.snapshot.url.match(/\d+/)[0];
                            return [4 /*yield*/, this.inventoryService.detail(deviceId)];
                        case 1:
                            data = (_a.sent()).data;
                            this.device = data;
                            return [2 /*return*/];
                    }
                });
            });
        };
        LpwanAssignDeviceProtocolComponent.prototype.apply = function (selectedProtocol) {
            return __awaiter(this, void 0, void 0, function () {
                var moUpdated, ex_2;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            _a.trys.push([0, 3, , 4]);
                            return [4 /*yield*/, this.lpwanService.applyProtocol(this.device, selectedProtocol)];
                        case 1:
                            moUpdated = (_a.sent()).res.status === 200;
                            return [4 /*yield*/, this.reload()];
                        case 2:
                            _a.sent();
                            this.alertService.success(ngxComponents.gettext('Device protocol set.'));
                            this.lpwanSetDeviceProtocolForm.reset('dirty');
                            if (moUpdated) {
                                this.refreshCache();
                            }
                            return [3 /*break*/, 4];
                        case 3:
                            ex_2 = _a.sent();
                            this.alertService.danger(ngxComponents.gettext('Could not set device protocol.'));
                            return [3 /*break*/, 4];
                        case 4: return [2 /*return*/];
                    }
                });
            });
        };
        LpwanAssignDeviceProtocolComponent.prototype.refreshCache = function () {
            return __awaiter(this, void 0, void 0, function () {
                var ex_3;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            _a.trys.push([0, 2, , 3]);
                            return [4 /*yield*/, this.lpwanService.refreshCache(this.device)];
                        case 1:
                            _a.sent();
                            return [3 /*break*/, 3];
                        case 2:
                            ex_3 = _a.sent();
                            return [3 /*break*/, 3];
                        case 3: return [2 /*return*/];
                    }
                });
            });
        };
LpwanAssignDeviceProtocolComponent.ɵfac = function LpwanAssignDeviceProtocolComponent_Factory(t) { return new (t || LpwanAssignDeviceProtocolComponent)(ɵngcc0.ɵɵdirectiveInject(LpwanSetDeviceProtocolService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.AlertService), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Router), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.InventoryService)); };
LpwanAssignDeviceProtocolComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: LpwanAssignDeviceProtocolComponent, selectors: [["set-device-protocol"]], viewQuery: function LpwanAssignDeviceProtocolComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c0, 5);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.lpwanSetDeviceProtocolForm = _t.first);
    } }, decls: 18, vars: 12, consts: [["lpwanSetDeviceProtocolForm", "ngForm"], [1, "row"], [1, "col-md-6"], [1, "card", "card--fullpage"], [1, "card-header", "separator"], [1, "card-title"], [1, "p-16"], [4, "ngIf"], [1, "card-footer", "separator"], [1, "btn", "btn-primary", 3, "title", "disabled", "click"], [1, "form-group"], ["translate", ""], ["class", "form-control-static", 4, "ngIf"], ["name", "newProtocol", 3, "ngModel", "placeholder", "allowFreeEntries", "ngModelChange", "onSearch"], ["class", "p-l-8 p-r-8 c8y-list__item--link", 3, "click", 4, "c8yFor", "c8yForOf", "c8yForLoadMore", "c8yForPipe"], ["name", "notExisting", 3, "text"], [1, "form-control-static"], [1, "p-l-8", "p-r-8", "c8y-list__item--link", 3, "click"], [3, "text", "pattern"]], template: function LpwanAssignDeviceProtocolComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "form", null, 0);
        ɵngcc0.ɵɵelementStart(2, "div", 1);
        ɵngcc0.ɵɵelementStart(3, "div", 2);
        ɵngcc0.ɵɵelementStart(4, "div", 3);
        ɵngcc0.ɵɵelementStart(5, "div", 4);
        ɵngcc0.ɵɵelementStart(6, "h4", 5);
        ɵngcc0.ɵɵtext(7);
        ɵngcc0.ɵɵpipe(8, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(9, "div", 6);
        ɵngcc0.ɵɵtemplate(10, LpwanAssignDeviceProtocolComponent_div_10_Template, 2, 0, "div", 7);
        ɵngcc0.ɵɵtemplate(11, LpwanAssignDeviceProtocolComponent_div_11_Template, 13, 13, "div", 7);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(12, "div", 8);
        ɵngcc0.ɵɵelementStart(13, "button", 9);
        ɵngcc0.ɵɵlistener("click", function LpwanAssignDeviceProtocolComponent_Template_button_click_13_listener() { return ctx.apply(ctx.newProtocol); });
        ɵngcc0.ɵɵpipe(14, "translate");
        ɵngcc0.ɵɵtext(15);
        ɵngcc0.ɵɵpipe(16, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(17, "\n\u200C");
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(7);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(8, 6, "LPWAN device protocol"), " ");
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", ctx.loading);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.loading);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(14, 8, "Save"));
        ɵngcc0.ɵɵproperty("disabled", !ctx.newProtocol);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(16, 10, "Save"), " ");
    } }, directives: [ɵngcc4.ɵNgNoValidate, ɵngcc4.NgControlStatusGroup, ɵngcc4.NgForm, ɵngcc5.NgIf, ɵngcc2.LoadingComponent, ɵngcc2.C8yTranslateDirective, ɵngcc2.FormGroupComponent, ɵngcc2.TypeaheadComponent, ɵngcc4.NgControlStatus, ɵngcc4.NgModel, ɵngcc2.ForOfDirective, ɵngcc2.MessagesComponent, ɵngcc2.MessageDirective, ɵngcc2.ListItemComponent, ɵngcc2.HighlightComponent], pipes: [ɵngcc2.C8yTranslatePipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LpwanAssignDeviceProtocolComponent, [{
        type: core.Component,
        args: [{
                selector: 'set-device-protocol',
                template: "<form #lpwanSetDeviceProtocolForm=\"ngForm\">\n  <div class=\"row\">\n    <div class=\"col-md-6\">\n      <div class=\"card card--fullpage\">\n        <div class=\"card-header separator\">\n          <h4 class=\"card-title\">\n            {{ 'LPWAN device protocol' | translate }}\n          </h4>\n        </div>\n        <div class=\"p-16\">\n          <div *ngIf=\"loading\">\n            <c8y-loading></c8y-loading>\n          </div>\n\n          <div *ngIf=\"!loading\">\n            <div class=\"form-group\">\n              <label translate>Current device protocol</label>\n              <p class=\"form-control-static\" *ngIf=\"!currentProtocol\">\n                {{ device.type }}\n              </p>\n              <p class=\"form-control-static\" *ngIf=\"currentProtocol\">\n                {{ currentProtocol.name }}\n              </p>\n            </div>\n            <c8y-form-group>\n              <c8y-typeahead\n                [(ngModel)]=\"newProtocol\"\n                placeholder=\"{{ 'Select new device protocol' | translate }}\"\n                (onSearch)=\"setPipe($event)\"\n                name=\"newProtocol\"\n                [allowFreeEntries]=\"false\"\n              >\n                <c8y-li\n                  *c8yFor=\"\n                    let protocol of availableProtocols;\n                    loadMore: 'hidden';\n                    pipe: filterProtocols\n                  \"\n                  class=\"p-l-8 p-r-8 c8y-list__item--link\"\n                  (click)=\"newProtocol = protocol; setPipe('')\"\n                >\n                  <c8y-highlight [text]=\"protocol.name\" [pattern]=\"pattern\"></c8y-highlight>\n                </c8y-li>\n              </c8y-typeahead>\n              <c8y-messages\n                ><c8y-message\n                  name=\"notExisting\"\n                  [text]=\"'Select one of the protocols.' | translate\"\n                ></c8y-message>\n              </c8y-messages>\n            </c8y-form-group>\n          </div>\n        </div>\n        <div class=\"card-footer separator\">\n          <button\n            title=\"{{ 'Save' | translate }}\"\n            class=\"btn btn-primary\"\n            (click)=\"apply(newProtocol)\"\n            [disabled]=\"!newProtocol\"\n          >\n            {{ 'Save' | translate }}\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n\u200C"
            }]
    }], function () { return [{ type: LpwanSetDeviceProtocolService }, { type: ɵngcc2.AlertService }, { type: ɵngcc3.Router }, { type: ɵngcc1.InventoryService }]; }, { lpwanSetDeviceProtocolForm: [{
            type: core.ViewChild,
            args: ['lpwanSetDeviceProtocolForm', { static: false }]
        }] }); })();
        return LpwanAssignDeviceProtocolComponent;
    }());
    LpwanAssignDeviceProtocolComponent.ctorParameters = function () { return [
        { type: LpwanSetDeviceProtocolService },
        { type: ngxComponents.AlertService },
        { type: router.Router },
        { type: client.InventoryService }
    ]; };
    LpwanAssignDeviceProtocolComponent.propDecorators = {
        lpwanSetDeviceProtocolForm: [{ type: core.ViewChild, args: ['lpwanSetDeviceProtocolForm', { static: false },] }]
    };

    var LpwanAgentGuard = /** @class */ (function () {
        function LpwanAgentGuard(lpwanService) {
            this.lpwanService = lpwanService;
        }
        LpwanAgentGuard.prototype.canActivate = function (route) {
            var device = route.data.contextData || route.parent.data.contextData;
            return this.lpwanService.isSupportedDevice(device);
        };
LpwanAgentGuard.ɵfac = function LpwanAgentGuard_Factory(t) { return new (t || LpwanAgentGuard)(ɵngcc0.ɵɵinject(LpwanSetDeviceProtocolService)); };
LpwanAgentGuard.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: LpwanAgentGuard, factory: function (t) { return LpwanAgentGuard.ɵfac(t); } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LpwanAgentGuard, [{
        type: core.Injectable
    }], function () { return [{ type: LpwanSetDeviceProtocolService }]; }, null); })();
        return LpwanAgentGuard;
    }());
    LpwanAgentGuard.ctorParameters = function () { return [
        { type: LpwanSetDeviceProtocolService }
    ]; };

    var routes = [
        {
            context: ngxComponents.ViewContext.Device,
            path: 'assign-protocol',
            component: LpwanAssignDeviceProtocolComponent,
            label: ngxComponents.gettext('LPWAN'),
            icon: 'c8y-device-protocols',
            canActivate: [LpwanAgentGuard]
        }
    ];
    var ɵ0 = routes;
    var LpwanProtocolModule = /** @class */ (function () {
        function LpwanProtocolModule() {
        }
LpwanProtocolModule.ɵfac = function LpwanProtocolModule_Factory(t) { return new (t || LpwanProtocolModule)(); };
LpwanProtocolModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: LpwanProtocolModule });
LpwanProtocolModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [
        LpwanAgentGuard,
        LpwanSetDeviceProtocolService,
        {
            provide: ngxComponents.HOOK_ROUTE,
            useValue: ɵ0,
            multi: true
        }
    ], imports: [[
            ngxComponents.CoreModule,
            ngxComponents.FormsModule
        ]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LpwanProtocolModule, [{
        type: core.NgModule,
        args: [{
                declarations: [
                    LpwanAssignDeviceProtocolComponent
                ],
                imports: [
                    ngxComponents.CoreModule,
                    ngxComponents.FormsModule
                ],
                entryComponents: [LpwanAssignDeviceProtocolComponent],
                providers: [
                    LpwanAgentGuard,
                    LpwanSetDeviceProtocolService,
                    {
                        provide: ngxComponents.HOOK_ROUTE,
                        useValue: ɵ0,
                        multi: true
                    }
                ]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(LpwanProtocolModule, { declarations: [LpwanAssignDeviceProtocolComponent], imports: [ɵngcc2.CoreModule, ɵngcc2.FormsModule] }); })();
        return LpwanProtocolModule;
    }());

    /**
     * Generated bundle index. Do not edit.
     */

    exports.LpwanAssignDeviceProtocolComponent = LpwanAssignDeviceProtocolComponent;
    exports.LpwanProtocolModule = LpwanProtocolModule;
    exports["ɵ0"] = ɵ0;
    exports["ɵa"] = LpwanSetDeviceProtocolService;
    exports["ɵb"] = LpwanAgentGuard;

    Object.defineProperty(exports, '__esModule', { value: true });

}));

//# sourceMappingURL=c8y-ngx-components-protocol-lpwan.umd.js.map