(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/router'), require('@c8y/ngx-components'), require('@c8y/ngx-components/operations/bulk-operations-service')) :
    typeof define === 'function' && define.amd ? define('@c8y/ngx-components/operations/bulk-operations-stepper-container', ['exports', '@angular/core', '@angular/router', '@c8y/ngx-components', '@c8y/ngx-components/operations/bulk-operations-service'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.c8y = global.c8y || {}, global.c8y["ngx-components"] = global.c8y["ngx-components"] || {}, global.c8y["ngx-components"].operations = global.c8y["ngx-components"].operations || {}, global.c8y["ngx-components"].operations["bulk-operations-stepper-container"] = {}), global.ng.core, global.ng.router, global.c8y["ngx-components"], global.c8y["ngx-components"].operations["bulk-operations-service"]));
})(this, (function (exports, core, router, ngxComponents, bulkOperationsService) { 'use strict';

    var BulkOperationsStepperContainerComponent = /** @class */ (function () {
        function BulkOperationsStepperContainerComponent(activatedRoute, bulkOpsService, resolver, changeDetector) {
            this.activatedRoute = activatedRoute;
            this.bulkOpsService = bulkOpsService;
            this.resolver = resolver;
            this.changeDetector = changeDetector;
        }
        BulkOperationsStepperContainerComponent.prototype.ngOnInit = function () {
            var _this = this;
            this.activatedRoute.params.subscribe(function (params) {
                if (params && params.type) {
                    _this.bulkOperationType = params.type;
                    _this.component = _this.bulkOpsService
                        .getBulkTypes()
                        .find(function (element) { return element.path.includes(_this.bulkOperationType); }).component;
                    _this.changeDetector.detectChanges();
                    _this.createComponent(_this.component);
                }
            });
        };
        BulkOperationsStepperContainerComponent.prototype.createComponent = function (component) {
            if (component) {
                var factory = this.resolver.resolveComponentFactory(component);
                this.container.createComponent(factory);
            }
        };
        return BulkOperationsStepperContainerComponent;
    }());
    BulkOperationsStepperContainerComponent.decorators = [
        { type: core.Component, args: [{
                    selector: 'bulk-operations-stepper-container',
                    template: "<c8y-title>{{ 'New bulk operation' | translate }}</c8y-title>\n<div class=\"card card--grid--fullpage\">\n  <div class=\"d-contents\">\n    <template #container></template>\n  </div>\n</div>\n"
                },] }
    ];
    BulkOperationsStepperContainerComponent.ctorParameters = function () { return [
        { type: router.ActivatedRoute },
        { type: bulkOperationsService.BulkOperationsService },
        { type: core.ComponentFactoryResolver },
        { type: core.ChangeDetectorRef }
    ]; };
    BulkOperationsStepperContainerComponent.propDecorators = {
        container: [{ type: core.ViewChild, args: ['container', { static: false, read: core.ViewContainerRef },] }]
    };

    var bulkOperatioStepperRoutes = [
        {
            path: 'devicecontrol/bulk/creation/:type',
            component: BulkOperationsStepperContainerComponent
        }
    ];
    /**
     * Container module for the new bulk operation steppers. Use this module in your application
     * to provide a step by step guided process for scheduling of bulk operations.
     * The module reads the bulk operation type from the URL and displays the corresponding stepper.
     * You can provide stepper for your custom bulk operation type by registering it with the
     * HOOK_LIST_BULK_TYPE injection token.
     */
    var BulkOperationsStepperContainerModule = /** @class */ (function () {
        function BulkOperationsStepperContainerModule() {
        }
        return BulkOperationsStepperContainerModule;
    }());
    BulkOperationsStepperContainerModule.decorators = [
        { type: core.NgModule, args: [{
                    declarations: [BulkOperationsStepperContainerComponent],
                    imports: [ngxComponents.CoreModule, router.RouterModule.forChild(bulkOperatioStepperRoutes)],
                    entryComponents: [BulkOperationsStepperContainerComponent]
                },] }
    ];

    /**
     * Generated bundle index. Do not edit.
     */

    exports.BulkOperationsStepperContainerComponent = BulkOperationsStepperContainerComponent;
    exports.BulkOperationsStepperContainerModule = BulkOperationsStepperContainerModule;
    exports.bulkOperatioStepperRoutes = bulkOperatioStepperRoutes;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=c8y-ngx-components-operations-bulk-operations-stepper-container.umd.js.map
