(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(require('@angular/core'),require('@c8y/client'),require('@c8y/ngx-components/api'),require('@c8y/ngx-components'),require('@ngx-translate/core'),require('@angular/common'),require('ngx-bootstrap/collapse'),require('ngx-bootstrap/dropdown'),exports, require('@c8y/ngx-components'), require('lodash-es'), require('rxjs'), require('@angular/core'), require('@c8y/client'), require('@c8y/ngx-components/api'), require('rxjs/operators'), require('@c8y/client'), require('@c8y/client'), require('ngx-bootstrap/collapse'), require('ngx-bootstrap/dropdown'), require('@ngx-translate/core')) :
    typeof define === 'function' && define.amd ? define('@c8y/ngx-components/assets-navigator', ['@angular/core','@c8y/client','@c8y/ngx-components/api','@c8y/ngx-components','@ngx-translate/core','@angular/common','ngx-bootstrap/collapse','ngx-bootstrap/dropdown','exports', '@c8y/ngx-components', 'lodash-es', 'rxjs', '@angular/core', '@c8y/client', '@c8y/ngx-components/api', 'rxjs/operators', '@c8y/client', '@c8y/client', 'ngx-bootstrap/collapse', 'ngx-bootstrap/dropdown', '@ngx-translate/core'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.ng.core,global.c8y.client,global.c8y.ngxComponents.api,global.c8y.ngxComponents,global.ngxTranslate.core,global.ng.common,global.ngxBootstrap.collapse,global.ngxBootstrap.dropdown,(global.c8y = global.c8y || {}, global.c8y["ngx-components"] = global.c8y["ngx-components"] || {}, global.c8y["ngx-components"]["assets-navigator"] = {}), global.c8y["ngx-components"], global.lodashEs, global.rxjs, global.ng.core, global.client, global.c8y["ngx-components"].api, global.rxjs.operators, global.i1, global.i5, global.collapse, global.dropdown, global.core));
})(this, (function (ɵngcc0,ɵngcc1,ɵngcc2,ɵngcc3,ɵngcc4,ɵngcc5,ɵngcc6,ɵngcc7,exports, i4, lodashEs, rxjs, i0, client, i3, operators, i1, i5, collapse, dropdown, core) { 
function AssetSelectorNodeComponent_div_0_i_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "i", 13);
    ɵngcc0.ɵɵpipe(1, "translate");
} if (rf & 2) {
    var ctx_r2 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("c8yIcon", ctx_r2.node.icon)("title", ɵngcc0.ɵɵpipeBind1(1, 2, "Smart group"));
} }
function AssetSelectorNodeComponent_div_0_i_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "i", 13);
    ɵngcc0.ɵɵpipe(1, "translate");
} if (rf & 2) {
    var ctx_r3 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("c8yIcon", ctx_r3.node.icon)("title", ɵngcc0.ɵɵpipeBind1(1, 2, "Group"));
} }
function AssetSelectorNodeComponent_div_0_p_12_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "p", 14);
    ɵngcc0.ɵɵelementStart(1, "small", 15);
    ɵngcc0.ɵɵelementStart(2, "em");
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r4 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("title", ctx_r4.breadcrumb);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r4.breadcrumb);
} }
var _c0 = function (a0) { return { "expanded separator-top": a0 }; };
var _c1 = function (a0) { return { "padding-left": a0 }; };
var _c2 = function (a0) { return { "text-primary": a0 }; };
function AssetSelectorNodeComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    var _r6 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 3);
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵelementStart(2, "div", 4);
    ɵngcc0.ɵɵelementStart(3, "label", 5);
    ɵngcc0.ɵɵelementStart(4, "input", 6);
    ɵngcc0.ɵɵlistener("change", function AssetSelectorNodeComponent_div_0_Template_input_change_4_listener() { ɵngcc0.ɵɵrestoreView(_r6); var ctx_r5 = ɵngcc0.ɵɵnextContext(); return ctx_r5.selected(ctx_r5.node); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(5, "span");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(6, "div", 7);
    ɵngcc0.ɵɵlistener("click", function AssetSelectorNodeComponent_div_0_Template_div_click_6_listener() { ɵngcc0.ɵɵrestoreView(_r6); var ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7.node.routerLinkExact ? ctx_r7.node.click() : ""; });
    ɵngcc0.ɵɵtemplate(7, AssetSelectorNodeComponent_div_0_i_7_Template, 2, 4, "i", 8);
    ɵngcc0.ɵɵtemplate(8, AssetSelectorNodeComponent_div_0_i_8_Template, 2, 4, "i", 8);
    ɵngcc0.ɵɵelementStart(9, "span", 9);
    ɵngcc0.ɵɵtext(10);
    ɵngcc0.ɵɵpipe(11, "translate");
    ɵngcc0.ɵɵtemplate(12, AssetSelectorNodeComponent_div_0_p_12_Template, 4, 2, "p", 10);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(13, "div");
    ɵngcc0.ɵɵelementStart(14, "button", 11);
    ɵngcc0.ɵɵlistener("click", function AssetSelectorNodeComponent_div_0_Template_button_click_14_listener() { ɵngcc0.ɵɵrestoreView(_r6); var ctx_r8 = ɵngcc0.ɵɵnextContext(); return ctx_r8.click(); });
    ɵngcc0.ɵɵelement(15, "i", 12);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(1, 16, ctx_r0.breadcrumb));
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(20, _c0, ctx_r0.node.open));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵstyleProp("visibility", ctx_r0.node.routerLinkExact ? "hidden" : "visible");
    ɵngcc0.ɵɵproperty("ngStyle", ɵngcc0.ɵɵpureFunction1(22, _c1, ctx_r0.level < 6 ? (ctx_r0.level - 1) * 8 + "px" : "24px"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("checked", ctx_r0.checked);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵstyleProp("cursor", ctx_r0.node.routerLinkExact ? "pointer" : "normal");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.node.icon === "c8y-group-smart");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.node.icon !== "c8y-group-smart");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("title", ctx_r0.breadcrumb);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(11, 18, ctx_r0.node.label), " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.showPath);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("title", ctx_r0.expandTitle);
    ɵngcc0.ɵɵattribute("aria-expanded", !ctx_r0.node.open);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(24, _c2, ctx_r0.node.open));
} }
var _c3 = function () { return []; };
function AssetSelectorNodeComponent_c8y_asset_selector_node_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "c8y-asset-selector-node", 16);
} if (rf & 2) {
    var childNode_r9 = ctx.$implicit;
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("node", childNode_r9)("preselected", ctx_r1.preselected || ɵngcc0.ɵɵpureFunction0(2, _c3));
} }
var _c4 = function (a0) { return { "separator-bottom": a0 }; };
'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i4__namespace = /*#__PURE__*/_interopNamespace(i4);
    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i3__namespace = /*#__PURE__*/_interopNamespace(i3);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);
    var i5__namespace = /*#__PURE__*/_interopNamespace(i5);

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    /** @deprecated */
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    /** @deprecated */
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    function __spreadArray(to, from, pack) {
        if (pack || arguments.length === 2)
            for (var i = 0, l = from.length, ar; i < l; i++) {
                if (ar || !(i in from)) {
                    if (!ar)
                        ar = Array.prototype.slice.call(from, 0, i);
                    ar[i] = from[i];
                }
            }
        return to.concat(ar || Array.prototype.slice.call(from));
    }
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, state, kind, f) {
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    }
    function __classPrivateFieldSet(receiver, state, value, kind, f) {
        if (kind === "m")
            throw new TypeError("Private method is not writable");
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    }

    exports.Action = void 0;
    (function (Action) {
        Action[Action["FETCH"] = 0] = "FETCH";
        Action[Action["NEXT"] = 1] = "NEXT";
        Action[Action["REFRESH"] = 2] = "REFRESH";
        Action[Action["LOADING_DONE"] = 3] = "LOADING_DONE";
    })(exports.Action || (exports.Action = {}));

    exports.GroupFragment = void 0;
    (function (GroupFragment) {
        GroupFragment["groupType"] = "c8y_DeviceGroup";
        GroupFragment["subGroupType"] = "c8y_DeviceSubgroup";
        GroupFragment["groupFragmentType"] = "c8y_IsDeviceGroup";
        GroupFragment["dataBrokerSourceFragment"] = "c8y_BrokerSource";
        GroupFragment["dynamicGroupType"] = "c8y_DynamicGroup";
        GroupFragment["dynamicGroupFragment"] = "c8y_IsDynamicGroup";
        GroupFragment["dynamicGroupColumnConfig"] = "c8y_UIDeviceFilterConfig";
        GroupFragment["dynamicGroupQueryString"] = "c8y_DeviceQueryString";
    })(exports.GroupFragment || (exports.GroupFragment = {}));

    var LoadMoreNode = /** @class */ (function (_super) {
        __extends(LoadMoreNode, _super);
        function LoadMoreNode() {
            var _this = _super.call(this) || this;
            _this.label = i4.gettext('Load more');
            _this.icon = 'plus';
            _this.droppable = true;
            _this.priority = -Infinity;
            return _this;
        }
        return LoadMoreNode;
    }(i4.NavigatorNode));

    var AssetNode = /** @class */ (function (_super_1) {
        __extends(AssetNode, _super_1);
        function AssetNode(service, config) {
            if (config === void 0) { config = {}; }
            var _this = _super_1.call(this, config) || this;
            _this.service = service;
            _this.config = config;
            _this.root = _this.root || false;
            _this.mo = _this.mo || {};
            _this.path = _this.getPath();
            _this.draggable = !_this.service.moduleConfig.disableDragAndDrop && !_this.root;
            _this.droppable =
                !_this.service.moduleConfig.disableDragAndDrop && !_this.isDeviceOrProbablyChildDevice;
            _this.routerLinkExact = _this.root;
            _this.updateIcon(false);
            _this.onUpdateSubscription = _this.service
                .onUpdate(_this)
                .subscribe(function (_a) {
                var data = _a.data, method = _a.method;
                return _this.refresh(data, method);
            });
            _this.setLabel();
            _this.iconComponent = _this.isDeviceOrProbablyChildDevice ? i4.DeviceStatusComponent : undefined;
            return _this;
        }
        Object.defineProperty(AssetNode.prototype, "hasChildren", {
            get: function () {
                return this.root || this.service.groups.isGroup(this.mo);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AssetNode.prototype, "isDevice", {
            get: function () {
                return !!this.mo.c8y_IsDevice;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AssetNode.prototype, "isDeviceOrProbablyChildDevice", {
            get: function () {
                return this.isDevice || this.isNeitherDeviceOrGroup;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AssetNode.prototype, "isNeitherDeviceOrGroup", {
            get: function () {
                var _a = this.service.groups, isGroup = _a.isGroup, isDynamicGroup = _a.isDynamicGroup;
                return !isGroup(this.mo) && !isDynamicGroup(this.mo) && !this.isDevice && !this.root;
            },
            enumerable: false,
            configurable: true
        });
        AssetNode.prototype.getPath = function () {
            if (this.config.path) {
                return this.config.path;
            }
            return this.root
                ? 'group'
                : this.isDeviceOrProbablyChildDevice
                    ? "device/" + this.mo.id
                    : "group/" + this.mo.id;
        };
        AssetNode.prototype.openOnStart = function (url) {
            var urlRegex = /^\/group\//;
            if (this.root) {
                if (this.service.moduleConfig.openOnStart || urlRegex.test(url)) {
                    return true;
                }
            }
            var matches = url.match(/\/(group)\/(\d+)/);
            var isMatch = false;
            if (matches) {
                var id_1 = matches[2];
                isMatch = []
                    .concat(lodashEs.get(this.mo, 'childAssets.references', []))
                    .some(function (_a) {
                    var managedObject = _a.managedObject;
                    return managedObject.id === id_1;
                });
                return isMatch;
            }
            return false;
        };
        AssetNode.prototype.refresh = function (mo, method) {
            if (mo === void 0) { mo = {}; }
            if (method === void 0) { method = 'GET'; }
            if (mo.id === this.mo.id) {
                this.mo = mo;
                this.setLabel();
            }
            else if (method === 'DELETE') {
                this.parents.forEach(function (node) { return node.refresh(); });
                return;
            }
            if (this.events) {
                this.events.next(exports.Action.REFRESH);
            }
        };
        AssetNode.prototype.setLabel = function () {
            this.label = this.config.label || (this.root && i4.gettext('Groups')) || this.mo.name || '--';
        };
        AssetNode.prototype.click = function (options) {
            if (options === void 0) { options = {}; }
            if (this.isDeviceOrProbablyChildDevice) {
                this.service.preferBreadcrumb(this.parents);
                return;
            }
            this.hookEvents();
            this.updateIcon(options.open);
            if (options.open) {
                this.events.next(exports.Action.FETCH);
            }
        };
        AssetNode.prototype.sort = function () {
            this.children.sort(function (a, b) {
                if (a.priority > b.priority) {
                    return -1;
                }
                else if (a.priority < b.priority) {
                    return 1;
                }
                else {
                    return 0;
                }
            });
        };
        AssetNode.prototype.addManagedObject = function (mo) {
            var childAdditions = this.mo.childAdditions;
            if (!this.isChildAddition(childAdditions, mo)) {
                this.add(this.service.createChildNode(mo));
            }
        };
        AssetNode.prototype.isChildAddition = function (childAdditions, mo) {
            return (childAdditions && childAdditions.references.some(function (_a) {
                var id = _a.managedObject.id;
                return id === mo.id;
            }));
        };
        AssetNode.prototype.destroy = function () {
            this.onUpdateSubscription.unsubscribe();
        };
        Object.defineProperty(AssetNode.prototype, "canDrop", {
            get: function () {
                var _this = this;
                var nodeToMove = this.service.draggedData;
                if (nodeToMove) {
                    var shouldGetChildOfItsOwn = !!nodeToMove.find(function (child) { return child === _this; });
                    var isAlreadyChild = this.children.some(function (child) { return child.mo && child.mo.id === nodeToMove.mo.id; });
                    var preventMove = this === nodeToMove || shouldGetChildOfItsOwn || isAlreadyChild;
                    return this.droppable && !preventMove;
                }
                return this.droppable;
            },
            enumerable: false,
            configurable: true
        });
        AssetNode.prototype.dragStart = function ($event) {
            _super_1.prototype.dragStart.call(this, $event);
            this.service.draggedData = this;
            this.service.rootNode.droppable = !this.isDeviceOrProbablyChildDevice;
        };
        AssetNode.prototype.dragEnd = function ($event) {
            _super_1.prototype.dragEnd.call(this, $event);
        };
        AssetNode.prototype.drop = function ($event) {
            var _super = Object.create(null, {
                drop: { get: function () { return _super_1.prototype.drop; } }
            });
            return __awaiter(this, void 0, void 0, function () {
                var nodeToMove;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            _super.drop.call(this, $event);
                            nodeToMove = this.service.draggedData;
                            if (!this.canDrop) return [3 /*break*/, 2];
                            return [4 /*yield*/, this.moveNode(nodeToMove)];
                        case 1:
                            _a.sent();
                            return [3 /*break*/, 3];
                        case 2:
                            this.draggedHover = false;
                            this.service.draggedData = undefined;
                            _a.label = 3;
                        case 3: return [2 /*return*/];
                    }
                });
            });
        };
        AssetNode.prototype.hookEvents = function () {
            var _this = this;
            if (!this.events) {
                this.events = new rxjs.Subject();
                this.events.subscribe(function (evt) {
                    if (!_this.loading) {
                        _this.handleEvent(evt);
                    }
                });
            }
        };
        AssetNode.prototype.fetch = function () {
            return this.root ? this.service.getRootNodes() : this.service.getGroupItems(this.mo.id);
        };
        AssetNode.prototype.handleEvent = function (evt) {
            return __awaiter(this, void 0, void 0, function () {
                var _a, _b;
                return __generator(this, function (_c) {
                    switch (_c.label) {
                        case 0:
                            if (!(!this.children.length && evt === exports.Action.FETCH)) return [3 /*break*/, 2];
                            this.loading = true;
                            _a = this.addNodes;
                            return [4 /*yield*/, this.fetch()];
                        case 1:
                            _a.apply(this, [_c.sent()]);
                            this.loading = false;
                            return [3 /*break*/, 5];
                        case 2:
                            if (!(evt === exports.Action.NEXT)) return [3 /*break*/, 4];
                            this.loadMoreNode.loading = true;
                            _b = this.addNodes;
                            return [4 /*yield*/, this.paging.next()];
                        case 3:
                            _b.apply(this, [_c.sent()]);
                            this.loadMoreNode.loading = false;
                            return [3 /*break*/, 5];
                        case 4:
                            if (evt === exports.Action.REFRESH) {
                                this.loading = false;
                                this.paging = undefined;
                                this.loadMoreNode = undefined;
                                this.empty();
                                this.events.next(exports.Action.FETCH);
                            }
                            _c.label = 5;
                        case 5: return [2 /*return*/];
                    }
                });
            });
        };
        AssetNode.prototype.addNodes = function (res) {
            var _this = this;
            if (res.paging) {
                var _a = (this.paging = res.paging), currentPage = _a.currentPage, nextPage = _a.nextPage, pageSize = _a.pageSize;
                if (currentPage === 1) {
                    this.empty();
                }
                var itemsCount = res.data.length;
                var moreItemsAvailable = !!nextPage && itemsCount === pageSize;
                this.toggleLoadMore(moreItemsAvailable);
            }
            (res.data || res).map(function (mo) { return _this.addManagedObject(mo); });
            this.events.next(exports.Action.LOADING_DONE);
        };
        AssetNode.prototype.toggleLoadMore = function (show) {
            var _this = this;
            if (!this.loadMoreNode && show) {
                this.loadMoreNode = new LoadMoreNode();
                this.add(this.loadMoreNode);
                this.loadMoreNode.click = lodashEs.debounce(function () { return _this.events.next(exports.Action.NEXT); }, 300, { leading: true, trailing: false });
            }
            if (this.loadMoreNode) {
                this.loadMoreNode.hidden = !show;
            }
        };
        AssetNode.prototype.moveNode = function (nodeToMove) {
            return __awaiter(this, void 0, void 0, function () {
                var isCopy, ex_1;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            _a.trys.push([0, 6, 7, 8]);
                            return [4 /*yield*/, this.showDropConfirm(nodeToMove)];
                        case 1:
                            isCopy = _a.sent();
                            return [4 /*yield*/, this.verifyNodeAccess(nodeToMove)];
                        case 2:
                            _a.sent();
                            return [4 /*yield*/, this.addMovedNode(nodeToMove)];
                        case 3:
                            _a.sent();
                            if (!!isCopy) return [3 /*break*/, 5];
                            return [4 /*yield*/, this.removeMovedNode(nodeToMove)];
                        case 4:
                            _a.sent();
                            _a.label = 5;
                        case 5:
                            this.expand();
                            return [3 /*break*/, 8];
                        case 6:
                            ex_1 = _a.sent();
                            if (ex_1) {
                                this.service.alert.addServerFailure(ex_1);
                            }
                            return [3 /*break*/, 8];
                        case 7:
                            this.draggedHover = false;
                            this.service.draggedData = undefined;
                            return [7 /*endfinally*/];
                        case 8: return [2 /*return*/];
                    }
                });
            });
        };
        AssetNode.prototype.showDropConfirm = function (nodeToMove) {
            return __awaiter(this, void 0, void 0, function () {
                var buttons;
                return __generator(this, function (_a) {
                    this.confirm.title = i4.gettext('Move');
                    this.confirm.message = i4.gettext('Do you want to move the group?');
                    buttons = [
                        {
                            label: i4.gettext('Cancel'),
                            action: function () { return Promise.reject(); }
                        },
                        {
                            label: i4.gettext('Move'),
                            status: 'default',
                            action: function () { return Promise.resolve(false); }
                        }
                    ];
                    if (nodeToMove.isDeviceOrProbablyChildDevice) {
                        this.confirm.title = i4.gettext('Move or add');
                        this.confirm.message = i4.gettext('Do you want to move or add the device?');
                        buttons.push({
                            label: i4.gettext('Add'),
                            status: 'primary',
                            action: function () { return Promise.resolve(true); }
                        });
                    }
                    return [2 /*return*/, this.confirm.show(buttons)];
                });
            });
        };
        AssetNode.prototype.verifyNodeAccess = function (nodeToMove) {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    return [2 /*return*/, this.service.inventory.update({ id: nodeToMove.mo.id })];
                });
            });
        };
        AssetNode.prototype.addMovedNode = function (nodeToMove) {
            return __awaiter(this, void 0, void 0, function () {
                var mo, data, data;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            if (!this.root) return [3 /*break*/, 2];
                            return [4 /*yield*/, this.service.inventory.update({
                                    id: nodeToMove.mo.id,
                                    type: exports.GroupFragment.groupType
                                })];
                        case 1:
                            data = (_a.sent()).data;
                            mo = data;
                            return [3 /*break*/, 4];
                        case 2: return [4 /*yield*/, this.service.inventory.childAssetsAdd(nodeToMove.mo, this.mo)];
                        case 3:
                            data = (_a.sent()).data;
                            mo = data;
                            _a.label = 4;
                        case 4:
                            this.addManagedObject(mo);
                            return [2 /*return*/];
                    }
                });
            });
        };
        AssetNode.prototype.removeMovedNode = function (nodeToMove) {
            return __awaiter(this, void 0, void 0, function () {
                var _a, _b, parent, e_1_1;
                var e_1, _c;
                return __generator(this, function (_d) {
                    switch (_d.label) {
                        case 0:
                            _d.trys.push([0, 8, 9, 10]);
                            _a = __values(nodeToMove.parents), _b = _a.next();
                            _d.label = 1;
                        case 1:
                            if (!!_b.done) return [3 /*break*/, 7];
                            parent = _b.value;
                            if (parent.mo && parent.mo.type === exports.GroupFragment.dynamicGroupType) {
                                return [3 /*break*/, 7]; // smart groups don't need to be changed
                            }
                            if (!parent.root) return [3 /*break*/, 3];
                            return [4 /*yield*/, this.service.inventory.update({
                                    id: nodeToMove.mo.id,
                                    type: exports.GroupFragment.subGroupType
                                })];
                        case 2:
                            _d.sent();
                            return [3 /*break*/, 5];
                        case 3: return [4 /*yield*/, this.service.inventory.childAssetsRemove(nodeToMove.mo, parent.mo)];
                        case 4:
                            _d.sent();
                            _d.label = 5;
                        case 5:
                            parent.remove(nodeToMove);
                            _d.label = 6;
                        case 6:
                            _b = _a.next();
                            return [3 /*break*/, 1];
                        case 7: return [3 /*break*/, 10];
                        case 8:
                            e_1_1 = _d.sent();
                            e_1 = { error: e_1_1 };
                            return [3 /*break*/, 10];
                        case 9:
                            try {
                                if (_b && !_b.done && (_c = _a.return)) _c.call(_a);
                            }
                            finally { if (e_1) throw e_1.error; }
                            return [7 /*endfinally*/];
                        case 10: return [2 /*return*/];
                    }
                });
            });
        };
        AssetNode.prototype.updateIcon = function (open) {
            var _a = this.config, icon = _a.icon, iconOpen = _a.iconOpen;
            if (icon && iconOpen) {
                this.icon = open ? icon : iconOpen;
            }
            else {
                this.icon = this.service.groups.icon(
                // if it's root we are going to pass a fake mo to get the same icon as groups
                this.root ? { type: exports.GroupFragment.groupType } : this.mo, open);
            }
        };
        return AssetNode;
    }(i4.NavigatorNode));

    var DynamicGroupNode = /** @class */ (function (_super) {
        __extends(DynamicGroupNode, _super);
        function DynamicGroupNode(service, config) {
            if (config === void 0) { config = {}; }
            var _this = _super.call(this, service, config) || this;
            _this.service = service;
            _this.draggable = false;
            _this.droppable = false;
            return _this;
        }
        Object.defineProperty(DynamicGroupNode.prototype, "hasChildren", {
            get: function () {
                return true;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DynamicGroupNode.prototype, "query", {
            get: function () {
                return this.mo.c8y_DeviceQueryString;
            },
            enumerable: false,
            configurable: true
        });
        DynamicGroupNode.prototype.fetch = function () {
            return this.service.getDynamicGroupItems(this.query);
        };
        return DynamicGroupNode;
    }(AssetNode));

    var ASSET_NAVIGATOR_CONFIG = new i0.InjectionToken('AssetNodeConfig');

    var DeviceGroupService = /** @class */ (function () {
        function DeviceGroupService() {
            this.icons = {
                brokerSourceInactive: {
                    icon: 'c8y-group-remote-inactive'
                },
                brokerSource: {
                    icon: 'c8y-group-remote',
                    iconOpen: 'c8y-group-remote-open'
                },
                group: {
                    icon: 'c8y-group',
                    iconOpen: 'c8y-group-open'
                },
                dynamicGroup: {
                    icon: 'c8y-group-smart',
                    iconOpen: 'c8y-group-smart-open'
                },
                other: {
                    icon: 'circle',
                    iconClass: 'statusUnknown'
                }
            };
            this.dataBrokerSourceFragmentInactive = "_" + exports.GroupFragment.dataBrokerSourceFragment;
        }
        DeviceGroupService.prototype.isGroup = function (mo) {
            return (!!mo[exports.GroupFragment.groupFragmentType] ||
                mo.type === exports.GroupFragment.groupType ||
                mo.type === exports.GroupFragment.subGroupType);
        };
        DeviceGroupService.prototype.isDynamicGroup = function (mo) {
            return !!mo[exports.GroupFragment.dynamicGroupFragment] || mo.type === exports.GroupFragment.dynamicGroupType;
        };
        DeviceGroupService.prototype.isDataBroker = function (mo) {
            return (!!mo[exports.GroupFragment.dataBrokerSourceFragment] || !!mo[this.dataBrokerSourceFragmentInactive]);
        };
        DeviceGroupService.prototype.isDataBrokerActive = function (mo) {
            return (!!mo[exports.GroupFragment.dataBrokerSourceFragment] && !mo[this.dataBrokerSourceFragmentInactive]);
        };
        DeviceGroupService.prototype.isDevice = function (mo) {
            return !!mo.c8y_IsDevice;
        };
        DeviceGroupService.prototype.icon = function (mo, open) {
            if (open === void 0) { open = false; }
            var type = 'other';
            if (this.isDynamicGroup(mo)) {
                type = 'dynamicGroup';
            }
            else if (this.isDataBrokerActive(mo)) {
                type = 'brokerSource';
            }
            else if (this.isDataBroker(mo)) {
                type = 'brokerSourceInactive';
            }
            else if (this.isGroup(mo)) {
                type = 'group';
            }
            var icon = this.icons[type];
            return (open && icon.iconOpen) || icon.icon;
        };
        DeviceGroupService.prototype.isAnyGroup = function (mo) {
            return (this.isGroup(mo) ||
                this.isDynamicGroup(mo) ||
                this.isDataBroker(mo) ||
                this.isDataBrokerActive(mo));
        };
DeviceGroupService.ɵfac = function DeviceGroupService_Factory(t) { return new (t || DeviceGroupService)(); };
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DeviceGroupService, [{
        type: i0.Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return []; }, null); })();
        return DeviceGroupService;
    }());
    DeviceGroupService.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function DeviceGroupService_Factory() { return new DeviceGroupService(); }, token: DeviceGroupService, providedIn: "root" });

    var AssetNodeService = /** @class */ (function () {
        function AssetNodeService(inventory, groups, apiService, modal, alert, breadcrumbService, user, appState, moduleConfig) {
            this.inventory = inventory;
            this.groups = groups;
            this.apiService = apiService;
            this.modal = modal;
            this.alert = alert;
            this.breadcrumbService = breadcrumbService;
            this.user = user;
            this.appState = appState;
            this.moduleConfig = moduleConfig;
            this.firstUrl = true;
            this.PAGE_SIZE = 20;
            this.moduleConfig = Object.assign({ rootNodePriority: 2000 }, (moduleConfig || {}));
            this.queriesUtil = new client.QueriesUtil();
        }
        AssetNodeService.prototype.createRootNode = function (config) {
            if (config === void 0) { config = {}; }
            this.rootNode = this.createAssetNode(Object.assign(Object.assign({ root: true }, config), { priority: this.moduleConfig.rootNodePriority }));
            return this.rootNode;
        };
        AssetNodeService.prototype.createDynamicGroupNode = function (config) {
            return new DynamicGroupNode(this, config);
        };
        AssetNodeService.prototype.createAssetNode = function (config) {
            return new AssetNode(this, config);
        };
        AssetNodeService.prototype.createChildNode = function (managedObject) {
            var type = managedObject.type;
            var config = { mo: managedObject };
            if (type === exports.GroupFragment.dynamicGroupType) {
                return this.createDynamicGroupNode(config);
            }
            return this.createAssetNode(config);
        };
        AssetNodeService.prototype.getRootNodes = function (customFilter) {
            var defaultFilter = {
                pageSize: this.PAGE_SIZE,
                withChildren: false,
                query: this.queriesUtil.buildQuery(this.navRootQueryFilter())
            };
            var groupFilter = customFilter ? customFilter : defaultFilter;
            // due to BE performance limitations we do not allow filtering and sorting for a user without inventory roles
            if (!this.user.hasRole(this.appState.currentUser.value, 'ROLE_INVENTORY_READ')) {
                delete groupFilter.query;
                Object.assign(groupFilter, {
                    fragmentType: exports.GroupFragment.groupFragmentType,
                    onlyRoots: true
                });
            }
            return this.inventory.list(this.createFilter(groupFilter));
        };
        AssetNodeService.prototype.getGroupItems = function (moId, extraFilter) {
            if (extraFilter === void 0) { extraFilter = {}; }
            var queryFilter = {
                withChildren: false,
                pageSize: this.PAGE_SIZE,
                query: this.groupQueryFilter(moId)
            };
            return this.inventory.childAssetsList(moId, Object.assign(Object.assign({}, queryFilter), extraFilter));
        };
        AssetNodeService.prototype.getDynamicGroupItems = function (groupQuery, filterObj) {
            if (filterObj === void 0) { filterObj = {}; }
            var query = filterObj.query, queryParams = __rest(filterObj, ["query"]);
            var orderByQuery = query;
            var queryFilter = Object.assign({ q: this.buildCombinedQuery(groupQuery, orderByQuery) }, queryParams);
            return this.inventory.list(this.createFilter(queryFilter));
        };
        AssetNodeService.prototype.getDeviceChildren = function (moId, extraFilter) {
            if (extraFilter === void 0) { extraFilter = {}; }
            var queryFilter = {
                withChildren: false,
                pageSize: this.PAGE_SIZE,
                query: this.groupQueryFilter(moId)
            };
            return this.inventory.childDevicesList(moId, Object.assign(Object.assign({}, queryFilter), extraFilter));
        };
        AssetNodeService.prototype.groupQueryFilter = function (moId) {
            return "$filter=(bygroupid(" + moId + "))$orderby=name";
        };
        AssetNodeService.prototype.navRootQueryFilter = function () {
            var navRootFilter = this.rootQueryFilter();
            navRootFilter.__orderby = [{ name: 1 }];
            return navRootFilter;
        };
        AssetNodeService.prototype.rootQueryFilter = function () {
            var moduleConfig = this.moduleConfig;
            var rootFilter = {
                __filter: {
                    type: "" + exports.GroupFragment.groupType
                },
                __orderby: []
            };
            if (moduleConfig.smartGroups) {
                var queryFilter = {
                    __filter: {
                        __and: [
                            {
                                type: "" + exports.GroupFragment.dynamicGroupType
                            },
                            {
                                __has: "" + exports.GroupFragment.dynamicGroupFragment
                            },
                            { __not: { __has: exports.GroupFragment.dynamicGroupFragment + ".invisible" } }
                        ]
                    }
                };
                this.queriesUtil.addOrFilter(rootFilter, queryFilter);
            }
            return rootFilter;
        };
        AssetNodeService.prototype.onUpdate = function (_a) {
            var _this = this;
            var mo = _a.mo, root = _a.root;
            if (mo.id) {
                return this.apiService
                    .hookResponse(function (_a) {
                    var url = _a.url, method = _a.method;
                    return ['PUT', 'DELETE', 'POST'].includes(method) &&
                        RegExp("((inventory/managedObjects)|(service/smartgroup/smartgroups))/" + mo.id).test(url);
                })
                    .pipe(operators.filter(function () { return !_this.draggedData; }), operators.mergeMap(this.apiService.resolveData), operators.filter(function (response) { return !response.data.c8y_Dashboard; }));
            }
            else if (root) {
                return this.apiService
                    .hookResponse(function (_a) {
                    var url = _a.url, method = _a.method;
                    return RegExp('((inventory/managedObjects)|(service/smartgroup/smartgroups))/?$').test(url) &&
                        method === 'POST';
                })
                    .pipe(operators.mergeMap(this.apiService.resolveData), operators.filter(function (response) { return _this.isNewManagedObjectRoot(response); }));
            }
            else {
                return rxjs.empty();
            }
        };
        AssetNodeService.prototype.isNewManagedObjectRoot = function (response) {
            if (response === void 0) { response = {}; }
            var data = response.data;
            var isRootAsset = false;
            if (typeof data === 'object') {
                isRootAsset = !!data[exports.GroupFragment.groupFragmentType];
                if (!isRootAsset && this.moduleConfig.smartGroups) {
                    isRootAsset = !!data[exports.GroupFragment.dynamicGroupFragment];
                }
            }
            return isRootAsset;
        };
        /**
         * There could be multiple breadcrumbs for devices,
         * so we set a preferred one on click on a device.
         * @param parents The parent nodes of the device to select the prefered one.
         */
        AssetNodeService.prototype.preferBreadcrumb = function (parents) {
            if (parents.length === 1) {
                this.breadcrumbService.selectPreferredByPath(parents[0].path);
            }
        };
        AssetNodeService.prototype.createFilter = function (extraParams) {
            if (extraParams === void 0) { extraParams = {}; }
            var params = {
                currentPage: 1,
                withTotalPages: true,
                pageSize: 10
            };
            return Object.assign(Object.assign({}, params), extraParams);
        };
        AssetNodeService.prototype.buildCombinedQuery = function (query, orderByQuery) {
            var combinedQuery;
            if (query && orderByQuery) {
                var filterQuery = this.queriesUtil.buildQuery({
                    __useFilterQueryString: query
                });
                combinedQuery = filterQuery + " " + orderByQuery;
            }
            else {
                combinedQuery = query || orderByQuery || '';
            }
            return combinedQuery;
        };
AssetNodeService.ɵfac = function AssetNodeService_Factory(t) { return new (t || AssetNodeService)(ɵngcc0.ɵɵinject(ɵngcc1.InventoryService), ɵngcc0.ɵɵinject(DeviceGroupService), ɵngcc0.ɵɵinject(ɵngcc2.ApiService), ɵngcc0.ɵɵinject(ɵngcc3.ModalService), ɵngcc0.ɵɵinject(ɵngcc3.AlertService), ɵngcc0.ɵɵinject(ɵngcc3.BreadcrumbService), ɵngcc0.ɵɵinject(ɵngcc1.UserService), ɵngcc0.ɵɵinject(ɵngcc3.AppStateService), ɵngcc0.ɵɵinject(ASSET_NAVIGATOR_CONFIG, 8)); };
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AssetNodeService, [{
        type: i0.Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return [{ type: ɵngcc1.InventoryService }, { type: DeviceGroupService }, { type: ɵngcc2.ApiService }, { type: ɵngcc3.ModalService }, { type: ɵngcc3.AlertService }, { type: ɵngcc3.BreadcrumbService }, { type: ɵngcc1.UserService }, { type: ɵngcc3.AppStateService }, { type: undefined, decorators: [{
                type: i0.Optional
            }, {
                type: i0.Inject,
                args: [ASSET_NAVIGATOR_CONFIG]
            }] }]; }, null); })();
        return AssetNodeService;
    }());
    AssetNodeService.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function AssetNodeService_Factory() { return new AssetNodeService(i0__namespace.ɵɵinject(i1__namespace.InventoryService), i0__namespace.ɵɵinject(DeviceGroupService), i0__namespace.ɵɵinject(i3__namespace.ApiService), i0__namespace.ɵɵinject(i4__namespace.ModalService), i0__namespace.ɵɵinject(i4__namespace.AlertService), i0__namespace.ɵɵinject(i4__namespace.BreadcrumbService), i0__namespace.ɵɵinject(i5__namespace.UserService), i0__namespace.ɵɵinject(i4__namespace.AppStateService), i0__namespace.ɵɵinject(ASSET_NAVIGATOR_CONFIG, 8)); }, token: AssetNodeService, providedIn: "root" });
    AssetNodeService.ctorParameters = function () { return [
        { type: client.InventoryService },
        { type: DeviceGroupService },
        { type: i3.ApiService },
        { type: i4.ModalService },
        { type: i4.AlertService },
        { type: i4.BreadcrumbService },
        { type: client.UserService },
        { type: i4.AppStateService },
        { type: undefined, decorators: [{ type: i0.Optional }, { type: i0.Inject, args: [ASSET_NAVIGATOR_CONFIG,] }] }
    ]; };

    var AssetNodeFactory = /** @class */ (function () {
        function AssetNodeFactory(service, moduleConfig) {
            this.service = service;
            this.moduleConfig = moduleConfig;
        }
        AssetNodeFactory.prototype.get = function () {
            var _a;
            var rootNavigatorNode = (_a = lodashEs.get(this.moduleConfig, 'rootNavigatorNode')) !== null && _a !== void 0 ? _a : true;
            if (rootNavigatorNode === false) {
                return;
            }
            if (!this.service.rootNode) {
                this.service.createRootNode(rootNavigatorNode === true ? {} : rootNavigatorNode);
            }
            return this.service.rootNode;
        };
AssetNodeFactory.ɵfac = function AssetNodeFactory_Factory(t) { return new (t || AssetNodeFactory)(ɵngcc0.ɵɵinject(AssetNodeService), ɵngcc0.ɵɵinject(ASSET_NAVIGATOR_CONFIG, 8)); };
AssetNodeFactory.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: AssetNodeFactory, factory: function (t) { return AssetNodeFactory.ɵfac(t); } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AssetNodeFactory, [{
        type: i0.Injectable
    }], function () { return [{ type: AssetNodeService }, { type: undefined, decorators: [{
                type: i0.Optional
            }, {
                type: i0.Inject,
                args: [ASSET_NAVIGATOR_CONFIG]
            }] }]; }, null); })();
        return AssetNodeFactory;
    }());
    AssetNodeFactory.ctorParameters = function () { return [
        { type: AssetNodeService },
        { type: undefined, decorators: [{ type: i0.Optional }, { type: i0.Inject, args: [ASSET_NAVIGATOR_CONFIG,] }] }
    ]; };

    var AssetsNavigatorModule = /** @class */ (function () {
        function AssetsNavigatorModule() {
        }
        AssetsNavigatorModule.config = function (config) {
            if (config === void 0) { config = {}; }
            return {
                ngModule: AssetsNavigatorModule,
                providers: [
                    {
                        provide: ASSET_NAVIGATOR_CONFIG,
                        useValue: config
                    }
                ]
            };
        };
AssetsNavigatorModule.ɵfac = function AssetsNavigatorModule_Factory(t) { return new (t || AssetsNavigatorModule)(); };
AssetsNavigatorModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: AssetsNavigatorModule });
AssetsNavigatorModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [
        i4.ModalService,
        DeviceGroupService,
        {
            provide: i4.HOOK_NAVIGATOR_NODES,
            useClass: AssetNodeFactory,
            multi: true
        }
    ], imports: [[i4.ModalModule, i4.DeviceStatusModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AssetsNavigatorModule, [{
        type: i0.NgModule,
        args: [{
                declarations: [],
                imports: [i4.ModalModule, i4.DeviceStatusModule],
                providers: [
                    i4.ModalService,
                    DeviceGroupService,
                    {
                        provide: i4.HOOK_NAVIGATOR_NODES,
                        useClass: AssetNodeFactory,
                        multi: true
                    }
                ],
                entryComponents: [i4.DeviceStatusComponent]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(AssetsNavigatorModule, { imports: [ɵngcc3.ModalModule, ɵngcc3.DeviceStatusModule] }); })();
        return AssetsNavigatorModule;
    }());

    var GroupNode = /** @class */ (function (_super) {
        __extends(GroupNode, _super);
        // FIXME: Currently hasChildren returns true if it is a group,
        //        Issue is, that we disable the children in the API
        //        getGroupItems service call due to performance. This leads
        //        to that the dropdown chevron is shown always. Issue is,
        //        that even if we return the chevrons, we have no way to determine
        //        if the childAssets contain groups or other assets (like dashboards).
        // get hasChildren() {
        //  return this.root || this.service.groups.isGroup(this.mo) && (this.mo as IManagedObject).childAssets.references.length > 0;
        // }
        /**
         * Creates a new node which shows only groups.
         *
         * @param service The service to use.
         * @param config  The default configuration of the node.
         */
        function GroupNode(service, config) {
            if (config === void 0) { config = {}; }
            var _this = _super.call(this, service, config) || this;
            _this.service = service;
            return _this;
        }
        return GroupNode;
    }(AssetNode));

    var GroupNodeService = /** @class */ (function (_super) {
        __extends(GroupNodeService, _super);
        function GroupNodeService() {
            var _this = _super.apply(this, __spreadArray([], __read(arguments))) || this;
            _this.PAGE_SIZE = 5;
            return _this;
        }
        GroupNodeService.prototype.createGroupNode = function (config) {
            return new GroupNode(this, config);
        };
        GroupNodeService.prototype.createChildNode = function (managedObject) {
            var config = { mo: managedObject };
            return this.createGroupNode(config);
        };
        GroupNodeService.prototype.subAssetsQueryFilter = function () {
            var rootQueryFilter = this.rootQueryFilter();
            var filter = this.queriesUtil.addOrFilter(rootQueryFilter, {
                type: exports.GroupFragment.subGroupType
            });
            return this.queriesUtil.buildQuery(filter);
        };
        GroupNodeService.prototype.getGroupItems = function (moId) {
            return this.inventory.childAssetsList(moId, {
                query: this.subAssetsQueryFilter(),
                withChildren: false,
                pageSize: this.PAGE_SIZE,
                withTotalPages: true
            });
        };
GroupNodeService.ɵfac = /*@__PURE__*/ function () { var ɵGroupNodeService_BaseFactory; return function GroupNodeService_Factory(t) { return (ɵGroupNodeService_BaseFactory || (ɵGroupNodeService_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(GroupNodeService)))(t || GroupNodeService); }; }();
GroupNodeService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: GroupNodeService, factory: function (t) { return GroupNodeService.ɵfac(t); } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(GroupNodeService, [{
        type: i0.Injectable
    }], null, null); })();
        return GroupNodeService;
    }(AssetNodeService));

    /**
     * Displays a hierarchical tree selector for assets.
     */
    var AssetSelectorComponent = /** @class */ (function () {
        /**
         * @ignore only DI
         */
        function AssetSelectorComponent(groupNodeService) {
            this.groupNodeService = groupNodeService;
            /**
             * An array of predefined nodes.
             */
            this.selected = [];
            /**
             * Emits if one item was selected (all currently selected nodes).
             */
            this.onChange = new i0.EventEmitter();
        }
        /**
         * @ignore
         */
        AssetSelectorComponent.prototype.ngOnInit = function () {
            this.rootNode = this.groupNodeService.createGroupNode({ root: true });
        };
        /**
         * Adds an managed object to the selected array and emits the change.
         * @param selectedMo The selected asset.
         */
        AssetSelectorComponent.prototype.select = function (selectedMo) {
            var index = this.getIndexOfSelected(this.selected, selectedMo);
            if (index === -1) {
                this.selected.push(selectedMo);
            }
            this.onChange.emit(this.selected);
        };
        /**
         * Removes a managed object from the selected array and emits the change.
         * @param selectedMo The selected asset.
         */
        AssetSelectorComponent.prototype.deselect = function (selectedMo) {
            var index = this.getIndexOfSelected(this.selected, selectedMo);
            if (index > -1) {
                this.selected.splice(index, 1);
            }
            this.onChange.emit(this.selected);
        };
        AssetSelectorComponent.prototype.getIndexOfSelected = function (selected, selectedMo) {
            return selected.findIndex(function (mo) { return mo.id === selectedMo.id; });
        };
AssetSelectorComponent.ɵfac = function AssetSelectorComponent_Factory(t) { return new (t || AssetSelectorComponent)(ɵngcc0.ɵɵdirectiveInject(GroupNodeService)); };
AssetSelectorComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: AssetSelectorComponent, selectors: [["c8y-asset-selector"]], inputs: { selected: "selected" }, outputs: { onChange: "onChange" }, decls: 1, vars: 2, consts: [[3, "node", "preselected"]], template: function AssetSelectorComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelement(0, "c8y-asset-selector-node", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("node", ctx.rootNode)("preselected", ctx.selected);
    } }, directives: function () { return [AssetSelectorNodeComponent]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AssetSelectorComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-asset-selector',
                template: "<c8y-asset-selector-node [node]=\"rootNode\" [preselected]=\"selected\"></c8y-asset-selector-node>\n"
            }]
    }], function () { return [{ type: GroupNodeService }]; }, { selected: [{
            type: i0.Input
        }], onChange: [{
            type: i0.Output
        }] }); })();
        return AssetSelectorComponent;
    }());
    AssetSelectorComponent.ctorParameters = function () { return [
        { type: GroupNodeService }
    ]; };
    AssetSelectorComponent.propDecorators = {
        selected: [{ type: i0.Input }],
        onChange: [{ type: i0.Output }]
    };

    var AssetSelectorNodeComponent = /** @class */ (function () {
        /**
         * @ignore only di
         */
        function AssetSelectorNodeComponent(translateService, cd, parentNode) {
            this.translateService = translateService;
            this.cd = cd;
            this.parentNode = parentNode;
            /**
             * All preselected items
             */
            this.preselected = [];
            /**
             *  Should the path be shown
             */
            this.showPath = false;
            /**
             * @ignore
             */
            this.level = 0;
            /**
             * The selection status of the node
             */
            this.checked = false;
            /**
             * @ignore
             */
            this.unsubscribe$ = new rxjs.Subject();
        }
        Object.defineProperty(AssetSelectorNodeComponent.prototype, "expandTitle", {
            /**
             * @ignore
             */
            get: function () {
                return !this.node.open ? i4.gettext('Expand') : i4.gettext('Collapse');
            },
            enumerable: false,
            configurable: true
        });
        /**
         * @ignore
         */
        AssetSelectorNodeComponent.prototype.ngOnInit = function () {
            return __awaiter(this, void 0, void 0, function () {
                var _this = this;
                return __generator(this, function (_a) {
                    this.breadcrumb = this.node.label;
                    this.setupBreadcrumbsAndLevel(this.node);
                    if (this.node instanceof GroupNode) {
                        this.node.hookEvents();
                    }
                    // open on startup
                    if (this.node.root) {
                        this.click();
                    }
                    if (this.node.events) {
                        this.node.events
                            .pipe(operators.takeUntil(this.unsubscribe$), operators.filter(function (a) { return a === exports.Action.LOADING_DONE; }))
                            .subscribe(function () {
                            _this.cd.markForCheck();
                        });
                    }
                    this.checked = this.isPreselected();
                    return [2 /*return*/];
                });
            });
        };
        /**
         * Opens a node.
         */
        AssetSelectorNodeComponent.prototype.click = function () {
            this.node.open = !this.node.open;
            this.node.click({ open: this.node.open });
        };
        /**
         * TODO: Only level used. Breadcrumbs needs to be implemented.
         */
        AssetSelectorNodeComponent.prototype.setupBreadcrumbsAndLevel = function (node) {
            if (node.parents && node.parents.length) {
                var parent = node.parents[0];
                this.breadcrumb = this.translateService.instant(parent.label) + ' > ' + this.breadcrumb;
                this.level++;
                this.setupBreadcrumbsAndLevel(parent);
            }
        };
        /**
         * Selects the node and emits a change on the parent component.
         * @param node The node to select.
         */
        AssetSelectorNodeComponent.prototype.selected = function (node) {
            this.checked = !this.checked;
            this.updateSelection(node.mo);
        };
        /**
         * @ignore
         */
        AssetSelectorNodeComponent.prototype.ngOnDestroy = function () {
            this.unsubscribe$.next(true);
            this.unsubscribe$.complete();
        };
        AssetSelectorNodeComponent.prototype.isPreselected = function () {
            if (this.node.root || !this.node.mo) {
                return false;
            }
            return this.parentNode.getIndexOfSelected(this.preselected, this.node.mo) > -1;
        };
        AssetSelectorNodeComponent.prototype.updateSelection = function (selectedMo) {
            if (this.checked) {
                this.parentNode.select(selectedMo);
                return;
            }
            this.parentNode.deselect(selectedMo);
        };
AssetSelectorNodeComponent.ɵfac = function AssetSelectorNodeComponent_Factory(t) { return new (t || AssetSelectorNodeComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc4.TranslateService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(AssetSelectorComponent)); };
AssetSelectorNodeComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: AssetSelectorNodeComponent, selectors: [["c8y-asset-selector-node"]], inputs: { preselected: "preselected", showPath: "showPath", node: "node" }, decls: 3, vars: 6, consts: [["class", "d-flex collapsible", 3, "ngClass", "title", 4, "ngIf"], [1, "collapse", 3, "ngClass", "collapse"], [3, "node", "preselected", 4, "ngFor", "ngForOf"], [1, "d-flex", "collapsible", 3, "ngClass", "title"], [1, "p-t-8", "p-b-8", "m-r-8", 3, "ngStyle"], [1, "c8y-checkbox"], ["type", "checkbox", 3, "checked", "change"], [1, "flex-grow", "flex-item-middle", "p-t-8", "p-b-8", "text-truncate", "p-r-8", 3, "click"], ["class", "c8y-icon c8y-icon-duocolor m-r-4 text-16", 3, "c8yIcon", "title", 4, "ngIf"], [3, "title"], ["class", "text-truncate", 4, "ngIf"], [1, "collapse-btn", "btn", 3, "title", "click"], ["c8yIcon", "angle-down", 3, "ngClass"], [1, "c8y-icon", "c8y-icon-duocolor", "m-r-4", "text-16", 3, "c8yIcon", "title"], [1, "text-truncate"], [1, "text-muted", 3, "title"], [3, "node", "preselected"]], template: function AssetSelectorNodeComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, AssetSelectorNodeComponent_div_0_Template, 16, 26, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵtemplate(2, AssetSelectorNodeComponent_c8y_asset_selector_node_2_Template, 1, 3, "c8y-asset-selector-node", 2);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", !ctx.node.root && !ctx.node.hidden);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(4, _c4, ctx.node.open))("collapse", !ctx.node.open);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.node.children);
    } }, directives: [ɵngcc5.NgIf, ɵngcc5.NgClass, ɵngcc6.CollapseDirective, ɵngcc5.NgForOf, ɵngcc5.NgStyle, ɵngcc3.IconDirective, AssetSelectorNodeComponent], pipes: [ɵngcc3.C8yTranslatePipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AssetSelectorNodeComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-asset-selector-node',
                template: "<div\n  class=\"d-flex collapsible\"\n  [ngClass]=\"{ 'expanded separator-top': node.open }\"\n  title=\"{{ breadcrumb | translate }}\"\n  *ngIf=\"!node.root && !node.hidden\"\n>\n  <div\n    class=\"p-t-8 p-b-8 m-r-8\"\n    [ngStyle]=\"{ 'padding-left': level < 6 ? (level - 1) * 8 + 'px' : '24px' }\"\n    [style.visibility]=\"node.routerLinkExact ? 'hidden' : 'visible'\"\n  >\n    <label class=\"c8y-checkbox\">\n      <input type=\"checkbox\" (change)=\"selected(node)\" [checked]=\"checked\" />\n      <span></span>\n    </label>\n  </div>\n  <div\n    class=\"flex-grow flex-item-middle p-t-8 p-b-8 text-truncate p-r-8\"\n    [style.cursor]=\"node.routerLinkExact ? 'pointer' : 'normal'\"\n    (click)=\"node.routerLinkExact ? node.click() : ''\"\n  >\n    <i\n      [c8yIcon]=\"node.icon\"\n      *ngIf=\"node.icon === 'c8y-group-smart'\"\n      [title]=\"'Smart group' | translate\"\n      class=\"c8y-icon c8y-icon-duocolor m-r-4 text-16\"\n    ></i>\n    <i\n      [c8yIcon]=\"node.icon\"\n      *ngIf=\"node.icon !== 'c8y-group-smart'\"\n      [title]=\"'Group' | translate\"\n      class=\"c8y-icon c8y-icon-duocolor m-r-4 text-16\"\n    ></i>\n    <span title=\"{{ breadcrumb }}\">\n      {{ node.label | translate }}\n      <!-- use just for search results to display the path -->\n      <p *ngIf=\"showPath\" class=\"text-truncate\">\n        <small class=\"text-muted\" title=\"{{ breadcrumb }}\">\n          <em>{{ breadcrumb }}</em>\n        </small>\n      </p>\n      <!-- up to here -->\n    </span>\n  </div>\n  <div>\n    <button\n      [title]=\"expandTitle\"\n      class=\"collapse-btn btn\"\n      (click)=\"click()\"\n      [attr.aria-expanded]=\"!node.open\"\n    >\n      <i c8yIcon=\"angle-down\" [ngClass]=\"{ 'text-primary': node.open }\"></i>\n    </button>\n  </div>\n</div>\n<div class=\"collapse\" [ngClass]=\"{ 'separator-bottom': node.open }\" [collapse]=\"!node.open\">\n  <c8y-asset-selector-node\n    *ngFor=\"let childNode of node.children\"\n    [node]=\"childNode\"\n    [preselected]=\"preselected || []\"\n  ></c8y-asset-selector-node>\n</div>\n"
            }]
    }], function () { return [{ type: ɵngcc4.TranslateService }, { type: ɵngcc0.ChangeDetectorRef }, { type: AssetSelectorComponent }]; }, { preselected: [{
            type: i0.Input
        }], showPath: [{
            type: i0.Input
        }], node: [{
            type: i0.Input
        }] }); })();
        return AssetSelectorNodeComponent;
    }());
    AssetSelectorNodeComponent.ctorParameters = function () { return [
        { type: core.TranslateService },
        { type: i0.ChangeDetectorRef },
        { type: AssetSelectorComponent }
    ]; };
    AssetSelectorNodeComponent.propDecorators = {
        node: [{ type: i0.Input }],
        preselected: [{ type: i0.Input }],
        showPath: [{ type: i0.Input }]
    };

    var AssetSelectorModule = /** @class */ (function () {
        function AssetSelectorModule() {
        }
AssetSelectorModule.ɵfac = function AssetSelectorModule_Factory(t) { return new (t || AssetSelectorModule)(); };
AssetSelectorModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: AssetSelectorModule });
AssetSelectorModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [GroupNodeService], imports: [[i4.CommonModule, collapse.CollapseModule, dropdown.BsDropdownModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AssetSelectorModule, [{
        type: i0.NgModule,
        args: [{
                imports: [i4.CommonModule, collapse.CollapseModule, dropdown.BsDropdownModule],
                exports: [AssetSelectorNodeComponent, AssetSelectorComponent],
                providers: [GroupNodeService],
                declarations: [AssetSelectorNodeComponent, AssetSelectorComponent]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(AssetSelectorModule, { declarations: [AssetSelectorNodeComponent, AssetSelectorComponent], imports: [ɵngcc3.CommonModule, ɵngcc6.CollapseModule, ɵngcc7.BsDropdownModule], exports: [AssetSelectorNodeComponent, AssetSelectorComponent] }); })();
        return AssetSelectorModule;
    }());

    /**
     * Generated bundle index. Do not edit.
     */

    exports.ASSET_NAVIGATOR_CONFIG = ASSET_NAVIGATOR_CONFIG;
    exports.AssetNode = AssetNode;
    exports.AssetNodeFactory = AssetNodeFactory;
    exports.AssetNodeService = AssetNodeService;
    exports.AssetSelectorComponent = AssetSelectorComponent;
    exports.AssetSelectorModule = AssetSelectorModule;
    exports.AssetSelectorNodeComponent = AssetSelectorNodeComponent;
    exports.AssetsNavigatorModule = AssetsNavigatorModule;
    exports.DeviceGroupService = DeviceGroupService;
    exports.DynamicGroupNode = DynamicGroupNode;
    exports.GroupNode = GroupNode;
    exports.GroupNodeService = GroupNodeService;
    exports.LoadMoreNode = LoadMoreNode;

    Object.defineProperty(exports, '__esModule', { value: true });

}));

//# sourceMappingURL=c8y-ngx-components-assets-navigator.umd.js.map