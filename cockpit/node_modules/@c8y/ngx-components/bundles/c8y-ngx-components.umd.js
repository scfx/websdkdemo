(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(require('@angular/core'),require('@angular/router'),require('@c8y/ngx-components/api'),require('@c8y/client'),require('@ngx-translate/core'),require('@angular/common/http'),require('@angular/common'),require('@angular/cdk/scrolling'),require('ngx-bootstrap/tooltip'),require('ngx-bootstrap/dropdown'),require('ngx-bootstrap/collapse'),require('ngx-bootstrap/popover'),require('ngx-bootstrap/modal'),require('@angular/forms'),require('angularx-qrcode'),require('ngx-bootstrap/datepicker'),require('@ngx-formly/core'),require('@ngx-formly/core/select'),require('@angular/platform-browser'),require('@angular/cdk/drag-drop'),require('@angular/cdk/bidi'),require('@angular/cdk/stepper'),require('@angular/cdk/table'),require('ngx-bootstrap/pagination'),exports, require('@angular/core'), require('@angular/router'), require('rxjs'), require('rxjs/operators'), require('lodash-es'), require('ngx-bootstrap/collapse'), require('ngx-bootstrap/dropdown'), require('@angular/common'), require('@c8y/ngx-components/api'), require('ngx-bootstrap/tooltip'), require('@angular/common/http'), require('@ngx-translate/core'), require('@c8y/client'), require('@angular/cdk/coercion'), require('lodash'), require('@angular/cdk/scrolling'), require('@angular/forms'), require('ngx-bootstrap/popover'), require('ngx-bootstrap/modal'), require('libphonenumber-js/max'), require('angularx-qrcode'), require('ngx-bootstrap/datepicker'), require('@ngx-formly/core'), require('@ngx-formly/core/select'), require('@ngx-formly/core/json-schema'), require('@angular/cdk/drag-drop'), require('@angular/platform-browser'), require('@angular/cdk/stepper'), require('@angular/cdk/bidi'), require('@angular/cdk/table'), require('ngx-bootstrap/pagination')) :
    typeof define === 'function' && define.amd ? define('@c8y/ngx-components', ['@angular/core','@angular/router','@c8y/ngx-components/api','@c8y/client','@ngx-translate/core','@angular/common/http','@angular/common','@angular/cdk/scrolling','ngx-bootstrap/tooltip','ngx-bootstrap/dropdown','ngx-bootstrap/collapse','ngx-bootstrap/popover','ngx-bootstrap/modal','@angular/forms','angularx-qrcode','ngx-bootstrap/datepicker','@ngx-formly/core','@ngx-formly/core/select','@angular/platform-browser','@angular/cdk/drag-drop','@angular/cdk/bidi','@angular/cdk/stepper','@angular/cdk/table','ngx-bootstrap/pagination','exports', '@angular/core', '@angular/router', 'rxjs', 'rxjs/operators', 'lodash-es', 'ngx-bootstrap/collapse', 'ngx-bootstrap/dropdown', '@angular/common', '@c8y/ngx-components/api', 'ngx-bootstrap/tooltip', '@angular/common/http', '@ngx-translate/core', '@c8y/client', '@angular/cdk/coercion', 'lodash', '@angular/cdk/scrolling', '@angular/forms', 'ngx-bootstrap/popover', 'ngx-bootstrap/modal', 'libphonenumber-js/max', 'angularx-qrcode', 'ngx-bootstrap/datepicker', '@ngx-formly/core', '@ngx-formly/core/select', '@ngx-formly/core/json-schema', '@angular/cdk/drag-drop', '@angular/platform-browser', '@angular/cdk/stepper', '@angular/cdk/bidi', '@angular/cdk/table', 'ngx-bootstrap/pagination'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.ng.core,global.ng.router,global.c8y.ngxComponents.api,global.c8y.client,global.ngxTranslate.core,global.ng.common.http,global.ng.common,global.ng.cdk.scrolling,global.ngxBootstrap.tooltip,global.ngxBootstrap.dropdown,global.ngxBootstrap.collapse,global.ngxBootstrap.popover,global.ngxBootstrap.modal,global.ng.forms,global.angularxQrcode,global.ngxBootstrap.datepicker,global.ngxFormly.core,global.ngxFormly.core.select,global.ng.platformBrowser,global.ng.cdk.dragDrop,global.ng.cdk.bidi,global.ng.cdk.stepper,global.ng.cdk.table,global.ngxBootstrap.pagination,(global.c8y = global.c8y || {}, global.c8y["ngx-components"] = {}), global.ng.core, global.ng.router, global.rxjs, global.rxjs.operators, global.lodashEs, global.collapse, global.dropdown, global.ng.common, global.c8y["ngx-components"].api, global.tooltip, global.ng.common.http, global.i1$1, global.client, global.ng.cdk.coercion, global.lodash, global.ng.cdk.scrolling, global.ng.forms, global.popover, global.i1$2, global.max, global.angularxQrcode, global.datepicker, global.core, global.select, global.jsonSchema, global.ng.cdk.dragDrop, global.ng.platformBrowser, global.ng.cdk.stepper, global.ng.cdk.bidi, global.ng.cdk.table, global.pagination));
})(this, (function (ɵngcc0,ɵngcc1,ɵngcc2,ɵngcc3,ɵngcc4,ɵngcc5,ɵngcc6,ɵngcc7,ɵngcc8,ɵngcc9,ɵngcc10,ɵngcc11,ɵngcc12,ɵngcc13,ɵngcc14,ɵngcc15,ɵngcc16,ɵngcc17,ɵngcc18,ɵngcc19,ɵngcc20,ɵngcc21,ɵngcc22,ɵngcc23,exports, i0, i1, rxjs, operators, lodashEs, collapse, dropdown, common, i4, tooltip, http, i1$1, client, coercion, lodash, scrolling, forms, popover, i1$2, max, angularxQrcode, datepicker, core, select, jsonSchema, dragDrop, platformBrowser, stepper, bidi, table, pagination) { 
var _c0 = ["template"];
function ActionBarItemComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "li");
    ɵngcc0.ɵɵprojection(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMap(ctx_r1.itemClass);
} }
var _c1 = ["*"];
function LoadMoreComponent_button_0_ng_container_2_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 6);
    ɵngcc0.ɵɵpipe(1, "translate");
} if (rf & 2) {
    var ctx_r7 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("innerHTML", ɵngcc0.ɵɵpipeBind1(1, 1, ctx_r7.loadNextLabel), ɵngcc0.ɵɵsanitizeHtml);
} }
var _c2 = function (a0) { return { pageNo: a0 }; };
function LoadMoreComponent_button_0_ng_container_2_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 7);
    ɵngcc0.ɵɵdisableBindings();
    ɵngcc0.ɵɵtext(1, " Load page {{ pageNo }}");
    ɵngcc0.ɵɵenableBindings();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r9 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("translateParams", ɵngcc0.ɵɵpureFunction1(1, _c2, ctx_r9.paging.currentPage + 1));
} }
function LoadMoreComponent_button_0_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, LoadMoreComponent_button_0_ng_container_2_span_1_Template, 2, 3, "span", 4);
    ɵngcc0.ɵɵtemplate(2, LoadMoreComponent_button_0_ng_container_2_ng_template_2_Template, 2, 3, "ng-template", null, 5, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var _r8 = ɵngcc0.ɵɵreference(3);
    var ctx_r5 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r5.loadNextLabel)("ngIfElse", _r8);
} }
function LoadMoreComponent_button_0_ng_container_3_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 6);
    ɵngcc0.ɵɵpipe(1, "translate");
} if (rf & 2) {
    var ctx_r10 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("innerHTML", ɵngcc0.ɵɵpipeBind1(1, 1, ctx_r10.loadingLabel), ɵngcc0.ɵɵsanitizeHtml);
} }
function LoadMoreComponent_button_0_ng_container_3_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 7);
    ɵngcc0.ɵɵdisableBindings();
    ɵngcc0.ɵɵtext(1, " Page {{ pageNo }} is loading\u2026 ");
    ɵngcc0.ɵɵenableBindings();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r12 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("translateParams", ɵngcc0.ɵɵpureFunction1(1, _c2, ctx_r12.paging.currentPage + 1));
} }
function LoadMoreComponent_button_0_ng_container_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, LoadMoreComponent_button_0_ng_container_3_span_1_Template, 2, 3, "span", 4);
    ɵngcc0.ɵɵtemplate(2, LoadMoreComponent_button_0_ng_container_3_ng_template_2_Template, 2, 3, "ng-template", null, 8, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var _r11 = ɵngcc0.ɵɵreference(3);
    var ctx_r6 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r6.loadingLabel)("ngIfElse", _r11);
} }
var _c3 = function (a0) { return { "btn-pending": a0 }; };
function LoadMoreComponent_button_0_Template(rf, ctx) { if (rf & 1) {
    var _r14 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 3);
    ɵngcc0.ɵɵlistener("click", function LoadMoreComponent_button_0_Template_button_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r14); var ctx_r13 = ɵngcc0.ɵɵnextContext(); return ctx_r13.loadMore($event); });
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵtemplate(2, LoadMoreComponent_button_0_ng_container_2_Template, 4, 2, "ng-container", 1);
    ɵngcc0.ɵɵtemplate(3, LoadMoreComponent_button_0_ng_container_3_Template, 4, 2, "ng-container", 1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵstyleProp("visibility", ctx_r0.hidden ? "hidden" : "visible")("height", ctx_r0.hidden ? "1px" : null);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(1, 8, "Load more"));
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(10, _c3, ctx_r0.isLoading));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r0.isLoading);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.isLoading);
} }
function LoadMoreComponent_ng_container_1_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function LoadMoreComponent_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, LoadMoreComponent_ng_container_1_ng_container_1_Template, 1, 0, "ng-container", 9);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    var _r2 = ɵngcc0.ɵɵreference(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r1.noMoreDataHint || _r2);
} }
function LoadMoreComponent_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 10);
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵelement(2, "i", 11);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(1, 2, "Last record"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("c8yIcon", "circle");
} }
function LoadMoreComponent_ng_container_4_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function LoadMoreComponent_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, LoadMoreComponent_ng_container_4_ng_container_1_Template, 1, 0, "ng-container", 9);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var ctx_r4 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r4.loadingTemplate);
} }
function VirtualScrollerWrapperComponent_ng_container_0_ng_container_1_div_2_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
var _c4 = function (a0, a1) { return { $implicit: a0, index: a1 }; };
function VirtualScrollerWrapperComponent_ng_container_0_ng_container_1_div_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵtemplate(1, VirtualScrollerWrapperComponent_ng_container_0_ng_container_1_div_2_ng_container_1_Template, 1, 0, "ng-container", 5);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var item_r5 = ctx.$implicit;
    var i_r6 = ctx.index;
    var ctx_r4 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r4.template)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction2(2, _c4, item_r5, i_r6));
} }
function VirtualScrollerWrapperComponent_ng_container_0_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "cdk-virtual-scroll-viewport", 3);
    ɵngcc0.ɵɵtemplate(2, VirtualScrollerWrapperComponent_ng_container_0_ng_container_1_div_2_Template, 2, 5, "div", 4);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var items_r1 = ɵngcc0.ɵɵnextContext().ngIf;
    var ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("itemSizePx", ctx_r2.itemHeight);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("cdkVirtualForOf", items_r1)("cdkVirtualForTrackBy", ctx_r2.trackByFn);
} }
function VirtualScrollerWrapperComponent_ng_container_0_ng_container_2_div_2_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function VirtualScrollerWrapperComponent_ng_container_0_ng_container_2_div_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵtemplate(1, VirtualScrollerWrapperComponent_ng_container_0_ng_container_2_div_2_ng_container_1_Template, 1, 0, "ng-container", 5);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var item_r10 = ctx.$implicit;
    var i_r11 = ctx.index;
    var ctx_r9 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r9.template)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction2(2, _c4, item_r10, i_r11));
} }
function VirtualScrollerWrapperComponent_ng_container_0_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "cdk-virtual-scroll-viewport", 6);
    ɵngcc0.ɵɵtemplate(2, VirtualScrollerWrapperComponent_ng_container_0_ng_container_2_div_2_Template, 2, 5, "div", 4);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var items_r1 = ɵngcc0.ɵɵnextContext().ngIf;
    var ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵstyleProp("height", ctx_r3.containerHeight + "px");
    ɵngcc0.ɵɵproperty("itemSize", ctx_r3.itemHeight);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("cdkVirtualForOf", items_r1)("cdkVirtualForTrackBy", ctx_r3.trackByFn);
} }
function VirtualScrollerWrapperComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0, 1);
    ɵngcc0.ɵɵtemplate(1, VirtualScrollerWrapperComponent_ng_container_0_ng_container_1_Template, 3, 3, "ng-container", 2);
    ɵngcc0.ɵɵtemplate(2, VirtualScrollerWrapperComponent_ng_container_0_ng_container_2_Template, 3, 5, "ng-container", 2);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngSwitch", ctx_r0.strategy);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "window");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "fixed");
} }
function ProgressBarComponent_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 4);
    ɵngcc0.ɵɵelement(1, "div", 5);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵstyleProp("width", ctx_r0.progress + "%");
    ɵngcc0.ɵɵattribute("aria-valuenow", ctx_r0.progress);
} }
function ProgressBarComponent_div_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "div", 6);
} }
function ProgressBarComponent_p_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "p");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 1, ctx_r2.message), " ");
} }
var _c5 = function (a0) { return { "max-width.px": a0 }; };
function OperationResultComponent__svg_svg_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵnamespaceSVG();
    ɵngcc0.ɵɵelementStart(0, "svg", 3);
    ɵngcc0.ɵɵelementStart(1, "g", 4);
    ɵngcc0.ɵɵelement(2, "polyline", 5);
    ɵngcc0.ɵɵelement(3, "path", 6);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngStyle", ɵngcc0.ɵɵpureFunction1(1, _c5, ctx_r0.size || 64));
} }
function OperationResultComponent__svg_svg_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵnamespaceSVG();
    ɵngcc0.ɵɵelementStart(0, "svg", 3);
    ɵngcc0.ɵɵelementStart(1, "g", 7);
    ɵngcc0.ɵɵelement(2, "line", 8);
    ɵngcc0.ɵɵelement(3, "line", 9);
    ɵngcc0.ɵɵelement(4, "circle", 10);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngStyle", ɵngcc0.ɵɵpureFunction1(1, _c5, ctx_r1.size || 64));
} }
function OperationResultComponent_p_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "p", 11);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r2.text, " ");
} }
var _c6 = function (a0) { return { "d-col j-c-center": a0 }; };
function ActionBarComponent_ng_container_7_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function ActionBarComponent_ng_container_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, ActionBarComponent_ng_container_7_ng_container_1_Template, 1, 0, "ng-container", 8);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var item_r3 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("c8yOutlet", item_r3.template);
} }
function ActionBarComponent_ng_container_10_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function ActionBarComponent_ng_container_10_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, ActionBarComponent_ng_container_10_ng_container_1_Template, 1, 0, "ng-container", 8);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var item_r5 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("c8yOutlet", item_r5.template);
} }
function ActionBarComponent_li_12_ul_7_ng_container_1_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function ActionBarComponent_li_12_ul_7_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, ActionBarComponent_li_12_ul_7_ng_container_1_ng_container_1_Template, 1, 0, "ng-container", 8);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var item_r10 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("c8yOutlet", item_r10.template);
} }
function ActionBarComponent_li_12_ul_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "ul", 16);
    ɵngcc0.ɵɵtemplate(1, ActionBarComponent_li_12_ul_7_ng_container_1_Template, 2, 1, "ng-container", 5);
    ɵngcc0.ɵɵpipe(2, "async");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r7 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ɵngcc0.ɵɵpipeBind1(2, 1, ctx_r7.more$));
} }
function ActionBarComponent_li_12_ng_container_9_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function ActionBarComponent_li_12_ng_container_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, ActionBarComponent_li_12_ng_container_9_ng_container_1_Template, 1, 0, "ng-container", 8);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var item_r12 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("c8yOutlet", item_r12.template);
} }
function ActionBarComponent_li_12_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "li", 9);
    ɵngcc0.ɵɵelementStart(1, "div", 10);
    ɵngcc0.ɵɵelementStart(2, "button", 11);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementStart(4, "span", 12);
    ɵngcc0.ɵɵtext(5, "More\u2026");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(6, "i", 13);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(7, ActionBarComponent_li_12_ul_7_Template, 3, 3, "ul", 14);
    ɵngcc0.ɵɵelementStart(8, "ul", 15);
    ɵngcc0.ɵɵtemplate(9, ActionBarComponent_li_12_ng_container_9_Template, 2, 1, "ng-container", 5);
    ɵngcc0.ɵɵpipe(10, "async");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵpropertyInterpolate1("title", "", ɵngcc0.ɵɵpipeBind1(3, 3, "More"), "\u2026");
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵproperty("c8yIcon", "caret-down");
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngForOf", ɵngcc0.ɵɵpipeBind1(10, 5, ctx_r2.more$));
} }
function ActionOutletComponent_div_0_ul_3_ng_container_1_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function ActionOutletComponent_div_0_ul_3_ng_container_1_li_2_i_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "i", 11);
} if (rf & 2) {
    var item_r3 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵproperty("c8yIcon", item_r3.icon);
} }
function ActionOutletComponent_div_0_ul_3_ng_container_1_li_2_Template(rf, ctx) { if (rf & 1) {
    var _r10 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "li");
    ɵngcc0.ɵɵelementStart(1, "button", 9);
    ɵngcc0.ɵɵlistener("click", function ActionOutletComponent_div_0_ul_3_ng_container_1_li_2_Template_button_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r10); var item_r3 = ɵngcc0.ɵɵnextContext().$implicit; var ctx_r8 = ɵngcc0.ɵɵnextContext(3); return ctx_r8.invoke(item_r3); });
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵtemplate(3, ActionOutletComponent_div_0_ul_3_ng_container_1_li_2_i_3_Template, 1, 1, "i", 10);
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵpipe(5, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var item_r3 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(2, 4, item_r3.label));
    ɵngcc0.ɵɵattribute("disabled", item_r3.disabled ? "disabled" : null);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", item_r3.icon);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1("", ɵngcc0.ɵɵpipeBind1(5, 6, item_r3.label), " ");
} }
function ActionOutletComponent_div_0_ul_3_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, ActionOutletComponent_div_0_ul_3_ng_container_1_ng_container_1_Template, 1, 0, "ng-container", 7);
    ɵngcc0.ɵɵtemplate(2, ActionOutletComponent_div_0_ul_3_ng_container_1_li_2_Template, 6, 8, "li", 8);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var item_r3 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("c8yOutlet", item_r3.template);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", item_r3.label);
} }
function ActionOutletComponent_div_0_ul_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "ul", 5);
    ɵngcc0.ɵɵtemplate(1, ActionOutletComponent_div_0_ul_3_ng_container_1_Template, 3, 2, "ng-container", 6);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r1 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r1.getByPriority());
} }
function ActionOutletComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 1);
    ɵngcc0.ɵɵelementStart(1, "button", 2);
    ɵngcc0.ɵɵelement(2, "i", 3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(3, ActionOutletComponent_div_0_ul_3_Template, 2, 1, "ul", 4);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("c8yIcon", "plus-circle");
} }
function ActionComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "li");
    ɵngcc0.ɵɵprojection(1);
    ɵngcc0.ɵɵelementEnd();
} }
var _c7 = ["detailedData"];
var _c8 = ["text"];
function AlertComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵprojection(0);
    ɵngcc0.ɵɵprojection(1, 1);
} }
function AlertComponent_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵprojection(0, 2);
} }
var _c9 = [[["c8y-alert-text"]], "*", [["c8y-alert-details"]]];
var _c10 = ["c8y-alert-text", "*", "c8y-alert-details"];
function AlertOutletComponent_div_0_div_8_strong_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "strong", 10);
    ɵngcc0.ɵɵpipe(1, "translate");
} if (rf & 2) {
    var alert_r1 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵproperty("textContent", ɵngcc0.ɵɵpipeBind1(1, 1, alert_r1.text));
} }
function AlertOutletComponent_div_0_div_8_strong_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "strong", 11);
    ɵngcc0.ɵɵpipe(1, "translate");
} if (rf & 2) {
    var alert_r1 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵproperty("innerHTML", ɵngcc0.ɵɵpipeBind1(1, 1, alert_r1.text), ɵngcc0.ɵɵsanitizeHtml);
} }
function AlertOutletComponent_div_0_div_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵtemplate(1, AlertOutletComponent_div_0_div_8_strong_1_Template, 2, 3, "strong", 8);
    ɵngcc0.ɵɵtemplate(2, AlertOutletComponent_div_0_div_8_strong_2_Template, 2, 3, "strong", 9);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var alert_r1 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !alert_r1.allowHtml);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", alert_r1.allowHtml);
} }
function AlertOutletComponent_div_0_p_9_Template(rf, ctx) { if (rf & 1) {
    var _r13 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "p", 12);
    ɵngcc0.ɵɵelementStart(1, "button", 13);
    ɵngcc0.ɵɵlistener("click", function AlertOutletComponent_div_0_p_9_Template_button_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r13); var alert_r1 = ɵngcc0.ɵɵnextContext().$implicit; var ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11.showDetails(alert_r1); });
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelement(3, "i", 14);
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵpipe(5, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(2, 2, "Show details"));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(5, 4, "Show details"), " ");
} }
function AlertOutletComponent_div_0_p_10_Template(rf, ctx) { if (rf & 1) {
    var _r15 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "p", 12);
    ɵngcc0.ɵɵelementStart(1, "button", 13);
    ɵngcc0.ɵɵlistener("click", function AlertOutletComponent_div_0_p_10_Template_button_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r15); var ctx_r14 = ɵngcc0.ɵɵnextContext(2); return ctx_r14.closeDetails(); });
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelement(3, "i", 15);
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵpipe(5, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(2, 2, "Hide details"));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(5, 4, "Hide details"), " ");
} }
function AlertOutletComponent_div_0_div_11_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelementStart(1, "pre");
    ɵngcc0.ɵɵelement(2, "code", 16);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r16 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("textContent", ɵngcc0.ɵɵpipeBind1(3, 1, ctx_r16.detailDisplayedAlert.contents));
} }
function AlertOutletComponent_div_0_div_11_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵtemplate(1, AlertOutletComponent_div_0_div_11_div_1_Template, 4, 3, "div", 5);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var alert_r1 = ɵngcc0.ɵɵnextContext().$implicit;
    var ctx_r5 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r5.isTemplateRef(ctx_r5.detailDisplayedAlert.contents))("ngIfElse", ctx_r5.template(alert_r1.detailedData));
} }
var _c11 = function (a0, a1) { return [a0, a1]; };
function AlertOutletComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    var _r19 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 1);
    ɵngcc0.ɵɵelementStart(1, "button", 2);
    ɵngcc0.ɵɵlistener("click", function AlertOutletComponent_div_0_Template_button_click_1_listener() { var restoredCtx = ɵngcc0.ɵɵrestoreView(_r19); var alert_r1 = restoredCtx.$implicit; var ctx_r18 = ɵngcc0.ɵɵnextContext(); return ctx_r18.close(alert_r1); });
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementStart(3, "span", 3);
    ɵngcc0.ɵɵtext(4, "\u00D7");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(5, "span", 4);
    ɵngcc0.ɵɵtext(6);
    ɵngcc0.ɵɵpipe(7, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(8, AlertOutletComponent_div_0_div_8_Template, 3, 2, "div", 5);
    ɵngcc0.ɵɵtemplate(9, AlertOutletComponent_div_0_p_9_Template, 6, 6, "p", 6);
    ɵngcc0.ɵɵtemplate(10, AlertOutletComponent_div_0_p_10_Template, 6, 6, "p", 6);
    ɵngcc0.ɵɵtemplate(11, AlertOutletComponent_div_0_div_11_Template, 2, 2, "div", 7);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var alert_r1 = ctx.$implicit;
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction2(12, _c11, ctx_r0.getClass(alert_r1), ctx_r0.isDetailsShow(alert_r1) ? "expanded" : ""));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(2, 8, "Close"));
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(7, 10, "Close"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r0.isTemplateRef(alert_r1.text))("ngIfElse", ctx_r0.template(alert_r1.text));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.hasDetails(alert_r1) && !ctx_r0.isDetailsShow(alert_r1));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.hasDetails(alert_r1) && ctx_r0.isDetailsShow(alert_r1));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.isDetailsShow(alert_r1));
} }
function BootstrapComponent_c8y_login_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "c8y-login");
} }
function BootstrapComponent_div_2_div_16_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 15);
    ɵngcc0.ɵɵelementStart(1, "p", 16);
    ɵngcc0.ɵɵtext(2, "powered by Cumulocity");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} }
var _c12 = function (a0, a1, a2, a3, a4, a5) { return { open: a0, "no-apps-margin": a1, "horizontal-tabs": a2, "vertical-tabs": a3, "has-tabs": a4, "has-action-bar": a5 }; };
function BootstrapComponent_div_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelement(1, "c8y-header-bar", null, 2);
    ɵngcc0.ɵɵelementStart(3, "c8y-navigator-outlet", 3);
    ɵngcc0.ɵɵpipe(4, "async");
    ɵngcc0.ɵɵpipe(5, "async");
    ɵngcc0.ɵɵelementStart(6, "header", 4);
    ɵngcc0.ɵɵelement(7, "div", 5);
    ɵngcc0.ɵɵelement(8, "c8y-app-icon", 6);
    ɵngcc0.ɵɵpipe(9, "async");
    ɵngcc0.ɵɵpipe(10, "async");
    ɵngcc0.ɵɵelementStart(11, "span");
    ɵngcc0.ɵɵtext(12);
    ɵngcc0.ɵɵpipe(13, "async");
    ɵngcc0.ɵɵpipe(14, "humanizeAppName");
    ɵngcc0.ɵɵpipe(15, "async");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(16, BootstrapComponent_div_2_div_16_Template, 3, 0, "div", 7);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(17, "div", 8);
    ɵngcc0.ɵɵelement(18, "c8y-alert-outlet");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(19, "c8y-tabs-outlet", 9, 10);
    ɵngcc0.ɵɵpipe(21, "async");
    ɵngcc0.ɵɵpipe(22, "async");
    ɵngcc0.ɵɵpipe(23, "async");
    ɵngcc0.ɵɵelement(24, "c8y-action-bar", 11, 12);
    ɵngcc0.ɵɵpipe(26, "async");
    ɵngcc0.ɵɵelementStart(27, "div", 13);
    ɵngcc0.ɵɵpipe(28, "async");
    ɵngcc0.ɵɵpipe(29, "async");
    ɵngcc0.ɵɵelementStart(30, "div", 14);
    ɵngcc0.ɵɵelement(31, "router-outlet");
    ɵngcc0.ɵɵprojection(32);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var _r4 = ɵngcc0.ɵɵreference(20);
    var _r5 = ɵngcc0.ɵɵreference(25);
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassProp("head-open", ctx_r1.headerService.headerOpen);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("nodes", ɵngcc0.ɵɵpipeBind1(4, 16, ctx_r1.navigator.items$))("open", ɵngcc0.ɵɵpipeBind1(5, 18, ctx_r1.headerService.navigatorOpen$));
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵproperty("name", ɵngcc0.ɵɵpipeBind1(9, 20, ctx_r1.ui.state$).app.name)("contextPath", ɵngcc0.ɵɵpipeBind1(10, 22, ctx_r1.ui.state$).app.contextPath);
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(13, 24, ɵngcc0.ɵɵpipeBind1(14, 26, ɵngcc0.ɵɵpipeBind1(15, 28, ctx_r1.ui.state$).app)));
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.showPoweredBy);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("tabs", ɵngcc0.ɵɵpipeBind1(21, 30, ctx_r1.tabs.items$))("navigatorOpen", ɵngcc0.ɵɵpipeBind1(22, 32, ctx_r1.headerService.navigatorOpen$))("orientation", ɵngcc0.ɵɵpipeBind1(23, 34, ctx_r1.tabs.orientation$));
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵproperty("navigatorOpen", ɵngcc0.ɵɵpipeBind1(26, 36, ctx_r1.headerService.navigatorOpen$))("hasTabs", _r4.hasTabs)("isTabsHorizontal", _r4.isHorizontal)("items$", ctx_r1.actionBar.items$);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction6(42, _c12, ɵngcc0.ɵɵpipeBind1(28, 38, ctx_r1.headerService.navigatorOpen$), ɵngcc0.ɵɵpipeBind1(29, 40, ctx_r1.noAppsMargin$), _r4.isHorizontal, !_r4.isHorizontal, _r4.hasTabs, !_r5.hidden));
} }
var _c13 = [[["", "id", "c8y-legacy-view"]]];
var _c14 = ["#c8y-legacy-view"];
function BreadcrumbItemComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵprojection(0);
} }
function BreadcrumbOutletComponent_div_0_button_1_i_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "i", 6);
    ɵngcc0.ɵɵpipe(1, "translate");
} if (rf & 2) {
    ɵngcc0.ɵɵpropertyInterpolate("tooltip", ɵngcc0.ɵɵpipeBind1(1, 2, "Show all breadcrumbs"));
    ɵngcc0.ɵɵproperty("c8yIcon", "caret-right");
} }
function BreadcrumbOutletComponent_div_0_button_1_i_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "i", 6);
    ɵngcc0.ɵɵpipe(1, "translate");
} if (rf & 2) {
    ɵngcc0.ɵɵpropertyInterpolate("tooltip", ɵngcc0.ɵɵpipeBind1(1, 2, "Collapse breadcrumbs"));
    ɵngcc0.ɵɵproperty("c8yIcon", "caret-down");
} }
function BreadcrumbOutletComponent_div_0_button_1_Template(rf, ctx) { if (rf & 1) {
    var _r6 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 4);
    ɵngcc0.ɵɵlistener("click", function BreadcrumbOutletComponent_div_0_button_1_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r6); var ctx_r5 = ɵngcc0.ɵɵnextContext(2); return ctx_r5.showAll = !ctx_r5.showAll; });
    ɵngcc0.ɵɵtemplate(1, BreadcrumbOutletComponent_div_0_button_1_i_1_Template, 2, 4, "i", 5);
    ɵngcc0.ɵɵtemplate(2, BreadcrumbOutletComponent_div_0_button_1_i_2_Template, 2, 4, "i", 5);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r1 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r1.showAll);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.showAll);
} }
function BreadcrumbOutletComponent_div_0_ul_2_ng_container_1_li_1_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1, " > ");
    ɵngcc0.ɵɵelementEnd();
} }
function BreadcrumbOutletComponent_div_0_ul_2_ng_container_1_li_1_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function BreadcrumbOutletComponent_div_0_ul_2_ng_container_1_li_1_ng_container_3_i_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "i", 14);
} if (rf & 2) {
    var item_r11 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵproperty("c8yIcon", item_r11.icon);
} }
function BreadcrumbOutletComponent_div_0_ul_2_ng_container_1_li_1_ng_container_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "a", 12);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵtemplate(3, BreadcrumbOutletComponent_div_0_ul_2_ng_container_1_li_1_ng_container_3_i_3_Template, 1, 1, "i", 13);
    ɵngcc0.ɵɵelementStart(4, "span");
    ɵngcc0.ɵɵtext(5);
    ɵngcc0.ɵɵpipe(6, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var ctx_r19 = ɵngcc0.ɵɵnextContext();
    var item_r11 = ctx_r19.$implicit;
    var firstItem_r12 = ctx_r19.first;
    var ctx_r15 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(2, 4, item_r11.label));
    ɵngcc0.ɵɵproperty("routerLink", ctx_r15.normalizePath(item_r11.path));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", firstItem_r12);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(6, 6, item_r11.label));
} }
function BreadcrumbOutletComponent_div_0_ul_2_ng_container_1_li_1_ng_container_4_i_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "i", 14);
} if (rf & 2) {
    var item_r11 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵproperty("c8yIcon", item_r11.icon);
} }
function BreadcrumbOutletComponent_div_0_ul_2_ng_container_1_li_1_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, BreadcrumbOutletComponent_div_0_ul_2_ng_container_1_li_1_ng_container_4_i_1_Template, 1, 1, "i", 13);
    ɵngcc0.ɵɵelementStart(2, "span");
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵpipe(4, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var ctx_r22 = ɵngcc0.ɵɵnextContext();
    var firstItem_r12 = ctx_r22.first;
    var item_r11 = ctx_r22.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", firstItem_r12);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(4, 2, item_r11.label));
} }
function BreadcrumbOutletComponent_div_0_ul_2_ng_container_1_li_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "li", 10);
    ɵngcc0.ɵɵtemplate(1, BreadcrumbOutletComponent_div_0_ul_2_ng_container_1_li_1_span_1_Template, 2, 0, "span", 8);
    ɵngcc0.ɵɵtemplate(2, BreadcrumbOutletComponent_div_0_ul_2_ng_container_1_li_1_ng_container_2_Template, 1, 0, "ng-container", 11);
    ɵngcc0.ɵɵtemplate(3, BreadcrumbOutletComponent_div_0_ul_2_ng_container_1_li_1_ng_container_3_Template, 7, 8, "ng-container", 8);
    ɵngcc0.ɵɵtemplate(4, BreadcrumbOutletComponent_div_0_ul_2_ng_container_1_li_1_ng_container_4_Template, 5, 4, "ng-container", 8);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var item_r11 = ctx.$implicit;
    var firstItem_r12 = ctx.first;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !firstItem_r12);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("c8yOutlet", item_r11.template);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", item_r11.label && item_r11.path);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", item_r11.label && !item_r11.path);
} }
function BreadcrumbOutletComponent_div_0_ul_2_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, BreadcrumbOutletComponent_div_0_ul_2_ng_container_1_li_1_Template, 5, 4, "li", 9);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var breadcrumb_r7 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", breadcrumb_r7.items);
} }
function BreadcrumbOutletComponent_div_0_ul_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "ul", 7);
    ɵngcc0.ɵɵtemplate(1, BreadcrumbOutletComponent_div_0_ul_2_ng_container_1_Template, 2, 1, "ng-container", 8);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var first_r8 = ctx.first;
    var ctx_r2 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", first_r8 || ctx_r2.showAll);
} }
var _c15 = function (a0, a1) { return { multiple: a0, open: a1 }; };
function BreadcrumbOutletComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 1);
    ɵngcc0.ɵɵtemplate(1, BreadcrumbOutletComponent_div_0_button_1_Template, 3, 2, "button", 2);
    ɵngcc0.ɵɵtemplate(2, BreadcrumbOutletComponent_div_0_ul_2_Template, 2, 1, "ul", 3);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction2(3, _c15, ctx_r0.breadcrumbs.length > 1, ctx_r0.showAll));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.breadcrumbs.length > 1);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r0.breadcrumbs);
} }
function BreadcrumbComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵprojection(0);
} }
var _c16 = ["iconTpl"];
function NavigatorItemComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵprojection(0);
} }
function PopoverConfirmComponent_ng_template_2_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    var _r5 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "button", 5);
    ɵngcc0.ɵɵlistener("click", function PopoverConfirmComponent_ng_template_2_ng_container_4_Template_button_click_1_listener() { var restoredCtx = ɵngcc0.ɵɵrestoreView(_r5); var button_r3 = restoredCtx.$implicit; var ctx_r4 = ɵngcc0.ɵɵnextContext(2); return ctx_r4.click(button_r3.action); });
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵpipe(4, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var button_r3 = ctx.$implicit;
    var ctx_r2 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(2, 3, button_r3.label));
    ɵngcc0.ɵɵproperty("ngClass", ctx_r2.buttonStatus(button_r3.status));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(4, 5, button_r3.label), " ");
} }
function PopoverConfirmComponent_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "p", 2);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "div", 3);
    ɵngcc0.ɵɵtemplate(4, PopoverConfirmComponent_ng_template_2_ng_container_4_Template, 5, 7, "ng-container", 4);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 2, ctx_r1.message), " ");
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r1.buttons);
} }
var _c17 = ["icon"];
function NavigatorNodeComponent_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function NavigatorNodeComponent_div_5_c8y_navigator_node_display_1_Template(rf, ctx) { if (rf & 1) {
    var _r7 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "c8y-navigator-node-display", 7);
    ɵngcc0.ɵɵlistener("nodeClick", function NavigatorNodeComponent_div_5_c8y_navigator_node_display_1_Template_c8y_navigator_node_display_nodeClick_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r7); var ctx_r6 = ɵngcc0.ɵɵnextContext(2); return ctx_r6.nodeClick.emit($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var childNode_r5 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("node", childNode_r5);
} }
function NavigatorNodeComponent_div_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 5);
    ɵngcc0.ɵɵtemplate(1, NavigatorNodeComponent_div_5_c8y_navigator_node_display_1_Template, 1, 1, "c8y-navigator-node-display", 6);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("collapse", !ctx_r1.node.open)("isAnimated", true);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r1.node.children);
} }
function NavigatorNodeComponent_ng_template_6_i_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "i", 12);
} if (rf & 2) {
    ɵngcc0.ɵɵproperty("c8yIcon", "circle-o-notch");
} }
function NavigatorNodeComponent_ng_template_6_i_7_Template(rf, ctx) { if (rf & 1) {
    var _r12 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "i", 13);
    ɵngcc0.ɵɵlistener("click", function NavigatorNodeComponent_ng_template_6_i_7_Template_i_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r12); var ctx_r11 = ɵngcc0.ɵɵnextContext(2); return ctx_r11.click("expander", $event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r10 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵpropertyInterpolate("title", ctx_r10.expandTitle);
    ɵngcc0.ɵɵproperty("c8yIcon", "chevron-down");
} }
function NavigatorNodeComponent_ng_template_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, NavigatorNodeComponent_ng_template_6_i_0_Template, 1, 1, "i", 8);
    ɵngcc0.ɵɵelementStart(1, "div");
    ɵngcc0.ɵɵelementContainer(2, null, 9);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(4, "span");
    ɵngcc0.ɵɵtext(5);
    ɵngcc0.ɵɵpipe(6, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(7, NavigatorNodeComponent_ng_template_6_i_7_Template, 1, 2, "i", 10);
    ɵngcc0.ɵɵelement(8, "c8y-popover-confirm", 11);
} if (rf & 2) {
    var ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngIf", ctx_r3.node.loading && !ctx_r3.isRoot);
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(6, 3, ctx_r3.node.label));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r3.node.hasChildren);
} }
var _c18 = function (a0, a1) { return { dragged: a0, disabled: a1 }; };
var _c19 = function (a0) { return { exact: a0 }; };
var _c20 = function (a0, a1, a2, a3) { return { "root-link": a0, open: a1, parent: a2, "dragged-hover": a3 }; };
function NavigatorOutletComponent_nav_0_c8y_navigator_node_display_3_Template(rf, ctx) { if (rf & 1) {
    var _r4 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "c8y-navigator-node-display", 4);
    ɵngcc0.ɵɵlistener("nodeClick", function NavigatorOutletComponent_nav_0_c8y_navigator_node_display_3_Template_c8y_navigator_node_display_nodeClick_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r4); var ctx_r3 = ɵngcc0.ɵɵnextContext(2); return ctx_r3.collapseNavigator($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var node_r2 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("node", node_r2)("isRoot", true);
} }
var _c21 = function (a0) { return { open: a0 }; };
function NavigatorOutletComponent_nav_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "nav", 1);
    ɵngcc0.ɵɵprojection(1);
    ɵngcc0.ɵɵelementStart(2, "ul", 2);
    ɵngcc0.ɵɵtemplate(3, NavigatorOutletComponent_nav_0_c8y_navigator_node_display_3_Template, 1, 2, "c8y-navigator-node-display", 3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵprojection(4, 1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(3, _c21, ctx_r0.open));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r0.nodes)("ngForTrackBy", ctx_r0.trackByPathOrLabel);
} }
var _c22 = [[["", 8, "navigator-slot-top"]], [["", 8, "navigator-slot-bottom"]]];
var _c23 = [".navigator-slot-top", ".navigator-slot-bottom"];
function ConfirmModalComponent_h3_1_span_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r2 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(2, 1, ctx_r2.title));
} }
var _c24 = function (a0) { return [a0]; };
function ConfirmModalComponent_h3_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "h3", 6);
    ɵngcc0.ɵɵelement(1, "i", 7);
    ɵngcc0.ɵɵtemplate(2, ConfirmModalComponent_h3_1_span_2_Template, 3, 3, "span", 8);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(2, _c24, ctx_r0.classIcon));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.title);
} }
function ConfirmModalComponent_button_7_Template(rf, ctx) { if (rf & 1) {
    var _r4 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 9);
    ɵngcc0.ɵɵlistener("click", function ConfirmModalComponent_button_7_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r4); var ctx_r3 = ɵngcc0.ɵɵnextContext(); return ctx_r3.dismiss(); });
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(1, 2, ctx_r1.labels.cancel));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(3, 4, ctx_r1.labels.cancel), " ");
} }
function ModalComponent_div_9_button_2_Template(rf, ctx) { if (rf & 1) {
    var _r4 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 8);
    ɵngcc0.ɵɵlistener("click", function ModalComponent_div_9_button_2_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r4); var ctx_r3 = ɵngcc0.ɵɵnextContext(2); return ctx_r3._dismiss(); });
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r1 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(1, 2, ctx_r1.labels.cancel));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(3, 4, ctx_r1.labels.cancel), " ");
} }
function ModalComponent_div_9_button_3_Template(rf, ctx) { if (rf & 1) {
    var _r6 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 9);
    ɵngcc0.ɵɵlistener("click", function ModalComponent_div_9_button_3_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r6); var ctx_r5 = ɵngcc0.ɵɵnextContext(2); return ctx_r5._close(); });
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r2 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(1, 3, ctx_r2.labels.ok));
    ɵngcc0.ɵɵproperty("disabled", ctx_r2.disabled);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(3, 5, ctx_r2.labels.ok), " ");
} }
function ModalComponent_div_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 5);
    ɵngcc0.ɵɵprojection(1, 2);
    ɵngcc0.ɵɵtemplate(2, ModalComponent_div_9_button_2_Template, 4, 6, "button", 6);
    ɵngcc0.ɵɵtemplate(3, ModalComponent_div_9_button_3_Template, 4, 7, "button", 7);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.labels.cancel);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.labels.ok);
} }
var _c25 = [[["", "c8y-modal-title", ""]], "*", [["", "c8y-modal-footer", ""]]];
var _c26 = ["[c8y-modal-title]", "*", "[c8y-modal-footer]"];
function SearchOutletComponent_ng_container_0_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function SearchOutletComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, SearchOutletComponent_ng_container_0_ng_container_1_Template, 1, 0, "ng-container", 1);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var item_r1 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("c8yOutlet", item_r1.template);
} }
function SearchComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵprojection(0);
} }
function UserMenuItemComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {
    var _r3 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "li", 1);
    ɵngcc0.ɵɵlistener("click", function UserMenuItemComponent_ng_template_0_Template_li_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r3); var ctx_r2 = ɵngcc0.ɵɵnextContext(); return ctx_r2.onClick(); });
    ɵngcc0.ɵɵelementStart(1, "a", 2);
    ɵngcc0.ɵɵelement(2, "i", 3);
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵpipe(4, "translate");
    ɵngcc0.ɵɵprojection(5);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵattribute("href", ctx_r1.link, ɵngcc0.ɵɵsanitizeUrl)("target", ctx_r1.target);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("c8yIcon", ctx_r1.icon);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(4, 4, ctx_r1.label), " ");
} }
var _c27 = ["modal"];
function UserEditComponent_div_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 29);
    ɵngcc0.ɵɵtext(1, " Some of the user settings are not editable here because they are managed via your authorization server. ");
    ɵngcc0.ɵɵelementEnd();
} }
function UserEditComponent_option_40_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "option", 30);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var lang_r7 = ctx.$implicit;
    var ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("value", lang_r7);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r3.translate.getNativeLanguage(lang_r7));
} }
function UserEditComponent_c8y_form_group_42_Template(rf, ctx) { if (rf & 1) {
    var _r9 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "c8y-form-group", 31);
    ɵngcc0.ɵɵelementStart(1, "strong", 32);
    ɵngcc0.ɵɵtext(2, "Product experience");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "label", 33);
    ɵngcc0.ɵɵelementStart(4, "input", 34);
    ɵngcc0.ɵɵlistener("ngModelChange", function UserEditComponent_c8y_form_group_42_Template_input_ngModelChange_4_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); var ctx_r8 = ɵngcc0.ɵɵnextContext(); return ctx_r8.isUsageTrackingEnabled = $event; });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(5, "span");
    ɵngcc0.ɵɵtext(6);
    ɵngcc0.ɵɵpipe(7, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r4 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵproperty("ngModel", ctx_r4.isUsageTrackingEnabled);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(7, 2, "Enable anonymous tracking to enhance the product experience"), " ");
} }
function UserEditComponent_div_43_button_5_Template(rf, ctx) { if (rf & 1) {
    var _r12 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 27);
    ɵngcc0.ɵɵlistener("click", function UserEditComponent_div_43_button_5_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r12); var ctx_r11 = ɵngcc0.ɵɵnextContext(2); return ctx_r11.setupTotp(); });
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(1, 2, "Set up two-factor authentication"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(3, 4, "Set up two-factor authentication"), " ");
} }
function UserEditComponent_div_43_Template(rf, ctx) { if (rf & 1) {
    var _r14 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 35);
    ɵngcc0.ɵɵelementStart(1, "label", 36);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(4, "c8y-new-password", 37);
    ɵngcc0.ɵɵlistener("password", function UserEditComponent_div_43_Template_c8y_new_password_password_4_listener($event) { ɵngcc0.ɵɵrestoreView(_r14); var ctx_r13 = ɵngcc0.ɵɵnextContext(); return ctx_r13.onNewPasswordChanged($event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(5, UserEditComponent_div_43_button_5_Template, 4, 6, "button", 38);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r5 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(3, 2, "Login options"));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r5.userCanSetupTotp && !ctx_r5.userHasActiveTotp && ctx_r5.isTfaEnabled);
} }
function UserEditComponent_c8y_form_group_44_Template(rf, ctx) { if (rf & 1) {
    var _r16 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "c8y-form-group");
    ɵngcc0.ɵɵelementStart(1, "label", 32);
    ɵngcc0.ɵɵtext(2, "Newsletter");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "label", 39);
    ɵngcc0.ɵɵpipe(4, "translate");
    ɵngcc0.ɵɵelementStart(5, "input", 40);
    ɵngcc0.ɵɵlistener("ngModelChange", function UserEditComponent_c8y_form_group_44_Template_input_ngModelChange_5_listener($event) { ɵngcc0.ɵɵrestoreView(_r16); var ctx_r15 = ɵngcc0.ɵɵnextContext(); return ctx_r15.user.newsletter = $event; });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(6, "span");
    ɵngcc0.ɵɵelementStart(7, "span");
    ɵngcc0.ɵɵtext(8);
    ɵngcc0.ɵɵpipe(9, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r6 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(4, 4, "Send me information about outages, maintenance or updates."));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngModel", ctx_r6.user.newsletter)("disabled", ctx_r6.userIsExternal);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(9, 6, "Send me information about outages, maintenance or updates."), " ");
} }
function UserMenuOutletComponent_ul_9_ng_container_1_ng_container_1_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function UserMenuOutletComponent_ul_9_ng_container_1_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, UserMenuOutletComponent_ul_9_ng_container_1_ng_container_1_ng_container_1_Template, 1, 0, "ng-container", 14);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var item_r7 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("c8yOutlet", item_r7.template);
} }
function UserMenuOutletComponent_ul_9_ng_container_1_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    var _r14 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "li", 15);
    ɵngcc0.ɵɵlistener("click", function UserMenuOutletComponent_ul_9_ng_container_1_ng_container_2_Template_li_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r14); var item_r7 = ɵngcc0.ɵɵnextContext().$implicit; return item_r7.click(); });
    ɵngcc0.ɵɵelementStart(2, "a", 16);
    ɵngcc0.ɵɵelement(3, "i", 17);
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵpipe(5, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var item_r7 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵattribute("href", item_r7.link, ɵngcc0.ɵɵsanitizeUrl)("target", item_r7.target);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("c8yIcon", item_r7.icon);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(5, 4, item_r7.label), " ");
} }
function UserMenuOutletComponent_ul_9_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, UserMenuOutletComponent_ul_9_ng_container_1_ng_container_1_Template, 2, 1, "ng-container", 13);
    ɵngcc0.ɵɵtemplate(2, UserMenuOutletComponent_ul_9_ng_container_1_ng_container_2_Template, 6, 6, "ng-container", 13);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var item_r7 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", item_r7.template);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !item_r7.template);
} }
function UserMenuOutletComponent_ul_9_li_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "li", 18);
} }
function UserMenuOutletComponent_ul_9_li_4_Template(rf, ctx) { if (rf & 1) {
    var _r17 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "li", 19);
    ɵngcc0.ɵɵelementStart(1, "div", 20);
    ɵngcc0.ɵɵelement(2, "i", 21);
    ɵngcc0.ɵɵelementStart(3, "span", 22);
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵpipe(5, "translate");
    ɵngcc0.ɵɵelementStart(6, "strong");
    ɵngcc0.ɵɵelementStart(7, "span", 23);
    ɵngcc0.ɵɵlistener("click", function UserMenuOutletComponent_ul_9_li_4_Template_span_click_7_listener($event) { ɵngcc0.ɵɵrestoreView(_r17); var ctx_r16 = ɵngcc0.ɵɵnextContext(2); $event.stopPropagation(); return ctx_r16.copyIt(ctx_r16.ui.currentTenant.value.name); });
    ɵngcc0.ɵɵtext(8);
    ɵngcc0.ɵɵelement(9, "i", 17);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(10, "br");
    ɵngcc0.ɵɵtext(11);
    ɵngcc0.ɵɵpipe(12, "translate");
    ɵngcc0.ɵɵelementStart(13, "strong");
    ɵngcc0.ɵɵtext(14);
    ɵngcc0.ɵɵpipe(15, "async");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(16, "br");
    ɵngcc0.ɵɵtext(17);
    ɵngcc0.ɵɵpipe(18, "translate");
    ɵngcc0.ɵɵelementStart(19, "strong");
    ɵngcc0.ɵɵtext(20);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r6 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("c8yIcon", "info-circle");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(5, 8, "Tenant ID"), ": ");
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r6.ui.currentTenant.value.name, "\u00A0 ");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("c8yIcon", "clipboard");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(12, 10, "Backend"), ": ");
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(15, 12, ctx_r6.ui.state$).versions.backend);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(18, 14, "UI"), ": ");
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(ctx_r6.ui.uiVersion);
} }
function UserMenuOutletComponent_ul_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "ul", 9);
    ɵngcc0.ɵɵtemplate(1, UserMenuOutletComponent_ul_9_ng_container_1_Template, 3, 2, "ng-container", 10);
    ɵngcc0.ɵɵtemplate(2, UserMenuOutletComponent_ul_9_li_2_Template, 1, 0, "li", 11);
    ɵngcc0.ɵɵpipe(3, "async");
    ɵngcc0.ɵɵtemplate(4, UserMenuOutletComponent_ul_9_li_4_Template, 21, 16, "li", 12);
    ɵngcc0.ɵɵpipe(5, "async");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r0.getSortedItems());
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ɵngcc0.ɵɵpipeBind1(3, 3, ctx_r0.ui.state$).hidePowered);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", !ɵngcc0.ɵɵpipeBind1(5, 5, ctx_r0.ui.state$).hidePowered);
} }
function UserMenuOutletComponent_c8y_user_menu_item_14_Template(rf, ctx) { if (rf & 1) {
    var _r19 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "c8y-user-menu-item", 6);
    ɵngcc0.ɵɵlistener("click", function UserMenuOutletComponent_c8y_user_menu_item_14_Template_c8y_user_menu_item_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r19); var ctx_r18 = ɵngcc0.ɵɵnextContext(); return ctx_r18.activateSupportAccess(); });
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵproperty("icon", "c8y-c8y-support")("label", ɵngcc0.ɵɵpipeBind1(1, 2, "Activate support"));
} }
function UserMenuOutletComponent_c8y_user_menu_item_17_Template(rf, ctx) { if (rf & 1) {
    var _r21 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "c8y-user-menu-item", 6);
    ɵngcc0.ɵɵlistener("click", function UserMenuOutletComponent_c8y_user_menu_item_17_Template_c8y_user_menu_item_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r21); var ctx_r20 = ɵngcc0.ɵɵnextContext(); return ctx_r20.deactivateSupportAccess(); });
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵproperty("icon", "c8y-c8y-support")("label", ɵngcc0.ɵɵpipeBind1(1, 2, "Deactivate support"));
} }
function UserMenuOutletComponent_c8y_user_menu_item_20_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "c8y-user-menu-item", 24);
    ɵngcc0.ɵɵpipe(1, "async");
    ɵngcc0.ɵɵpipe(2, "translate");
} if (rf & 2) {
    var ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("icon", "question-circle")("link", ɵngcc0.ɵɵpipeBind1(1, 4, ctx_r3.ui.state$).supportUrl)("target", "_blank")("label", ɵngcc0.ɵɵpipeBind1(2, 6, "Request support"));
} }
function PasswordCheckListComponent_li_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "li", 0);
    ɵngcc0.ɵɵelement(1, "i", 3);
    ɵngcc0.ɵɵelement(2, "span", 4);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var requirement_r1 = ctx.$implicit;
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("c8yIcon", requirement_r1.icon);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMapInterpolate1("small ", requirement_r1.contextualColor, "");
    ɵngcc0.ɵɵproperty("translate", requirement_r1.label)("translateParams", ctx_r0.translateParams);
} }
function NewPasswordComponent_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 1, "Change password"), " ");
} }
function NewPasswordComponent_ng_container_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 1, "Cancel password change"), " ");
} }
function NewPasswordComponent_div_4_Template(rf, ctx) { if (rf & 1) {
    var _r6 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 4);
    ɵngcc0.ɵɵelementStart(1, "div", 5);
    ɵngcc0.ɵɵelementStart(2, "c8y-form-group");
    ɵngcc0.ɵɵelementStart(3, "label", 6);
    ɵngcc0.ɵɵtext(4, "Password");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(5, "input", 7, 8);
    ɵngcc0.ɵɵlistener("ngModelChange", function NewPasswordComponent_div_4_Template_input_ngModelChange_5_listener($event) { ɵngcc0.ɵɵrestoreView(_r6); var ctx_r5 = ɵngcc0.ɵɵnextContext(); return ctx_r5.model.newPassword = $event; })("change", function NewPasswordComponent_div_4_Template_input_change_5_listener() { ɵngcc0.ɵɵrestoreView(_r6); var ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7.newPasswordChanged(); })("input", function NewPasswordComponent_div_4_Template_input_input_5_listener() { ɵngcc0.ɵɵrestoreView(_r6); var _r4 = ɵngcc0.ɵɵreference(11); return _r4.control.updateValueAndValidity(); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(7, "c8y-form-group");
    ɵngcc0.ɵɵelementStart(8, "label", 9);
    ɵngcc0.ɵɵtext(9, "Confirm password");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(10, "input", 10, 11);
    ɵngcc0.ɵɵlistener("ngModelChange", function NewPasswordComponent_div_4_Template_input_ngModelChange_10_listener($event) { ɵngcc0.ɵɵrestoreView(_r6); var ctx_r9 = ɵngcc0.ɵɵnextContext(); return ctx_r9.model.newPasswordConfirm = $event; });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(12, "div", 12);
    ɵngcc0.ɵɵelementStart(13, "c8y-password-strength", 13);
    ɵngcc0.ɵɵlistener("strength", function NewPasswordComponent_div_4_Template_c8y_password_strength_strength_13_listener($event) { ɵngcc0.ɵɵrestoreView(_r6); var ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10.model.strength = $event; });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(14, "c8y-password-check-list", 14);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵproperty("ngModel", ctx_r2.model.newPassword);
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵproperty("ngModel", ctx_r2.model.newPasswordConfirm);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("password", ctx_r2.model.newPassword);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("password", ctx_r2.model.newPassword)("hidden", !ctx_r2.passwordEnforced);
} }
function MessagesComponent_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 2);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var msg_r1 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 1, msg_r1), " ");
} }
function FormGroupComponent_c8y_messages_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "c8y-messages", 1);
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("show", ctx_r0.errors);
} }
function InputGroupListComponent_button_4_Template(rf, ctx) { if (rf & 1) {
    var _r3 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 3);
    ɵngcc0.ɵɵlistener("click", function InputGroupListComponent_button_4_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r3); var ctx_r2 = ɵngcc0.ɵɵnextContext(); return ctx_r2.remove(); });
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵelement(2, "i", 4);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(1, 1, "Remove"));
} }
function InputGroupListComponent_button_5_Template(rf, ctx) { if (rf & 1) {
    var _r5 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 3);
    ɵngcc0.ɵɵlistener("click", function InputGroupListComponent_button_5_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r5); var ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4.add(); });
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵelement(2, "i", 5);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(1, 1, "Add"));
} }
function IpRangeInputListComponent_li_2_Template(rf, ctx) { if (rf & 1) {
    var _r6 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "li", 3);
    ɵngcc0.ɵɵelementStart(1, "c8y-input-group-list", 4);
    ɵngcc0.ɵɵlistener("onAdd", function IpRangeInputListComponent_li_2_Template_c8y_input_group_list_onAdd_1_listener() { ɵngcc0.ɵɵrestoreView(_r6); var ctx_r5 = ɵngcc0.ɵɵnextContext(); return ctx_r5.add(); })("onRemove", function IpRangeInputListComponent_li_2_Template_c8y_input_group_list_onRemove_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r6); var ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7.remove($event); });
    ɵngcc0.ɵɵelementStart(2, "input", 5, 6);
    ɵngcc0.ɵɵlistener("ngModelChange", function IpRangeInputListComponent_li_2_Template_input_ngModelChange_2_listener($event) { var restoredCtx = ɵngcc0.ɵɵrestoreView(_r6); var item_r1 = restoredCtx.$implicit; return item_r1.ip = $event; });
    ɵngcc0.ɵɵpipe(4, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(5, "input", 7, 8);
    ɵngcc0.ɵɵlistener("ngModelChange", function IpRangeInputListComponent_li_2_Template_input_ngModelChange_5_listener($event) { var restoredCtx = ɵngcc0.ɵɵrestoreView(_r6); var item_r1 = restoredCtx.$implicit; return item_r1.cidr = $event; });
    ɵngcc0.ɵɵpipe(7, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var item_r1 = ctx.$implicit;
    var i_r2 = ctx.index;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("index", i_r2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate1("placeholder", "", ɵngcc0.ɵɵpipeBind1(4, 8, "IP range start, e.g."), " 192.168.0.1");
    ɵngcc0.ɵɵproperty("ngModel", item_r1.ip)("required", true);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵpropertyInterpolate1("placeholder", "", ɵngcc0.ɵɵpipeBind1(7, 10, "e.g."), " 20");
    ɵngcc0.ɵɵproperty("min", 0)("ngModel", item_r1.cidr)("required", true);
} }
var _c28 = ["c8yRangeValue"];
function RangeComponent_span_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r0.value);
} }
function RangeComponent_ng_container_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function TotpChallengeComponent_c8y_message_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "c8y-message", 9);
    ɵngcc0.ɵɵtext(1, " Invalid verification code. In case of key loss, please contact your platform administrator. ");
    ɵngcc0.ɵɵelementEnd();
} }
function TotpChallengeComponent_p_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "p", 10);
    ɵngcc0.ɵɵtext(1, " In case of key loss, please contact your platform administrator. ");
    ɵngcc0.ɵɵelementEnd();
} }
function TotpChallengeComponent_button_10_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "button", 11);
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵnextContext();
    var _r0 = ɵngcc0.ɵɵreference(1);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(1, 3, "Verify"));
    ɵngcc0.ɵɵproperty("disabled", !_r0.form.valid);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(3, 5, "Verify"), " ");
} }
function TotpChallengeComponent_button_11_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "button", 12);
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(1, 2, "Verifying\u2026"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(3, 4, "Verifying\u2026"), " ");
} }
function SmsChallengeComponent_p_10_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "p", 11);
    ɵngcc0.ɵɵtext(1, " Insert the code received via SMS. ");
    ɵngcc0.ɵɵelementEnd();
} }
var _c29 = function (a0) { return { disabled: a0 }; };
function TotpSetupComponent_qrcode_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "qrcode", 4);
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("width", 300)("qrdata", ctx_r0.qrData)("cssClass", "m-b-16")("errorCorrectionLevel", "M");
} }
function UserTotpRevokeComponent_ng_template_6_Template(rf, ctx) { if (rf & 1) {
    var _r4 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "p", 4);
    ɵngcc0.ɵɵtext(1, " This action will revoke the user's stored TOTP secret which will require a new setup. ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(2, "button", 5);
    ɵngcc0.ɵɵlistener("click", function UserTotpRevokeComponent_ng_template_6_Template_button_click_2_listener() { ɵngcc0.ɵɵrestoreView(_r4); var ctx_r3 = ɵngcc0.ɵɵnextContext(); var _r0 = ɵngcc0.ɵɵreference(1); ctx_r3.revoke(); return _r0.hide(); });
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵtext(4, " Revoke ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(5, "button", 6);
    ɵngcc0.ɵɵlistener("click", function UserTotpRevokeComponent_ng_template_6_Template_button_click_5_listener() { ɵngcc0.ɵɵrestoreView(_r4); ɵngcc0.ɵɵnextContext(); var _r0 = ɵngcc0.ɵɵreference(1); return _r0.hide(); });
    ɵngcc0.ɵɵpipe(6, "translate");
    ɵngcc0.ɵɵtext(7, " Cancel ");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(3, 2, "Revoke"));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(6, 4, "Cancel"));
} }
function AppIconComponent_i_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "i", 2);
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ctx_r0.model.iconClass)("ngStyle", ctx_r0.model.iconStyle);
} }
function AppIconComponent_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 3);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r1.model.appNameAbbr, "");
} }
var _c30 = function (a0) { return { applicationName: a0 }; };
function AppSwitcherComponent_div_3_div_1_a_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "a", 10);
    ɵngcc0.ɵɵpipe(1, "async");
    ɵngcc0.ɵɵpipe(2, "humanizeAppName");
    ɵngcc0.ɵɵelement(3, "c8y-app-icon", 11);
    ɵngcc0.ɵɵelementStart(4, "span", 12);
    ɵngcc0.ɵɵtext(5);
    ɵngcc0.ɵɵpipe(6, "async");
    ɵngcc0.ɵɵpipe(7, "humanizeAppName");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var app_r4 = ctx.$implicit;
    var ctx_r3 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(1, 8, ɵngcc0.ɵɵpipeBind1(2, 10, app_r4.name)));
    ɵngcc0.ɵɵproperty("href", ctx_r3.getHref(app_r4), ɵngcc0.ɵɵsanitizeUrl)("actionName", "appSwitched")("actionData", ɵngcc0.ɵɵpureFunction1(16, _c30, app_r4 && app_r4.name));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("app", app_r4)("name", app_r4.name)("contextPath", app_r4.contextPath);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(6, 12, ɵngcc0.ɵɵpipeBind1(7, 14, app_r4)));
} }
function AppSwitcherComponent_div_3_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 8);
    ɵngcc0.ɵɵtemplate(1, AppSwitcherComponent_div_3_div_1_a_1_Template, 8, 18, "a", 9);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r1 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r1.oneCloudApps);
} }
function AppSwitcherComponent_div_3_a_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "a", 13);
    ɵngcc0.ɵɵpipe(1, "async");
    ɵngcc0.ɵɵpipe(2, "humanizeAppName");
    ɵngcc0.ɵɵelement(3, "c8y-app-icon", 11);
    ɵngcc0.ɵɵelementStart(4, "span", 12);
    ɵngcc0.ɵɵtext(5);
    ɵngcc0.ɵɵpipe(6, "async");
    ɵngcc0.ɵɵpipe(7, "humanizeAppName");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var app_r5 = ctx.$implicit;
    var ctx_r2 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(1, 9, ɵngcc0.ɵɵpipeBind1(2, 11, app_r5.name)));
    ɵngcc0.ɵɵproperty("ngClass", ctx_r2.isActive(app_r5) ? "active" : "")("href", ctx_r2.getHref(app_r5), ɵngcc0.ɵɵsanitizeUrl)("actionName", "appSwitched")("actionData", ɵngcc0.ɵɵpureFunction1(17, _c30, app_r5 && app_r5.name));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("app", app_r5)("name", app_r5.name)("contextPath", app_r5.contextPath);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(6, 13, ɵngcc0.ɵɵpipeBind1(7, 15, app_r5)));
} }
function AppSwitcherComponent_div_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 4);
    ɵngcc0.ɵɵtemplate(1, AppSwitcherComponent_div_3_div_1_Template, 2, 1, "div", 5);
    ɵngcc0.ɵɵelementStart(2, "div", 6);
    ɵngcc0.ɵɵtemplate(3, AppSwitcherComponent_div_3_a_3_Template, 8, 19, "a", 7);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.oneCloudApps && ctx_r0.oneCloudApps.length > 0);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r0.apps);
} }
function HeaderBarComponent_button_3_i_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "i", 14);
} if (rf & 2) {
    ɵngcc0.ɵɵproperty("c8yIcon", "outdent");
} }
function HeaderBarComponent_button_3_i_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "i", 14);
} if (rf & 2) {
    ɵngcc0.ɵɵproperty("c8yIcon", "dedent-right");
} }
function HeaderBarComponent_button_3_Template(rf, ctx) { if (rf & 1) {
    var _r6 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 17);
    ɵngcc0.ɵɵlistener("click", function HeaderBarComponent_button_3_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r6); var ctx_r5 = ɵngcc0.ɵɵnextContext(); return ctx_r5.headerService.toggleNavigator(); });
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵtemplate(2, HeaderBarComponent_button_3_i_2_Template, 1, 1, "i", 18);
    ɵngcc0.ɵɵpipe(3, "async");
    ɵngcc0.ɵɵtemplate(4, HeaderBarComponent_button_3_i_4_Template, 1, 1, "i", 18);
    ɵngcc0.ɵɵpipe(5, "async");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(1, 3, "Toggle navigator"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", !ɵngcc0.ɵɵpipeBind1(3, 5, ctx_r0.headerService.navigatorOpen$));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind1(5, 7, ctx_r0.headerService.navigatorOpen$));
} }
function HeaderBarComponent_button_23_i_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "i", 14);
} if (rf & 2) {
    ɵngcc0.ɵɵproperty("c8yIcon", "indent");
} }
function HeaderBarComponent_button_23_i_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "i", 14);
} if (rf & 2) {
    ɵngcc0.ɵɵproperty("c8yIcon", "dedent");
} }
function HeaderBarComponent_button_23_Template(rf, ctx) { if (rf & 1) {
    var _r10 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 19);
    ɵngcc0.ɵɵlistener("click", function HeaderBarComponent_button_23_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r10); var ctx_r9 = ɵngcc0.ɵɵnextContext(); return ctx_r9.drawerOpen = !ctx_r9.drawerOpen; });
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵtemplate(2, HeaderBarComponent_button_23_i_2_Template, 1, 1, "i", 18);
    ɵngcc0.ɵɵtemplate(3, HeaderBarComponent_button_23_i_3_Template, 1, 1, "i", 18);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(1, 3, "Toggle side drawer"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.drawerOpen);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r1.drawerOpen);
} }
function HeaderBarComponent_c8y_right_drawer_29_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "c8y-right-drawer", 20);
    ɵngcc0.ɵɵpipe(1, "async");
    ɵngcc0.ɵɵpipe(2, "async");
    ɵngcc0.ɵɵpipe(3, "async");
} if (rf & 2) {
    var ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("app", ɵngcc0.ɵɵpipeBind1(1, 3, ctx_r2.appState$).app)("quickLinks", ɵngcc0.ɵɵpipeBind1(2, 5, ctx_r2.docs.items$))("helpAndSupport", ɵngcc0.ɵɵpipeBind1(3, 7, ctx_r2.docs.items$));
} }
var _c31 = function (a0, a1) { return { open: a0, drawerOpen: a1 }; };
var _c32 = function (a0) { return { active: a0 }; };
function RightDrawerComponent_div_7_ng_container_4_h2_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "h2");
    ɵngcc0.ɵɵelement(1, "i");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var quickLink_r3 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMap(quickLink_r3.icon);
} }
function RightDrawerComponent_div_7_ng_container_4_img_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "img", 9);
} if (rf & 2) {
    var quickLink_r3 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("src", quickLink_r3.iconSrc, ɵngcc0.ɵɵsanitizeUrl);
} }
function RightDrawerComponent_div_7_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    var _r9 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "a", 7);
    ɵngcc0.ɵɵlistener("click", function RightDrawerComponent_div_7_ng_container_4_Template_a_click_1_listener($event) { var restoredCtx = ɵngcc0.ɵɵrestoreView(_r9); var quickLink_r3 = restoredCtx.$implicit; quickLink_r3.click && $event.preventDefault(); return quickLink_r3.click && quickLink_r3.click(); });
    ɵngcc0.ɵɵtemplate(2, RightDrawerComponent_div_7_ng_container_4_h2_2_Template, 2, 3, "h2", 3);
    ɵngcc0.ɵɵtemplate(3, RightDrawerComponent_div_7_ng_container_4_img_3_Template, 1, 1, "img", 8);
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵpipe(5, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var quickLink_r3 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("href", quickLink_r3.url || "#", ɵngcc0.ɵɵsanitizeUrl);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", quickLink_r3.icon);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", quickLink_r3.iconSrc);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(5, 4, quickLink_r3.label), " ");
} }
function RightDrawerComponent_div_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelementStart(1, "div", 4);
    ɵngcc0.ɵɵtext(2, "Quick links");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "div", 5);
    ɵngcc0.ɵɵtemplate(4, RightDrawerComponent_div_7_ng_container_4_Template, 6, 6, "ng-container", 6);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r0.quickLinks);
} }
function RightDrawerComponent_div_8_div_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 12);
    ɵngcc0.ɵɵelementStart(1, "a", 13);
    ɵngcc0.ɵɵelement(2, "i", 14);
    ɵngcc0.ɵɵelementStart(3, "span", 15);
    ɵngcc0.ɵɵpipe(4, "translate");
    ɵngcc0.ɵɵtext(5);
    ɵngcc0.ɵɵpipe(6, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var link_r11 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("href", link_r11.url, ɵngcc0.ɵɵsanitizeUrl);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("c8yIcon", link_r11.icon);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(4, 4, link_r11.label));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(6, 6, link_r11.label), " ");
} }
function RightDrawerComponent_div_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelementStart(1, "div", 10);
    ɵngcc0.ɵɵtext(2, "Help & support");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(3, RightDrawerComponent_div_8_div_3_Template, 7, 8, "div", 11);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r1.helpAndSupport);
} }
function TitleOutletComponent_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "div", 2);
} }
function TitleComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "h1", 1);
    ɵngcc0.ɵɵprojection(1);
    ɵngcc0.ɵɵelementEnd();
} }
function ChangePasswordComponent_c8y_form_group_4_Template(rf, ctx) { if (rf & 1) {
    var _r7 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "c8y-form-group", 19);
    ɵngcc0.ɵɵelementStart(1, "label", 4);
    ɵngcc0.ɵɵtext(2, "Tenant ID");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "input", 20, 21);
    ɵngcc0.ɵɵlistener("ngModelChange", function ChangePasswordComponent_c8y_form_group_4_Template_input_ngModelChange_3_listener($event) { ɵngcc0.ɵɵrestoreView(_r7); var ctx_r6 = ɵngcc0.ɵɵnextContext(); return ctx_r6.model.tenantId = $event; });
    ɵngcc0.ɵɵpipe(5, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵpropertyInterpolate("placeholder", ɵngcc0.ɵɵpipeBind1(5, 2, "Tenant ID"));
    ɵngcc0.ɵɵproperty("ngModel", ctx_r1.model.tenantId);
} }
function CredentialsComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    var _r3 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 2);
    ɵngcc0.ɵɵelementStart(1, "button", 3);
    ɵngcc0.ɵɵlistener("click", function CredentialsComponent_div_0_Template_button_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r3); var ctx_r2 = ɵngcc0.ɵɵnextContext(); return ctx_r2.redirectToOauth(); });
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelement(3, "i", 4);
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵpipe(5, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(2, 3, ctx_r0.oauthOptions.buttonName));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("c8yIcon", "sign-in");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(5, 5, ctx_r0.oauthOptions.buttonName), " ");
} }
function CredentialsComponent_form_1_div_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 21);
    ɵngcc0.ɵɵtext(1, " Login ");
    ɵngcc0.ɵɵelementEnd();
} }
function CredentialsComponent_form_1_ng_template_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 21);
    ɵngcc0.ɵɵtext(1, "or");
    ɵngcc0.ɵɵelementEnd();
} }
function CredentialsComponent_form_1_c8y_form_group_5_Template(rf, ctx) { if (rf & 1) {
    var _r15 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "c8y-form-group", 22);
    ɵngcc0.ɵɵelementStart(1, "label", 23);
    ɵngcc0.ɵɵtext(2, "Tenant ID");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "input", 24, 25);
    ɵngcc0.ɵɵlistener("ngModelChange", function CredentialsComponent_form_1_c8y_form_group_5_Template_input_ngModelChange_3_listener($event) { ɵngcc0.ɵɵrestoreView(_r15); var ctx_r14 = ɵngcc0.ɵɵnextContext(2); return ctx_r14.model.tenant = $event; });
    ɵngcc0.ɵɵpipe(5, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r8 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵpropertyInterpolate1("placeholder", "", ɵngcc0.ɵɵpipeBind1(5, 2, "e.g."), " t12345");
    ɵngcc0.ɵɵproperty("ngModel", ctx_r8.model.tenant);
} }
function CredentialsComponent_form_1_div_17_Template(rf, ctx) { if (rf & 1) {
    var _r17 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 26);
    ɵngcc0.ɵɵelementStart(1, "label", 27);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementStart(3, "input", 28);
    ɵngcc0.ɵɵlistener("ngModelChange", function CredentialsComponent_form_1_div_17_Template_input_ngModelChange_3_listener($event) { ɵngcc0.ɵɵrestoreView(_r17); var ctx_r16 = ɵngcc0.ɵɵnextContext(2); return ctx_r16.loginService.rememberMe = $event; });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(4, "span");
    ɵngcc0.ɵɵelementStart(5, "span");
    ɵngcc0.ɵɵtext(6);
    ɵngcc0.ɵɵpipe(7, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r11 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(2, 3, "Remember me"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngModel", ctx_r11.loginService.rememberMe);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(7, 5, "Remember me"));
} }
function CredentialsComponent_form_1_div_27_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 18);
    ɵngcc0.ɵɵelementStart(1, "a", 29);
    ɵngcc0.ɵɵpipe(2, "async");
    ɵngcc0.ɵɵpipe(3, "async");
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵpipe(5, "async");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r12 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(2, 3, ctx_r12.ui.state$).loginExtraLink.label);
    ɵngcc0.ɵɵproperty("href", ɵngcc0.ɵɵpipeBind1(3, 5, ctx_r12.ui.state$).loginExtraLink.url, ɵngcc0.ɵɵsanitizeUrl);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(5, 7, ctx_r12.ui.state$).loginExtraLink.label, "");
} }
function CredentialsComponent_form_1_Template(rf, ctx) { if (rf & 1) {
    var _r19 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "form", 5, 6);
    ɵngcc0.ɵɵlistener("ngSubmit", function CredentialsComponent_form_1_Template_form_ngSubmit_0_listener() { ɵngcc0.ɵɵrestoreView(_r19); var ctx_r18 = ɵngcc0.ɵɵnextContext(); return ctx_r18.login(); });
    ɵngcc0.ɵɵtemplate(2, CredentialsComponent_form_1_div_2_Template, 2, 0, "div", 7);
    ɵngcc0.ɵɵtemplate(3, CredentialsComponent_form_1_ng_template_3_Template, 2, 0, "ng-template", null, 8, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵtemplate(5, CredentialsComponent_form_1_c8y_form_group_5_Template, 6, 4, "c8y-form-group", 9);
    ɵngcc0.ɵɵelementStart(6, "c8y-form-group");
    ɵngcc0.ɵɵelementStart(7, "label", 10);
    ɵngcc0.ɵɵtext(8, "Username");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(9, "input", 11, 12);
    ɵngcc0.ɵɵlistener("ngModelChange", function CredentialsComponent_form_1_Template_input_ngModelChange_9_listener($event) { ɵngcc0.ɵɵrestoreView(_r19); var ctx_r20 = ɵngcc0.ɵɵnextContext(); return ctx_r20.model.user = $event; });
    ɵngcc0.ɵɵpipe(11, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(12, "c8y-form-group");
    ɵngcc0.ɵɵelementStart(13, "label", 13);
    ɵngcc0.ɵɵtext(14, "Password");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(15, "input", 14, 15);
    ɵngcc0.ɵɵlistener("ngModelChange", function CredentialsComponent_form_1_Template_input_ngModelChange_15_listener($event) { ɵngcc0.ɵɵrestoreView(_r19); var ctx_r21 = ɵngcc0.ɵɵnextContext(); return ctx_r21.model.password = $event; });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(17, CredentialsComponent_form_1_div_17_Template, 8, 7, "div", 16);
    ɵngcc0.ɵɵelementStart(18, "button", 17);
    ɵngcc0.ɵɵpipe(19, "translate");
    ɵngcc0.ɵɵtext(20);
    ɵngcc0.ɵɵpipe(21, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(22, "div", 18);
    ɵngcc0.ɵɵelementStart(23, "a", 19);
    ɵngcc0.ɵɵlistener("click", function CredentialsComponent_form_1_Template_a_click_23_listener() { ɵngcc0.ɵɵrestoreView(_r19); var ctx_r22 = ɵngcc0.ɵɵnextContext(); return ctx_r22.onChangeView.emit({ view: ctx_r22.LOGIN_VIEWS.RecoverPassword }); });
    ɵngcc0.ɵɵpipe(24, "translate");
    ɵngcc0.ɵɵtext(25);
    ɵngcc0.ɵɵpipe(26, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(27, CredentialsComponent_form_1_div_27_Template, 6, 9, "div", 20);
    ɵngcc0.ɵɵpipe(28, "async");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var _r4 = ɵngcc0.ɵɵreference(1);
    var _r6 = ɵngcc0.ɵɵreference(4);
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", !(ctx_r1.oauthOptions.initRequest && ctx_r1.oauthOptions.visibleOnLoginPage))("ngIfElse", _r6);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.loginService.showTenant());
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵpropertyInterpolate("placeholder", ɵngcc0.ɵɵpipeBind1(11, 13, "e.g. joe or joe.doe@example.com`LOCALIZE`"));
    ɵngcc0.ɵɵproperty("ngModel", ctx_r1.model.user);
    ɵngcc0.ɵɵadvance(6);
    ɵngcc0.ɵɵproperty("ngModel", ctx_r1.model.password);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.showBasicAuth);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(19, 15, "Log in"));
    ɵngcc0.ɵɵproperty("disabled", !_r4.form.valid || ctx_r1.isLoading);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(21, 17, "Log in"), " ");
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(24, 19, "Forgot password?"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(26, 21, "Forgot password?"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", !!ɵngcc0.ɵɵpipeBind1(28, 23, ctx_r1.ui.state$).loginExtraLink);
} }
function LoginComponent_div_0_c8y_credentials_3_Template(rf, ctx) { if (rf & 1) {
    var _r10 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "c8y-credentials", 10);
    ɵngcc0.ɵɵlistener("onChangeView", function LoginComponent_div_0_c8y_credentials_3_Template_c8y_credentials_onChangeView_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r10); var ctx_r9 = ɵngcc0.ɵɵnextContext(2); return ctx_r9.handleLoginTemplate($event); });
    ɵngcc0.ɵɵelementEnd();
} }
function LoginComponent_div_0_c8y_recover_password_4_Template(rf, ctx) { if (rf & 1) {
    var _r12 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "c8y-recover-password", 10);
    ɵngcc0.ɵɵlistener("onChangeView", function LoginComponent_div_0_c8y_recover_password_4_Template_c8y_recover_password_onChangeView_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r12); var ctx_r11 = ɵngcc0.ɵɵnextContext(2); return ctx_r11.handleLoginTemplate($event); });
    ɵngcc0.ɵɵelementEnd();
} }
function LoginComponent_div_0_c8y_change_password_5_Template(rf, ctx) { if (rf & 1) {
    var _r14 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "c8y-change-password", 11);
    ɵngcc0.ɵɵlistener("onChangeView", function LoginComponent_div_0_c8y_change_password_5_Template_c8y_change_password_onChangeView_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r14); var ctx_r13 = ɵngcc0.ɵɵnextContext(2); return ctx_r13.handleLoginTemplate($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r3 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("credentials", ctx_r3.credentials);
} }
function LoginComponent_div_0_c8y_totp_auth_6_Template(rf, ctx) { if (rf & 1) {
    var _r16 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "c8y-totp-auth", 12);
    ɵngcc0.ɵɵlistener("onCancel", function LoginComponent_div_0_c8y_totp_auth_6_Template_c8y_totp_auth_onCancel_0_listener() { ɵngcc0.ɵɵrestoreView(_r16); var ctx_r15 = ɵngcc0.ɵɵnextContext(2); return ctx_r15.reset(); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r4 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("view", ctx_r4.currentView)("credentials", ctx_r4.credentials);
} }
function LoginComponent_div_0_c8y_totp_auth_7_Template(rf, ctx) { if (rf & 1) {
    var _r18 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "c8y-totp-auth", 12);
    ɵngcc0.ɵɵlistener("onCancel", function LoginComponent_div_0_c8y_totp_auth_7_Template_c8y_totp_auth_onCancel_0_listener() { ɵngcc0.ɵɵrestoreView(_r18); var ctx_r17 = ɵngcc0.ɵɵnextContext(2); return ctx_r17.reset(); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r5 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("view", ctx_r5.currentView)("credentials", ctx_r5.credentials);
} }
function LoginComponent_div_0_c8y_sms_challenge_8_Template(rf, ctx) { if (rf & 1) {
    var _r20 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "c8y-sms-challenge", 13);
    ɵngcc0.ɵɵlistener("onCancel", function LoginComponent_div_0_c8y_sms_challenge_8_Template_c8y_sms_challenge_onCancel_0_listener() { ɵngcc0.ɵɵrestoreView(_r20); var ctx_r19 = ɵngcc0.ɵɵnextContext(2); return ctx_r19.reset(); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r6 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("credentials", ctx_r6.credentials);
} }
function LoginComponent_div_0_c8y_provide_phone_number_9_Template(rf, ctx) { if (rf & 1) {
    var _r22 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "c8y-provide-phone-number", 14);
    ɵngcc0.ɵɵlistener("onCancel", function LoginComponent_div_0_c8y_provide_phone_number_9_Template_c8y_provide_phone_number_onCancel_0_listener() { ɵngcc0.ɵɵrestoreView(_r22); var ctx_r21 = ɵngcc0.ɵɵnextContext(2); return ctx_r21.reset(); })("onChangeView", function LoginComponent_div_0_c8y_provide_phone_number_9_Template_c8y_provide_phone_number_onChangeView_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r22); var ctx_r23 = ɵngcc0.ɵɵnextContext(2); return ctx_r23.handleLoginTemplate($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r7 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("credentials", ctx_r7.credentials);
} }
function LoginComponent_div_0_c8y_tenant_id_setup_10_Template(rf, ctx) { if (rf & 1) {
    var _r25 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "c8y-tenant-id-setup", 10);
    ɵngcc0.ɵɵlistener("onChangeView", function LoginComponent_div_0_c8y_tenant_id_setup_10_Template_c8y_tenant_id_setup_onChangeView_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r25); var ctx_r24 = ɵngcc0.ɵɵnextContext(2); return ctx_r24.handleLoginTemplate($event); });
    ɵngcc0.ɵɵelementEnd();
} }
function LoginComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 1);
    ɵngcc0.ɵɵelementStart(1, "div", 2);
    ɵngcc0.ɵɵelement(2, "img", 3);
    ɵngcc0.ɵɵtemplate(3, LoginComponent_div_0_c8y_credentials_3_Template, 1, 0, "c8y-credentials", 4);
    ɵngcc0.ɵɵtemplate(4, LoginComponent_div_0_c8y_recover_password_4_Template, 1, 0, "c8y-recover-password", 4);
    ɵngcc0.ɵɵtemplate(5, LoginComponent_div_0_c8y_change_password_5_Template, 1, 1, "c8y-change-password", 5);
    ɵngcc0.ɵɵtemplate(6, LoginComponent_div_0_c8y_totp_auth_6_Template, 1, 2, "c8y-totp-auth", 6);
    ɵngcc0.ɵɵtemplate(7, LoginComponent_div_0_c8y_totp_auth_7_Template, 1, 2, "c8y-totp-auth", 6);
    ɵngcc0.ɵɵtemplate(8, LoginComponent_div_0_c8y_sms_challenge_8_Template, 1, 1, "c8y-sms-challenge", 7);
    ɵngcc0.ɵɵtemplate(9, LoginComponent_div_0_c8y_provide_phone_number_9_Template, 1, 1, "c8y-provide-phone-number", 8);
    ɵngcc0.ɵɵtemplate(10, LoginComponent_div_0_c8y_tenant_id_setup_10_Template, 1, 0, "c8y-tenant-id-setup", 4);
    ɵngcc0.ɵɵelement(11, "c8y-alert-outlet", 9);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngSwitch", ctx_r0.currentView);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngSwitchCase", ctx_r0.LOGIN_VIEWS.Credentials);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", ctx_r0.LOGIN_VIEWS.RecoverPassword);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", ctx_r0.LOGIN_VIEWS.ChangePassword);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", ctx_r0.LOGIN_VIEWS.TotpChallenge);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", ctx_r0.LOGIN_VIEWS.TotpSetup);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", ctx_r0.LOGIN_VIEWS.SmsChallenge);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", ctx_r0.LOGIN_VIEWS.ProvidePhoneNumber);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", ctx_r0.LOGIN_VIEWS.TenantIdSetup);
} }
function RecoverPasswordComponent_c8y_form_group_4_Template(rf, ctx) { if (rf & 1) {
    var _r5 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "c8y-form-group", 10);
    ɵngcc0.ɵɵelementStart(1, "label", 4);
    ɵngcc0.ɵɵtext(2, "Tenant ID");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "input", 11, 12);
    ɵngcc0.ɵɵlistener("ngModelChange", function RecoverPasswordComponent_c8y_form_group_4_Template_input_ngModelChange_3_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); var ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4.model.tenantId = $event; });
    ɵngcc0.ɵɵpipe(5, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵpropertyInterpolate("placeholder", ɵngcc0.ɵɵpipeBind1(5, 2, "Tenant ID"));
    ɵngcc0.ɵɵproperty("ngModel", ctx_r1.model.tenantId);
} }
function TotpAuthComponent_c8y_totp_setup_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "c8y-totp-setup");
} }
var _c33 = ["tpl"];
function TabComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵprojection(0);
} }
var _c34 = ["container"];
var _c35 = ["left"];
var _c36 = ["right"];
var _c37 = ["tabsContainer"];
function TabsOutletComponent_button_2_Template(rf, ctx) { if (rf & 1) {
    var _r9 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 12, 13);
    ɵngcc0.ɵɵlistener("click", function TabsOutletComponent_button_2_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r9); var ctx_r8 = ɵngcc0.ɵɵnextContext(); return ctx_r8.scroll("left"); });
    ɵngcc0.ɵɵelement(2, "i", 14);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("c8yIcon", "chevron-left");
} }
function TabsOutletComponent_button_3_Template(rf, ctx) { if (rf & 1) {
    var _r12 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 15, 16);
    ɵngcc0.ɵɵlistener("click", function TabsOutletComponent_button_3_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r12); var ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11.scroll("right"); });
    ɵngcc0.ɵɵelement(2, "i", 14);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("c8yIcon", "chevron-right");
} }
function TabsOutletComponent_li_6_i_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "i", 14);
} if (rf & 2) {
    var tab_r13 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("c8yIcon", tab_r13 == null ? null : tab_r13.icon);
} }
function TabsOutletComponent_li_6_span_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 23);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var tab_r13 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(2, 1, tab_r13 == null ? null : tab_r13.label));
} }
function TabsOutletComponent_li_6_ng_container_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
var _c38 = function (a0) { return { "active": a0 }; };
function TabsOutletComponent_li_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "li", 17);
    ɵngcc0.ɵɵelementStart(1, "a", 18, 19);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵtemplate(4, TabsOutletComponent_li_6_i_4_Template, 1, 1, "i", 20);
    ɵngcc0.ɵɵtemplate(5, TabsOutletComponent_li_6_span_5_Template, 3, 3, "span", 21);
    ɵngcc0.ɵɵtemplate(6, TabsOutletComponent_li_6_ng_container_6_Template, 1, 0, "ng-container", 22);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var tab_r13 = ctx.$implicit;
    var _r14 = ɵngcc0.ɵɵreference(2);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(8, _c38, _r14.isActive));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(3, 6, tab_r13 == null ? null : tab_r13.label));
    ɵngcc0.ɵɵproperty("routerLink", tab_r13.path);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", !tab_r13.template && (tab_r13 == null ? null : tab_r13.icon));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !tab_r13.template);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", tab_r13.template);
} }
function TabsOutletComponent_option_11_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "option", 24);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var tab_r20 = ctx.$implicit;
    var ctx_r6 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("value", tab_r20.path)("selected", ctx_r6.isActive(tab_r20));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 3, tab_r20 == null ? null : tab_r20.label), " ");
} }
var _c39 = ["modalRef"];
function CookieBannerPreferencesModalComponent_div_2_Template(rf, ctx) { if (rf & 1) {
    var _r4 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 3);
    ɵngcc0.ɵɵelementStart(1, "div", 4);
    ɵngcc0.ɵɵelementStart(2, "div", 5);
    ɵngcc0.ɵɵelementStart(3, "label", 6);
    ɵngcc0.ɵɵelementStart(4, "input", 7);
    ɵngcc0.ɵɵlistener("ngModelChange", function CookieBannerPreferencesModalComponent_div_2_Template_input_ngModelChange_4_listener($event) { var restoredCtx = ɵngcc0.ɵɵrestoreView(_r4); var item_r2 = restoredCtx.$implicit; return item_r2.value = $event; });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(5, "span");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(6, "div", 8);
    ɵngcc0.ɵɵelementStart(7, "h4", 9);
    ɵngcc0.ɵɵtext(8);
    ɵngcc0.ɵɵpipe(9, "humanize");
    ɵngcc0.ɵɵpipe(10, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(11, "p");
    ɵngcc0.ɵɵtext(12);
    ɵngcc0.ɵɵpipe(13, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var item_r2 = ctx.$implicit;
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵpropertyInterpolate("name", item_r2.name);
    ɵngcc0.ɵɵproperty("ngModel", item_r2.value)("disabled", item_r2.isReadonly);
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(9, 5, ɵngcc0.ɵɵpipeBind1(10, 7, item_r2.name)), " ");
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(13, 9, ctx_r1.getCookieDescription(item_r2.name)), " ");
} }
function CookieBannerComponent_div_2_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 15);
    ɵngcc0.ɵɵelementStart(1, "h3");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(4, "div", 10);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r1 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(3, 1, ctx_r1.settings.cookieBannerTitle));
} }
function CookieBannerComponent_div_2_div_13_Template(rf, ctx) { if (rf & 1) {
    var _r5 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 9);
    ɵngcc0.ɵɵelement(1, "div", 13);
    ɵngcc0.ɵɵelementStart(2, "button", 16);
    ɵngcc0.ɵɵlistener("click", function CookieBannerComponent_div_2_div_13_Template_button_click_2_listener() { ɵngcc0.ɵɵrestoreView(_r5); var ctx_r4 = ɵngcc0.ɵɵnextContext(2); return ctx_r4.onConfigurePreferences(); });
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵpipe(4, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r2 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("disabled", ctx_r2.shouldDisable);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(4, 2, "Configure preferences"), " ");
} }
function CookieBannerComponent_div_2_a_16_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "a", 17);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r3 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵpropertyInterpolate("href", ctx_r3.settings.policyUrl, ɵngcc0.ɵɵsanitizeUrl);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 2, "Privacy policy"), " ");
} }
function CookieBannerComponent_div_2_Template(rf, ctx) { if (rf & 1) {
    var _r7 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 3);
    ɵngcc0.ɵɵtemplate(1, CookieBannerComponent_div_2_div_1_Template, 5, 3, "div", 4);
    ɵngcc0.ɵɵelementStart(2, "div", 5);
    ɵngcc0.ɵɵelementStart(3, "div", 6);
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵpipe(5, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(6, "div", 7);
    ɵngcc0.ɵɵelementStart(7, "div", 8);
    ɵngcc0.ɵɵelementStart(8, "div", 9);
    ɵngcc0.ɵɵelement(9, "div", 10);
    ɵngcc0.ɵɵelementStart(10, "button", 11);
    ɵngcc0.ɵɵlistener("click", function CookieBannerComponent_div_2_Template_button_click_10_listener() { ɵngcc0.ɵɵrestoreView(_r7); var ctx_r6 = ɵngcc0.ɵɵnextContext(); return ctx_r6.acceptCookies(); });
    ɵngcc0.ɵɵtext(11);
    ɵngcc0.ɵɵpipe(12, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(13, CookieBannerComponent_div_2_div_13_Template, 5, 4, "div", 12);
    ɵngcc0.ɵɵelementStart(14, "div", 9);
    ɵngcc0.ɵɵelement(15, "div", 13);
    ɵngcc0.ɵɵtemplate(16, CookieBannerComponent_div_2_a_16_Template, 3, 4, "a", 14);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.settings.cookieBannerTitle);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(5, 6, ctx_r0.settings.cookieBannerText), " ");
    ɵngcc0.ɵɵadvance(6);
    ɵngcc0.ɵɵproperty("disabled", ctx_r0.shouldDisable);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(12, 8, "Agree and proceed"), " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", !!ctx_r0.cookiePreferences);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.settings.policyUrl);
} }
var _c40 = ["area"];
var _c41 = ["zone"];
var _c42 = ["picker"];
function DropAreaComponent_div_0_div_3_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 14);
    ɵngcc0.ɵɵelement(1, "div", 15);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r7 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵstyleProp("width", ctx_r7.progress + "%");
} }
function DropAreaComponent_div_0_div_3_div_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "div", 16);
} }
function DropAreaComponent_div_0_div_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 10);
    ɵngcc0.ɵɵtemplate(1, DropAreaComponent_div_0_div_3_div_1_Template, 2, 2, "div", 11);
    ɵngcc0.ɵɵtemplate(2, DropAreaComponent_div_0_div_3_div_2_Template, 1, 0, "div", 12);
    ɵngcc0.ɵɵelementStart(3, "p", 13);
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵpipe(5, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r5 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r5.progress !== -1);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r5.progress === -1);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(5, 3, ctx_r5.loadingMessage), " ");
} }
function DropAreaComponent_div_0_div_4_p_2_span_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 21);
    ɵngcc0.ɵɵtext(1, "or click to browse your computer.");
    ɵngcc0.ɵɵelementEnd();
} }
function DropAreaComponent_div_0_div_4_p_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "p");
    ɵngcc0.ɵɵelementStart(1, "b");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(4, "br");
    ɵngcc0.ɵɵtemplate(5, DropAreaComponent_div_0_div_4_p_2_span_5_Template, 2, 0, "span", 20);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r9 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(3, 2, ctx_r9.message));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r9.alwaysShow && ctx_r9.clickToOpen);
} }
function DropAreaComponent_div_0_div_4_div_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 22);
    ɵngcc0.ɵɵelementStart(1, "p", 23);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r10 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(3, 1, ctx_r10.errorMessage), " ");
} }
function DropAreaComponent_div_0_div_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 17);
    ɵngcc0.ɵɵelement(1, "i");
    ɵngcc0.ɵɵtemplate(2, DropAreaComponent_div_0_div_4_p_2_Template, 6, 4, "p", 18);
    ɵngcc0.ɵɵtemplate(3, DropAreaComponent_div_0_div_4_div_3_Template, 4, 3, "div", 19);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r6 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMapInterpolate1("dlt-c8y-icon-", ctx_r6.icon, "");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r6.errors);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r6.errors);
} }
var _c43 = function (a0) { return { "has-errors": a0 }; };
var _c44 = function (a0) { return { "drag-over": a0 }; };
function DropAreaComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    var _r13 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 5, 6);
    ɵngcc0.ɵɵlistener("dragleave", function DropAreaComponent_div_0_Template_div_dragleave_0_listener() { ɵngcc0.ɵɵrestoreView(_r13); var ctx_r12 = ɵngcc0.ɵɵnextContext(); return ctx_r12.stopDragging(); })("drop", function DropAreaComponent_div_0_Template_div_drop_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r13); var ctx_r14 = ɵngcc0.ɵɵnextContext(); return ctx_r14.onDrop($event); })("dragover", function DropAreaComponent_div_0_Template_div_dragover_0_listener() { ɵngcc0.ɵɵrestoreView(_r13); var ctx_r15 = ɵngcc0.ɵɵnextContext(); return ctx_r15.onOver(); })("click", function DropAreaComponent_div_0_Template_div_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r13); var ctx_r16 = ɵngcc0.ɵɵnextContext(); return ctx_r16.showPicker($event); });
    ɵngcc0.ɵɵelementStart(2, "div", 7);
    ɵngcc0.ɵɵtemplate(3, DropAreaComponent_div_0_div_3_Template, 6, 5, "div", 8);
    ɵngcc0.ɵɵtemplate(4, DropAreaComponent_div_0_div_4_Template, 4, 5, "div", 9);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵstyleProp("pointer-events", ctx_r0.loading ? "none" : "auto")("display", ctx_r0.isOver || ctx_r0.alwaysShow || ctx_r0.loading ? "block" : "none");
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(8, _c43, ctx_r0.errors));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(10, _c44, ctx_r0.isOver));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.loading);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r0.loading);
} }
function DropAreaComponent_div_1_div_1_div_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 31);
    ɵngcc0.ɵɵelement(1, "div", 15);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r19 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵstyleProp("width", ctx_r19.progress + "%");
} }
function DropAreaComponent_div_1_div_1_div_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 32);
    ɵngcc0.ɵɵelement(1, "div", 33);
    ɵngcc0.ɵɵelement(2, "div", 34);
    ɵngcc0.ɵɵelement(3, "div", 35);
    ɵngcc0.ɵɵelement(4, "div", 36);
    ɵngcc0.ɵɵelement(5, "div", 37);
    ɵngcc0.ɵɵelementEnd();
} }
function DropAreaComponent_div_1_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 27);
    ɵngcc0.ɵɵelementStart(1, "p", 28);
    ɵngcc0.ɵɵelementStart(2, "strong");
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵpipe(4, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(5, DropAreaComponent_div_1_div_1_div_5_Template, 2, 2, "div", 29);
    ɵngcc0.ɵɵtemplate(6, DropAreaComponent_div_1_div_1_div_6_Template, 6, 0, "div", 30);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r17 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(4, 3, ctx_r17.loadingMessage), " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r17.progress !== -1);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r17.progress === -1);
} }
function DropAreaComponent_div_1_div_2_Template(rf, ctx) { if (rf & 1) {
    var _r22 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 38);
    ɵngcc0.ɵɵelementStart(1, "div", 39);
    ɵngcc0.ɵɵelement(2, "i", 40);
    ɵngcc0.ɵɵelementStart(3, "span", 41);
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(5, "button", 42);
    ɵngcc0.ɵɵpipe(6, "translate");
    ɵngcc0.ɵɵelementStart(7, "i", 43);
    ɵngcc0.ɵɵlistener("click", function DropAreaComponent_div_1_div_2_Template_i_click_7_listener() { ɵngcc0.ɵɵrestoreView(_r22); var ctx_r21 = ɵngcc0.ɵɵnextContext(2); return ctx_r21.onDelete(); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r18 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵpropertyInterpolate("title", ctx_r18.filesNameString);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r18.filesNameString, " ");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(6, 3, "Remove"));
} }
function DropAreaComponent_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 24);
    ɵngcc0.ɵɵtemplate(1, DropAreaComponent_div_1_div_1_Template, 7, 5, "div", 25);
    ɵngcc0.ɵɵtemplate(2, DropAreaComponent_div_1_div_2_Template, 8, 5, "div", 26);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵstyleProp("display", ctx_r1.isOver || ctx_r1.alwaysShow || ctx_r1.loading ? "block" : "none");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.loading);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r1.loading);
} }
function DropAreaComponent_input_2_Template(rf, ctx) { if (rf & 1) {
    var _r25 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "input", 44, 45);
    ɵngcc0.ɵɵlistener("change", function DropAreaComponent_input_2_Template_input_change_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r25); var ctx_r24 = ɵngcc0.ɵɵnextContext(); return ctx_r24.onPick($event); })("click", function DropAreaComponent_input_2_Template_input_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r25); var _r23 = ɵngcc0.ɵɵreference(1); return _r23.focus(); })("blur", function DropAreaComponent_input_2_Template_input_blur_0_listener() { ɵngcc0.ɵɵrestoreView(_r25); var ctx_r27 = ɵngcc0.ɵɵnextContext(); return ctx_r27.onTouched(); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("accept", ctx_r2.accept)("multiple", ctx_r2.maxAllowedFiles > 1);
} }
function FilePickerComponent_button_17_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "button", 15);
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵelement(2, "i", 16);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵpropertyInterpolate("popover", ɵngcc0.ɵɵpipeBind1(1, 2, ctx_r2.fileUrlPopover));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("c8yIcon", "question-circle-o");
} }
function DatePickerComponent_span_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵelementStart(1, "span", 7);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵpipe(5, "date");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(3, 2, "From`date`"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(5, 4, ctx_r1.dateFrom), " ");
} }
function DatePickerComponent_span_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵelementStart(1, "span", 7);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵpipe(5, "date");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(3, 2, "To`date`"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(5, 4, ctx_r2.dateTo), " ");
} }
function DatePickerComponent_span_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 1, "Filter by date"), " ");
} }
var _c45 = function () { return { customTodayClass: "today", returnFocusToInput: true }; };
function DatePickerComponent_div_9_Template(rf, ctx) { if (rf & 1) {
    var _r6 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 8);
    ɵngcc0.ɵɵelementStart(1, "form", 9);
    ɵngcc0.ɵɵelementStart(2, "span", 10);
    ɵngcc0.ɵɵtext(3, "Date from");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(4, "c8y-form-group", 11);
    ɵngcc0.ɵɵelementStart(5, "input", 12);
    ɵngcc0.ɵɵlistener("bsValueChange", function DatePickerComponent_div_9_Template_input_bsValueChange_5_listener($event) { ɵngcc0.ɵɵrestoreView(_r6); var ctx_r5 = ɵngcc0.ɵɵnextContext(); return ctx_r5.dateFrom = $event; });
    ɵngcc0.ɵɵpipe(6, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(7, "span", 10);
    ɵngcc0.ɵɵtext(8, "Date to");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(9, "c8y-form-group", 13);
    ɵngcc0.ɵɵelementStart(10, "input", 14);
    ɵngcc0.ɵɵlistener("bsValueChange", function DatePickerComponent_div_9_Template_input_bsValueChange_10_listener($event) { ɵngcc0.ɵɵrestoreView(_r6); var ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7.dateTo = $event; });
    ɵngcc0.ɵɵpipe(11, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(12, "div", 15);
    ɵngcc0.ɵɵelementStart(13, "button", 16);
    ɵngcc0.ɵɵlistener("click", function DatePickerComponent_div_9_Template_button_click_13_listener() { ɵngcc0.ɵɵrestoreView(_r6); var ctx_r8 = ɵngcc0.ɵɵnextContext(); var _r0 = ɵngcc0.ɵɵreference(1); ctx_r8.clearFilter(); return _r0.isOpen = !_r0.isOpen; });
    ɵngcc0.ɵɵpipe(14, "translate");
    ɵngcc0.ɵɵtext(15);
    ɵngcc0.ɵɵpipe(16, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(17, "button", 17);
    ɵngcc0.ɵɵlistener("click", function DatePickerComponent_div_9_Template_button_click_17_listener() { ɵngcc0.ɵɵrestoreView(_r6); var ctx_r9 = ɵngcc0.ɵɵnextContext(); var _r0 = ɵngcc0.ɵɵreference(1); ctx_r9.filter(); return _r0.isOpen = !_r0.isOpen; });
    ɵngcc0.ɵɵpipe(18, "translate");
    ɵngcc0.ɵɵtext(19);
    ɵngcc0.ɵɵpipe(20, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r4 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("formGroup", ctx_r4.fgDatePicker);
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵpropertyInterpolate("placeholder", ɵngcc0.ɵɵpipeBind1(6, 12, "Date from"));
    ɵngcc0.ɵɵproperty("maxDate", ctx_r4.dateTo)("bsConfig", ɵngcc0.ɵɵpureFunction0(24, _c45));
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵpropertyInterpolate("placeholder", ɵngcc0.ɵɵpipeBind1(11, 14, "Date to"));
    ɵngcc0.ɵɵproperty("minDate", ctx_r4.dateFrom)("bsConfig", ɵngcc0.ɵɵpureFunction0(25, _c45));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(14, 16, "Clear selection"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(16, 18, "Clear`selection`"), " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(18, 20, "Apply selection"));
    ɵngcc0.ɵɵproperty("disabled", !ctx_r4.fgDatePicker.get("dateFrom").value && !ctx_r4.fgDatePicker.get("dateTo").value);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(20, 22, "Apply`selection`"), " ");
} }
function DeviceStatusComponent_div_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "div", 4);
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("c8yIcon", ctx_r0.status().sendStatus.icon)("ngClass", ctx_r0.status().sendStatus.class);
} }
function DeviceStatusComponent_div_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "div", 5);
} if (rf & 2) {
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("c8yIcon", ctx_r1.status().pushStatus.icon)("ngClass", ctx_r1.status().pushStatus.class);
} }
function DeviceStatusComponent_div_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "div", 6);
    ɵngcc0.ɵɵpipe(1, "translate");
} if (rf & 2) {
    var ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵpropertyInterpolate("tooltip", ɵngcc0.ɵɵpipeBind1(1, 3, ctx_r2.status().maintenanceStatus.tooltip));
    ɵngcc0.ɵɵproperty("c8yIcon", ctx_r2.status().maintenanceStatus.icon)("ngClass", ctx_r2.status().maintenanceStatus.class);
} }
var _c46 = ["c8y-guide-docs", ""];
function GuideDocsComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵprojection(1);
    ɵngcc0.ɵɵelementContainerEnd();
} }
function ArrayTypeComponent_div_1_button_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "button", 10);
    ɵngcc0.ɵɵelement(1, "i", 11);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r3 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("popover", ctx_r3.to.description);
} }
function ArrayTypeComponent_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 8);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵtemplate(2, ArrayTypeComponent_div_1_button_2_Template, 2, 1, "button", 9);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵpropertyInterpolate("id", ctx_r0.id + "-fieldset");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r0.to.label, " ");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.to.description);
} }
function ArrayTypeComponent_div_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 12);
    ɵngcc0.ɵɵelement(1, "formly-validation-message", 13);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("field", ctx_r1.field);
} }
function ArrayTypeComponent_div_3_Template(rf, ctx) { if (rf & 1) {
    var _r7 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 14);
    ɵngcc0.ɵɵelement(1, "formly-field", 13);
    ɵngcc0.ɵɵelementStart(2, "div", 15);
    ɵngcc0.ɵɵelementStart(3, "button", 16);
    ɵngcc0.ɵɵlistener("click", function ArrayTypeComponent_div_3_Template_button_click_3_listener() { var restoredCtx = ɵngcc0.ɵɵrestoreView(_r7); var i_r5 = restoredCtx.index; var ctx_r6 = ɵngcc0.ɵɵnextContext(); return ctx_r6.remove(i_r5); });
    ɵngcc0.ɵɵpipe(4, "translate");
    ɵngcc0.ɵɵelement(5, "i", 17);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var field_r4 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("field", field_r4);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(4, 2, "Delete"));
} }
function FieldCheckbox_span_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵelementStart(1, "em", 4);
    ɵngcc0.ɵɵtext(2, "(required)");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} }
function FieldCheckbox_button_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "button", 5);
    ɵngcc0.ɵɵelement(1, "i", 6);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("popover", ctx_r1.to.description);
} }
var _c47 = ["dropArea"];
function FieldFile_div_1_button_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "button", 7);
    ɵngcc0.ɵɵelement(1, "i", 8);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r3 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("popover", ctx_r3.to.description);
} }
function FieldFile_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 5);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵtemplate(2, FieldFile_div_1_button_2_Template, 2, 1, "button", 6);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵpropertyInterpolate("id", ctx_r0.id + "-fieldset");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r0.to.label, " ");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.to.description);
} }
function FieldFile_div_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 9);
    ɵngcc0.ɵɵelement(1, "formly-validation-message", 10);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("field", ctx_r2.field);
} }
function WrapperFormField_label_1_button_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "button", 6);
    ɵngcc0.ɵɵelement(1, "i", 7);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r5 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("popover", ctx_r5.to.description);
} }
function WrapperFormField_label_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "label");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵtemplate(2, WrapperFormField_label_1_button_2_Template, 2, 1, "button", 5);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵattribute("for", ctx_r0.id);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r0.to.label, " ");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.to.description && ctx_r0.showDescriptionAsPopup);
} }
function WrapperFormField_ng_template_2_Template(rf, ctx) { }
function WrapperFormField_div_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 8);
    ɵngcc0.ɵɵelement(1, "formly-validation-message", 9);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("field", ctx_r3.field);
} }
function WrapperFormField_div_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 10);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r4 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r4.to.description, " ");
} }
function FieldInput_input_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "input", 2);
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassProp("is-invalid", ctx_r0.showError);
    ɵngcc0.ɵɵproperty("type", ctx_r0.type)("formControl", ctx_r0.formControl)("formlyAttributes", ctx_r0.field)("required", ctx_r0.to.required);
    ɵngcc0.ɵɵattribute("autocomplete", ctx_r0.to.autocomplete ? ctx_r0.to.autocomplete : null);
} }
function FieldInput_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "input", 3);
} if (rf & 2) {
    var ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassProp("is-invalid", ctx_r2.showError);
    ɵngcc0.ɵɵproperty("formControl", ctx_r2.formControl)("formlyAttributes", ctx_r2.field)("required", ctx_r2.to.required);
    ɵngcc0.ɵɵattribute("autocomplete", ctx_r2.to.autocomplete ? ctx_r2.to.autocomplete : null);
} }
function ObjectTypeComponent_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 5);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵpropertyInterpolate("id", ctx_r0.id + "-fieldset");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r0.to.label);
} }
function ObjectTypeComponent_p_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "p");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r1.to.description);
} }
function ObjectTypeComponent_div_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 6);
    ɵngcc0.ɵɵelement(1, "formly-validation-message", 7);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("field", ctx_r2.field);
} }
function ObjectTypeComponent_formly_field_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "formly-field", 7);
} if (rf & 2) {
    var f_r4 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("field", f_r4);
} }
function FieldRadio_label_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "label", 1);
    ɵngcc0.ɵɵelement(1, "input", 2);
    ɵngcc0.ɵɵelement(2, "span");
    ɵngcc0.ɵɵelementStart(3, "span");
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var option_r1 = ctx.$implicit;
    var i_r2 = ctx.index;
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("title", option_r1.label);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("id", ctx_r0.id + "_" + i_r2)("name", ctx_r0.field.name || ctx_r0.id)("value", option_r1.value)("formControl", ctx_r0.formControl)("formlyAttributes", ctx_r0.field);
    ɵngcc0.ɵɵattribute("value", option_r1.value)("disabled", option_r1.disabled || ctx_r0.formControl.disabled ? true : null);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(option_r1.label);
} }
var _c48 = ["host"];
function DynamicComponentComponent_ng_template_0_Template(rf, ctx) { }
function DynamicComponentComponent_div_2_span_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 9);
    ɵngcc0.ɵɵtext(1, "Show details");
    ɵngcc0.ɵɵelementEnd();
} }
function DynamicComponentComponent_div_2_span_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 9);
    ɵngcc0.ɵɵtext(1, "Hide details");
    ɵngcc0.ɵɵelementEnd();
} }
function DynamicComponentComponent_div_2_Template(rf, ctx) { if (rf & 1) {
    var _r6 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 2);
    ɵngcc0.ɵɵelementStart(1, "strong", 3);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(4, "p", 4);
    ɵngcc0.ɵɵelementStart(5, "button", 5);
    ɵngcc0.ɵɵlistener("click", function DynamicComponentComponent_div_2_Template_button_click_5_listener() { ɵngcc0.ɵɵrestoreView(_r6); var ctx_r5 = ɵngcc0.ɵɵnextContext(); return ctx_r5.expandErrorDetails = !ctx_r5.expandErrorDetails; });
    ɵngcc0.ɵɵelement(6, "i", 6);
    ɵngcc0.ɵɵtemplate(7, DynamicComponentComponent_div_2_span_7_Template, 2, 0, "span", 7);
    ɵngcc0.ɵɵtemplate(8, DynamicComponentComponent_div_2_span_8_Template, 2, 0, "span", 7);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(9, "div", 8);
    ɵngcc0.ɵɵelementStart(10, "pre");
    ɵngcc0.ɵɵtext(11);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate2(" ", ɵngcc0.ɵɵpipeBind1(3, 7, "This widget cannot be rendered because the current application does not support the following component:"), " ", ctx_r2.componentId, ". ");
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r2.expandErrorDetails);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r2.expandErrorDetails);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("collapse", !ctx_r2.expandErrorDetails)("isAnimated", true);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1("      ", ctx_r2.error, "\n    ");
} }
function DashboardChildActionComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "li");
    ɵngcc0.ɵɵprojection(1);
    ɵngcc0.ɵɵelementEnd();
} }
function DashboardChildComponent_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "div", 9);
} }
function DashboardChildComponent_div_5_ul_5_ng_container_1_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function DashboardChildComponent_div_5_ul_5_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, DashboardChildComponent_div_5_ul_5_ng_container_1_ng_container_1_Template, 1, 0, "ng-container", 17);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var action_r7 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", action_r7.template);
} }
function DashboardChildComponent_div_5_ul_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "ul", 15);
    ɵngcc0.ɵɵtemplate(1, DashboardChildComponent_div_5_ul_5_ng_container_1_Template, 2, 1, "ng-container", 16);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r5 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r5.actions);
} }
function DashboardChildComponent_div_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 10);
    ɵngcc0.ɵɵelementStart(1, "div", 11);
    ɵngcc0.ɵɵelementStart(2, "a", 12);
    ɵngcc0.ɵɵlistener("click", function DashboardChildComponent_div_5_Template_a_click_2_listener() { return false; });
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelement(4, "i", 13);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(5, DashboardChildComponent_div_5_ul_5_Template, 2, 1, "ul", 14);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(3, 2, "Settings"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("c8yIcon", "cog");
} }
function DashboardChildComponent_div_8_Template(rf, ctx) { if (rf & 1) {
    var _r11 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 18);
    ɵngcc0.ɵɵlistener("cdkDragStarted", function DashboardChildComponent_div_8_Template_div_cdkDragStarted_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r11); var ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10.resizeStarted($event); })("cdkDragEnded", function DashboardChildComponent_div_8_Template_div_cdkDragEnded_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r11); var ctx_r12 = ɵngcc0.ɵɵnextContext(); return ctx_r12.reset($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("cdkDragDisabled", ctx_r2.isFrozen);
} }
function DashboardChildComponent_div_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "div", 19);
} }
function DashboardChildComponent_div_10_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "div", 9);
} }
var _c49 = [[["c8y-dashboard-child-title"]], "*"];
var _c50 = function (a0, a1) { return { width: a0, height: a1 }; };
var _c51 = function (a0, a1) { return { "drag-handle": a0, draggableCursor: a1 }; };
var _c52 = ["c8y-dashboard-child-title", "*"];
function WidgetsDashboardComponent_c8y_title_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "c8y-title");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 1, ctx_r0.settings.title), "\n");
} }
function WidgetsDashboardComponent_c8y_breadcrumb_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "c8y-breadcrumb");
    ɵngcc0.ɵɵelement(1, "c8y-breadcrumb-item", 7);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("icon", ctx_r1.breadcrumb.icon)("label", ctx_r1.breadcrumb.label)("path", ctx_r1.breadcrumb.path);
} }
function WidgetsDashboardComponent_c8y_action_bar_item_2_Template(rf, ctx) { if (rf & 1) {
    var _r11 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "c8y-action-bar-item", 8);
    ɵngcc0.ɵɵelementStart(1, "button", 9);
    ɵngcc0.ɵɵlistener("click", function WidgetsDashboardComponent_c8y_action_bar_item_2_Template_button_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r11); var ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10.onAddWidget.emit(); });
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelement(3, "i", 10);
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵpipe(5, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("placement", "right");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(2, 4, "Add widget"));
    ɵngcc0.ɵɵproperty("disabled", ctx_r2.settings.isFrozen || ctx_r2.settings.isDisabled);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(5, 6, "Add widget"), " ");
} }
function WidgetsDashboardComponent_c8y_action_bar_item_3_Template(rf, ctx) { if (rf & 1) {
    var _r13 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "c8y-action-bar-item", 8);
    ɵngcc0.ɵɵelementStart(1, "button", 9);
    ɵngcc0.ɵɵlistener("click", function WidgetsDashboardComponent_c8y_action_bar_item_3_Template_button_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r13); var ctx_r12 = ɵngcc0.ɵɵnextContext(); return ctx_r12.onEditDashboard.emit(); });
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelement(3, "i", 11);
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵpipe(5, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("placement", "right");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(2, 4, "Edit"));
    ɵngcc0.ɵɵproperty("disabled", ctx_r3.settings.isFrozen || ctx_r3.settings.isDisabled);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(5, 6, "Edit"), " ");
} }
function WidgetsDashboardComponent_c8y_action_bar_item_4_Template(rf, ctx) { if (rf & 1) {
    var _r15 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "c8y-action-bar-item", 8);
    ɵngcc0.ɵɵelementStart(1, "button", 12);
    ɵngcc0.ɵɵlistener("click", function WidgetsDashboardComponent_c8y_action_bar_item_4_Template_button_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r15); var ctx_r14 = ɵngcc0.ɵɵnextContext(); return ctx_r14.toggleFullscreen(); });
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelement(3, "i", 13);
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵpipe(5, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r4 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("placement", "right");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(2, 4, "Full screen"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("c8yIcon", ctx_r4.fullScreen() ? "compress" : "expand");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(5, 6, "Full screen"), " ");
} }
function WidgetsDashboardComponent_c8y_action_bar_item_5_Template(rf, ctx) { if (rf & 1) {
    var _r17 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "c8y-action-bar-item", 14);
    ɵngcc0.ɵɵelementStart(1, "button", 15);
    ɵngcc0.ɵɵlistener("click", function WidgetsDashboardComponent_c8y_action_bar_item_5_Template_button_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r17); var ctx_r16 = ɵngcc0.ɵɵnextContext(); return ctx_r16.onFreeze.emit(ctx_r16.settings); });
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelement(3, "i", 13);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r5 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("placement", "right");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(2, 5, "Lock/unlock this dashboard"));
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(7, _c32, ctx_r5.settings.isFrozen))("disabled", ctx_r5.settings.isDisabled);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("c8yIcon", ctx_r5.settings.isFrozen ? "lock" : "unlock");
} }
function WidgetsDashboardComponent_c8y_action_bar_item_6_Template(rf, ctx) { if (rf & 1) {
    var _r19 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "c8y-action-bar-item", 16);
    ɵngcc0.ɵɵelementStart(1, "button", 17);
    ɵngcc0.ɵɵlistener("click", function WidgetsDashboardComponent_c8y_action_bar_item_6_Template_button_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r19); var ctx_r18 = ɵngcc0.ɵɵnextContext(); return ctx_r18.onDeleteDashboard.emit(); });
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelement(3, "i", 18);
    ɵngcc0.ɵɵelementStart(4, "span", 19);
    ɵngcc0.ɵɵtext(5, "Delete dashboard");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r6 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("placement", "more")("priority", -3000);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(2, 4, "Delete dashboard"));
    ɵngcc0.ɵɵproperty("disabled", ctx_r6.settings.isFrozen || ctx_r6.settings.isDisabled);
} }
function WidgetsDashboardComponent_div_7_div_4_Template(rf, ctx) { if (rf & 1) {
    var _r22 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelementStart(1, "p", 22);
    ɵngcc0.ɵɵtext(2, "Add widgets to this dashboard.");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "div");
    ɵngcc0.ɵɵelementStart(4, "button", 23);
    ɵngcc0.ɵɵlistener("click", function WidgetsDashboardComponent_div_7_div_4_Template_button_click_4_listener() { ɵngcc0.ɵɵrestoreView(_r22); var ctx_r21 = ɵngcc0.ɵɵnextContext(2); return ctx_r21.onAddWidget.emit(); });
    ɵngcc0.ɵɵpipe(5, "translate");
    ɵngcc0.ɵɵtext(6, " Add widget ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(7, "p", 24);
    ɵngcc0.ɵɵelementStart(8, "small", 22);
    ɵngcc0.ɵɵdisableBindings();
    ɵngcc0.ɵɵtext(9, " Find out more in the ");
    ɵngcc0.ɵɵelementStart(10, "a", 25);
    ɵngcc0.ɵɵtext(11, " User guide`KEEP_ORIGINAL` ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(12, ". ");
    ɵngcc0.ɵɵenableBindings();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r20 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(5, 2, "Add widget"));
    ɵngcc0.ɵɵproperty("disabled", ctx_r20.settings.isFrozen || ctx_r20.settings.isDisabled);
} }
function WidgetsDashboardComponent_div_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 20);
    ɵngcc0.ɵɵelement(1, "h1", 21);
    ɵngcc0.ɵɵelementStart(2, "h3", 22);
    ɵngcc0.ɵɵtext(3, "No widgets to display.");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(4, WidgetsDashboardComponent_div_7_div_4_Template, 13, 4, "div", 0);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r7 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r7.settings.isFrozen && ctx_r7.onAddWidget.observers.length);
} }
function WidgetsDashboardComponent_div_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 26);
    ɵngcc0.ɵɵelementStart(1, "div", 27);
    ɵngcc0.ɵɵelement(2, "div", 28);
    ɵngcc0.ɵɵelement(3, "div", 29);
    ɵngcc0.ɵɵelement(4, "div", 30);
    ɵngcc0.ɵɵelement(5, "div", 31);
    ɵngcc0.ɵɵelement(6, "div", 32);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} }
function WidgetsDashboardComponent_c8y_dashboard_9_c8y_dashboard_child_2_span_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var widget_r25 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 1, widget_r25.title), " ");
} }
function WidgetsDashboardComponent_c8y_dashboard_9_c8y_dashboard_child_2_span_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var widget_r25 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", widget_r25.title, " ");
} }
function WidgetsDashboardComponent_c8y_dashboard_9_c8y_dashboard_child_2_c8y_dashboard_child_action_5_Template(rf, ctx) { if (rf & 1) {
    var _r36 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "c8y-dashboard-child-action");
    ɵngcc0.ɵɵelementStart(1, "button", 39);
    ɵngcc0.ɵɵlistener("click", function WidgetsDashboardComponent_c8y_dashboard_9_c8y_dashboard_child_2_c8y_dashboard_child_action_5_Template_button_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r36); var widget_r25 = ɵngcc0.ɵɵnextContext().$implicit; var _r26 = ɵngcc0.ɵɵreference(1); ɵngcc0.ɵɵnextContext(); var _r23 = ɵngcc0.ɵɵreference(1); var ctx_r34 = ɵngcc0.ɵɵnextContext(); return ctx_r34.onEditWidget.emit({ widget: widget_r25, source: _r26, dashboard: _r23 }); });
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelement(3, "i", 11);
    ɵngcc0.ɵɵelementStart(4, "span", 19);
    ɵngcc0.ɵɵtext(5, "Edit");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(2, 1, "Edit widget"));
} }
function WidgetsDashboardComponent_c8y_dashboard_9_c8y_dashboard_child_2_c8y_dashboard_child_action_6_Template(rf, ctx) { if (rf & 1) {
    var _r39 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "c8y-dashboard-child-action");
    ɵngcc0.ɵɵelementStart(1, "button", 39);
    ɵngcc0.ɵɵlistener("click", function WidgetsDashboardComponent_c8y_dashboard_9_c8y_dashboard_child_2_c8y_dashboard_child_action_6_Template_button_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r39); var widget_r25 = ɵngcc0.ɵɵnextContext().$implicit; var _r26 = ɵngcc0.ɵɵreference(1); ɵngcc0.ɵɵnextContext(); var _r23 = ɵngcc0.ɵɵreference(1); var ctx_r37 = ɵngcc0.ɵɵnextContext(); return ctx_r37.onDeleteWidget.emit({ widget: widget_r25, source: _r26, dashboard: _r23 }); });
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelement(3, "i", 18);
    ɵngcc0.ɵɵelementStart(4, "span", 19);
    ɵngcc0.ɵɵtext(5, "Remove");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(2, 1, "Remove widget"));
} }
var _c53 = function (a0, a1, a2) { return { child: a0, dashboard: a1, context: a2 }; };
function WidgetsDashboardComponent_c8y_dashboard_9_c8y_dashboard_child_2_c8y_dynamic_component_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "c8y-dynamic-component", 40);
} if (rf & 2) {
    var widget_r25 = ɵngcc0.ɵɵnextContext().$implicit;
    var ctx_r31 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("componentId", widget_r25.componentId || widget_r25.name)("config", widget_r25.templateUrl || widget_r25.widgetComponent ? ɵngcc0.ɵɵpureFunction3(2, _c53, widget_r25, ctx_r31.contextDashboard, ctx_r31.context) : widget_r25.config);
} }
function WidgetsDashboardComponent_c8y_dashboard_9_c8y_dashboard_child_2_Template(rf, ctx) { if (rf & 1) {
    var _r42 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "c8y-dashboard-child", 36, 37);
    ɵngcc0.ɵɵlistener("changeStart", function WidgetsDashboardComponent_c8y_dashboard_9_c8y_dashboard_child_2_Template_c8y_dashboard_child_changeStart_0_listener() { var restoredCtx = ɵngcc0.ɵɵrestoreView(_r42); var widget_r25 = restoredCtx.$implicit; var _r26 = ɵngcc0.ɵɵreference(1); ɵngcc0.ɵɵnextContext(); var _r23 = ɵngcc0.ɵɵreference(1); var ctx_r41 = ɵngcc0.ɵɵnextContext(); return ctx_r41.onChangeStart.emit({ widget: widget_r25, source: _r26, dashboard: _r23 }); })("changeEnd", function WidgetsDashboardComponent_c8y_dashboard_9_c8y_dashboard_child_2_Template_c8y_dashboard_child_changeEnd_0_listener() { var restoredCtx = ɵngcc0.ɵɵrestoreView(_r42); var widget_r25 = restoredCtx.$implicit; var _r26 = ɵngcc0.ɵɵreference(1); ɵngcc0.ɵɵnextContext(); var _r23 = ɵngcc0.ɵɵreference(1); var ctx_r43 = ɵngcc0.ɵɵnextContext(); return ctx_r43.onChangeEnd.emit({ widget: widget_r25, source: _r26, dashboard: _r23 }); });
    ɵngcc0.ɵɵelementStart(2, "c8y-dashboard-child-title");
    ɵngcc0.ɵɵtemplate(3, WidgetsDashboardComponent_c8y_dashboard_9_c8y_dashboard_child_2_span_3_Template, 3, 3, "span", 0);
    ɵngcc0.ɵɵtemplate(4, WidgetsDashboardComponent_c8y_dashboard_9_c8y_dashboard_child_2_span_4_Template, 2, 1, "span", 0);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(5, WidgetsDashboardComponent_c8y_dashboard_9_c8y_dashboard_child_2_c8y_dashboard_child_action_5_Template, 6, 3, "c8y-dashboard-child-action", 0);
    ɵngcc0.ɵɵtemplate(6, WidgetsDashboardComponent_c8y_dashboard_9_c8y_dashboard_child_2_c8y_dashboard_child_action_6_Template, 6, 3, "c8y-dashboard-child-action", 0);
    ɵngcc0.ɵɵtemplate(7, WidgetsDashboardComponent_c8y_dashboard_9_c8y_dashboard_child_2_c8y_dynamic_component_7_Template, 1, 6, "c8y-dynamic-component", 38);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var widget_r25 = ctx.$implicit;
    var _r26 = ɵngcc0.ɵɵreference(1);
    var ctx_r24 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassMap(widget_r25.classes);
    ɵngcc0.ɵɵproperty("x", widget_r25._x)("y", widget_r25._y)("width", widget_r25._width || ctx_r24.settings.defaultWidth)("height", widget_r25._height || ctx_r24.settings.defaultHeight)("margin", ctx_r24.settings.widgetMargin)("isFrozen", ctx_r24.settings.isFrozen || ctx_r24.settings.isDisabled)("data", widget_r25)("useIntersection", true);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r24.settings.translateWidgetTitle);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r24.settings.translateWidgetTitle);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r24.onEditWidget.observers.length);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r24.onDeleteWidget.observers.length);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", _r26.intersected);
} }
function WidgetsDashboardComponent_c8y_dashboard_9_Template(rf, ctx) { if (rf & 1) {
    var _r45 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "c8y-dashboard", 33, 34);
    ɵngcc0.ɵɵlistener("dashboardChange", function WidgetsDashboardComponent_c8y_dashboard_9_Template_c8y_dashboard_dashboardChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r45); var ctx_r44 = ɵngcc0.ɵɵnextContext(); return ctx_r44.onChangeDashboard.emit($event); });
    ɵngcc0.ɵɵtemplate(2, WidgetsDashboardComponent_c8y_dashboard_9_c8y_dashboard_child_2_Template, 8, 15, "c8y-dashboard-child", 35);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r9 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r9.widgets);
} }
function C8yStepper_li_1_Template(rf, ctx) { if (rf & 1) {
    var _r4 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "li");
    ɵngcc0.ɵɵelementStart(1, "c8y-stepper-progress", 3);
    ɵngcc0.ɵɵlistener("onStepClicked", function C8yStepper_li_1_Template_c8y_stepper_progress_onStepClicked_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r4); var ctx_r3 = ɵngcc0.ɵɵnextContext(); return ctx_r3.setIndex($event); });
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "div", 4);
    ɵngcc0.ɵɵpipe(4, "translate");
    ɵngcc0.ɵɵtext(5);
    ɵngcc0.ɵɵpipe(6, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var step_r1 = ctx.$implicit;
    var i_r2 = ctx.index;
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(2, 8, step_r1.label));
    ɵngcc0.ɵɵproperty("iconOverrides", ctx_r0._iconOverrides)("state", ctx_r0.getIndicatorType(i_r2, step_r1.state))("index", i_r2)("selected", ctx_r0.selectedIndex === i_r2)("ngClass", ɵngcc0.ɵɵpureFunction1(14, _c38, ctx_r0.selectedIndex === i_r2));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(4, 10, step_r1.label));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(6, 12, step_r1.label), " ");
} }
function C8yStepperProgress_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0, 3);
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r0.iconOverrides[ctx_r0.state]);
} }
function C8yStepperProgress_ng_container_2_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵelement(1, "span", 7);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("c8yIcon", "edit");
} }
function C8yStepperProgress_ng_container_2_span_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵelement(1, "span", 7);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("c8yIcon", "check");
} }
function C8yStepperProgress_ng_container_2_span_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r4 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r4.index + 1, " ");
} }
function C8yStepperProgress_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0, 4);
    ɵngcc0.ɵɵtemplate(1, C8yStepperProgress_ng_container_2_span_1_Template, 2, 1, "span", 5);
    ɵngcc0.ɵɵtemplate(2, C8yStepperProgress_ng_container_2_span_2_Template, 2, 1, "span", 5);
    ɵngcc0.ɵɵtemplate(3, C8yStepperProgress_ng_container_2_span_3_Template, 2, 1, "span", 6);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngSwitch", ctx_r1.state);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "edit");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "done");
} }
var _c54 = function (a0, a1) { return { active: a0, "step-done": a1 }; };
function C8yStepperButtons_button_1_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 8);
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r4 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(1, 2, ctx_r4.labels == null ? null : ctx_r4.labels.cancel));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(3, 4, ctx_r4.labels == null ? null : ctx_r4.labels.cancel));
} }
function C8yStepperButtons_button_1_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 8);
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(1, 2, "Cancel"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(3, 4, "Cancel"));
} }
function C8yStepperButtons_button_1_Template(rf, ctx) { if (rf & 1) {
    var _r8 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 5);
    ɵngcc0.ɵɵlistener("click", function C8yStepperButtons_button_1_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r8); var ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7.cancel(); });
    ɵngcc0.ɵɵtemplate(1, C8yStepperButtons_button_1_span_1_Template, 4, 6, "span", 6);
    ɵngcc0.ɵɵtemplate(2, C8yStepperButtons_button_1_ng_template_2_Template, 4, 6, "ng-template", null, 7, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var _r5 = ɵngcc0.ɵɵreference(3);
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.labels == null ? null : ctx_r0.labels.cancel)("ngIfElse", _r5);
} }
function C8yStepperButtons_button_2_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 8);
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r9 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(1, 2, ctx_r9.labels == null ? null : ctx_r9.labels.back));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(3, 4, ctx_r9.labels == null ? null : ctx_r9.labels.back));
} }
function C8yStepperButtons_button_2_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 8);
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(1, 2, "Back"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(3, 4, "Back"));
} }
function C8yStepperButtons_button_2_Template(rf, ctx) { if (rf & 1) {
    var _r13 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 9);
    ɵngcc0.ɵɵlistener("click", function C8yStepperButtons_button_2_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r13); var ctx_r12 = ɵngcc0.ɵɵnextContext(); return ctx_r12.back(); });
    ɵngcc0.ɵɵtemplate(1, C8yStepperButtons_button_2_span_1_Template, 4, 6, "span", 6);
    ɵngcc0.ɵɵtemplate(2, C8yStepperButtons_button_2_ng_template_2_Template, 4, 6, "ng-template", null, 10, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var _r10 = ɵngcc0.ɵɵreference(3);
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("disabled", ctx_r1.pending);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.labels == null ? null : ctx_r1.labels.back)("ngIfElse", _r10);
} }
function C8yStepperButtons_button_3_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 8);
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r14 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(1, 2, ctx_r14.labels == null ? null : ctx_r14.labels.custom));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(3, 4, ctx_r14.labels == null ? null : ctx_r14.labels.custom));
} }
function C8yStepperButtons_button_3_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 8);
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(1, 2, "Complete"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(3, 4, "Complete"));
} }
var _c55 = function (a0, a1, a2) { return { "btn-default": a0, "btn-primary": a1, "btn-pending": a2 }; };
function C8yStepperButtons_button_3_Template(rf, ctx) { if (rf & 1) {
    var _r18 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 11);
    ɵngcc0.ɵɵlistener("click", function C8yStepperButtons_button_3_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r18); var ctx_r17 = ɵngcc0.ɵɵnextContext(); return ctx_r17.custom(); });
    ɵngcc0.ɵɵtemplate(1, C8yStepperButtons_button_3_span_1_Template, 4, 6, "span", 6);
    ɵngcc0.ɵɵtemplate(2, C8yStepperButtons_button_3_ng_template_2_Template, 4, 6, "ng-template", null, 12, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var _r15 = ɵngcc0.ɵɵreference(3);
    var ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction3(4, _c55, ctx_r2.showBtns.next, !ctx_r2.showBtns.next, ctx_r2.pending))("disabled", ctx_r2.pending || ctx_r2.disabled);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r2.labels == null ? null : ctx_r2.labels.custom)("ngIfElse", _r15);
} }
function C8yStepperButtons_button_4_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 8);
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r19 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(1, 2, ctx_r19.labels == null ? null : ctx_r19.labels.next));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(3, 4, ctx_r19.labels == null ? null : ctx_r19.labels.next));
} }
function C8yStepperButtons_button_4_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 8);
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(1, 2, "Next"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(3, 4, "Next"));
} }
function C8yStepperButtons_button_4_Template(rf, ctx) { if (rf & 1) {
    var _r23 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 13);
    ɵngcc0.ɵɵlistener("click", function C8yStepperButtons_button_4_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r23); var ctx_r22 = ɵngcc0.ɵɵnextContext(); return ctx_r22.next(); });
    ɵngcc0.ɵɵtemplate(1, C8yStepperButtons_button_4_span_1_Template, 4, 6, "span", 6);
    ɵngcc0.ɵɵtemplate(2, C8yStepperButtons_button_4_ng_template_2_Template, 4, 6, "ng-template", null, 14, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var _r20 = ɵngcc0.ɵɵreference(3);
    var ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(4, _c3, ctx_r3.pending))("disabled", ctx_r3.disabled);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r3.labels == null ? null : ctx_r3.labels.next)("ngIfElse", _r20);
} }
function ListItemActionComponent_ng_template_0_i_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "i", 4);
} if (rf & 2) {
    var ctx_r2 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("c8yIcon", ctx_r2.icon);
} }
function ListItemActionComponent_ng_template_0_span_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r3 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(2, 1, ctx_r3.label));
} }
function ListItemActionComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {
    var _r5 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "li");
    ɵngcc0.ɵɵelementStart(1, "button", 1);
    ɵngcc0.ɵɵlistener("click", function ListItemActionComponent_ng_template_0_Template_button_click_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); var ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4.click.emit($event); });
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵtemplate(3, ListItemActionComponent_ng_template_0_i_3_Template, 1, 1, "i", 2);
    ɵngcc0.ɵɵtext(4, "\u00A0 ");
    ɵngcc0.ɵɵtemplate(5, ListItemActionComponent_ng_template_0_span_5_Template, 3, 3, "span", 3);
    ɵngcc0.ɵɵprojection(6);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(2, 3, ctx_r1.label));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.icon);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.label);
} }
function ListItemFooterComponent_span_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r0.footer);
} }
function ListItemComponent_div_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 6);
    ɵngcc0.ɵɵprojection(1, 5);
    ɵngcc0.ɵɵelementEnd();
} }
function ListItemComponent_div_9_button_1_Template(rf, ctx) { if (rf & 1) {
    var _r7 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 11);
    ɵngcc0.ɵɵlistener("click", function ListItemComponent_div_9_button_1_Template_button_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r7); var ctx_r6 = ɵngcc0.ɵɵnextContext(2); return ctx_r6.toggleCollapsed($event); });
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵelement(2, "i", 12);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r3 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(1, 3, "Expand"));
    ɵngcc0.ɵɵattribute("aria-expanded", !ctx_r3.collapsed);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("c8yIcon", "chevron-down");
} }
function ListItemComponent_div_9_div_2_ul_4_ng_container_2_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function ListItemComponent_div_9_div_2_ul_4_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, ListItemComponent_div_9_div_2_ul_4_ng_container_2_ng_container_1_Template, 1, 0, "ng-container", 18);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var action_r10 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", action_r10.template);
} }
function ListItemComponent_div_9_div_2_ul_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "ul", 16);
    ɵngcc0.ɵɵprojection(1, 6);
    ɵngcc0.ɵɵtemplate(2, ListItemComponent_div_9_div_2_ul_4_ng_container_2_Template, 2, 1, "ng-container", 17);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r8 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r8.actions);
} }
function ListItemComponent_div_9_div_2_Template(rf, ctx) { if (rf & 1) {
    var _r13 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 13);
    ɵngcc0.ɵɵlistener("onShown", function ListItemComponent_div_9_div_2_Template_div_onShown_0_listener() { ɵngcc0.ɵɵrestoreView(_r13); var ctx_r12 = ɵngcc0.ɵɵnextContext(2); return ctx_r12.showDropdownUp(); });
    ɵngcc0.ɵɵelementStart(1, "button", 14);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelement(3, "i", 12);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(4, ListItemComponent_div_9_div_2_ul_4_Template, 3, 1, "ul", 15);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r4 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("dropup", ctx_r4.dropdownUp);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(2, 3, "Actions"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("c8yIcon", "ellipsis-v");
} }
function ListItemComponent_div_9_ng_content_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵprojection(0, 7, ["*ngIf", "showActions"]);
} }
function ListItemComponent_div_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 7);
    ɵngcc0.ɵɵtemplate(1, ListItemComponent_div_9_button_1_Template, 3, 5, "button", 8);
    ɵngcc0.ɵɵtemplate(2, ListItemComponent_div_9_div_2_Template, 5, 5, "div", 9);
    ɵngcc0.ɵɵtemplate(3, ListItemComponent_div_9_ng_content_3_Template, 1, 0, "ng-content", 10);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.showCollapse && ctx_r1.itemCollapse.collapseWay === "button");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.showActions);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.showActions);
} }
function ListItemComponent_div_10_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 19);
    ɵngcc0.ɵɵelementStart(1, "div", 20);
    ɵngcc0.ɵɵprojection(2, 8);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("collapse", ctx_r2.collapsed)("isAnimated", true);
} }
var _c56 = [[["c8y-list-item-radio"], ["c8y-li-radio"]], [["c8y-list-item-checkbox"], ["c8y-li-checkbox"]], [["c8y-list-item-icon"], ["c8y-li-icon"]], [["c8y-list-item-body"], ["c8y-li-body"]], "*", [["c8y-list-item-footer"], ["c8y-li-footer"]], [["c8y-list-item-action"], ["c8y-li-action"]], [["c8y-list-item-action"], ["c8y-li-action"]], [["c8y-list-item-collapse"], ["c8y-li-collapse"]]];
var _c57 = function (a0, a1) { return { "expanded": a0, interact: a1 }; };
var _c58 = ["c8y-list-item-radio, c8y-li-radio", "c8y-list-item-checkbox, c8y-li-checkbox", "c8y-list-item-icon, c8y-li-icon", "c8y-list-item-body, c8y-li-body", "*", "c8y-list-item-footer, c8y-li-footer", "c8y-list-item-action, c8y-li-action", "c8y-list-item-action, c8y-li-action", "c8y-list-item-collapse, c8y-li-collapse"];
function ListItemBodyComponent_span_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r0.body);
} }
var _c59 = ["radio"];
var _c60 = ["*", [["c8y-li"], ["c8y-list-item"]]];
var _c61 = ["*", "c8y-li, c8y-list-item"];
function ListItemIconComponent_i_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "i", 1);
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("c8yIcon", ctx_r0.icon)("ngClass", ctx_r0.status);
} }
function AuditLogComponent_li_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "li", 3);
    ɵngcc0.ɵɵelementStart(1, "small", 4);
    ɵngcc0.ɵɵelementStart(2, "span");
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵpipe(4, "c8yDate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(5, "div", 5);
    ɵngcc0.ɵɵelementStart(6, "div", 6);
    ɵngcc0.ɵɵelementStart(7, "div", 7);
    ɵngcc0.ɵɵelementStart(8, "div", 8);
    ɵngcc0.ɵɵelementStart(9, "span", 9);
    ɵngcc0.ɵɵtext(10);
    ɵngcc0.ɵɵpipe(11, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(12, "small", 10);
    ɵngcc0.ɵɵtext(13);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(14, "div", 11);
    ɵngcc0.ɵɵelementStart(15, "div", 12);
    ɵngcc0.ɵɵtext(16);
    ɵngcc0.ɵɵpipe(17, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var record_r1 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(4, 4, record_r1.time));
    ɵngcc0.ɵɵadvance(7);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(11, 6, record_r1.activity));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(record_r1.user);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(17, 8, record_r1.text));
} }
var _c62 = ["scroll"];
var _c63 = ["infiniteScrollContainer"];
function DataGridComponent_div_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 13);
    ɵngcc0.ɵɵelementStart(1, "div", 14);
    ɵngcc0.ɵɵelement(2, "c8y-progress-bar", 15);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("message", ctx_r1.loadingItemsLabel);
} }
function DataGridComponent_div_5_ng_container_4_span_1_small_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "small", 35);
    ɵngcc0.ɵɵdisableBindings();
    ɵngcc0.ɵɵtext(1, "{{ filteredItemsCount }} of {{ allItemsCount }} items");
    ɵngcc0.ɵɵenableBindings();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r18 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵproperty("translateParams", ctx_r18.filteringLabelsParams);
} }
function DataGridComponent_div_5_ng_container_4_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵelementStart(1, "span", 33);
    ɵngcc0.ɵɵtext(2, "No filters");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(3, DataGridComponent_div_5_ng_container_4_span_1_small_3_Template, 2, 1, "small", 34);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r15 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", !!ctx_r15.filteringLabelsParams.allItemsCount);
} }
function DataGridComponent_div_5_ng_container_4_span_2_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "span", 37);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "async");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(4, "small", 38);
    ɵngcc0.ɵɵdisableBindings();
    ɵngcc0.ɵɵtext(5, "of {{ allItemsCount }} items");
    ɵngcc0.ɵɵenableBindings();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var ctx_r19 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(3, 2, ctx_r19.dataSource.stats$).filteredSize, " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("translateParams", ctx_r19.filteringLabelsParams);
} }
function DataGridComponent_div_5_ng_container_4_span_2_Template(rf, ctx) { if (rf & 1) {
    var _r21 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtemplate(1, DataGridComponent_div_5_ng_container_4_span_2_ng_container_1_Template, 6, 4, "ng-container", 10);
    ɵngcc0.ɵɵelementStart(2, "button", 36);
    ɵngcc0.ɵɵlistener("click", function DataGridComponent_div_5_ng_container_4_span_2_Template_button_click_2_listener() { ɵngcc0.ɵɵrestoreView(_r21); var ctx_r20 = ɵngcc0.ɵɵnextContext(3); return ctx_r20.clearFilters(); });
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵpipe(5, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r16 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !!ctx_r16.filteringLabelsParams.allItemsCount);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate1("title", " ", ɵngcc0.ɵɵpipeBind1(3, 3, "Clear filters"), "");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(5, 5, "Clear filters"), " ");
} }
function DataGridComponent_div_5_ng_container_4_span_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 29);
    ɵngcc0.ɵɵelementStart(1, "button", 30);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelement(3, "i", 39);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("popover", ɵngcc0.ɵɵpipeBind1(2, 1, "The counter for the total number of items might be inaccurate."));
} }
function DataGridComponent_div_5_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, DataGridComponent_div_5_ng_container_4_span_1_Template, 4, 1, "span", 10);
    ɵngcc0.ɵɵtemplate(2, DataGridComponent_div_5_ng_container_4_span_2_Template, 6, 7, "span", 10);
    ɵngcc0.ɵɵelementStart(3, "span", 29);
    ɵngcc0.ɵɵelementStart(4, "button", 30);
    ɵngcc0.ɵɵpipe(5, "translate");
    ɵngcc0.ɵɵelement(6, "i", 31);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(7, DataGridComponent_div_5_ng_container_4_span_7_Template, 4, 3, "span", 32);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var ctx_r10 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r10.filteringApplied);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r10.filteringApplied);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵpropertyInterpolate("popover", ɵngcc0.ɵɵpipeBind1(5, 4, "Click the column headers to apply filters."));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r10.showCounterWarning);
} }
function DataGridComponent_div_5_ng_container_7_ng_container_1_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    var _r29 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "button", 42);
    ɵngcc0.ɵɵlistener("click", function DataGridComponent_div_5_ng_container_7_ng_container_1_ng_container_1_Template_button_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r29); var headerActionControl_r22 = ɵngcc0.ɵɵnextContext(2).$implicit; return headerActionControl_r22.callback(); });
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelement(3, "i", 43);
    ɵngcc0.ɵɵelementStart(4, "span");
    ɵngcc0.ɵɵtext(5);
    ɵngcc0.ɵɵpipe(6, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var headerActionControl_r22 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(2, 2, headerActionControl_r22.text));
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(6, 4, headerActionControl_r22.text));
} }
function DataGridComponent_div_5_ng_container_7_ng_container_1_ng_template_2_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
var _c64 = function (a0) { return { headerActionControl: a0 }; };
function DataGridComponent_div_5_ng_container_7_ng_container_1_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, DataGridComponent_div_5_ng_container_7_ng_container_1_ng_template_2_ng_container_0_Template, 1, 0, "ng-container", 44);
} if (rf & 2) {
    var headerActionControl_r22 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", headerActionControl_r22.template)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction1(2, _c64, headerActionControl_r22));
} }
function DataGridComponent_div_5_ng_container_7_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, DataGridComponent_div_5_ng_container_7_ng_container_1_ng_container_1_Template, 7, 6, "ng-container", 40);
    ɵngcc0.ɵɵtemplate(2, DataGridComponent_div_5_ng_container_7_ng_container_1_ng_template_2_Template, 1, 4, "ng-template", null, 41, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var _r25 = ɵngcc0.ɵɵreference(3);
    var headerActionControl_r22 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !headerActionControl_r22.template)("ngIfElse", _r25);
} }
function DataGridComponent_div_5_ng_container_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, DataGridComponent_div_5_ng_container_7_ng_container_1_Template, 4, 2, "ng-container", 10);
    ɵngcc0.ɵɵpipe(2, "isControlVisible");
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var headerActionControl_r22 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind1(2, 1, headerActionControl_r22));
} }
function DataGridComponent_div_5_ul_15_div_3_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    var _r39 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "div", 50);
    ɵngcc0.ɵɵelementStart(2, "label", 51);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementStart(4, "input", 52);
    ɵngcc0.ɵɵlistener("ngModelChange", function DataGridComponent_div_5_ul_15_div_3_ng_container_1_Template_input_ngModelChange_4_listener($event) { ɵngcc0.ɵɵrestoreView(_r39); var column_r35 = ɵngcc0.ɵɵnextContext().$implicit; return column_r35.visible = $event; })("change", function DataGridComponent_div_5_ul_15_div_3_ng_container_1_Template_input_change_4_listener() { ɵngcc0.ɵɵrestoreView(_r39); var ctx_r40 = ɵngcc0.ɵɵnextContext(4); return ctx_r40.updateGridColumnsSize(); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(5, "span");
    ɵngcc0.ɵɵelementStart(6, "span");
    ɵngcc0.ɵɵtext(7);
    ɵngcc0.ɵɵpipe(8, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var column_r35 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(3, 3, column_r35.header) || column_r35.name);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngModel", column_r35.visible);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(8, 5, column_r35.header) || column_r35.name);
} }
function DataGridComponent_div_5_ul_15_div_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 49);
    ɵngcc0.ɵɵtemplate(1, DataGridComponent_div_5_ul_15_div_3_ng_container_1_Template, 9, 7, "ng-container", 10);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var column_r35 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !column_r35.positionFixed);
} }
function DataGridComponent_div_5_ul_15_Template(rf, ctx) { if (rf & 1) {
    var _r44 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "ul", 45);
    ɵngcc0.ɵɵlistener("click", function DataGridComponent_div_5_ul_15_Template_ul_click_0_listener($event) { return $event.stopPropagation(); });
    ɵngcc0.ɵɵelementStart(1, "li", 46);
    ɵngcc0.ɵɵelementStart(2, "div", 47);
    ɵngcc0.ɵɵlistener("cdkDropListDropped", function DataGridComponent_div_5_ul_15_Template_div_cdkDropListDropped_2_listener($event) { ɵngcc0.ɵɵrestoreView(_r44); var ctx_r43 = ɵngcc0.ɵɵnextContext(2); return ctx_r43.onColumnDrop($event); });
    ɵngcc0.ɵɵtemplate(3, DataGridComponent_div_5_ul_15_div_3_Template, 2, 1, "div", 48);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r12 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r12.columns);
} }
function DataGridComponent_div_5_div_23_i_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "i", 58);
} }
function DataGridComponent_div_5_div_23_i_5_Template(rf, ctx) { if (rf & 1) {
    var _r48 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "i", 59);
    ɵngcc0.ɵɵlistener("click", function DataGridComponent_div_5_div_23_i_5_Template_i_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r48); var ctx_r47 = ɵngcc0.ɵɵnextContext(3); ctx_r47.searchText = ""; return ctx_r47.searchText$.emit(""); });
    ɵngcc0.ɵɵelementEnd();
} }
function DataGridComponent_div_5_div_23_Template(rf, ctx) { if (rf & 1) {
    var _r50 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 53);
    ɵngcc0.ɵɵelementStart(1, "input", 54);
    ɵngcc0.ɵɵlistener("input", function DataGridComponent_div_5_div_23_Template_input_input_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r50); var ctx_r49 = ɵngcc0.ɵɵnextContext(2); return ctx_r49.searchText$.emit($event.target.value); });
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "div", 55);
    ɵngcc0.ɵɵtemplate(4, DataGridComponent_div_5_div_23_i_4_Template, 1, 0, "i", 56);
    ɵngcc0.ɵɵtemplate(5, DataGridComponent_div_5_div_23_i_5_Template, 1, 0, "i", 57);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r13 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("placeholder", ɵngcc0.ɵɵpipeBind1(2, 4, "Search\u2026"));
    ɵngcc0.ɵɵproperty("ngModel", ctx_r13.searchText);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r13.searchText.length === 0);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r13.searchText.length > 0);
} }
var _c65 = function (a0) { return { count: a0 }; };
function DataGridComponent_div_5_div_24_small_5_Template(rf, ctx) { if (rf & 1) {
    var _r54 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "small");
    ɵngcc0.ɵɵelementStart(1, "a", 65);
    ɵngcc0.ɵɵlistener("click", function DataGridComponent_div_5_div_24_small_5_Template_a_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r54); var ctx_r53 = ɵngcc0.ɵɵnextContext(3); return ctx_r53.setAllItemsSelected(true); });
    ɵngcc0.ɵɵelementStart(2, "span", 38);
    ɵngcc0.ɵɵdisableBindings();
    ɵngcc0.ɵɵpipe(3, "async");
    ɵngcc0.ɵɵtext(4, " Select all {{ count }} items ");
    ɵngcc0.ɵɵenableBindings();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r51 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("translateParams", ɵngcc0.ɵɵpureFunction1(3, _c65, ɵngcc0.ɵɵpipeBind1(3, 1, ctx_r51.dataSource.stats$).filteredSize));
} }
function DataGridComponent_div_5_div_24_ng_container_8_ng_container_1_button_1_Template(rf, ctx) { if (rf & 1) {
    var _r61 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 63);
    ɵngcc0.ɵɵlistener("click", function DataGridComponent_div_5_div_24_ng_container_8_ng_container_1_button_1_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r61); var bulkActionControl_r55 = ɵngcc0.ɵɵnextContext(2).$implicit; var ctx_r60 = ɵngcc0.ɵɵnextContext(3); return bulkActionControl_r55.callback(ctx_r60.selectedItemIds, ctx_r60.reload.bind(ctx_r60)); });
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵelement(2, "i", 69);
    ɵngcc0.ɵɵelementStart(3, "span");
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵpipe(5, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(1, 2, "Export"));
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(5, 4, "Export"));
} }
function DataGridComponent_div_5_div_24_ng_container_8_ng_container_1_button_2_Template(rf, ctx) { if (rf & 1) {
    var _r64 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 63);
    ɵngcc0.ɵɵlistener("click", function DataGridComponent_div_5_div_24_ng_container_8_ng_container_1_button_2_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r64); var bulkActionControl_r55 = ɵngcc0.ɵɵnextContext(2).$implicit; var ctx_r63 = ɵngcc0.ɵɵnextContext(3); return bulkActionControl_r55.callback(ctx_r63.selectedItemIds, ctx_r63.reload.bind(ctx_r63)); });
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵelement(2, "i", 70);
    ɵngcc0.ɵɵelementStart(3, "span");
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵpipe(5, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(1, 2, "Delete"));
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(5, 4, "Delete"));
} }
function DataGridComponent_div_5_div_24_ng_container_8_ng_container_1_button_3_Template(rf, ctx) { if (rf & 1) {
    var _r67 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 63);
    ɵngcc0.ɵɵlistener("click", function DataGridComponent_div_5_div_24_ng_container_8_ng_container_1_button_3_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r67); var bulkActionControl_r55 = ɵngcc0.ɵɵnextContext(2).$implicit; var ctx_r66 = ɵngcc0.ɵɵnextContext(3); return bulkActionControl_r55.callback(ctx_r66.selectedItemIds, ctx_r66.reload.bind(ctx_r66)); });
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵelement(2, "i", 71);
    ɵngcc0.ɵɵelementStart(3, "span");
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵpipe(5, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var bulkActionControl_r55 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(1, 3, bulkActionControl_r55.text));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵpropertyInterpolate("c8yIcon", bulkActionControl_r55.icon);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(5, 5, bulkActionControl_r55.text));
} }
function DataGridComponent_div_5_div_24_ng_container_8_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, DataGridComponent_div_5_div_24_ng_container_8_ng_container_1_button_1_Template, 6, 6, "button", 67);
    ɵngcc0.ɵɵtemplate(2, DataGridComponent_div_5_div_24_ng_container_8_ng_container_1_button_2_Template, 6, 6, "button", 67);
    ɵngcc0.ɵɵtemplate(3, DataGridComponent_div_5_div_24_ng_container_8_ng_container_1_button_3_Template, 6, 7, "button", 68);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var ctx_r56 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", ctx_r56.builtInActionType.Export);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", ctx_r56.builtInActionType.Delete);
} }
function DataGridComponent_div_5_div_24_ng_container_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0, 66);
    ɵngcc0.ɵɵtemplate(1, DataGridComponent_div_5_div_24_ng_container_8_ng_container_1_Template, 4, 2, "ng-container", 10);
    ɵngcc0.ɵɵpipe(2, "isControlVisible");
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var bulkActionControl_r55 = ctx.$implicit;
    var ctx_r52 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("ngSwitch", bulkActionControl_r55.type);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind2(2, 2, bulkActionControl_r55, ctx_r52.selectedItemIds));
} }
function DataGridComponent_div_5_div_24_Template(rf, ctx) { if (rf & 1) {
    var _r71 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 60);
    ɵngcc0.ɵɵelementStart(1, "h4");
    ɵngcc0.ɵɵelementStart(2, "span", 38);
    ɵngcc0.ɵɵdisableBindings();
    ɵngcc0.ɵɵtext(3, " {{ count }} selected items. ");
    ɵngcc0.ɵɵenableBindings();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(4, "br", 61);
    ɵngcc0.ɵɵtemplate(5, DataGridComponent_div_5_div_24_small_5_Template, 5, 5, "small", 10);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(6, "div", 18);
    ɵngcc0.ɵɵelementStart(7, "div", 19);
    ɵngcc0.ɵɵtemplate(8, DataGridComponent_div_5_div_24_ng_container_8_Template, 3, 5, "ng-container", 62);
    ɵngcc0.ɵɵelementStart(9, "button", 63);
    ɵngcc0.ɵɵlistener("click", function DataGridComponent_div_5_div_24_Template_button_click_9_listener() { ɵngcc0.ɵɵrestoreView(_r71); var ctx_r70 = ɵngcc0.ɵɵnextContext(2); return ctx_r70.cancel(); });
    ɵngcc0.ɵɵpipe(10, "translate");
    ɵngcc0.ɵɵelement(11, "i", 64);
    ɵngcc0.ɵɵelementStart(12, "span");
    ɵngcc0.ɵɵtext(13);
    ɵngcc0.ɵɵpipe(14, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r14 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("translateParams", ɵngcc0.ɵɵpureFunction1(9, _c65, ctx_r14.selectedItemIds.length));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r14.selectedItemIds.length >= ctx_r14.pagination.pageSize);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r14.bulkActionControls);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(10, 5, "Cancel"));
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(14, 7, "Cancel"));
} }
var _c66 = function (a0) { return { "m-r-16": a0 }; };
function DataGridComponent_div_5_Template(rf, ctx) { if (rf & 1) {
    var _r73 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 16);
    ɵngcc0.ɵɵelementStart(1, "h4", 17);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(4, DataGridComponent_div_5_ng_container_4_Template, 8, 6, "ng-container", 10);
    ɵngcc0.ɵɵelementStart(5, "div", 18);
    ɵngcc0.ɵɵelementStart(6, "div", 19);
    ɵngcc0.ɵɵtemplate(7, DataGridComponent_div_5_ng_container_7_Template, 3, 3, "ng-container", 20);
    ɵngcc0.ɵɵelementStart(8, "div", 21);
    ɵngcc0.ɵɵelementStart(9, "button", 22);
    ɵngcc0.ɵɵpipe(10, "translate");
    ɵngcc0.ɵɵelement(11, "i", 23);
    ɵngcc0.ɵɵelementStart(12, "span");
    ɵngcc0.ɵɵtext(13);
    ɵngcc0.ɵɵpipe(14, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(15, DataGridComponent_div_5_ul_15_Template, 4, 1, "ul", 24);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(16, "button", 25);
    ɵngcc0.ɵɵlistener("click", function DataGridComponent_div_5_Template_button_click_16_listener() { ɵngcc0.ɵɵrestoreView(_r73); var ctx_r72 = ɵngcc0.ɵɵnextContext(); return ctx_r72.clickReload(); });
    ɵngcc0.ɵɵpipe(17, "translate");
    ɵngcc0.ɵɵpipe(18, "async");
    ɵngcc0.ɵɵelement(19, "i", 26);
    ɵngcc0.ɵɵelementStart(20, "span");
    ɵngcc0.ɵɵtext(21);
    ɵngcc0.ɵɵpipe(22, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(23, DataGridComponent_div_5_div_23_Template, 6, 6, "div", 27);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(24, DataGridComponent_div_5_div_24_Template, 15, 11, "div", 28);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(24, _c66, !!ctx_r2.title));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(3, 12, ctx_r2.title));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r2.displayOptions.filter);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r2.headerActionControls);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("insideClick", true);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(10, 14, "Configure columns"));
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(14, 16, "Configure columns"));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(17, 18, "Reload"));
    ɵngcc0.ɵɵproperty("disabled", ɵngcc0.ɵɵpipeBind1(18, 20, ctx_r2.dataSource.loading$));
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(22, 22, "Reload"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r2.serverSideDataCallback || ctx_r2.showSearch);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r2.selectedItemIds.length !== 0);
} }
function DataGridComponent_ng_container_7_ng_container_2_th_1_Template(rf, ctx) { if (rf & 1) {
    var _r81 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "th", 77);
    ɵngcc0.ɵɵelementStart(1, "div");
    ɵngcc0.ɵɵelementStart(2, "label", 78);
    ɵngcc0.ɵɵelementStart(3, "input", 79);
    ɵngcc0.ɵɵlistener("change", function DataGridComponent_ng_container_7_ng_container_2_th_1_Template_input_change_3_listener($event) { ɵngcc0.ɵɵrestoreView(_r81); var ctx_r80 = ɵngcc0.ɵɵnextContext(3); return ctx_r80.setAllItemsInCurrentPageSelected($event.target.checked); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(4, "span");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r78 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("checked", ctx_r78.currentPageSelectionState.allSelected)("indeterminate", !(ctx_r78.currentPageSelectionState.allSelected || ctx_r78.currentPageSelectionState.allDeselected));
} }
function DataGridComponent_ng_container_7_ng_container_2_td_2_Template(rf, ctx) { if (rf & 1) {
    var _r84 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "td", 80);
    ɵngcc0.ɵɵelementStart(1, "label", 78);
    ɵngcc0.ɵɵelementStart(2, "input", 81);
    ɵngcc0.ɵɵlistener("change", function DataGridComponent_ng_container_7_ng_container_2_td_2_Template_input_change_2_listener($event) { var restoredCtx = ɵngcc0.ɵɵrestoreView(_r84); var row_r82 = restoredCtx.$implicit; var ctx_r83 = ɵngcc0.ɵɵnextContext(3); return ctx_r83.setItemsSelected([row_r82], $event.target.checked); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(3, "span");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var row_r82 = ctx.$implicit;
    var ctx_r79 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("checked", ctx_r79.isItemSelected(row_r82));
} }
function DataGridComponent_ng_container_7_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, DataGridComponent_ng_container_7_ng_container_2_th_1_Template, 5, 2, "th", 75);
    ɵngcc0.ɵɵtemplate(2, DataGridComponent_ng_container_7_ng_container_2_td_2_Template, 4, 1, "td", 76);
    ɵngcc0.ɵɵelementContainerEnd();
} }
function DataGridComponent_ng_container_7_ng_container_3_th_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "th", 77);
} }
function DataGridComponent_ng_container_7_ng_container_3_td_2_ng_container_1_ng_container_1_ng_container_1_button_1_Template(rf, ctx) { if (rf & 1) {
    var _r98 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 86);
    ɵngcc0.ɵɵlistener("click", function DataGridComponent_ng_container_7_ng_container_3_td_2_ng_container_1_ng_container_1_ng_container_1_button_1_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r98); var actionControl_r91 = ɵngcc0.ɵɵnextContext(2).$implicit; var row_r87 = ɵngcc0.ɵɵnextContext(2).$implicit; var ctx_r96 = ɵngcc0.ɵɵnextContext(3); return actionControl_r91.callback(row_r87, ctx_r96.reload.bind(ctx_r96)); });
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵelement(2, "i", 87);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(1, 1, "Edit"));
} }
function DataGridComponent_ng_container_7_ng_container_3_td_2_ng_container_1_ng_container_1_ng_container_1_button_2_Template(rf, ctx) { if (rf & 1) {
    var _r102 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 88);
    ɵngcc0.ɵɵlistener("click", function DataGridComponent_ng_container_7_ng_container_3_td_2_ng_container_1_ng_container_1_ng_container_1_button_2_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r102); var actionControl_r91 = ɵngcc0.ɵɵnextContext(2).$implicit; var row_r87 = ɵngcc0.ɵɵnextContext(2).$implicit; var ctx_r100 = ɵngcc0.ɵɵnextContext(3); return actionControl_r91.callback(row_r87, ctx_r100.reload.bind(ctx_r100)); });
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵelement(2, "i", 89);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(1, 1, "Delete"));
} }
function DataGridComponent_ng_container_7_ng_container_3_td_2_ng_container_1_ng_container_1_ng_container_1_button_3_Template(rf, ctx) { if (rf & 1) {
    var _r106 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 90);
    ɵngcc0.ɵɵlistener("click", function DataGridComponent_ng_container_7_ng_container_3_td_2_ng_container_1_ng_container_1_ng_container_1_button_3_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r106); var actionControl_r91 = ɵngcc0.ɵɵnextContext(2).$implicit; var row_r87 = ɵngcc0.ɵɵnextContext(2).$implicit; var ctx_r104 = ɵngcc0.ɵɵnextContext(3); return actionControl_r91.callback(row_r87, ctx_r104.reload.bind(ctx_r104)); });
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelement(3, "i", 71);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var actionControl_r91 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(1, 3, actionControl_r91.text));
    ɵngcc0.ɵɵpropertyInterpolate("tooltip", ɵngcc0.ɵɵpipeBind1(2, 5, actionControl_r91.text));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵpropertyInterpolate("c8yIcon", actionControl_r91.icon);
} }
function DataGridComponent_ng_container_7_ng_container_3_td_2_ng_container_1_ng_container_1_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, DataGridComponent_ng_container_7_ng_container_3_td_2_ng_container_1_ng_container_1_ng_container_1_button_1_Template, 3, 3, "button", 83);
    ɵngcc0.ɵɵtemplate(2, DataGridComponent_ng_container_7_ng_container_3_td_2_ng_container_1_ng_container_1_ng_container_1_button_2_Template, 3, 3, "button", 84);
    ɵngcc0.ɵɵtemplate(3, DataGridComponent_ng_container_7_ng_container_3_td_2_ng_container_1_ng_container_1_ng_container_1_button_3_Template, 4, 7, "button", 85);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var ctx_r92 = ɵngcc0.ɵɵnextContext(6);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", ctx_r92.builtInActionType.Edit);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", ctx_r92.builtInActionType.Delete);
} }
function DataGridComponent_ng_container_7_ng_container_3_td_2_ng_container_1_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0, 66);
    ɵngcc0.ɵɵtemplate(1, DataGridComponent_ng_container_7_ng_container_3_td_2_ng_container_1_ng_container_1_ng_container_1_Template, 4, 2, "ng-container", 10);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var actionControl_r91 = ctx.$implicit;
    var row_r87 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵproperty("ngSwitch", actionControl_r91.type);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", actionControl_r91.showIf ? actionControl_r91.showIf(row_r87) : true);
} }
function DataGridComponent_ng_container_7_ng_container_3_td_2_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, DataGridComponent_ng_container_7_ng_container_3_td_2_ng_container_1_ng_container_1_Template, 2, 2, "ng-container", 62);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var ctx_r88 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r88.actionControls);
} }
function DataGridComponent_ng_container_7_ng_container_3_td_2_div_3_ul_4_li_1_ng_container_1_button_1_Template(rf, ctx) { if (rf & 1) {
    var _r120 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 98);
    ɵngcc0.ɵɵlistener("click", function DataGridComponent_ng_container_7_ng_container_3_td_2_div_3_ul_4_li_1_ng_container_1_button_1_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r120); var actionControl_r112 = ɵngcc0.ɵɵnextContext(2).$implicit; var row_r87 = ɵngcc0.ɵɵnextContext(3).$implicit; var ctx_r118 = ɵngcc0.ɵɵnextContext(3); return actionControl_r112.callback(row_r87, ctx_r118.reload.bind(ctx_r118)); });
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵelement(2, "i", 87);
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵpipe(4, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(1, 2, "Edit"));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(4, 4, "Edit"), " ");
} }
function DataGridComponent_ng_container_7_ng_container_3_td_2_div_3_ul_4_li_1_ng_container_1_button_2_Template(rf, ctx) { if (rf & 1) {
    var _r124 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 98);
    ɵngcc0.ɵɵlistener("click", function DataGridComponent_ng_container_7_ng_container_3_td_2_div_3_ul_4_li_1_ng_container_1_button_2_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r124); var actionControl_r112 = ɵngcc0.ɵɵnextContext(2).$implicit; var row_r87 = ɵngcc0.ɵɵnextContext(3).$implicit; var ctx_r122 = ɵngcc0.ɵɵnextContext(3); return actionControl_r112.callback(row_r87, ctx_r122.reload.bind(ctx_r122)); });
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵelement(2, "i", 70);
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵpipe(4, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(1, 2, "Delete"));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(4, 4, "Delete"), " ");
} }
function DataGridComponent_ng_container_7_ng_container_3_td_2_div_3_ul_4_li_1_ng_container_1_button_3_Template(rf, ctx) { if (rf & 1) {
    var _r128 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 98);
    ɵngcc0.ɵɵlistener("click", function DataGridComponent_ng_container_7_ng_container_3_td_2_div_3_ul_4_li_1_ng_container_1_button_3_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r128); var actionControl_r112 = ɵngcc0.ɵɵnextContext(2).$implicit; var row_r87 = ɵngcc0.ɵɵnextContext(3).$implicit; var ctx_r126 = ɵngcc0.ɵɵnextContext(3); return actionControl_r112.callback(row_r87, ctx_r126.reload.bind(ctx_r126)); });
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵelement(2, "i", 99);
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵpipe(4, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(1, 2, "Export"));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(4, 4, "Export"), " ");
} }
function DataGridComponent_ng_container_7_ng_container_3_td_2_div_3_ul_4_li_1_ng_container_1_button_4_Template(rf, ctx) { if (rf & 1) {
    var _r132 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 98);
    ɵngcc0.ɵɵlistener("click", function DataGridComponent_ng_container_7_ng_container_3_td_2_div_3_ul_4_li_1_ng_container_1_button_4_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r132); var actionControl_r112 = ɵngcc0.ɵɵnextContext(2).$implicit; var row_r87 = ɵngcc0.ɵɵnextContext(3).$implicit; var ctx_r130 = ɵngcc0.ɵɵnextContext(3); return actionControl_r112.callback(row_r87, ctx_r130.reload.bind(ctx_r130)); });
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵelement(2, "i", 71);
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵpipe(4, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var actionControl_r112 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(1, 3, actionControl_r112.text));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵpropertyInterpolate("c8yIcon", actionControl_r112.icon);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(4, 5, actionControl_r112.text), " ");
} }
function DataGridComponent_ng_container_7_ng_container_3_td_2_div_3_ul_4_li_1_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, DataGridComponent_ng_container_7_ng_container_3_td_2_div_3_ul_4_li_1_ng_container_1_button_1_Template, 5, 6, "button", 96);
    ɵngcc0.ɵɵtemplate(2, DataGridComponent_ng_container_7_ng_container_3_td_2_div_3_ul_4_li_1_ng_container_1_button_2_Template, 5, 6, "button", 96);
    ɵngcc0.ɵɵtemplate(3, DataGridComponent_ng_container_7_ng_container_3_td_2_div_3_ul_4_li_1_ng_container_1_button_3_Template, 5, 6, "button", 96);
    ɵngcc0.ɵɵtemplate(4, DataGridComponent_ng_container_7_ng_container_3_td_2_div_3_ul_4_li_1_ng_container_1_button_4_Template, 5, 7, "button", 97);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var ctx_r113 = ɵngcc0.ɵɵnextContext(7);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", ctx_r113.builtInActionType.Edit);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", ctx_r113.builtInActionType.Delete);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", ctx_r113.builtInActionType.Export);
} }
function DataGridComponent_ng_container_7_ng_container_3_td_2_div_3_ul_4_li_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "li", 66);
    ɵngcc0.ɵɵtemplate(1, DataGridComponent_ng_container_7_ng_container_3_td_2_div_3_ul_4_li_1_ng_container_1_Template, 5, 3, "ng-container", 10);
    ɵngcc0.ɵɵpipe(2, "isControlVisible");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var actionControl_r112 = ctx.$implicit;
    var row_r87 = ɵngcc0.ɵɵnextContext(3).$implicit;
    ɵngcc0.ɵɵproperty("ngSwitch", actionControl_r112.type);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind2(2, 2, actionControl_r112, row_r87));
} }
function DataGridComponent_ng_container_7_ng_container_3_td_2_div_3_ul_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "ul", 95);
    ɵngcc0.ɵɵtemplate(1, DataGridComponent_ng_container_7_ng_container_3_td_2_div_3_ul_4_li_1_Template, 3, 5, "li", 62);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r110 = ɵngcc0.ɵɵnextContext(5);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r110.actionControls);
} }
function DataGridComponent_ng_container_7_ng_container_3_td_2_div_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 91);
    ɵngcc0.ɵɵelementStart(1, "button", 92);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelement(3, "i", 93);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(4, DataGridComponent_ng_container_7_ng_container_3_td_2_div_3_ul_4_Template, 2, 1, "ul", 94);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(2, 1, "Actions"));
} }
var _c67 = function (a0) { return { "m-l-auto overflow-visible": a0 }; };
function DataGridComponent_ng_container_7_ng_container_3_td_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "td", 80);
    ɵngcc0.ɵɵtemplate(1, DataGridComponent_ng_container_7_ng_container_3_td_2_ng_container_1_Template, 2, 1, "ng-container", 10);
    ɵngcc0.ɵɵelementStart(2, "div", 17);
    ɵngcc0.ɵɵtemplate(3, DataGridComponent_ng_container_7_ng_container_3_td_2_div_3_Template, 5, 3, "div", 82);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r86 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r86.actionControls.length <= 2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(3, _c67, ctx_r86.actionControls.length > 2));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r86.actionControls.length > 2);
} }
function DataGridComponent_ng_container_7_ng_container_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, DataGridComponent_ng_container_7_ng_container_3_th_1_Template, 1, 0, "th", 75);
    ɵngcc0.ɵɵtemplate(2, DataGridComponent_ng_container_7_ng_container_3_td_2_Template, 4, 5, "td", 76);
    ɵngcc0.ɵɵelementContainerEnd();
} }
function DataGridComponent_ng_container_7_ng_container_4_th_1_div_2_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelement(1, "c8y-cell-renderer", 108);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var cellRendererSpec_r142 = ctx.ngIf;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("spec", cellRendererSpec_r142);
} }
var _c68 = function (a0, a1) { return { columnName: a0, value: a1 }; };
function DataGridComponent_ng_container_7_ng_container_4_th_1_div_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 107);
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵtemplate(2, DataGridComponent_ng_container_7_ng_container_4_th_1_div_2_ng_container_2_Template, 2, 1, "ng-container", 10);
    ɵngcc0.ɵɵpipe(3, "map");
    ɵngcc0.ɵɵpipe(4, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var column_r74 = ɵngcc0.ɵɵnextContext(3).$implicit;
    var ctx_r138 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("title", ɵngcc0.ɵɵpipeBind1(1, 2, column_r74.header) || column_r74.name);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind3(3, 4, ɵngcc0.ɵɵpureFunction1(13, _c24, ɵngcc0.ɵɵpureFunction2(10, _c68, column_r74.name, ɵngcc0.ɵɵpipeBind1(4, 8, column_r74.header) || column_r74.name)), ctx_r138.getHeaderCellRendererSpec, ctx_r138));
} }
function DataGridComponent_ng_container_7_ng_container_4_th_1_div_3_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelement(1, "c8y-cell-renderer", 108);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var cellRendererSpec_r147 = ctx.ngIf;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("spec", cellRendererSpec_r147);
} }
function DataGridComponent_ng_container_7_ng_container_4_th_1_div_3_ul_9_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelement(1, "c8y-filtering-form-renderer", 108);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var filteringFormRendererSpec_r149 = ctx.ngIf;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("spec", filteringFormRendererSpec_r149);
} }
var _c69 = function (a0, a1) { return { column: a0, dropdown: a1 }; };
function DataGridComponent_ng_container_7_ng_container_4_th_1_div_3_ul_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "ul", 45);
    ɵngcc0.ɵɵlistener("click", function DataGridComponent_ng_container_7_ng_container_4_th_1_div_3_ul_9_Template_ul_click_0_listener($event) { return $event.stopPropagation(); });
    ɵngcc0.ɵɵelementStart(1, "li", 112);
    ɵngcc0.ɵɵtemplate(2, DataGridComponent_ng_container_7_ng_container_4_th_1_div_3_ul_9_ng_container_2_Template, 2, 1, "ng-container", 10);
    ɵngcc0.ɵɵpipe(3, "map");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵnextContext();
    var _r144 = ɵngcc0.ɵɵreference(1);
    var column_r74 = ɵngcc0.ɵɵnextContext(3).$implicit;
    var ctx_r146 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind3(3, 1, ɵngcc0.ɵɵpureFunction1(8, _c24, ɵngcc0.ɵɵpureFunction2(5, _c69, column_r74, _r144)), ctx_r146.getFilteringFormRendererSpec, ctx_r146));
} }
function DataGridComponent_ng_container_7_ng_container_4_th_1_div_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 21, 109);
    ɵngcc0.ɵɵelementStart(2, "button", 110);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵtemplate(4, DataGridComponent_ng_container_7_ng_container_4_th_1_div_3_ng_container_4_Template, 2, 1, "ng-container", 10);
    ɵngcc0.ɵɵpipe(5, "map");
    ɵngcc0.ɵɵpipe(6, "translate");
    ɵngcc0.ɵɵelement(7, "i", 111);
    ɵngcc0.ɵɵpipe(8, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(9, DataGridComponent_ng_container_7_ng_container_4_th_1_div_3_ul_9_Template, 4, 10, "ul", 24);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var column_r74 = ɵngcc0.ɵɵnextContext(3).$implicit;
    var ctx_r139 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("insideClick", true);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("title", ɵngcc0.ɵɵpipeBind1(3, 4, column_r74.header) || column_r74.name);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind3(5, 6, ɵngcc0.ɵɵpureFunction1(17, _c24, ɵngcc0.ɵɵpureFunction2(14, _c68, column_r74.name, ɵngcc0.ɵɵpipeBind1(6, 10, column_r74.header) || column_r74.name)), ctx_r139.getHeaderCellRendererSpec, ctx_r139));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(8, 12, "Filter"));
} }
function DataGridComponent_ng_container_7_ng_container_4_th_1_button_4_i_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "i", 117);
} }
function DataGridComponent_ng_container_7_ng_container_4_th_1_button_4_i_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "i", 118);
} }
function DataGridComponent_ng_container_7_ng_container_4_th_1_button_4_i_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "i", 119);
} }
function DataGridComponent_ng_container_7_ng_container_4_th_1_button_4_Template(rf, ctx) { if (rf & 1) {
    var _r158 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 113);
    ɵngcc0.ɵɵlistener("click", function DataGridComponent_ng_container_7_ng_container_4_th_1_button_4_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r158); var column_r74 = ɵngcc0.ɵɵnextContext(3).$implicit; var ctx_r156 = ɵngcc0.ɵɵnextContext(); return ctx_r156.changeSortOrder(column_r74.name); });
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵelementContainerStart(2, 66);
    ɵngcc0.ɵɵtemplate(3, DataGridComponent_ng_container_7_ng_container_4_th_1_button_4_i_3_Template, 1, 0, "i", 114);
    ɵngcc0.ɵɵtemplate(4, DataGridComponent_ng_container_7_ng_container_4_th_1_button_4_i_4_Template, 1, 0, "i", 115);
    ɵngcc0.ɵɵtemplate(5, DataGridComponent_ng_container_7_ng_container_4_th_1_button_4_i_5_Template, 1, 0, "i", 116);
    ɵngcc0.ɵɵelementContainerEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var column_r74 = ɵngcc0.ɵɵnextContext(3).$implicit;
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(1, 4, "Sort"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngSwitch", column_r74.sortOrder);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "asc");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "desc");
} }
function DataGridComponent_ng_container_7_ng_container_4_th_1_Template(rf, ctx) { if (rf & 1) {
    var _r162 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "th", 102);
    ɵngcc0.ɵɵpipe(1, "map");
    ɵngcc0.ɵɵtemplate(2, DataGridComponent_ng_container_7_ng_container_4_th_1_div_2_Template, 5, 15, "div", 103);
    ɵngcc0.ɵɵtemplate(3, DataGridComponent_ng_container_7_ng_container_4_th_1_div_3_Template, 10, 19, "div", 104);
    ɵngcc0.ɵɵtemplate(4, DataGridComponent_ng_container_7_ng_container_4_th_1_button_4_Template, 6, 6, "button", 105);
    ɵngcc0.ɵɵelementStart(5, "span", 106);
    ɵngcc0.ɵɵlistener("mousedown", function DataGridComponent_ng_container_7_ng_container_4_th_1_Template_span_mousedown_5_listener($event) { ɵngcc0.ɵɵrestoreView(_r162); var column_r74 = ɵngcc0.ɵɵnextContext(2).$implicit; var ctx_r160 = ɵngcc0.ɵɵnextContext(); return ctx_r160.resizeHandleMouseDown$.emit({ event: $event, targetColumnName: column_r74.name }); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var column_r74 = ɵngcc0.ɵɵnextContext(2).$implicit;
    var ctx_r136 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassProp("sorted", column_r74.sortOrder)("filtered", ɵngcc0.ɵɵpipeBind2(1, 11, column_r74, ctx_r136.isColumnFilteringApplied))("hidden", !column_r74.visible);
    ɵngcc0.ɵɵproperty("ngClass", column_r74.headerCSSClassName);
    ɵngcc0.ɵɵattribute("data-type", column_r74.dataType);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", !column_r74.filterable);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", column_r74.filterable);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", column_r74.sortable);
} }
function DataGridComponent_ng_container_7_ng_container_4_td_2_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelement(1, "c8y-cell-renderer", 108);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var cellRendererSpec_r166 = ctx.ngIf;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("spec", cellRendererSpec_r166);
} }
var _c70 = function (a0, a1, a2) { return { value: a0, row: a1, columnName: a2 }; };
function DataGridComponent_ng_container_7_ng_container_4_td_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "td", 120);
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵtemplate(2, DataGridComponent_ng_container_7_ng_container_4_td_2_ng_container_2_Template, 2, 1, "ng-container", 10);
    ɵngcc0.ɵɵpipe(3, "map");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var row_r164 = ctx.$implicit;
    var column_r74 = ɵngcc0.ɵɵnextContext(2).$implicit;
    var ctx_r137 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassProp("hidden", !column_r74.visible);
    ɵngcc0.ɵɵproperty("ngClass", column_r74.cellCSSClassName);
    ɵngcc0.ɵɵattribute("data-cell-title", ɵngcc0.ɵɵpipeBind1(1, 6, column_r74.header))("data-type", column_r74.dataType);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind3(3, 8, ɵngcc0.ɵɵpureFunction1(16, _c24, ɵngcc0.ɵɵpureFunction3(12, _c70, ctx_r137.resolveCellValue(row_r164, column_r74.path), row_r164, column_r74.name)), ctx_r137.getCellRendererSpec, ctx_r137));
} }
function DataGridComponent_ng_container_7_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, DataGridComponent_ng_container_7_ng_container_4_th_1_Template, 6, 14, "th", 100);
    ɵngcc0.ɵɵtemplate(2, DataGridComponent_ng_container_7_ng_container_4_td_2_Template, 4, 18, "td", 101);
    ɵngcc0.ɵɵelementContainerEnd();
} }
function DataGridComponent_ng_container_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0, 72);
    ɵngcc0.ɵɵelementContainerStart(1, 66);
    ɵngcc0.ɵɵtemplate(2, DataGridComponent_ng_container_7_ng_container_2_Template, 3, 0, "ng-container", 73);
    ɵngcc0.ɵɵtemplate(3, DataGridComponent_ng_container_7_ng_container_3_Template, 3, 0, "ng-container", 73);
    ɵngcc0.ɵɵtemplate(4, DataGridComponent_ng_container_7_ng_container_4_Template, 3, 0, "ng-container", 74);
    ɵngcc0.ɵɵelementContainerEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var column_r74 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("cdkColumnDef", column_r74.name);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitch", column_r74.name);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "checkbox");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "actions");
} }
function DataGridComponent_td_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "td", 121);
    ɵngcc0.ɵɵelement(1, "template", null, 122);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r4 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵstyleProp("grid-column", ctx_r4.styles.gridInfiniteScrollColumn);
} }
function DataGridComponent_tr_10_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "tr", 123);
} }
function DataGridComponent_tr_11_Template(rf, ctx) { if (rf & 1) {
    var _r171 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "tr", 124);
    ɵngcc0.ɵɵlistener("mouseover", function DataGridComponent_tr_11_Template_tr_mouseover_0_listener() { var restoredCtx = ɵngcc0.ɵɵrestoreView(_r171); var row_r169 = restoredCtx.$implicit; var ctx_r170 = ɵngcc0.ɵɵnextContext(); return ctx_r170.rowMouseOver.emit(row_r169); })("mouseleave", function DataGridComponent_tr_11_Template_tr_mouseleave_0_listener() { var restoredCtx = ɵngcc0.ɵɵrestoreView(_r171); var row_r169 = restoredCtx.$implicit; var ctx_r172 = ɵngcc0.ɵɵnextContext(); return ctx_r172.rowMouseLeave.emit(row_r169); })("click", function DataGridComponent_tr_11_Template_tr_click_0_listener() { var restoredCtx = ɵngcc0.ɵɵrestoreView(_r171); var row_r169 = restoredCtx.$implicit; var ctx_r173 = ɵngcc0.ɵɵnextContext(); return ctx_r173.rowClick.emit(row_r169); });
    ɵngcc0.ɵɵelementEnd();
} }
function DataGridComponent_ng_container_12_tr_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "tr", 126);
} }
var _c71 = function () { return ["infiniteScrollFooter"]; };
function DataGridComponent_ng_container_12_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, DataGridComponent_ng_container_12_tr_1_Template, 1, 0, "tr", 125);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("cdkFooterRowDef", ɵngcc0.ɵɵpureFunction0(1, _c71));
} }
function DataGridComponent_div_13_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 127);
    ɵngcc0.ɵɵelementStart(1, "div", 128);
    ɵngcc0.ɵɵprojection(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} }
function DataGridComponent_div_16_div_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 136);
    ɵngcc0.ɵɵelementStart(1, "span", 137);
    ɵngcc0.ɵɵdisableBindings();
    ɵngcc0.ɵɵtext(2, "{{ pageFirstItemIdx }} - {{ pageLastItemIdx }} of {{ itemsTotal }}");
    ɵngcc0.ɵɵenableBindings();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r175 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("translateParams", ctx_r175.paginationLabelParams);
} }
function DataGridComponent_div_16_div_5_option_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "option", 143);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var pageSize_r178 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("ngValue", pageSize_r178);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", pageSize_r178, " ");
} }
function DataGridComponent_div_16_div_5_Template(rf, ctx) { if (rf & 1) {
    var _r180 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 138);
    ɵngcc0.ɵɵelementStart(1, "label", 139);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(4, "div", 140);
    ɵngcc0.ɵɵelementStart(5, "select", 141);
    ɵngcc0.ɵɵlistener("ngModelChange", function DataGridComponent_div_16_div_5_Template_select_ngModelChange_5_listener($event) { ɵngcc0.ɵɵrestoreView(_r180); var ctx_r179 = ɵngcc0.ɵɵnextContext(2); return ctx_r179.updatePagination({ itemsPerPage: $event, page: ctx_r179.pagination.currentPage }); });
    ɵngcc0.ɵɵtemplate(6, DataGridComponent_div_16_div_5_option_6_Template, 2, 2, "option", 142);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r176 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(3, 3, "Items per page"));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngModel", ctx_r176.pagination.pageSize);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r176.possiblePageSizes);
} }
function DataGridComponent_div_16_Template(rf, ctx) { if (rf & 1) {
    var _r182 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 129);
    ɵngcc0.ɵɵelementStart(1, "div", 130);
    ɵngcc0.ɵɵtemplate(2, DataGridComponent_div_16_div_2_Template, 3, 1, "div", 131);
    ɵngcc0.ɵɵpipe(3, "async");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(4, "div", 132);
    ɵngcc0.ɵɵtemplate(5, DataGridComponent_div_16_div_5_Template, 7, 5, "div", 133);
    ɵngcc0.ɵɵpipe(6, "async");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(7, "div", 134);
    ɵngcc0.ɵɵelementStart(8, "pagination", 135);
    ɵngcc0.ɵɵlistener("pageChanged", function DataGridComponent_div_16_Template_pagination_pageChanged_8_listener($event) { ɵngcc0.ɵɵrestoreView(_r182); var ctx_r181 = ɵngcc0.ɵɵnextContext(); return ctx_r181.updatePagination($event); })("numPages", function DataGridComponent_div_16_Template_pagination_numPages_8_listener($event) { ɵngcc0.ɵɵrestoreView(_r182); var ctx_r183 = ɵngcc0.ɵɵnextContext(); return ctx_r183.totalPagesCount$.next($event); });
    ɵngcc0.ɵɵpipe(9, "async");
    ɵngcc0.ɵɵpipe(10, "async");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r9 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind1(3, 9, ctx_r9.dataSource.stats$).currentPageSize > 0);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind1(6, 11, ctx_r9.dataSource.stats$).filteredSize > ctx_r9.minPossiblePageSize);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵclassProp("hidden", ɵngcc0.ɵɵpipeBind1(9, 13, ctx_r9.hidePagination$));
    ɵngcc0.ɵɵproperty("ngModel", ctx_r9.pagination.currentPage)("totalItems", ɵngcc0.ɵɵpipeBind1(10, 15, ctx_r9.dataSource.stats$).filteredSize)("itemsPerPage", ctx_r9.pagination.pageSize)("maxSize", 5)("boundaryLinks", false);
} }
var _c72 = [[["", 8, "c8y-empty-state"]]];
var _c73 = function (a0) { return { "table-data-grid__overlay": a0 }; };
var _c74 = [".c8y-empty-state"];
var _c75 = function (a0) { return { $implicit: a0 }; };
function CellRendererComponent_ng_container_0_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0, 3);
} if (rf & 2) {
    var ctx_r2 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r2.spec.renderer)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction1(2, _c75, ctx_r2.spec.context));
} }
function CellRendererComponent_ng_container_0_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0, 4);
} if (rf & 2) {
    var ctx_r3 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("ngComponentOutlet", ctx_r3.spec.renderer)("ngComponentOutletInjector", ctx_r3.rendererInjector);
} }
function CellRendererComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, CellRendererComponent_ng_container_0_ng_container_1_Template, 1, 4, "ng-container", 1);
    ɵngcc0.ɵɵtemplate(2, CellRendererComponent_ng_container_0_ng_container_2_Template, 1, 2, "ng-container", 2);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.rendererType === "TEMPLATE");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.rendererType === "COMPONENT");
} }
function CellRendererComponent_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "span", 5);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("title", ctx_r1.spec.context.value);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r1.spec.context.value, " ");
} }
function FilteringFormRendererComponent_ng_container_0_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0, 3);
} if (rf & 2) {
    var ctx_r2 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r2.spec.renderer)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction1(2, _c75, ctx_r2.spec.context));
} }
function FilteringFormRendererComponent_ng_container_0_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0, 4);
} if (rf & 2) {
    var ctx_r3 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("ngComponentOutlet", ctx_r3.spec.renderer)("ngComponentOutletInjector", ctx_r3.rendererInjector);
} }
function FilteringFormRendererComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, FilteringFormRendererComponent_ng_container_0_ng_container_1_Template, 1, 4, "ng-container", 1);
    ɵngcc0.ɵɵtemplate(2, FilteringFormRendererComponent_ng_container_0_ng_container_2_Template, 1, 2, "ng-container", 2);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.rendererType === "TEMPLATE");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.rendererType === "COMPONENT");
} }
function FilteringFormRendererComponent_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    var _r5 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "div", 5);
    ɵngcc0.ɵɵelementStart(2, "label");
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵpipe(4, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(5, "input", 6);
    ɵngcc0.ɵɵlistener("ngModelChange", function FilteringFormRendererComponent_ng_container_1_Template_input_ngModelChange_5_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); var ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4.defaultRendererFilterText = $event; })("keyup.enter", function FilteringFormRendererComponent_ng_container_1_Template_input_keyup_enter_5_listener() { ɵngcc0.ɵɵrestoreView(_r5); var ctx_r6 = ɵngcc0.ɵɵnextContext(); return ctx_r6.spec.context.applyFilter({ filterPredicate: ctx_r6.defaultRendererFilterText }); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(6, "div", 7);
    ɵngcc0.ɵɵelementStart(7, "button", 8);
    ɵngcc0.ɵɵlistener("click", function FilteringFormRendererComponent_ng_container_1_Template_button_click_7_listener() { ɵngcc0.ɵɵrestoreView(_r5); var ctx_r7 = ɵngcc0.ɵɵnextContext(); ctx_r7.defaultRendererFilterText = ""; return ctx_r7.spec.context.resetFilter(); });
    ɵngcc0.ɵɵpipe(8, "translate");
    ɵngcc0.ɵɵtext(9);
    ɵngcc0.ɵɵpipe(10, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(11, "button", 9);
    ɵngcc0.ɵɵlistener("click", function FilteringFormRendererComponent_ng_container_1_Template_button_click_11_listener() { ɵngcc0.ɵɵrestoreView(_r5); var ctx_r8 = ɵngcc0.ɵɵnextContext(); return ctx_r8.spec.context.applyFilter({ filterPredicate: ctx_r8.defaultRendererFilterText }); });
    ɵngcc0.ɵɵpipe(12, "translate");
    ɵngcc0.ɵɵtext(13);
    ɵngcc0.ɵɵpipe(14, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(4, 6, "Filter text"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngModel", ctx_r1.defaultRendererFilterText);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(8, 8, "Reset"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(10, 10, "Reset"), " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(12, 12, "Apply"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(14, 14, "Apply"), " ");
} }
function HelpComponent_c8y_action_bar_item_0_Template(rf, ctx) { if (rf & 1) {
    var _r6 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "c8y-action-bar-item", 6);
    ɵngcc0.ɵɵelementStart(1, "button", 7);
    ɵngcc0.ɵɵlistener("click", function HelpComponent_c8y_action_bar_item_0_Template_button_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r6); var ctx_r5 = ɵngcc0.ɵɵnextContext(); return ctx_r5.toggle(); });
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelement(3, "i", 8);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("placement", "right")("priority", ctx_r0.priority);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("title", ɵngcc0.ɵɵpipeBind1(2, 5, "Open help"));
    ɵngcc0.ɵɵattribute("aria-expanded", !ctx_r0.isCollapsed);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("c8yIcon", "question-circle-o");
} }
function HelpComponent_div_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelement(1, "c8y-loading");
    ɵngcc0.ɵɵelementEnd();
} }
function HelpComponent_div_5_div_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 12);
    ɵngcc0.ɵɵelementStart(1, "h4", 13);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(3, "div", 14);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r7 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r7.title);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("innerHTML", ctx_r7.sectionContent, ɵngcc0.ɵɵsanitizeHtml);
} }
function HelpComponent_div_5_div_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 12);
    ɵngcc0.ɵɵelementStart(1, "h4", 15);
    ɵngcc0.ɵɵtext(2, "Sorry, that didn't work");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "div", 16);
    ɵngcc0.ɵɵelementStart(4, "p", 17);
    ɵngcc0.ɵɵtext(5, "The content couldn't be loaded.");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} }
var _c76 = function (a0, a1) { return { "text-warning": a0, "text-muted": a1 }; };
function HelpComponent_div_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelementStart(1, "div", 9);
    ɵngcc0.ɵɵelement(2, "i", 10);
    ɵngcc0.ɵɵtemplate(3, HelpComponent_div_5_div_3_Template, 4, 2, "div", 11);
    ɵngcc0.ɵɵtemplate(4, HelpComponent_div_5_div_4_Template, 6, 0, "div", 11);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("c8yIcon", !ctx_r3.hasError ? ctx_r3.icon : "unlink")("ngClass", ɵngcc0.ɵɵpureFunction2(4, _c76, ctx_r3.hasError, !ctx_r3.hasError));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r3.hasError);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r3.hasError);
} }
function HelpComponent_div_6_span_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 17);
    ɵngcc0.ɵɵtext(1, " Open the ");
    ɵngcc0.ɵɵelementStart(2, "span");
    ɵngcc0.ɵɵtext(3, "User guide`KEEP_ORIGINAL`");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} }
function HelpComponent_div_6_span_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 17);
    ɵngcc0.ɵɵtext(1, " Check the ");
    ɵngcc0.ɵɵelementStart(2, "span");
    ɵngcc0.ɵɵtext(3, "User guide`KEEP_ORIGINAL`");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} }
function HelpComponent_div_6_Template(rf, ctx) { if (rf & 1) {
    var _r12 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 18);
    ɵngcc0.ɵɵelementStart(1, "button", 19);
    ɵngcc0.ɵɵlistener("click", function HelpComponent_div_6_Template_button_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r12); var ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11.toggle(); });
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵtext(3, "Close");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(4, "a", 20);
    ɵngcc0.ɵɵtemplate(5, HelpComponent_div_6_span_5_Template, 4, 0, "span", 21);
    ɵngcc0.ɵɵtemplate(6, HelpComponent_div_6_span_6_Template, 4, 0, "span", 21);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r4 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("title", ɵngcc0.ɵɵpipeBind1(2, 5, "Close help"));
    ɵngcc0.ɵɵattribute("aria-expanded", !ctx_r4.isCollapsed);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵpropertyInterpolate("href", ctx_r4.hasError ? ctx_r4.getUrl() : ctx_r4.getUrl(ctx_r4.src), ɵngcc0.ɵɵsanitizeUrl);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r4.hasError);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r4.hasError);
} }
var _c77 = function (a0, a1) { return { active: a0, inactive: a1 }; };
function SelectModalComponent_c8y_filter_10_Template(rf, ctx) { if (rf & 1) {
    var _r6 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "c8y-filter", 15);
    ɵngcc0.ɵɵlistener("onSearch", function SelectModalComponent_c8y_filter_10_Template_c8y_filter_onSearch_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r6); var ctx_r5 = ɵngcc0.ɵɵnextContext(); return ctx_r5.updatePipe($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵproperty("icon", "search");
} }
function SelectModalComponent_div_13_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 16);
    ɵngcc0.ɵɵelementStart(1, "div", 17);
    ɵngcc0.ɵɵelement(2, "h1", 18);
    ɵngcc0.ɵɵelementStart(3, "p", 19);
    ɵngcc0.ɵɵtext(4, "No items to display.");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵpropertyInterpolate1("c8yIcon", "", ctx_r1.icon, " ");
} }
function SelectModalComponent_c8y_li_15_div_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 24);
    ɵngcc0.ɵɵelement(1, "c8y-highlight", 25);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var bodyPart_r11 = ctx.$implicit;
    var ctx_r8 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("ngClass", bodyPart_r11.class);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("title", bodyPart_r11.value)("pattern", ctx_r8.filterTerm)("text", bodyPart_r11.value);
} }
function SelectModalComponent_c8y_li_15_div_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 26);
    ɵngcc0.ɵɵelementStart(1, "div", 24);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var item_r7 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngClass", item_r7.additionalInformation.class);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", item_r7.additionalInformation.value, " ");
} }
function SelectModalComponent_c8y_li_15_c8y_li_9_div_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 24);
    ɵngcc0.ɵɵelement(1, "c8y-highlight", 29);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var optionPart_r15 = ctx.$implicit;
    var ctx_r14 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("ngClass", optionPart_r15.class);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("pattern", ctx_r14.filterTerm)("text", optionPart_r15.value);
} }
function SelectModalComponent_c8y_li_15_c8y_li_9_Template(rf, ctx) { if (rf & 1) {
    var _r19 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "c8y-li");
    ɵngcc0.ɵɵelementStart(1, "c8y-li-radio", 27);
    ɵngcc0.ɵɵlistener("onSelect", function SelectModalComponent_c8y_li_15_c8y_li_9_Template_c8y_li_radio_onSelect_1_listener() { var restoredCtx = ɵngcc0.ɵɵrestoreView(_r19); var option_r13 = restoredCtx.$implicit; var item_r7 = ɵngcc0.ɵɵnextContext().$implicit; var ctx_r17 = ɵngcc0.ɵɵnextContext(); return ctx_r17.updateChoice({ item: item_r7, id: option_r13.obj.id }); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(2, "c8y-li-body", 28);
    ɵngcc0.ɵɵtemplate(3, SelectModalComponent_c8y_li_15_c8y_li_9_div_3_Template, 2, 3, "div", 22);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var option_r13 = ctx.$implicit;
    var item_r7 = ɵngcc0.ɵɵnextContext().$implicit;
    var ctx_r10 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("name", ctx_r10.mode === "single" ? "single" : item_r7.groupId)("disabled", option_r13.disabled)("selected", option_r13.selected);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngForOf", option_r13.body);
} }
function SelectModalComponent_c8y_li_15_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "c8y-li");
    ɵngcc0.ɵɵelementStart(1, "c8y-li-icon");
    ɵngcc0.ɵɵelement(2, "i", 2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "c8y-li-body", 20);
    ɵngcc0.ɵɵelementStart(4, "div", 21);
    ɵngcc0.ɵɵtemplate(5, SelectModalComponent_c8y_li_15_div_5_Template, 2, 4, "div", 22);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(6, SelectModalComponent_c8y_li_15_div_6_Template, 3, 2, "div", 23);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(7, "c8y-li-collapse");
    ɵngcc0.ɵɵelementStart(8, "c8y-list-group");
    ɵngcc0.ɵɵtemplate(9, SelectModalComponent_c8y_li_15_c8y_li_9_Template, 4, 4, "c8y-li", 10);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var item_r7 = ctx.$implicit;
    var ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵpropertyInterpolate("c8yIcon", ctx_r2.icon);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngForOf", item_r7.body);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", item_r7.additionalInformation);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngForOf", item_r7.options);
} }
function SelectModalComponent_div_17_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelementStart(1, "div", 30);
    ɵngcc0.ɵɵtext(2, " Some entries might not be shown. Try narrowing search criteria. ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} }
function SelectModalComponent_button_19_Template(rf, ctx) { if (rf & 1) {
    var _r22 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 31);
    ɵngcc0.ɵɵlistener("click", function SelectModalComponent_button_19_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r22); var ctx_r21 = ɵngcc0.ɵɵnextContext(); return ctx_r21.dismiss(); });
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r4 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(1, 2, ctx_r4.labels.cancel));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(3, 4, ctx_r4.labels.cancel), " ");
} }
function SelectComponent_span_4_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(2, 1, "All"));
} }
function SelectComponent_span_4_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var ctx_r5 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(2, 1, ctx_r5.labelText));
} }
function SelectComponent_span_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 6);
    ɵngcc0.ɵɵtemplate(1, SelectComponent_span_4_ng_container_1_Template, 3, 3, "ng-container", 7);
    ɵngcc0.ɵɵtemplate(2, SelectComponent_span_4_ng_container_2_Template, 3, 3, "ng-container", 7);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.showAllLabel);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r1.showAllLabel);
} }
function SelectComponent_span_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 8);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 1, ctx_r2.placeholder), " ");
} }
function SelectComponent_ul_6_ng_container_2_li_1_i_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "i", 26);
} }
function SelectComponent_ul_6_ng_container_2_li_1_i_6_Template(rf, ctx) { if (rf & 1) {
    var _r12 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "i", 27);
    ɵngcc0.ɵɵlistener("click", function SelectComponent_ul_6_ng_container_2_li_1_i_6_Template_i_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r12); var ctx_r11 = ɵngcc0.ɵɵnextContext(4); return ctx_r11.textFilter = ""; });
    ɵngcc0.ɵɵelementEnd();
} }
function SelectComponent_ul_6_ng_container_2_li_1_Template(rf, ctx) { if (rf & 1) {
    var _r14 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "li", 11);
    ɵngcc0.ɵɵelementStart(1, "div", 21);
    ɵngcc0.ɵɵelementStart(2, "input", 22);
    ɵngcc0.ɵɵlistener("keyup", function SelectComponent_ul_6_ng_container_2_li_1_Template_input_keyup_2_listener($event) { ɵngcc0.ɵɵrestoreView(_r14); var ctx_r13 = ɵngcc0.ɵɵnextContext(3); return ctx_r13.updateFiltered($event.target.value); })("ngModelChange", function SelectComponent_ul_6_ng_container_2_li_1_Template_input_ngModelChange_2_listener($event) { ɵngcc0.ɵɵrestoreView(_r14); var ctx_r15 = ɵngcc0.ɵɵnextContext(3); return ctx_r15.searchFilter = $event; });
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(4, "span", 23);
    ɵngcc0.ɵɵtemplate(5, SelectComponent_ul_6_ng_container_2_li_1_i_5_Template, 1, 0, "i", 24);
    ɵngcc0.ɵɵtemplate(6, SelectComponent_ul_6_ng_container_2_li_1_i_6_Template, 1, 0, "i", 25);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r7 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵpropertyInterpolate1("placeholder", "", ɵngcc0.ɵɵpipeBind1(3, 4, "Filter"), "\u2026");
    ɵngcc0.ɵɵproperty("ngModel", ctx_r7.searchFilter);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r7.textFilter);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r7.textFilter);
} }
function SelectComponent_ul_6_ng_container_2_li_12_Template(rf, ctx) { if (rf & 1) {
    var _r18 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "li", 11);
    ɵngcc0.ɵɵelementStart(1, "label", 28);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementStart(3, "input", 29);
    ɵngcc0.ɵɵlistener("change", function SelectComponent_ul_6_ng_container_2_li_12_Template_input_change_3_listener($event) { var restoredCtx = ɵngcc0.ɵɵrestoreView(_r18); var item_r16 = restoredCtx.$implicit; var ctx_r17 = ɵngcc0.ɵɵnextContext(3); return ctx_r17.onChangeItem($event.target.checked, item_r16); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(4, "span");
    ɵngcc0.ɵɵelementStart(5, "span", 14);
    ɵngcc0.ɵɵtext(6);
    ɵngcc0.ɵɵpipe(7, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var item_r16 = ctx.$implicit;
    var ctx_r8 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(2, 3, item_r16.name));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("checked", ctx_r8.isSelected(item_r16));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(7, 5, item_r16.name), " ");
} }
function SelectComponent_ul_6_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    var _r20 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, SelectComponent_ul_6_ng_container_2_li_1_Template, 7, 6, "li", 10);
    ɵngcc0.ɵɵelementStart(2, "li", 11);
    ɵngcc0.ɵɵelementStart(3, "label", 12);
    ɵngcc0.ɵɵpipe(4, "translate");
    ɵngcc0.ɵɵelementStart(5, "input", 13);
    ɵngcc0.ɵɵlistener("change", function SelectComponent_ul_6_ng_container_2_Template_input_change_5_listener($event) { ɵngcc0.ɵɵrestoreView(_r20); var ctx_r19 = ɵngcc0.ɵɵnextContext(2); return ctx_r19.selectAll($event.target.checked); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(6, "span");
    ɵngcc0.ɵɵelementStart(7, "span", 14);
    ɵngcc0.ɵɵtext(8);
    ɵngcc0.ɵɵpipe(9, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(10, "li", 15);
    ɵngcc0.ɵɵelementStart(11, "ul", 16);
    ɵngcc0.ɵɵtemplate(12, SelectComponent_ul_6_ng_container_2_li_12_Template, 8, 7, "li", 17);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(13, "li", 18);
    ɵngcc0.ɵɵelementStart(14, "li", 19);
    ɵngcc0.ɵɵelementStart(15, "button", 20);
    ɵngcc0.ɵɵlistener("click", function SelectComponent_ul_6_ng_container_2_Template_button_click_15_listener() { ɵngcc0.ɵɵrestoreView(_r20); var ctx_r21 = ɵngcc0.ɵɵnextContext(2); return ctx_r21.applyChanges(); });
    ɵngcc0.ɵɵpipe(16, "translate");
    ɵngcc0.ɵɵtext(17);
    ɵngcc0.ɵɵpipe(18, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var ctx_r6 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r6.items.length > ctx_r6.sizeToShowFilter);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("title", ɵngcc0.ɵɵpipeBind1(4, 9, ctx_r6.getSelectAllToggleStatus().label));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("checked", ctx_r6.getSelectAllToggleStatus().checked)("indeterminate", ctx_r6.getSelectAllToggleStatus().indeterminate);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(9, 11, ctx_r6.getSelectAllToggleStatus().label), " ");
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r6.filteredItems);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(16, 13, ctx_r6.applyLabel));
    ɵngcc0.ɵɵproperty("disabled", ctx_r6.disableApplyOnNoSelection && ctx_r6.isNoItemSelected());
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(18, 15, ctx_r6.applyLabel), " ");
} }
function SelectComponent_ul_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "ul", 9);
    ɵngcc0.ɵɵprojection(1);
    ɵngcc0.ɵɵtemplate(2, SelectComponent_ul_6_ng_container_2_Template, 19, 17, "ng-container", 7);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r3.liChildren.length === 0);
} }
var _c78 = [[["c8y-li"]]];
var _c79 = ["c8y-li"];
var _c80 = ["searchControl"];
var _c81 = ["searchControlModel"];
var _c82 = ["dropdown"];
function TypeaheadComponent_span_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 10);
    ɵngcc0.ɵɵtext(1, " New ");
    ɵngcc0.ɵɵelementEnd();
} }
function TypeaheadComponent_c8y_list_group_13_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "c8y-list-group", 11);
    ɵngcc0.ɵɵprojection(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r4 = ɵngcc0.ɵɵnextContext();
    var _r1 = ɵngcc0.ɵɵreference(4);
    ɵngcc0.ɵɵstyleProp("width", ctx_r4.container === "body" ? _r1.clientWidth + "px" : undefined);
} }
var _c83 = [[["div"], ["c8y-li"], ["c8y-list-item"], ["button"], ["a"]]];
var _c84 = ["div, c8y-li, c8y-list-item, button, a"];
function RangeDisplayComponent_div_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "div", 11);
} }
function RangeDisplayComponent_div_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "div", 12);
} }
function RangeDisplayComponent_div_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "div", 13);
    ɵngcc0.ɵɵpipe(1, "translate");
} if (rf & 2) {
    var ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵattributeInterpolate2("data-label", "", ctx_r2.config.target, " ", ctx_r2.config.unit, "");
    ɵngcc0.ɵɵpropertyInterpolate3("title", "", ɵngcc0.ɵɵpipeBind1(1, 5, "Target"), ": ", ctx_r2.config.target, " ", ctx_r2.config.unit, "");
} }
function RangeDisplayComponent_div_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "div", 14);
    ɵngcc0.ɵɵpipe(1, "c8yDate");
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵpipe(3, "c8yDate");
} if (rf & 2) {
    var ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵattributeInterpolate3("data-label", "", ctx_r3.config.current, " ", ctx_r3.config.unit, " \n ", ɵngcc0.ɵɵpipeBind1(1, 7, ctx_r3.config.time), "");
    ɵngcc0.ɵɵpropertyInterpolate4("title", "", ɵngcc0.ɵɵpipeBind1(2, 9, "Current"), ": ", ctx_r3.config.current, " ", ctx_r3.config.unit, " | ", ɵngcc0.ɵɵpipeBind1(3, 11, ctx_r3.config.time), "");
} }
function RangeDisplayComponent_div_10_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "div", 10);
} if (rf & 2) {
    var index_r6 = ctx.index;
    var ctx_r4 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵattribute("data-label", ctx_r4.rulerCalc(index_r6));
} }
var _c85 = function (a0) { return { "range-display--vertical": a0 }; };
var _c86 = function () { return []; };
function ListDisplaySwitchComponent_option_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "option", 5);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var option_r1 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("ngValue", option_r1);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(option_r1.label);
} }
var _c87 = ["headerRef"];
var _c88 = ["bodyRef"];
var _c89 = ["footerRef"];
function WizardComponent_1_ng_template_0_Template(rf, ctx) { }
function WizardComponent_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, WizardComponent_1_ng_template_0_Template, 0, 0, "ng-template");
} }
function WizardComponent_ng_template_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 6);
    ɵngcc0.ɵɵelement(1, "h1", 7);
    ɵngcc0.ɵɵelementStart(2, "h4");
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵpipe(4, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("c8yIcon", ctx_r2.wizardConfig.headerIcon);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(4, 2, ctx_r2.wizardConfig.headerText));
} }
function WizardComponent_5_ng_template_0_Template(rf, ctx) { }
function WizardComponent_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, WizardComponent_5_ng_template_0_Template, 0, 0, "ng-template");
} }
function WizardComponent_ng_template_7_div_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 9);
    ɵngcc0.ɵɵelementStart(1, "div", 10);
    ɵngcc0.ɵɵelement(2, "i", 7);
    ɵngcc0.ɵɵelementStart(3, "span");
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵpipe(5, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r11 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("c8yIcon", ctx_r11.wizardConfig.bodyHeaderIcon);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(5, 2, ctx_r11.wizardConfig.bodyHeaderText));
} }
function WizardComponent_ng_template_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, WizardComponent_ng_template_7_div_0_Template, 6, 4, "div", 8);
} if (rf & 2) {
    var ctx_r5 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngIf", ctx_r5.wizardConfig.bodyHeaderText);
} }
function WizardComponent_10_ng_template_0_Template(rf, ctx) { }
function WizardComponent_10_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, WizardComponent_10_ng_template_0_Template, 0, 0, "ng-template");
} }
function WizardComponent_ng_template_12_Template(rf, ctx) { if (rf & 1) {
    var _r14 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 11);
    ɵngcc0.ɵɵelementStart(1, "button", 12);
    ɵngcc0.ɵɵlistener("click", function WizardComponent_ng_template_12_Template_button_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r14); var ctx_r13 = ɵngcc0.ɵɵnextContext(); return ctx_r13.close(); });
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementStart(3, "span", 13);
    ɵngcc0.ɵɵtext(4, "Cancel");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(2, 1, "Cancel"));
} }
var _c90 = ["bodyContent"];
function WizardBodyComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 1);
    ɵngcc0.ɵɵelementStart(1, "div", 2);
    ɵngcc0.ɵɵprojection(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} }
var _c91 = ["footerContent"];
function WizardFooterComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 1);
    ɵngcc0.ɵɵprojection(1);
    ɵngcc0.ɵɵelementEnd();
} }
var _c92 = ["headerContent"];
function WizardHeaderComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 1);
    ɵngcc0.ɵɵprojection(1);
    ɵngcc0.ɵɵelementEnd();
} }
function WizardOutletComponent_div_1_div_1_button_1_Template(rf, ctx) { if (rf & 1) {
    var _r8 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 8);
    ɵngcc0.ɵɵlistener("click", function WizardOutletComponent_div_1_div_1_button_1_Template_button_click_0_listener() { var restoredCtx = ɵngcc0.ɵɵrestoreView(_r8); var entry_r6 = restoredCtx.$implicit; var ctx_r7 = ɵngcc0.ɵɵnextContext(3); return ctx_r7.handleEntry(entry_r6); });
    ɵngcc0.ɵɵelementStart(1, "div", 9);
    ɵngcc0.ɵɵelement(2, "i", 10);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "div", 11);
    ɵngcc0.ɵɵpipe(4, "translate");
    ɵngcc0.ɵɵtext(5);
    ɵngcc0.ɵɵpipe(6, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var entry_r6 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("c8yIcon", entry_r6.c8yIcon || "cogs");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(4, 3, entry_r6.name));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(6, 5, entry_r6.name), " ");
} }
function WizardOutletComponent_div_1_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 6);
    ɵngcc0.ɵɵtemplate(1, WizardOutletComponent_div_1_div_1_button_1_Template, 7, 7, "button", 7);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r2 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r2.entries);
} }
function WizardOutletComponent_div_1_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 12);
    ɵngcc0.ɵɵelementStart(1, "p");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(3, 1, "No options available."));
} }
function WizardOutletComponent_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 3);
    ɵngcc0.ɵɵtemplate(1, WizardOutletComponent_div_1_div_1_Template, 2, 1, "div", 4);
    ɵngcc0.ɵɵtemplate(2, WizardOutletComponent_div_1_ng_template_2_Template, 4, 3, "ng-template", null, 5, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var _r3 = ɵngcc0.ɵɵreference(3);
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.entries.length > 0)("ngIfElse", _r3);
} }
function PropertiesListComponent_i_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "i", 5);
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("c8yIcon", ctx_r0.icon);
} }
function PropertiesListComponent_li_6_span_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 12);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var prop_r2 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(prop_r2.value);
} }
function PropertiesListComponent_li_6_a_6_Template(rf, ctx) { if (rf & 1) {
    var _r10 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "a", 13);
    ɵngcc0.ɵɵlistener("click", function PropertiesListComponent_li_6_a_6_Template_a_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r10); var prop_r2 = ɵngcc0.ɵɵnextContext().$implicit; return prop_r2.action($event, prop_r2); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var prop_r2 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(prop_r2.value);
} }
var _c93 = function (a0) { return { pointer: a0 }; };
function PropertiesListComponent_li_6_span_7_span_1_Template(rf, ctx) { if (rf & 1) {
    var _r16 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "span", 15);
    ɵngcc0.ɵɵlistener("click", function PropertiesListComponent_li_6_span_7_span_1_Template_span_click_0_listener($event) { var restoredCtx = ɵngcc0.ɵɵrestoreView(_r16); var propTag_r13 = restoredCtx.$implicit; var prop_r2 = ɵngcc0.ɵɵnextContext(2).$implicit; return prop_r2.action && prop_r2.action($event, propTag_r13); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var propTag_r13 = ctx.$implicit;
    var prop_r2 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(2, _c93, prop_r2.action));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(propTag_r13);
} }
function PropertiesListComponent_li_6_span_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtemplate(1, PropertiesListComponent_li_6_span_7_span_1_Template, 2, 4, "span", 14);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var prop_r2 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", prop_r2.value);
} }
var _c94 = function (a0, a1) { return { "separator-top-bottom": a0, "separator-bottom": a1 }; };
var _c95 = function (a0, a1, a2, a3, a4) { return { "m-l-16": a0, legend: a1, "form-block": a2, "m-b-0": a3, "m-t-4": a4 }; };
function PropertiesListComponent_li_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "li", 6);
    ɵngcc0.ɵɵelementStart(1, "div", 7);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(4, "span", 8);
    ɵngcc0.ɵɵtemplate(5, PropertiesListComponent_li_6_span_5_Template, 2, 1, "span", 9);
    ɵngcc0.ɵɵtemplate(6, PropertiesListComponent_li_6_a_6_Template, 2, 1, "a", 10);
    ɵngcc0.ɵɵtemplate(7, PropertiesListComponent_li_6_span_7_Template, 2, 1, "span", 11);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var prop_r2 = ctx.$implicit;
    var i_r3 = ctx.index;
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction2(9, _c94, i_r3 === 0, i_r3 > 0));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction5(12, _c95, ctx_r1.hasGroup(prop_r2), prop_r2.type === "group", prop_r2.type === "group", prop_r2.type === "group", prop_r2.type === "group"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(3, 7, prop_r2.label), " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngSwitch", prop_r2.type);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "string");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "link");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "array");
} }
function ProviderConfigurationComponent_p_14_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "p", 14);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵpipe(3, "async");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 1, ɵngcc0.ɵɵpipeBind1(3, 3, ctx_r0.layout$).description), " ");
} }
function ProviderConfigurationComponent_c8y_li_26_Template(rf, ctx) { if (rf & 1) {
    var _r6 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "c8y-li", 15);
    ɵngcc0.ɵɵlistener("click", function ProviderConfigurationComponent_c8y_li_26_Template_c8y_li_click_0_listener() { var restoredCtx = ɵngcc0.ɵɵrestoreView(_r6); var provider_r4 = restoredCtx.$implicit; var ctx_r5 = ɵngcc0.ɵɵnextContext(); ctx_r5.changeProvider$.next(provider_r4); return ctx_r5.providerInput$.next(""); });
    ɵngcc0.ɵɵpipe(1, "async");
    ɵngcc0.ɵɵelement(2, "c8y-highlight", 16);
    ɵngcc0.ɵɵpipe(3, "async");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var provider_r4 = ctx.$implicit;
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("active", ɵngcc0.ɵɵpipeBind1(1, 3, ctx_r1.selectedProvider$) === provider_r4);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("text", provider_r4.displayName || "--")("pattern", ɵngcc0.ɵɵpipeBind1(3, 5, ctx_r1.providerInput$));
} }
function ProviderConfigurationComponent_formly_form_32_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "formly-form", 17);
} if (rf & 2) {
    var ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("form", ctx_r2.form)("fields", ctx_r2.fields)("model", ctx_r2.model)("options", ctx_r2.options);
} }
function ProviderConfigurationComponent_div_34_button_1_Template(rf, ctx) { if (rf & 1) {
    var _r10 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 21);
    ɵngcc0.ɵɵlistener("click", function ProviderConfigurationComponent_div_34_button_1_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r10); var ctx_r9 = ɵngcc0.ɵɵnextContext(2); return ctx_r9.deleteProviderConfiguration(); });
    ɵngcc0.ɵɵpipe(1, "async");
    ɵngcc0.ɵɵpipe(2, "async");
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵpipe(4, "async");
    ɵngcc0.ɵɵtext(5);
    ɵngcc0.ɵɵpipe(6, "translate");
    ɵngcc0.ɵɵpipe(7, "async");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r7 = ɵngcc0.ɵɵnextContext(2);
    var tmp_1_0;
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(3, 7, ɵngcc0.ɵɵpipeBind1(4, 9, ctx_r7.layout$).deleteBtnLabel));
    ɵngcc0.ɵɵproperty("disabled", !((tmp_1_0 = ɵngcc0.ɵɵpipeBind1(1, 3, ctx_r7.configuration$)) == null ? null : tmp_1_0.provider) && !((tmp_1_0 = ɵngcc0.ɵɵpipeBind1(2, 5, ctx_r7.configuration$)) == null ? null : tmp_1_0.providerName));
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(6, 11, ɵngcc0.ɵɵpipeBind1(7, 13, ctx_r7.layout$).deleteBtnLabel), " ");
} }
function ProviderConfigurationComponent_div_34_button_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "button", 22);
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵpipe(2, "async");
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵpipe(4, "translate");
    ɵngcc0.ɵɵpipe(5, "async");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r8 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(1, 3, ɵngcc0.ɵɵpipeBind1(2, 5, ctx_r8.layout$).saveBtnLabel));
    ɵngcc0.ɵɵproperty("disabled", ctx_r8.form.invalid || ctx_r8.form.pristine);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(4, 7, ɵngcc0.ɵɵpipeBind1(5, 9, ctx_r8.layout$).saveBtnLabel), " ");
} }
function ProviderConfigurationComponent_div_34_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 18);
    ɵngcc0.ɵɵtemplate(1, ProviderConfigurationComponent_div_34_button_1_Template, 8, 15, "button", 19);
    ɵngcc0.ɵɵpipe(2, "async");
    ɵngcc0.ɵɵtemplate(3, ProviderConfigurationComponent_div_34_button_3_Template, 6, 11, "button", 20);
    ɵngcc0.ɵɵpipe(4, "async");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("c8yIfAllowed", ɵngcc0.ɵɵpipeBind1(2, 2, ctx_r3.layout$).deleteRoles);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("c8yIfAllowed", ɵngcc0.ɵɵpipeBind1(4, 4, ctx_r3.layout$).saveRoles);
} }
'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);
    var i4__namespace = /*#__PURE__*/_interopNamespace(i4);
    var i1__namespace$1 = /*#__PURE__*/_interopNamespace(i1$1);
    var i1__namespace$2 = /*#__PURE__*/_interopNamespace(i1$2);

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    /** @deprecated */
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    /** @deprecated */
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    function __spreadArray(to, from, pack) {
        if (pack || arguments.length === 2)
            for (var i = 0, l = from.length, ar; i < l; i++) {
                if (ar || !(i in from)) {
                    if (!ar)
                        ar = Array.prototype.slice.call(from, 0, i);
                    ar[i] = from[i];
                }
            }
        return to.concat(ar || Array.prototype.slice.call(from));
    }
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, state, kind, f) {
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    }
    function __classPrivateFieldSet(receiver, state, value, kind, f) {
        if (kind === "m")
            throw new TypeError("Private method is not writable");
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    }

    function fromTrigger(router, refresh, factories) {
        return rxjs.merge.apply(void 0, __spreadArray([router.events.pipe(operators.filter(function (evt) { return evt instanceof i1.NavigationEnd; }))], __read(lodashEs.castArray(refresh)))).pipe(operators.startWith(1), operators.switchMap(function () { return fromFactories(factories, router); }));
    }
    function fromTriggerOnce(router, refresh, factories) {
        return rxjs.merge.apply(void 0, __spreadArray([], __read(lodashEs.castArray(refresh)))).pipe(operators.startWith(1), operators.switchMap(function () { return fromFactories(factories, router); }));
    }
    function fromFactories(factories, router, withFirstEmpty) {
        if (withFirstEmpty === void 0) { withFirstEmpty = true; }
        return !Array.isArray(factories) || factories.length < 1
            ? rxjs.of([])
            : rxjs.defer(function () {
                var factoryObservables = resolveInjectedFactories(factories).map(function (f) {
                    return toObservableOfArrays(Array.isArray(f) ? f : f && lodashEs.isFunction(f.get) ? f.get(getActivatedRoute(router)) : [f], withFirstEmpty);
                });
                return rxjs.combineLatest.apply(void 0, __spreadArray([], __read(factoryObservables)));
            }).pipe(operators.map(function (results) { return sortByPriority([].concat.apply([], __spreadArray([], __read(results)))); }));
    }
    function resolveInjectedFactories(factories) {
        return lodashEs.flatten(factories.map(function (f) { return (lodashEs.isFunction(f) ? f() : [f]); }));
    }
    function stateToFactory(componentsState) {
        var components$ = componentsState.pipe(operators.map(function (componentSet) { return __spreadArray([], __read(componentSet)); }));
        return { get: function () { return components$; } };
    }
    function sortByPriority(items) {
        return lodashEs.sortBy(items, 'priority');
    }
    function toObservableOfArrays(factoryResult, withFirstEmpty) {
        var observable;
        if (!factoryResult) {
            return rxjs.of([]);
        }
        else {
            observable = toObservable(factoryResult);
            if (withFirstEmpty) {
                var withEmptyFirst = observable.pipe(operators.startWith([]));
                observable = rxjs.race(observable, withEmptyFirst);
            }
        }
        return observable.pipe(operators.map(function (result) { return (Array.isArray(result) ? result : [result]).filter(function (item) { return !!item; }); }));
    }
    function isPromise(obj) {
        return !!obj && typeof obj.then === 'function';
    }
    /**
     * Converts any value provided to an Observable that emits this value once and then completes.
     * A convienience method to represent all the data as Observables rather than
     * a mixture of Observables and other types.
     *
     * @param value The value the resulting Observable will emit.
     */
    function toObservable(value) {
        if (rxjs.isObservable(value)) {
            return value;
        }
        if (isPromise(value)) {
            return rxjs.from(value);
        }
        return rxjs.of(value);
    }
    /**
     * Helper function to get the activated route in
     * a service (as ActivatedRoute injection only
     * works in components). Works as long as we only use
     * a tree and no child is active at the same time.
     *
     * @param router The current router
     */
    function getActivatedRoute(router) {
        if (router && router.routerState && router.routerState.root) {
            var route = router.routerState.root;
            while (route.firstChild) {
                route = route.firstChild;
            }
            return route;
        }
    }

    /**
     * A abstract state which should be included in each state.
     * @abstract
     */
    var StateService = /** @class */ (function () {
        function StateService() {
        }
        /**
         * Maps to a property and just returns that property.
         * @param mappedProperty The property to map to.
         */
        StateService.prototype.map = function (mappedProperty) {
            return this.state$.pipe(operators.map(mappedProperty), operators.distinctUntilChanged());
        };
        /**
         * Emits a new state.
         */
        StateService.prototype.emitNewState = function () {
            this.state$.next(this.state);
        };
        return StateService;
    }());

    /**
     * A hook to add ActionBarItems using the multi provider extension concept.
     *
     * @example
     * ```typescript
     * providers: [
     *   {
     *     provide: HOOK_ACTION_BAR,
     *     useValue: [{ template: SomeComponent, priority: 10, placement: 'left' } as ActionBarItem],
     *     multi: true
     *   }
     * ]
     * ```
     *
     */
    var HOOK_ACTION_BAR = new i0.InjectionToken('ActionBarFactory');
    /**
     * A service which defines action-bar items via the multi provider concept.
     *
     * @example
     * ```typescript
     * // preferred way, multi provider concept:
     * providers: [
     *   {
     *     provide: HOOK_ACTION_BAR,
     *     useValue: [{ template: SomeComponent, priority: 10, placement: 'left' } as ActionBarItem],
     *     multi: true
     *   }
     * ]
     *
     * // use services:
     * this.actionBarService.add({ template: SomeComponent, priority: 10, placement: 'left' });
     * ```
     */
    var ActionBarService = /** @class */ (function (_super) {
        __extends(ActionBarService, _super);
        /**
         * @ignore
         */
        function ActionBarService(injector, router) {
            var _this = _super.call(this) || this;
            _this.injector = injector;
            _this.factories = [];
            _this.refreshTrigger = new rxjs.Subject();
            _this.state$ = new rxjs.BehaviorSubject(new Set());
            _this.items$ = fromTrigger(router, _this.refreshTrigger, [
                function () { return _this.injector.get(HOOK_ACTION_BAR, []); },
                function () { return _this.factories; },
                stateToFactory(_this.state$)
            ]).pipe(operators.map(function (items) { return sortByPriority(items); }), operators.shareReplay(1));
            return _this;
        }
        Object.defineProperty(ActionBarService.prototype, "state", {
            /**
             * Returns the current state.
             * @readonly
             * @returns The current set of actions.
             */
            get: function () {
                return this.state$.value;
            },
            enumerable: false,
            configurable: true
        });
        /**
         * Refreshes the current store.
         */
        ActionBarService.prototype.refresh = function () {
            this.refreshTrigger.next();
        };
        /**
         * Adds a new item to the action bar in the header and emits a state change.
         * @param item The item to add.
         */
        ActionBarService.prototype.add = function (item) {
            this.state.add(item);
            this.emitNewState();
        };
        /**
         * Removes an action bar item from the header and emits a state change.
         * @param item The item to remove.
         */
        ActionBarService.prototype.remove = function (item) {
            this.state.delete(item);
            this.emitNewState();
        };
ActionBarService.ɵfac = function ActionBarService_Factory(t) { return new (t || ActionBarService)(ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(ɵngcc1.Router)); };
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ActionBarService, [{
        type: i0.Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return [{ type: ɵngcc0.Injector }, { type: ɵngcc1.Router }]; }, null); })();
        return ActionBarService;
    }(StateService));
    ActionBarService.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function ActionBarService_Factory() { return new ActionBarService(i0__namespace.ɵɵinject(i0__namespace.INJECTOR), i0__namespace.ɵɵinject(i1__namespace.Router)); }, token: ActionBarService, providedIn: "root" });
    ActionBarService.ctorParameters = function () { return [
        { type: i0.Injector },
        { type: i1.Router }
    ]; };

    /**
     * A <c8y-action-bar-item> can be added with content projection.
     * It allows to show items in three positions (left, right
     * or more).
     *
     * @example
     * ```html
     * <c8y-action-bar-item [placement]="'right'">
     *   <button class="btn btn-link" (click)="addRandom()"><i c8yIcon="plus-circle"></i> Add random</button>
     * </c8y-action-bar-item>
     * ```
     */
    var ActionBarItemComponent = /** @class */ (function () {
        /**
         * @ignore
         */
        function ActionBarItemComponent(actionBarService) {
            this.actionBarService = actionBarService;
            /**
             * Where the item should be shown. Use "more" to place
             * it in a dropdown on the right.
             */
            this.placement = 'left';
            /**
             * Priority for sorting the list. Higher priority means
             * an earlier position in the list.
             */
            this.priority = 0;
            /**
             * Adds additional classes to the item.
             */
            this.itemClass = '';
        }
        /**
         * @ignore
         */
        ActionBarItemComponent.prototype.ngAfterViewInit = function () {
            var _this = this;
            this.viewInitTimeout = setTimeout(function () { return _this.actionBarService.add(_this); });
        };
        /**
         * @ignore
         */
        ActionBarItemComponent.prototype.ngOnDestroy = function () {
            clearTimeout(this.viewInitTimeout);
            this.actionBarService.remove(this);
        };
ActionBarItemComponent.ɵfac = function ActionBarItemComponent_Factory(t) { return new (t || ActionBarItemComponent)(ɵngcc0.ɵɵdirectiveInject(ActionBarService)); };
ActionBarItemComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ActionBarItemComponent, selectors: [["c8y-action-bar-item"]], viewQuery: function ActionBarItemComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c0, 5);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.template = _t.first);
    } }, inputs: { placement: "placement", priority: "priority", itemClass: "itemClass" }, ngContentSelectors: _c1, decls: 2, vars: 0, consts: [["template", ""]], template: function ActionBarItemComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵtemplate(0, ActionBarItemComponent_ng_template_0_Template, 2, 3, "ng-template", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);
    } }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ActionBarItemComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-action-bar-item',
                template: "<ng-template #template>\n  <li class=\"{{itemClass}}\">\n    <ng-content></ng-content>\n  </li>\n</ng-template>"
            }]
    }], function () { return [{ type: ActionBarService }]; }, { placement: [{
            type: i0.Input
        }], priority: [{
            type: i0.Input
        }], itemClass: [{
            type: i0.Input
        }], template: [{
            type: i0.ViewChild,
            args: ['template', { static: false }]
        }] }); })();
        return ActionBarItemComponent;
    }());
    ActionBarItemComponent.ctorParameters = function () { return [
        { type: ActionBarService }
    ]; };
    ActionBarItemComponent.propDecorators = {
        placement: [{ type: i0.Input }],
        priority: [{ type: i0.Input }],
        itemClass: [{ type: i0.Input }],
        template: [{ type: i0.ViewChild, args: ['template', { static: false },] }]
    };

    /*
     * -----------------------------WARNING---------------------------------
     * This file has an *exact* copy in packages/ngx-components/core/common.
     * Any changes to this file must be reflected there, too.
     */
    var ApplicationOptions = /** @class */ (function () {
        function ApplicationOptions() {
        }
        return ApplicationOptions;
    }());

    var HOOK_OPTIONS = new i0.InjectionToken('App options');
    /**
     * A service that allows to set or get application options
     * which configure the default behavior of the UI.
     */
    var OptionsService = /** @class */ (function (_super) {
        __extends(OptionsService, _super);
        function OptionsService(options, systemOptionsService, tenantOptionService) {
            var _this = _super.call(this) || this;
            _this.systemOptionsService = systemOptionsService;
            _this.tenantOptionService = tenantOptionService;
            _this.setupOptions(options);
            return _this;
        }
        /**
         * Returns an application option used to configure the UI.
         * @param optionKey The application options key.
         * @param defaultValue A value to return if non is set.
         */
        OptionsService.prototype.get = function (optionKey, defaultValue) {
            var value = this[optionKey];
            if (typeof value === 'undefined') {
                value = this[lodashEs.camelCase(optionKey)];
            }
            return typeof value !== 'undefined' ? value : defaultValue;
        };
        /**
         * Sets an application option.
         * @param key The key to set.
         * @param value The value to set.
         */
        OptionsService.prototype.set = function (key, value) {
            this[lodashEs.camelCase(key)] = value;
        };
        /**
         * Gets support url from tenant options.
         * If response returns '404 not found' it gets the support url from application options.
         * If the support link within application options is not provided the UI will use the system options.
         * Is the support link explicitly set to false it will be hidden.
         *
         * @returns Returns support url or false.
         */
        OptionsService.prototype.getSupportUrl = function () {
            return __awaiter(this, void 0, void 0, function () {
                var url, _a, _b;
                return __generator(this, function (_c) {
                    switch (_c.label) {
                        case 0: return [4 /*yield*/, this.getTenantOption('configuration', 'system.support.url')];
                        case 1:
                            url = _c.sent();
                            if (lodashEs.isUndefined(url)) {
                                url = this.supportUrl;
                            }
                            _a = this;
                            if (!lodashEs.isUndefined(url)) return [3 /*break*/, 3];
                            return [4 /*yield*/, this.getSystemOption('support', 'url')];
                        case 2:
                            _b = (_c.sent()) || false;
                            return [3 /*break*/, 4];
                        case 3:
                            _b = url;
                            _c.label = 4;
                        case 4:
                            _a.supportUrl = _b;
                            return [2 /*return*/, this.supportUrl];
                    }
                });
            });
        };
        /**
         * Returns if the tenant allows to show the activate-support user menu entry.
         * Note: Only if system-level support-user/enabled is false we can activate it at tenant level.
         */
        OptionsService.prototype.getActivateSupportUser = function () {
            return __awaiter(this, void 0, void 0, function () {
                var option;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.getSystemOption('support-user', 'enabled', true)];
                        case 1:
                            option = _a.sent();
                            return [2 /*return*/, !option];
                    }
                });
            });
        };
        /**
         * Gets a value from the system service and parses it.
         *
         * @param category The category for this option.
         * @param key The key for that option.
         * @param defaultValue The default if the option was not found.
         */
        OptionsService.prototype.getSystemOption = function (category, key, defaultValue) {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    return [2 /*return*/, this.getOptionFromService(category, key, this.systemOptionsService, defaultValue)];
                });
            });
        };
        /**
         * Gets a value from the tenant service and parses it.
         *
         * @param category The category for this option.
         * @param key The key for that option.
         * @param defaultValue The default if the option was not found.
         */
        OptionsService.prototype.getTenantOption = function (category, key, defaultValue) {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    return [2 /*return*/, this.getOptionFromService(category, key, this.tenantOptionService, defaultValue)];
                });
            });
        };
        OptionsService.prototype.setupOptions = function (options) {
            var _this = this;
            if (options) {
                if (!Array.isArray(options)) {
                    options = [options];
                }
                options.forEach(function (optionMap) {
                    if (optionMap) {
                        Object.keys(optionMap).forEach(function (key) {
                            _this[lodashEs.camelCase(key)] = optionMap[key];
                        });
                    }
                });
            }
        };
        OptionsService.prototype.getOptionFromService = function (category, key, service, defaultValue) {
            return __awaiter(this, void 0, void 0, function () {
                var data, ex_1;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            _a.trys.push([0, 2, , 3]);
                            return [4 /*yield*/, service.detail({ category: category, key: key })];
                        case 1:
                            data = (_a.sent()).data;
                            return [2 /*return*/, this.parseOptionRawValue(data.value, defaultValue)];
                        case 2:
                            ex_1 = _a.sent();
                            return [2 /*return*/, defaultValue];
                        case 3: return [2 /*return*/];
                    }
                });
            });
        };
        OptionsService.prototype.parseOptionRawValue = function (rawValue, defaultValue) {
            var value;
            try {
                value = JSON.parse(rawValue);
            }
            catch (e) {
                value = lodashEs.isUndefined(rawValue) ? defaultValue : rawValue;
            }
            return value;
        };
OptionsService.ɵfac = function OptionsService_Factory(t) { return new (t || OptionsService)(ɵngcc0.ɵɵinject(HOOK_OPTIONS, 8), ɵngcc0.ɵɵinject(ɵngcc2.SystemOptionsService), ɵngcc0.ɵɵinject(ɵngcc2.TenantOptionsService)); };
OptionsService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: OptionsService, factory: function (t) { return OptionsService.ɵfac(t); } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(OptionsService, [{
        type: i0.Injectable
    }], function () { return [{ type: undefined, decorators: [{
                type: i0.Optional
            }, {
                type: i0.Inject,
                args: [HOOK_OPTIONS]
            }] }, { type: ɵngcc2.SystemOptionsService }, { type: ɵngcc2.TenantOptionsService }]; }, null); })();
        return OptionsService;
    }(ApplicationOptions));
    OptionsService.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: i0.Optional }, { type: i0.Inject, args: [HOOK_OPTIONS,] }] },
        { type: i4.SystemOptionsService },
        { type: i4.TenantOptionsService }
    ]; };

    /**
     * Decorator to throttle functions call.
     * @param wait throttle time.
     * @param options set triggers, eg on trailing edge or falling edge,
     * see lodash documentation for details
     */
    function throttle(wait, options) {
        return function (target, fnName, descriptor) {
            var fn = descriptor.value;
            descriptor.value = function () {
                var args = [];
                for (var _i = 0; _i < arguments.length; _i++) {
                    args[_i] = arguments[_i];
                }
                var throttledFnName = "_" + fnName + "Throttled";
                if (!this[throttledFnName]) {
                    this[throttledFnName] = lodashEs.throttle(fn, wait, options);
                }
                return this[throttledFnName].apply(this, args);
            };
        };
    }

    var AppStateService = /** @class */ (function (_super) {
        __extends(AppStateService, _super);
        function AppStateService(applicationService, apiService, options, fetchClient, tenantLoginOptionsService) {
            var _this = _super.call(this) || this;
            _this.applicationService = applicationService;
            _this.apiService = apiService;
            _this.options = options;
            _this.fetchClient = fetchClient;
            _this.tenantLoginOptionsService = tenantLoginOptionsService;
            _this.state$ = new rxjs.BehaviorSubject({
                app: {
                    name: _this.options.name,
                    contextPath: _this.getCurrentContextPath() || _this.options.contextPath
                },
                supportUrl: _this.options.supportUrl,
                lang: _this.options.get('defaultLanguage', 'en'),
                langs: _this.getLangs(),
                langsDetail: _this.options.languages,
                loginOptions: _this.options.loginOptions,
                activateSupportUserAvailable: undefined,
                versions: {
                    backend: undefined,
                    ui: _this.options.versions || { ngx: undefined }
                },
                hidePowered: _this.options.hidePowered,
                isLoading: false,
                showRightDrawer: _this.options.rightDrawer,
                loginExtraLink: _this.options.get('login_extra_link'),
                newsletter: _this.options.newsletter
            });
            _this.currentSupportUserName = new rxjs.BehaviorSubject(null);
            _this.currentUser = new rxjs.BehaviorSubject(null);
            _this.currentTenant = new rxjs.BehaviorSubject(null);
            _this.apiService.calls
                .pipe(operators.filter(function (_a) {
                var url = _a.url;
                return !/notification\/realtime/.test(url);
            }), operators.map(function (_a) {
                var phase = _a.phase;
                return (phase === 'start' ? 1 : -1);
            }), operators.scan(function (count, item) { return count + item; }, 0), operators.map(function (count) { return count > 0; }), operators.distinctUntilChanged())
                .subscribe(function (isLoading) { return (_this.state.isLoading = isLoading); });
            _this.assignApplicationKeyToDefaultHeaders();
            return _this;
        }
        AppStateService.prototype.assignApplicationKeyToDefaultHeaders = function () {
            if (!i0.isDevMode()) {
                this.fetchClient.defaultHeaders = Object.assign(Object.assign({}, (this.fetchClient.defaultHeaders || {})), { 'X-Cumulocity-Application-Key': this.options.key });
            }
        };
        Object.defineProperty(AppStateService.prototype, "state", {
            /**
             * Returns the current state.
             */
            get: function () {
                return this.state$.value;
            },
            enumerable: false,
            configurable: true
        });
        AppStateService.prototype.getLangs = function () {
            var languages = this.options.languages;
            return languages ? lodashEs.keys(languages).filter(function (k) { return languages[k]; }) : [];
        };
        Object.defineProperty(AppStateService.prototype, "uiVersion", {
            /**
             * Returns the correct UI version. In hybrid mode for angular and ngx.
             */
            get: function () {
                var version = this.state.versions.ui;
                return version.ngx || version.ng1;
            },
            enumerable: false,
            configurable: true
        });
        /**
         * Loads the app manifest. If no access -> throw an error to verify app access.
         */
        AppStateService.prototype.loadManifest = function () {
            return __awaiter(this, void 0, void 0, function () {
                var application, ex_1;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            _a.trys.push([0, 2, , 3]);
                            return [4 /*yield*/, this.applicationService.detail(this.state.app.contextPath + "/manifest")];
                        case 1:
                            application = (_a.sent()).data.application;
                            this.state.app.manifest = application;
                            this.loadDefaultOptions();
                            return [3 /*break*/, 3];
                        case 2:
                            ex_1 = _a.sent();
                            throw ex_1;
                        case 3: return [2 /*return*/];
                    }
                });
            });
        };
        /**
         * When this function called, it refreshes the values of loginOptions stored within ui state object.
         * Function is throttled to execute the refresh once in a time specified by params of @throttled decorator,
         * it should be called on leading edge of the timeout.
         */
        AppStateService.prototype.refreshLoginOptions = function () {
            return __awaiter(this, void 0, void 0, function () {
                var loginOptions;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.tenantLoginOptionsService.listForCurrentTenant()];
                        case 1:
                            loginOptions = (_a.sent()).data;
                            this.state$.next(Object.assign(Object.assign({}, this.state), { loginOptions: loginOptions }));
                            return [2 /*return*/];
                    }
                });
            });
        };
        /**
         * Checks current users application list and matches it against given application name.
         * Returns true if application is in the list.
         * @param name application name
         */
        AppStateService.prototype.isApplicationAvailable = function (name) {
            return __awaiter(this, void 0, void 0, function () {
                var data;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.applicationService.listByUser(undefined, { pageSize: 100 })];
                        case 1:
                            data = (_a.sent()).data;
                            return [2 /*return*/, data.some(function (app) { return app.name === name; })];
                    }
                });
            });
        };
        /**
         * Sets current user (including support user).
         * @param userInfo Info about current user and support user to be set.
         */
        AppStateService.prototype.setUser = function (userInfo) {
            this.currentSupportUserName.next(userInfo.supportUserName || null);
            this.currentUser.next(userInfo.user);
        };
        AppStateService.prototype.getCurrentContextPath = function () {
            var match = window.location.pathname.match(/\/apps\/(public\/){0,1}(.+?)(\/|\?|#|$)/);
            return match && match[2];
        };
        AppStateService.prototype.loadDefaultOptions = function () {
            return __awaiter(this, void 0, void 0, function () {
                var _a, _b, _c;
                return __generator(this, function (_d) {
                    switch (_d.label) {
                        case 0:
                            _a = this.state;
                            return [4 /*yield*/, this.options.getSupportUrl()];
                        case 1:
                            _a.supportUrl = _d.sent();
                            _b = this.state;
                            return [4 /*yield*/, this.options.getActivateSupportUser()];
                        case 2:
                            _b.activateSupportUserAvailable = _d.sent();
                            _c = this.state.versions;
                            return [4 /*yield*/, this.options.getSystemOption('system', 'version')];
                        case 3:
                            _c.backend = _d.sent();
                            try {
                                this.showIncompatibleVersionsError();
                            }
                            catch (ex) {
                                // ignore this
                            }
                            this.emitNewState();
                            return [2 /*return*/];
                    }
                });
            });
        };
        AppStateService.prototype.showIncompatibleVersionsError = function () {
            var uiVersion = this.state.versions.ui.ngx;
            var backendVersion = this.state.versions.backend;
            var uiVersionArray = uiVersion
                .replace(/[^\d.]/g, '')
                .split('.')
                .map(Number);
            var beVersionArray = backendVersion
                .replace(/[^\d.]/g, '')
                .split('.')
                .map(Number);
            var multiplier = Math.pow(10, Math.ceil(Math.log10(Math.max.apply(Math, __spreadArray(__spreadArray([], __read(uiVersionArray)), __read(beVersionArray))) + 1)));
            var sumReducer = function (acc, cur) { return acc + cur; };
            var calculateVersionMapper = function (curr, idx) { return curr * (multiplier / Math.pow(10, idx)); };
            var uiVersionNumber = uiVersionArray.map(calculateVersionMapper).reduce(sumReducer);
            var beVersionNumber = beVersionArray.map(calculateVersionMapper).reduce(sumReducer);
            var showError = uiVersionNumber > beVersionNumber;
            if (showError) {
                var errorContent = "You are running version " + uiVersion + " of the UI and version " + backendVersion + " of backend!";
                console.log('%c ' + errorContent, 'font-weight: bold; font-size: 30px; color: red;');
            }
        };
AppStateService.ɵfac = function AppStateService_Factory(t) { return new (t || AppStateService)(ɵngcc0.ɵɵinject(ɵngcc3.ApplicationService), ɵngcc0.ɵɵinject(ɵngcc2.ApiService), ɵngcc0.ɵɵinject(OptionsService), ɵngcc0.ɵɵinject(ɵngcc3.FetchClient), ɵngcc0.ɵɵinject(ɵngcc3.TenantLoginOptionsService)); };
AppStateService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: AppStateService, factory: function (t) { return AppStateService.ɵfac(t); } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AppStateService, [{
        type: i0.Injectable
    }], function () { return [{ type: ɵngcc3.ApplicationService }, { type: ɵngcc2.ApiService }, { type: OptionsService }, { type: ɵngcc3.FetchClient }, { type: ɵngcc3.TenantLoginOptionsService }]; }, null); })();
        return AppStateService;
    }(StateService));
    AppStateService.ctorParameters = function () { return [
        { type: client.ApplicationService },
        { type: i4.ApiService },
        { type: OptionsService },
        { type: client.FetchClient },
        { type: client.TenantLoginOptionsService }
    ]; };
    __decorate([
        throttle(600, { trailing: false })
    ], AppStateService.prototype, "refreshLoginOptions", null);

    var LANGUAGES = new i0.InjectionToken('Languages');

    var LOCALE_PATH = new i0.InjectionToken('Locale path');

    var HOOK_PATTERN_MESSAGES = new i0.InjectionToken('Pattern Messages');

    /**
     * A service to translate messages by using regexp patterns.
     */
    var PatternMessagesService = /** @class */ (function () {
        function PatternMessagesService(patterns) {
            var _this = this;
            this.patterns = {};
            this.pipes = {
                absoluteDate: function (date) { return common.formatDate(date, 'medium', _this.translateService.currentLang); },
                translate: function (key) { return _this.translateService.instant(key); }
            };
            lodashEs.each(patterns, function (pattern) {
                Object.assign(_this.patterns, pattern);
            });
        }
        PatternMessagesService.prototype.translate = function (message) {
            var translation = this.translateWithPatterns(message);
            return (translation !== message) ? translation : '';
        };
        PatternMessagesService.prototype.translateWithPatterns = function (message, patterns) {
            var _this = this;
            if (patterns === void 0) { patterns = this.patterns; }
            var translatedMessage = message;
            lodashEs.each(patterns, function (patternCfg, pattern) {
                var globalRegExp = new RegExp(pattern, 'g');
                var globalMatch;
                if (!globalRegExp.test(translatedMessage)) {
                    return;
                }
                globalRegExp.test(''); // reset the regexp
                globalMatch = globalRegExp.exec(translatedMessage);
                var _loop_1 = function () {
                    var _a = __read(globalMatch, 1), localMatch = _a[0];
                    var placeholderValues = lodashEs.mapValues(patternCfg.placeholders, function (placeholder) {
                        var expr = placeholder.capture || placeholder;
                        var replacement = localMatch.replace(new RegExp(pattern, 'g'), expr);
                        if (placeholder.translate) {
                            replacement = _this.translateWithPatterns(replacement, placeholder.translate);
                        }
                        return replacement;
                    });
                    translatedMessage = translatedMessage.replace(localMatch, _this.translateWithParams(patternCfg, placeholderValues));
                    globalMatch = globalRegExp.exec(translatedMessage);
                };
                while (globalMatch !== null) {
                    _loop_1();
                }
            });
            return translatedMessage;
        };
        PatternMessagesService.prototype.translateWithParams = function (patternCfg, params) {
            if (params === void 0) { params = {}; }
            var _a = this.translateService, defaultLang = _a.defaultLang, currentLang = _a.currentLang, compiler = _a.compiler;
            var translations = this.translateService.store.translations[currentLang];
            var defaultTranslations = this.translateService.store.translations[defaultLang];
            var originalKey = patternCfg.gettext;
            var originalValue = originalKey;
            if (translations) {
                if (translations[originalKey]) {
                    originalValue = translations[originalKey];
                }
                else if (defaultTranslations) {
                    if (defaultTranslations[originalKey]) {
                        originalValue = defaultTranslations[originalKey];
                    }
                }
            }
            var key = originalKey;
            var value = originalValue;
            var interpolateParams = Object.assign(Object.assign({}, params), { noPatternMessages: true });
            var match;
            var pipeRegex = RegExp('{{\\s*([^\\s]+)\\s*\\|\\s*([^\\s]+)\\s*}}', 'g');
            // tslint:disable-next-line:no-conditional-assignment
            while ((match = pipeRegex.exec(originalKey)) !== null) {
                var _b = __read(match, 3), placeholder = _b[0], paramName = _b[1], pipeName = _b[2];
                if (this.pipes[pipeName]) {
                    key = key.replace(placeholder, "{{" + paramName + "}}");
                    value = value.replace(placeholder, "{{" + paramName + "}}");
                    interpolateParams[paramName] = this.pipes[pipeName](params[paramName]);
                }
            }
            if (translations) {
                translations[key] = compiler.compile(value, currentLang);
            }
            return this.translateService.instant(key, interpolateParams);
        };
PatternMessagesService.ɵfac = function PatternMessagesService_Factory(t) { return new (t || PatternMessagesService)(ɵngcc0.ɵɵinject(HOOK_PATTERN_MESSAGES)); };
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PatternMessagesService, [{
        type: i0.Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return [{ type: undefined, decorators: [{
                type: i0.Inject,
                args: [HOOK_PATTERN_MESSAGES]
            }] }]; }, null); })();
        return PatternMessagesService;
    }());
    PatternMessagesService.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function PatternMessagesService_Factory() { return new PatternMessagesService(i0__namespace.ɵɵinject(HOOK_PATTERN_MESSAGES)); }, token: PatternMessagesService, providedIn: "root" });
    PatternMessagesService.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: i0.Inject, args: [HOOK_PATTERN_MESSAGES,] }] }
    ]; };

    var MissingTranslationCustomHandler = /** @class */ (function () {
        function MissingTranslationCustomHandler(parser, patternMessagesService) {
            this.parser = parser;
            this.patternMessagesService = patternMessagesService;
            this.cache = {};
        }
        MissingTranslationCustomHandler.prototype.handle = function (params) {
            var messageKey = params.key, interpolateParams = params.interpolateParams, translateService = params.translateService;
            this.translateService = translateService;
            var translation = this.getFromCache(messageKey, interpolateParams);
            if (!translation) {
                var patternMessageTranslation = this.getPatternMessageTranslation(messageKey, interpolateParams);
                if (patternMessageTranslation) {
                    translation = patternMessageTranslation;
                }
                else {
                    translation = this.parser.interpolate(messageKey, interpolateParams);
                }
                this.addToCache(messageKey, interpolateParams, translation);
            }
            return translation;
        };
        MissingTranslationCustomHandler.prototype.getFromCache = function (messageKey, interpolateParams) {
            var currentLang = this.translateService.currentLang;
            var currentCache = this.cache[currentLang] || {};
            var cacheKey = this.getCacheKey(messageKey, interpolateParams);
            return currentCache[cacheKey];
        };
        MissingTranslationCustomHandler.prototype.addToCache = function (messageKey, interpolateParams, translation) {
            var currentLang = this.translateService.currentLang;
            var currentCache = this.cache[currentLang] = this.cache[currentLang] || {};
            var cacheKey = this.getCacheKey(messageKey, interpolateParams);
            currentCache[cacheKey] = translation;
        };
        MissingTranslationCustomHandler.prototype.getCacheKey = function (messageKey, interpolateParams) {
            return interpolateParams ? messageKey + " " + JSON.stringify(interpolateParams) : messageKey;
        };
        MissingTranslationCustomHandler.prototype.getPatternMessageTranslation = function (messageKey, interpolateParams) {
            var shouldTryPatternMessages = !interpolateParams || !(interpolateParams.noPatternMessages);
            if (shouldTryPatternMessages) {
                if (!this.patternMessagesService.translateService) {
                    this.patternMessagesService.translateService = this.translateService;
                }
                return this.patternMessagesService.translate(messageKey);
            }
            return undefined;
        };
MissingTranslationCustomHandler.ɵfac = function MissingTranslationCustomHandler_Factory(t) { return new (t || MissingTranslationCustomHandler)(ɵngcc0.ɵɵinject(ɵngcc4.TranslateParser), ɵngcc0.ɵɵinject(PatternMessagesService)); };
MissingTranslationCustomHandler.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: MissingTranslationCustomHandler, factory: function (t) { return MissingTranslationCustomHandler.ɵfac(t); } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MissingTranslationCustomHandler, [{
        type: i0.Injectable
    }], function () { return [{ type: ɵngcc4.TranslateParser }, { type: PatternMessagesService }]; }, null); })();
        return MissingTranslationCustomHandler;
    }());
    MissingTranslationCustomHandler.ctorParameters = function () { return [
        { type: i1$1.TranslateParser },
        { type: PatternMessagesService }
    ]; };

    // Just for translation annotation
    // Note: Own file because of conflicts if put in barrel directly.
    var _ = function (str) { return str; };
    function gettext(str) {
        return str;
    }

    /* tslint:disable:max-line-length */
    var bulkOperationAuditLogTextPlaceholders = {
        updatesList: {
            capture: '$1',
            translate: {
                "status='(.+?)'": {
                    gettext: gettext('status: "{{ status | translate }}"'),
                    placeholders: {
                        status: '$1'
                    }
                },
                "generalStatus='(.+?)'": {
                    gettext: gettext('general status: "{{ generalStatus | translate }}"'),
                    placeholders: {
                        generalStatus: '$1'
                    }
                },
                "progress='(.+?)'": {
                    gettext: gettext('progress: "{{ progress }}"'),
                    placeholders: {
                        progress: '$1'
                    }
                },
                'note=(.+?)': {
                    gettext: gettext('note: "{{ note }}"'),
                    placeholders: {
                        note: '$1'
                    }
                }
            }
        }
    };
    var MESSAGES = {
        '^Access is denied$': {
            gettext: gettext('Access denied.')
        },
        '^Alarm created$': {
            gettext: gettext('Alarm created')
        },
        '^Alarm updated$': {
            gettext: gettext('Alarm updated')
        },
        '^API is not available with the new domain$': {
            gettext: gettext('Could not activate custom domain. DNS setup is incorrect.')
        },
        '^Application with given name already exist$': {
            gettext: gettext('Application with given name already exists.')
        },
        '^Application with id (.+?) is already assigned to the tenant (.+?)$': {
            gettext: gettext('This application is already assigned to tenant "{{tenant}}".'),
            placeholders: {
                tenant: '$2'
            }
        },
        '^Apply software changes: (.+?)\\.?$': {
            gettext: gettext('Apply software changes: {{ softwareChanges }}'),
            placeholders: {
                softwareChanges: {
                    capture: '$1',
                    translate: {
                        'install "(.+?)" \\(version: (.+?)\\)': {
                            gettext: gettext('install "{{ softwareName }}" (version: {{ softwareVersion }})'),
                            placeholders: {
                                softwareName: '$1',
                                softwareVersion: '$2'
                            }
                        },
                        'install "([^"]+)"(?! \\(version: .+?\\))': {
                            gettext: gettext('install "{{ softwareName }}"'),
                            placeholders: {
                                softwareName: '$1'
                            }
                        },
                        'delete "(.+?)" \\(version: (.+?)\\)': {
                            gettext: gettext('delete "{{ softwareName }}" (version: {{ softwareVersion }})'),
                            placeholders: {
                                softwareName: '$1',
                                softwareVersion: '$2'
                            }
                        },
                        'delete "([^"]+)"(?! \\(version: .+?\\))': {
                            gettext: gettext('delete "{{ softwareName }}"'),
                            placeholders: {
                                softwareName: '$1'
                            }
                        }
                    }
                }
            }
        },
        '^Assign device profile (.+?) to device (.+?)$': {
            gettext: gettext('Assign device profile {{profileName}} to device {{deviceName}}'),
            placeholders: {
                profileName: '$1',
                deviceName: '$2'
            }
        },
        '^(.+)pplication for tenant (.+) with properties \\( (.+?) \\) already exists$': {
            gettext: gettext('Application for tenant "{{tenant}}" with the following values ({{valuesList}}) already exists.'),
            placeholders: {
                tenant: '$2',
                valuesList: '$3'
            }
        },
        '^Authentication failed! : User account is locked$': {
            gettext: gettext('Authentication failed due to: user account is locked.')
        },
        '^Availability monitoring record$': {
            gettext: gettext('Availability monitoring record')
        },
        '^Can not activate a certificate which is either expired or not yet valid$': {
            gettext: gettext('Cannot activate a certificate which is either expired or not yet valid.')
        },
        '^Cannot add certificate - certificate with (.+?) fingerprint already exists. : Certificate with (.+?) fingerprint already exists.': {
            gettext: gettext('Could not add certificate. Certificate with {{fingerprint}} fingerprint already exists.'),
            placeholders: {
                fingerprint: '$1'
            }
        },
        '^Cannot change password. : Provided token does not exist.$': {
            gettext: gettext('Cannot change password: provided token is invalid.')
        },
        '^Cannot deploy module (.*)$': {
            gettext: gettext('Cannot deploy module due to error: "{{ errorMessage | translate }}".'),
            placeholders: {
                errorMessage: '$1'
            }
        },
        "^Cannot deploy module (.+?)! : Compilation failed in module '(.+?)' in expression '(.+?)' : Incorrect syntax near '(.+?)' at line (\\d+) column (\\d+) \\[([\\S\\s]+?)\\]$": {
            gettext: gettext('Could not deploy module "{{moduleName}}". Compilation failed in expression "{{expression}}": incorrect syntax near "{{incorrectExpression}}" at line {{line}} column {{column}}.'),
            placeholders: {
                moduleName: '$1',
                expression: '$3',
                incorrectExpression: '$4',
                line: '$5',
                column: '$6'
            }
        },
        "^Cannot deploy module (.+?)! : Compilation failed in module '(.+?)' in expression '(.+?)' : Incorrect syntax near '(.+?)' at line (\\d+) column (\\d+) near reserved keyword '(.+?)' \\[([\\S\\s]+?)\\]$": {
            gettext: gettext('Could not deploy module "{{moduleName}}". Compilation failed in expression "{{expression}}": incorrect syntax near "{{incorrectExpression}}" at line {{line}} column {{column}} near reserved keyword "{{keyword}}".'),
            placeholders: {
                moduleName: '$1',
                expression: '$3',
                incorrectExpression: '$4',
                line: '$5',
                column: '$6',
                keyword: '$7'
            }
        },
        "^Cannot deploy module (.+?)! : Compilation failed in module '(.+?)' in expression '(.+?)' : Incorrect syntax near '(.+?)' at line (\\d+) column (\\d+), please check the where clause \\[([\\S\\s]+?)\\]$": {
            gettext: gettext('Could not deploy module "{{moduleName}}". Compilation failed in expression "{{expression}}": incorrect syntax near "{{incorrectExpression}}" at line {{line}} column {{column}}, check "where" clause.'),
            placeholders: {
                moduleName: '$1',
                expression: '$3',
                incorrectExpression: '$4',
                line: '$5',
                column: '$6'
            }
        },
        "^Cannot deploy module (.+?)! : Deployment failed in module '(.+?)' in expression '(.+?)' : Exception compiling script '(.+?)' of dialect '(.+?)': missing (.+?) before statement \\((.+?)\\) \\[([\\S\\s]+?)\\]$": {
            gettext: gettext('Could not deploy module "{{moduleName}}". Compilation failed in expression "{{expression}}": exception compiling script "{{scriptName}}" of dialect "{{scriptDialect}}": missing "{{missingSyntax}}" before statement "{{affectedStatement}}".'),
            placeholders: {
                moduleName: '$1',
                expression: '$3',
                scriptName: '$4',
                scriptDialect: '$5',
                missingSyntax: '$6',
                affectedStatement: '$7'
            }
        },
        "^Cannot execute bulk operation on empty group. Group with id='(\\d+?)' doesn't have child assets.$": {
            gettext: gettext('Could not execute bulk operation on an empty group. Group with ID "{{groupId}}" has no child assets.'),
            placeholders: {
                groupId: '$1'
            }
        },
        "^Cannot execute bulk operation on empty group. DynamicGroup with id='(\\d+?)' doesn't have child assets$": {
            gettext: gettext('Could not execute bulk operation on an empty group. Smart group with ID "{{groupId}}" has no child assets.'),
            placeholders: {
                groupId: '$1'
            }
        },
        '^Cannot parse X509 certificate. : Could not parse certificate: (.+?)$': {
            gettext: gettext('Could not parse X.509 certificate: {{ failureReason | translate }}.'),
            placeholders: {
                failureReason: '$1'
            }
        },
        '^Cannot reschedule bulk operation. All its operations are successful$': {
            gettext: gettext('Cannot reschedule bulk operation. All its operations are already successful.')
        },
        '^Cannot reset user password : Cannot find user with such email.$': {
            gettext: gettext('Cannot reset password for user with such email: email not found.')
        },
        '^Cannot update/delete application binary via this endpoint$': {
            gettext: gettext('Cannot update/delete application binary via this endpoint')
        },
        "^Can't delete user because it is used by another managed object$": {
            gettext: gettext('Cannot delete device with associated device owner because this owner is still assigned to other device(s). Try to remove only the device.')
        },
        '^Cep module created$': {
            gettext: gettext('CEP module created')
        },
        '^Cep module updated$': {
            gettext: gettext('CEP module updated')
        },
        '^Cep module deleted$': {
            gettext: gettext('CEP module deleted')
        },
        '^Cep module "(.+?)" created$': {
            gettext: gettext('CEP module "{{name}}" created'),
            placeholders: {
                name: '$1'
            }
        },
        '^Cep module "(.+?)" updated$': {
            gettext: gettext('CEP module "{{name}}" updated'),
            placeholders: {
                name: '$1'
            }
        },
        '^Cep module "(.+?)" deleted$': {
            gettext: gettext('CEP module "{{name}}" deleted'),
            placeholders: {
                name: '$1'
            }
        },
        '^Command state is invalid: (.+)$': {
            gettext: gettext('Command state is invalid: {{violations}}'),
            placeholders: {
                violations: {
                    capture: '$1',
                    translate: {
                        '(\\w+?) - may not be null': {
                            gettext: gettext('"{{field}}" must not be null'),
                            placeholders: {
                                field: '$1'
                            }
                        }
                    }
                }
            }
        },
        '^Could not connect to endpoint (.+)\\. Could not verify `(.+)` host key with fingerprint `(.+)` for `(.+)` on port (.+)\\. If you expected that key, please remove the previous one from configuration to allow for connection\\.$': {
            gettext: gettext('Could not connect to endpoint "{{endpointName}}". Could not verify {{keyType}} host key with fingerprint {{fingerprint}} for host {{host}} on port {{port}}. If you expected this key, please remove the previous one from configuration to allow for connection.'),
            placeholders: {
                endpointName: '$1',
                keyType: '$2',
                fingerprint: '$3',
                host: '$4',
                port: '$5'
            }
        },
        '^Could not login to ssh server on endpoint "(.+)"\\. Provided credential for user "(.+)" is incorrect\\.$': {
            gettext: gettext('Could not access SSH server on endpoint "{{endpointName}}". Provided credentials for user "{{userName}}" are incorrect.'),
            placeholders: {
                endpointName: '$1',
                userName: '$2'
            }
        },
        '^Could not save object remoteAccessUpdate: (.+)$': {
            gettext: '{{errorMessages}}',
            placeholders: {
                errorMessages: {
                    capture: '$1',
                    translate: {
                        'Could not recognize host-key format': {
                            gettext: gettext('Could not recognize "Host key" format')
                        },
                        'Could not recognize key-pair format': {
                            gettext: gettext('Could not recognize the format of "Public key" or "Private key"')
                        }
                    }
                }
            }
        },
        '^Could not update user. : Error persisting user (.+?)!$': {
            gettext: gettext('Could not update user "{{username}}".'),
            placeholders: {
                username: '$1'
            }
        },
        'ˆCreate bulk operation$': {
            gettext: gettext('Create bulk operation')
        },
        '^Create bulk operation: (.+)$': {
            gettext: gettext('Create bulk operation: {{updatesList}}'),
            placeholders: bulkOperationAuditLogTextPlaceholders
        },
        '^Creation ramp must be greater than (\\d+?)$': {
            gettext: gettext('Bulk operation delay must be greater than {{minSeconds}} seconds.'),
            placeholders: {
                minSeconds: '$1'
            }
        },
        '^Created container$': {
            gettext: gettext('Container created.')
        },
        '^Created pod: (.+)$': {
            gettext: gettext('Pod "{{imageName}}" created.'),
            placeholders: {
                imageName: '$1'
            }
        },
        '^CSV file contained empty dataset$': {
            gettext: gettext('No entries found in uploaded CSV file.')
        },
        '^Cycle detected for route (.+?)!$': {
            gettext: gettext('Cycle detected for route {{route}}.'),
            placeholders: {
                route: '$1'
            }
        },
        '^Data broker processing is currently overloaded and may stop forwarding your data\\. Please contact support\\.$': {
            gettext: gettext('Data broker processing is currently overloaded and may stop forwarding your data. Please contact support.')
        },
        '^Data broker processing is not able to connect do destination tenant, thus data forwarding is not working\\. Please contact support\\.$': {
            gettext: gettext('Data broker processing is not able to connect to destination tenant, thus data forwarding is not working. Please contact support.')
        },
        '^Delete bulk operation$': {
            gettext: gettext('Delete bulk operation')
        },
        '^Delete bulk operation: (.+)$': {
            gettext: gettext('Delete bulk operation: {{updatesList}}'),
            placeholders: bulkOperationAuditLogTextPlaceholders
        },
        "^Device id '(.+?)' contains '(.+?)' character which is not permitted.$": {
            gettext: gettext('ID "{{deviceId}}" contains invalid character: "{{invalidCharacter}}".'),
            placeholders: {
                deviceId: '$1',
                invalidCharacter: '$2'
            }
        },
        "^Device name: '(.+?)', alarm text: '(.+?)'$": {
            gettext: gettext('Device name: "{{deviceName}}", alarm text: "{{alarmText | translate}}"'),
            placeholders: {
                deviceName: '$1',
                alarmText: '$2'
            }
        },
        '^Display name$': {
            gettext: gettext('Login alias')
        },
        '^Domain name in uploaded certificate differs from the one in use$': {
            gettext: gettext('Domain name in uploaded certificate differs from the one in use. Please deactivate the custom domain before uploading new certificate.')
        },
        '^Domain name is already in use by another tenant!$': {
            gettext: gettext('Domain name is already used by another tenant.')
        },
        '^Duplicated connector for instanceUrl (.+?)!$': {
            gettext: gettext('Target URL {{targetUrl}} already used by another connector.'),
            placeholders: {
                targetUrl: '$1'
            }
        },
        '^Duplicated connector for name (.+?)!$': {
            gettext: gettext('Connector name "{{name}}" already used by another connector.'),
            placeholders: {
                name: '$1'
            }
        },
        '^Entry is outside of the target dir: (.+)$': {
            gettext: gettext('File entry outside of the target directory: "{{path}}".'),
            placeholders: {
                path: '$1'
            }
        },
        '^Error during password validation. : Password must have at least (\\d+?) characters and no more than (\\d+?) and must contain only Latin1 characters.$': {
            gettext: gettext('Password is invalid. It must have at least {{minCharactersCount}} and no more than {{maxCharactersCount}} characters.'),
            placeholders: {
                minCharactersCount: '$1',
                maxCharactersCount: '$2'
            }
        },
        '^Error during password validation. : Your password has been used already. Choose another.$': {
            gettext: gettext('This password has already been used earlier. Use a different one.')
        },
        "^Error in statement (.+?):(.+?)! : Incorrect syntax near '(.+?)' near reserved keyword '(.+?)' \\[([\\S\\s]+?)\\]$": {
            gettext: gettext('Error in statement {{moduleName}}:{{statementNumber}}. Incorrect syntax near expression "{{expression}}" near reserved keyword "{{keyword}}".'),
            placeholders: {
                moduleName: '$1',
                statementNumber: '$2',
                expression: '$3',
                keyword: '$4'
            }
        },
        '^External id not found; external id = ID \\[type=(.+?), value=(.+?)\\]$': {
            gettext: gettext('External ID not found for type "{{type}}" and value "{{value}}".'),
            placeholders: {
                type: '$1',
                value: '$2'
            }
        },
        '^Error occurred when trying to find an Application for id ID (.+) : Could not find application by ID (\\d+)$': {
            gettext: gettext('Could not find application by ID {{applicationId}}.'),
            placeholders: {
                applicationId: '$2'
            }
        },
        '^Http status code: 404\n{error="options/Not Found",message="Unable to find option by given key: sigfox-agent/provider.token",info="https://www.cumulocity.com/guides/reference-guide/#error_reporting",details="null"}': {
            gettext: gettext('Unable to find option by given key: sigfox-agent/provider.token')
        },
        '^Failed to delete application.  : Cannot remove application assigned to other tenants.$': {
            gettext: gettext('Could not delete application assigned to other tenants.')
        },
        '^Failed to extract certificate from PKCS12$': {
            gettext: gettext('Failed to extract certificate from PKCS12.')
        },
        '^Failed to update domain at the platform$': {
            gettext: gettext('Failed to update domain at the platform.')
        },
        "^Finding device data from database failed : No managedObject for id '(.+?)'!$": {
            gettext: gettext('Could not find managed object with ID "{{deviceId}}".'),
            placeholders: {
                deviceId: '$1'
            }
        },
        '^Following mandatory fields should be included: (.+?)$': {
            gettext: gettext('Following mandatory fields should be included: {{fields}}'),
            placeholders: {
                fields: '$1'
            }
        },
        '^Global Role updated$': {
            gettext: gettext('Global role updated')
        },
        '^Global Role (.+?) updated$': {
            gettext: gettext('Global role "{{name}}" updated'),
            placeholders: {
                name: '$1'
            }
        },
        '^Global Role (.+?) updated: (.+)$': {
            gettext: gettext('Global role "{{name}}" updated: {{updatesList}}'),
            placeholders: {
                name: '$1',
                updatesList: {
                    capture: '$2',
                    translate: {
                        'applications \\[([^\\]]+?)\\] added': {
                            gettext: gettext('applications {{list}} added'),
                            placeholders: {
                                list: '$1'
                            }
                        },
                        'applications \\[([^\\]]+?)\\] removed': {
                            gettext: gettext('applications {{list}} removed'),
                            placeholders: {
                                list: '$1'
                            }
                        },
                        'roles \\[([^\\]]+?)\\] added': {
                            gettext: gettext('roles {{list}} added'),
                            placeholders: {
                                list: '$1'
                            }
                        },
                        'roles \\[([^\\]]+?)\\] removed': {
                            gettext: gettext('roles {{list}} removed'),
                            placeholders: {
                                list: '$1'
                            }
                        }
                    }
                }
            }
        },
        '^Global Roles$': {
            gettext: gettext('Global roles')
        },
        '^Operation updated: (.+)$': {
            gettext: gettext('Operation updated: {{updatesList}}'),
            placeholders: {
                updatesList: {
                    capture: '$1',
                    translate: {
                        "status='(.+?)'": {
                            gettext: gettext('status: "{{ status | translate }}"'),
                            placeholders: {
                                status: '$1'
                            }
                        },
                        "description='(.+?)'": {
                            gettext: gettext('description: "{{ description | translate }}"'),
                            placeholders: {
                                description: '$1'
                            }
                        },
                        "device name='(.+?)'": {
                            gettext: gettext('device name: "{{ deviceName }}"'),
                            placeholders: {
                                deviceName: '$1'
                            }
                        },
                        "failure reason='(.+?)'": {
                            gettext: gettext('failure reason: "{{ failureReason | translate }}"'),
                            placeholders: {
                                failureReason: '$1'
                            }
                        }
                    }
                }
            }
        },
        '^ID \\[type=(.+?), value=(.+?)\\] was already bound to different Global ID.$': {
            gettext: gettext('External ID "{{value}}" of the type "{{type}}" already exists.'),
            placeholders: {
                type: '$1',
                value: '$2'
            }
        },
        '^Invalid credentials! : Bad credentials$': {
            gettext: gettext('Invalid credentials.')
        },
        '^Invalid credentials! : No phone number provided$': {
            gettext: gettext('Log into the management tenant first and enter your phone number.')
        },
        '^Inventory Role removed$': {
            gettext: gettext('Inventory role removed')
        },
        '^Inventory Role (.+?) removed': {
            gettext: gettext('Inventory role "{{name}}" deleted.'),
            placeholders: {
                name: '$1'
            }
        },
        '^Inventory Role updated$': {
            gettext: gettext('Inventory role updated')
        },
        '^Inventory Role (.+?) updated': {
            gettext: gettext('Inventory role "{{name}}" updated.'),
            placeholders: {
                name: '$1'
            }
        },
        '^I/O error: Connection refused; nested exception is Connection refused : Connection refused': {
            gettext: gettext('Connection refused')
        },
        '^I/O error: Read timed out; nested exception is Read timed out : Read timed out': {
            gettext: gettext('Read timed out')
        },
        '^Log file requested$': {
            gettext: gettext('Log file requested.')
        },
        '^Managed object deleted$': {
            gettext: gettext('Managed object deleted')
        },
        '^Managed object "(.+?)" deleted$': {
            gettext: gettext('Managed object "{{name}}" deleted'),
            placeholders: {
                name: '$1'
            }
        },
        '^Maximum file size exceeded$': {
            gettext: gettext('Maximum file size exceeded.')
        },
        "^Message with ID (.+?) doesn't exist in smart rest template (.+?)$": {
            gettext: gettext('Message with ID "{{messageId}}" doesn\'t exist in SmartREST template with ID "{{templateId}}"'),
            placeholders: {
                messageId: '$1',
                templateId: '$2'
            }
        },
        '^NewDeviceRequest for id = (.+?) already exists.$': {
            gettext: gettext('Device registration request with ID {{id}} already exists.'),
            placeholders: {
                id: '$1'
            }
        },
        '^No communication with device since (.+?)$': {
            gettext: gettext('No communication with device since {{timestamp | absoluteDate}}.'),
            placeholders: {
                timestamp: '$1'
            }
        },
        '^No data received from device within required interval.$': {
            gettext: gettext('No data received from device within required interval.')
        },
        '^No LoRa provider settings are found. Please configure the connectivity settings.$': {
            gettext: gettext('No LoRa provider settings are found. Please configure the connectivity settings.')
        },
        '^Not within any context!$': {
            gettext: gettext('A problem occurred with microservice subscription.')
        },
        '^Maximum age cannot be bigger than 10 years.$': {
            gettext: gettext('Maximum age cannot be bigger than 10 years.')
        },
        '^Microservice application name incorrect. Please use only lower-case letters, digits and dashes. Maximum length is (\\d+) characters.$': {
            gettext: gettext('Microservice application name is incorrect: only lower case letters, digits and dashes allowed. Maximum length: {{maxLength}}.'),
            placeholders: {
                maxLength: '$1'
            }
        },
        '^Microservice not available.*$': {
            gettext: gettext('Microservice is not available.')
        },
        '^Operation created$': {
            gettext: gettext('Operation created.')
        },
        '^Operation updated$': {
            gettext: gettext('Operation updated.')
        },
        "^Operation created: status='(.+?)'.": {
            gettext: gettext('Operation created: status: "{{ status | translate }}".'),
            placeholders: {
                status: '$1'
            }
        },
        '^Option created$': {
            gettext: gettext('Option created.')
        },
        '^Option "(.+?)" created$': {
            gettext: gettext('Option "{{option}}" created.'),
            placeholders: {
                option: '$1'
            }
        },
        '^Option deleted$': {
            gettext: gettext('Option deleted.')
        },
        '^Option "(.+?)" deleted$': {
            gettext: gettext('Option "{{option}}" deleted.'),
            placeholders: {
                option: '$1'
            }
        },
        '^Owner field error. : Cannot introduce cyclic dependency.': {
            gettext: gettext('Could not introduce cyclic ownership dependency.')
        },
        '^Password change is temporary blocked.$': {
            gettext: gettext('Password change is temporarily blocked.')
        },
        '^Password cipher does not match': {
            gettext: gettext('Password cipher does not match.')
        },
        '^Platform application cannot be added to, nor removed from any tenant.$': {
            gettext: gettext('Platform application cannot be added to, nor removed from any tenant.')
        },
        '^Private key must be provided in KEY_PAIR credentials$': {
            gettext: gettext('Private key must be provided when "Public/private keys" option is selected.')
        },
        '^Private key cipher does not match': {
            gettext: gettext('Private key cipher does not match')
        },
        '^Protocol "(.+?)" does not support "(.+?)" credentials type$': {
            gettext: gettext('Protocol "{{protocol}}" does not support "{{credentialsType}}" credentials type.'),
            placeholders: {
                protocol: '$1',
                credentialsType: '$2'
            }
        },
        '^pulling image "(.+)"$': {
            gettext: gettext('Pulling image: "{{imageName}}".'),
            placeholders: {
                imageName: '$1'
            }
        },
        '^Real-time event processing is currently overloaded and may stop processing your events\\. Please contact support\\.$': {
            gettext: gettext('Real-time event processing is currently overloaded and may stop processing your events. Please contact support.')
        },
        '^Resource ID \\[type=com_cumulocity_model_idtype_GId, value=(.+?)\\] for this request not found.$': {
            gettext: gettext('Could not find the resource with ID "{{id}}".'),
            placeholders: {
                id: '$1'
            }
        },
        '^Retrieve configuration snapshot from device (.+?)': {
            gettext: gettext('Retrieve configuration snapshot from device {{deviceName}}'),
            placeholders: {
                deviceName: '$1'
            }
        },
        '^Retrieve (.+?) configuration snapshot from device (.+?)': {
            gettext: gettext('Retrieve {{configurationType}} configuration snapshot from device {{deviceName}}'),
            placeholders: {
                configurationType: '$1',
                deviceName: '$2'
            }
        },
        '^Scaled up replica set (.+) to (\\d+)$': {
            gettext: gettext('Replica set "{{replicaSetName}}" scaled up to "{{scaleNumber}}".'),
            placeholders: {
                replicaSetName: '$1',
                scaleNumber: '$2'
            }
        },
        '^Send configuration snapshot (.+?) of configuration type (.+?) to device (.+?)': {
            gettext: gettext('Send configuration snapshot {{snapshotName}} of configuration type {{configurationType}} to device {{deviceName}}'),
            placeholders: {
                snapshotName: '$1',
                configurationType: '$2',
                deviceName: '$3'
            }
        },
        '^Send configuration snapshot (.+?) to device (.+?)': {
            gettext: gettext('Send configuration snapshot {{snapshotName}} to device {{deviceName}}'),
            placeholders: {
                snapshotName: '$1',
                deviceName: '$2'
            }
        },
        '^Simulator state is invalid: (.+)$': {
            gettext: gettext('Simulator state is invalid: {{violations}}'),
            placeholders: {
                violations: {
                    capture: '$1',
                    translate: {
                        '(\\w+?) - may not be null': {
                            gettext: gettext('"{{field}}" should not be null'),
                            placeholders: {
                                field: '$1'
                            }
                        },
                        '(\\w+?) - must be less than or equal to (\\d+)': {
                            gettext: gettext('"{{field}}" must be less than or equal to {{maxValue}}'),
                            placeholders: {
                                field: '$1',
                                maxValue: '$2'
                            }
                        },
                        '(\\w+?) - should not contain null values': {
                            gettext: gettext('"{{field}}" should not contain null values'),
                            placeholders: {
                                field: '$1'
                            }
                        }
                    }
                }
            }
        },
        "^Smart rest template (.+?) doesn't exist$": {
            gettext: gettext('SmartREST template with id "{{templateId}}" doesn\'t exist.'),
            placeholders: {
                templateId: '$1'
            }
        },
        '^Smart rule created$': {
            gettext: gettext('Smart rule created.')
        },
        '^Smart rule updated$': {
            gettext: gettext('Smart rule updated.')
        },
        '^Smart rule enabled$': {
            gettext: gettext('Smart rule activated.')
        },
        '^Smart rule disabled$': {
            gettext: gettext('Smart rule deactivated.')
        },
        '^Smart rule deleted$': {
            gettext: gettext('Smart rule deleted.')
        },
        '^Smart rule "(.+?)" created$': {
            gettext: gettext('Smart rule "{{name}}" created.'),
            placeholders: {
                name: '$1'
            }
        },
        '^Smart rule "(.+?)" updated$': {
            gettext: gettext('Smart rule "{{name}}" updated.'),
            placeholders: {
                name: '$1'
            }
        },
        '^Smart rule "(.+?)" enabled$': {
            gettext: gettext('Smart rule "{{name}}" activated.'),
            placeholders: {
                name: '$1'
            }
        },
        '^Smart rule "(.+?)" disabled$': {
            gettext: gettext('Smart rule "{{name}}" deactivated.'),
            placeholders: {
                name: '$1'
            }
        },
        '^Smart rule "(.+?)" deleted$': {
            gettext: gettext('Smart rule "{{name}}" deleted.'),
            placeholders: {
                name: '$1'
            }
        },
        '^Started container$': {
            gettext: gettext('Container started.')
        },
        '^Successfully assigned (.+) to (.+)$': {
            gettext: gettext('"{{imageName}}" assigned to "{{address}}".'),
            placeholders: {
                imageName: '$1',
                address: '$2'
            }
        },
        '^Successfully pulled image "(.+)"$': {
            gettext: gettext('Image "{{imageName}}" pulled.'),
            placeholders: {
                imageName: '$1'
            }
        },
        '^Tenant creation failed. : Tenant with given id already exists.$': {
            gettext: gettext('Could not create a tenant. Tenant with given domain/URL already exists.')
        },
        '^Tenant id cannot be a reserved sql keyword "(.+?)".$': {
            gettext: gettext('Could not use a reserved SQL keyword "{{tenantId}}" as a domain name.'),
            placeholders: {
                tenantId: '$1'
            }
        },
        '^Tenant "(.+?)" activated$': {
            gettext: gettext('Tenant "{{tenant}}" activated.'),
            placeholders: {
                tenant: '$1'
            }
        },
        '^Tenant (.+?) has sub-tenants, please remove them first!$': {
            gettext: gettext('Could not remove tenant "{{tenant}}". Remove its subtenants first.'),
            placeholders: {
                tenant: '$1'
            }
        },
        '^Tenant activated$': {
            gettext: gettext('Tenant activated.')
        },
        '^Tenant "(.+?)" created$': {
            gettext: gettext('Tenant "{{tenant}}" created.'),
            placeholders: {
                tenant: '$1'
            }
        },
        '^Tenant created$': {
            gettext: gettext('Tenant created')
        },
        '^Tenant "(.+?)" deleted$': {
            gettext: gettext('Tenant "{{tenant}}" deleted.'),
            placeholders: {
                tenant: '$1'
            }
        },
        '^Tenant deleted$': {
            gettext: gettext('Tenant deleted')
        },
        '^Tenant "(.+?)" suspended$': {
            gettext: gettext('Tenant "{{tenant}}" suspended.'),
            placeholders: {
                tenant: '$1'
            }
        },
        '^Tenant suspended$': {
            gettext: gettext('Tenant suspended')
        },
        '^Tenant "(.+?)" updated: (.+?)$': {
            gettext: gettext('Tenant "{{tenant}}" updated: {{properties}}.'),
            placeholders: {
                tenant: '$1',
                properties: '$2'
            }
        },
        '^Tenant updated$': {
            gettext: gettext('Tenant updated')
        },
        '^Too Many Requests$': {
            gettext: gettext('Too many requests. Try again later.')
        },
        "^User alias equals username '(.+)'$": {
            gettext: gettext('Username and login alias must be different.')
        },
        '^User created$': {
            gettext: gettext('User created')
        },
        '^User (.+?) created$': {
            gettext: gettext('User "{{name}}" created'),
            placeholders: {
                name: '$1'
            }
        },
        '^User deleted$': {
            gettext: gettext('User deleted')
        },
        '^User (.+?) deleted$': {
            gettext: gettext('User "{{name}}" deleted'),
            placeholders: {
                name: '$1'
            }
        },
        '^User updated$': {
            gettext: gettext('User updated')
        },
        '^User (.+?) updated: (.+)$': {
            gettext: gettext('User "{{name}}" updated: {{updatesList}}'),
            placeholders: {
                name: '$1',
                updatesList: {
                    capture: '$2',
                    translate: {
                        "delegatedBy='(.+?)'": {
                            gettext: gettext('delegated by: "{{delegate}}"'),
                            placeholders: {
                                delegate: '$1'
                            }
                        },
                        "owner='(.+?)'": {
                            gettext: gettext('owner: "{{owner}}"'),
                            placeholders: {
                                owner: '$1'
                            }
                        },
                        'inventory assignment \\[(.+?)\\] added': {
                            gettext: gettext('inventory assignment [{{inventoryAssignment}}] added'),
                            placeholders: {
                                inventoryAssignment: '$1'
                            }
                        },
                        'inventory assignment \\[(.+?)\\] removed': {
                            gettext: gettext('inventory assignment [{{inventoryAssignment}}] removed'),
                            placeholders: {
                                inventoryAssignment: '$1'
                            }
                        },
                        'applications \\[(.+?)\\] added$': {
                            gettext: gettext('applications [{{applicationsList}}] added'),
                            placeholders: {
                                applicationsList: '$1'
                            }
                        },
                        'applications \\[(.+?)\\] removed$': {
                            gettext: gettext('applications [{{applicationsList}}] removed'),
                            placeholders: {
                                applicationsList: '$1'
                            }
                        },
                        'global roles \\[(.+?)\\] added$': {
                            gettext: gettext('global roles [{{globalRolesList}}] added'),
                            placeholders: {
                                globalRolesList: '$1'
                            }
                        },
                        'global roles \\[(.+?)\\] removed$': {
                            gettext: gettext('global roles [{{globalRolesList}}] removed'),
                            placeholders: {
                                globalRolesList: '$1'
                            }
                        }
                    }
                }
            }
        },
        "^User with username '(.+?)' already exists! : Duplicated: (.+?)$": {
            gettext: gettext('User "{{username}}" already exists.'),
            placeholders: {
                username: '$1'
            }
        },
        "^User with username or alias '(.+)' already exists! : Duplicated: (.+)$": {
            gettext: gettext('User with username or login alias "{{usernameOrAlias}}" already exists.'),
            placeholders: {
                usernameOrAlias: '$1'
            }
        },
        "^User with email '(.+?)' already exists! : Duplicated: (.+?)$": {
            gettext: gettext('User with email "{{email}}" already exists.'),
            placeholders: {
                email: '$1'
            }
        },
        '^unable to find option with given key (.+?) : Could not find entity Option by ID (.+?)!$': {
            gettext: gettext('Unable to get tenant option: "{{option}}".'),
            placeholders: {
                option: '$2'
            }
        },
        '^unable to find option with given key (.+?) : There is no system property for key (.+?)$': {
            gettext: gettext('Unable to get system option: "{{option}}".'),
            placeholders: {
                option: '$2'
            }
        },
        '^Write failed with error code 16733 and error message \'trying to index text where term list is too big, max is 4mb _id: "(.+?)"\'$': {
            gettext: gettext('The uploaded image cannot be bigger than 4 MB. Please upload a smaller one.')
        },
        '^Write failed with error code 17280 and error message \'WiredTigerIndex::insert: key too large to index, failing (.+?) { : "(.+?)" }\'$': {
            gettext: gettext('The chosen name is too long. Please try a shorter one.')
        },
        '^You have reached devices limit. No more devices can be registered.$': {
            gettext: gettext('You reached devices limit. No more devices can be registered.')
        },
        '^(.+) succeeded for volume "(.+)"': {
            gettext: gettext('Operation "{{operation}}" succeeded for volume "{{volume}}".'),
            placeholders: {
                operation: '$1',
                volume: '$2'
            }
        },
        "^Exception on tenant (.+) in statement '(.+)': Invocation exception when invoking method '(.+)' of class '(.+)' passing parameters \\[(.+)\\] for statement '(.+)': (.+) : (.+)$": {
            gettext: gettext('Exception on tenant {{tenantId}} in statement "{{moduleName}}": Invocation exception when invoking method "{{methodName}}" of class "{{classPath}}" passing parameters [{{parameters}}] for statement "{{statement}}": {{exceptionType}} : {{exceptionMessage}}.'),
            placeholders: {
                tenantId: '$1',
                moduleName: '$2',
                methodName: '$3',
                classPath: '$4',
                parameters: '$5',
                statement: '$6',
                exceptionType: '$7',
                exceptionMessage: '$8'
            }
        },
        '^No nodes are available that match all of the predicates: (.+).$': {
            gettext: gettext('No nodes are available that match all of the predicates: [{{predicates}}].'),
            placeholders: {
                predicates: '$1'
            }
        },
        '^Readiness probe failed: (.+) (.+): (.+): request canceled while waiting for connection \\(Client.Timeout exceeded while awaiting headers\\)$': {
            gettext: gettext('Readiness probe failed: {{requestMethod}} {{uri}}: {{protocol}}: request canceled while waiting for connection (Client.Timeout exceeded while awaiting headers).'),
            placeholders: {
                requestMethod: '$1',
                uri: '$2',
                protocol: '$3'
            }
        },
        '^Liveness probe failed: (.+) (.+): (.+): request canceled while waiting for connection \\(Client.Timeout exceeded while awaiting headers\\)$': {
            gettext: gettext('Liveness probe failed: {{requestMethod}} {{uri}}: {{protocol}}: request canceled while waiting for connection (Client.Timeout exceeded while awaiting headers).'),
            placeholders: {
                requestMethod: '$1',
                uri: '$2',
                protocol: '$3'
            }
        },
        '^Error syncing pod$': {
            gettext: gettext('Pod synchronization error.')
        },
        '^Failed create pod sandbox.$': {
            gettext: gettext('Pod sandbox creation failed.')
        },
        '^Exception on tenant (.+) in statement \'(.+)\': Http status code: (\\d+) \\{error="alarm/Unprocessable Entity",message="(.+)",info="https://www.cumulocity.com/guides/reference-guide/#error_reporting",details="null"\\}$': {
            gettext: gettext('Exception on tenant {{tenantId}} in statement "{{statement}}": HTTP status code: {{httpStatusCode}} : {{message | translate}}'),
            placeholders: {
                tenantId: '$1',
                statement: '$2',
                httpStatusCode: '$3',
                message: '$4'
            }
        },
        "^User '(.+)' is managed by a remote identity management service defined by an administrator, direct update is forbidden$": {
            gettext: gettext('User "{{userName}}" is managed by a remote identity management service defined by an administrator, direct update is forbidden.'),
            placeholders: {
                userName: '$1'
            }
        },
        '^Added new child device to "(.+)" \\(ID: (.+)\\).$': {
            gettext: gettext('Added new child device to "{{parentDeviceName}}" (ID: {{parentDeviceId}}).'),
            placeholders: {
                parentDeviceName: '$1',
                parentDeviceId: '$2'
            }
        },
        '^Updated child device of "(.+)" \\(ID: (.+)\\).$': {
            gettext: gettext('Updated child device of "{{parentDeviceName}}" (ID: {{parentDeviceId}}).'),
            placeholders: {
                parentDeviceName: '$1',
                parentDeviceId: '$2'
            }
        },
        '^Added child device "(.+)" \\(ID: (.+)\\).$': {
            gettext: gettext('Added child device "{{name}}" (ID: {{id}}).'),
            placeholders: {
                name: '$1',
                id: '$2'
            }
        },
        '^Removed child device "(.+)" \\(ID: (.+)\\).$': {
            gettext: gettext('Removed child device "{{name}}" (ID: {{id}}).'),
            placeholders: {
                name: '$1',
                id: '$2'
            }
        },
        '^Change value of "(.+)" to (.+) (.+).$': {
            gettext: gettext('Change value of "{{name}}" to {{value}}{{unit}}.'),
            placeholders: {
                name: '$1',
                value: '$2',
                unit: '$3'
            }
        },
        '^Change value of "(.+)" to (.+).$': {
            gettext: gettext('Change value of "{{name}}" to {{value}}.'),
            placeholders: {
                name: '$1',
                value: '$2'
            }
        },
        '^Change status of "(.+)" to "(.+)".$': {
            gettext: gettext('Change status of "{{name}}" to "{{label}}".'),
            placeholders: {
                name: '$1',
                label: '$2'
            }
        },
        '^Send message "(.+)".$': {
            gettext: gettext('Send message "{{str}}".'),
            placeholders: {
                str: '$1'
            }
        },
        '^Close relay (.+).$': {
            gettext: gettext('Close relay {{number}}.'),
            placeholders: {
                number: '$1'
            }
        },
        '^Open relay (.+).$': {
            gettext: gettext('Open relay {{number}}.'),
            placeholders: {
                number: '$1'
            }
        },
        '^Change trace status to (.+).$': {
            gettext: gettext('Change trace status to {{state | translate}}.'),
            placeholders: {
                state: '$1'
            }
        },
        '^Change relay status to (.+).$': {
            gettext: gettext('Change relay status to {{status | translate}}.'),
            placeholders: {
                status: '$1'
            }
        },
        '^Closing relay (.+).$': {
            gettext: gettext('Closing relay {{number}}.'),
            placeholders: {
                number: '$1'
            }
        },
        '^Opening relay (.+).$': {
            gettext: gettext('Opening relay {{number}}.'),
            placeholders: {
                number: '$1'
            }
        },
        '^Update bulk operation$': {
            gettext: gettext('Update bulk operation')
        },
        '^Update bulk operation: (.+)$': {
            gettext: gettext('Update bulk operation: {{updatesList}}'),
            placeholders: bulkOperationAuditLogTextPlaceholders
        },
        '^Update firmware to: "?(.+?)"? \\(version: (.+)\\)\\.?$': {
            gettext: gettext('Update firmware to: "{{ name }}" (version: {{ version }})'),
            placeholders: {
                name: '$1',
                version: '$2'
            }
        },
        '^Update firmware to: "?(.+?)"?\\.?$': {
            gettext: gettext('Update firmware to: "{{ name }}"'),
            placeholders: {
                name: '$1'
            }
        },
        '^Update configuration to (.+).$': {
            gettext: gettext('Update configuration to: {{ name }}.'),
            placeholders: {
                name: '$1'
            }
        },
        '^Apply device profile: (.+).?$': {
            gettext: gettext('Apply device profile: {{ name }}'),
            placeholders: {
                name: '$1'
            }
        },
        '^Execute generic command: (.+).?$': {
            gettext: gettext('Execute generic command: {{command}}'),
            placeholders: {
                command: '$1'
            }
        },
        '^Failed to refresh application. : Cannot refresh non local-hosted application.$': {
            gettext: gettext('Could not reactivate the application as it is not hosted locally.')
        },
        '^Failed to refresh application. : Cannot refresh application without active version id.$': {
            gettext: gettext('Could not reactivate the application as it has no active version.')
        },
        // TODO: remove if we decide not to translate such messages:
        // '^Killing container with id (.+):Need to kill Pod$': {
        //   gettext: gettext('Killing container with ID "{{containerId}}". Need to kill Pod.'),
        //   placeholders: {
        //     containerId: '$1'
        //   }
        // },
        '^Scaled down replica set (.+) to (\\d+)$': {
            gettext: gettext('Replica set "{{replicaSetName}}" scaled down to "{{scaleNumber}}".'),
            placeholders: {
                replicaSetName: '$1',
                scaleNumber: '$2'
            }
        },
        '^Deleted pod: (.+)$': {
            gettext: gettext('Pod "{{imageName}}" deleted.'),
            placeholders: {
                imageName: '$1'
            }
        },
        '^Container image "(.+)" already present on machine$': {
            gettext: gettext('Container image "{{imageName}}" already exists.'),
            placeholders: {
                imageName: '$1'
            }
        },
        '^Error updating tenant! Cannot insert second configuration for Password code grant internal/Bad Request$': {
            gettext: gettext('This login mode was already set by another administrator. Refresh the page to update the data.')
        }
    };

    /**
     * A service to provide unmodified, cached translations for angular.
     */
    var CachedLocaleDictionaryService = /** @class */ (function () {
        function CachedLocaleDictionaryService() {
            this.cachedDictionary = {};
        }
CachedLocaleDictionaryService.ɵfac = function CachedLocaleDictionaryService_Factory(t) { return new (t || CachedLocaleDictionaryService)(); };
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CachedLocaleDictionaryService, [{
        type: i0.Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return []; }, null); })();
        return CachedLocaleDictionaryService;
    }());
    CachedLocaleDictionaryService.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function CachedLocaleDictionaryService_Factory() { return new CachedLocaleDictionaryService(); }, token: CachedLocaleDictionaryService, providedIn: "root" });

    var TranslateCustomLoader = /** @class */ (function () {
        function TranslateCustomLoader(http, optionsService, cachedLocaleDictionaryService, path, languages) {
            if (path === void 0) { path = null; }
            if (languages === void 0) { languages = null; }
            this.http = http;
            this.optionsService = optionsService;
            this.cachedLocaleDictionaryService = cachedLocaleDictionaryService;
            this.path = path;
            this.languages = languages;
        }
        TranslateCustomLoader.prototype.getTranslation = function (lang) {
            var _this = this;
            var path = this.path || '';
            var url = "" + path + lang + ".json";
            if (this.languages && this.languages[lang] && this.languages[lang].url) {
                url = this.languages[lang].url;
            }
            return this.http.get(url).pipe(operators.map(function (d) {
                if (_this.optionsService.langsDetails && _this.optionsService.langsDetails[lang]) {
                    return Object.assign(Object.assign({}, d[lang]), _this.optionsService.langsDetails[lang]);
                }
                return d[lang];
            }), operators.tap(function (dictionary) {
                _this.cachedLocaleDictionaryService.cachedDictionary[lang] = dictionary;
            }), operators.map(function (dictionary) { return _this.getDictionaryWithTrimmedKeys(dictionary); }), operators.catchError(function () { return rxjs.of({}); }));
        };
        /**
         * We want to have translation keys unified, so they don't contain unnecessary spaces and line breaks.
         * This way we can dynamically build keys from HTML, and match them to extracted string, that might be HTML as well.
         */
        TranslateCustomLoader.prototype.getDictionaryWithTrimmedKeys = function (dictionary) {
            return lodashEs.mapKeys(dictionary, function (value, key) { return trimTranslationKey(key); });
        };
TranslateCustomLoader.ɵfac = function TranslateCustomLoader_Factory(t) { return new (t || TranslateCustomLoader)(ɵngcc0.ɵɵinject(ɵngcc5.HttpClient), ɵngcc0.ɵɵinject(OptionsService), ɵngcc0.ɵɵinject(CachedLocaleDictionaryService), ɵngcc0.ɵɵinject(LOCALE_PATH), ɵngcc0.ɵɵinject(LANGUAGES)); };
TranslateCustomLoader.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: TranslateCustomLoader, factory: function (t) { return TranslateCustomLoader.ɵfac(t); } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TranslateCustomLoader, [{
        type: i0.Injectable
    }], function () { return [{ type: ɵngcc5.HttpClient }, { type: OptionsService }, { type: CachedLocaleDictionaryService }, { type: String, decorators: [{
                type: i0.Inject,
                args: [LOCALE_PATH]
            }] }, { type: undefined, decorators: [{
                type: i0.Inject,
                args: [LANGUAGES]
            }] }]; }, null); })();
        return TranslateCustomLoader;
    }());
    TranslateCustomLoader.ctorParameters = function () { return [
        { type: http.HttpClient },
        { type: OptionsService },
        { type: CachedLocaleDictionaryService },
        { type: String, decorators: [{ type: i0.Inject, args: [LOCALE_PATH,] }] },
        { type: undefined, decorators: [{ type: i0.Inject, args: [LANGUAGES,] }] }
    ]; };
    function trimTranslationKey(key) {
        return key.replace(/(\r\n|\n|\r)/gm, '').replace(/\s{2,}/g, ' ').trim();
    }

    var TranslateParserCustom = /** @class */ (function (_super) {
        __extends(TranslateParserCustom, _super);
        function TranslateParserCustom() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        TranslateParserCustom.prototype.getValue = function (target, key) {
            var trimmedKey = trimTranslationKey(key);
            var translated = lodashEs.get(target, [trimmedKey]);
            if (!translated) {
                var keys = key.split('.');
                if (keys.length > 1) {
                    translated = lodashEs.get(target, key);
                }
            }
            return translated;
        };
TranslateParserCustom.ɵfac = /*@__PURE__*/ function () { var ɵTranslateParserCustom_BaseFactory; return function TranslateParserCustom_Factory(t) { return (ɵTranslateParserCustom_BaseFactory || (ɵTranslateParserCustom_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(TranslateParserCustom)))(t || TranslateParserCustom); }; }();
TranslateParserCustom.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: TranslateParserCustom, factory: function (t) { return TranslateParserCustom.ɵfac(t); } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TranslateParserCustom, [{
        type: i0.Injectable
    }], null, null); })();
        return TranslateParserCustom;
    }(i1$1.TranslateDefaultParser));

    var C8yTranslateDirective = /** @class */ (function (_super) {
        __extends(C8yTranslateDirective, _super);
        function C8yTranslateDirective(translateService, element, _ref) {
            var _this = _super.call(this, translateService, element, _ref) || this;
            /**
             * Used to trigger events when html is replaced by directive.
             */
            _this.htmlUpdateEvent = new i0.EventEmitter();
            return _this;
        }
        Object.defineProperty(C8yTranslateDirective.prototype, "_elementRef", {
            /**
             * Used to get private element property from TranslateDirective, so it doesn't throw tsErrors
             */
            get: function () {
                return this.element;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(C8yTranslateDirective.prototype, "_translateService", {
            /**
             * Used to get private translateService property from TranslateDirective, so it doesn't throw tsErrors
             */
            get: function () {
                return this.translateService;
            },
            enumerable: false,
            configurable: true
        });
        /**
         * Overridden method from original directive.
         * For simple text nodes, it just invokes the base method.
         * For complex nodes, it builds translation key from whole inner HTML
         * and replaces it with its translation.
         * This prevents splitting HTML into pieces and attempting to translate each one separately
         * which doesn't work, because we extract strings in whole.
         */
        C8yTranslateDirective.prototype.checkNodes = function (forceUpdate, translations) {
            if (forceUpdate === void 0) { forceUpdate = false; }
            if (!this.htmlMode && (this.isElementSimpleTextType() || this.isElementInnerHtmlEmpty())) {
                /**
                 * If element does not contain complex html, then fallBack to default logic.
                 */
                _super.prototype.checkNodes.call(this, forceUpdate, translations);
            }
            else {
                this.htmlMode = true;
                if (this.isLookupKeyMissing()) {
                    this._elementRef.nativeElement.lookupKey = this.getLookupKey();
                }
                if (this.lookupKeyExist()) {
                    var newTranslation = this.getNewTranslation();
                    if (!this.lastTranslation || this.lastTranslation !== newTranslation) {
                        this.lastTranslation = newTranslation;
                        this.updateHtmlContent();
                        this.htmlUpdateEvent.emit();
                    }
                }
            }
        };
        C8yTranslateDirective.prototype.ngOnDestroy = function () {
            this.htmlUpdateEvent.complete();
            _super.prototype.ngOnDestroy.call(this);
        };
        /**
         * Builds lookup key from innerHTML, removes comments (that might be added by Angular) and trims it.
         */
        C8yTranslateDirective.prototype.getLookupKey = function () {
            return this._elementRef.nativeElement.innerHTML.replace(/<!--.*?-->/gs, '').trim();
        };
        C8yTranslateDirective.prototype.isElementSimpleTextType = function () {
            return this._elementRef.nativeElement.childNodes.length === 1 && this._elementRef.nativeElement.childNodes[0].nodeType === 3;
        };
        C8yTranslateDirective.prototype.isElementInnerHtmlEmpty = function () {
            return !this._elementRef.nativeElement.innerHTML;
        };
        C8yTranslateDirective.prototype.isLookupKeyMissing = function () {
            return !this._elementRef.nativeElement.lookupKey;
        };
        C8yTranslateDirective.prototype.lookupKeyExist = function () {
            return this._elementRef.nativeElement.lookupKey;
        };
        C8yTranslateDirective.prototype.getNewTranslation = function () {
            return this._translateService.instant(this._elementRef.nativeElement.lookupKey, this.currentParams || {});
        };
        C8yTranslateDirective.prototype.updateHtmlContent = function () {
            this._elementRef.nativeElement.innerHTML = this.lastTranslation;
        };
C8yTranslateDirective.ɵfac = function C8yTranslateDirective_Factory(t) { return new (t || C8yTranslateDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc4.TranslateService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };
C8yTranslateDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: C8yTranslateDirective, selectors: [["", "translate", ""], ["", "ngx-translate", ""]], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(C8yTranslateDirective, [{
        type: i0.Directive,
        args: [{
                selector: '[translate],[ngx-translate]'
            }]
    }], function () { return [{ type: ɵngcc4.TranslateService }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }]; }, null); })();
        return C8yTranslateDirective;
    }(i1$1.TranslateDirective));
    C8yTranslateDirective.ctorParameters = function () { return [
        { type: i1$1.TranslateService },
        { type: i0.ElementRef },
        { type: i0.ChangeDetectorRef }
    ]; };

    /**
     * Provides copy of original pipe for C8yTranslateModule
     */
    var C8yTranslatePipe = /** @class */ (function (_super) {
        __extends(C8yTranslatePipe, _super);
        function C8yTranslatePipe() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
C8yTranslatePipe.ɵfac = /*@__PURE__*/ function () { var ɵC8yTranslatePipe_BaseFactory; return function C8yTranslatePipe_Factory(t) { return (ɵC8yTranslatePipe_BaseFactory || (ɵC8yTranslatePipe_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(C8yTranslatePipe)))(t || C8yTranslatePipe); }; }();
C8yTranslatePipe.ɵpipe = /*@__PURE__*/ ɵngcc0.ɵɵdefinePipe({ name: "translate", type: C8yTranslatePipe, pure: false });
C8yTranslatePipe.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: C8yTranslatePipe, factory: function (t) { return C8yTranslatePipe.ɵfac(t); } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(C8yTranslatePipe, [{
        type: i0.Injectable
    }, {
        type: i0.Pipe,
        args: [{
                name: 'translate',
                pure: false // required to update the value when the promise is resolved
            }]
    }], null, null); })();
        return C8yTranslatePipe;
    }(i1$1.TranslatePipe));

    /**
     * Module must be redeclared, as Components cant be declared by two modules.
     */
    var C8yTranslateModule = /** @class */ (function (_super) {
        __extends(C8yTranslateModule, _super);
        function C8yTranslateModule() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
C8yTranslateModule.ɵfac = /*@__PURE__*/ function () { var ɵC8yTranslateModule_BaseFactory; return function C8yTranslateModule_Factory(t) { return (ɵC8yTranslateModule_BaseFactory || (ɵC8yTranslateModule_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(C8yTranslateModule)))(t || C8yTranslateModule); }; }();
C8yTranslateModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: C8yTranslateModule });
C8yTranslateModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(C8yTranslateModule, [{
        type: i0.NgModule,
        args: [{
                declarations: [C8yTranslatePipe, C8yTranslateDirective],
                exports: [C8yTranslatePipe, C8yTranslateDirective]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(C8yTranslateModule, { declarations: [C8yTranslatePipe, C8yTranslateDirective], exports: [C8yTranslatePipe, C8yTranslateDirective] }); })();
        return C8yTranslateModule;
    }(i1$1.TranslateModule));

    var angularLocalesLanguageMap = { en: 'en-GB', 'en-EN': 'en-GB' };
    // AoT requires an exported function for factories
    function translateLoaderFactory(httpClient, optionsService, cachedLocaleDictionaryService, localePath, languages) {
        return new TranslateCustomLoader(httpClient, optionsService, cachedLocaleDictionaryService, localePath, languages);
    }
    function localePathFactory(options) {
        return options.localePath;
    }
    function languagesFactory(options) {
        return options.languages;
    }
    function localeId(appStateService) {
        return {
            get lang() {
                return getAngularLocalesLanguageString(appStateService.state.lang || 'en');
            },
            toLowerCase: function () {
                return this.lang.toLowerCase();
            },
            toString: function () {
                return this.lang;
            }
        };
    }
    function getAngularLocalesLanguageString(language) {
        return angularLocalesLanguageMap[language] || language;
    }
    /**
     * The angular module definition for i18n (translation).
     * @exports I18nModule
     */
    var I18nModule$1 = /** @class */ (function () {
        function I18nModule() {
        }
        I18nModule.providers = function () {
            return [
                { provide: i0.LOCALE_ID, useFactory: localeId, deps: [AppStateService] },
                { provide: HOOK_PATTERN_MESSAGES, useValue: MESSAGES, multi: true },
                { provide: LOCALE_PATH, useFactory: localePathFactory, deps: [OptionsService] },
                { provide: LANGUAGES, useFactory: languagesFactory, deps: [OptionsService] },
                // Extracted from projects/ngx-translate/core/src/public_api.ts
                {
                    provide: i1$1.TranslateLoader,
                    useFactory: translateLoaderFactory,
                    deps: [http.HttpClient, OptionsService, CachedLocaleDictionaryService, LOCALE_PATH, LANGUAGES]
                },
                { provide: i1$1.TranslateCompiler, useClass: i1$1.TranslateFakeCompiler },
                { provide: i1$1.TranslateParser, useClass: TranslateParserCustom },
                { provide: i1$1.MissingTranslationHandler, useClass: MissingTranslationCustomHandler },
                i1$1.TranslateStore,
                i1$1.TranslateService,
                { provide: i1$1.USE_STORE, useValue: undefined },
                { provide: i1$1.USE_DEFAULT_LANG, useValue: undefined },
                { provide: i1$1.USE_EXTEND, useValue: false },
                { provide: i1$1.DEFAULT_LANGUAGE, useValue: undefined }
            ];
        };
        I18nModule.forRoot = function () {
            return {
                ngModule: I18nModule,
                providers: I18nModule.providers()
            };
        };
I18nModule.ɵfac = function I18nModule$1_Factory(t) { return new (t || I18nModule)(); };
I18nModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: I18nModule });
I18nModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[http.HttpClientModule], C8yTranslateModule] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(I18nModule, [{
        type: i0.NgModule,
        args: [{
                exports: [C8yTranslateModule],
                imports: [http.HttpClientModule]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(I18nModule, { imports: [ɵngcc5.HttpClientModule], exports: [C8yTranslateModule] }); })();
        return I18nModule;
    }());

    function parse(moduleSrc) {
        var src = moduleSrc.split(/\n/)
            .map(function (l) { return l.trim(); })
            .filter(Boolean)
            .filter(function (l) { return !l.match(/^\/?\*/) && !l.match(/^\/\//); })
            .join('\n');
        var fn = new Function("var exports = {};\nvar module = { exports: exports };\n" + src + "\nreturn exports;");
        return fn();
    }

    var cache = new Map();
    /**
     * @ignore
     */
    function loadLocale(moduleLang) {
        return new Promise(function (resolve, reject) {
            if (cache.has(moduleLang)) {
                resolve(cache.get(moduleLang));
            }
            else {
                fetch("assets/locales/angular/" + moduleLang + ".js")
                    .then(function (res) { return res.text(); })
                    .then(function (src) {
                    var module = parse(src);
                    cache.set(moduleLang, module);
                    resolve(module);
                })
                    .catch(reject);
            }
        });
    }

    /**
     * A service to manage the language of the application.
     */
    var TranslateService = /** @class */ (function () {
        function TranslateService(ngxTranslate, ui, options) {
            var _this = this;
            this.ngxTranslate = ngxTranslate;
            this.ui = ui;
            this.options = options;
            this.langsDetail = this.options.get('languages', {});
            this.langs = lodashEs.keys(this.langsDetail).filter(function (k) { return _this.langsDetail[k]; });
            this.DEFAULT_SEPARATOR = '_';
            var queryStringLang = this.queryStringLang();
            if (queryStringLang) {
                this.saveInLocalStorage(queryStringLang);
            }
        }
        TranslateService.defaultLang = function () {
            return window.localStorage.getItem(TranslateService.SAVE_LANGUAGE_KEY);
        };
        /**
         * Switches to given language.
         * @param lang The language as two-letter code.
         */
        TranslateService.prototype.switchToLanguage = function (lang) {
            return __awaiter(this, void 0, void 0, function () {
                var moduleLang, e_1, lessSpecificModuleLang;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            moduleLang = lang.replace('_', '-');
                            _a.label = 1;
                        case 1:
                            _a.trys.push([1, 3, , 7]);
                            return [4 /*yield*/, this.loadLocales(moduleLang)];
                        case 2:
                            _a.sent();
                            return [3 /*break*/, 7];
                        case 3:
                            e_1 = _a.sent();
                            lessSpecificModuleLang = moduleLang.split('-').shift();
                            if (!(lessSpecificModuleLang !== moduleLang)) return [3 /*break*/, 5];
                            return [4 /*yield*/, this.loadLocales(lessSpecificModuleLang)];
                        case 4:
                            _a.sent();
                            return [3 /*break*/, 6];
                        case 5: throw e_1;
                        case 6: return [3 /*break*/, 7];
                        case 7:
                            this.setLanguage(lang);
                            return [2 /*return*/];
                    }
                });
            });
        };
        TranslateService.prototype.loadLocales = function (moduleLang) {
            return __awaiter(this, void 0, void 0, function () {
                var module;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, loadLocale(getAngularLocalesLanguageString(moduleLang))];
                        case 1:
                            module = _a.sent();
                            common.registerLocaleData(module.default);
                            return [2 /*return*/];
                    }
                });
            });
        };
        TranslateService.prototype.setLanguage = function (lang) {
            var _this = this;
            this.ngxTranslate.setDefaultLang(this.options.get('defaultLanguage', 'en'));
            this.ngxTranslate.use(lang).subscribe(function () {
                _this.ui.state$.next(Object.assign(Object.assign({}, _this.ui.state), { lang: lang }));
            });
        };
        /**
         * Finds the first supported language
         */
        TranslateService.prototype.firstSupportedLanguage = function () {
            var _this = this;
            var languages = [this.queryStringLang(), this.localStorageLang()]
                .concat([this.options.get('defaultLanguage')])
                .concat(this.browserLangs())
                .concat(['en'])
                .filter(Boolean)
                .map(function (lang) { return lang.toLowerCase(); });
            var preferredLanguage = languages.find(function (lang) { return _this.getSupported(lang); });
            return this.getSupported(preferredLanguage);
        };
        /**
         * Converts a iso language code to a PO language code (e.g. de-de gets de_de).
         * @param lang The iso language code.
         */
        TranslateService.prototype.convertToLanguageCodePO = function (lang) {
            var sep = lang.indexOf('-') > -1 ? '-' : this.DEFAULT_SEPARATOR;
            var _a = __read(lang.split(sep), 2), langMain = _a[0], langSpecific = _a[1];
            var langLast = langSpecific ? "" + this.DEFAULT_SEPARATOR + langSpecific : '';
            return "" + langMain + langLast;
        };
        /**
         * Returns the language in the native language.
         * @param lang The language two-letter code.
         * @return The native name.
         */
        TranslateService.prototype.getNativeLanguage = function (lang) {
            var langData = (this.langsDetail || {})[lang] || {};
            return langData.nativeName || lang;
        };
        TranslateService.prototype.saveInLocalStorage = function (lang) {
            window.localStorage.setItem(TranslateService.SAVE_LANGUAGE_KEY, lang);
        };
        TranslateService.prototype.getSupported = function (lang) {
            var _this = this;
            var exact = this.langs.find(function (l) { return l.toLowerCase() === lang; });
            if (exact) {
                return exact;
            }
            return this.langs.find(function (l) { return _this.getLessSpecific(l.toLowerCase()) === _this.getLessSpecific(lang) || l.startsWith(lang); });
        };
        /**
         * Gets the language from the query parameter.
         * @return The language two-letter code.
         */
        TranslateService.prototype.queryStringLang = function () {
            return this.getQueryParameter('lang');
        };
        TranslateService.prototype.getLessSpecific = function (lang) {
            return lodashEs.isString(lang)
                ? lang.replace('-', this.DEFAULT_SEPARATOR).split(this.DEFAULT_SEPARATOR)[0]
                : '';
        };
        /**
         * Gets the language from local storage.
         * @return The language two-letter code.
         */
        TranslateService.prototype.localStorageLang = function () {
            return window.localStorage.getItem(TranslateService.SAVE_LANGUAGE_KEY);
        };
        /**
         * Determines which language is set in the browser.
         * @return The languages the browser supports as string array.
         */
        TranslateService.prototype.browserLangs = function () {
            var navigator = window.navigator;
            var browserLanguagePropertyKeys = [
                'languages',
                'language',
                'browserLanguage',
                'systemLanguage',
                'userLanguage'
            ];
            return browserLanguagePropertyKeys.reduce(function (languages, property) {
                var propertyLanguages = navigator[property];
                if (typeof propertyLanguages === 'string') {
                    languages.push(propertyLanguages);
                }
                else if (Array.isArray(propertyLanguages)) {
                    languages = languages.concat(propertyLanguages);
                }
                return languages;
            }, []);
        };
        TranslateService.prototype.getQueryParameter = function (queryKey) {
            // TODO: replace this with URLSearchParams, ie 11 still doesn't support :()
            var query = window.location.search.substring(1);
            var result;
            query.split('&').find(function (pair) {
                var _a = __read(pair.split('='), 2), key = _a[0], value = _a[1];
                if (key === queryKey) {
                    result = value;
                }
                return result;
            });
            return result;
        };
TranslateService.ɵfac = function TranslateService_Factory(t) { return new (t || TranslateService)(ɵngcc0.ɵɵinject(ɵngcc4.TranslateService), ɵngcc0.ɵɵinject(AppStateService), ɵngcc0.ɵɵinject(OptionsService)); };
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TranslateService, [{
        type: i0.Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return [{ type: ɵngcc4.TranslateService }, { type: AppStateService }, { type: OptionsService }]; }, null); })();
        return TranslateService;
    }());
    TranslateService.SAVE_LANGUAGE_KEY = 'c8y_language';
    TranslateService.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function TranslateService_Factory() { return new TranslateService(i0__namespace.ɵɵinject(i1__namespace$1.TranslateService), i0__namespace.ɵɵinject(AppStateService), i0__namespace.ɵɵinject(OptionsService)); }, token: TranslateService, providedIn: "root" });
    TranslateService.ctorParameters = function () { return [
        { type: i1$1.TranslateService },
        { type: AppStateService },
        { type: OptionsService }
    ]; };

    /**
     * The range of times supported by ECMAScript Date objects in milliseconds.
     * @see http://www.ecma-international.org/ecma-262/5.1/#sec-15.9.1.1
     */
    var ES_MAX_TIME_MILLISECONDS = 8640000000000000;
    /**
     * Formats a date value according to locale rules. If no other format specified it defaults to `medium`
     * used as standard date/time format.
     *
     * Extends Angular's DatePipe in a way so that date values exceeding the range supported by ECMAScript
     * are displayed as earliest/latest supported point in time printed in the desired format pre- or postfixed
     * by the word `before` or `after`, respectively.
     * In all other cases the pipe behaves as the standard [DatePipe]{@link https://angular.io/api/common/DatePipe}.
     *
     * ```html
     * <span class="highlight">{{ deadline | c8yDate }}</span> <!-- e.g. 7 May 2020, 17:45:19 (en-GB) or 07.05.2020, 17:45:19 (de) -->
     * <span>{{ lastUpdated | c8yDate: 'a h:MM:ss' }}</span> <!-- e.g. pm 5:45:19 -->
     * <span>{{ 8640000000000000 + 1 | c8yDate }}</span> <!-- e.g. after 13 Sep 275760, 03:00:00 --> ```
     */
    var DatePipe = /** @class */ (function (_super) {
        __extends(DatePipe, _super);
        function DatePipe(locale, translateService) {
            var _this = _super.call(this, locale) || this;
            _this.translateService = translateService;
            return _this;
        }
        DatePipe.prototype.transform = function (value, format, timezone, locale) {
            if (format === void 0) { format = 'medium'; }
            var valueInBounds = value;
            var valueBefore = false;
            var valueBeyond = false;
            if (typeof value === 'number' && !isNaN(value)) {
                valueInBounds = Math.min(value, ES_MAX_TIME_MILLISECONDS);
                valueInBounds = Math.max(valueInBounds, -ES_MAX_TIME_MILLISECONDS);
                valueBefore = value < -ES_MAX_TIME_MILLISECONDS;
                valueBeyond = value > ES_MAX_TIME_MILLISECONDS;
            }
            var result = _super.prototype.transform.call(this, valueInBounds, format, timezone, locale);
            if (valueBefore) {
                result = this.translateService.instant(gettext("before {{date}}"), { date: result });
            }
            else if (valueBeyond) {
                result = this.translateService.instant(gettext("after {{date}}"), { date: result });
            }
            return result;
        };
DatePipe.ɵfac = function DatePipe_Factory(t) { return new (t || DatePipe)(ɵngcc0.ɵɵdirectiveInject(i0.LOCALE_ID, 16), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.TranslateService, 16)); };
DatePipe.ɵpipe = /*@__PURE__*/ ɵngcc0.ɵɵdefinePipe({ name: "c8yDate", type: DatePipe, pure: true });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DatePipe, [{
        type: i0.Pipe,
        args: [{ name: 'c8yDate' }]
    }], function () { return [{ type: String, decorators: [{
                type: i0.Inject,
                args: [i0.LOCALE_ID]
            }] }, { type: ɵngcc4.TranslateService }]; }, null); })();
        return DatePipe;
    }(common.DatePipe));
    DatePipe.ctorParameters = function () { return [
        { type: String, decorators: [{ type: i0.Inject, args: [i0.LOCALE_ID,] }] },
        { type: i1$1.TranslateService }
    ]; };

    /**
     * A directive to determine if a dropdown should open to the top or as usual to the bottom.
     * This directive has a direct dependency to the bootstrap dropdown (!)
     *
     * Preconditions:
     *  - Bootstrap dropdown is used
     *  - Bootstrap dropdown is not used with container="body"
     *  - Bootstrap dropdown is used like it is intended and documented for e.g.
     * ```html
     * <div dropdown class="dropdown">
     *  <button class="dropdown-toggle" dropdownToggle>Toggle</button>
     *  <ul class="dropdown-menu" *dropdownMenu>
     *    <!-- Content here -->
     *  </ul>
     * </div>
     * ```
     *
     * Example:
     * ```html
     * <div dropdown c8yBsDropdownDirection class="dropdown">
     *  <button class="dropdown-toggle" dropdownToggle>Toggle</button>
     *  <ul class="dropdown-menu" *dropdownMenu>
     *    <!-- Content here -->
     *  </ul>
     * </div>
     * ```
     * You make use of the bootstrap dropdown as usual and additionally add the direction directive to it.
     */
    var DropdownDirectionDirective = /** @class */ (function () {
        function DropdownDirectionDirective(elementRef, renderer) {
            this.elementRef = elementRef;
            this.renderer = renderer;
            this.MARGIN_BOTTOM = 10;
            this.VISIBILITY = 'visibility';
            this.DROPUP = 'dropup';
        }
        DropdownDirectionDirective.prototype.onClick = function () {
            var open = this.elementRef.nativeElement.classList.contains('open');
            if (open) {
                var menu_1;
                var toggle_1;
                lodashEs.forEach(this.elementRef.nativeElement.children, function (element) {
                    if (element.classList.contains('dropdown-menu')) {
                        menu_1 = element;
                    }
                    if (element.classList.contains('dropdown-toggle')) {
                        toggle_1 = element;
                    }
                });
                if (menu_1 && toggle_1) {
                    this.renderer.setStyle(menu_1, this.VISIBILITY, 'hidden');
                    this.shouldDropup(menu_1, toggle_1);
                    this.renderer.removeStyle(menu_1, this.VISIBILITY);
                }
            }
        };
        DropdownDirectionDirective.prototype.shouldDropup = function (container, position) {
            var containerHeight = container.getBoundingClientRect().height;
            var containerDropPosition = position.getBoundingClientRect().bottom;
            var layoutViewport = window.innerHeight;
            var sum = containerHeight + containerDropPosition + this.MARGIN_BOTTOM;
            if (sum >= layoutViewport) {
                this.renderer.addClass(this.elementRef.nativeElement, this.DROPUP);
            }
            else if (this.elementRef.nativeElement.classList.contains(this.DROPUP)) {
                this.renderer.removeClass(this.elementRef.nativeElement, this.DROPUP);
            }
        };
DropdownDirectionDirective.ɵfac = function DropdownDirectionDirective_Factory(t) { return new (t || DropdownDirectionDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };
DropdownDirectionDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: DropdownDirectionDirective, selectors: [["", "dropdown", "", "c8yBsDropdownDirection", ""], ["", "dropdown", "", "c8yDropdownDirection", ""]], hostBindings: function DropdownDirectionDirective_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("click", function DropdownDirectionDirective_click_HostBindingHandler() { return ctx.onClick(); });
    } } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DropdownDirectionDirective, [{
        type: i0.Directive,
        args: [{ selector: '[dropdown][c8yBsDropdownDirection],[dropdown][c8yDropdownDirection]' }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }]; }, { onClick: [{
            type: i0.HostListener,
            args: ['click']
        }] }); })();
        return DropdownDirectionDirective;
    }());
    DropdownDirectionDirective.ctorParameters = function () { return [
        { type: i0.ElementRef },
        { type: i0.Renderer2 }
    ]; };
    DropdownDirectionDirective.propDecorators = {
        onClick: [{ type: i0.HostListener, args: ['click',] }]
    };

    var LoadMoreComponent = /** @class */ (function () {
        function LoadMoreComponent(element) {
            this.element = element;
            this.useIntersection = true;
            this.hidden = false;
            this.class = 'c8y-list__item p-0';
            this.maxIterations = 10;
            this.hideNoMoreDataHint = false;
            this.onLoad = new i0.EventEmitter();
            this.isLoading = false;
            this.counter = 0;
            this.hasNoMoreData = false;
            this.LOAD_SAME_PAGE_THRESHOLD = 50;
            this.destroyed = false;
        }
        Object.defineProperty(LoadMoreComponent.prototype, "hostClass", {
            get: function () {
                return this.hidden || (!this.hasMore && !this.hasNoMoreData) ? '' : this.class;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(LoadMoreComponent.prototype, "hasMore", {
            get: function () {
                return (this.paging && (this.paging.totalPages > this.paging.currentPage || !!this.paging.nextPage));
            },
            enumerable: false,
            configurable: true
        });
        LoadMoreComponent.prototype.ngAfterContentInit = function () {
            var _this = this;
            this.destroyed = false;
            if (this.useIntersection && 'IntersectionObserver' in window) {
                this.intersectionObserver = new IntersectionObserver(function (event) { return _this.buttonInView(event[0]); }, {
                    root: this.container ? this.container.nativeElement : null
                });
                this.intersectionObserver.observe(this.element.nativeElement);
            }
            this.hasNoMoreData = this.shouldShowNoMoreDataHint();
        };
        LoadMoreComponent.prototype.ngOnDestroy = function () {
            this.destroyed = true;
            if (this.intersectionObserver) {
                this.intersectionObserver.disconnect();
                this.intersectionObserver.unobserve(this.element.nativeElement);
                clearTimeout(this.loadUntilIntersected);
            }
        };
        LoadMoreComponent.prototype.loadMore = function (event) {
            return __awaiter(this, void 0, void 0, function () {
                var result;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            if (!!this.destroyed) return [3 /*break*/, 3];
                            this.isLoading = true;
                            if (event) {
                                event.stopPropagation();
                            }
                            if (!this.hasMore) return [3 /*break*/, 2];
                            return [4 /*yield*/, this.paging.next()];
                        case 1:
                            result = _a.sent();
                            this.paging = result.paging;
                            this.onLoad.emit(result.data);
                            this.intersectionLoading();
                            this.hasNoMoreData = this.shouldShowNoMoreDataHint();
                            return [3 /*break*/, 3];
                        case 2:
                            this.counter = 0;
                            this.isLoading = false;
                            _a.label = 3;
                        case 3: return [2 /*return*/];
                    }
                });
            });
        };
        LoadMoreComponent.prototype.intersectionLoading = function () {
            var _this = this;
            if (this.useIntersection && this.hasMore && this.loadUntilIntersected !== null) {
                this.loadUntilIntersected = setTimeout(function () { return _this.loadMore(); }, this.getLoadingThreshold());
                this.useIntersection = this.shouldSwitchMode();
            }
            else {
                this.isLoading = false;
                this.loadUntilIntersected = undefined;
            }
        };
        LoadMoreComponent.prototype.getLoadingThreshold = function () {
            return this.LOAD_SAME_PAGE_THRESHOLD * this.counter++;
        };
        LoadMoreComponent.prototype.shouldShowNoMoreDataHint = function () {
            return (this.counter !== 0 || this.noMoreDataHint) && !this.hasMore && !this.hidden;
        };
        LoadMoreComponent.prototype.shouldSwitchMode = function () {
            return this.counter < this.maxIterations || this.hidden;
        };
        LoadMoreComponent.prototype.buttonInView = function (event) {
            if (event.isIntersecting) {
                this.loadMore();
            }
            else if (this.loadUntilIntersected) {
                clearTimeout(this.loadUntilIntersected);
                this.loadUntilIntersected = null;
                this.isLoading = false;
            }
            else {
                // avoiding a race condition when timeout is faster
                // cleared then set
                this.loadUntilIntersected = null;
            }
        };
LoadMoreComponent.ɵfac = function LoadMoreComponent_Factory(t) { return new (t || LoadMoreComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
LoadMoreComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: LoadMoreComponent, selectors: [["c8y-load-more"]], hostVars: 2, hostBindings: function LoadMoreComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.hostClass);
    } }, inputs: { useIntersection: "useIntersection", hidden: "hidden", class: "class", maxIterations: "maxIterations", hideNoMoreDataHint: "hideNoMoreDataHint", paging: "paging", container: "container", noMoreDataHint: "noMoreDataHint", loadingTemplate: "loadingTemplate", loadNextLabel: "loadNextLabel", loadingLabel: "loadingLabel" }, outputs: { onLoad: "onLoad" }, decls: 5, vars: 3, consts: [["class", "btn btn-default btn-block text-center", 3, "ngClass", "visibility", "height", "title", "click", 4, "ngIf"], [4, "ngIf"], ["finishHint", ""], [1, "btn", "btn-default", "btn-block", "text-center", 3, "ngClass", "title", "click"], [3, "innerHTML", 4, "ngIf", "ngIfElse"], ["loadPage", ""], [3, "innerHTML"], ["translate", "", 3, "translateParams"], ["loading", ""], [4, "ngTemplateOutlet"], [1, "legend", "form-block", "center", "last-record", 3, "title"], [3, "c8yIcon"]], template: function LoadMoreComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, LoadMoreComponent_button_0_Template, 4, 12, "button", 0);
        ɵngcc0.ɵɵtemplate(1, LoadMoreComponent_ng_container_1_Template, 2, 1, "ng-container", 1);
        ɵngcc0.ɵɵtemplate(2, LoadMoreComponent_ng_template_2_Template, 3, 4, "ng-template", null, 2, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(4, LoadMoreComponent_ng_container_4_Template, 2, 1, "ng-container", 1);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.hasMore && !(ctx.loadingTemplate && ctx.isLoading));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.hasNoMoreData && !ctx.hideNoMoreDataHint && !ctx.isLoading);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", ctx.loadingTemplate && ctx.isLoading);
    } }, directives: function () { return [ɵngcc6.NgIf, ɵngcc6.NgClass, C8yTranslateDirective, ɵngcc6.NgTemplateOutlet, IconDirective]; }, pipes: function () { return [C8yTranslatePipe]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LoadMoreComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-load-more',
                template: "<button\n  class=\"btn btn-default btn-block text-center\"\n  (click)=\"loadMore($event)\"\n  [ngClass]=\"{ 'btn-pending': isLoading }\"\n  *ngIf=\"hasMore && !(loadingTemplate && isLoading)\"\n  [style.visibility]=\"hidden ? 'hidden' : 'visible'\"\n  [style.height]=\"hidden ? '1px' : null\"\n  title=\"{{ 'Load more' | translate }}\"\n>\n  <ng-container *ngIf=\"!isLoading\">\n    <span *ngIf=\"loadNextLabel; else loadPage\" [innerHTML]=\"loadNextLabel | translate\"></span>\n    <ng-template #loadPage>\n      <span translate ngNonBindable [translateParams]=\"{ pageNo: paging.currentPage + 1 }\">\n        Load page {{ pageNo }}</span\n      >\n    </ng-template>\n  </ng-container>\n  <ng-container *ngIf=\"isLoading\">\n    <span *ngIf=\"loadingLabel; else loading\" [innerHTML]=\"loadingLabel | translate\"></span>\n    <ng-template #loading>\n      <span translate ngNonBindable [translateParams]=\"{ pageNo: paging.currentPage + 1 }\">\n        Page {{ pageNo }} is loading\u2026\n      </span>\n    </ng-template>\n  </ng-container>\n</button>\n\n<ng-container *ngIf=\"hasNoMoreData && !hideNoMoreDataHint && !isLoading\">\n  <ng-container *ngTemplateOutlet=\"noMoreDataHint || finishHint\"></ng-container>\n</ng-container>\n\n<ng-template #finishHint>\n  <div class=\"legend form-block center last-record\" title=\"{{ 'Last record' | translate }}\">\n    <i [c8yIcon]=\"'circle'\"></i>\n  </div>\n</ng-template>\n\n<ng-container *ngIf=\"loadingTemplate && isLoading\">\n  <ng-container *ngTemplateOutlet=\"loadingTemplate\"></ng-container>\n</ng-container>\n"
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { useIntersection: [{
            type: i0.Input
        }], hidden: [{
            type: i0.Input
        }], class: [{
            type: i0.Input
        }], maxIterations: [{
            type: i0.Input
        }], hideNoMoreDataHint: [{
            type: i0.Input
        }], onLoad: [{
            type: i0.Output
        }], hostClass: [{
            type: i0.HostBinding,
            args: ['class']
        }], paging: [{
            type: i0.Input
        }], container: [{
            type: i0.Input
        }], noMoreDataHint: [{
            type: i0.Input
        }], loadingTemplate: [{
            type: i0.Input
        }], loadNextLabel: [{
            type: i0.Input
        }], loadingLabel: [{
            type: i0.Input
        }] }); })();
        return LoadMoreComponent;
    }());
    LoadMoreComponent.ctorParameters = function () { return [
        { type: i0.ElementRef }
    ]; };
    LoadMoreComponent.propDecorators = {
        paging: [{ type: i0.Input }],
        useIntersection: [{ type: i0.Input }],
        hidden: [{ type: i0.Input }],
        container: [{ type: i0.Input }],
        class: [{ type: i0.Input }],
        maxIterations: [{ type: i0.Input }],
        noMoreDataHint: [{ type: i0.Input }],
        loadingTemplate: [{ type: i0.Input }],
        hideNoMoreDataHint: [{ type: i0.Input }],
        loadNextLabel: [{ type: i0.Input }],
        loadingLabel: [{ type: i0.Input }],
        onLoad: [{ type: i0.Output }],
        hostClass: [{ type: i0.HostBinding, args: ['class',] }]
    };

    var VirtualScrollerWrapperComponent = /** @class */ (function () {
        function VirtualScrollerWrapperComponent() {
            this.filterPipe = rxjs.pipe(operators.tap());
            this.trackByFn = function (i, item) {
                return item.id;
            };
        }
        VirtualScrollerWrapperComponent.prototype.apply = function () {
            var _this = this;
            this.items$ = rxjs.of(this.items).pipe(function (src) { return _this.filterPipe(src); }, operators.map(function (item) { return item; }));
        };
VirtualScrollerWrapperComponent.ɵfac = function VirtualScrollerWrapperComponent_Factory(t) { return new (t || VirtualScrollerWrapperComponent)(); };
VirtualScrollerWrapperComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: VirtualScrollerWrapperComponent, selectors: [["c8y-virtual-scroller-wrapper"]], inputs: { filterPipe: "filterPipe", trackByFn: "trackByFn", items: "items", itemHeight: "itemHeight", containerHeight: "containerHeight", template: "template", strategy: "strategy" }, decls: 2, vars: 3, consts: [[3, "ngSwitch", 4, "ngIf"], [3, "ngSwitch"], [4, "ngSwitchCase"], ["windowVirtualScrollStrategy", "", 3, "itemSizePx"], [4, "cdkVirtualFor", "cdkVirtualForOf", "cdkVirtualForTrackBy"], [4, "ngTemplateOutlet", "ngTemplateOutletContext"], [3, "itemSize"]], template: function VirtualScrollerWrapperComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, VirtualScrollerWrapperComponent_ng_container_0_Template, 3, 3, "ng-container", 0);
        ɵngcc0.ɵɵpipe(1, "async");
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind1(1, 1, ctx.items$));
    } }, directives: function () { return [ɵngcc6.NgIf, ɵngcc6.NgSwitch, ɵngcc6.NgSwitchCase, ɵngcc7.CdkVirtualScrollViewport, VirtualScrollWindowDirective, ɵngcc7.CdkVirtualForOf, ɵngcc6.NgTemplateOutlet, ɵngcc7.CdkFixedSizeVirtualScroll]; }, pipes: function () { return [ɵngcc6.AsyncPipe]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(VirtualScrollerWrapperComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-virtual-scroller-wrapper',
                template: "<ng-container *ngIf=\"items$ |async as items\" [ngSwitch]=\"strategy\">\n    <ng-container *ngSwitchCase=\"'window'\">\n      <cdk-virtual-scroll-viewport windowVirtualScrollStrategy [itemSizePx]=\"itemHeight\">\n        <div *cdkVirtualFor=\"let item of items; index as i; trackBy: trackByFn\">\n          <ng-container *ngTemplateOutlet=\"template; context: {$implicit: item, index: i}\"></ng-container>\n        </div>\n      </cdk-virtual-scroll-viewport>\n    </ng-container>\n\n    <ng-container *ngSwitchCase=\"'fixed'\">\n      <cdk-virtual-scroll-viewport [itemSize]=\"itemHeight\" [style.height]=\"containerHeight + 'px'\">\n        <div *cdkVirtualFor=\"let item of items; index as i; trackBy: trackByFn\" >\n          <ng-container *ngTemplateOutlet=\"template; context: {$implicit: item, index: i}\"></ng-container>\n        </div>\n      </cdk-virtual-scroll-viewport>\n    </ng-container>\n</ng-container>\n"
            }]
    }], function () { return []; }, { filterPipe: [{
            type: i0.Input
        }], trackByFn: [{
            type: i0.Input
        }], items: [{
            type: i0.Input
        }], itemHeight: [{
            type: i0.Input
        }], containerHeight: [{
            type: i0.Input
        }], template: [{
            type: i0.Input
        }], strategy: [{
            type: i0.Input
        }] }); })();
        return VirtualScrollerWrapperComponent;
    }());
    VirtualScrollerWrapperComponent.propDecorators = {
        items: [{ type: i0.Input }],
        itemHeight: [{ type: i0.Input }],
        containerHeight: [{ type: i0.Input }],
        template: [{ type: i0.Input }],
        filterPipe: [{ type: i0.Input }],
        strategy: [{ type: i0.Input }],
        trackByFn: [{ type: i0.Input }]
    };

    /**
     * A directive to iterate over IResultList<T> data from @c8y/client.
     * Depending on the [c8yForLoadMore] a load more button is:
     *  - auto: Tries to automatically load more data (default maximum 10 iterations; can be
     *          change with maxIterations settings).
     *  - show: Shows a load more button for the user to decide
     *  - none: Doesn't perform any load more action.
     *  - hidden: Loads more data automatically but with no visible button for the user.
     *
     * Additional, any rxjs operator pipe can be applied to the [c8yForPipe] input, e.g. to
     * filter the data displayed currently as well as the data loaded by subsequent requests.
     *
     * Example:
     * ```html
     * <div *c8yFor="let device of devices; loadMore: 'auto'; let i = index; pipe: filterPipe;">
     *  {{ i + 1 }}. {{device.name}}
     * </div>
     * ```
     * The above example will list all entities that are applied to `devices`:
     * ```typescript
     * this.devices = this.inventoryService.list({ pageSize: 10, fragmentType: 'c8y_IsDevice' })
     * ```
     * It will display the first 10 items, if there is more space left on the screen, and there are more
     * than 10 devices, it will automatically load up to 10 pages more. If it still can't fit the screen
     * it will stop and switch to `show` mode.
     *
     * A pipe can be applied e.g. for filtering or grouping. This pipe is attached to every follow up
     * request done by the load more component:
     * ```typescript
     * this.filterPipe = pipe(
     *    map((data: []) => {
     *     return data.filter(
     *      (mo: any) => mo.name && mo.name.toLowerCase().indexOf(value.toLowerCase()) > -1
     *    );
     *  })
     * );
     * ```
     * The pipe must be an rxjs pipe and can take any operator.
     *
     * Example with realtime support and items count output (e.g. for handling empty state and header):
     *
     * ```html
     * <c8y-list-group>
     *   <div class="c8y-empty-state" *ngIf="count === 0">
     *     (...)
     *   </div>
     *
     *   <div class="page-sticky-header hidden-xs c8y-list__item c8y-list--timeline" *ngIf="count > 0">
     *     (...)
     *   </div>
     *
     *   <ng-template
     *     c8yFor
     *     let-operation
     *     [c8yForOf]="items$"
     *     [c8yForPipe]="filterPipe"
     *     [c8yForRealtime]="realtime"
     *     [c8yForRealtimeOptions]="realtimeOptions"
     *     (c8yForCount)="count = $event"
     *   >
     *     <c8y-li-timeline>
     *       (...)
     *     </c8y-li-timeline>
     *   </ng-template>
     * </c8y-list-group>
     * ```
     *
     * ```typescript
     * @Component({
     *   (...)
     * })
     * export class ExampleComponent {
     *   @Input() deviceId: IIdentified;
     *   items$ = this.operationService.list({
     *     deviceId: this.deviceId,
     *     fragmentType: 'c8y_MyOperation',
     *     dateFrom: new Date(0).toISOString(),
     *     dateTo: new Date(Date.now()).toISOString(),
     *     revert: true,
     *     withTotalPages: true
     *   });
     *   filterPipe = pipe(map((ops: IOperation[]) => ops.filter(op => op.c8y_MyOperation)));
     *   realtimeOptions: ForOfRealtimeOptions = {
     *     entityOrId: this.deviceId,
     *     removeOnUpdate: true,
     *     insertOnUpdate: true
     *   } as ForOfRealtimeOptions;
     *   count: number;
     *
     *   constructor(
     *     private operationService: OperationService,
     *     public realtime: OperationRealtimeService
     *   ) {}
     * }
     * ```
     */
    var ForOfDirective = /** @class */ (function () {
        function ForOfDirective(tpl, vcr, componentFactoryResolver) {
            var _this = this;
            this.tpl = tpl;
            this.vcr = vcr;
            this.componentFactoryResolver = componentFactoryResolver;
            this.cachedData = [];
            this.loadMoreMode = 'auto';
            this.dataPipe = rxjs.pipe(operators.tap());
            this.itemDataPipe = rxjs.pipe(operators.map(function (item) { return [item]; }), function (src) { return _this.dataPipe(src); }, operators.map(function (_a) {
                var _b = __read(_a, 1), item = _b[0];
                return item;
            }));
            this.maxIterations = 10;
            this.realtimeOptions = {};
            this.unsubscribe$ = new rxjs.Subject();
            /**
             * Enable virtual scroll rendering method.
             */
            this.c8yForEnableVirtualScroll = false;
            /**
             * Sets mode of virtual scroller instance.
             * window is used for case when whole viewport is scrolled.
             * fixed can be used on inner-scroll containers.
             */
            this.c8yForVirtualScrollStrategy = 'window';
            /**
             * The number of items currently loaded in the list.
             */
            this.c8yForCount = new i0.EventEmitter();
            this.count = 0;
        }
        Object.defineProperty(ForOfDirective.prototype, "shouldUseLoadMoreButton", {
            get: function () {
                return (this.loadMoreMode === 'auto' || this.loadMoreMode === 'show' || this.loadMoreMode === 'hidden');
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ForOfDirective.prototype, "hasMoreData", {
            get: function () {
                return this.loadMore && this.loadMore.hasMore;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ForOfDirective.prototype, "length", {
            get: function () {
                return this.cachedData.length;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ForOfDirective.prototype, "c8yForOf", {
            /**
             * The data setter. Must be a response from @c8y/data or an observable.
             * You can pass an observable with null to explicitly clear the list.
             */
            set: function (fetchData) {
                var _this = this;
                if (fetchData) {
                    this.obs$ = (rxjs.isObservable(fetchData) ? fetchData : rxjs.of(fetchData)).pipe(operators.map(function (result) {
                        if (result === null) {
                            _this.paging = null;
                            return [];
                        }
                        var paging = result.paging, data = result.data;
                        _this.paging = paging;
                        return data;
                    }));
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ForOfDirective.prototype, "c8yForLoadMore", {
            /**
             * The mode setter:
             *  - auto: Tries to automatically load more data (default maximum 10 iterations; can be
             *          change with maxIterations settings).
             *  - show: Shows a load more button for the user to decide
             *  - none: Doesn't perform any load more action.
             *  - hidden: Loads more data automatically but with no visible button for the user.
             */
            set: function (type) {
                this.loadMoreMode = type;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ForOfDirective.prototype, "c8yForPipe", {
            /**
             * The pipe setter to attach any rxjs pipe to the current and more loaded data.
             */
            set: function (dataPipe) {
                if (dataPipe) {
                    this.dataPipe = dataPipe;
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ForOfDirective.prototype, "c8yForNotFound", {
            /**
             * A template to use if no data is found at all (e.g. if you apply a filter pipe).
             */
            set: function (notFoundTemplate) {
                this.notFoundTemplate = notFoundTemplate;
                if (this.loadMore) {
                    this.loadMore.noMoreDataHint = notFoundTemplate;
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ForOfDirective.prototype, "c8yForMaxIterations", {
            /**
             * The maximum numbers of iterations to call data from the api.
             */
            set: function (maxIterations) {
                this.maxIterations = maxIterations;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ForOfDirective.prototype, "c8yForLoadingTemplate", {
            /**
             * A custom loading component.
             */
            set: function (loadingTemplate) {
                this.loadingTemplate = loadingTemplate;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ForOfDirective.prototype, "c8yForLoadNextLabel", {
            /**
             * Load next text label.
             */
            set: function (loadNextLabel) {
                this.loadNextLabel = loadNextLabel;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ForOfDirective.prototype, "c8yForRealtime", {
            /**
             * A RealtimeService instance.
             */
            set: function (source) {
                this.realtime = source;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ForOfDirective.prototype, "c8yForRealtimeOptions", {
            /**
             * Realtime options.
             */
            set: function (realtimeOptions) {
                this.realtimeOptions = realtimeOptions;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ForOfDirective.prototype, "c8yForComparator", {
            /**
             * A comparator function for comparing list items. Used to determine
             * the position at which a new element should be added to the list.
             */
            set: function (comparator) {
                this.comparator = comparator;
            },
            enumerable: false,
            configurable: true
        });
        ForOfDirective.prototype.ngOnInit = function () {
            this.handleRealtime();
        };
        ForOfDirective.prototype.ngOnChanges = function (changes) {
            var _this = this;
            if (this.obs$ && (changes.c8yForPipe || changes.c8yForOf)) {
                this.unsubscribePaging();
                if (this.virtualScrollInstance) {
                    this.virtualScrollInstance.filterPipe = this.dataPipe;
                    window.scrollTo({ top: 0 });
                }
                // only re-rendering  on filtering if all data is already loaded
                // from the backend
                var reRender_1 = !this.hasMoreData && !!changes.c8yForPipe && !changes.c8yForOf;
                if (reRender_1) {
                    this.obs$ = rxjs.of(this.cachedData);
                }
                this.pagingSub = this.obs$
                    .pipe(operators.tap(function (data) {
                    if (!reRender_1) {
                        _this.cachedData = data;
                    }
                }))
                    .pipe(function (src) { return _this.dataPipe(src); })
                    .subscribe(function (data) {
                    _this.updateCount(data.length);
                    _this.render(data, reRender_1);
                });
            }
        };
        ForOfDirective.prototype.ngOnDestroy = function () {
            this.unsubscribePaging();
            this.unsubscribe$.next();
            this.unsubscribe$.complete();
        };
        ForOfDirective.prototype.handleRealtime = function () {
            if (this.realtime) {
                this.handleRealtimeCreate();
                this.handleRealtimeUpdate();
                this.handleRealtimeDelete();
            }
        };
        /**
         * On create notification:
         * - if item passes data pipe, then insert it.
         * @private
         */
        ForOfDirective.prototype.handleRealtimeCreate = function () {
            var _this = this;
            var entityOrId = this.realtimeOptions.entityOrId;
            this.realtime
                .onCreate$(entityOrId)
                .pipe(function (item$) { return _this.itemDataPipe(item$); }, operators.filter(function (item) { return item; }), operators.takeUntil(this.unsubscribe$))
                .subscribe(function (item) { return _this.insert(item); });
        };
        /**
         * On update notification:
         * - if item is displayed and passes data pipe, then update it,
         * - if item is displayed and doesn't pass data pipe, then remove it (if `removeOnUpdate` is true),
         * - if item is not displayed and passes data pipe, then insert it (if `insertOnUpdate` is true),
         * - if item is not displayed and doesn't pass data pipe, then ignore it.
         * @private
         */
        ForOfDirective.prototype.handleRealtimeUpdate = function () {
            var _this = this;
            var entityOrId = this.realtimeOptions.entityOrId;
            this.realtime
                .onUpdate$(entityOrId)
                .pipe(function (item$) { return rxjs.combineLatest([
                item$,
                item$.pipe(function (src) { return _this.itemDataPipe(src); }, operators.map(function (item) { return item !== undefined; }))
            ]); }, operators.takeUntil(this.unsubscribe$))
                .subscribe(function (_a) {
                var _b = __read(_a, 2), item = _b[0], passesDataPipe = _b[1];
                var _c = _this.realtimeOptions, insertOnUpdate = _c.insertOnUpdate, removeOnUpdate = _c.removeOnUpdate;
                var displayed = _this.isDisplayed(coercion.coerceNumberProperty(item.id));
                if (displayed) {
                    if (passesDataPipe) {
                        _this.update(item);
                    }
                    else if (removeOnUpdate) {
                        _this.remove(coercion.coerceNumberProperty(item.id));
                    }
                }
                else if (passesDataPipe && insertOnUpdate) {
                    _this.insert(item);
                }
            });
        };
        /**
         * On delete notification:
         * - remove item from the list (if not there, it will be just ignored).
         * @private
         */
        ForOfDirective.prototype.handleRealtimeDelete = function () {
            var _this = this;
            var entityOrId = this.realtimeOptions.entityOrId;
            this.realtime
                .onDelete$(entityOrId)
                .pipe(operators.takeUntil(this.unsubscribe$))
                .subscribe(function (id) { return _this.remove(coercion.coerceNumberProperty(id)); });
        };
        ForOfDirective.prototype.render = function (data, reRender) {
            var _this = this;
            if (reRender === void 0) { reRender = false; }
            if (this.c8yForEnableVirtualScroll) {
                if (!this.virtualScrollInstance) {
                    this.virtualScrollInstance = this.createVirtualScrollWrapperComponent();
                    if (this.shouldUseLoadMoreButton) {
                        this.loadMore = this.createLoadMoreButtonComponent(false);
                    }
                }
                this.setVirtualScrollContents(data);
                return;
            }
            this.vcr.clear();
            data.forEach(function (item, index) {
                var context = {
                    $implicit: item,
                    index: index,
                    length: _this.length,
                    hasMore: _this.hasMoreData,
                    loadMoreComponent: _this.loadMore
                };
                _this.vcr.createEmbeddedView(_this.tpl, context);
            });
            if (this.shouldUseLoadMoreButton) {
                this.loadMore = this.createLoadMoreButtonComponent(reRender);
            }
        };
        ForOfDirective.prototype.append = function (data) {
            var _this = this;
            if (this.c8yForEnableVirtualScroll) {
                this.appendVirtualScrollContent(data);
                return;
            }
            data.forEach(function (item) {
                var index = _this.shouldUseLoadMoreButton ? _this.vcr.length - 1 : _this.vcr.length;
                var context = {
                    $implicit: item,
                    index: index,
                    length: _this.length,
                    hasMore: _this.hasMoreData,
                    loadMoreComponent: _this.loadMore
                };
                _this.vcr.createEmbeddedView(_this.tpl, context, index);
            });
        };
        ForOfDirective.prototype.loadMoreData = function (data) {
            if (data.length > 0) {
                this.updateCount(data.length);
                this.append(data);
            }
        };
        ForOfDirective.prototype.createLoadMoreButtonComponent = function (reRender) {
            var _this = this;
            var componentFactory = this.componentFactoryResolver.resolveComponentFactory(LoadMoreComponent);
            var componentRef = this.vcr.createComponent(componentFactory);
            var instance = componentRef.instance;
            instance.paging = this.paging;
            instance.useIntersection = this.loadMoreMode === 'auto' || this.loadMoreMode === 'hidden';
            instance.hidden = this.loadMoreMode === 'hidden';
            instance.maxIterations = this.maxIterations;
            instance.noMoreDataHint = this.notFoundTemplate;
            instance.loadingTemplate = this.loadingTemplate;
            instance.loadNextLabel = this.loadNextLabel;
            this.pagingSub = instance.onLoad
                .pipe(operators.map(function (data) { return _this.checkForDuplicates(data); }), operators.tap(function (data) {
                _this.cachedData = _this.cachedData.concat(data);
            }))
                .pipe(function (src) { return _this.dataPipe(src); })
                .subscribe(function (data) { return _this.loadMoreData(data); });
            if (reRender) {
                lodashEs.assign(instance, this.loadMore);
            }
            return instance;
        };
        ForOfDirective.prototype.createVirtualScrollWrapperComponent = function () {
            var componentFactory = this.componentFactoryResolver.resolveComponentFactory(VirtualScrollerWrapperComponent);
            var componentRef = this.vcr.createComponent(componentFactory);
            var instance = componentRef.instance;
            instance.items = this.cachedData;
            instance.itemHeight = this.c8yForVirtualScrollElementSize;
            instance.template = this.tpl;
            instance.strategy = this.c8yForVirtualScrollStrategy;
            instance.containerHeight = this.c8yForVirtualScrollContainerHeight;
            return instance;
        };
        ForOfDirective.prototype.insert = function (item) {
            var index = 0;
            if (this.comparator && this.cachedData.length) {
                var comparisionResult = void 0;
                do {
                    var view = this.vcr.get(index);
                    var itemB = lodashEs.get(view, 'context.$implicit');
                    comparisionResult = item && itemB ? this.comparator(item, itemB) : 0;
                    if (comparisionResult <= 0) {
                        index++;
                    }
                } while (comparisionResult <= 0 && index < this.cachedData.length);
            }
            // Do not append elements after the last one currently loaded,
            // as it may belong further down there on the list and will
            // be eventually loaded with one of the next pages.
            if (index < this.cachedData.length || this.cachedData.length === 0) {
                var context = {
                    $implicit: item,
                    index: index,
                    length: this.length,
                    hasMore: this.hasMoreData
                };
                this.cachedData.splice(index, 0, item);
                var viewRef = this.tpl.createEmbeddedView(context);
                this.vcr.insert(viewRef, index);
                this.updateCount(1);
            }
        };
        ForOfDirective.prototype.update = function (updatedItem) {
            this.forMatchingEmbeddedViewRef(function (item) { return item && updatedItem && item.id === updatedItem.id; }, function (view) {
                view.context.$implicit = updatedItem;
                view.markForCheck();
            });
        };
        ForOfDirective.prototype.remove = function (idToRemove) {
            if (this.isDisplayed(idToRemove)) {
                this.updateCount(-1);
            }
            this.forMatchingEmbeddedViewRef(function (item) { return item && coercion.coerceNumberProperty(item.id, NaN) === idToRemove; }, function (view) { return view.destroy(); });
        };
        ForOfDirective.prototype.updateCount = function (countChange) {
            this.count += countChange;
            this.c8yForCount.emit(this.count);
        };
        ForOfDirective.prototype.isDisplayed = function (idToCheck) {
            var displayed = false;
            this.forMatchingEmbeddedViewRef(function (item) { return item && coercion.coerceNumberProperty(item.id, NaN) === idToCheck; }, function () { displayed = true; });
            return displayed;
        };
        ForOfDirective.prototype.forMatchingEmbeddedViewRef = function (filterFn, callbackFn) {
            for (var i = 0; i < this.vcr.length; i++) {
                var view = this.vcr.get(i);
                var item = lodashEs.get(view, 'context.$implicit');
                if (filterFn(item)) {
                    callbackFn(view);
                }
            }
        };
        ForOfDirective.prototype.checkForDuplicates = function (data) {
            var _this = this;
            return this.realtime
                ? data.filter(function (item) { return !_this.cachedData.some(function (cached) { return cached.id === item.id; }); })
                : data;
        };
        ForOfDirective.prototype.unsubscribePaging = function () {
            if (this.pagingSub) {
                this.pagingSub.unsubscribe();
            }
        };
        ForOfDirective.prototype.setVirtualScrollContents = function (items) {
            if (this.c8yForEnableVirtualScroll && this.virtualScrollInstance) {
                this.virtualScrollInstance.items = items;
                this.virtualScrollInstance.apply();
            }
        };
        ForOfDirective.prototype.appendVirtualScrollContent = function (items) {
            if (this.c8yForEnableVirtualScroll && this.virtualScrollInstance) {
                this.virtualScrollInstance.items = this.virtualScrollInstance.items.concat(items);
                this.virtualScrollInstance.apply();
            }
        };
ForOfDirective.ɵfac = function ForOfDirective_Factory(t) { return new (t || ForOfDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver)); };
ForOfDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: ForOfDirective, selectors: [["", "c8yFor", ""]], inputs: { c8yForEnableVirtualScroll: "c8yForEnableVirtualScroll", c8yForVirtualScrollStrategy: "c8yForVirtualScrollStrategy", c8yForOf: "c8yForOf", c8yForLoadMore: "c8yForLoadMore", c8yForPipe: "c8yForPipe", c8yForNotFound: "c8yForNotFound", c8yForMaxIterations: "c8yForMaxIterations", c8yForLoadingTemplate: "c8yForLoadingTemplate", c8yForLoadNextLabel: "c8yForLoadNextLabel", c8yForRealtime: "c8yForRealtime", c8yForRealtimeOptions: "c8yForRealtimeOptions", c8yForComparator: "c8yForComparator", c8yForVirtualScrollElementSize: "c8yForVirtualScrollElementSize", c8yForVirtualScrollContainerHeight: "c8yForVirtualScrollContainerHeight" }, outputs: { c8yForCount: "c8yForCount" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ForOfDirective, [{
        type: i0.Directive,
        args: [{
                selector: '[c8yFor]'
            }]
    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ComponentFactoryResolver }]; }, { c8yForEnableVirtualScroll: [{
            type: i0.Input
        }], c8yForVirtualScrollStrategy: [{
            type: i0.Input
        }], c8yForCount: [{
            type: i0.Output
        }], c8yForOf: [{
            type: i0.Input
        }], c8yForLoadMore: [{
            type: i0.Input
        }], c8yForPipe: [{
            type: i0.Input
        }], c8yForNotFound: [{
            type: i0.Input
        }], c8yForMaxIterations: [{
            type: i0.Input
        }], c8yForLoadingTemplate: [{
            type: i0.Input
        }], c8yForLoadNextLabel: [{
            type: i0.Input
        }], c8yForRealtime: [{
            type: i0.Input
        }], c8yForRealtimeOptions: [{
            type: i0.Input
        }], c8yForComparator: [{
            type: i0.Input
        }], c8yForVirtualScrollElementSize: [{
            type: i0.Input
        }], c8yForVirtualScrollContainerHeight: [{
            type: i0.Input
        }] }); })();
        return ForOfDirective;
    }());
    ForOfDirective.ctorParameters = function () { return [
        { type: i0.TemplateRef },
        { type: i0.ViewContainerRef },
        { type: i0.ComponentFactoryResolver }
    ]; };
    ForOfDirective.propDecorators = {
        c8yForOf: [{ type: i0.Input }],
        c8yForLoadMore: [{ type: i0.Input }],
        c8yForPipe: [{ type: i0.Input }],
        c8yForNotFound: [{ type: i0.Input }],
        c8yForMaxIterations: [{ type: i0.Input }],
        c8yForLoadingTemplate: [{ type: i0.Input }],
        c8yForLoadNextLabel: [{ type: i0.Input }],
        c8yForRealtime: [{ type: i0.Input }],
        c8yForRealtimeOptions: [{ type: i0.Input }],
        c8yForComparator: [{ type: i0.Input }],
        c8yForEnableVirtualScroll: [{ type: i0.Input }],
        c8yForVirtualScrollElementSize: [{ type: i0.Input }],
        c8yForVirtualScrollStrategy: [{ type: i0.Input }],
        c8yForVirtualScrollContainerHeight: [{ type: i0.Input }],
        c8yForCount: [{ type: i0.Output }]
    };

    /*
     * Humanize an application name and translates it.
     * Usage:
     *   appNameOrApp | humanizeAppName | async
    */
    var HumanizeAppNamePipe = /** @class */ (function () {
        function HumanizeAppNamePipe(translateService) {
            this.translateService = translateService;
            this.internalApps = {
                administration: 'Administration',
                cockpit: 'Cockpit',
                devicemanagement: 'Device management'
            };
        }
        HumanizeAppNamePipe.prototype.transform = function (appNameOrApp) {
            if (appNameOrApp === void 0) { appNameOrApp = 'Cumulocity'; }
            var appName = this.getAppName(appNameOrApp);
            var text;
            if (this.isPublicApp(appNameOrApp)) {
                text = gettext('{{ appName | translate }} (public)');
            }
            else {
                text = appName;
            }
            return this.translateService.stream(text, { appName: appName });
        };
        HumanizeAppNamePipe.prototype.getAppName = function (appNameOrApp) {
            var appName = this.getFirstDefined([
                lodash.get(appNameOrApp, 'name'),
                lodash.get(appNameOrApp, 'contextPath'),
                appNameOrApp
            ]) || '';
            return this.internalApps[appName] || this.humanize(appName);
        };
        HumanizeAppNamePipe.prototype.getFirstDefined = function (values) {
            return lodash.find(values, lodash.negate(lodash.isUndefined));
        };
        HumanizeAppNamePipe.prototype.isPublicApp = function (appNameOrApp) {
            return Boolean(lodash.get(appNameOrApp, 'public'));
        };
        HumanizeAppNamePipe.prototype.humanize = function (str) {
            if (str === void 0) { str = ''; }
            var result = str.replace(/_/g, ' ').split('');
            result[0] = (result[0] || '').toUpperCase();
            return result.join('');
        };
HumanizeAppNamePipe.ɵfac = function HumanizeAppNamePipe_Factory(t) { return new (t || HumanizeAppNamePipe)(ɵngcc0.ɵɵdirectiveInject(ɵngcc4.TranslateService, 16)); };
HumanizeAppNamePipe.ɵpipe = /*@__PURE__*/ ɵngcc0.ɵɵdefinePipe({ name: "humanizeAppName", type: HumanizeAppNamePipe, pure: true });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HumanizeAppNamePipe, [{
        type: i0.Pipe,
        args: [{ name: 'humanizeAppName' }]
    }], function () { return [{ type: ɵngcc4.TranslateService }]; }, null); })();
        return HumanizeAppNamePipe;
    }());
    HumanizeAppNamePipe.ctorParameters = function () { return [
        { type: i1$1.TranslateService }
    ]; };

    /*
     * Humanize any string
     * Usage:
     *   'something' | humanize
    */
    var HumanizePipe = /** @class */ (function () {
        function HumanizePipe() {
        }
        HumanizePipe.humanize = function (str) {
            if (str === void 0) { str = ''; }
            str = str
                .replace(/\./g, ' ')
                .replace(/c8y[\s,_]*/gi, '')
                .replace(/_/g, ' ')
                .replace(/([A-Z][a-z])/g, ' $1')
                .replace(/^\$\.?/, '')
                .replace(/^\s*/, '')
                .replace(/\s*$/, '')
                .replace(/\s+/g, ' ');
            return lodashEs.upperFirst(str);
        };
        HumanizePipe.prototype.transform = function (str) {
            return HumanizePipe.humanize(str);
        };
HumanizePipe.ɵfac = function HumanizePipe_Factory(t) { return new (t || HumanizePipe)(); };
HumanizePipe.ɵpipe = /*@__PURE__*/ ɵngcc0.ɵɵdefinePipe({ name: "humanize", type: HumanizePipe, pure: true });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HumanizePipe, [{
        type: i0.Pipe,
        args: [{ name: 'humanize' }]
    }], function () { return []; }, null); })();
        return HumanizePipe;
    }());

    /**
     * Allows to set a icon. Switches between c8y default icons
     * and font awesome icons
     * @example <i [c8yIcon]="'clock'">
     */
    var IconDirective = /** @class */ (function () {
        function IconDirective(el, renderer) {
            this.el = el;
            this.renderer = renderer;
            this.c8yMatch = /^c8y-/;
            this.klasses = [];
            this.currentClasses = '';
        }
        Object.defineProperty(IconDirective.prototype, "c8yIcon", {
            set: function (icon) {
                this.updateIcon(icon);
            },
            enumerable: false,
            configurable: true
        });
        IconDirective.prototype.isC8y = function (icon) {
            return this.c8yMatch.test(icon);
        };
        IconDirective.prototype.getClasses = function (icon) {
            if (icon === void 0) { icon = ''; }
            var classes = '';
            if (icon) {
                var _icon = icon.trim();
                var isC8y = this.isC8y(_icon);
                var iconClass = isC8y ? _icon.replace(this.c8yMatch, 'c8y-icon-') : "dlt-c8y-icon-" + _icon;
                classes = (isC8y ? 'c8y-icon' : '') + " " + iconClass;
            }
            return classes;
        };
        IconDirective.prototype.updateIcon = function (icon) {
            var _this = this;
            var newClasses = this.getClasses(icon);
            if (newClasses !== this.currentClasses) {
                this.currentClasses.split(/\s/).filter(function (c) { return c; }).forEach(function (klass) {
                    _this.renderer.removeClass(_this.el.nativeElement, klass);
                });
                newClasses.split(/\s/).filter(function (c) { return c; }).forEach(function (klass) {
                    _this.renderer.addClass(_this.el.nativeElement, klass);
                });
                this.currentClasses = newClasses;
            }
        };
IconDirective.ɵfac = function IconDirective_Factory(t) { return new (t || IconDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };
IconDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: IconDirective, selectors: [["", "c8yIcon", ""]], inputs: { c8yIcon: "c8yIcon" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(IconDirective, [{
        type: i0.Directive,
        args: [{
                selector: '[c8yIcon]'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }]; }, { c8yIcon: [{
            type: i0.Input
        }] }); })();
        return IconDirective;
    }());
    IconDirective.ctorParameters = function () { return [
        { type: i0.ElementRef },
        { type: i0.Renderer2 }
    ]; };
    IconDirective.propDecorators = {
        c8yIcon: [{ type: i0.Input }]
    };
    var ICONS = [
        'home',
        'th',
        'bar-chart-o',
        'tasks',
        'tachometer',
        'bell',
        'puzzle-piece',
        'map-marker',
        'location-arrow',
        'globe',
        'power-off',
        'desktop',
        'laptop',
        'mobile',
        'signal',
        'qrcode',
        'file',
        'file-text',
        'folder',
        'folder-open',
        'archive',
        'ssd',
        'book',
        'bookmark',
        'tag',
        'flag',
        'search',
        'heart',
        'star',
        'bolt',
        'cog',
        'cogs',
        'wrench',
        'ban',
        'user',
        'users',
        'sign-in',
        'sign-out',
        'upload',
        'download',
        'cloud-upload',
        'cloud-download',
        'cloud',
        'hourglass',
        'refresh',
        'repeat',
        'undo',
        'lock',
        'unlock',
        'info',
        'question-circle',
        'exclamation-circle',
        'bug',
        'calendar',
        'random',
        'asterisk',
        'key',
        'link',
        'chain-broken',
        'external-link',
        'picture-o',
        'comment',
        'bullhorn',
        'phone',
        'lightbulb-o',
        'flask',
        'cloud-network',
        'exchange',
        'code-fork',
        'keyboard-o',
        'terminal',
        'code',
        'clipboard',
        'pencil',
        'envelope',
        'inbox',
        'reply',
        'share',
        'thumbs-up',
        'thumbs-down',
        'check',
        'plus',
        'expand',
        'compress',
        'arrows',
        'arrow-up',
        'arrow-down',
        'arrow-left',
        'arrow-right',
        'th-list',
        'bars',
        'table',
        'columns',
        'filter',
        'sort',
        'sort-up',
        'sort-down',
        'ellipsis-h',
        'ellipsis-v',
        'rss'
    ];

    /**
     * Decorator to memoize function results.
     * @param resolver Cache key resolver function, used by memoize from lodash.
     */
    function memoize(resolver) {
        return function (target, fnName, descriptor) {
            var fn = descriptor.value;
            descriptor.value = function () {
                var args = [];
                for (var _i = 0; _i < arguments.length; _i++) {
                    args[_i] = arguments[_i];
                }
                var memoizedFnName = "_" + fnName + "Memoized";
                if (!this[memoizedFnName]) {
                    this[memoizedFnName] = lodashEs.memoize(fn, resolver);
                }
                return this[memoizedFnName].apply(this, args);
            };
        };
    }

    var Permissions = /** @class */ (function () {
        function Permissions(appState, inventory, user) {
            this.appState = appState;
            this.inventory = inventory;
            this.user = user;
        }
        /**
         * Checks if the current user has write permissions for the given mo.
         * (either through global role, individual device permissions or via inventory roles).
         *
         * @param {array} roleIds Array of roles which the current user should have.
         * @param {object} mo The managed object for which we are checking whether the user has access.
         */
        Permissions.prototype.canEdit = function (roleIds, mo) {
            return this.checkIfCanEdit(roleIds, mo);
        };
        Permissions.prototype.hasRole = function (roleId) {
            var currentUser = this.appState.currentUser.value;
            if (!currentUser) {
                throw new Error('Roles can only be requested if the user is logged in.');
            }
            return this.user.hasRole(currentUser, roleId);
        };
        Permissions.prototype.hasAllRoles = function (roleIds) {
            var currentUser = this.appState.currentUser.value;
            if (!currentUser) {
                throw new Error('Roles can only be requested if the user is logged in.');
            }
            return this.user.hasAllRoles(currentUser, roleIds);
        };
        Permissions.prototype.hasAnyRole = function (roleIds) {
            var currentUser = this.appState.currentUser.value;
            if (!currentUser) {
                throw new Error('Roles can only be requested if the user is logged in.');
            }
            return this.user.hasAnyRole(currentUser, roleIds);
        };
        Permissions.prototype.checkIfOwner = function (mo) {
            return __awaiter(this, void 0, void 0, function () {
                var currentUserName, _a, data, res;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0: return [4 /*yield*/, this.appState.currentUser.value.userName];
                        case 1:
                            currentUserName = _b.sent();
                            return [4 /*yield*/, this.inventory.detail(mo.id)];
                        case 2:
                            _a = _b.sent(), data = _a.data, res = _a.res;
                            return [2 /*return*/, currentUserName === data.owner];
                    }
                });
            });
        };
        Permissions.prototype.checkWithRequest = function (mo) {
            var moName = mo.name;
            var moId = mo.id;
            var partialUpdateObject = {
                id: moId,
                name: moName
            };
            return this.inventory
                .update(partialUpdateObject)
                .then(function (success) {
                return true;
            })
                .catch(function (err) {
                return false;
            });
        };
        Permissions.prototype.checkIfCanEdit = function (roleIds, mo) {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.hasAnyRole(roleIds)];
                        case 1:
                            if (!_a.sent()) return [3 /*break*/, 2];
                            return [2 /*return*/, true];
                        case 2: return [4 /*yield*/, this.checkIfOwner(mo)];
                        case 3:
                            if (!_a.sent()) return [3 /*break*/, 4];
                            return [2 /*return*/, true];
                        case 4: return [4 /*yield*/, this.checkWithRequest(mo)];
                        case 5:
                            if (_a.sent()) {
                                return [2 /*return*/, true];
                            }
                            _a.label = 6;
                        case 6: return [2 /*return*/, false];
                    }
                });
            });
        };
Permissions.ɵfac = function Permissions_Factory(t) { return new (t || Permissions)(ɵngcc0.ɵɵinject(AppStateService), ɵngcc0.ɵɵinject(ɵngcc3.InventoryService), ɵngcc0.ɵɵinject(ɵngcc3.UserService)); };
Permissions.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: Permissions, factory: function (t) { return Permissions.ɵfac(t); } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Permissions, [{
        type: i0.Injectable
    }], function () { return [{ type: AppStateService }, { type: ɵngcc3.InventoryService }, { type: ɵngcc3.UserService }]; }, null); })();
        return Permissions;
    }());
    Permissions.ctorParameters = function () { return [
        { type: AppStateService },
        { type: client.InventoryService },
        { type: client.UserService }
    ]; };
    __decorate([
        memoize(lodashEs.property('id'))
    ], Permissions.prototype, "checkIfOwner", null);
    __decorate([
        memoize(lodashEs.property('id'))
    ], Permissions.prototype, "checkWithRequest", null);

    /**
     * A structural directive that conditionally includes a template only if the user has
     * all or any of the roles passed as an input. By default the directive checks all roles:
     *
     * ```
     * <button *c8yIfAllowed="['ROLE_RECORD_DELETE', 'ROLE_ENTRY_DELETE']" (click)="delete()" title="Delete">
     *   Delete
     * </button>
     * ```
     *
     * To check if the user has any of the required roles to view the element you need to use the `allowAny` input:
     *
     * ```
     * <button *c8yIfAllowed="['ROLE_RECORD_DELETE', 'ROLE_ENTRY_DELETE']; allowAny: true" (click)="delete()" title="Delete">
     *   Delete
     * </button>
     * ```
     *
     * or use the shorter version
     *
     * ```
     * <button *c8yIfAllowed="['ROLE_RECORD_DELETE', 'ROLE_ENTRY_DELETE']; allowAny" (click)="delete()" title="Delete">
     *   Delete
     * </button>
     * ```
     */
    var IfAllowedDirective = /** @class */ (function () {
        function IfAllowedDirective(template, container, permissions) {
            this.template = template;
            this.container = container;
            this.permissions = permissions;
            this.allowAny = false;
        }
        Object.defineProperty(IfAllowedDirective.prototype, "c8yIfAllowed", {
            /**
             * One or many roles required for the element to be rendered
             */
            set: function (roleIds) {
                this.rolesIds = Array.isArray(roleIds) ? roleIds : !!roleIds ? [roleIds] : [];
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(IfAllowedDirective.prototype, "c8yIfAllowedAllowAny", {
            /**
             * Switches to the mode where at least one of the provided roles is sufficient for the element to be rendered
             */
            set: function (allowAny) {
                this.allowAny = allowAny === null || allowAny;
            },
            enumerable: false,
            configurable: true
        });
        IfAllowedDirective.prototype.ngOnInit = function () {
            if (!this.rolesIds ||
                !this.rolesIds.length ||
                (this.allowAny
                    ? this.permissions.hasAnyRole(this.rolesIds)
                    : this.permissions.hasAllRoles(this.rolesIds))) {
                this.container.createEmbeddedView(this.template);
            }
        };
IfAllowedDirective.ɵfac = function IfAllowedDirective_Factory(t) { return new (t || IfAllowedDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(Permissions)); };
IfAllowedDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: IfAllowedDirective, selectors: [["", "c8yIfAllowed", ""]], inputs: { c8yIfAllowed: "c8yIfAllowed", c8yIfAllowedAllowAny: "c8yIfAllowedAllowAny" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(IfAllowedDirective, [{
        type: i0.Directive,
        args: [{
                selector: '[c8yIfAllowed]'
            }]
    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.ViewContainerRef }, { type: Permissions }]; }, { c8yIfAllowed: [{
            type: i0.Input
        }], c8yIfAllowedAllowAny: [{
            type: i0.Input
        }] }); })();
        return IfAllowedDirective;
    }());
    IfAllowedDirective.ctorParameters = function () { return [
        { type: i0.TemplateRef },
        { type: i0.ViewContainerRef },
        { type: Permissions }
    ]; };
    IfAllowedDirective.propDecorators = {
        c8yIfAllowed: [{ type: i0.Input }],
        c8yIfAllowedAllowAny: [{ type: i0.Input }]
    };

    var LoadingComponent = /** @class */ (function () {
        function LoadingComponent() {
        }
LoadingComponent.ɵfac = function LoadingComponent_Factory(t) { return new (t || LoadingComponent)(); };
LoadingComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: LoadingComponent, selectors: [["c8y-loading"]], decls: 7, vars: 0, consts: [[1, "p-24", "p-relative", "d-inline-block"], [1, "spinner"], [1, "rect1"], [1, "rect2"], [1, "rect3"], [1, "rect4"], [1, "rect5"]], template: function LoadingComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵelement(2, "div", 2);
        ɵngcc0.ɵɵelement(3, "div", 3);
        ɵngcc0.ɵɵelement(4, "div", 4);
        ɵngcc0.ɵɵelement(5, "div", 5);
        ɵngcc0.ɵɵelement(6, "div", 6);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LoadingComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-loading',
                template: "\n    <div class=\"p-24 p-relative d-inline-block\" >\n      <div class=\"spinner\">\n        <div class=\"rect1\"></div>\n        <div class=\"rect2\"></div>\n        <div class=\"rect3\"></div>\n        <div class=\"rect4\"></div>\n        <div class=\"rect5\"></div>\n      </div>\n    </div>\n  "
            }]
    }], function () { return []; }, null); })();
        return LoadingComponent;
    }());

    /*
     * Implementation of pure "Mapping" pipe based on
     * https://codeburst.io/angular-bad-practices-eab0e594ce92#389b
     */
    var MapFunctionPipe = /** @class */ (function () {
        function MapFunctionPipe() {
        }
        /*
         * This will be a universal pipe for array mappings. You may add more
         * type checkings and runtime checkings to make sure it works correctly everywhere.
         */
        MapFunctionPipe.prototype.transform = function (value, mappingFunction, thisArg) {
            return mappingFunction.apply(thisArg || this, Array.isArray(value) ? value : [value]);
        };
MapFunctionPipe.ɵfac = function MapFunctionPipe_Factory(t) { return new (t || MapFunctionPipe)(); };
MapFunctionPipe.ɵpipe = /*@__PURE__*/ ɵngcc0.ɵɵdefinePipe({ name: "map", type: MapFunctionPipe, pure: true });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MapFunctionPipe, [{
        type: i0.Pipe,
        args: [{
                name: 'map'
            }]
    }], function () { return []; }, null); })();
        return MapFunctionPipe;
    }());

    var NUMBER_FORMAT_REGEXP = /^(\d+)?\.((\d+)(-(\d+))?)?$/;
    /**
     * Formats a value according to digit options and locale rules.
     * Extends the behavior of Angular's <code>number</code> pipe by
     * providing an option to define if a truncated value should be
     * rounded up or down (with the <code>number</code> pipe the
     * value will be rounded using the "to-nearest" method).
     *
     * ```html
     * <span>{{ 3.45612 | c8yNumber: 'ceil':'1.1-3' }}</span> <!-- 3.457 -->
     * <span>{{ 3.46 | c8yNumber: 'ceil':'1.3-3' }}</span> <!-- 3.460 -->
     * <span>{{ 3.45685 | c8yNumber: 'floor':'1.1-3' }}</span> <!-- 3.456 -->```
     */
    var NumberPipe = /** @class */ (function (_super) {
        __extends(NumberPipe, _super);
        function NumberPipe(locale) {
            return _super.call(this, locale) || this;
        }
        /**
         * @param value The value to be formatted.
         * @param round When the value needs to be truncated defines if it will be rounded up (='ceil') or down (='floor')
         * @param digitsInfo Sets digit and decimal representation.
         * @param locale Specifies what locale format rules to use.
         */
        NumberPipe.prototype.transform = function (value, round, digitsInfo, locale) {
            if (round) {
                var maxFractionPart = 0;
                if (digitsInfo) {
                    var parts = digitsInfo.match(NUMBER_FORMAT_REGEXP);
                    if (parts === null) {
                        throw new Error(digitsInfo + " is not a valid digit info");
                    }
                    maxFractionPart = Number.parseInt(parts[5], 10);
                }
                var multiplicator = Math.pow(10, maxFractionPart);
                value = strToNumber(value);
                value = Math[round](value * multiplicator) / multiplicator;
            }
            return _super.prototype.transform.call(this, value, digitsInfo, locale);
        };
NumberPipe.ɵfac = function NumberPipe_Factory(t) { return new (t || NumberPipe)(ɵngcc0.ɵɵdirectiveInject(i0.LOCALE_ID, 16)); };
NumberPipe.ɵpipe = /*@__PURE__*/ ɵngcc0.ɵɵdefinePipe({ name: "c8yNumber", type: NumberPipe, pure: true });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NumberPipe, [{
        type: i0.Pipe,
        args: [{ name: 'c8yNumber' }]
    }], function () { return [{ type: String, decorators: [{
                type: i0.Inject,
                args: [i0.LOCALE_ID]
            }] }]; }, null); })();
        return NumberPipe;
    }(common.DecimalPipe));
    NumberPipe.ctorParameters = function () { return [
        { type: String, decorators: [{ type: i0.Inject, args: [i0.LOCALE_ID,] }] }
    ]; };
    /**
     * Transforms a string into a number (if needed).
     */
    function strToNumber(value) {
        // Convert strings to numbers
        if (typeof value === 'string' && !isNaN(Number(value) - parseFloat(value))) {
            return Number(value);
        }
        if (typeof value !== 'number') {
            throw new Error(value + " is not a number");
        }
        return value;
    }

    /**
     * Directive to set a DOM node, a TemplateRef or any Component to a container or any node.
     * @example
     * <div *c8yOutlet="template"></div>
     * <div *c8yOutlet="DeviceStatusComponent; properties: { node }"></div>
     * <div *c8yOutlet="nodes"></div>
     *
     *
     * note: If template is instance of HTMLElement (for example, node compiled by angularJS) then there can be
     * only single instance rendered, as only one instance of HTMLElement can exist in DOM.
     * If there is need for displaying same element multiple times, please make sure to inject into
     * this element createCopy function, which should return another instance of given element.
     *
     */
    var OutletDirective = /** @class */ (function () {
        function OutletDirective(viewContainer, resolver, renderer, el) {
            this.viewContainer = viewContainer;
            this.resolver = resolver;
            this.renderer = renderer;
            this.el = el;
            this.properties = {};
        }
        Object.defineProperty(OutletDirective.prototype, "c8yOutlet", {
            /**
             * Directive to set a DOM node, a TemplateRef or any Component to a container or any node.
             * @example
             * <div *c8yOutlet="template"></div>
             * <div *c8yOutlet="DeviceStatusComponent; properties: { node }"></div>
             * <div *c8yOutlet="nodes"></div>
             */
            set: function (template) {
                if (!template) {
                    return;
                }
                if (this._element instanceof Element) {
                    this.renderer.removeChild(this._element.parentElement, this._element);
                }
                this.viewContainer.clear();
                // case TemplateRef -> <div *c8yOutlet="template"></div>
                if (template instanceof i0.TemplateRef) {
                    this.viewContainer.createEmbeddedView(template);
                    // case DOM Element -> <div *c8yOutlet="nodes"></div>
                }
                else if (template instanceof Element) {
                    var parent = this.renderer.parentNode(this.el.nativeElement);
                    this.destroy();
                    /**
                     * Because compiled element can be used only once, we need to create copy of it
                     * in order to display it in multiple locations.
                     * For example standard "More" menu, and its RWD version.
                     */
                    if (template.createCopy) {
                        this._element = template.createCopy();
                    }
                    else {
                        this._element = template;
                    }
                    this.renderer.insertBefore(parent, this._element, this.el.nativeElement);
                    // case Component -> <div *c8yOutlet="DeviceStatusComponent; properties: { node }"></div>
                }
                else {
                    var factory = this.resolver.resolveComponentFactory(template);
                    var component = this.viewContainer.createComponent(factory);
                    lodashEs.assign(component.instance, this.properties);
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(OutletDirective.prototype, "c8yOutletProperties", {
            set: function (value) {
                this.properties = value;
            },
            enumerable: false,
            configurable: true
        });
        OutletDirective.prototype.ngOnDestroy = function () {
            this.destroy();
        };
        OutletDirective.prototype.destroy = function () {
            if (this._element) {
                var _parent = this.renderer.parentNode(this._element);
                this.renderer.removeChild(_parent, this._element);
            }
        };
OutletDirective.ɵfac = function OutletDirective_Factory(t) { return new (t || OutletDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
OutletDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: OutletDirective, selectors: [["", "c8yOutlet", ""]], inputs: { c8yOutlet: "c8yOutlet", c8yOutletProperties: "c8yOutletProperties" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(OutletDirective, [{
        type: i0.Directive,
        args: [{
                selector: '[c8yOutlet]'
            }]
    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ComponentFactoryResolver }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }]; }, { c8yOutlet: [{
            type: i0.Input
        }], c8yOutletProperties: [{
            type: i0.Input
        }] }); })();
        return OutletDirective;
    }());
    OutletDirective.ctorParameters = function () { return [
        { type: i0.ViewContainerRef },
        { type: i0.ComponentFactoryResolver },
        { type: i0.Renderer2 },
        { type: i0.ElementRef }
    ]; };
    OutletDirective.propDecorators = {
        c8yOutlet: [{ type: i0.Input }],
        c8yOutletProperties: [{ type: i0.Input }]
    };

    var ProgressBarComponent = /** @class */ (function () {
        function ProgressBarComponent() {
            this.message = gettext('Loading…');
            this.progress = null;
        }
ProgressBarComponent.ɵfac = function ProgressBarComponent_Factory(t) { return new (t || ProgressBarComponent)(); };
ProgressBarComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ProgressBarComponent, selectors: [["c8y-progress-bar"]], inputs: { message: "message", progress: "progress" }, decls: 4, vars: 3, consts: [[1, "bg-inherit"], ["class", "progress progress-striped active", 4, "ngIf"], ["class", "spinner-snake", 4, "ngIf"], [4, "ngIf"], [1, "progress", "progress-striped", "active"], ["role", "progressbar", "aria-valuemin", "0", "aria-valuemax", "100", 1, "progress-bar"], [1, "spinner-snake"]], template: function ProgressBarComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵtemplate(1, ProgressBarComponent_div_1_Template, 2, 3, "div", 1);
        ɵngcc0.ɵɵtemplate(2, ProgressBarComponent_div_2_Template, 1, 0, "div", 2);
        ɵngcc0.ɵɵtemplate(3, ProgressBarComponent_p_3_Template, 3, 3, "p", 3);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.progress !== null);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.progress === null);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.message);
    } }, directives: [ɵngcc6.NgIf], pipes: [C8yTranslatePipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ProgressBarComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-progress-bar',
                template: "<div class=\"bg-inherit\">\n  <div class=\"progress progress-striped active\" *ngIf=\"progress !== null\">\n    <div\n    class=\"progress-bar\"\n    role=\"progressbar\"\n    [attr.aria-valuenow]=\"progress\"\n    aria-valuemin=\"0\"\n    aria-valuemax=\"100\"\n    [style.width]=\"progress + '%'\"\n    ></div>\n  </div>\n  <div class=\"spinner-snake\" *ngIf=\"progress === null\"></div>\n  <p *ngIf=\"message\">\n    {{ message | translate }}\n  </p>\n</div>\n"
            }]
    }], function () { return []; }, { message: [{
            type: i0.Input
        }], progress: [{
            type: i0.Input
        }] }); })();
        return ProgressBarComponent;
    }());
    ProgressBarComponent.propDecorators = {
        message: [{ type: i0.Input }],
        progress: [{ type: i0.Input }]
    };

    var ShortenUserNamePipe = /** @class */ (function () {
        function ShortenUserNamePipe() {
        }
        ShortenUserNamePipe.prototype.transform = function (_a) {
            var _b = _a.firstName, firstName = _b === void 0 ? '' : _b, _c = _a.lastName, lastName = _c === void 0 ? '' : _c, _d = _a.userName, userName = _d === void 0 ? '' : _d;
            var parsedFirstName = firstName.trim().split(/\s+/).shift().substr(0, 1);
            var parsedLastName = lastName.trim().split(/\s+/).pop();
            if (!parsedLastName) {
                parsedFirstName = firstName.split(/\s+/).shift();
            }
            else {
                parsedFirstName = parsedFirstName ? parsedFirstName + ". " : '';
            }
            return parsedFirstName || parsedLastName ? parsedFirstName + parsedLastName : userName;
        };
ShortenUserNamePipe.ɵfac = function ShortenUserNamePipe_Factory(t) { return new (t || ShortenUserNamePipe)(); };
ShortenUserNamePipe.ɵpipe = /*@__PURE__*/ ɵngcc0.ɵɵdefinePipe({ name: "shortenUserName", type: ShortenUserNamePipe, pure: true });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ShortenUserNamePipe, [{
        type: i0.Pipe,
        args: [{ name: 'shortenUserName' }]
    }], function () { return []; }, null); })();
        return ShortenUserNamePipe;
    }());

    /** The helper UI service for tenant related methods built upon client services. */
    var TenantUiService = /** @class */ (function () {
        function TenantUiService(userService, appStateService, applicationService) {
            this.userService = userService;
            this.appStateService = appStateService;
            this.applicationService = applicationService;
            this.MANAGEMENT = 'management';
            this.ROLE_TENANT_MANAGEMENT_READ = 'ROLE_TENANT_MANAGEMENT_READ';
        }
        /**
         * Checks whether current tenant is the management tenant.
         * @returns True if current tenant is the management tenant.
         */
        TenantUiService.prototype.isManagementTenant = function () {
            return __awaiter(this, void 0, void 0, function () {
                var currentTenant;
                return __generator(this, function (_a) {
                    currentTenant = this.appStateService.currentTenant.value;
                    return [2 /*return*/, this.isManagement(currentTenant)];
                });
            });
        };
        /**
         * Checks whether current tenant is an enterprise tenant.
         * An enterprise tenant is a tenant which has subscribed:
         * - `branding` microservice or `feature-branding` feature app,
         * - `sslmanagement` microservice,
         * - `feature-user-hierarchy` feature app,
         * - `feature-broker` feature app.
         *
         * See https://cumulocity.com/guides/users-guide/enterprise-edition/ for details about such tenants.
         *
         * @returns True, if current tenant is an enterprise tenant.
         */
        TenantUiService.prototype.isEnterpriseTenant = function () {
            return __awaiter(this, void 0, void 0, function () {
                var hasBranding, _a, hasSslManagement, hasUserHierarchy, hasDataBroker;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0: return [4 /*yield*/, this.hasApp({ name: 'branding' })];
                        case 1:
                            _a = (_b.sent());
                            if (_a) return [3 /*break*/, 3];
                            return [4 /*yield*/, this.hasApp({ name: 'feature-branding' })];
                        case 2:
                            _a = (_b.sent());
                            _b.label = 3;
                        case 3:
                            hasBranding = _a;
                            return [4 /*yield*/, this.hasApp({ name: 'sslmanagement' })];
                        case 4:
                            hasSslManagement = _b.sent();
                            return [4 /*yield*/, this.hasApp({ name: 'feature-user-hierarchy' })];
                        case 5:
                            hasUserHierarchy = _b.sent();
                            return [4 /*yield*/, this.hasApp({ name: 'feature-broker' })];
                        case 6:
                            hasDataBroker = _b.sent();
                            return [2 /*return*/, hasBranding && hasSslManagement && hasUserHierarchy && hasDataBroker];
                    }
                });
            });
        };
        /**
         * Checks whether the current user has read access to tenants, i.e.:
         * - the current tenant can create subtenants or it's the management tenant,
         * - the current user has ROLE_TENANT_MANAGEMENT_READ role.
         * @returns True, if the current user has read access to tenants.
         */
        TenantUiService.prototype.canReadTenants = function () {
            var currentTenant = this.appStateService.currentTenant.value;
            var currentUser = this.appStateService.currentUser.value;
            return ((this.isManagement(currentTenant) || currentTenant.allowCreateTenants) &&
                this.userService.hasRole(currentUser, this.ROLE_TENANT_MANAGEMENT_READ));
        };
        /**
         * Returns tenant login option which is preferred.
         *
         * @param All available tenant's login options.
         *
         * @returns Returns ITenantLoginOption.
         *
         * **Example**
         * ```typescript
         *
         *    (() => {
         *      const preferredLoginOption = tenantLoginOptionsService.getPreferredLoginOption(loginOptions);
         *   })();
         * ```
         */
        TenantUiService.prototype.getPreferredLoginOption = function (loginOptions) {
            var defaultFallback = { type: client.TenantLoginOptionType.BASIC, userManagementSource: client.UserManagementSource.INTERNAL };
            if (!loginOptions) {
                return defaultFallback;
            }
            else {
                var visibleLoginOptions = loginOptions.filter(this.isVisibleOnLoginPage);
                return visibleLoginOptions.find(this.isOauthInternal)
                    || visibleLoginOptions.find(this.isBasic)
                    || visibleLoginOptions.find(this.isOauth2)
                    || defaultFallback;
            }
        };
        /**
         * Returns Oauth2 login option if it can be used by UI.
         *
         * @param All available tenant's login options.
         *
         * @returns Returns ITenantLoginOption.
         *
         * **Example**
         * ```typescript
         *
         *    (() => {
         *      const oauth2 = tenantLoginOptionsService.getOauth2Option(loginOptions);
         *   })();
         * ```
         */
        TenantUiService.prototype.getOauth2Option = function (loginOptions) {
            var _this = this;
            return loginOptions.find(function (loginOption) { return _this.isVisibleOnLoginPage(loginOption) && _this.isOauth2(loginOption); });
        };
        /**
         * Callback which checks if login option is visible on login page.
         *
         * **Example**
         * ```typescript
         *
         *    (() => {
         *      const loginOptionsVisibleOnLoginPage = loginOptions.filter(tenantLoginOptionsService.isVisibleOnLoginPage);
         *   })();
         * ```
         */
        TenantUiService.prototype.isVisibleOnLoginPage = function (loginOption) {
            return loginOption.visibleOnLoginPage;
        };
        /**
         * Callback which checks if login option type is 'OAUTH2_INTERNAL'.
         *
         * **Example**
         * ```typescript
         *
         *    (() => {
         *      const oauth2InternalLoginOptions = loginOptions.filter(tenantLoginOptionsService.isOauthInternal);
         *   })();
         * ```
         */
        TenantUiService.prototype.isOauthInternal = function (loginOption) {
            return loginOption.type === client.TenantLoginOptionType.OAUTH2_INTERNAL;
        };
        /**
         * Callback which checks if login option type is 'BASIC'.
         *
         * **Example**
         * ```typescript
         *
         *    (() => {
         *      const basicLoginOptions = loginOptions.filter(tenantLoginOptionsService.isBasic);
         *   })();
         * ```
         */
        TenantUiService.prototype.isBasic = function (loginOption) {
            return loginOption.type === client.TenantLoginOptionType.BASIC;
        };
        /**
         * Callback which checks if login option type is 'OAUTH2' and grantType is 'AUTHORIZATION_CODE'.
         *
         * **Example**
         * ```typescript
         *
         *    (() => {
         *      const oauth2LoginOptions = loginOptions.filter(tenantLoginOptionsService.OAUTH2);
         *   })();
         * ```
         */
        TenantUiService.prototype.isOauth2 = function (loginOption) {
            return loginOption.type === client.TenantLoginOptionType.OAUTH2 && loginOption.grantType === client.GrantType.AUTHORIZATION_CODE;
        };
        TenantUiService.prototype.hasApp = function (app) {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.applicationService.isAvailable(app)];
                        case 1: return [2 /*return*/, (_a.sent()).data];
                    }
                });
            });
        };
        TenantUiService.prototype.isManagement = function (currentTenant) {
            return currentTenant.name === this.MANAGEMENT;
        };
TenantUiService.ɵfac = function TenantUiService_Factory(t) { return new (t || TenantUiService)(ɵngcc0.ɵɵinject(ɵngcc3.UserService), ɵngcc0.ɵɵinject(AppStateService), ɵngcc0.ɵɵinject(ɵngcc3.ApplicationService)); };
TenantUiService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: TenantUiService, factory: function (t) { return TenantUiService.ɵfac(t); } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TenantUiService, [{
        type: i0.Injectable
    }], function () { return [{ type: ɵngcc3.UserService }, { type: AppStateService }, { type: ɵngcc3.ApplicationService }]; }, null); })();
        return TenantUiService;
    }());
    TenantUiService.ctorParameters = function () { return [
        { type: client.UserService },
        { type: AppStateService },
        { type: client.ApplicationService }
    ]; };

    var UserPreferencesStorageLocal = /** @class */ (function () {
        function UserPreferencesStorageLocal() {
            this.LOCAL_STORAGE_KEY = 'userPreferences';
            this.store = {};
            try {
                var jsonStore = window.localStorage.getItem(this.LOCAL_STORAGE_KEY);
                if (jsonStore) {
                    this.store = JSON.parse(jsonStore) || {};
                }
            }
            catch (e) {
                // do nothing
            }
        }
        UserPreferencesStorageLocal.prototype.get = function (key) {
            return rxjs.of(this.store[key]);
        };
        UserPreferencesStorageLocal.prototype.set = function (key, value) {
            this.store[key] = value;
            return this.saveJsonStore();
        };
        UserPreferencesStorageLocal.prototype.saveJsonStore = function () {
            return window.localStorage.setItem(this.LOCAL_STORAGE_KEY, JSON.stringify(this.store));
        };
        return UserPreferencesStorageLocal;
    }());

    var UserPreferencesStorageInventory = /** @class */ (function () {
        function UserPreferencesStorageInventory(inventory) {
            this.inventory = inventory;
            this.TYPE = 'c8y_UserPreference';
        }
        UserPreferencesStorageInventory.prototype.get = function (key) {
            return __awaiter(this, void 0, void 0, function () {
                var data;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.inventory.list({ fragmentType: key })];
                        case 1:
                            data = (_a.sent()).data;
                            return [2 /*return*/, data.length ? data[0][key] : undefined];
                    }
                });
            });
        };
        UserPreferencesStorageInventory.prototype.set = function (key, value) {
            return __awaiter(this, void 0, void 0, function () {
                var data, updateMo, out;
                var _a;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0: return [4 /*yield*/, this.inventory.list({ fragmentType: key })];
                        case 1:
                            data = (_b.sent()).data;
                            updateMo = (_a = {}, _a[key] = value, _a.type = this.TYPE, _a);
                            if (data.length) {
                                updateMo.id = data[0].id;
                                out = this.inventory.update(updateMo);
                            }
                            else {
                                out = this.inventory.create(updateMo);
                            }
                            return [2 /*return*/, out];
                    }
                });
            });
        };
        return UserPreferencesStorageInventory;
    }());

    var UserPreferencesService = /** @class */ (function () {
        function UserPreferencesService(user, inventory, appState) {
            this.user = user;
            this.inventory = inventory;
            this.appState = appState;
            this.LOCAL_STORAGE_KEY = 'userPreferences';
            this.storage = {
                local: new UserPreferencesStorageLocal(),
                inventory: new UserPreferencesStorageInventory(this.inventory)
            };
            this.currentUser = this.appState.currentUser;
        }
        UserPreferencesService.prototype.get = function (key) {
            var _this = this;
            return this.currentUser.pipe(operators.first(), operators.switchMap(function (user) { return _this.getForUser(key, user); }));
        };
        UserPreferencesService.prototype.set = function (key, value) {
            var _this = this;
            return new Promise(function (resolve, reject) {
                _this.currentUser.pipe(operators.first()).subscribe(function (user) {
                    resolve(_this.setForUser(key, value, user));
                }, reject);
            });
        };
        UserPreferencesService.prototype.getForUser = function (key, user) {
            var rawKey = this.getRawKey(key, user);
            var storage = this.getStorage(user);
            return rxjs.from(storage.get(rawKey));
        };
        UserPreferencesService.prototype.setForUser = function (key, value, user) {
            var rawKey = this.getRawKey(key, user);
            var storage = this.getStorage(user);
            return Promise.resolve(storage.set(rawKey, value));
        };
        UserPreferencesService.prototype.getRawKey = function (key, user) {
            var username = user.userName.replace(/\./g, '__');
            return "" + key + username;
        };
        UserPreferencesService.prototype.getStorage = function (user) {
            return this.user.hasAllRoles(user, ['ROLE_INVENTORY_READ', 'ROLE_INVENTORY_ADMIN']) ?
                this.storage.inventory : this.storage.local;
        };
UserPreferencesService.ɵfac = function UserPreferencesService_Factory(t) { return new (t || UserPreferencesService)(ɵngcc0.ɵɵinject(ɵngcc3.UserService), ɵngcc0.ɵɵinject(ɵngcc3.InventoryService), ɵngcc0.ɵɵinject(AppStateService)); };
UserPreferencesService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: UserPreferencesService, factory: function (t) { return UserPreferencesService.ɵfac(t); } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(UserPreferencesService, [{
        type: i0.Injectable
    }], function () { return [{ type: ɵngcc3.UserService }, { type: ɵngcc3.InventoryService }, { type: AppStateService }]; }, null); })();
        return UserPreferencesService;
    }());
    UserPreferencesService.ctorParameters = function () { return [
        { type: client.UserService },
        { type: client.InventoryService },
        { type: AppStateService }
    ]; };

    var ZipService = /** @class */ (function () {
        function ZipService() {
        }
        ZipService.prototype.getEntries = function (zipFile) {
            return new rxjs.Observable(function (subscriber) {
                var reader = new zip.BlobReader(zipFile);
                zip.createReader(reader, function (zipReader) {
                    zipReader.getEntries(function (entries) {
                        subscriber.next(entries);
                        subscriber.complete();
                    });
                }, function (message) {
                    subscriber.error({ message: message });
                });
            });
        };
        ZipService.prototype.getData = function (entry) {
            var data = new rxjs.Observable(function (subscriber) {
                var writer = new zip.BlobWriter();
                entry.getData(writer, function (blob) {
                    subscriber.next(blob);
                    subscriber.complete();
                });
            });
            return data;
        };
        ZipService.prototype.getJsonData = function (zipFile, fileEntryFilter) {
            var _this = this;
            return this.getEntries(zipFile).pipe(operators.map(function (entries) {
                var entryFile = entries.find(function (entry) { return entry.filename === fileEntryFilter.filename; });
                if (!entryFile) {
                    rxjs.throwError("File not found " + JSON.stringify(fileEntryFilter));
                }
                return entryFile;
            }), operators.concatMap(function (entry) { return _this.getData(entry); }), operators.switchMap(function (blob) { return __awaiter(_this, void 0, void 0, function () { return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, blob.text()];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            }); }); }), operators.map(function (text) { return JSON.parse(text); }));
        };
        return ZipService;
    }());

    var TextareaAutoresizeDirective = /** @class */ (function () {
        function TextareaAutoresizeDirective(elementRef) {
            var _this = this;
            this.elementRef = elementRef;
            this.focused = false;
            this.resizeObserver = new window.ResizeObserver(function () { return !_this.focused && _this.resize(); });
        }
        TextareaAutoresizeDirective.prototype.onInput = function () {
            this.resize();
        };
        TextareaAutoresizeDirective.prototype.onFocus = function () {
            this.focused = true;
        };
        TextareaAutoresizeDirective.prototype.onBlur = function () {
            this.focused = false;
        };
        TextareaAutoresizeDirective.prototype.ngOnInit = function () {
            var _this = this;
            var _a;
            this.resizeObserver.observe((_a = this.elementRef) === null || _a === void 0 ? void 0 : _a.nativeElement);
            setTimeout(function () { return _this.resize(); });
        };
        TextareaAutoresizeDirective.prototype.ngOnDestroy = function () {
            var _a;
            this.resizeObserver.unobserve((_a = this.elementRef) === null || _a === void 0 ? void 0 : _a.nativeElement);
        };
        TextareaAutoresizeDirective.prototype.resize = function () {
            var _a;
            this.elementRef.nativeElement.style.height = '32px';
            this.elementRef.nativeElement.style.height = ((_a = this.elementRef) === null || _a === void 0 ? void 0 : _a.nativeElement.scrollHeight) + 'px';
        };
TextareaAutoresizeDirective.ɵfac = function TextareaAutoresizeDirective_Factory(t) { return new (t || TextareaAutoresizeDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
TextareaAutoresizeDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: TextareaAutoresizeDirective, selectors: [["", "c8y-textarea-autoresize", ""]], hostBindings: function TextareaAutoresizeDirective_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("input", function TextareaAutoresizeDirective_input_HostBindingHandler() { return ctx.onInput(); })("focus", function TextareaAutoresizeDirective_focus_HostBindingHandler() { return ctx.onFocus(); })("blur", function TextareaAutoresizeDirective_blur_HostBindingHandler() { return ctx.onBlur(); });
    } } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TextareaAutoresizeDirective, [{
        type: i0.Directive,
        args: [{
                selector: '[c8y-textarea-autoresize]'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { onInput: [{
            type: i0.HostListener,
            args: [':input']
        }], onFocus: [{
            type: i0.HostListener,
            args: [':focus']
        }], onBlur: [{
            type: i0.HostListener,
            args: [':blur']
        }] }); })();
        return TextareaAutoresizeDirective;
    }());
    TextareaAutoresizeDirective.ctorParameters = function () { return [
        { type: i0.ElementRef }
    ]; };
    TextareaAutoresizeDirective.propDecorators = {
        onInput: [{ type: i0.HostListener, args: [':input',] }],
        onFocus: [{ type: i0.HostListener, args: [':focus',] }],
        onBlur: [{ type: i0.HostListener, args: [':blur',] }]
    };

    var OperationResultComponent = /** @class */ (function () {
        function OperationResultComponent() {
        }
OperationResultComponent.ɵfac = function OperationResultComponent_Factory(t) { return new (t || OperationResultComponent)(); };
OperationResultComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: OperationResultComponent, selectors: [["c8y-operation-result"]], inputs: { text: "text", vertical: "vertical", size: "size", type: "type" }, decls: 4, vars: 6, consts: [[1, "d-flex", "a-i-center", 3, "ngClass"], ["viewBox", "0 0 24 24", 3, "ngStyle", 4, "ngIf"], ["class", "text-medium animated fadeIn delay-05 m-t-8 m-b-8", 4, "ngIf"], ["viewBox", "0 0 24 24", 3, "ngStyle"], ["stroke", "none", "stroke-width", "1", "fill", "none", "fill-rule", "evenodd", "stroke-linecap", "round"], ["stroke", "var(--input-validation-success, #008800)", "stroke-width", "2", "stroke-linejoin", "round", "points", "7.8678862 11.508 11.9656988 15.984 20.2137797 7.44836856", "stroke-dasharray", "28", "stroke-dashoffset", "28", 1, "check-anim"], ["d", "M18.3656773,3.02795925 C16.5689809,1.75089408 14.3721808,1 12,1 C5.92486775,1 1,5.92486775 1,12 C1,18.0751322 5.92486775,23 12,23 C18.0751322,23 23,18.0751322 23,12", "id", "Path", "stroke", "var(--input-validation-success, #008800)", "stroke-width", "2", "stroke-dasharray", "60", "stroke-dashoffset", "60", 1, "stroke-anim"], ["id", "Artboard-Copy-3", "stroke", "none", "stroke-width", "1", "fill", "none", "fill-rule", "evenodd"], ["x1", "12", "y1", "13.5356315", "x2", "12", "y2", "7", "id", "Path-2", "stroke", "var(--input-validation-error, #E0000E)", "stroke-width", "2", "stroke-linecap", "round", "stroke-linejoin", "round", "stroke-dasharray", "7", "stroke-dashoffset", "7", 1, "symbol-anim"], ["x1", "12", "y1", "17.7678157", "x2", "12", "y2", "17.2321843", "id", "Path-2", "stroke", "var(--input-validation-error, #E0000E)", "stroke-width", "2", "stroke-linecap", "round", "stroke-linejoin", "round", "stroke-dasharray", "7", "stroke-dashoffset", "7", 1, "symbol-anim"], ["id", "Oval", "stroke", "var(--input-validation-error, #E0000E)", "stroke-width", "2", "cx", "12", "cy", "12", "r", "11", "stroke-dasharray", "70", "stroke-dashoffset", "70", "stroke-linejoin", "round", 1, "stroke-anim"], [1, "text-medium", "animated", "fadeIn", "delay-05", "m-t-8", "m-b-8"]], template: function OperationResultComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵtemplate(1, OperationResultComponent__svg_svg_1_Template, 4, 3, "svg", 1);
        ɵngcc0.ɵɵtemplate(2, OperationResultComponent__svg_svg_2_Template, 5, 3, "svg", 1);
        ɵngcc0.ɵɵtemplate(3, OperationResultComponent_p_3_Template, 2, 1, "p", 2);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(4, _c6, ctx.vertical));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.type === "success");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.type === "error");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.text);
    } }, directives: [ɵngcc6.NgClass, ɵngcc6.NgIf, ɵngcc6.NgStyle], styles: [".stroke-anim[_ngcontent-%COMP%] {\n    animation: stroke-anim 0.75s ease-in-out 0s 1 forwards;\n  }\n  .check-anim[_ngcontent-%COMP%] {\n    animation: check-anim 0.35s ease-in-out 0.5s 1 forwards;\n  }\n  .symbol-anim[_ngcontent-%COMP%] {\n    animation: symbol-anim 0.35s ease-in-out 0.5s 1 forwards;\n  }\n\n  @keyframes stroke-anim {\n    0% {\n      stroke-dashoffset: 60;\n    }\n    100% {\n      stroke-dashoffset: 0;\n    }\n  }\n\n  @keyframes check-anim {\n    0% {\n      stroke-dashoffset: 28;\n    }\n    100% {\n      stroke-dashoffset: 0;\n    }\n  }\n  @keyframes symbol-anim {\n    0% {\n      stroke-dashoffset: 7;\n    }\n    100% {\n      stroke-dashoffset: 0;\n    }\n  }\n\n  .delay-05[_ngcontent-%COMP%] {\n    animation-delay: .5s;\n  }"] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(OperationResultComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-operation-result',
                template: "<style>\n  .stroke-anim {\n    animation: stroke-anim 0.75s ease-in-out 0s 1 forwards;\n  }\n  .check-anim {\n    animation: check-anim 0.35s ease-in-out 0.5s 1 forwards;\n  }\n  .symbol-anim {\n    animation: symbol-anim 0.35s ease-in-out 0.5s 1 forwards;\n  }\n\n  @keyframes stroke-anim {\n    0% {\n      stroke-dashoffset: 60;\n    }\n    100% {\n      stroke-dashoffset: 0;\n    }\n  }\n\n  @keyframes check-anim {\n    0% {\n      stroke-dashoffset: 28;\n    }\n    100% {\n      stroke-dashoffset: 0;\n    }\n  }\n  @keyframes symbol-anim {\n    0% {\n      stroke-dashoffset: 7;\n    }\n    100% {\n      stroke-dashoffset: 0;\n    }\n  }\n\n  .delay-05 {\n    animation-delay: .5s;\n  }\n</style>\n<div class=\"d-flex a-i-center\" [ngClass]=\"{ 'd-col j-c-center': vertical }\">\n  <svg *ngIf=\"type === 'success'\" \n    viewBox=\"0 0 24 24\" \n    [ngStyle]=\"{ 'max-width.px': size || 64 }\"\n  >\n    <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\" stroke-linecap=\"round\">\n      <polyline\n        stroke=\"var(--input-validation-success, #008800)\"\n        stroke-width=\"2\"\n        stroke-linejoin=\"round\"\n        points=\"7.8678862 11.508 11.9656988 15.984 20.2137797 7.44836856\"\n        class=\"check-anim\"\n        stroke-dasharray=\"28\"\n        stroke-dashoffset=\"28\"\n      ></polyline>\n      <path\n        d=\"M18.3656773,3.02795925 C16.5689809,1.75089408 14.3721808,1 12,1 C5.92486775,1 1,5.92486775 1,12 C1,18.0751322 5.92486775,23 12,23 C18.0751322,23 23,18.0751322 23,12\"\n        id=\"Path\"\n        class=\"stroke-anim\"\n        stroke=\"var(--input-validation-success, #008800)\"\n        stroke-width=\"2\"\n        stroke-dasharray=\"60\"\n        stroke-dashoffset=\"60\"\n      ></path>\n    </g>\n  </svg>\n\n  <svg *ngIf=\"type === 'error'\" \n    viewBox=\"0 0 24 24\" \n    [ngStyle]=\"{ 'max-width.px': size || 64 }\"\n  >\n    <g id=\"Artboard-Copy-3\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n      <line\n        x1=\"12\"\n        y1=\"13.5356315\"\n        x2=\"12\"\n        y2=\"7\"\n        id=\"Path-2\"\n        stroke=\"var(--input-validation-error, #E0000E)\"\n        class=\"symbol-anim\"\n        stroke-width=\"2\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n        stroke-dasharray=\"7\"\n        stroke-dashoffset=\"7\"\n      ></line>\n      <line\n        x1=\"12\"\n        y1=\"17.7678157\"\n        x2=\"12\"\n        y2=\"17.2321843\"\n        id=\"Path-2\"\n        stroke=\"var(--input-validation-error, #E0000E)\"\n        stroke-width=\"2\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n        stroke-dasharray=\"7\"\n        stroke-dashoffset=\"7\"\n        class=\"symbol-anim\"\n      ></line>\n      <circle\n        id=\"Oval\"\n        stroke=\"var(--input-validation-error, #E0000E)\"\n        stroke-width=\"2\"\n        cx=\"12\"\n        cy=\"12\"\n        r=\"11\"\n        class=\"stroke-anim\"\n        stroke-dasharray=\"70\"\n        stroke-dashoffset=\"70\"\n        stroke-linejoin=\"round\"\n      ></circle>\n    </g>\n  </svg>\n  <p *ngIf=\"text\" \n    class=\"text-medium animated fadeIn delay-05 m-t-8 m-b-8\"\n  >\n    {{ text }}\n  </p>\n</div>\n"
            }]
    }], function () { return []; }, { text: [{
            type: i0.Input
        }], vertical: [{
            type: i0.Input
        }], size: [{
            type: i0.Input
        }], type: [{
            type: i0.Input
        }] }); })();
        return OperationResultComponent;
    }());
    OperationResultComponent.propDecorators = {
        text: [{ type: i0.Input }],
        vertical: [{ type: i0.Input }],
        size: [{ type: i0.Input }],
        type: [{ type: i0.Input }]
    };

    // This is an adapted version of the original FixedSizeVirtualScrollStrategy
    // https://github.com/angular/components/blob/master/src/cdk/scrolling/fixed-size-virtual-scroll.ts
    var VirtualScrollWindowStrategy = /** @class */ (function () {
        function VirtualScrollWindowStrategy(itemSizePx, offsetSizePx, minBufferPx, maxBufferPx) {
            this._viewport = null;
            this._scrolledIndexChange = new rxjs.Subject();
            this.destroy = new rxjs.Subject();
            this._itemSizePx = itemSizePx;
            this._offsetSizePx = offsetSizePx;
            this._minBufferPx = minBufferPx;
            this._maxBufferPx = maxBufferPx;
            this.scrolledIndexChange = this._scrolledIndexChange.pipe(operators.distinctUntilChanged());
            this.destroy$ = this.destroy.asObservable();
        }
        /**
         * Attaches this scroll strategy to a viewport.
         * @param viewport The viewport to attach this strategy to.
         */
        VirtualScrollWindowStrategy.prototype.attach = function (viewport) {
            var _this = this;
            this._viewport = viewport;
            this._updateTotalContentSize();
            this._updateRenderedRange();
            rxjs.fromEvent(window, 'scroll')
                .pipe(operators.takeUntil(this.destroy$), operators.debounceTime(10))
                .subscribe(function () {
                _this._updateRenderedRange();
            });
        };
        /** Detaches this scroll strategy from the currently attached viewport. */
        VirtualScrollWindowStrategy.prototype.detach = function () {
            this._scrolledIndexChange.complete();
            this._viewport = null;
            this.destroy.next();
            this.destroy.complete();
        };
        /**
         * Update the item size and buffer size.
         * @param itemSize The size of the items in the virtually scrolling list.
         * @param offsetSizePx The size of the offset (in pixels)..
         * @param minBufferPx The minimum amount of buffer (in pixels) before needing to render more
         * @param maxBufferPx The amount of buffer (in pixels) to render when rendering more.
         */
        VirtualScrollWindowStrategy.prototype.updateItemAndBufferSize = function (itemSize, offsetSizePx, minBufferPx, maxBufferPx) {
            this._itemSizePx = itemSize;
            this._offsetSizePx = offsetSizePx;
            this._minBufferPx = minBufferPx;
            this._maxBufferPx = maxBufferPx;
            this._updateTotalContentSize();
            this._updateRenderedRange();
        };
        /** @docs-private Implemented as part of VirtualScrollStrategy. */
        VirtualScrollWindowStrategy.prototype.onContentScrolled = function () {
            this._updateRenderedRange();
        };
        /** @docs-private Implemented as part of VirtualScrollStrategy. */
        VirtualScrollWindowStrategy.prototype.onDataLengthChanged = function () {
            this._updateTotalContentSize();
            this._updateRenderedRange();
        };
        /** @docs-private Implemented as part of VirtualScrollStrategy. */
        VirtualScrollWindowStrategy.prototype.onContentRendered = function () {
            /* no-op */
        };
        /** @docs-private Implemented as part of VirtualScrollStrategy. */
        VirtualScrollWindowStrategy.prototype.onRenderedOffsetChanged = function () {
            /* no-op */
        };
        /**
         * Scroll to the offset for the given index.
         * @param index The index of the element to scroll to.
         * @param behavior The ScrollBehavior to use when scrolling.
         */
        VirtualScrollWindowStrategy.prototype.scrollToIndex = function (index, behavior) {
            if (this._viewport) {
                this._viewport.scrollToOffset(index * this._itemSizePx, behavior);
            }
        };
        /** Update the viewport's total content size. */
        VirtualScrollWindowStrategy.prototype._updateTotalContentSize = function () {
            var _this = this;
            if (!this._viewport) {
                return;
            }
            this._viewport.setTotalContentSize(this._viewport.getDataLength() * this._itemSizePx + this._offsetSizePx);
            this._viewport._changeDetectorRef.detectChanges();
            setTimeout(function () {
                var _a;
                var children = _this._viewport.elementRef.nativeElement.children[0].children;
                if (children.length > 0) {
                    _this._itemSizePx = (_a = children[0]) === null || _a === void 0 ? void 0 : _a.clientHeight;
                    _this._viewport.setTotalContentSize(_this._viewport.getDataLength() * _this._itemSizePx + _this._offsetSizePx);
                }
            }, 100);
        };
        /** Update the viewport's rendered range. */
        VirtualScrollWindowStrategy.prototype._updateRenderedRange = function () {
            if (!this._viewport) {
                return;
            }
            // Use the window as a reference for viewPort size and offset
            var viewportSize = window.innerHeight;
            var scrollOffset = window.pageYOffset;
            var renderedRange = this._viewport.getRenderedRange();
            var newRange = { start: renderedRange.start, end: renderedRange.end };
            var dataLength = this._viewport.getDataLength();
            // Prevent NaN as result when dividing by zero.
            var firstVisibleIndex = this._itemSizePx > 0 ? scrollOffset / this._itemSizePx : 0;
            // If user scrolls to the bottom of the list and data changes to a smaller list
            if (newRange.end > dataLength) {
                // We have to recalculate the first visible index based on new data length and viewport size.
                var maxVisibleItems = Math.ceil(viewportSize / this._itemSizePx);
                var newVisibleIndex = Math.max(0, Math.min(firstVisibleIndex, dataLength - maxVisibleItems));
                // If first visible index changed we must update scroll offset to handle start/end buffers
                // Current range must also be adjusted to cover the new position (bottom of new list).
                if (firstVisibleIndex !== newVisibleIndex) {
                    firstVisibleIndex = newVisibleIndex;
                    scrollOffset = newVisibleIndex * this._itemSizePx;
                    newRange.start = Math.floor(firstVisibleIndex);
                }
                newRange.end = Math.max(0, Math.min(dataLength, newRange.start + maxVisibleItems));
            }
            var startBuffer = scrollOffset - newRange.start * this._itemSizePx;
            if (startBuffer < this._minBufferPx && newRange.start !== 0) {
                var expandStart = Math.ceil((this._maxBufferPx - startBuffer) / this._itemSizePx);
                newRange.start = Math.max(0, newRange.start - expandStart);
                newRange.end = Math.min(dataLength, Math.ceil(firstVisibleIndex +
                    (viewportSize + this._minBufferPx) / this._itemSizePx));
            }
            else {
                var endBuffer = newRange.end * this._itemSizePx - (scrollOffset + viewportSize);
                if (endBuffer < this._minBufferPx && newRange.end !== dataLength) {
                    var expandEnd = Math.ceil((this._maxBufferPx - endBuffer) / this._itemSizePx);
                    if (expandEnd > 0) {
                        newRange.end = Math.min(dataLength, newRange.end + expandEnd);
                        newRange.start = Math.max(0, Math.floor(firstVisibleIndex - this._minBufferPx / this._itemSizePx));
                    }
                }
            }
            this._viewport.setRenderedRange(newRange);
            this._viewport.setRenderedContentOffset(this._itemSizePx * newRange.start);
            this._scrolledIndexChange.next(Math.floor(firstVisibleIndex));
        };
        return VirtualScrollWindowStrategy;
    }());

    /**
     * Provider factory for `VirtualScrollWindowStrategy` that simply extracts the already created
     * `VirtualScrollWindowStrategy` from the given directive.
     * @param windowDir The instance of `VirtualScrollWindowDirective` to extract the
     *     `VirtualScrollWindowStrategy` from.
     */
    function _virtualScrollWindowStrategyFactory(windowDir) {
        return windowDir._scrollStrategy;
    }
    // This is an adapted version of the original CdkFixedSizeVirtualScroll
    // https://github.com/angular/components/blob/master/src/cdk/scrolling/fixed-size-virtual-scroll.ts
    var VirtualScrollWindowDirective = /** @class */ (function () {
        function VirtualScrollWindowDirective() {
            this._itemSizePx = 20;
            this._minBufferPx = 100;
            this._maxBufferPx = 200;
            this._offsetSizePx = 0;
            /** The scroll strategy used by this directive. */
            this._scrollStrategy = new VirtualScrollWindowStrategy(this.itemSizePx, this.offsetSizePx, this.minBufferPx, this.maxBufferPx);
        }
        Object.defineProperty(VirtualScrollWindowDirective.prototype, "itemSizePx", {
            /** The size of the items in the list (in pixels). */
            get: function () { return this._itemSizePx; },
            set: function (value) { this._itemSizePx = coercion.coerceNumberProperty(value); },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(VirtualScrollWindowDirective.prototype, "minBufferPx", {
            /**
             * The minimum amount of buffer rendered beyond the viewport (in pixels).
             * If the amount of buffer dips below this number, more items will be rendered. Defaults to 100px.
             */
            get: function () { return this._minBufferPx; },
            set: function (value) { this._minBufferPx = coercion.coerceNumberProperty(value); },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(VirtualScrollWindowDirective.prototype, "maxBufferPx", {
            /**
             * The number of pixels worth of buffer to render for when rendering new items. Defaults to 200px.
             */
            get: function () { return this._maxBufferPx; },
            set: function (value) { this._maxBufferPx = coercion.coerceNumberProperty(value); },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(VirtualScrollWindowDirective.prototype, "offsetSizePx", {
            /** The size of the offset (in pixels). */
            get: function () { return this._offsetSizePx; },
            set: function (value) { this._offsetSizePx = coercion.coerceNumberProperty(value); },
            enumerable: false,
            configurable: true
        });
        VirtualScrollWindowDirective.prototype.ngOnChanges = function () {
            this._scrollStrategy.updateItemAndBufferSize(this.itemSizePx, this.offsetSizePx, this.minBufferPx, this.maxBufferPx);
        };
VirtualScrollWindowDirective.ɵfac = function VirtualScrollWindowDirective_Factory(t) { return new (t || VirtualScrollWindowDirective)(); };
VirtualScrollWindowDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: VirtualScrollWindowDirective, selectors: [["cdk-virtual-scroll-viewport", "windowVirtualScrollStrategy", ""]], inputs: { itemSizePx: "itemSizePx", minBufferPx: "minBufferPx", maxBufferPx: "maxBufferPx", offsetSizePx: "offsetSizePx" }, features: [ɵngcc0.ɵɵProvidersFeature([{
                provide: scrolling.VIRTUAL_SCROLL_STRATEGY,
                useFactory: _virtualScrollWindowStrategyFactory,
                deps: [i0.forwardRef(function () { return VirtualScrollWindowDirective; })]
            }]), ɵngcc0.ɵɵNgOnChangesFeature] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(VirtualScrollWindowDirective, [{
        type: i0.Directive,
        args: [{
                selector: 'cdk-virtual-scroll-viewport[windowVirtualScrollStrategy]',
                providers: [{
                        provide: scrolling.VIRTUAL_SCROLL_STRATEGY,
                        useFactory: _virtualScrollWindowStrategyFactory,
                        deps: [i0.forwardRef(function () { return VirtualScrollWindowDirective; })]
                    }]
            }]
    }], function () { return []; }, { itemSizePx: [{
            type: i0.Input
        }], minBufferPx: [{
            type: i0.Input
        }], maxBufferPx: [{
            type: i0.Input
        }], offsetSizePx: [{
            type: i0.Input
        }] }); })();
        return VirtualScrollWindowDirective;
    }());
    VirtualScrollWindowDirective.propDecorators = {
        itemSizePx: [{ type: i0.Input }],
        minBufferPx: [{ type: i0.Input }],
        maxBufferPx: [{ type: i0.Input }],
        offsetSizePx: [{ type: i0.Input }]
    };

    function initializeServices(translateService, state, userPreferences) {
        var initialize = function () {
            var queryStringLanguage = translateService.queryStringLang();
            var firstLanguage = translateService.firstSupportedLanguage();
            /*
              The ?lang parameter will prevent the user preference language from being activated
            */
            if (queryStringLanguage && translateService.getSupported(queryStringLanguage)) {
                translateService.switchToLanguage(queryStringLanguage);
            }
            else {
                state.currentUser
                    .pipe(operators.map(function (user) { return user && user.userName; }), operators.filter(function (u) { return !!u; }), operators.distinctUntilChanged(), operators.switchMap(function () { return userPreferences.get('language'); }), operators.startWith(firstLanguage), operators.filter(function (lang) { return !!lang; }), operators.distinctUntilChanged())
                    .subscribe(function (lang) {
                    translateService.switchToLanguage(lang);
                });
            }
        };
        return initialize;
    }
    var ICON_LIST = new i0.InjectionToken('iconList');
    /**
     * Commonly used directives, data access and translation. This module is the shared
     * module across all core components. It should be imported by default.
     *
     * @exports IconDirective A directive to set a c8y icon with [c8yIcon]="'rocket'".
     * @exports OutletDirective A directive which allows to set DOM or Angular templates (used for upgrade).
     * @exports I18nModule Translation module.
     * @exports NgCommonModule Angular common module.
     * @exports DataModule The data layer to allow DI with @c8y/client
     * @exports HumanizeAppNamePipe Humanize an application name (e.g. in the app switcher)
     * @exports HumanizePipe Humanize a word. E.g. `device management` gets `Device management`
     * @exports ShortenUserNamePipe Allows a short name. E.g. `Foo Bar` gets `F. Bar`
     * @exports ForOfDirective A forOf directive like ngFor but with load-more function
     * @exports LoadMoreComponent A component to load more data from a certain data-source
     * @exports ProgressBarComponent Displays either defined or undefined progress.
     * @exports DropdownDirectionDirective Determines if a dropdown opens to the bottom or to the top.
     * @exports TextareaAutoresizeDirective resizes a textarea height as the user inputs.
     * @exports OperationResultComponent displays an animated svg for success and error operations.
     */
    var CommonModule = /** @class */ (function () {
        function CommonModule() {
        }
        CommonModule.providers = function () {
            return __spreadArray(__spreadArray(__spreadArray(__spreadArray([], __read(i4.DataModule.providers())), [
                // TODO: maybe we can think of a way to remove this C8Y_APP global
                { provide: HOOK_OPTIONS, useValue: window.C8Y_APP || {}, multi: true },
                {
                    provide: i0.APP_INITIALIZER,
                    useFactory: initializeServices,
                    deps: [TranslateService, AppStateService, UserPreferencesService],
                    multi: true
                },
                { provide: ICON_LIST, useValue: ICONS, multi: false }
            ]), __read(I18nModule$1.providers())), [
                UserPreferencesService,
                OptionsService,
                AppStateService,
                Permissions,
                TenantUiService,
                HumanizePipe,
                HumanizeAppNamePipe,
                ShortenUserNamePipe,
                MapFunctionPipe,
                DatePipe,
                ZipService
            ]);
        };
        CommonModule.forRoot = function () {
            return {
                ngModule: CommonModule,
                providers: CommonModule.providers()
            };
        };
CommonModule.ɵfac = function CommonModule_Factory(t) { return new (t || CommonModule)(); };
CommonModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: CommonModule });
CommonModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[common.CommonModule, I18nModule$1, tooltip.TooltipModule, scrolling.ScrollingModule], I18nModule$1, ɵngcc6.CommonModule] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CommonModule, [{
        type: i0.NgModule,
        args: [{
                imports: [common.CommonModule, I18nModule$1, tooltip.TooltipModule, scrolling.ScrollingModule],
                exports: [
                    IconDirective,
                    OutletDirective,
                    I18nModule$1,
                    common.CommonModule,
                    HumanizeAppNamePipe,
                    HumanizePipe,
                    IfAllowedDirective,
                    ShortenUserNamePipe,
                    ForOfDirective,
                    LoadMoreComponent,
                    MapFunctionPipe,
                    ProgressBarComponent,
                    DatePipe,
                    NumberPipe,
                    LoadingComponent,
                    DropdownDirectionDirective,
                    TextareaAutoresizeDirective,
                    OperationResultComponent,
                    VirtualScrollerWrapperComponent,
                    VirtualScrollWindowDirective
                ],
                declarations: [
                    IconDirective,
                    OutletDirective,
                    HumanizePipe,
                    HumanizeAppNamePipe,
                    IfAllowedDirective,
                    ShortenUserNamePipe,
                    ForOfDirective,
                    LoadMoreComponent,
                    MapFunctionPipe,
                    ProgressBarComponent,
                    DatePipe,
                    NumberPipe,
                    LoadingComponent,
                    DropdownDirectionDirective,
                    TextareaAutoresizeDirective,
                    OperationResultComponent,
                    VirtualScrollerWrapperComponent,
                    VirtualScrollWindowDirective
                ],
                entryComponents: [LoadMoreComponent, LoadingComponent, VirtualScrollerWrapperComponent]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CommonModule, { declarations: [IconDirective, OutletDirective, HumanizePipe, HumanizeAppNamePipe, IfAllowedDirective, ShortenUserNamePipe, ForOfDirective, LoadMoreComponent, MapFunctionPipe, ProgressBarComponent, DatePipe, NumberPipe, LoadingComponent, DropdownDirectionDirective, TextareaAutoresizeDirective, OperationResultComponent, VirtualScrollerWrapperComponent, VirtualScrollWindowDirective], imports: [ɵngcc6.CommonModule, I18nModule$1, ɵngcc8.TooltipModule, ɵngcc7.ScrollingModule], exports: [IconDirective, OutletDirective, I18nModule$1, ɵngcc6.CommonModule, HumanizeAppNamePipe, HumanizePipe, IfAllowedDirective, ShortenUserNamePipe, ForOfDirective, LoadMoreComponent, MapFunctionPipe, ProgressBarComponent, DatePipe, NumberPipe, LoadingComponent, DropdownDirectionDirective, TextareaAutoresizeDirective, OperationResultComponent, VirtualScrollerWrapperComponent, VirtualScrollWindowDirective] }); })();
        return CommonModule;
    }());

    /**
     * This component is used as the outlet to show the action bars.
     * In a c8ycli app it is by default placed on the bootstrap component.
     */
    var ActionBarComponent = /** @class */ (function () {
        function ActionBarComponent() {
            /**
             * Identifies if the navigator is opened. If yes, the action-bar
             * needs to move to the right.
             */
            this.navigatorOpen = false;
            /**
             * Identifies if the current view has tabs. If yes, the action bar needs
             * to move down.
             */
            this.hasTabs = false;
            /**
             * Identifies if the tabs are aligned horizontally. If yes, the tabs don't
             * need to move to the left.
             */
            this.isTabsHorizontal = false;
            /**
             * Identifies if in a mobile view the toolbar is expanded or not.
             */
            this.isPageToolbarExpanded = false;
            /**
             * Adds the default `c8y-ui-action-bar` class.
             */
            this.uiActionBar = true;
            /**
             * The current items to display in the ActionBar.
             */
            this.items$ = rxjs.of([]);
            /**
             * Provides observable for right action items.
             */
            this.right$ = rxjs.of([]);
            /**
             * Provides observable for left action items.
             */
            this.left$ = rxjs.of([]);
            /**
             * Provides observable for more action items.
             */
            this.more$ = rxjs.of([]);
            /**
             * Returns true if no items are present and hides the action bar.
             */
            this.hidden$ = rxjs.of(true);
            /**
             * Binds hidden property to this component's native element
             */
            this.hidden = true;
            this.destroy$ = new rxjs.Subject();
        }
        ActionBarComponent.prototype.ngOnInit = function () {
            var _this = this;
            this.right$ = this.items$.pipe(operators.map(function (items) { return lodashEs.filter(items, { placement: 'right' }); }), operators.map(function (items) { return lodashEs.sortBy(items, _this.byPriority); }));
            this.left$ = this.items$.pipe(operators.map(function (items) { return lodashEs.filter(items, { placement: 'left' }); }), operators.map(function (items) { return lodashEs.sortBy(items, _this.byPriority); }));
            this.more$ = this.items$.pipe(operators.map(function (items) { return lodashEs.filter(items, { placement: 'more' }); }), operators.map(function (items) { return lodashEs.sortBy(items, _this.byPriority); }));
            this.hidden$ = this.items$.pipe(operators.map(function (items) {
                return !(items && items.length);
            }));
            this.hidden$
                .pipe(operators.takeUntil(this.destroy$)).subscribe(function (hidden) {
                _this.hidden = hidden;
            });
        };
        ActionBarComponent.prototype.ngOnDestroy = function () {
            this.destroy$.next();
            this.destroy$.complete();
        };
        ActionBarComponent.prototype.byPriority = function (item) {
            return -item.priority;
        };
ActionBarComponent.ɵfac = function ActionBarComponent_Factory(t) { return new (t || ActionBarComponent)(); };
ActionBarComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ActionBarComponent, selectors: [["c8y-action-bar"]], hostAttrs: [1, "c8y-ui-action-bar"], hostVars: 9, hostBindings: function ActionBarComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵhostProperty("hidden", ctx.hidden);
        ɵngcc0.ɵɵclassProp("navigator-open", ctx.navigatorOpen)("has-tabs", ctx.hasTabs)("horizontal-tabs", ctx.isTabsHorizontal)("c8y-ui-action-bar", ctx.uiActionBar);
    } }, inputs: { navigatorOpen: "navigatorOpen", hasTabs: "hasTabs", isTabsHorizontal: "isTabsHorizontal", items$: "items$" }, decls: 14, vars: 12, consts: [[1, "navbar-header"], [1, "text-label-small", "p-l-16", "p-t-8", "p-b-8", "visible-xs"], [1, "text-primary"], ["id", "page-toolbar", 1, "navbar-collapse"], [1, "nav", "navbar-nav", "navbar-left"], [4, "ngFor", "ngForOf"], [1, "nav", "navbar-nav", "navbar-right"], ["class", "no-remove more-wrapper", 4, "ngIf"], [4, "c8yOutlet"], [1, "no-remove", "more-wrapper"], ["dropdown", "", 1, "dropdown"], ["dropdownToggle", "", "aria-haspopup", "true", "aria-expanded", "false", 1, "dropdown-toggle", "c8y-dropdown", "d-flex", 3, "title"], ["translate", "", 1, "text-truncate"], [3, "c8yIcon"], ["class", "dropdown-menu dropdown-menu-right hidden-xs", 4, "dropdownMenu"], [1, "dropdown-menu", "visible-xs"], [1, "dropdown-menu", "dropdown-menu-right", "hidden-xs"]], template: function ActionBarComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "p", 1);
        ɵngcc0.ɵɵelementStart(2, "span", 2);
        ɵngcc0.ɵɵtext(3);
        ɵngcc0.ɵɵpipe(4, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(5, "div", 3);
        ɵngcc0.ɵɵelementStart(6, "ul", 4);
        ɵngcc0.ɵɵtemplate(7, ActionBarComponent_ng_container_7_Template, 2, 1, "ng-container", 5);
        ɵngcc0.ɵɵpipe(8, "async");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(9, "ul", 6);
        ɵngcc0.ɵɵtemplate(10, ActionBarComponent_ng_container_10_Template, 2, 1, "ng-container", 5);
        ɵngcc0.ɵɵpipe(11, "async");
        ɵngcc0.ɵɵtemplate(12, ActionBarComponent_li_12_Template, 11, 7, "li", 7);
        ɵngcc0.ɵɵpipe(13, "async");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(4, 4, "Action bar"));
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵproperty("ngForOf", ɵngcc0.ɵɵpipeBind1(8, 6, ctx.left$));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngForOf", ɵngcc0.ɵɵpipeBind1(11, 8, ctx.right$));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind1(13, 10, ctx.more$).length > 0);
    } }, directives: [ɵngcc6.NgForOf, ɵngcc6.NgIf, OutletDirective, ɵngcc9.BsDropdownDirective, ɵngcc9.BsDropdownToggleDirective, C8yTranslateDirective, IconDirective, ɵngcc9.BsDropdownMenuDirective], pipes: [C8yTranslatePipe, ɵngcc6.AsyncPipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ActionBarComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-action-bar',
                template: "<div class=\"navbar-header\">\n  <p class=\"text-label-small p-l-16 p-t-8 p-b-8 visible-xs\">\n    <span class=\"text-primary\">{{ 'Action bar' | translate }}</span>\n  </p>\n</div>\n\n<div id=\"page-toolbar\" class=\"navbar-collapse\">\n  <ul class=\"nav navbar-nav navbar-left\">\n    <ng-container *ngFor=\"let item of left$ | async\">\n      <ng-container *c8yOutlet=\"item.template\"></ng-container>\n    </ng-container>\n  </ul>\n  <ul class=\"nav navbar-nav navbar-right\">\n    <ng-container *ngFor=\"let item of right$ | async\">\n      <ng-container *c8yOutlet=\"item.template\"></ng-container>\n    </ng-container>\n    <li class=\"no-remove more-wrapper\" *ngIf=\"(more$ | async).length > 0\">\n      <div class=\"dropdown\" dropdown>\n        <button\n          title=\"{{ 'More' | translate }}\u2026\"\n          class=\"dropdown-toggle c8y-dropdown d-flex\"\n          dropdownToggle\n          aria-haspopup=\"true\"\n          aria-expanded=\"false\"\n        >\n          <span class=\"text-truncate\" translate>More\u2026</span>\n          <i [c8yIcon]=\"'caret-down'\"></i>\n        </button>\n        <ul class=\"dropdown-menu dropdown-menu-right hidden-xs\" *dropdownMenu>\n          <ng-container *ngFor=\"let item of more$ | async\">\n            <ng-container *c8yOutlet=\"item.template\"></ng-container>\n          </ng-container>\n        </ul>\n        <ul class=\"dropdown-menu visible-xs\">\n          <ng-container *ngFor=\"let item of more$ | async\">\n            <ng-container *c8yOutlet=\"item.template\"></ng-container>\n          </ng-container>\n        </ul>\n      </div>\n    </li>\n  </ul>\n</div>\n",
                host: { class: 'c8y-ui-action-bar' }
            }]
    }], function () { return []; }, { navigatorOpen: [{
            type: i0.Input
        }, {
            type: i0.HostBinding,
            args: ['class.navigator-open']
        }], hasTabs: [{
            type: i0.Input
        }, {
            type: i0.HostBinding,
            args: ['class.has-tabs']
        }], isTabsHorizontal: [{
            type: i0.Input
        }, {
            type: i0.HostBinding,
            args: ['class.horizontal-tabs']
        }], uiActionBar: [{
            type: i0.HostBinding,
            args: ['class.c8y-ui-action-bar']
        }], items$: [{
            type: i0.Input
        }], hidden: [{
            type: i0.HostBinding
        }] }); })();
        return ActionBarComponent;
    }());
    ActionBarComponent.propDecorators = {
        navigatorOpen: [{ type: i0.Input }, { type: i0.HostBinding, args: ['class.navigator-open',] }],
        hasTabs: [{ type: i0.Input }, { type: i0.HostBinding, args: ['class.has-tabs',] }],
        isTabsHorizontal: [{ type: i0.Input }, { type: i0.HostBinding, args: ['class.horizontal-tabs',] }],
        uiActionBar: [{ type: i0.HostBinding, args: ['class.c8y-ui-action-bar',] }],
        items$: [{ type: i0.Input }],
        hidden: [{ type: i0.HostBinding }]
    };

    /**
     * An action bar can be added with content projection or multi provider
     * extension. It allows to show them in three positions (left, right
     * or more). The actions placed here are always local actions to the
     * current route like "add device" or "lock dashboard".
     *
     * @example
     * ```html
     * <c8y-action-bar-item [placement]="'right'">
     *   <button class="btn btn-link" (click)="addRandom()"><i c8yIcon="plus-circle"></i> Add random</button>
     * </c8y-action-bar-item>
     * ```
     * @exports ActionBarComponent The outlet component
     * @exports ActionBarItemComponent The items to add with cp.
     */
    var ActionBarModule = /** @class */ (function () {
        function ActionBarModule() {
        }
ActionBarModule.ɵfac = function ActionBarModule_Factory(t) { return new (t || ActionBarModule)(); };
ActionBarModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: ActionBarModule });
ActionBarModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[dropdown.BsDropdownModule, CommonModule, collapse.CollapseModule, i1.RouterModule.forChild([])]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ActionBarModule, [{
        type: i0.NgModule,
        args: [{
                declarations: [ActionBarComponent, ActionBarItemComponent],
                imports: [dropdown.BsDropdownModule, CommonModule, collapse.CollapseModule, i1.RouterModule.forChild([])],
                exports: [ActionBarComponent, ActionBarItemComponent]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ActionBarModule, { declarations: [ActionBarComponent, ActionBarItemComponent], imports: [ɵngcc9.BsDropdownModule, CommonModule, ɵngcc10.CollapseModule, ɵngcc1.RouterModule], exports: [ActionBarComponent, ActionBarItemComponent] }); })();
        return ActionBarModule;
    }());

    /**
     * A hook to add an action using the multi-provider extension concept.
     */
    var HOOK_ACTION = new i0.InjectionToken('ActionFactory');
    /**
     * A service which defines global actions.
     */
    var ActionService = /** @class */ (function (_super) {
        __extends(ActionService, _super);
        function ActionService(injector, router) {
            var _this = _super.call(this) || this;
            _this.injector = injector;
            _this.factories = [];
            _this.refreshTrigger = new rxjs.Subject();
            _this.state$ = new rxjs.BehaviorSubject(new Set());
            _this.items$ = fromTrigger(router, _this.refreshTrigger, [
                function () { return _this.injector.get(HOOK_ACTION, []); },
                function () { return _this.factories; },
                stateToFactory(_this.state$)
            ]).pipe(operators.map(function (items) { return sortByPriority(items); }), operators.shareReplay(1));
            return _this;
        }
        /**
         * Refresh the extension factories
         */
        ActionService.prototype.refresh = function () {
            this.refreshTrigger.next(1);
        };
        Object.defineProperty(ActionService.prototype, "state", {
            /**
             * Returns the current state.
             * @readonly
             * @returns The current set of actions.
             */
            get: function () {
                return this.state$.value;
            },
            enumerable: false,
            configurable: true
        });
        /**
         * Adds a new item to the actions in the header and emits a state change.
         * @param item The item to add.
         */
        ActionService.prototype.add = function (item) {
            this.state.add(item);
            this.emitNewState();
        };
        /**
         * Removes an action from the header and emits a state change.
         * @param item The item to remove.
         */
        ActionService.prototype.remove = function (item) {
            this.state.delete(item);
            this.emitNewState();
        };
ActionService.ɵfac = function ActionService_Factory(t) { return new (t || ActionService)(ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(ɵngcc1.Router)); };
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ActionService, [{
        type: i0.Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return [{ type: ɵngcc0.Injector }, { type: ɵngcc1.Router }]; }, null); })();
        return ActionService;
    }(StateService));
    ActionService.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function ActionService_Factory() { return new ActionService(i0__namespace.ɵɵinject(i0__namespace.INJECTOR), i0__namespace.ɵɵinject(i1__namespace.Router)); }, token: ActionService, providedIn: "root" });
    ActionService.ctorParameters = function () { return [
        { type: i0.Injector },
        { type: i1.Router }
    ]; };

    /**
     * This component is used as the outlet to show the action list.
     * In a c8ycli app it is by default placed on the header component near app-switcher.
     */
    var ActionOutletComponent = /** @class */ (function () {
        function ActionOutletComponent() {
            /**
             * Identifies if in a mobile view the toolbar is expanded or not.
             */
            this.isPageToolbarExpanded = false;
            /**
             * The current items to display in the action dropdown.
             */
            this.items = [];
        }
        /**
         * Returns the items ordered by priority.
         */
        ActionOutletComponent.prototype.getByPriority = function () {
            return lodashEs.sortBy(this.items, this.byPriority);
        };
        /**
         * Invokes action after an action is clicked.
         */
        ActionOutletComponent.prototype.invoke = function (action) {
            if (action.action) {
                action.action.call();
            }
        };
        ActionOutletComponent.prototype.byPriority = function (item) {
            return -item.priority;
        };
ActionOutletComponent.ɵfac = function ActionOutletComponent_Factory(t) { return new (t || ActionOutletComponent)(); };
ActionOutletComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ActionOutletComponent, selectors: [["c8y-action-outlet"]], inputs: { items: "items" }, decls: 1, vars: 1, consts: [["class", "dropdown", "dropdown", "", 4, "ngIf"], ["dropdown", "", 1, "dropdown"], ["type", "button", "dropdownToggle", "", "aria-haspopup", "true", "aria-expanded", "true", 1, "main-header-button", "dropdown-toggle", "c8y-dropdown"], [1, "icon-2x", 3, "c8yIcon"], ["class", "dropdown-menu cog-dropdown", 4, "dropdownMenu"], [1, "dropdown-menu", "cog-dropdown"], [4, "ngFor", "ngForOf"], [4, "c8yOutlet"], [4, "ngIf"], [3, "title", "click"], [3, "c8yIcon", 4, "ngIf"], [3, "c8yIcon"]], template: function ActionOutletComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, ActionOutletComponent_div_0_Template, 4, 1, "div", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.items && ctx.items.length > 0);
    } }, directives: [ɵngcc6.NgIf, ɵngcc9.BsDropdownDirective, ɵngcc9.BsDropdownToggleDirective, IconDirective, ɵngcc9.BsDropdownMenuDirective, ɵngcc6.NgForOf, OutletDirective], pipes: [C8yTranslatePipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ActionOutletComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-action-outlet',
                template: "<div class=\"dropdown\" dropdown *ngIf=\"items && items.length > 0\">\n  <button\n    type=\"button\"\n    class=\"main-header-button dropdown-toggle c8y-dropdown\"\n    dropdownToggle\n    aria-haspopup=\"true\"\n    aria-expanded=\"true\">\n    <i [c8yIcon]=\"'plus-circle'\" class=\"icon-2x\"></i>\n  </button>\n\n  <ul class=\"dropdown-menu cog-dropdown\" *dropdownMenu>\n    <ng-container *ngFor=\"let item of getByPriority()\">\n      <ng-container *c8yOutlet=\"item.template\"></ng-container>\n      <li *ngIf=\"item.label\">\n        <button title=\"{{ item.label | translate }}\" [attr.disabled]=\"item.disabled ? 'disabled' : null\" (click)=\"invoke(item)\">\n          <i *ngIf=\"item.icon\" [c8yIcon]=\"item.icon\"></i>{{item.label | translate}}\n        </button>\n      </li>\n    </ng-container>\n  </ul>\n</div>\n"
            }]
    }], function () { return []; }, { items: [{
            type: i0.Input
        }] }); })();
        return ActionOutletComponent;
    }());
    ActionOutletComponent.propDecorators = {
        items: [{ type: i0.Input }]
    };

    /**
     * A <c8y-action> can be added with content projection.
     *
     * @example
     * ```html
     * <c8y-action>
     *   <button class="btn" (click)="myAction()">My action</button>
     * </c8y-action>
     * ```
     */
    var ActionComponent = /** @class */ (function () {
        function ActionComponent(actionService) {
            this.actionService = actionService;
            /**
             * Is this action disabled.
             */
            this.disabled = false;
            /**
             * The priority of this action (the higher the number, the higher the action will be displayed; optional)
             */
            this.priority = 0;
        }
        /**
         * After page view is initialized, component adds itself to global action list.
         */
        ActionComponent.prototype.ngAfterViewInit = function () {
            var _this = this;
            this.viewInitTimeout = setTimeout(function () { return _this.actionService.add(_this); });
        };
        /**
         * Action is removed from global action list, if component is not used anymore.
         */
        ActionComponent.prototype.ngOnDestroy = function () {
            clearTimeout(this.viewInitTimeout);
            this.actionService.remove(this);
        };
ActionComponent.ɵfac = function ActionComponent_Factory(t) { return new (t || ActionComponent)(ɵngcc0.ɵɵdirectiveInject(ActionService)); };
ActionComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ActionComponent, selectors: [["c8y-action"]], viewQuery: function ActionComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c0, 5);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.template = _t.first);
    } }, inputs: { disabled: "disabled", priority: "priority", label: "label", icon: "icon" }, ngContentSelectors: _c1, decls: 2, vars: 0, consts: [["template", ""]], template: function ActionComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵtemplate(0, ActionComponent_ng_template_0_Template, 2, 0, "ng-template", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);
    } }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ActionComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-action',
                template: "<ng-template #template>\n  <li>\n    <ng-content></ng-content>\n  </li>\n</ng-template>"
            }]
    }], function () { return [{ type: ActionService }]; }, { disabled: [{
            type: i0.Input
        }], priority: [{
            type: i0.Input
        }], label: [{
            type: i0.Input
        }], icon: [{
            type: i0.Input
        }], template: [{
            type: i0.ViewChild,
            args: ['template', { static: false }]
        }] }); })();
        return ActionComponent;
    }());
    ActionComponent.ctorParameters = function () { return [
        { type: ActionService }
    ]; };
    ActionComponent.propDecorators = {
        disabled: [{ type: i0.Input }],
        label: [{ type: i0.Input }],
        priority: [{ type: i0.Input }],
        icon: [{ type: i0.Input }],
        template: [{ type: i0.ViewChild, args: ['template', { static: false },] }]
    };

    /**
     * The angular module definition for actions.
     * @exports ActionComponent
     * @exports ActionOutletComponent
     */
    var ActionModule = /** @class */ (function () {
        function ActionModule() {
        }
ActionModule.ɵfac = function ActionModule_Factory(t) { return new (t || ActionModule)(); };
ActionModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: ActionModule });
ActionModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[
            CommonModule,
            dropdown.BsDropdownModule,
            i1.RouterModule.forChild([])
        ]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ActionModule, [{
        type: i0.NgModule,
        args: [{
                declarations: [
                    ActionOutletComponent,
                    ActionComponent
                ],
                imports: [
                    CommonModule,
                    dropdown.BsDropdownModule,
                    i1.RouterModule.forChild([])
                ],
                exports: [
                    ActionOutletComponent,
                    ActionComponent
                ]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ActionModule, { declarations: [ActionOutletComponent, ActionComponent], imports: [CommonModule, ɵngcc9.BsDropdownModule, ɵngcc1.RouterModule], exports: [ActionOutletComponent, ActionComponent] }); })();
        return ActionModule;
    }());

    /**
     * A service which allows to display alerts.
     */
    var AlertService = /** @class */ (function (_super) {
        __extends(AlertService, _super);
        function AlertService() {
            var _this = _super.apply(this, __spreadArray([], __read(arguments))) || this;
            /**
             * @ignore
             */
            _this.state$ = new rxjs.BehaviorSubject([]);
            _this.MAX_ALERTS = 3;
            _this.ALERT_TIMEOUT = 3000;
            return _this;
        }
        Object.defineProperty(AlertService.prototype, "state", {
            /**
             * Returns all alerts.
             * @readonly
             */
            get: function () {
                return this.state$.value;
            },
            enumerable: false,
            configurable: true
        });
        /**
         * Adds a new alert to the current state.
         */
        AlertService.prototype.add = function (alert) {
            this.addAlert(alert);
        };
        /**
         * Adds a alert by text.
         */
        AlertService.prototype.addByText = function (type, txt, detailedData) {
            this.addAlert({ text: txt, type: type, detailedData: detailedData });
        };
        /**
         * Returns all alerts.
         * @deprecated Use alertService.alerts instead.
         */
        AlertService.prototype.list = function () {
            return this.state;
        };
        /**
         * Remove an alert from the current state.
         */
        AlertService.prototype.remove = function (alert) {
            var _this = this;
            this.changeAlerts(this.state.filter(function (item) { return !_this.areSame(alert, item); }));
        };
        /**
         * Updates matching alert with provided values.
         */
        AlertService.prototype.update = function (alert, fieldsToUpdate) {
            var _this = this;
            this.changeAlerts(this.state.map(function (item) {
                if (_this.areSame(alert, item)) {
                    Object.assign(item, fieldsToUpdate);
                }
                return item;
            }));
        };
        /**
         * Removes last danger alert.
         * It can be used e.g. in the case of a failed request which triggered an alert, to hide it from user.
         *
         * ```js
         *  try {
         *    // something that might throw a danger server msg
         *  } catch (ex) {
         *   this.alertService.removeLastDanger();
         *  }
         * ```
         */
        AlertService.prototype.removeLastDanger = function () {
            var firstDangerAlert = this.state.reverse().find(function (_a) {
                var type = _a.type;
                return type === 'danger';
            });
            this.changeAlerts(this.state.filter(function (alert) { return alert !== firstDangerAlert; }));
        };
        /**
         * Shorthand for a save successful alert.
         * @param savedObject The object which was saved.
         * @return A function that can be executed to show the msg.
         */
        AlertService.prototype.saveSuccess = function (savedObject) {
            var _this = this;
            return function () {
                var text = savedObject + " saved successfully";
                _this.addByText('success', text);
            };
        };
        /**
         * Shorthand for a create successful alert.
         * @param createdObject The object which was created.
         * @return A function that can be executed to show the msg.
         */
        AlertService.prototype.createSuccess = function (createdObject) {
            var _this = this;
            return function () {
                var text = createdObject + " created successfully";
                _this.addByText('success', text);
            };
        };
        /**
         * Clears all alerts.
         */
        AlertService.prototype.clearAll = function () {
            this.changeAlerts([]);
        };
        /**
         * A shorthand to display a simple success message.
         * @param text The success text.
         * @param detailedData The text with additional information.
         */
        AlertService.prototype.success = function (text, detailedData) {
            this.addByText('success', text, detailedData);
        };
        /**
         * A shorthand to display a simple danger message.
         * @param text The danger text.
         * @param detailedData The text with additional information.
         */
        AlertService.prototype.danger = function (text, detailedData) {
            this.addByText('danger', text, detailedData);
        };
        /**
         * A shorthand to display a simple info message.
         * @param text The info text.
         * @param detailedData The text with additional information.
         */
        AlertService.prototype.info = function (text, detailedData) {
            this.addByText('info', text, detailedData);
        };
        /**
         * A shorthand to display a simple warning message.
         * @param text The warning text.
         * @param detailedData The text with additional information.
         */
        AlertService.prototype.warning = function (text, detailedData) {
            this.addByText('warning', text, detailedData);
        };
        /**
         * Creates alert from standard api errors.
         * Should be used for errors generated by @c8y/client services.
         * @param {IResult}  error The error from server.
         * @param {alertType} type The type of alert.
         */
        AlertService.prototype.addServerFailure = function (error, type) {
            if (type === void 0) { type = 'danger'; }
            var data = error.data, res = error.res;
            var text = (data === null || data === void 0 ? void 0 : data.message) || null;
            var detailedData;
            if (data) {
                if (typeof data === 'object') {
                    detailedData = data.exceptionMessage;
                }
                else if (typeof data === 'string') {
                    detailedData = data;
                }
            }
            var hasRelevantMessage = !!(text || detailedData);
            if (!text) {
                text = gettext('A server error occurred.');
            }
            if (res && !hasRelevantMessage) {
                detailedData = {
                    status: res.status,
                    statusText: res.statusText,
                    url: res.url
                };
            }
            this.addAlert({
                type: type,
                text: text,
                detailedData: detailedData
            });
        };
        /**
         * Compares two alert objects. Alerts are same if text, type, detailed data and callbacks are same.
         * Callbacks are same if they refer to the same function.
         */
        AlertService.prototype.areSame = function (alert1, alert2) {
            return (alert1.text === alert2.text &&
                alert1.type === alert2.type &&
                lodashEs.isEqual(alert1.detailedData, alert2.detailedData) &&
                alert1.onClose === alert2.onClose &&
                alert1.onDetail === alert2.onDetail);
        };
        AlertService.prototype.changeAlerts = function (newAlerts) {
            this.state$.next(newAlerts);
        };
        AlertService.prototype.addAlert = function (alert) {
            var _this = this;
            if (!alert.text && !alert.type) {
                throw new Error('Cannot add empty alert');
            }
            var alertAlreadyAdded = this.state.find(function (item) { return _this.areSame(alert, item); });
            if (alertAlreadyAdded) {
                return;
            }
            this.changeAlerts(__spreadArray(__spreadArray([], __read(this.state)), [alert]));
            this.hideAutomaticallyIfNeeded(alert);
            this.removeOldestIfMax();
        };
        AlertService.prototype.hideAutomaticallyIfNeeded = function (alert) {
            var _this = this;
            var isSuccess = alert.type === 'success';
            var noDetails = !alert.detailedData;
            var alertTimeout = isSuccess && noDetails ? this.ALERT_TIMEOUT : 0;
            if (typeof alert.timeout !== 'undefined') {
                alertTimeout = alert.timeout;
            }
            if (alertTimeout) {
                setTimeout(function () { return _this.remove(alert); }, alertTimeout);
            }
        };
        AlertService.prototype.removeOldestIfMax = function () {
            if (this.state.length > this.MAX_ALERTS) {
                var _a = __read(this.state), firstRemoved = _a.slice(1);
                this.changeAlerts(firstRemoved);
            }
        };
AlertService.ɵfac = /*@__PURE__*/ function () { var ɵAlertService_BaseFactory; return function AlertService_Factory(t) { return (ɵAlertService_BaseFactory || (ɵAlertService_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(AlertService)))(t || AlertService); }; }();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AlertService, [{
        type: i0.Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], null, null); })();
        return AlertService;
    }(StateService));
    AlertService.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function AlertService_Factory() { return new AlertService(); }, token: AlertService, providedIn: "root" });

    /**
     * The content of `c8y-alert-details` component will be displayed as alert's details.
     * This component must be placed inside `c8y-alert` component.
     */
    var AlertDetailsComponent = /** @class */ (function () {
        function AlertDetailsComponent() {
        }
AlertDetailsComponent.ɵfac = function AlertDetailsComponent_Factory(t) { return new (t || AlertDetailsComponent)(); };
AlertDetailsComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: AlertDetailsComponent, selectors: [["c8y-alert-details"]], ngContentSelectors: _c1, decls: 1, vars: 0, template: function AlertDetailsComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AlertDetailsComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-alert-details',
                template: "<ng-content></ng-content>"
            }]
    }], function () { return []; }, null); })();
        return AlertDetailsComponent;
    }());

    /**
     * Alert component allows creating alert with complex view.
     */
    var AlertComponent = /** @class */ (function () {
        /**
         * @ignore
         */
        function AlertComponent(alertService) {
            this.alertService = alertService;
        }
        /**
         * AlertComponent adds new alert to collection stored in alertService after view init.
         */
        AlertComponent.prototype.ngAfterViewInit = function () {
            var _this = this;
            if (!this.containDetailsComponent) {
                this.detailedData = null;
            }
            this.viewInitTimeout = setTimeout(function () { return _this.alertService.add(_this); });
        };
        /**
         * AlertComponent removes alert from collection stored in alertService on destroy component.
         */
        AlertComponent.prototype.ngOnDestroy = function () {
            clearTimeout(this.viewInitTimeout);
            this.alertService.remove(this);
        };
AlertComponent.ɵfac = function AlertComponent_Factory(t) { return new (t || AlertComponent)(ɵngcc0.ɵɵdirectiveInject(AlertService)); };
AlertComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: AlertComponent, selectors: [["c8y-alert"]], contentQueries: function AlertComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, AlertDetailsComponent, 5);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.containDetailsComponent = _t.first);
    } }, viewQuery: function AlertComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c7, 5);
        ɵngcc0.ɵɵviewQuery(_c8, 5);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.detailedData = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.text = _t.first);
    } }, inputs: { type: "type", onDetail: "onDetail", onClose: "onClose" }, ngContentSelectors: _c10, decls: 4, vars: 0, consts: [["text", ""], ["detailedData", ""]], template: function AlertComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c9);
        ɵngcc0.ɵɵtemplate(0, AlertComponent_ng_template_0_Template, 2, 0, "ng-template", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(2, AlertComponent_ng_template_2_Template, 1, 0, "ng-template", null, 1, ɵngcc0.ɵɵtemplateRefExtractor);
    } }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AlertComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-alert',
                template: "<ng-template #text>\r\n  <ng-content select=\"c8y-alert-text\"></ng-content>\r\n  <ng-content></ng-content>\r\n</ng-template>\r\n<ng-template #detailedData>\r\n  <ng-content select=\"c8y-alert-details\"></ng-content>\r\n</ng-template>"
            }]
    }], function () { return [{ type: AlertService }]; }, { detailedData: [{
            type: i0.ViewChild,
            args: ['detailedData', { static: false }]
        }], type: [{
            type: i0.Input
        }], onDetail: [{
            type: i0.Input
        }], onClose: [{
            type: i0.Input
        }], text: [{
            type: i0.ViewChild,
            args: ['text', { static: false }]
        }], containDetailsComponent: [{
            type: i0.ContentChild,
            args: [AlertDetailsComponent, { static: false }]
        }] }); })();
        return AlertComponent;
    }());
    AlertComponent.ctorParameters = function () { return [
        { type: AlertService }
    ]; };
    AlertComponent.propDecorators = {
        type: [{ type: i0.Input }],
        onDetail: [{ type: i0.Input }],
        onClose: [{ type: i0.Input }],
        detailedData: [{ type: i0.ViewChild, args: ['detailedData', { static: false },] }],
        text: [{ type: i0.ViewChild, args: ['text', { static: false },] }],
        containDetailsComponent: [{ type: i0.ContentChild, args: [AlertDetailsComponent, { static: false },] }]
    };

    /**
     * Alert outlet component shows all added alerts. It is used in the application's `c8y-bootstrap` component.
     *
     * For applications which don’t use `c8y-bootstrap` component but want to display alerts via AlertService, a c8y-alert-outlet component needs to be added explicitly in the template.
     *
     * ## Example:
     * ```html
     *  <div class="alerts">
     *    <c8y-alert-outlet></c8y-alert-outlet>
     *  </div>
     * ```
     */
    var AlertOutletComponent = /** @class */ (function () {
        /**
         * @ignore
         */
        function AlertOutletComponent(position, alertService) {
            this.position = position;
            this.alertService = alertService;
            /**
             * Currently displayed details of an alert. Only one alert’s details can be displayed at a time.”
             */
            this.detailDisplayedAlert = {};
            /**
             * @ignore
             */
            this.isStatic = false;
            this.isStatic = this.position === 'static';
        }
        Object.defineProperty(AlertOutletComponent.prototype, "alerts", {
            /**
             * The array of current alerts.
             */
            get: function () {
                return this.alertService.state$;
            },
            enumerable: false,
            configurable: true
        });
        /**
         * Returns a CSS class for an alert depending on its type to style the corresponding alert component.
         */
        AlertOutletComponent.prototype.getClass = function (alert) {
            var classes = [];
            if (alert.type !== 'danger') {
                classes.push('interact');
            }
            classes.push("alert-" + alert.type);
            return classes.join(' ');
        };
        /**
         * Executes alert’s onClose method, if provided, and closes the alert.
         * @param alert The alert which will be closed.
         */
        AlertOutletComponent.prototype.close = function (alert) {
            if (alert.onClose) {
                alert.onClose();
            }
            this.alertService.remove(alert);
        };
        /**
         * Expands details part of particular alert, and collapses details for another alerts.
         * @param alert The alert which details should be expanded.
         */
        AlertOutletComponent.prototype.showDetails = function (alert) {
            if (alert.onDetail) {
                return alert.onDetail();
            }
            this.detailDisplayedAlert = Object.assign({}, alert);
            this.detailDisplayedAlert.mode = 'raw';
            this.setDetailsContent(alert);
        };
        /**
         * Returns true if alert has extra detailedData or defines custom onDetail method.
         */
        AlertOutletComponent.prototype.hasDetails = function (alert) {
            return (alert.detailedData || alert.onDetail);
        };
        /**
         * Collapses alert's details.
         */
        AlertOutletComponent.prototype.closeDetails = function () {
            this.detailDisplayedAlert = {};
        };
        /**
         * Returns true if details part of alert is expanded.
         */
        AlertOutletComponent.prototype.isDetailsShow = function (alert) {
            return this.alertService.areSame(alert, this.detailDisplayedAlert);
        };
        /**
         * @ignore
         */
        AlertOutletComponent.prototype.isTemplateRef = function (value) {
            return value instanceof i0.TemplateRef;
        };
        /**
         * @ignore
         */
        AlertOutletComponent.prototype.template = function (content) {
            return this.isTemplateRef(content) ? content : undefined;
        };
        AlertOutletComponent.prototype.setDetailsContent = function (alert) {
            if (this.isTemplateRef(alert.detailedData) || typeof alert.detailedData === 'string') {
                this.detailDisplayedAlert.contents = alert.detailedData;
            }
            else {
                this.detailDisplayedAlert.contents = JSON.stringify(alert.detailedData, null, 2);
            }
        };
AlertOutletComponent.ɵfac = function AlertOutletComponent_Factory(t) { return new (t || AlertOutletComponent)(ɵngcc0.ɵɵinjectAttribute('position'), ɵngcc0.ɵɵdirectiveInject(AlertService)); };
AlertOutletComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: AlertOutletComponent, selectors: [["c8y-alert-outlet"]], hostVars: 2, hostBindings: function AlertOutletComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("static", ctx.isStatic);
    } }, decls: 2, vars: 3, consts: [["class", "alert animated fadeInRightBig m-t-16", 3, "ngClass", 4, "ngFor", "ngForOf"], [1, "alert", "animated", "fadeInRightBig", "m-t-16", 3, "ngClass"], ["type", "button", 1, "close", 3, "title", "click"], ["aria-hidden", "true"], [1, "sr-only"], [4, "ngIf", "ngIfElse"], ["class", "text-muted m-t-8", 4, "ngIf"], [4, "ngIf"], ["class", "message", 3, "textContent", 4, "ngIf"], ["class", "message", 3, "innerHTML", 4, "ngIf"], [1, "message", 3, "textContent"], [1, "message", 3, "innerHTML"], [1, "text-muted", "m-t-8"], [1, "btn", "btn-clean", 3, "title", "click"], ["c8yIcon", "chevron-down"], ["c8yIcon", "chevron-up"], [3, "textContent"]], template: function AlertOutletComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, AlertOutletComponent_div_0_Template, 12, 15, "div", 0);
        ɵngcc0.ɵɵpipe(1, "async");
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngForOf", ɵngcc0.ɵɵpipeBind1(1, 1, ctx.alerts));
    } }, directives: [ɵngcc6.NgForOf, ɵngcc6.NgClass, ɵngcc6.NgIf, IconDirective], pipes: [ɵngcc6.AsyncPipe, C8yTranslatePipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AlertOutletComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-alert-outlet',
                template: "<div\n  class=\"alert animated fadeInRightBig m-t-16\"\n  *ngFor=\"let alert of alerts | async\"\n  [ngClass]=\"[getClass(alert), isDetailsShow(alert) ? 'expanded' : '']\"\n>\n  <button title=\"{{ 'Close' | translate }}\" type=\"button\" class=\"close\" (click)=\"close(alert)\">\n    <span aria-hidden=\"true\">&times;</span>\n    <span class=\"sr-only\">{{ 'Close' | translate }}</span>\n  </button>\n\n  <div *ngIf=\"!isTemplateRef(alert.text); else template(alert.text)\">\n    <strong *ngIf=\"!alert.allowHtml\" [textContent]=\"alert.text | translate\" class=\"message\"></strong>\n    <strong *ngIf=\"alert.allowHtml\" [innerHTML]=\"alert.text | translate\" class=\"message\"></strong>\n  </div>\n  <p *ngIf=\"hasDetails(alert) && !isDetailsShow(alert)\" class=\"text-muted m-t-8\">\n    <button\n      title=\"{{ 'Show details' | translate }}\"\n      class=\"btn btn-clean\"\n      (click)=\"showDetails(alert)\"\n    >\n      <i c8yIcon=\"chevron-down\"></i>\n      {{ 'Show details' | translate }}\n    </button>\n  </p>\n  <p *ngIf=\"hasDetails(alert) && isDetailsShow(alert)\" class=\"text-muted m-t-8\">\n    <button title=\"{{ 'Hide details' | translate }}\" class=\"btn btn-clean\" (click)=\"closeDetails()\">\n      <i c8yIcon=\"chevron-up\"></i>\n      {{ 'Hide details' | translate }}\n    </button>\n  </p>\n  <div *ngIf=\"isDetailsShow(alert)\">\n    <div *ngIf=\"!isTemplateRef(detailDisplayedAlert.contents); else template(alert.detailedData)\">\n      <pre><code [textContent]=\"detailDisplayedAlert.contents | translate\"></code></pre>\n    </div>\n  </div>\n</div>\n"
            }]
    }], function () { return [{ type: String, decorators: [{
                type: i0.Attribute,
                args: ['position']
            }] }, { type: AlertService }]; }, { isStatic: [{
            type: i0.HostBinding,
            args: ['class.static']
        }] }); })();
        return AlertOutletComponent;
    }());
    AlertOutletComponent.ctorParameters = function () { return [
        { type: String, decorators: [{ type: i0.Attribute, args: ['position',] }] },
        { type: AlertService }
    ]; };
    AlertOutletComponent.propDecorators = {
        isStatic: [{ type: i0.HostBinding, args: ['class.static',] }]
    };

    /**
     * The content of `c8y-alert-text` component will be displayed as alert's text.
     * This component must be placed inside `c8y-alert` component.
     */
    var AlertTextComponent = /** @class */ (function () {
        function AlertTextComponent() {
        }
AlertTextComponent.ɵfac = function AlertTextComponent_Factory(t) { return new (t || AlertTextComponent)(); };
AlertTextComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: AlertTextComponent, selectors: [["c8y-alert-text"]], ngContentSelectors: _c1, decls: 1, vars: 0, template: function AlertTextComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AlertTextComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-alert-text',
                template: "<ng-content></ng-content>"
            }]
    }], function () { return []; }, null); })();
        return AlertTextComponent;
    }());

    /**
     * Alert module is used for displaying status messages to the user e.g. danger, success, warning and info alerts.
     */
    var AlertModule = /** @class */ (function () {
        function AlertModule() {
        }
AlertModule.ɵfac = function AlertModule_Factory(t) { return new (t || AlertModule)(); };
AlertModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: AlertModule });
AlertModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[
            CommonModule
        ]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AlertModule, [{
        type: i0.NgModule,
        args: [{
                imports: [
                    CommonModule
                ],
                exports: [
                    AlertOutletComponent,
                    AlertComponent,
                    AlertDetailsComponent,
                    AlertTextComponent
                ],
                declarations: [
                    AlertOutletComponent,
                    AlertComponent,
                    AlertDetailsComponent,
                    AlertTextComponent
                ]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(AlertModule, { declarations: [AlertOutletComponent, AlertComponent, AlertDetailsComponent, AlertTextComponent], imports: [CommonModule], exports: [AlertOutletComponent, AlertComponent, AlertDetailsComponent, AlertTextComponent] }); })();
        return AlertModule;
    }());

    /**
     * Base navigator node. Represents a single entry in the navigator menu.
     * Is considered to be the basic building block of the navigator.
     */
    var NavigatorNode = /** @class */ (function () {
        /**
         * @ignore
         */
        function NavigatorNode(data) {
            /**
             * Navigator node children (subentries).
             */
            this.children = [];
            /**
             * Navigator node parent nodes.
             */
            this.parents = [];
            /**
             * Indicates whether the navigator node should be active based on matching the node path and the URL path.
             * To match the URL exactly, set this option to true.
             *
             * routerLinkExact set to true:
             * When the URL path is set to /a/b/c and the node path to /a/b then the node will not be set active.
             *
             * routerLinkExact set to false:
             * When the URL path is set to /a/b/c and the node path to /a/b then the node will be set active.
             */
            this.routerLinkExact = true;
            /**
             * Indicates that the navigator node is expanded/collapsed.
             */
            this.open = false;
            /**
             * Indicates that the navigator node is visible/hidden.
             */
            this.hidden = false;
            /**
             * Indicates that the navigator node is draggable.
             */
            this.draggable = false;
            /**
             * Indicates that the navigator node is droppable.
             */
            this.droppable = false;
            /**
             * Indicates that the navigator node is dragged.
             */
            this.dragged = false;
            /**
             * Indicates that currently something is dragged over the node.
             */
            this.draggedHover = false;
            /**
             * Confirmation popover displayed at the end of the process of moving the navigator menu item.
             */
            this.confirm = undefined;
            this._priority = 0;
            this.update(data);
        }
        Object.defineProperty(NavigatorNode.prototype, "hasChildren", {
            /**
             * Returns information whether a navigator node has children.
             * @readonly
             */
            get: function () {
                return this.children.length > 0;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(NavigatorNode.prototype, "id", {
            /**
             * Returns the ID of the navigator node.
             * @readonly
             */
            get: function () {
                return 'navigator_node_' + lodashEs.snakeCase(this.label);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(NavigatorNode.prototype, "priority", {
            /**
             * Returns the priority value of the navigator node.
             * @readonly
             */
            get: function () {
                if (this._priority) {
                    return this._priority;
                }
                else {
                    var childrenPriorities = this.children.map(function (_a) {
                        var priority = _a.priority;
                        return priority || 0;
                    });
                    if (childrenPriorities.length) {
                        return childrenPriorities.length ? Math.max.apply(Math, __spreadArray([], __read(childrenPriorities))) : 0;
                    }
                    return 0;
                }
            },
            /**
             * Sets the priority value of the navigator node.
             *
             * @param {number} priority Priority value.
             */
            set: function (priority) {
                this._priority = priority;
            },
            enumerable: false,
            configurable: true
        });
        /**
         * @ignore
         */
        NavigatorNode.prototype.openOnStart = function (url) {
            return false;
        };
        /**
         * Adds a child navigator node to the node.
         *
         * @param {NavigatorNode} node Child node.
         */
        NavigatorNode.prototype.add = function (node) {
            if (node === this) {
                throw new Error('Adding node to itself');
            }
            if (this.children.indexOf(node) === -1) {
                this.children.push(node);
            }
            if (node.parents.indexOf(this) === -1) {
                node.parents.push(this);
            }
            this.updateChildren();
        };
        /**
         * Removes the child navigator node from the node.
         *
         * @param {NavigatorNode} node Child node.
         */
        NavigatorNode.prototype.remove = function (node) {
            var ix = this.children.indexOf(node);
            var pix = node.parents.indexOf(this);
            if (ix > -1) {
                this.children.splice(ix, 1);
            }
            if (pix > -1) {
                node.parents.splice(pix, 1);
            }
            this.updateChildren();
        };
        /**
         * Updates the navigator node.
         *
         * @param {NavigatorNodeData} data Data to be upated.
         */
        NavigatorNode.prototype.update = function (data) {
            if (data) {
                Object.assign(this, data);
                if (data.hidden !== undefined) {
                    this.parents.forEach(function (p) {
                        p.updateHidden();
                    });
                }
            }
        };
        /**
         * Returns a child navigator node based on the predicate.
         *
         * @param {string|object} predicate Filter criteria.
         *
         * @example
         * ```ts
         * // The function will compare the labels to the string and return a matching result.
         * // The capitalization of the characters does not matter (case insensitive).
         * const predicate = 'group1';
         * const childNode = parentNode.find(predicate);
         *
         * // Check: [lodash matches](https://lodash.com/docs/4.17.15#matches)
         * const predicate = { label: 'group2' };
         * const childNode = parentNode.find(predicate);
         * ```
         */
        NavigatorNode.prototype.find = function (predicate) {
            if (typeof predicate === 'string') {
                var compareLabel_1 = predicate.toLocaleLowerCase();
                predicate = function (_a) {
                    var label = _a.label;
                    return compareLabel_1 === label.toLowerCase();
                };
            }
            if (typeof predicate === 'object') {
                predicate = lodashEs.matches(predicate);
            }
            if (typeof predicate !== 'function') {
                throw new Error('Invalid search predicate');
            }
            return this.children.reduce(function (found, child) { return found || child.find(predicate); }, this.children.find(predicate));
        };
        /**
         * Removes children nodes.
         */
        NavigatorNode.prototype.empty = function () {
            this.children.length = 0;
        };
        /**
         * @ignore
         */
        NavigatorNode.prototype.click = function (options) {
            if (options === void 0) { options = {}; }
            // do nothing
        };
        /**
         * This event is fired when an element is dropped on a valid drop target.
         * @param $event DOM event.
         */
        NavigatorNode.prototype.drop = function ($event) {
            $event.stopPropagation();
            clearTimeout(this.expandDragTimeout);
        };
        /**
         * This event is fired when the user starts dragging an element.
         * @param $event DOM event.
         */
        NavigatorNode.prototype.dragStart = function ($event) {
            $event.stopPropagation();
            // we can't pass a object to setData, so we do it via service
            // set data is still needed, to make the drag&drop work
            $event.dataTransfer.setData('node', 'node');
            this.dragged = true;
        };
        /**
         * This event is fired when a drag operation has ended.
         * @param $event DOM event.
         */
        NavigatorNode.prototype.dragEnd = function ($event) {
            $event.stopPropagation();
            this.dragged = false;
            $event.dataTransfer.clearData();
        };
        Object.defineProperty(NavigatorNode.prototype, "canDrop", {
            /**
             * Returns information whether the navigator node is droppable.
             * @readonly
             */
            get: function () {
                return this.droppable;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(NavigatorNode.prototype, "canNavigate", {
            /**
             * Returns information whether navigation is possible.
             * @readonly
             */
            get: function () {
                return typeof this.path !== 'undefined';
            },
            enumerable: false,
            configurable: true
        });
        /**
         * This event is fired when a dragged element enters a valid drop target.
         * @param $event DOM event.
         */
        NavigatorNode.prototype.dragEnter = function ($event) {
            var _this = this;
            $event.preventDefault();
            $event.stopPropagation();
            this.draggedHover = true;
            if (!this.open) {
                this.expandDragTimeout = setTimeout(function () { return _this.expand(); }, 1000);
            }
        };
        /**
         * This event is fired when a dragged element leaves a valid drop target.
         * @param $event DOM event.
         */
        NavigatorNode.prototype.dragLeave = function ($event) {
            $event.preventDefault();
            $event.stopPropagation();
            this.draggedHover = false;
            clearTimeout(this.expandDragTimeout);
        };
        /**
         * Expands the navigator node if it is collapsed.
         */
        NavigatorNode.prototype.expand = function () {
            if (!this.open) {
                this.open = true;
                this.click({ open: true, expander: true });
            }
        };
        /**
         * Performs a callback function recursively on each of the navigator node's children down the hierarchy.
         * @param {function} callback Function to be called.
         *
         * @example
         * ```ts
         * const expandChild = (childNode) => childNode.expand();
         * parentNode.traverse(expandChild);
         * ```
         */
        NavigatorNode.prototype.traverse = function (callback) {
            if (this.children) {
                this.children.forEach(function (child) {
                    callback(child);
                    child.traverse(callback);
                });
            }
        };
        /**
         * @ignore
         */
        NavigatorNode.prototype.destroy = function () {
            // nothing todo here
        };
        /**
         * Updates the navigator node by sorting its children and also checking their visibility.
         */
        NavigatorNode.prototype.updateChildren = function () {
            this.sort();
            this.updateHidden();
        };
        /**
         * Sorts the children of the navigator node, by priority and name (ASC).
         * The higher the priority, the higher the position in the hierarchy.
         * For the same priority values, the alphabetical order will take precedence.
         */
        NavigatorNode.prototype.sort = function () {
            this.children.sort(function (a, b) {
                if (a.priority > b.priority) {
                    return -1;
                }
                else if (a.priority < b.priority) {
                    return 1;
                }
                else if ((a.label || '').toLowerCase() < (b.label || '').toLowerCase()) {
                    return -1;
                }
                else if ((a.label || '').toLowerCase() > (b.label || '').toLowerCase()) {
                    return 1;
                }
                else {
                    return 0;
                }
            });
        };
        /**
         * Checks if the navigator node should be hidden based on the visibility of its child nodes.
         */
        NavigatorNode.prototype.updateHidden = function () {
            if (typeof this.path === 'undefined') {
                this.hidden = !this.children.some(function (_a) {
                    var hidden = _a.hidden;
                    return !hidden;
                });
            }
        };
        return NavigatorNode;
    }());

    /**
     * Root navigator node. Top node in the hierarchy.
     * The root node is used as an anchor point for the rest of the nodes.
     */
    var NavigatorNodeRoot = /** @class */ (function (_super) {
        __extends(NavigatorNodeRoot, _super);
        function NavigatorNodeRoot() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        /**
         * Adds top nodes to the navigator tree structure. These nodes are the direct children of the root node.
         * In the case of the cockpit application, such a node is, for example, the "Home" menu entry.
         *
         * @example
         * ```ts
         * const nodeData: NavigatorNodeData = { label: 'Home' } ;
         * const root: NavigatorNodeRoot = new NavigatorNodeRoot();
         *
         * // Based on the node data, a new node will be created and assigned to root.
         * root.addRoot(nodeData);
         *
         * const parentNode: NavigatorNode =  new NavigatorNode({ label: 'Configuration'...});
         * const nodeData: NavigatorNodeData = { label: 'Exports', parent: parentNode } ;
         * const root: NavigatorNodeRoot = new NavigatorNodeRoot();
         *
         * // Based on the node data, parent node will be directly assigned to the root node, and newly created child node
         * // will be added to the parent node.
         * root.add(nodeData);
         *
         * ```
         *
         * @param {Partial<NavigatorNodeData>} nodeData Data on the basis of which a new node is created.
         */
        NavigatorNodeRoot.prototype.addRoot = function (nodeData) {
            var duplicate;
            if (nodeData.preventDuplicates) {
                duplicate = this.find(function (_a) {
                    var path = _a.path, parents = _a.parents, label = _a.label;
                    return (path === nodeData.path &&
                        label === nodeData.label &&
                        parents.some(function (p) { return p.label === nodeData.parent; }));
                });
                if (duplicate && !duplicate.hidden) {
                    duplicate.routerLinkExact = false;
                    return duplicate;
                }
            }
            var parent = nodeData.parent;
            var node = this.createNode(nodeData);
            var localParent;
            if (parent) {
                if (typeof parent === 'object') {
                    localParent = this.find(parent.label);
                    if (localParent) {
                        localParent.update(parent);
                    }
                }
                else if (typeof parent === 'string' || typeof parent === 'function') {
                    localParent = this.find(parent);
                }
                if (!localParent) {
                    localParent = this.createNode(parent);
                    if (!this.find(function (n) { return localParent === n; })) {
                        this.add(localParent);
                    }
                }
            }
            (localParent || this).add(node);
            return node;
        };
        /**
         * Creates a new navigator node.
         * @param nodeData The data that serves as the basis for creating a new node.
         */
        NavigatorNodeRoot.prototype.createNode = function (nodeData) {
            if (nodeData instanceof NavigatorNode) {
                return nodeData;
            }
            if (typeof nodeData === 'string') {
                return new NavigatorNode({ label: nodeData });
            }
            if (typeof nodeData === 'object') {
                return new NavigatorNode(Object.assign(Object.assign({}, nodeData), { parent: undefined }));
            }
            throw new Error('Wrong type of node data');
        };
        return NavigatorNodeRoot;
    }(NavigatorNode));

    /**
     * A hook to use for Multi Provider extension.
     */
    var HOOK_NAVIGATOR_NODES = new i0.InjectionToken('NavigatorNodesFactory');
    /**
     * A service which defines the navigator.
     */
    var NavigatorService = /** @class */ (function (_super) {
        __extends(NavigatorService, _super);
        function NavigatorService(injector, router) {
            var _this = _super.call(this) || this;
            _this.injector = injector;
            _this.router = router;
            /**
             * Refresh the extension factories subject.
             * @readonly
             */
            _this.refreshTrigger = new rxjs.Subject();
            /**
             * @ignore
             */
            _this.state$ = new rxjs.BehaviorSubject(new Set());
            /**
             * Indicates whether the menu entry associated with the given URL should be expanded.
             */
            _this.firstUrl = true;
            /**
             * Additional factories that can be added by plugins.
             */
            _this.factories = [];
            var rootNode = new NavigatorNodeRoot();
            _this.items$ = fromTriggerOnce(router, _this.refreshTrigger, [
                function () { return _this.injector.get(HOOK_NAVIGATOR_NODES, []); },
                function () { return _this.factories; },
                stateToFactory(_this.state$)
            ]).pipe(operators.map(function (nodes) {
                var noParent = nodes.filter(function (node) { return !node.parent; });
                var withParent = nodes.filter(function (node) { return node.parent; });
                // Based on the sortedNodes array, the nodes are sequentially created.
                // Nodes sorting is done in two steps to have the top-level nodes first.
                // This way, by the time we are adding a child node, the parent node is already present.
                var sortedNodes = sortByPriority(noParent).concat(sortByPriority(withParent));
                rootNode.empty();
                sortedNodes.forEach(function (node) { return rootNode.addRoot(node); });
                return rootNode.children;
            }), operators.shareReplay(1));
            return _this;
        }
        /**
         * Checks whenever a navigator entry associated with the given URL should be expanded.
         * @param {NavigatorNode} node Navigator node.
         */
        NavigatorService.prototype.openOnFirstUrl = function (node) {
            if (this.firstUrl && !!node.path) {
                return (this.router.isActive(node.path, node.routerLinkExact) || node.openOnStart(this.router.url));
            }
            return false;
        };
        Object.defineProperty(NavigatorService.prototype, "state", {
            /**
             * Returns the current state.
             * @readonly
             * @returns The current set of actions.
             */
            get: function () {
                return this.state$.value;
            },
            enumerable: false,
            configurable: true
        });
        /**
         * Refresh the extension factories.
         */
        NavigatorService.prototype.refresh = function () {
            this.refreshTrigger.next(1);
        };
        /**
         * Adds a new node to the navigator.
         * @param {NavigatorNode} node Navigator node to add.
         */
        NavigatorService.prototype.add = function (node) {
            this.state.add(node);
            this.emitNewState();
        };
        /**
         * Removes a node from the navigator.
         * @param {NavigatorNode} node Navigator node to remove.
         */
        NavigatorService.prototype.remove = function (node) {
            this.state.delete(node);
            this.emitNewState();
        };
NavigatorService.ɵfac = function NavigatorService_Factory(t) { return new (t || NavigatorService)(ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(ɵngcc1.Router)); };
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NavigatorService, [{
        type: i0.Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return [{ type: ɵngcc0.Injector }, { type: ɵngcc1.Router }]; }, null); })();
        return NavigatorService;
    }(StateService));
    NavigatorService.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function NavigatorService_Factory() { return new NavigatorService(i0__namespace.ɵɵinject(i0__namespace.INJECTOR), i0__namespace.ɵɵinject(i1__namespace.Router)); }, token: NavigatorService, providedIn: "root" });
    NavigatorService.ctorParameters = function () { return [
        { type: i0.Injector },
        { type: i1.Router }
    ]; };

    var _a$1, _b$1, _c, _d, _e;
    exports.Status = void 0;
    (function (Status) {
        Status["SUCCESS"] = "success";
        Status["WARNING"] = "warning";
        Status["DANGER"] = "danger";
        Status["INFO"] = "info";
    })(exports.Status || (exports.Status = {}));
    var statusIcons = (_a$1 = {},
        _a$1[exports.Status.SUCCESS] = 'check-circle',
        _a$1[exports.Status.WARNING] = 'exclamation-triangle',
        _a$1[exports.Status.DANGER] = 'exclamation-circle',
        _a$1[exports.Status.INFO] = 'info-circle',
        _a$1);
    var statusClasses = (_b$1 = {},
        _b$1[exports.Status.SUCCESS] = "text-" + exports.Status.SUCCESS,
        _b$1[exports.Status.WARNING] = "text-" + exports.Status.WARNING,
        _b$1[exports.Status.DANGER] = "text-" + exports.Status.DANGER,
        _b$1[exports.Status.INFO] = "text-" + exports.Status.INFO,
        _b$1);
    var statusAlert = (_c = {},
        _c[exports.Status.SUCCESS] = "alert-" + exports.Status.SUCCESS,
        _c[exports.Status.WARNING] = "alert-" + exports.Status.WARNING,
        _c[exports.Status.DANGER] = "alert-" + exports.Status.DANGER,
        _c[exports.Status.INFO] = "alert-" + exports.Status.INFO,
        _c);
    var operationStatusIcons = (_d = {},
        _d[client.OperationStatus.PENDING] = 'clock-o',
        _d[client.OperationStatus.EXECUTING] = 'refresh',
        _d[client.OperationStatus.SUCCESSFUL] = 'check-circle',
        _d[client.OperationStatus.FAILED] = 'exclamation-circle',
        _d);
    var operationStatusClasses = (_e = {},
        _e[client.OperationStatus.PENDING] = 'text-info',
        _e[client.OperationStatus.EXECUTING] = 'text-info',
        _e[client.OperationStatus.SUCCESSFUL] = 'text-success',
        _e[client.OperationStatus.FAILED] = 'text-danger',
        _e);

    function retryWithDelay(delayTime, count) {
        if (count === void 0) { count = 1; }
        return function (input) { return input.pipe(operators.retryWhen(function (errors) { return errors.pipe(operators.scan(function (acc, error) { return ({ count: acc.count + 1, error: error }); }, {
            count: 0,
            error: undefined,
        }), operators.tap(function (current) {
            if (current.count > count) {
                throw current.error;
            }
        }), operators.delay(delayTime)); })); };
    }

    /**
     * A service which defines header functions.
     */
    var HeaderService = /** @class */ (function (_super) {
        __extends(HeaderService, _super);
        function HeaderService(navigatorService, options, humanizeAppName) {
            var _this = _super.call(this) || this;
            _this.navigatorService = navigatorService;
            _this.options = options;
            _this.humanizeAppName = humanizeAppName;
            _this.headerOpen = false;
            _this.DELAY_TO_AVOID_FLICKERING_ON_ASYNC_NODES = 1000;
            _this.hasItemsInNavigator$ = _this.navigatorService.items$.pipe(operators.delay(_this.DELAY_TO_AVOID_FLICKERING_ON_ASYNC_NODES), operators.map(function (_a) {
                var length = _a.length;
                return !!length;
            }), operators.distinctUntilChanged());
            _this.state$ = new rxjs.BehaviorSubject({
                title: undefined,
                nav: {
                    open: false
                }
            });
            _this.title = undefined;
            _this.header$ = _this.map(function (header) { return header; });
            _this.navigatorOpen$ = _this.map(function (_a) {
                var nav = _a.nav;
                return nav.open;
            }).pipe(operators.combineLatest(_this.hasItemsInNavigator$), operators.map(function (_a) {
                var _b = __read(_a, 2), open = _b[0], hasItems = _b[1];
                return open && hasItems;
            }));
            var titleReference = document.querySelector('title');
            var isGlobalTitleValid = (!!options.globalTitle && typeof options.globalTitle === 'string' && options.globalTitle.length > 0);
            _this.title = {
                elementRef: titleReference,
                titleSuffix: isGlobalTitleValid ? options.globalTitle + " - " + options.name : options.name
            };
            _this.humanizeAppName.transform(options.name)
                .subscribe(function (nameTranslated) {
                _this.title.titleSuffix = isGlobalTitleValid ? options.globalTitle + " - " + nameTranslated : nameTranslated;
            });
            return _this;
        }
        Object.defineProperty(HeaderService.prototype, "state", {
            get: function () {
                return this.state$.value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(HeaderService.prototype, "navigatorHiddenOnStartup", {
            get: function () {
                return this.options.hideNavigator;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(HeaderService.prototype, "largeWidth", {
            get: function () {
                return document.documentElement.clientWidth > 1200;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(HeaderService.prototype, "shouldToggle", {
            get: function () {
                return this.largeWidth && !this.navigatorHiddenOnStartup && !this.state.nav.open;
            },
            enumerable: false,
            configurable: true
        });
        /**
         * Toggles the main header menu in mobile view.
         */
        HeaderService.prototype.toggle = function () {
            this.headerOpen = !this.headerOpen;
        };
        /**
         * Toggles the navigator open status.
         */
        HeaderService.prototype.toggleNavigator = function () {
            this.state.nav.open = !this.state.nav.open;
            this.emitNewState();
        };
        /**
         * Force to close the navigator.
         */
        HeaderService.prototype.closeNavigator = function () {
            this.state.nav.open = false;
            this.emitNewState();
        };
        /**
         * Configures navigation options.
         * @param config Object with the properties:
         * - open: Boolean
         */
        HeaderService.prototype.configNavigator = function (config) {
            if (config === void 0) { config = {}; }
            this.state.nav = Object.assign(this.state.nav, config);
            this.emitNewState();
        };
        /**
         * Change the application title.
         * @param newTitle The new title of the application.
         */
        HeaderService.prototype.changeTitle = function (newTitle, pageTitleUpdate) {
            if (pageTitleUpdate === void 0) { pageTitleUpdate = true; }
            this.state.title = newTitle;
            this.state.pageTitleUpdate = pageTitleUpdate;
            this.emitNewState();
        };
        /**
         * Change the page title.
         * @param newTitle The new title of the page.
         */
        HeaderService.prototype.changePageTitle = function (newTitle) {
            this.title.elementRef.innerText = newTitle
                ? newTitle + " / " + this.title.titleSuffix
                : "" + this.title.titleSuffix;
        };
        /**
         * This methods checks if the navigator toggles on startup
         * or if an item is added to the navigator node.
         * Delay of 300ms is intended for animation purpose.
         */
        HeaderService.prototype.verifyIfNavOpen = function () {
            var _this = this;
            this.hasItemsInNavigator$
                .pipe(operators.debounceTime(300))
                .subscribe(function (hasItems) { return hasItems && _this.shouldToggle && _this.toggleNavigator(); });
        };
        HeaderService.prototype.shouldShowBreadcrumbs = function () {
            return this.options.breadcrumbs;
        };
HeaderService.ɵfac = function HeaderService_Factory(t) { return new (t || HeaderService)(ɵngcc0.ɵɵinject(NavigatorService), ɵngcc0.ɵɵinject(OptionsService), ɵngcc0.ɵɵinject(HumanizeAppNamePipe)); };
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HeaderService, [{
        type: i0.Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return [{ type: NavigatorService }, { type: OptionsService }, { type: HumanizeAppNamePipe }]; }, null); })();
        return HeaderService;
    }(StateService));
    HeaderService.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function HeaderService_Factory() { return new HeaderService(i0__namespace.ɵɵinject(NavigatorService), i0__namespace.ɵɵinject(OptionsService), i0__namespace.ɵɵinject(HumanizeAppNamePipe)); }, token: HeaderService, providedIn: "root" });
    HeaderService.ctorParameters = function () { return [
        { type: NavigatorService },
        { type: OptionsService },
        { type: HumanizeAppNamePipe }
    ]; };

    var HOOK_BREADCRUMB = new i0.InjectionToken('BreadcrumbFactory');
    var BreadcrumbService = /** @class */ (function (_super) {
        __extends(BreadcrumbService, _super);
        function BreadcrumbService(injector, router) {
            var _this = _super.call(this) || this;
            _this.injector = injector;
            _this.factories = [];
            _this.refreshTrigger = new rxjs.Subject();
            _this.state$ = new rxjs.BehaviorSubject(new Set());
            _this.items$ = fromTrigger(router, _this.refreshTrigger, [
                function () { return _this.injector.get(HOOK_BREADCRUMB, []); },
                function () { return _this.factories; },
                stateToFactory(_this.state$)
            ]).pipe(operators.map(function (breadcrumbs) { return _this.sortByPreferredPath(breadcrumbs); }), operators.shareReplay(1));
            return _this;
        }
        Object.defineProperty(BreadcrumbService.prototype, "state", {
            get: function () {
                return this.state$.value;
            },
            enumerable: false,
            configurable: true
        });
        /**
         * Adds a new item to the action bar in the header.
         * @param item The item to add.
         */
        BreadcrumbService.prototype.add = function (item) {
            this.state.add(item);
            this.emitNewState();
        };
        /**
         * Removes an action bar item from the header.
         * @param item The item to remove.
         */
        BreadcrumbService.prototype.remove = function (item) {
            this.state.delete(item);
            this.emitNewState();
        };
        /**
         * Refresh the extension factories
         */
        BreadcrumbService.prototype.refresh = function () {
            this.refreshTrigger.next(1);
        };
        /**
         * Sets the crumb that contains that path to the top.
         * @param path The path to prefer.
         */
        BreadcrumbService.prototype.selectPreferredByPath = function (path) {
            this.preferredPath = path;
            this.refresh();
        };
        BreadcrumbService.prototype.sortByPreferredPath = function (breadcrumbs) {
            var _this = this;
            if (this.preferredPath) {
                return breadcrumbs.sort(function (bc) { return bc.items.find(function (item) { return !!item.path.match(_this.preferredPath); }) ? -1 : 1; });
            }
            return breadcrumbs;
        };
BreadcrumbService.ɵfac = function BreadcrumbService_Factory(t) { return new (t || BreadcrumbService)(ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(ɵngcc1.Router)); };
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BreadcrumbService, [{
        type: i0.Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return [{ type: ɵngcc0.Injector }, { type: ɵngcc1.Router }]; }, null); })();
        return BreadcrumbService;
    }(StateService));
    BreadcrumbService.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function BreadcrumbService_Factory() { return new BreadcrumbService(i0__namespace.ɵɵinject(i0__namespace.INJECTOR), i0__namespace.ɵɵinject(i1__namespace.Router)); }, token: BreadcrumbService, providedIn: "root" });
    BreadcrumbService.ctorParameters = function () { return [
        { type: i0.Injector },
        { type: i1.Router }
    ]; };

    var HOOK_DOCS = new i0.InjectionToken('Hook docs');

    var documentationItems = [
        {
            icon: 'c8y-c8y-data',
            label: gettext('Concepts guide`KEEP_ORIGINAL`'),
            url: '/concepts/introduction',
            type: 'doc'
        },
        {
            icon: 'c8y-user',
            label: gettext('User guide`KEEP_ORIGINAL`'),
            url: '/users-guide/getting-started',
            type: 'doc'
        },
        {
            icon: 'c8y-device-management',
            label: gettext('Device guides`KEEP_ORIGINAL`'),
            url: '/devices/overview',
            type: 'doc'
        },
        {
            icon: 'c8y-book',
            label: gettext('Cumulocity IoT Edge`KEEP_ORIGINAL`'),
            url: '/edge/overview',
            type: 'doc'
        },
        {
            icon: 'c8y-tools',
            label: gettext('Microservice SDK guide`KEEP_ORIGINAL`'),
            url: '/microservice-sdk/introduction',
            type: 'doc'
        },
        {
            icon: 'c8y-tools',
            label: gettext('Device SDK guide`KEEP_ORIGINAL`'),
            url: '/device-sdk/introduction',
            type: 'doc'
        },
        {
            icon: 'c8y-smart-rest',
            label: gettext('Web SDK guide`KEEP_ORIGINAL`'),
            url: '/web/introduction',
            type: 'doc'
        },
        {
            icon: 'c8y-data-explorer',
            label: gettext('Streaming analytics guide`KEEP_ORIGINAL`'),
            url: '/apama/introduction',
            type: 'doc'
        },
        {
            icon: 'c8y-bookmark',
            label: gettext('Reference guide`KEEP_ORIGINAL`'),
            url: '/reference/rest-implementation',
            type: 'doc'
        },
        {
            icon: 'gavel',
            label: gettext('Legal notices'),
            url: 'https://documentation.softwareag.com/legal/',
            type: 'doc'
        }
    ];

    var DocsService = /** @class */ (function () {
        function DocsService(options, app, injector, router) {
            var _this = this;
            this.options = options;
            this.app = app;
            this.injector = injector;
            /**
             * Additional factories that can be added by plugins.
             */
            this.factories = [];
            /**
             * Refresh the extension factories subject.
             * @readonly
             */
            this.refreshTrigger = new rxjs.Subject();
            var supportUrlRefreshTrigger = this.app.map(function (_a) {
                var supportUrl = _a.supportUrl;
                return supportUrl;
            });
            this.items$ = fromTriggerOnce(router, [supportUrlRefreshTrigger, this.refreshTrigger], [function () { return _this.injector.get(HOOK_DOCS, []); }, function () { return _this.factories; }, this]).pipe(operators.startWith([]), operators.shareReplay(1));
        }
        DocsService.prototype.getBaseUrl = function () {
            return this.options.get('docsBaseUrl', 'https://www.cumulocity.com/guides');
        };
        Object.defineProperty(DocsService.prototype, "templateStr", {
            get: function () {
                return this.options.get('guideHrefTemplate', '${docsBaseUrl}${partialUrl}');
            },
            enumerable: false,
            configurable: true
        });
        DocsService.prototype.getUserGuideLink = function (link) {
            if (/^https?:/.test(link)) {
                return link;
            }
            if (this.getBaseUrl === null) {
                return null;
            }
            return this.getLink(this.templateStr, link);
        };
        DocsService.prototype.list = function () {
            return this.items$
                .pipe(operators.filter(function (i) { return !!i.length; }), operators.first())
                .toPromise();
        };
        DocsService.prototype.refresh = function () {
            this.refreshTrigger.next(1);
        };
        DocsService.prototype.get = function () {
            var _this = this;
            // use the function as a factory
            var _a = this.options.get('docs', {}), links = _a.links, noDefault = _a.noDefault, _b = _a.excludeDefault, excludeDefault = _b === void 0 ? [] : _b;
            var supportUrl = this.app.state.supportUrl;
            var staticLinks = noDefault
                ? []
                : documentationItems
                    .map(function (item) { return (Object.assign(Object.assign({}, item), { url: _this.getUserGuideLink(item.url) })); })
                    .filter(function (_a) {
                    var url = _a.url;
                    return !excludeDefault.some(function (e) { return new RegExp(e).test(url); });
                });
            if (links) {
                // backwards compatibility
                links.map(function (lnk) {
                    if (lodashEs.isUndefined(lnk.type)) {
                        lnk.type = 'doc';
                        return lnk;
                    }
                });
                staticLinks = staticLinks.concat(links);
            }
            if (supportUrl) {
                staticLinks.push({
                    icon: 'comments',
                    label: gettext('Forum support'),
                    url: supportUrl,
                    type: 'doc'
                });
            }
            return staticLinks;
        };
        DocsService.prototype.getLink = function (templateStr, partialLink) {
            if (!templateStr) {
                return undefined;
            }
            return templateStr
                .replace(/\${docsBaseUrl}/, this.getBaseUrl())
                .replace(/\${partialUrl}/, this.prefixWithSlash(partialLink));
        };
        DocsService.prototype.prefixWithSlash = function (partialLink) {
            if (partialLink === void 0) { partialLink = ''; }
            var shouldPrefix = !(partialLink && /^\//.test(partialLink));
            var prefix = shouldPrefix ? '/' : '';
            return "" + prefix + partialLink;
        };
DocsService.ɵfac = function DocsService_Factory(t) { return new (t || DocsService)(ɵngcc0.ɵɵinject(OptionsService), ɵngcc0.ɵɵinject(AppStateService), ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(ɵngcc1.Router)); };
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DocsService, [{
        type: i0.Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return [{ type: OptionsService }, { type: AppStateService }, { type: ɵngcc0.Injector }, { type: ɵngcc1.Router }]; }, null); })();
        return DocsService;
    }());
    DocsService.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function DocsService_Factory() { return new DocsService(i0__namespace.ɵɵinject(OptionsService), i0__namespace.ɵɵinject(AppStateService), i0__namespace.ɵɵinject(i0__namespace.INJECTOR), i0__namespace.ɵɵinject(i1__namespace.Router)); }, token: DocsService, providedIn: "root" });
    DocsService.ctorParameters = function () { return [
        { type: OptionsService },
        { type: AppStateService },
        { type: i0.Injector },
        { type: i1.Router }
    ]; };

    /**
     * Time the hook waits until it emits an undefined value.
     * Used for not defined widgets -> by default after 5s we
     * show an error that the widget could not be loaded.
     */
    var RESOLVING_COMPONENT_WAIT_TIME = new i0.InjectionToken('RESOLVING_COMPONENT_WAIT_TIME');
    /**
     * A hook to add dynamic components to the UI (e.g. widgets).
     */
    var HOOK_COMPONENTS = new i0.InjectionToken('Hook Dynamic Component');

    var DynamicComponentService = /** @class */ (function (_super) {
        __extends(DynamicComponentService, _super);
        function DynamicComponentService(injector, router, waitTimeout) {
            var _this = _super.call(this) || this;
            _this.injector = injector;
            _this.refreshTrigger = new rxjs.Subject();
            _this.state$ = new rxjs.BehaviorSubject(new Set());
            /**
             * Additional factories that can be added by plugins.
             */
            _this.factories = [];
            _this.items$ = fromTriggerOnce(router, _this.refreshTrigger, [
                function () { return _this.injector.get(HOOK_COMPONENTS, []); },
                function () { return _this.factories; },
                stateToFactory(_this.state$)
            ]).pipe(operators.takeUntil(rxjs.timer(waitTimeout)), operators.shareReplay(1));
            return _this;
        }
        DynamicComponentService.prototype.refresh = function () {
            this.refreshTrigger.next(1);
        };
        Object.defineProperty(DynamicComponentService.prototype, "state", {
            get: function () {
                return this.state$.value;
            },
            enumerable: false,
            configurable: true
        });
        /**
         * Returns a component by it's id as an observable.
         * @param id The id of the component.
         */
        DynamicComponentService.prototype.getById = function (id) {
            return this.items$
                .pipe(operators.mergeMap(function (cmps) { return cmps; }), operators.filter(function (cmp) { return cmp.id === id; }), operators.take(1))
                .toPromise();
        };
        DynamicComponentService.prototype.add = function (component) {
            this.state.add(component);
            this.emitNewState();
        };
        DynamicComponentService.prototype.remove = function (component) {
            this.state.delete(component);
            this.emitNewState();
        };
DynamicComponentService.ɵfac = function DynamicComponentService_Factory(t) { return new (t || DynamicComponentService)(ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(ɵngcc1.Router), ɵngcc0.ɵɵinject(RESOLVING_COMPONENT_WAIT_TIME)); };
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DynamicComponentService, [{
        type: i0.Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return [{ type: ɵngcc0.Injector }, { type: ɵngcc1.Router }, { type: Number, decorators: [{
                type: i0.Inject,
                args: [RESOLVING_COMPONENT_WAIT_TIME]
            }] }]; }, null); })();
        return DynamicComponentService;
    }(StateService));
    DynamicComponentService.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function DynamicComponentService_Factory() { return new DynamicComponentService(i0__namespace.ɵɵinject(i0__namespace.INJECTOR), i0__namespace.ɵɵinject(i1__namespace.Router), i0__namespace.ɵɵinject(RESOLVING_COMPONENT_WAIT_TIME)); }, token: DynamicComponentService, providedIn: "root" });
    DynamicComponentService.ctorParameters = function () { return [
        { type: i0.Injector },
        { type: i1.Router },
        { type: Number, decorators: [{ type: i0.Inject, args: [RESOLVING_COMPONENT_WAIT_TIME,] }] }
    ]; };

    /**
     * A hook to use for Multi Provider extension.
     */
    var HOOK_TABS = new i0.InjectionToken('TabsFactory');
    /**
     * A service which defines the used tabs.
     */
    var TabsService = /** @class */ (function (_super) {
        __extends(TabsService, _super);
        function TabsService(injector, router, translateService, options) {
            var _this = _super.call(this) || this;
            _this.injector = injector;
            _this.translateService = translateService;
            _this.options = options;
            _this.refreshTrigger = new rxjs.Subject();
            _this.state$ = new rxjs.BehaviorSubject(new Set());
            /**
             * Additional factories that can be added by plugins.
             */
            _this.factories = [];
            _this.items$ = fromTrigger(router, _this.refreshTrigger, [
                function () { return _this.injector.get(HOOK_TABS, []); },
                function () { return _this.factories; },
                stateToFactory(_this.state$)
            ]).pipe(operators.map(function (tabs) { return _this.prepareTabs(tabs); }), operators.shareReplay(1), operators.distinctUntilChanged());
            _this.orientation$ = _this.items$.pipe(operators.map(function (tabs) {
                var firstTabWithDefinedOrientation = tabs.find(function (tab) { return tab.orientation; });
                if (firstTabWithDefinedOrientation) {
                    return firstTabWithDefinedOrientation.orientation;
                }
                return _this.options.tabsHorizontal ? 'horizontal' : 'vertical';
            }), operators.distinctUntilChanged());
            return _this;
        }
        TabsService.prototype.prepareTabs = function (tabs) {
            return this.sortTabs(tabs
                .map(function (tab) { return (Object.assign(Object.assign({}, tab), { template: tab.template instanceof i0.ViewContainerRef ? tab.template : undefined })); })
                .filter(function (tab, index, self) { return index === self.findIndex(function (t) { return t.path === tab.path; }); }));
        };
        TabsService.prototype.sortTabs = function (tabs) {
            var _this = this;
            return tabs.sort(function (a, b) {
                var priorityOrder = (b.priority || 0) - (a.priority || 0);
                var aTranslatedLabel = _this.translateService.instant(a.label);
                var bTranslatedLabel = _this.translateService.instant(b.label);
                var translatedLabelOrder = aTranslatedLabel.localeCompare(bTranslatedLabel);
                return priorityOrder || translatedLabelOrder;
            });
        };
        /**
         * Refresh the extension factories
         */
        TabsService.prototype.refresh = function () {
            this.refreshTrigger.next(1);
        };
        Object.defineProperty(TabsService.prototype, "state", {
            /**
             * Returns the current state.
             * @readonly
             * @returns The current set of actions.
             */
            get: function () {
                return this.state$.value;
            },
            enumerable: false,
            configurable: true
        });
        /**
         * Adds a new item to tabs and emits state change
         * @param item The item to add.
         */
        TabsService.prototype.add = function (item) {
            this.state.add(item);
            this.emitNewState();
        };
        /**
         * Removes a tab and emits a state change.
         * @param item The item to remove.
         */
        TabsService.prototype.remove = function (item) {
            this.state.delete(item);
            this.emitNewState();
        };
        Object.defineProperty(TabsService.prototype, "firstTab$", {
            get: function () {
                return this.items$.pipe(operators.map(function (tabs) { return tabs[0]; }), operators.filter(Boolean), operators.first());
            },
            enumerable: false,
            configurable: true
        });
TabsService.ɵfac = function TabsService_Factory(t) { return new (t || TabsService)(ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(ɵngcc1.Router), ɵngcc0.ɵɵinject(ɵngcc4.TranslateService), ɵngcc0.ɵɵinject(OptionsService)); };
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TabsService, [{
        type: i0.Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return [{ type: ɵngcc0.Injector }, { type: ɵngcc1.Router }, { type: ɵngcc4.TranslateService }, { type: OptionsService }]; }, null); })();
        return TabsService;
    }(StateService));
    TabsService.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function TabsService_Factory() { return new TabsService(i0__namespace.ɵɵinject(i0__namespace.INJECTOR), i0__namespace.ɵɵinject(i1__namespace.Router), i0__namespace.ɵɵinject(i1__namespace$1.TranslateService), i0__namespace.ɵɵinject(OptionsService)); }, token: TabsService, providedIn: "root" });
    TabsService.ctorParameters = function () { return [
        { type: i0.Injector },
        { type: i1.Router },
        { type: i1$1.TranslateService },
        { type: OptionsService }
    ]; };

    var RouterTabsResolver = /** @class */ (function () {
        function RouterTabsResolver(injector, router) {
            this.injector = injector;
            this.router = router;
        }
        Object.defineProperty(RouterTabsResolver.prototype, "routerStateSnapshot", {
            get: function () {
                return this.router.routerState.snapshot;
            },
            enumerable: false,
            configurable: true
        });
        RouterTabsResolver.prototype.resolve = function (route) {
            var _this = this;
            var latestChildren = this.router.config.find(function (r) { return route.routeConfig.path === r.path; }).children;
            return rxjs.from(latestChildren || []).pipe(operators.mergeMap(function (child) { return rxjs.from(_this.getGuards(child)).pipe(operators.map(function (guard) { return guard.canActivate(route, _this.routerStateSnapshot); }), operators.mergeMap(function (result) {
                if (rxjs.isObservable(result)) {
                    return result;
                }
                if (result && typeof result.then === 'function') {
                    return rxjs.from(result);
                }
                return rxjs.of(result);
            }), operators.tap(function (result) {
                if (Array.isArray(result)) {
                    child.tabs = result;
                }
            }), operators.every(function (result) { return !!result; }), operators.filter(function (result) { return result; }), operators.mergeMap(function () { return (Array.isArray(child.tabs) ? rxjs.from(child.tabs) : rxjs.of(child)); }), operators.map(function (result) { return result.label || result.path
                ? {
                    label: result.label,
                    icon: result.icon,
                    path: decodeURIComponent(route.url.join('/')) + "/" + result.path,
                    priority: result.priority,
                    hide: result.hide
                }
                : undefined; })); }), operators.filter(function (tabs) { return !!tabs; }), operators.toArray());
        };
        RouterTabsResolver.prototype.getGuards = function (child) {
            var _this = this;
            var guards = (child.canActivate || []).map(function (guard) {
                return _this.injector.get(guard);
            });
            if (child.data && child.data.showIf) {
                guards.push({ canActivate: child.data.showIf });
            }
            return guards;
        };
RouterTabsResolver.ɵfac = function RouterTabsResolver_Factory(t) { return new (t || RouterTabsResolver)(ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(ɵngcc1.Router)); };
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(RouterTabsResolver, [{
        type: i0.Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return [{ type: ɵngcc0.Injector }, { type: ɵngcc1.Router }]; }, null); })();
        return RouterTabsResolver;
    }());
    RouterTabsResolver.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function RouterTabsResolver_Factory() { return new RouterTabsResolver(i0__namespace.ɵɵinject(i0__namespace.INJECTOR), i0__namespace.ɵɵinject(i1__namespace.Router)); }, token: RouterTabsResolver, providedIn: "root" });
    RouterTabsResolver.ctorParameters = function () { return [
        { type: i0.Injector },
        { type: i1.Router }
    ]; };

    exports.ViewContext = void 0;
    (function (ViewContext) {
        ViewContext["Device"] = "device/:id";
        ViewContext["Group"] = "group/:id";
        ViewContext["User"] = "users/:id";
        ViewContext["Application"] = "ecosystem/application/:id";
        ViewContext["Microservice"] = "microservices/:id";
        ViewContext["SubscribedApplications"] = "subscribedApplications/:id";
        ViewContext["Tenant"] = "tenants/:id";
        ViewContext["Report"] = "reports/:id";
    })(exports.ViewContext || (exports.ViewContext = {}));

    var ViewContextServices = /** @class */ (function () {
        function ViewContextServices() {
        }
        ViewContextServices.contextToService = function (context) {
            return ViewContextServices.services.get(context);
        };
        return ViewContextServices;
    }());
    ViewContextServices.services = new Map([
        [exports.ViewContext.Device, client.InventoryService],
        [exports.ViewContext.Group, client.InventoryService],
        [exports.ViewContext.User, client.UserService],
        [exports.ViewContext.Application, client.ApplicationService],
        [exports.ViewContext.Microservice, client.ApplicationService],
        [exports.ViewContext.SubscribedApplications, client.ApplicationService],
        [exports.ViewContext.Tenant, client.TenantService],
        [exports.ViewContext.Report, client.InventoryService]
    ]);

    var ContextRouteService = /** @class */ (function () {
        function ContextRouteService(tabsResolver, tabsService, router, apiService, injector) {
            this.tabsResolver = tabsResolver;
            this.tabsService = tabsService;
            this.router = router;
            this.apiService = apiService;
            this.injector = injector;
            this.lastAddedTabs = [];
            this.refreshTrigger = new rxjs.Subject();
        }
        ContextRouteService.prototype.init = function (route) {
            var _this = this;
            this.routerSubscription = this.router.events
                .pipe(operators.filter(function (e) { return e instanceof i1.NavigationEnd; }))
                .subscribe(function () { return _this.redirectToFirstTab(); });
            this.dataSubscription = route.data
                .pipe(operators.merge(this.updatedContext(route), this.refreshTrigger), operators.switchMap(function () { return _this.tabsResolver.resolve(route.snapshot); }))
                .subscribe(function (tabs) { return _this.updateTabs(tabs); });
        };
        ContextRouteService.prototype.destroy = function () {
            var _this = this;
            this.dataSubscription.unsubscribe();
            this.routerSubscription.unsubscribe();
            this.lastAddedTabs.forEach(function (t) { return _this.tabsService.remove(t); });
        };
        ContextRouteService.prototype.refreshContext = function () {
            this.refreshTrigger.next();
        };
        ContextRouteService.prototype.updatedContext = function (route) {
            var data = route.snapshot.data;
            var serviceInstance = ViewContextServices.contextToService(data.context);
            if (serviceInstance) {
                var service = this.injector.get(serviceInstance);
                var detailsUrlRegex = service.getDetailUrl(data.contextData).replace(/\d+/g, '?\\d*');
                var contextRegex_1 = new RegExp(detailsUrlRegex, 'i');
                var childrenRegex_1 = new RegExp(detailsUrlRegex + "/child", 'i');
                var filterResponse = function (_a) {
                    var url = _a.url, method = _a.method;
                    var contextChanged = contextRegex_1.test(url) && ['POST', 'PUT'].includes(method);
                    var childrenAffected = childrenRegex_1.test(url) && ['POST', 'DELETE'].includes(method);
                    return contextChanged || childrenAffected;
                };
                return this.apiService.hookResponse(filterResponse);
            }
            return rxjs.NEVER;
        };
        ContextRouteService.prototype.updateTabs = function (tabs) {
            var _this = this;
            if (tabs === void 0) { tabs = []; }
            this.lastAddedTabs.forEach(function (t) { return _this.tabsService.remove(t); });
            this.lastAddedTabs = tabs;
            tabs.forEach(function (t) { return _this.tabsService.add(t); });
            this.redirectToFirstTab();
        };
        ContextRouteService.prototype.redirectToFirstTab = function () {
            var _this = this;
            if (this.needsRedirect()) {
                this.tabsService.firstTab$.subscribe(function (tab) {
                    if (tab) {
                        _this.router.navigateByUrl(tab.path, { replaceUrl: true });
                    }
                });
            }
        };
        ContextRouteService.prototype.needsRedirect = function () {
            var tree = this.router.parseUrl(this.router.url);
            var groups = tree.root.children[i1.PRIMARY_OUTLET];
            var context = this.getMatchingContextRoute(this.router.url);
            if (!context) {
                return groups.segments.length === 2;
            }
            else {
                return context.split('/').length === groups.segments.length;
            }
        };
        ContextRouteService.prototype.getMatchingContextRoute = function (url) {
            var viewContexts = Object.values(exports.ViewContext);
            var urlWithoutId = url.replace(/\d(.*)/g, '');
            var id = viewContexts.findIndex(function (context) { return "/" + context.replace(':id', '') === urlWithoutId; });
            return viewContexts[id];
        };
ContextRouteService.ɵfac = function ContextRouteService_Factory(t) { return new (t || ContextRouteService)(ɵngcc0.ɵɵinject(RouterTabsResolver), ɵngcc0.ɵɵinject(TabsService), ɵngcc0.ɵɵinject(ɵngcc1.Router), ɵngcc0.ɵɵinject(ɵngcc2.ApiService), ɵngcc0.ɵɵinject(ɵngcc0.Injector)); };
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ContextRouteService, [{
        type: i0.Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return [{ type: RouterTabsResolver }, { type: TabsService }, { type: ɵngcc1.Router }, { type: ɵngcc2.ApiService }, { type: ɵngcc0.Injector }]; }, null); })();
        return ContextRouteService;
    }());
    ContextRouteService.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function ContextRouteService_Factory() { return new ContextRouteService(i0__namespace.ɵɵinject(RouterTabsResolver), i0__namespace.ɵɵinject(TabsService), i0__namespace.ɵɵinject(i1__namespace.Router), i0__namespace.ɵɵinject(i4__namespace.ApiService), i0__namespace.ɵɵinject(i0__namespace.INJECTOR)); }, token: ContextRouteService, providedIn: "root" });
    ContextRouteService.ctorParameters = function () { return [
        { type: RouterTabsResolver },
        { type: TabsService },
        { type: i1.Router },
        { type: i4.ApiService },
        { type: i0.Injector }
    ]; };

    /**
     * A hook to use for Multi Provider extension.
     * @deprecated: Use HOOK_ROUTE
     */
    var HOOK_ONCE_ROUTE = new i0.InjectionToken('RouteFactory');
    /**
     * A hook to use for Multi Provider extension.
     */
    var HOOK_ROUTE = new i0.InjectionToken('HookRoute');
    /**
     * A service which defines routes
     */
    var RouterService = /** @class */ (function () {
        function RouterService(injector, router, contextRouteService) {
            var _this = this;
            this.injector = injector;
            this.router = router;
            this.contextRouteService = contextRouteService;
            this.refreshTrigger = new rxjs.Subject();
            this.state = new Map();
            this.factories = [];
            this.refreshTrigger
                .pipe(operators.startWith(1), operators.switchMap(function () { return fromFactories([
                function () { return _this.injector.get(HOOK_ROUTE, []); },
                function () { return _this.getComponentsViaDeprecatedHook(); },
                function () { return _this.factories; }
            ], router, false); }))
                .subscribe(function (routes) {
                var toAddRoutes = routes.filter(function (route) {
                    var path = "" + (route.context || '') + route.path;
                    var isAlreadyAdded = _this.state.has(path);
                    if (!isAlreadyAdded) {
                        _this.state.set(path, route);
                    }
                    return !isAlreadyAdded;
                });
                _this.addRoute(toAddRoutes);
            });
        }
        /**
         * Refresh the current context
         */
        RouterService.prototype.refresh = function () {
            this.refreshTrigger.next(1);
            this.contextRouteService.refreshContext();
        };
        /**
         * Add a new route to the router configuration or a context.
         * @param route The route to add
         */
        RouterService.prototype.addRoute = function (route) {
            this.addRoutes(Array.isArray(route) ? route : [route]);
        };
        RouterService.prototype.getComponentsViaDeprecatedHook = function () {
            var componentsViaDeprecatedHook = this.injector.get(HOOK_ONCE_ROUTE, []);
            if (componentsViaDeprecatedHook &&
                componentsViaDeprecatedHook.length &&
                __MODE__ !== 'production') {
                console.warn('HOOK_ONCE_ROUTE is now deprecated. Use HOOK_ROUTE instead.');
            }
            return componentsViaDeprecatedHook;
        };
        RouterService.prototype.addRoutes = function (routes) {
            var _this = this;
            var emptyRoute = this.router.config.find(function (r) { return r.path === '**'; });
            this.router.resetConfig(__spreadArray(__spreadArray(__spreadArray([], __read(this.router.config.filter(function (r) { return r.path !== '**'; }))), __read(routes.map(function (r) { return _this.convertRoute(_this.router.config, r); }))), [
                emptyRoute
            ]).filter(Boolean));
        };
        RouterService.prototype.convertRoute = function (initialConfig, route) {
            if (route.context) {
                initialConfig.forEach(function (r) {
                    if (r.data && r.data.context === route.context) {
                        r.children = __spreadArray([route], __read((r.children || [])));
                    }
                });
                return;
            }
            return route;
        };
RouterService.ɵfac = function RouterService_Factory(t) { return new (t || RouterService)(ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(ɵngcc1.Router), ɵngcc0.ɵɵinject(ContextRouteService)); };
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(RouterService, [{
        type: i0.Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return [{ type: ɵngcc0.Injector }, { type: ɵngcc1.Router }, { type: ContextRouteService }]; }, null); })();
        return RouterService;
    }());
    RouterService.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function RouterService_Factory() { return new RouterService(i0__namespace.ɵɵinject(i0__namespace.INJECTOR), i0__namespace.ɵɵinject(i1__namespace.Router), i0__namespace.ɵɵinject(ContextRouteService)); }, token: RouterService, providedIn: "root" });
    RouterService.ctorParameters = function () { return [
        { type: i0.Injector },
        { type: i1.Router },
        { type: ContextRouteService }
    ]; };

    /**
     * A hook to use for Multi Provider extension.
     */
    var HOOK_SEARCH = new i0.InjectionToken('SearchFactory');
    /**
     * A service which defines the search function.
     */
    var SearchService = /** @class */ (function (_super) {
        __extends(SearchService, _super);
        function SearchService(injector, router) {
            var _this = _super.call(this) || this;
            _this.injector = injector;
            /**
             * Additional factories that can be added by plugins.
             */
            _this.factories = [];
            _this.refreshTrigger = new rxjs.Subject();
            _this.state$ = new rxjs.BehaviorSubject(new Set());
            _this.items$ = fromTrigger(router, _this.refreshTrigger, [
                function () { return _this.injector.get(HOOK_SEARCH, []); },
                function () { return _this.factories; },
                stateToFactory(_this.state$)
            ]).pipe(operators.map(function (items) { return sortByPriority(items); }), operators.shareReplay(1));
            return _this;
        }
        /**
         * Refresh the extension factories
         */
        SearchService.prototype.refresh = function () {
            this.refreshTrigger.next(1);
        };
        Object.defineProperty(SearchService.prototype, "state", {
            /**
             * Returns the current state.
             * @readonly
             * @returns The current set of actions.
             */
            get: function () {
                return this.state$.value;
            },
            enumerable: false,
            configurable: true
        });
        /**
         * Adds a new item to the search in the header.
         * @param item The item to add.
         */
        SearchService.prototype.add = function (item) {
            this.state.add(item);
            this.emitNewState();
        };
        /**
         * Removes an search from the header.
         * @param item The item to remove.
         */
        SearchService.prototype.remove = function (item) {
            this.state.delete(item);
            this.emitNewState();
        };
SearchService.ɵfac = function SearchService_Factory(t) { return new (t || SearchService)(ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(ɵngcc1.Router)); };
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SearchService, [{
        type: i0.Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return [{ type: ɵngcc0.Injector }, { type: ɵngcc1.Router }]; }, null); })();
        return SearchService;
    }(StateService));
    SearchService.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function SearchService_Factory() { return new SearchService(i0__namespace.ɵɵinject(i0__namespace.INJECTOR), i0__namespace.ɵɵinject(i1__namespace.Router)); }, token: SearchService, providedIn: "root" });
    SearchService.ctorParameters = function () { return [
        { type: i0.Injector },
        { type: i1.Router }
    ]; };

    var PluginsResolveService = /** @class */ (function () {
        function PluginsResolveService(tabs, navigator, action, actionBar, breadcrumb, dynamicComponent, search, c8yRouter, docs, compiler, injector) {
            this.tabs = tabs;
            this.navigator = navigator;
            this.action = action;
            this.actionBar = actionBar;
            this.breadcrumb = breadcrumb;
            this.dynamicComponent = dynamicComponent;
            this.search = search;
            this.c8yRouter = c8yRouter;
            this.docs = docs;
            this.compiler = compiler;
            this.injector = injector;
            this.allHooks = [
                { token: HOOK_ACTION, service: this.action, values: [] },
                { token: HOOK_ACTION_BAR, service: this.actionBar, values: [] },
                { token: HOOK_NAVIGATOR_NODES, service: this.navigator, values: [] },
                { token: HOOK_BREADCRUMB, service: this.breadcrumb, values: [] },
                { token: HOOK_COMPONENTS, service: this.dynamicComponent, values: [] },
                { token: HOOK_ONCE_ROUTE, service: this.c8yRouter, values: [] },
                { token: HOOK_ROUTE, service: this.c8yRouter, values: [] },
                { token: HOOK_ROUTE, service: this.c8yRouter, values: [] },
                { token: HOOK_SEARCH, service: this.search, values: [] },
                { token: HOOK_TABS, service: this.tabs, values: [] },
                { token: HOOK_DOCS, service: this.docs, values: [] }
            ];
        }
        /**
         * Loads plugins by resolving the remote NgModules and injecting it. Also attaching
         * the hooks onto the root injector.
         * @param remoteModules The remote plugins to load as factory name mapping array.
         */
        PluginsResolveService.prototype.resolveRemotePlugins = function (remoteModules) {
            return __awaiter(this, void 0, void 0, function () {
                var remoteNgModules, _loop_1, this_1, remoteNgModules_1, remoteNgModules_1_1, remoteNgModule, e_1_1;
                var e_1, _a;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            remoteNgModules = remoteModules
                                .filter(function (_a) {
                                var factory = _a.factory;
                                return factory;
                            })
                                .map(function (_a) {
                                var name = _a.name, factory = _a.factory;
                                return factory[name];
                            });
                            _loop_1 = function (remoteNgModule) {
                                var factory, moduleRef;
                                return __generator(this, function (_c) {
                                    switch (_c.label) {
                                        case 0:
                                            factory = void 0;
                                            if (!(remoteNgModule instanceof i0.NgModuleFactory)) return [3 /*break*/, 1];
                                            // AOT
                                            factory = remoteNgModule;
                                            return [3 /*break*/, 3];
                                        case 1: return [4 /*yield*/, this_1.compiler.compileModuleAsync(remoteNgModule)];
                                        case 2:
                                            // JIT
                                            factory = _c.sent();
                                            _c.label = 3;
                                        case 3:
                                            moduleRef = factory.create(this_1.injector);
                                            this_1.allHooks.forEach(function (hook) {
                                                hook.values = __spreadArray(__spreadArray([], __read(hook.values)), __read(moduleRef.injector.get(hook.token, [], i0.InjectFlags.Self)));
                                            });
                                            return [2 /*return*/];
                                    }
                                });
                            };
                            this_1 = this;
                            _b.label = 1;
                        case 1:
                            _b.trys.push([1, 6, 7, 8]);
                            remoteNgModules_1 = __values(remoteNgModules), remoteNgModules_1_1 = remoteNgModules_1.next();
                            _b.label = 2;
                        case 2:
                            if (!!remoteNgModules_1_1.done) return [3 /*break*/, 5];
                            remoteNgModule = remoteNgModules_1_1.value;
                            return [5 /*yield**/, _loop_1(remoteNgModule)];
                        case 3:
                            _b.sent();
                            _b.label = 4;
                        case 4:
                            remoteNgModules_1_1 = remoteNgModules_1.next();
                            return [3 /*break*/, 2];
                        case 5: return [3 /*break*/, 8];
                        case 6:
                            e_1_1 = _b.sent();
                            e_1 = { error: e_1_1 };
                            return [3 /*break*/, 8];
                        case 7:
                            try {
                                if (remoteNgModules_1_1 && !remoteNgModules_1_1.done && (_a = remoteNgModules_1.return)) _a.call(remoteNgModules_1);
                            }
                            finally { if (e_1) throw e_1.error; }
                            return [7 /*endfinally*/];
                        case 8:
                            this.allHooks.forEach(function (hook) {
                                if (hook.values.length) {
                                    hook.service.factories = __spreadArray(__spreadArray([], __read(hook.service.factories)), __read(hook.values));
                                    hook.service.refresh();
                                }
                            });
                            return [2 /*return*/];
                    }
                });
            });
        };
PluginsResolveService.ɵfac = function PluginsResolveService_Factory(t) { return new (t || PluginsResolveService)(ɵngcc0.ɵɵinject(TabsService), ɵngcc0.ɵɵinject(NavigatorService), ɵngcc0.ɵɵinject(ActionService), ɵngcc0.ɵɵinject(ActionBarService), ɵngcc0.ɵɵinject(BreadcrumbService), ɵngcc0.ɵɵinject(DynamicComponentService), ɵngcc0.ɵɵinject(SearchService), ɵngcc0.ɵɵinject(RouterService), ɵngcc0.ɵɵinject(DocsService), ɵngcc0.ɵɵinject(ɵngcc0.Compiler), ɵngcc0.ɵɵinject(ɵngcc0.Injector)); };
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PluginsResolveService, [{
        type: i0.Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return [{ type: TabsService }, { type: NavigatorService }, { type: ActionService }, { type: ActionBarService }, { type: BreadcrumbService }, { type: DynamicComponentService }, { type: SearchService }, { type: RouterService }, { type: DocsService }, { type: ɵngcc0.Compiler }, { type: ɵngcc0.Injector }]; }, null); })();
        return PluginsResolveService;
    }());
    PluginsResolveService.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function PluginsResolveService_Factory() { return new PluginsResolveService(i0__namespace.ɵɵinject(TabsService), i0__namespace.ɵɵinject(NavigatorService), i0__namespace.ɵɵinject(ActionService), i0__namespace.ɵɵinject(ActionBarService), i0__namespace.ɵɵinject(BreadcrumbService), i0__namespace.ɵɵinject(DynamicComponentService), i0__namespace.ɵɵinject(SearchService), i0__namespace.ɵɵinject(RouterService), i0__namespace.ɵɵinject(DocsService), i0__namespace.ɵɵinject(i0__namespace.Compiler), i0__namespace.ɵɵinject(i0__namespace.INJECTOR)); }, token: PluginsResolveService, providedIn: "root" });
    PluginsResolveService.ctorParameters = function () { return [
        { type: TabsService },
        { type: NavigatorService },
        { type: ActionService },
        { type: ActionBarService },
        { type: BreadcrumbService },
        { type: DynamicComponentService },
        { type: SearchService },
        { type: RouterService },
        { type: DocsService },
        { type: i0.Compiler },
        { type: i0.Injector }
    ]; };

    var BootstrapComponent = /** @class */ (function () {
        function BootstrapComponent(tabs, ui, navigator, actionBar, headerService, options, pluginsResolve) {
            var _this = this;
            this.tabs = tabs;
            this.ui = ui;
            this.navigator = navigator;
            this.actionBar = actionBar;
            this.headerService = headerService;
            this.options = options;
            this.pluginsResolve = pluginsResolve;
            this.showPoweredBy = true;
            this.noAppsMargin$ = this.headerService.map(function (_a) {
                var nav = _a.nav;
                return !nav.open && nav.hiddenOnStartup;
            });
            this.tabsOrientation = this.options.tabsHorizontal ? 'horizontal' : 'vertical';
            this.ui
                .map(function (_a) {
                var lang = _a.lang;
                return lang;
            })
                .pipe(operators.distinctUntilChanged())
                .subscribe(function () {
                _this.actionBar.refresh();
            });
            this.showPoweredBy = !this.options.get('hidePowered');
        }
        BootstrapComponent.prototype.ngOnInit = function () {
            return __awaiter(this, void 0, void 0, function () {
                var remoteModules;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            remoteModules = window.C8Y_APP.remoteModules;
                            if (!remoteModules.length) return [3 /*break*/, 2];
                            return [4 /*yield*/, this.pluginsResolve.resolveRemotePlugins(remoteModules)];
                        case 1:
                            _a.sent();
                            _a.label = 2;
                        case 2: return [2 /*return*/];
                    }
                });
            });
        };
BootstrapComponent.ɵfac = function BootstrapComponent_Factory(t) { return new (t || BootstrapComponent)(ɵngcc0.ɵɵdirectiveInject(TabsService), ɵngcc0.ɵɵdirectiveInject(AppStateService), ɵngcc0.ɵɵdirectiveInject(NavigatorService), ɵngcc0.ɵɵdirectiveInject(ActionBarService), ɵngcc0.ɵɵdirectiveInject(HeaderService), ɵngcc0.ɵɵdirectiveInject(OptionsService), ɵngcc0.ɵɵdirectiveInject(PluginsResolveService)); };
BootstrapComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: BootstrapComponent, selectors: [["c8y-bootstrap"]], ngContentSelectors: _c14, decls: 5, vars: 6, consts: [[4, "ngIf"], [3, "head-open", 4, "ngIf"], ["header", ""], [3, "nodes", "open"], [1, "title", "navigator-slot-top"], [1, "tenant-brand"], [3, "name", "contextPath"], ["class", "powered-by navigator-slot-bottom", 4, "ngIf"], [1, "alerts"], [3, "tabs", "navigatorOpen", "orientation"], ["tabsComponent", ""], [3, "navigatorOpen", "hasTabs", "isTabsHorizontal", "items$"], ["actionBarComponent", ""], [1, "mcontainer", 3, "ngClass"], [1, "container-fluid"], [1, "powered-by", "navigator-slot-bottom"], ["translate", ""]], template: function BootstrapComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c13);
        ɵngcc0.ɵɵtemplate(0, BootstrapComponent_c8y_login_0_Template, 1, 0, "c8y-login", 0);
        ɵngcc0.ɵɵpipe(1, "async");
        ɵngcc0.ɵɵtemplate(2, BootstrapComponent_div_2_Template, 33, 49, "div", 1);
        ɵngcc0.ɵɵpipe(3, "async");
        ɵngcc0.ɵɵelement(4, "c8y-cookie-banner");
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", !ɵngcc0.ɵɵpipeBind1(1, 2, ctx.ui.currentUser));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind1(3, 4, ctx.ui.currentUser));
    } }, directives: function () { return [ɵngcc6.NgIf, CookieBannerComponent, LoginComponent, HeaderBarComponent, NavigatorOutletComponent, AppIconComponent, AlertOutletComponent, TabsOutletComponent, ActionBarComponent, ɵngcc6.NgClass, ɵngcc1.RouterOutlet, C8yTranslateDirective]; }, pipes: function () { return [ɵngcc6.AsyncPipe, HumanizeAppNamePipe]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BootstrapComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-bootstrap',
                template: "<c8y-login *ngIf=\"!(ui.currentUser | async)\"></c8y-login>\n\n<div *ngIf=\"ui.currentUser | async\" [class.head-open]=\"headerService.headerOpen\">\n  <c8y-header-bar #header></c8y-header-bar>\n  <c8y-navigator-outlet\n    [nodes]=\"navigator.items$ | async\"\n    [open]=\"headerService.navigatorOpen$ | async\"\n  >\n    <header class=\"title navigator-slot-top\">\n      <div class=\"tenant-brand\"></div>\n      <c8y-app-icon\n        [name]=\"(ui.state$ | async).app.name\"\n        [contextPath]=\"(ui.state$ | async).app.contextPath\"\n      ></c8y-app-icon>\n      <span>{{ (ui.state$ | async).app | humanizeAppName | async }}</span>\n    </header>\n    <div class=\"powered-by navigator-slot-bottom\" *ngIf=\"showPoweredBy\">\n      <p translate>powered by Cumulocity</p>\n    </div>\n  </c8y-navigator-outlet>\n\n  <div class=\"alerts\">\n    <c8y-alert-outlet></c8y-alert-outlet>\n  </div>\n  <c8y-tabs-outlet\n    #tabsComponent\n    [tabs]=\"tabs.items$ | async\"\n    [navigatorOpen]=\"headerService.navigatorOpen$ | async\"\n    [orientation]=\"tabs.orientation$ | async\"\n  >\n  </c8y-tabs-outlet>\n  <c8y-action-bar\n    #actionBarComponent\n    [navigatorOpen]=\"headerService.navigatorOpen$ | async\"\n    [hasTabs]=\"tabsComponent.hasTabs\"\n    [isTabsHorizontal]=\"tabsComponent.isHorizontal\"\n    [items$]=\"actionBar.items$\"\n  >\n  </c8y-action-bar>\n\n  <div\n    class=\"mcontainer\"\n    [ngClass]=\"{\n      open: headerService.navigatorOpen$ | async,\n      'no-apps-margin': noAppsMargin$ | async,\n      'horizontal-tabs': tabsComponent.isHorizontal,\n      'vertical-tabs': !tabsComponent.isHorizontal,\n      'has-tabs': tabsComponent.hasTabs,\n      'has-action-bar': !actionBarComponent.hidden\n    }\"\n  >\n    <div class=\"container-fluid\">\n      <router-outlet></router-outlet>\n      <ng-content select=\"#c8y-legacy-view\"></ng-content>\n      <!-- legacy ng-view, will not be migrated atm -->\n    </div>\n  </div>\n</div>\n<c8y-cookie-banner></c8y-cookie-banner>\n"
            }]
    }], function () { return [{ type: TabsService }, { type: AppStateService }, { type: NavigatorService }, { type: ActionBarService }, { type: HeaderService }, { type: OptionsService }, { type: PluginsResolveService }]; }, null); })();
        return BootstrapComponent;
    }());
    BootstrapComponent.ctorParameters = function () { return [
        { type: TabsService },
        { type: AppStateService },
        { type: NavigatorService },
        { type: ActionBarService },
        { type: HeaderService },
        { type: OptionsService },
        { type: PluginsResolveService }
    ]; };

    var BreadcrumbItemComponent = /** @class */ (function () {
        function BreadcrumbItemComponent() {
        }
BreadcrumbItemComponent.ɵfac = function BreadcrumbItemComponent_Factory(t) { return new (t || BreadcrumbItemComponent)(); };
BreadcrumbItemComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: BreadcrumbItemComponent, selectors: [["c8y-breadcrumb-item"]], viewQuery: function BreadcrumbItemComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c0, 5);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.template = _t.first);
    } }, inputs: { icon: "icon", translate: "translate", label: "label", path: "path" }, ngContentSelectors: _c1, decls: 2, vars: 0, consts: [["template", ""]], template: function BreadcrumbItemComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵtemplate(0, BreadcrumbItemComponent_ng_template_0_Template, 1, 0, "ng-template", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);
    } }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BreadcrumbItemComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-breadcrumb-item',
                template: "<ng-template #template>\n  <ng-content></ng-content>\n</ng-template>"
            }]
    }], function () { return []; }, { icon: [{
            type: i0.Input
        }], translate: [{
            type: i0.Input
        }], label: [{
            type: i0.Input
        }], path: [{
            type: i0.Input
        }], template: [{
            type: i0.ViewChild,
            args: ['template', { static: false }]
        }] }); })();
        return BreadcrumbItemComponent;
    }());
    BreadcrumbItemComponent.propDecorators = {
        icon: [{ type: i0.Input }],
        translate: [{ type: i0.Input }],
        label: [{ type: i0.Input }],
        path: [{ type: i0.Input }],
        template: [{ type: i0.ViewChild, args: ['template', { static: false },] }]
    };

    var BreadcrumbOutletComponent = /** @class */ (function () {
        function BreadcrumbOutletComponent() {
            this.showAll = false;
            this.breadcrumbs = [];
        }
        /**
         * For upgrade only. Old angularjs routes start with hash, new ones not.
         */
        BreadcrumbOutletComponent.prototype.normalizePath = function (path) {
            return path === null || path === void 0 ? void 0 : path.replace(/^#\/?/, '');
        };
BreadcrumbOutletComponent.ɵfac = function BreadcrumbOutletComponent_Factory(t) { return new (t || BreadcrumbOutletComponent)(); };
BreadcrumbOutletComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: BreadcrumbOutletComponent, selectors: [["c8y-breadcrumb-outlet"]], inputs: { breadcrumbs: "breadcrumbs" }, decls: 1, vars: 1, consts: [["class", "breadcrumbs-container", 3, "ngClass", 4, "ngIf"], [1, "breadcrumbs-container", 3, "ngClass"], ["class", "btn-show-all-breadcrumbs pull-left", 3, "click", 4, "ngIf"], ["class", "breadcrumbs text-muted", 4, "ngFor", "ngForOf"], [1, "btn-show-all-breadcrumbs", "pull-left", 3, "click"], ["container", "body", "placement", "top", 3, "c8yIcon", "tooltip", 4, "ngIf"], ["container", "body", "placement", "top", 3, "c8yIcon", "tooltip"], [1, "breadcrumbs", "text-muted"], [4, "ngIf"], ["class", "text-muted", 4, "ngFor", "ngForOf"], [1, "text-muted"], [4, "c8yOutlet"], [1, "word-break", 3, "routerLink", "title"], ["class", "m-r-4", 3, "c8yIcon", 4, "ngIf"], [1, "m-r-4", 3, "c8yIcon"]], template: function BreadcrumbOutletComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, BreadcrumbOutletComponent_div_0_Template, 3, 6, "div", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.breadcrumbs && ctx.breadcrumbs.length > 0);
    } }, directives: [ɵngcc6.NgIf, ɵngcc6.NgClass, ɵngcc6.NgForOf, IconDirective, ɵngcc8.TooltipDirective, OutletDirective, ɵngcc1.RouterLinkWithHref], pipes: [C8yTranslatePipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BreadcrumbOutletComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-breadcrumb-outlet',
                template: "<div\n  class=\"breadcrumbs-container\"\n  [ngClass]=\"{\n    multiple: breadcrumbs.length > 1,\n    open: showAll\n  }\"\n  *ngIf=\"breadcrumbs && breadcrumbs.length > 0\"\n>\n  <button\n    *ngIf=\"breadcrumbs.length > 1\"\n    class=\"btn-show-all-breadcrumbs pull-left\"\n    (click)=\"showAll = !showAll\"\n  >\n    <i\n      *ngIf=\"!showAll\"\n      [c8yIcon]=\"'caret-right'\"\n      tooltip=\"{{ 'Show all breadcrumbs' | translate }}\"\n      container=\"body\"\n      placement=\"top\"\n    ></i>\n    <i\n      *ngIf=\"showAll\"\n      [c8yIcon]=\"'caret-down'\"\n      tooltip=\"{{ 'Collapse breadcrumbs' | translate }}\"\n      container=\"body\"\n      placement=\"top\"\n    ></i>\n  </button>\n\n  <ul class=\"breadcrumbs text-muted\" *ngFor=\"let breadcrumb of breadcrumbs; let first = first\">\n    <ng-container *ngIf=\"first || showAll\">\n      <li class=\"text-muted\" *ngFor=\"let item of breadcrumb.items; let firstItem = first\">\n        <span *ngIf=\"!firstItem\"> > </span>\n        <ng-container *c8yOutlet=\"item.template\"></ng-container>\n        <ng-container *ngIf=\"item.label && item.path\">\n          <a\n            [routerLink]=\"normalizePath(item.path)\"\n            class=\"word-break\"\n            title=\"{{ item.label | translate }}\"\n          >\n            <i [c8yIcon]=\"item.icon\" *ngIf=\"firstItem\" class=\"m-r-4\"></i>\n            <span>{{ item.label | translate }}</span>\n          </a>\n        </ng-container>\n        <ng-container *ngIf=\"item.label && !item.path\">\n          <i [c8yIcon]=\"item.icon\" *ngIf=\"firstItem\" class=\"m-r-4\"></i>\n          <span>{{ item.label | translate }}</span>\n        </ng-container>\n      </li>\n    </ng-container>\n  </ul>\n</div>\n"
            }]
    }], function () { return []; }, { breadcrumbs: [{
            type: i0.Input
        }] }); })();
        return BreadcrumbOutletComponent;
    }());
    BreadcrumbOutletComponent.propDecorators = {
        breadcrumbs: [{ type: i0.Input }]
    };

    var BreadcrumbComponent = /** @class */ (function () {
        function BreadcrumbComponent(breadcrumbService) {
            this.breadcrumbService = breadcrumbService;
        }
        BreadcrumbComponent.prototype.ngAfterViewInit = function () {
            var _this = this;
            this.items = this.contentChildItems.toArray();
            this.viewInitTimeout = setTimeout(function () { return _this.breadcrumbService.add(_this); });
        };
        BreadcrumbComponent.prototype.ngOnDestroy = function () {
            clearTimeout(this.viewInitTimeout);
            this.breadcrumbService.remove(this);
        };
BreadcrumbComponent.ɵfac = function BreadcrumbComponent_Factory(t) { return new (t || BreadcrumbComponent)(ɵngcc0.ɵɵdirectiveInject(BreadcrumbService)); };
BreadcrumbComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: BreadcrumbComponent, selectors: [["c8y-breadcrumb"]], contentQueries: function BreadcrumbComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, BreadcrumbItemComponent, 4);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.contentChildItems = _t);
    } }, ngContentSelectors: _c1, decls: 1, vars: 0, template: function BreadcrumbComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵtemplate(0, BreadcrumbComponent_ng_template_0_Template, 1, 0, "ng-template");
    } }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BreadcrumbComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-breadcrumb',
                template: "<ng-template>\n  <ng-content></ng-content>\n</ng-template>"
            }]
    }], function () { return [{ type: BreadcrumbService }]; }, { contentChildItems: [{
            type: i0.ContentChildren,
            args: [BreadcrumbItemComponent]
        }] }); })();
        return BreadcrumbComponent;
    }());
    BreadcrumbComponent.ctorParameters = function () { return [
        { type: BreadcrumbService }
    ]; };
    BreadcrumbComponent.propDecorators = {
        contentChildItems: [{ type: i0.ContentChildren, args: [BreadcrumbItemComponent,] }]
    };

    /**
     * The angular module definition for breadcrumbs.
     * @exports BreadcrumbComponent
     * @exports BreadcrumbItemComponent
     * @exports BreadcrumbOutletComponent
     */
    var BreadcrumbModule = /** @class */ (function () {
        function BreadcrumbModule() {
        }
BreadcrumbModule.ɵfac = function BreadcrumbModule_Factory(t) { return new (t || BreadcrumbModule)(); };
BreadcrumbModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: BreadcrumbModule });
BreadcrumbModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[
            i1.RouterModule.forChild([]),
            CommonModule,
            tooltip.TooltipModule.forRoot()
        ]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BreadcrumbModule, [{
        type: i0.NgModule,
        args: [{
                declarations: [
                    BreadcrumbComponent,
                    BreadcrumbItemComponent,
                    BreadcrumbOutletComponent
                ],
                imports: [
                    i1.RouterModule.forChild([]),
                    CommonModule,
                    tooltip.TooltipModule.forRoot()
                ],
                exports: [
                    BreadcrumbComponent,
                    BreadcrumbItemComponent,
                    BreadcrumbOutletComponent
                ]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(BreadcrumbModule, { declarations: [BreadcrumbComponent, BreadcrumbItemComponent, BreadcrumbOutletComponent], imports: [ɵngcc1.RouterModule, CommonModule, ɵngcc8.TooltipModule], exports: [BreadcrumbComponent, BreadcrumbItemComponent, BreadcrumbOutletComponent] }); })();
        return BreadcrumbModule;
    }());

    var NavigatorItemComponent = /** @class */ (function () {
        function NavigatorItemComponent(service) {
            this.service = service;
            this.priority = 0;
            this.nodeData = new NavigatorNode();
        }
        NavigatorItemComponent.prototype.ngOnInit = function () {
            var _this = this;
            this.ngOnChanges();
            setTimeout(function () { return _this.service.add(_this.nodeData); });
        };
        NavigatorItemComponent.prototype.ngOnChanges = function () {
            this.nodeData.icon = this.icon;
            this.nodeData.label = this.label;
            this.nodeData.path = this.path;
            this.nodeData.priority = this.priority;
            this.nodeData.iconTemplate = !this.icon ? this.template : undefined;
            this.nodeData.icon = this.icon;
        };
        NavigatorItemComponent.prototype.ngOnDestroy = function () {
            this.service.remove(this.nodeData);
        };
NavigatorItemComponent.ɵfac = function NavigatorItemComponent_Factory(t) { return new (t || NavigatorItemComponent)(ɵngcc0.ɵɵdirectiveInject(NavigatorService)); };
NavigatorItemComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: NavigatorItemComponent, selectors: [["c8y-navigator-item"]], viewQuery: function NavigatorItemComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c16, 7);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.template = _t.first);
    } }, inputs: { priority: "priority", label: "label", icon: "icon", path: "path" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c1, decls: 2, vars: 0, consts: [["iconTpl", ""]], template: function NavigatorItemComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵtemplate(0, NavigatorItemComponent_ng_template_0_Template, 1, 0, "ng-template", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);
    } }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NavigatorItemComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-navigator-item',
                template: '<ng-template #iconTpl><ng-content></ng-content></ng-template>'
            }]
    }], function () { return [{ type: NavigatorService }]; }, { priority: [{
            type: i0.Input
        }], template: [{
            type: i0.ViewChild,
            args: ['iconTpl', { static: true }]
        }], label: [{
            type: i0.Input
        }], icon: [{
            type: i0.Input
        }], path: [{
            type: i0.Input
        }] }); })();
        return NavigatorItemComponent;
    }());
    NavigatorItemComponent.ctorParameters = function () { return [
        { type: NavigatorService }
    ]; };
    NavigatorItemComponent.propDecorators = {
        template: [{ type: i0.ViewChild, args: ['iconTpl', { static: true },] }],
        label: [{ type: i0.Input }],
        icon: [{ type: i0.Input }],
        path: [{ type: i0.Input }],
        priority: [{ type: i0.Input }]
    };

    /**
     * Navigator node icon component.
     */
    var NavigatorIconComponent = /** @class */ (function () {
        function NavigatorIconComponent() {
        }
        Object.defineProperty(NavigatorIconComponent.prototype, "icon", {
            /**
             * Returns the navigator node icon.
             * If the icon is not defined, it returns the default icon (cog).
             */
            get: function () {
                var DEFAULT_ICON = 'cog';
                return this.node.icon || DEFAULT_ICON;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(NavigatorIconComponent.prototype, "iconClass", {
            /**
             * Returns the navigator icon CSS class.
             */
            get: function () {
                return "dlt-c8y-icon-" + this.icon;
            },
            enumerable: false,
            configurable: true
        });
NavigatorIconComponent.ɵfac = function NavigatorIconComponent_Factory(t) { return new (t || NavigatorIconComponent)(); };
NavigatorIconComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: NavigatorIconComponent, selectors: [["c8y-navigator-icon"]], inputs: { node: "node" }, decls: 1, vars: 1, consts: [[1, "icon", 3, "c8yIcon"]], template: function NavigatorIconComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelement(0, "i", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("c8yIcon", ctx.icon);
    } }, directives: [IconDirective], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NavigatorIconComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-navigator-icon',
                template: "<i class=\"icon\" [c8yIcon]=\"icon\"></i>"
            }]
    }], function () { return []; }, { node: [{
            type: i0.Input
        }] }); })();
        return NavigatorIconComponent;
    }());
    NavigatorIconComponent.propDecorators = {
        node: [{ type: i0.Input }]
    };

    /**
     * A component to show a popover right next to the
     * user action. Add this component where the confirm modal
     * should be shown and toggle isOpen to display it. You
     * can use `await isShow()` to wait for a result on the
     * click action.
     */
    var PopoverConfirmComponent = /** @class */ (function () {
        function PopoverConfirmComponent() {
            this.buttons = [{ label: gettext('cancel'), action: function () { return Promise.reject(); } }];
            this.isOpen = false;
            this.containerClass = '';
            this.placement = 'right';
            this.outsideClick = false;
        }
        /**
         * Show the popover. Wait until an action is performed on it.
         */
        PopoverConfirmComponent.prototype.show = function (buttons) {
            return __awaiter(this, void 0, void 0, function () {
                var result, ex_1;
                var _this = this;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            this.buttons = buttons || this.buttons;
                            this.isOpen = true;
                            _a.label = 1;
                        case 1:
                            _a.trys.push([1, 3, 4, 5]);
                            return [4 /*yield*/, new Promise(function (resolve, reject) {
                                    return _this.click = function (action) { return action().then(resolve).catch(reject); };
                                })];
                        case 2:
                            result = _a.sent();
                            return [3 /*break*/, 5];
                        case 3:
                            ex_1 = _a.sent();
                            throw (ex_1);
                        case 4:
                            this.isOpen = false;
                            return [7 /*endfinally*/];
                        case 5: return [2 /*return*/, result];
                    }
                });
            });
        };
        PopoverConfirmComponent.prototype.buttonStatus = function (status) {
            if (status) {
                return "btn-" + status;
            }
            return 'btn-link btn-clean';
        };
        PopoverConfirmComponent.prototype.handleOutsideClick = function () {
            this.click(function () { return Promise.reject(); });
        };
PopoverConfirmComponent.ɵfac = function PopoverConfirmComponent_Factory(t) { return new (t || PopoverConfirmComponent)(); };
PopoverConfirmComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: PopoverConfirmComponent, selectors: [["c8y-popover-confirm"]], viewQuery: function PopoverConfirmComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(popover.PopoverDirective, 5);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.popover = _t.first);
    } }, inputs: { buttons: "buttons", isOpen: "isOpen", containerClass: "containerClass", placement: "placement", outsideClick: "outsideClick", message: "message", title: "title" }, decls: 4, vars: 8, consts: [["container", "body", 3, "popover", "isOpen", "popoverTitle", "placement", "containerClass", "outsideClick", "onHidden"], ["popover", ""], [1, "m-b-8"], [1, "popover-footer"], [4, "ngFor", "ngForOf"], [1, "btn", "btn-sm", "m-r-16", 3, "title", "ngClass", "click"]], template: function PopoverConfirmComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "span", 0);
        ɵngcc0.ɵɵlistener("onHidden", function PopoverConfirmComponent_Template_span_onHidden_0_listener() { return ctx.handleOutsideClick(); });
        ɵngcc0.ɵɵpipe(1, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(2, PopoverConfirmComponent_ng_template_2_Template, 5, 4, "ng-template", null, 1, ɵngcc0.ɵɵtemplateRefExtractor);
    } if (rf & 2) {
        var _r0 = ɵngcc0.ɵɵreference(3);
        ɵngcc0.ɵɵproperty("popover", _r0)("isOpen", ctx.isOpen)("popoverTitle", ɵngcc0.ɵɵpipeBind1(1, 6, ctx.title))("placement", ctx.placement)("containerClass", ctx.containerClass)("outsideClick", ctx.outsideClick);
    } }, directives: [ɵngcc11.PopoverDirective, ɵngcc6.NgForOf, ɵngcc6.NgClass], pipes: [C8yTranslatePipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PopoverConfirmComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-popover-confirm',
                template: "<span\n  [popover]=\"popover\"\n  container=\"body\"\n  [isOpen]=\"isOpen\"\n  [popoverTitle]=\"title | translate\"\n  [placement]=\"placement\"\n  [containerClass]=\"containerClass\"\n  [outsideClick]=\"outsideClick\"\n  (onHidden)=\"handleOutsideClick()\"\n></span>\n<ng-template #popover>\n  <p class=\"m-b-8\">\n    {{ message | translate }}\n  </p>\n  <div class=\"popover-footer\">\n    <ng-container *ngFor=\"let button of buttons\">\n      <button\n        title=\"{{ button.label | translate }}\"\n        class=\"btn btn-sm m-r-16\"\n        [ngClass]=\"buttonStatus(button.status)\"\n        (click)=\"click(button.action)\"\n      >\n        {{ button.label | translate }}\n      </button>\n    </ng-container>\n  </div>\n</ng-template>\n"
            }]
    }], function () { return []; }, { buttons: [{
            type: i0.Input
        }], isOpen: [{
            type: i0.Input
        }], containerClass: [{
            type: i0.Input
        }], placement: [{
            type: i0.Input
        }], outsideClick: [{
            type: i0.Input
        }], popover: [{
            type: i0.ViewChild,
            args: [popover.PopoverDirective, { static: false }]
        }], message: [{
            type: i0.Input
        }], title: [{
            type: i0.Input
        }] }); })();
        return PopoverConfirmComponent;
    }());
    PopoverConfirmComponent.propDecorators = {
        popover: [{ type: i0.ViewChild, args: [popover.PopoverDirective, { static: false },] }],
        buttons: [{ type: i0.Input }],
        message: [{ type: i0.Input }],
        title: [{ type: i0.Input }],
        isOpen: [{ type: i0.Input }],
        containerClass: [{ type: i0.Input }],
        placement: [{ type: i0.Input }],
        outsideClick: [{ type: i0.Input }]
    };

    // tslint:disable-next-line:max-line-length
    /**
     * Navigator node renderer.
     */
    var NavigatorNodeComponent = /** @class */ (function () {
        function NavigatorNodeComponent(componentFactoryResolver, navigator) {
            this.componentFactoryResolver = componentFactoryResolver;
            this.navigator = navigator;
            /**
             * Event emitter responsible for broadcasting one of the following events: "icon", "expander" or "link" as string value.
             *
             * The type of event depends on where you click on the navigator node:
             * * clicking the icon will broadcast the event "icon",
             * * clicking the expander will broadcast the event "expander",
             * * clicking the label will broadcast the event "link".
             */
            this.nodeClick = new i0.EventEmitter();
        }
        /**
         * @ignore
         */
        NavigatorNodeComponent.prototype.ngAfterViewInit = function () {
            var _this = this;
            this.childrenNodes.forEach(function (n) { return (n.parentNode = _this); });
            this.viewInitTimeout = setTimeout(function () {
                _this.updateIcon();
                _this.openOnFirstUrl();
                _this.expandParentIfActive();
                _this.node.confirm = _this.confirm;
            });
        };
        /**
         * Expands the navigator node when the URL matches the path provided in the node.
         */
        NavigatorNodeComponent.prototype.openOnFirstUrl = function () {
            if (this.navigator.openOnFirstUrl(this.node) && !this.node.open) {
                this.expandCollapse(true);
            }
        };
        Object.defineProperty(NavigatorNodeComponent.prototype, "expandTitle", {
            /**
             * Returns the expander title.
             */
            get: function () {
                return !this.node.open ? 'Expand' : 'Collapse';
            },
            enumerable: false,
            configurable: true
        });
        /**
         * Click event handler.
         *
         * @param {string} from Source of the click event.
         * @param event DOM event.
         */
        NavigatorNodeComponent.prototype.click = function (from, $event) {
            if (from === void 0) { from = 'link'; }
            var open;
            switch (from) {
                case "expander" /* EXPANDER */:
                    if ($event) {
                        $event.preventDefault();
                        $event.stopPropagation();
                    }
                    open = !this.node.open;
                    break;
                case "icon" /* ICON */:
                case "link" /* LINK */:
                    open = this.routerLinkActive && this.routerLinkActive.isActive ? true : !this.node.open;
                    break;
            }
            this.handleExpandCollapse(open, from, $event);
            this.nodeClick.emit(from);
        };
        /**
         * Expands or collapses the navigator node and its children recursively.
         *
         * @param {boolean} open Open or close the node.
         * @param {boolean} recursive Open or close the children.
         * @param {ClickOptions} forNode Click options.
         */
        NavigatorNodeComponent.prototype.expandCollapse = function (open, recursive, forNode) {
            if (forNode === void 0) { forNode = {}; }
            this.node.open = open;
            if (recursive) {
                this.childrenNodes.forEach(function (n) { return n.expandCollapse(open, recursive); });
            }
            forNode.open = open;
            this.node.click(forNode);
        };
        /**
         * @ignore
         */
        NavigatorNodeComponent.prototype.ngOnDestroy = function () {
            clearTimeout(this.viewInitTimeout);
            if (this.node) {
                this.node.destroy();
            }
        };
        NavigatorNodeComponent.prototype.handleExpandCollapse = function (open, from, $event) {
            var _a;
            if (open === this.node.open ||
                (this.node.path && !open && from !== "expander" /* EXPANDER */)) {
                return;
            }
            this.expandCollapse(open, false, (_a = {}, _a[from] = true, _a.$event = $event, _a));
        };
        NavigatorNodeComponent.prototype.expandParentIfActive = function () {
            if (this.routerLinkActive && this.routerLinkActive.isActive && this.parentNode) {
                this.parentNode.expandCollapse(true);
            }
        };
        NavigatorNodeComponent.prototype.updateIcon = function () {
            if (this.node.iconTemplate) {
                this.updateIconTemplate();
            }
            else {
                this.updateIconComponent();
            }
        };
        NavigatorNodeComponent.prototype.updateIconComponent = function () {
            var componentType = NavigatorIconComponent;
            if (this.node && this.node.iconComponent) {
                componentType = this.node.iconComponent;
            }
            this.iconSlot.clear();
            var iconComponentFactory = this.componentFactoryResolver.resolveComponentFactory(componentType);
            var componentRef = this.iconSlot.createComponent(iconComponentFactory);
            componentRef.instance.node = this.node;
        };
        NavigatorNodeComponent.prototype.updateIconTemplate = function () {
            this.iconSlot.clear();
            this.iconSlot.createEmbeddedView(this.node.iconTemplate);
        };
NavigatorNodeComponent.ɵfac = function NavigatorNodeComponent_Factory(t) { return new (t || NavigatorNodeComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(NavigatorService)); };
NavigatorNodeComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: NavigatorNodeComponent, selectors: [["c8y-navigator-node-display"]], viewQuery: function NavigatorNodeComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c17, 5, i0.ViewContainerRef);
        ɵngcc0.ɵɵviewQuery(i1.RouterLinkActive, 5);
        ɵngcc0.ɵɵviewQuery(PopoverConfirmComponent, 5);
        ɵngcc0.ɵɵviewQuery(NavigatorNodeComponent, 5);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.iconSlot = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.routerLinkActive = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.confirm = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.childrenNodes = _t);
    } }, inputs: { node: "node", isRoot: "isRoot" }, outputs: { nodeClick: "nodeClick" }, decls: 8, vars: 23, consts: [[1, "slot", 3, "hidden", "draggable", "ngClass", "dragstart", "dragend", "drop"], ["draggable", "false", 1, "link", 3, "title", "routerLink", "routerLinkActive", "routerLinkActiveOptions", "ngClass", "dragover", "dragenter", "dragleave", "click"], [4, "ngTemplateOutlet"], ["class", "children panel-expand expand", 3, "collapse", "isAnimated", 4, "ngIf"], ["inner", ""], [1, "children", "panel-expand", "expand", 3, "collapse", "isAnimated"], [3, "node", "nodeClick", 4, "ngFor", "ngForOf"], [3, "node", "nodeClick"], ["class", "icon-spin loadingIndicator", 3, "c8yIcon", 4, "ngIf"], ["icon", ""], ["class", "expander", 3, "c8yIcon", "title", "click", 4, "ngIf"], ["outsideClick", "true", "containerClass", "navigator-popover"], [1, "icon-spin", "loadingIndicator", 3, "c8yIcon"], [1, "expander", 3, "c8yIcon", "title", "click"]], template: function NavigatorNodeComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵlistener("dragstart", function NavigatorNodeComponent_Template_div_dragstart_0_listener($event) { return ctx.node.dragStart($event); })("dragend", function NavigatorNodeComponent_Template_div_dragend_0_listener($event) { return ctx.node.dragEnd($event); })("drop", function NavigatorNodeComponent_Template_div_drop_0_listener($event) { return ctx.node.drop($event); });
        ɵngcc0.ɵɵelementContainerStart(1);
        ɵngcc0.ɵɵelementStart(2, "a", 1);
        ɵngcc0.ɵɵlistener("dragover", function NavigatorNodeComponent_Template_a_dragover_2_listener($event) { return ctx.node.canDrop && $event.preventDefault(); })("dragenter", function NavigatorNodeComponent_Template_a_dragenter_2_listener($event) { return ctx.node.canDrop && ctx.node.dragEnter($event); })("dragleave", function NavigatorNodeComponent_Template_a_dragleave_2_listener($event) { return ctx.node.canDrop && ctx.node.dragLeave($event); })("click", function NavigatorNodeComponent_Template_a_click_2_listener($event) { return ctx.click(ctx.node.canNavigate ? "link" : "expander", $event); });
        ɵngcc0.ɵɵpipe(3, "translate");
        ɵngcc0.ɵɵtemplate(4, NavigatorNodeComponent_ng_container_4_Template, 1, 0, "ng-container", 2);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementContainerEnd();
        ɵngcc0.ɵɵtemplate(5, NavigatorNodeComponent_div_5_Template, 2, 3, "div", 3);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(6, NavigatorNodeComponent_ng_template_6_Template, 9, 5, "ng-template", null, 4, ɵngcc0.ɵɵtemplateRefExtractor);
    } if (rf & 2) {
        var _r2 = ɵngcc0.ɵɵreference(7);
        ɵngcc0.ɵɵproperty("hidden", ctx.node.hidden)("draggable", ctx.node.draggable)("ngClass", ɵngcc0.ɵɵpureFunction2(13, _c18, ctx.node.dragged, ctx.node.loading));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(3, 11, ctx.node.label));
        ɵngcc0.ɵɵproperty("routerLink", ctx.node.canNavigate ? ctx.node.path : undefined)("routerLinkActive", ctx.node.canNavigate ? "active" : "")("routerLinkActiveOptions", ɵngcc0.ɵɵpureFunction1(16, _c19, ctx.node.routerLinkExact))("ngClass", ɵngcc0.ɵɵpureFunction4(18, _c20, ctx.isRoot, ctx.node.open && ctx.node.hasChildren, ctx.node.hasChildren, ctx.node.draggedHover && !ctx.node.dragged));
        ɵngcc0.ɵɵattribute("id", ctx.isRoot ? ctx.node.id : undefined);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r2);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.node.children.length);
    } }, directives: [ɵngcc6.NgClass, ɵngcc1.RouterLinkWithHref, ɵngcc1.RouterLinkActive, ɵngcc6.NgTemplateOutlet, ɵngcc6.NgIf, ɵngcc10.CollapseDirective, ɵngcc6.NgForOf, NavigatorNodeComponent, PopoverConfirmComponent, IconDirective], pipes: [C8yTranslatePipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NavigatorNodeComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-navigator-node-display',
                template: "<div\n  class=\"slot\"\n  [hidden]=\"node.hidden\"\n  (dragstart)=\"node.dragStart($event)\"\n  (dragend)=\"node.dragEnd($event)\"\n  (drop)=\"node.drop($event)\"\n  [draggable]=\"node.draggable\"\n  [ngClass]=\"{ dragged: node.dragged, disabled: node.loading }\"\n>\n  <ng-container>\n    <a\n      class=\"link\"\n      draggable=\"false\"\n      (dragover)=\"node.canDrop && $event.preventDefault()\"\n      (dragenter)=\"node.canDrop && node.dragEnter($event)\"\n      (dragleave)=\"node.canDrop && node.dragLeave($event)\"\n      title=\"{{node.label | translate}}\"\n      [attr.id]=\"isRoot ? node.id : undefined\"\n      [routerLink]=\"node.canNavigate ? node.path : undefined\"\n      [routerLinkActive]=\"node.canNavigate ? 'active' : ''\"\n      [routerLinkActiveOptions]=\"{exact:node.routerLinkExact}\"\n      (click)=\"click(node.canNavigate ? 'link' : 'expander', $event)\"\n      [ngClass]=\"{'root-link':isRoot, open: node.open && node.hasChildren, parent: node.hasChildren, 'dragged-hover': node.draggedHover && !node.dragged}\"\n    >\n      <ng-container *ngTemplateOutlet=\"inner\"></ng-container>\n    </a>\n  </ng-container>\n\n  <div\n    class=\"children panel-expand expand\"\n    *ngIf=\"node.children.length\"\n    [collapse]=\"!node.open\"\n    [isAnimated]=\"true\"\n  >\n    <c8y-navigator-node-display\n      *ngFor=\"let childNode of node.children\"\n      [node]=\"childNode\"\n      (nodeClick)=\"nodeClick.emit($event)\"\n    >\n    </c8y-navigator-node-display>\n  </div>\n</div>\n\n<ng-template #inner>\n  <!-- loader -->\n  <i\n    class=\"icon-spin loadingIndicator\"\n    [c8yIcon]=\"'circle-o-notch'\"\n    *ngIf=\"node.loading && !isRoot\"\n  >\n  </i>\n\n  <!-- icon -->\n  <div>\n    <ng-container #icon></ng-container>\n  </div>\n\n  <!--title  -->\n  <span>{{node.label | translate}}</span>\n\n  <i\n    class=\"expander\"\n    [c8yIcon]=\"'chevron-down'\"\n    *ngIf=\"node.hasChildren\"\n    (click)=\"click('expander', $event)\"\n    title=\"{{expandTitle}}\"\n  >\n  </i>\n\n  <c8y-popover-confirm\n    outsideClick=\"true\"\n    containerClass=\"navigator-popover\"\n  ></c8y-popover-confirm>\n</ng-template>\n"
            }]
    }], function () { return [{ type: ɵngcc0.ComponentFactoryResolver }, { type: NavigatorService }]; }, { nodeClick: [{
            type: i0.Output
        }], iconSlot: [{
            type: i0.ViewChild,
            args: ['icon', { read: i0.ViewContainerRef, static: false }]
        }], node: [{
            type: i0.Input
        }], isRoot: [{
            type: i0.Input
        }], routerLinkActive: [{
            type: i0.ViewChild,
            args: [i1.RouterLinkActive, { static: false }]
        }], childrenNodes: [{
            type: i0.ViewChildren,
            args: [NavigatorNodeComponent]
        }], confirm: [{
            type: i0.ViewChild,
            args: [PopoverConfirmComponent, { static: false }]
        }] }); })();
        return NavigatorNodeComponent;
    }());
    NavigatorNodeComponent.ctorParameters = function () { return [
        { type: i0.ComponentFactoryResolver },
        { type: NavigatorService }
    ]; };
    NavigatorNodeComponent.propDecorators = {
        iconSlot: [{ type: i0.ViewChild, args: ['icon', { read: i0.ViewContainerRef, static: false },] }],
        node: [{ type: i0.Input }],
        isRoot: [{ type: i0.Input }],
        routerLinkActive: [{ type: i0.ViewChild, args: [i1.RouterLinkActive, { static: false },] }],
        childrenNodes: [{ type: i0.ViewChildren, args: [NavigatorNodeComponent,] }],
        nodeClick: [{ type: i0.Output }],
        confirm: [{ type: i0.ViewChild, args: [PopoverConfirmComponent, { static: false },] }]
    };

    /**
     * The component shows all nodes that have been added to the navigator.
     * In addition, it allows you to add a header and a footer to the navigator.
     *
     * ## Example:
     * ```html
     * <c8y-navigator-outlet [nodes]="navigatorService.items$ | async" [open]="isOpen">
     *   <header class="navigator-slot-top"></header>
     *   <footer class="navigator-slot-bottom"></footer>
     * </c8y-navigator-outlet>
     * ```
     */
    var NavigatorOutletComponent = /** @class */ (function () {
        function NavigatorOutletComponent(headerService) {
            this.headerService = headerService;
            /**
             * Determines whether the navigator menu should be open/closed.
             */
            this.open = true;
            /**
             * Determines whether the navigator pane should be rendered.
             */
            this.isShown$ = new rxjs.BehaviorSubject(false);
        }
        /**
         * @ignore
         */
        NavigatorOutletComponent.prototype.ngOnChanges = function () {
            this.isShown$.next(this.nodes && this.nodes.length > 0);
        };
        /**
         * Closes the navigator menu after clicking an item in the menu, in case of insufficient screen width.
         */
        NavigatorOutletComponent.prototype.collapseNavigator = function (from) {
            if (from === 'link' && !this.headerService.largeWidth) {
                this.headerService.closeNavigator();
            }
        };
        /**
         * @ignore
         */
        NavigatorOutletComponent.prototype.trackByPathOrLabel = function (index, node) {
            return node.path ? node.path : node.label;
        };
NavigatorOutletComponent.ɵfac = function NavigatorOutletComponent_Factory(t) { return new (t || NavigatorOutletComponent)(ɵngcc0.ɵɵdirectiveInject(HeaderService)); };
NavigatorOutletComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: NavigatorOutletComponent, selectors: [["c8y-navigator-outlet"], ["c8y-ui-navigator"]], inputs: { open: "open", nodes: "nodes" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c23, decls: 2, vars: 3, consts: [["class", "navigator", 3, "ngClass", 4, "ngIf"], [1, "navigator", 3, "ngClass"], [1, "navigatorContent"], [3, "node", "isRoot", "nodeClick", 4, "ngFor", "ngForOf", "ngForTrackBy"], [3, "node", "isRoot", "nodeClick"]], template: function NavigatorOutletComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c22);
        ɵngcc0.ɵɵtemplate(0, NavigatorOutletComponent_nav_0_Template, 5, 5, "nav", 0);
        ɵngcc0.ɵɵpipe(1, "async");
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind1(1, 1, ctx.isShown$));
    } }, directives: [ɵngcc6.NgIf, ɵngcc6.NgClass, ɵngcc6.NgForOf, NavigatorNodeComponent], pipes: [ɵngcc6.AsyncPipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NavigatorOutletComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-navigator-outlet, c8y-ui-navigator',
                template: "<nav class=\"navigator\" *ngIf=\"isShown$ | async\" [ngClass]=\"{ open: open }\">\n  <ng-content select=\".navigator-slot-top\"></ng-content>\n  <ul class=\"navigatorContent\">\n    <c8y-navigator-node-display (nodeClick)=\"collapseNavigator($event)\" [node]=\"node\" *ngFor=\"let node of nodes trackBy trackByPathOrLabel\" [isRoot]=\"true\"></c8y-navigator-node-display>\n  </ul>\n  <ng-content select=\".navigator-slot-bottom\"></ng-content>\n</nav>\n"
            }]
    }], function () { return [{ type: HeaderService }]; }, { open: [{
            type: i0.Input
        }], nodes: [{
            type: i0.Input
        }] }); })();
        return NavigatorOutletComponent;
    }());
    NavigatorOutletComponent.ctorParameters = function () { return [
        { type: HeaderService }
    ]; };
    NavigatorOutletComponent.propDecorators = {
        nodes: [{ type: i0.Input }],
        open: [{ type: i0.Input }]
    };

    var ConfirmModalComponent = /** @class */ (function () {
        function ConfirmModalComponent(modal) {
            var _this = this;
            this.modal = modal;
            this.status = exports.Status.INFO;
            this._labels = {
                ok: 'OK',
                cancel: 'Cancel'
            };
            this.result = new Promise(function (resolve, reject) {
                _this.dismiss = function () {
                    reject();
                    _this.modal.hide();
                };
                _this.close = function () {
                    resolve(true);
                    _this.modal.hide();
                };
            });
        }
        Object.defineProperty(ConfirmModalComponent.prototype, "labels", {
            get: function () {
                return this._labels;
            },
            set: function (labels) {
                var _a = labels || {}, _b = _a.ok, ok = _b === void 0 ? 'OK' : _b, _c = _a.cancel, cancel = _c === void 0 ? 'Cancel' : _c;
                this._labels = { ok: ok, cancel: cancel };
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ConfirmModalComponent.prototype, "classIcon", {
            get: function () {
                return "dlt-c8y-icon-" + statusIcons[this.status];
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ConfirmModalComponent.prototype, "classAlert", {
            get: function () {
                return statusAlert[this.status];
            },
            enumerable: false,
            configurable: true
        });
        ConfirmModalComponent.prototype.ngOnDestroy = function () {
            this.dismiss();
        };
ConfirmModalComponent.ɵfac = function ConfirmModalComponent_Factory(t) { return new (t || ConfirmModalComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc12.BsModalRef)); };
ConfirmModalComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ConfirmModalComponent, selectors: [["c8y-confirm-modal"]], inputs: { status: "status", labels: "labels", title: "title", body: "body" }, ngContentSelectors: _c1, decls: 12, vars: 14, consts: [[1, "c8y-prompt", "alert", 3, "ngClass"], ["class", "m-b-16", 4, "ngIf"], [1, "text-break-word"], [1, "alert-footer"], ["class", "btn btn-default", 3, "title", "click", 4, "ngIf"], [1, "btn", "btn-primary", 3, "title", "click"], [1, "m-b-16"], [1, "dlt-c8y-icon", 3, "ngClass"], [4, "ngIf"], [1, "btn", "btn-default", 3, "title", "click"]], template: function ConfirmModalComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵtemplate(1, ConfirmModalComponent_h3_1_Template, 3, 4, "h3", 1);
        ɵngcc0.ɵɵelementStart(2, "p", 2);
        ɵngcc0.ɵɵtext(3);
        ɵngcc0.ɵɵpipe(4, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵprojection(5);
        ɵngcc0.ɵɵelementStart(6, "div", 3);
        ɵngcc0.ɵɵtemplate(7, ConfirmModalComponent_button_7_Template, 4, 6, "button", 4);
        ɵngcc0.ɵɵelementStart(8, "button", 5);
        ɵngcc0.ɵɵlistener("click", function ConfirmModalComponent_Template_button_click_8_listener() { return ctx.close(); });
        ɵngcc0.ɵɵpipe(9, "translate");
        ɵngcc0.ɵɵtext(10);
        ɵngcc0.ɵɵpipe(11, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(12, _c24, ctx.classAlert));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.title);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(4, 6, ctx.body));
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵproperty("ngIf", ctx.labels.cancel !== null);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(9, 8, ctx.labels.ok));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(11, 10, ctx.labels.ok), " ");
    } }, directives: [ɵngcc6.NgClass, ɵngcc6.NgIf], pipes: [C8yTranslatePipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ConfirmModalComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-confirm-modal',
                template: "<div class=\"c8y-prompt alert\" [ngClass]=\"[classAlert]\">\n  <h3 class=\"m-b-16\" *ngIf=\"title\">\n    <i class=\"dlt-c8y-icon\" [ngClass]=\"[classIcon]\"></i>\n    <span *ngIf=\"title\">{{ title | translate }}</span>\n  </h3>\n  <p class=\"text-break-word\">{{ body | translate }}</p>\n  <ng-content></ng-content>\n  <div class=\"alert-footer\">\n    <button\n      title=\"{{ labels.cancel | translate }}\"\n      class=\"btn btn-default\"\n      *ngIf=\"labels.cancel !== null\"\n      (click)=\"dismiss()\"\n    >\n      {{ labels.cancel | translate }}\n    </button>\n    <button title=\"{{ labels.ok | translate }}\" class=\"btn btn-primary\" (click)=\"close()\">\n      {{ labels.ok | translate }}\n    </button>\n  </div>\n</div>\n"
            }]
    }], function () { return [{ type: ɵngcc12.BsModalRef }]; }, { status: [{
            type: i0.Input
        }], labels: [{
            type: i0.Input
        }], title: [{
            type: i0.Input
        }], body: [{
            type: i0.Input
        }] }); })();
        return ConfirmModalComponent;
    }());
    ConfirmModalComponent.ctorParameters = function () { return [
        { type: i1$2.BsModalRef }
    ]; };
    ConfirmModalComponent.propDecorators = {
        title: [{ type: i0.Input }],
        body: [{ type: i0.Input }],
        status: [{ type: i0.Input }],
        labels: [{ type: i0.Input }]
    };

    /**
     * C8y modal component.
     * ## Example:
     *
     * Creating custom modal:
     * ```typescript
     *  import { Component } from "@angular/core";
     *  import { Subject } from 'rxjs';
     *
     * @Component({
     *  selector: "my-modal",
     *  template: `
     *    <c8y-modal title="CustomTitle"
     *      (onClose)="onClose($event)"
     *      (onDismiss)="onDismiss($event)"
     *      [labels]="labels"
     *      [disabled]="true" <- will disable ok button
     *      >
     *        <span>I am body of modal</span>
     *        <span>For simple string use body="string"</span>
     *    </c8y-modal>`
     * })
     *
     * export class MyModalComponent {
     *
     *  closeSubject: Subject<boolean> = new Subject();
     *  labels : ModalLabels = {ok: "customOK", cancel: "customCancel"};
     *
     *  onDismiss(event){
     *    this.closeSubject.next(false);
     *  }
     *
     *  onClose(event) {
     *    this.closeSubject.next(true);
     *  }
     * }
     * ```
     * Showing modal:
     * ```typescript
     * import { BsModalService } from "ngx-bootstrap/modal";
     *
     * constructor(
     *  public bsModalService: BsModalService,
     * ) {}
     *
     * showModal() {
     *  const modalRef = this.bsModalService.show(MyModalComponent);
     *  modalRef.content.closeSubject.subscribe(result => {
     *    console.log('results:', result);
     *  });
     * }
     * ```
     */
    var ModalComponent = /** @class */ (function () {
        function ModalComponent(modal) {
            this.modal = modal;
            this.onDismiss = new i0.EventEmitter();
            this.onClose = new i0.EventEmitter();
            this.disabled = false;
            this.customFooter = false;
            this._labels = { ok: gettext('OK'), cancel: gettext('Cancel') };
        }
        Object.defineProperty(ModalComponent.prototype, "labels", {
            get: function () { return this._labels; },
            set: function (_a) {
                var ok = _a.ok, cancel = _a.cancel;
                this._labels = { ok: ok, cancel: cancel };
            },
            enumerable: false,
            configurable: true
        });
        ModalComponent.prototype._dismiss = function () {
            var _this = this;
            var fn = this.dismiss;
            if (!fn && this.modal) {
                fn = function () { return _this.modal.hide(); };
            }
            if (fn) {
                fn();
            }
            this.onDismiss.emit(true);
        };
        ModalComponent.prototype._close = function () {
            var _this = this;
            var fn = this.close;
            if (!fn && this.modal) {
                fn = function () { return _this.modal.hide(); };
            }
            if (fn) {
                fn();
            }
            this.onClose.emit(true);
        };
        ModalComponent.prototype.onEnterKeyDown = function (event) {
            var hasOnlyOneButton = lodash.isEmpty(this.labels.ok) !== lodash.isEmpty(this.labels.cancel);
            var isCancelClickable = !this.customFooter && this.labels.cancel;
            var isOkClickable = !this.customFooter && !this.disabled && this.labels.ok;
            if (hasOnlyOneButton && isCancelClickable) {
                this._dismiss();
            }
            if (hasOnlyOneButton && isOkClickable) {
                this._close();
            }
        };
ModalComponent.ɵfac = function ModalComponent_Factory(t) { return new (t || ModalComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc12.BsModalRef, 8)); };
ModalComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ModalComponent, selectors: [["c8y-modal"]], hostBindings: function ModalComponent_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("keydown.enter", function ModalComponent_keydown_enter_HostBindingHandler($event) { return ctx.onEnterKeyDown($event); }, false, ɵngcc0.ɵɵresolveDocument);
    } }, inputs: { disabled: "disabled", customFooter: "customFooter", labels: "labels", close: "close", dismiss: "dismiss", title: "title", body: "body" }, outputs: { onDismiss: "onDismiss", onClose: "onClose" }, ngContentSelectors: _c26, decls: 10, vars: 7, consts: [[1, "modal-header"], [3, "hidden"], [1, "modal-body"], [1, "text-center", "text-break-word", 3, "hidden"], ["class", "modal-footer", 4, "ngIf"], [1, "modal-footer"], ["class", "btn btn-default", 3, "title", "click", 4, "ngIf"], ["class", "btn btn-primary", 3, "title", "disabled", "click", 4, "ngIf"], [1, "btn", "btn-default", 3, "title", "click"], [1, "btn", "btn-primary", 3, "title", "disabled", "click"]], template: function ModalComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c25);
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵprojection(1);
        ɵngcc0.ɵɵelementStart(2, "h3", 1);
        ɵngcc0.ɵɵtext(3);
        ɵngcc0.ɵɵpipe(4, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(5, "div", 2);
        ɵngcc0.ɵɵelementStart(6, "p", 3);
        ɵngcc0.ɵɵtext(7);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵprojection(8, 1);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(9, ModalComponent_div_9_Template, 4, 2, "div", 4);
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("hidden", !ctx.title);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(4, 5, ctx.title), " ");
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("hidden", !ctx.title);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate1(" ", ctx.body, " ");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.customFooter);
    } }, directives: [ɵngcc6.NgIf], pipes: [C8yTranslatePipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ModalComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-modal',
                template: "<div class=\"modal-header\">\n  <ng-content select=\"[c8y-modal-title]\"></ng-content>\n  <h3 [hidden]=\"!title\">\n    {{ title | translate }}\n  </h3>\n</div>\n<div class=\"modal-body\">\n  <p [hidden]=\"!title\" class=\"text-center text-break-word\">\n    {{ body }}\n  </p>\n  <ng-content></ng-content>\n</div>\n<div\n  class=\"modal-footer\"\n  *ngIf=\"!customFooter\">\n  <ng-content select=\"[c8y-modal-footer]\"></ng-content>\n  <button\n    title=\"{{ labels.cancel | translate }}\"\n    *ngIf=\"labels.cancel\"\n    class=\"btn btn-default\"\n    (click)=\"_dismiss()\"\n  >\n    {{ labels.cancel | translate }}\n  </button>\n  <button\n    title=\"{{ labels.ok | translate }}\"\n    *ngIf=\"labels.ok\"\n    class=\"btn btn-primary\"\n    (click)=\"_close()\"\n    [disabled]=\"disabled\"\n  >\n    {{ labels.ok | translate }}\n  </button>\n</div>\n"
            }]
    }], function () { return [{ type: ɵngcc12.BsModalRef, decorators: [{
                type: i0.Optional
            }] }]; }, { onDismiss: [{
            type: i0.Output
        }], onClose: [{
            type: i0.Output
        }], disabled: [{
            type: i0.Input
        }], customFooter: [{
            type: i0.Input
        }], labels: [{
            type: i0.Input
        }], onEnterKeyDown: [{
            type: i0.HostListener,
            args: ['document:keydown.enter', ['$event']]
        }], close: [{
            type: i0.Input
        }], dismiss: [{
            type: i0.Input
        }], title: [{
            type: i0.Input
        }], body: [{
            type: i0.Input
        }] }); })();
        return ModalComponent;
    }());
    ModalComponent.ctorParameters = function () { return [
        { type: i1$2.BsModalRef, decorators: [{ type: i0.Optional }] }
    ]; };
    ModalComponent.propDecorators = {
        onDismiss: [{ type: i0.Output }],
        onClose: [{ type: i0.Output }],
        disabled: [{ type: i0.Input }],
        close: [{ type: i0.Input }],
        dismiss: [{ type: i0.Input }],
        title: [{ type: i0.Input }],
        body: [{ type: i0.Input }],
        customFooter: [{ type: i0.Input }],
        labels: [{ type: i0.Input }],
        onEnterKeyDown: [{ type: i0.HostListener, args: ['document:keydown.enter', ['$event'],] }]
    };

    /**
     * Service to show a modal.
     */
    var ModalService = /** @class */ (function () {
        function ModalService(modalService) {
            this.modalService = modalService;
        }
        /**
         * Shows a quick confirm message modal.
         * @param title The title of that modal.
         * @param body The text body to display.
         * @param status The status.
         * @param labels The labels to use. Default: { ok: 'Confirm', cancel: 'Cancel'}
         */
        ModalService.prototype.confirm = function (title, body, status, labels) {
            if (status === void 0) { status = exports.Status.INFO; }
            if (labels === void 0) { labels = {}; }
            return __awaiter(this, void 0, void 0, function () {
                var modalLabels, modalRef;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            modalLabels = { ok: labels.ok || gettext('Confirm'), cancel: labels.cancel || gettext('Cancel') };
                            modalRef = this.modalService.show(ConfirmModalComponent, { initialState: { title: title, body: body, labels: modalLabels, status: status } });
                            return [4 /*yield*/, modalRef.content.result];
                        case 1: return [2 /*return*/, _a.sent()];
                    }
                });
            });
        };
        /**
         * Shows a quick acknowledge message modal.
         * @param title The title of that modal.
         * @param body The text body to display.
         * @param status The status.
         * @param acknowledgeLabel The label to use.
         */
        ModalService.prototype.acknowledge = function (title, body, status, acknowledgeLabel) {
            if (status === void 0) { status = exports.Status.INFO; }
            if (acknowledgeLabel === void 0) { acknowledgeLabel = gettext('Confirm'); }
            return __awaiter(this, void 0, void 0, function () {
                var labels, modalRef;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            labels = { ok: acknowledgeLabel, cancel: null };
                            modalRef = this.modalService.show(ConfirmModalComponent, { initialState: { title: title, body: body, labels: labels, status: status } });
                            return [4 /*yield*/, modalRef.content.result];
                        case 1: return [2 /*return*/, _a.sent()];
                    }
                });
            });
        };
        /**
         * Shows a quick logout confirmation modal.
         * @param body The text body to display. Default: 'You will be logged out to apply your changes. Do you want to proceed?'
         * @param status The status.
         * @param labels The labels to use. Default: { ok: 'Confirm and log out', cancel: 'Cancel' }
         */
        ModalService.prototype.confirmLogout = function (body, status, labels) {
            if (status === void 0) { status = exports.Status.WARNING; }
            if (labels === void 0) { labels = {}; }
            return __awaiter(this, void 0, void 0, function () {
                var modalLabels, modalBody;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            modalLabels = { ok: labels.ok || gettext('Confirm and log out'), cancel: labels.cancel || gettext('Cancel') };
                            modalBody = body || gettext('You must log out to apply your changes. Do you want to proceed?');
                            return [4 /*yield*/, this.confirm(gettext('Logout required'), modalBody, status, modalLabels)];
                        case 1: return [2 /*return*/, _a.sent()];
                    }
                });
            });
        };
ModalService.ɵfac = function ModalService_Factory(t) { return new (t || ModalService)(ɵngcc0.ɵɵinject(ɵngcc12.BsModalService)); };
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ModalService, [{
        type: i0.Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return [{ type: ɵngcc12.BsModalService }]; }, null); })();
        return ModalService;
    }());
    ModalService.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function ModalService_Factory() { return new ModalService(i0__namespace.ɵɵinject(i1__namespace$2.BsModalService)); }, token: ModalService, providedIn: "root" });
    ModalService.ctorParameters = function () { return [
        { type: i1$2.BsModalService }
    ]; };

    /**
     * The angular module definition for modal.
     * @exports ConfirmModalComponent
     * @exports ModalComponent
     * @exports PopoverConfirmComponent
     */
    var ModalModule = /** @class */ (function () {
        function ModalModule() {
        }
ModalModule.ɵfac = function ModalModule_Factory(t) { return new (t || ModalModule)(); };
ModalModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: ModalModule });
ModalModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [
        ModalService
    ], imports: [[
            i1$2.ModalModule.forRoot(),
            CommonModule,
            popover.PopoverModule.forRoot()
        ]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ModalModule, [{
        type: i0.NgModule,
        args: [{
                imports: [
                    i1$2.ModalModule.forRoot(),
                    CommonModule,
                    popover.PopoverModule.forRoot()
                ],
                exports: [
                    ConfirmModalComponent,
                    ModalComponent,
                    PopoverConfirmComponent
                ],
                declarations: [
                    ConfirmModalComponent,
                    ModalComponent,
                    PopoverConfirmComponent
                ],
                providers: [
                    ModalService
                ],
                entryComponents: [
                    ConfirmModalComponent
                ]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ModalModule, { declarations: [ConfirmModalComponent, ModalComponent, PopoverConfirmComponent], imports: [ɵngcc12.ModalModule, CommonModule, ɵngcc11.PopoverModule], exports: [ConfirmModalComponent, ModalComponent, PopoverConfirmComponent] }); })();
        return ModalModule;
    }());

    /**
     * The angular module definition for the navigator.
     * @exports NavigatorOutletComponent
     * @exports NavigatorItemComponent
     */
    var NavigatorModule = /** @class */ (function () {
        function NavigatorModule() {
        }
NavigatorModule.ɵfac = function NavigatorModule_Factory(t) { return new (t || NavigatorModule)(); };
NavigatorModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NavigatorModule });
NavigatorModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[
            i1.RouterModule,
            collapse.CollapseModule.forRoot(),
            CommonModule,
            ModalModule
        ]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NavigatorModule, [{
        type: i0.NgModule,
        args: [{
                declarations: [
                    NavigatorOutletComponent,
                    NavigatorNodeComponent,
                    NavigatorItemComponent,
                    NavigatorIconComponent
                ],
                imports: [
                    i1.RouterModule,
                    collapse.CollapseModule.forRoot(),
                    CommonModule,
                    ModalModule
                ],
                exports: [
                    NavigatorOutletComponent,
                    NavigatorItemComponent
                ],
                entryComponents: [
                    NavigatorIconComponent
                ]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NavigatorModule, { declarations: [NavigatorOutletComponent, NavigatorNodeComponent, NavigatorItemComponent, NavigatorIconComponent], imports: [ɵngcc1.RouterModule, ɵngcc10.CollapseModule, CommonModule, ModalModule], exports: [NavigatorOutletComponent, NavigatorItemComponent] }); })();
        return NavigatorModule;
    }());

    /**
     * This service is handling the cookie banner and cookie preferences related logic.
     */
    var CookieBannerService = /** @class */ (function () {
        function CookieBannerService(options) {
            this.options = options;
            this.STORAGE_KEY = 'acceptCookieNotice';
            this.COOKIE_BANNER = 'cookieBanner';
            this.COOKIE_PREFERENCES_CONFIG = 'cookiePreferences';
            this.isCookieBannerShowed$ = new rxjs.Subject();
            this.cookieDescriptions = {
                required: gettext("These cookies are required to enable core site functionality. They perform a task or operation without which a site's functionality would not be possible."),
                functional: gettext('These cookies are used to track site usage and to process my personal data to measure and improve usability and performance. We will neither forward this data to any third party nor use this data for direct marketing purposes. I recognize that I can opt in and out of these cookies at any time.'),
                marketing: gettext('These cookies are used to target advertising to a user.')
            };
        }
        /**
         * Returns Cookie preferences configuration.
         * @returns {object} Return an object with cookie preferences configuration defined in application options.
         */
        CookieBannerService.prototype.getCookiePreferencesConfig = function () {
            return this.options.get(this.COOKIE_PREFERENCES_CONFIG);
        };
        /**
         * Returns Cookie banner configuration.
         * @returns {object} Return an object with cookie banner configuration defined in application options.
         */
        CookieBannerService.prototype.getCookieBannerSettings = function () {
            return this.options.get(this.COOKIE_BANNER) || {};
        };
        /**
         * Converts the cookie preferences to boolean. Sets the cookie preferences configuration in local storage.
         * @param {object} cookiePreferences Object with cookie preferences configuration
         */
        CookieBannerService.prototype.setCookies = function (cookiePreferences) {
            var cookiesToSet = Object.assign({}, cookiePreferences);
            Object.entries(cookiesToSet).forEach(function (_a) {
                var _b = __read(_a, 2), cookieName = _b[0], cookieValue = _b[1];
                cookiesToSet[cookieName] = typeof cookieValue === 'string' ? true : cookieValue;
            });
            localStorage.setItem(this.STORAGE_KEY, JSON.stringify(cookiesToSet));
        };
        /**
         * Verifies that cookie banner should be shown.
         * @returns {boolean} Returns if the cookie banner should be shown.
         */
        CookieBannerService.prototype.shouldShowCookieBanner = function () {
            var settings = this.getCookieBannerSettings();
            return !!settings.cookieBannerText && !this.getUserCookiePreferences();
        };
        /**
         * Gets the cookie preferences configuration from local storage.
         * @returns {object} Object with cookie preferences configuration.
         */
        CookieBannerService.prototype.getUserCookiePreferences = function () {
            return JSON.parse(localStorage.getItem(this.STORAGE_KEY));
        };
        /**
         * Verifies that cookie preferences configuration is defined.
         * @returns {boolean} Returns if the cookie preferences configuration is defined.
         */
        CookieBannerService.prototype.isConfigCookiePreferencesDefined = function () {
            return !!this.getCookiePreferencesConfig();
        };
        /**
         * Verifies that functional cookies are enabled.
         * @returns {boolean} True when functional cookies are enabled.
         */
        CookieBannerService.prototype.isFunctionalCookieEnabled = function () {
            var functional = (this.getUserCookiePreferences() || {}).functional;
            return functional === true;
        };
        /**
         * Description of cookies.
         * @param {'required' | 'functional' | 'marketing'} cookieType Takes one of the following options: 'required', 'functional', 'marketing'.
         * @returns {string} The default cookie description, if not explicitly defined in application options.
         */
        CookieBannerService.prototype.getCookieDescription = function (cookieType) {
            var cookieBannerConfigSettings = this.getCookiePreferencesConfig();
            return typeof cookieBannerConfigSettings[cookieType] === 'string'
                ? cookieBannerConfigSettings[cookieType]
                : this.cookieDescriptions[cookieType];
        };
        /**
         * Transforms cookie preferences configuration object to an array of cookie preferences objects. Each object in returned array contains cookie 'name', 'value' and 'isReadonly' property.
         * @param {object} cookiePreferences.
         * @returns {Array} Array shows if the cookie is Readonly.
         */
        CookieBannerService.prototype.transformCookiePreferencesToList = function (cookiePreferences) {
            return Object.entries(cookiePreferences).map(function (_a) {
                var _b = __read(_a, 2), name = _b[0], value = _b[1];
                var isReadonly = name === 'required';
                return { name: name, value: value, isReadonly: isReadonly };
            });
        };
        /**
         * Transforms an array of cookie preferences objects to cookie preferences configuration object.
         * @param {Array} cookiePreferencesList Array of cookie preferences.
         * @returns {object} An object with cookie preferences configuration.
         */
        CookieBannerService.prototype.transformCookiePreferencesListToCookiePreferences = function (cookiePreferencesList) {
            return cookiePreferencesList.reduce(function (cookiePref, cookie) {
                var key = cookie.name;
                cookiePref[key] = cookie.value;
                return cookiePref;
            }, {});
        };
CookieBannerService.ɵfac = function CookieBannerService_Factory(t) { return new (t || CookieBannerService)(ɵngcc0.ɵɵinject(OptionsService)); };
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CookieBannerService, [{
        type: i0.Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return [{ type: OptionsService }]; }, null); })();
        return CookieBannerService;
    }());
    CookieBannerService.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function CookieBannerService_Factory() { return new CookieBannerService(i0__namespace.ɵɵinject(OptionsService)); }, token: CookieBannerService, providedIn: "root" });
    CookieBannerService.ctorParameters = function () { return [
        { type: OptionsService }
    ]; };

    /**
     * A service to manage the Gainsight integration. It allows to load the
     * tag and
     */
    var GainsightService = /** @class */ (function () {
        function GainsightService(appState, options, cookieBannerService, userPreferencesService) {
            this.appState = appState;
            this.options = options;
            this.cookieBannerService = cookieBannerService;
            this.userPreferencesService = userPreferencesService;
            /**
             * A subject that emits the tag function as soon as a new tag is set.
             */
            this.tagFunction$ = new rxjs.BehaviorSubject(null);
            this.USER_PREFERENCES_KEY = 'gainsightEnabled';
            this.GAINSIGHT_URL = 'web-sdk.aptrinsic.com/api/aptrinsic.js?a=';
            this.GAINSIGHT_GLOBAL_SCOPE = 'aptrinsic';
            this.SCRIPT_EXECUTION_WAIT_TIME = 500;
            this.OPTIONS_KEY_CATEGORY = 'gainsight';
            this.OPTIONS_KEY_NAME = 'api.key';
            this.isScriptLoaded = false;
        }
        GainsightService.prototype.isGainsightDisabledInUserPreferences = function () {
            return __awaiter(this, void 0, void 0, function () {
                var userGainsightPref;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.userPreferencesService
                                .get(this.USER_PREFERENCES_KEY)
                                .toPromise()];
                        case 1:
                            userGainsightPref = _a.sent();
                            return [2 /*return*/, userGainsightPref === false];
                    }
                });
            });
        };
        GainsightService.prototype.setFunctionalCookie = function (value) {
            var cookies = this.cookieBannerService.getUserCookiePreferences();
            if (cookies) {
                Object.keys(cookies).forEach(function (cookieName) {
                    if (cookieName === 'functional') {
                        cookies[cookieName] = value;
                        return;
                    }
                });
                localStorage.setItem('acceptCookieNotice', JSON.stringify(cookies));
            }
        };
        GainsightService.prototype.getGainsightKey = function () {
            return __awaiter(this, void 0, void 0, function () {
                var _a, _b;
                return __generator(this, function (_c) {
                    switch (_c.label) {
                        case 0:
                            _a = this;
                            _b = this.options.gainsightKey;
                            if (_b) return [3 /*break*/, 2];
                            return [4 /*yield*/, this.options.getSystemOption(this.OPTIONS_KEY_CATEGORY, this.OPTIONS_KEY_NAME)];
                        case 1:
                            _b = (_c.sent());
                            _c.label = 2;
                        case 2:
                            _a.gainsightKey = _b;
                            return [2 /*return*/, this.gainsightKey];
                    }
                });
            });
        };
        Object.defineProperty(GainsightService.prototype, "tagFunction", {
            /**
             * Returns the tag global function which can be used to identify user
             * or add special events.
             */
            get: function () {
                return window[this.GAINSIGHT_GLOBAL_SCOPE];
            },
            enumerable: false,
            configurable: true
        });
        /**
         * Load the script tag and calls the identify function to start the tracking.
         * @param currentTenant The current tenant.
         * @param identify If set to false, only the tag is loaded.
         */
        GainsightService.prototype.loadTag = function (currentTenant, identify) {
            if (identify === void 0) { identify = true; }
            return __awaiter(this, void 0, void 0, function () {
                var scriptTag, key;
                var _this = this;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            scriptTag = document.createElement('script');
                            return [4 /*yield*/, this.getGainsightKey()];
                        case 1:
                            key = _a.sent();
                            if (key && !this.isScriptLoaded) {
                                this.loadScriptTag(scriptTag, key);
                                rxjs.combineLatest(this.appState.currentUser, rxjs.fromEvent(scriptTag, 'load'), this.appState.state$.pipe(operators.filter(function (_a) {
                                    var versions = _a.versions;
                                    return versions.backend;
                                }), operators.map(function (_a) {
                                    var versions = _a.versions;
                                    return versions;
                                }), operators.take(1)))
                                    .pipe(operators.delay(this.SCRIPT_EXECUTION_WAIT_TIME), operators.filter(function (_a) {
                                    var _b = __read(_a, 2), user = _b[0], scriptEvent = _b[1];
                                    return !!(scriptEvent && user);
                                }))
                                    .subscribe(function (_a) {
                                    var _b = __read(_a, 3), user = _b[0], scriptEvent = _b[1], versions = _b[2];
                                    var instanceId = _this.getInstanceIdFromUrl();
                                    if (identify) {
                                        _this.identify(user, currentTenant, instanceId, versions.ui.ngx, versions.backend);
                                    }
                                    _this.isScriptLoaded = true;
                                    _this.tagFunction$.next(_this.tagFunction);
                                });
                            }
                            return [2 /*return*/];
                    }
                });
            });
        };
        /**
         * Identifies the user/account at Gainsight.
         * @param user The user which is given to Gainsight.
         * @param tenant The tenant which is given to Gainsight.
         * @param versionUI The UI version used.
         * @param versionBE The BE version used.
         */
        GainsightService.prototype.identify = function (user, tenant, instanceId, versionUI, versionBE) {
            var windowRef = window;
            var userId = user.id, email = user.email, userName = user.userName, firstName = user.firstName, lastName = user.lastName;
            var name = tenant.name, customProperties = tenant.customProperties, domainName = tenant.domainName;
            var externalReference = (customProperties || {}).externalReference;
            windowRef[this.GAINSIGHT_GLOBAL_SCOPE]('identify', {
                id: userId + "_" + name + "_" + instanceId,
                email: email,
                userName: userName,
                firstName: firstName,
                lastName: lastName,
                domainName: domainName,
                versionUI: versionUI,
                versionBE: versionBE,
                userLanguage: TranslateService.defaultLang(),
                instanceId: instanceId,
                externalReference: externalReference
            }, {
                id: name + "_" + instanceId,
                instanceId: instanceId
            });
        };
        GainsightService.prototype.triggerEvent = function (eventName, props) {
            if (this.tagFunction && eventName) {
                eventName = eventName.replace(/ /g, '_');
                this.tagFunction('track', eventName, props);
            }
        };
        /**
         * Checks if the Gainsight's tag should be loaded.
         * The decision to load Gainsight will depend on custom properties and functional cookies.
         * @param customProperties Tenant's customProperties.
         */
        GainsightService.prototype.shouldLoadGainsightTag = function (customProperties) {
            return (this.cookieBannerService.isConfigCookiePreferencesDefined() &&
                this.cookieBannerService.isFunctionalCookieEnabled() &&
                !this.isGainsightDisabled(customProperties) &&
                !this.isCustomBranding());
        };
        GainsightService.prototype.canEditProductExperienceSettings = function () {
            return __awaiter(this, void 0, void 0, function () {
                var currentTenant, customProperties, _a;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            currentTenant = this.appState.currentTenant.value;
                            customProperties = currentTenant.customProperties;
                            _a = !!this.gainsightKey;
                            if (_a) return [3 /*break*/, 2];
                            return [4 /*yield*/, this.getGainsightKey()];
                        case 1:
                            _a = ((_b.sent()) &&
                                this.cookieBannerService.isConfigCookiePreferencesDefined() &&
                                !this.isGainsightDisabled(customProperties) &&
                                !!this.cookieBannerService.getUserCookiePreferences());
                            _b.label = 2;
                        case 2: return [2 /*return*/, (_a)];
                    }
                });
            });
        };
        GainsightService.prototype.isGainsightDisabled = function (customProperties) {
            var gainsightEnabled = customProperties && customProperties.gainsightEnabled;
            return gainsightEnabled === false;
        };
        GainsightService.prototype.isCustomBranding = function () {
            var brandingCssVars = this.options.get('brandingCssVars') || {};
            return !!brandingCssVars['brand-logo-img'];
        };
        GainsightService.prototype.loadScriptTag = function (scriptTag, key) {
            try {
                var windowRef_1 = window;
                var firstTag = document.getElementsByTagName('script')[0];
                var protocol = location.protocol;
                var gainsightGlobalScope_1 = this.GAINSIGHT_GLOBAL_SCOPE;
                scriptTag.src = protocol + "//" + this.GAINSIGHT_URL + key;
                (windowRef_1[this.GAINSIGHT_GLOBAL_SCOPE] =
                    windowRef_1[this.GAINSIGHT_GLOBAL_SCOPE] ||
                        // tslint:disable-next-line:only-arrow-functions
                        function () {
                            (windowRef_1[gainsightGlobalScope_1].q = windowRef_1[gainsightGlobalScope_1].q || []).push(arguments);
                        }),
                    (windowRef_1[gainsightGlobalScope_1].p = key);
                scriptTag.async = true;
                firstTag.parentNode.insertBefore(scriptTag, firstTag);
            }
            catch (ex) {
                console.warn('Failed to load Gainsight PX', ex);
            }
        };
        GainsightService.prototype.getInstanceIdFromUrl = function () {
            var hostName = location.hostname;
            return hostName.substring(hostName.indexOf('.') + 1);
        };
GainsightService.ɵfac = function GainsightService_Factory(t) { return new (t || GainsightService)(ɵngcc0.ɵɵinject(AppStateService), ɵngcc0.ɵɵinject(OptionsService), ɵngcc0.ɵɵinject(CookieBannerService), ɵngcc0.ɵɵinject(UserPreferencesService)); };
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(GainsightService, [{
        type: i0.Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return [{ type: AppStateService }, { type: OptionsService }, { type: CookieBannerService }, { type: UserPreferencesService }]; }, null); })();
        return GainsightService;
    }());
    GainsightService.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function GainsightService_Factory() { return new GainsightService(i0__namespace.ɵɵinject(AppStateService), i0__namespace.ɵɵinject(OptionsService), i0__namespace.ɵɵinject(CookieBannerService), i0__namespace.ɵɵinject(UserPreferencesService)); }, token: GainsightService, providedIn: "root" });
    GainsightService.ctorParameters = function () { return [
        { type: AppStateService },
        { type: OptionsService },
        { type: CookieBannerService },
        { type: UserPreferencesService }
    ]; };

    var ProductExperienceDirective = /** @class */ (function () {
        function ProductExperienceDirective(gainsightService) {
            this.gainsightService = gainsightService;
        }
        ProductExperienceDirective.prototype.onClick = function () {
            if (this.actionName) {
                this.gainsightService.triggerEvent(this.actionName, this.actionData);
            }
        };
ProductExperienceDirective.ɵfac = function ProductExperienceDirective_Factory(t) { return new (t || ProductExperienceDirective)(ɵngcc0.ɵɵdirectiveInject(GainsightService)); };
ProductExperienceDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: ProductExperienceDirective, selectors: [["", "c8yProductExperience", ""]], hostBindings: function ProductExperienceDirective_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("click", function ProductExperienceDirective_click_HostBindingHandler() { return ctx.onClick(); });
    } }, inputs: { actionName: "actionName", actionData: "actionData" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ProductExperienceDirective, [{
        type: i0.Directive,
        args: [{
                selector: '[c8yProductExperience]'
            }]
    }], function () { return [{ type: GainsightService }]; }, { onClick: [{
            type: i0.HostListener,
            args: ['click']
        }], actionName: [{
            type: i0.Input
        }], actionData: [{
            type: i0.Input
        }] }); })();
        return ProductExperienceDirective;
    }());
    ProductExperienceDirective.ctorParameters = function () { return [
        { type: GainsightService }
    ]; };
    ProductExperienceDirective.propDecorators = {
        actionName: [{ type: i0.Input }],
        actionData: [{ type: i0.Input }],
        onClick: [{ type: i0.HostListener, args: ['click',] }]
    };

    /**
     * This module enables an tenant to activate the product experience
     * software [Gainsight](https://www.gainsight.com/product-experience/) to help
     * and track user actions. Gainsight is only activated, if the tenant custom
     * property `gainsightEnabled` is set to true.
     */
    var ProductExperienceModule = /** @class */ (function () {
        function ProductExperienceModule(appState, gainsightService, cookieBannerService) {
            var _this = this;
            this.appState = appState;
            this.gainsightService = gainsightService;
            this.cookieBannerService = cookieBannerService;
            rxjs.combineLatest([
                this.appState.currentTenant.pipe(operators.filter(Boolean)),
                this.cookieBannerService.isCookieBannerShowed$
            ]).subscribe(function (_a) {
                var _b = __read(_a, 2), currentTenant = _b[0], isCookieBannerShowed = _b[1];
                return __awaiter(_this, void 0, void 0, function () {
                    var customProperties, name, _a;
                    return __generator(this, function (_b) {
                        switch (_b.label) {
                            case 0:
                                if (isCookieBannerShowed) {
                                    return [2 /*return*/];
                                }
                                customProperties = currentTenant.customProperties, name = currentTenant.name;
                                _a = this.gainsightService.shouldLoadGainsightTag(customProperties);
                                if (!_a) return [3 /*break*/, 2];
                                return [4 /*yield*/, this.gainsightService.isGainsightDisabledInUserPreferences()];
                            case 1:
                                _a = !(_b.sent());
                                _b.label = 2;
                            case 2:
                                if (_a) {
                                    this.gainsightService.loadTag(currentTenant);
                                }
                                return [2 /*return*/];
                        }
                    });
                });
            });
        }
ProductExperienceModule.ɵfac = function ProductExperienceModule_Factory(t) { return new (t || ProductExperienceModule)(ɵngcc0.ɵɵinject(AppStateService), ɵngcc0.ɵɵinject(GainsightService), ɵngcc0.ɵɵinject(CookieBannerService)); };
ProductExperienceModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: ProductExperienceModule });
ProductExperienceModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [GainsightService] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ProductExperienceModule, [{
        type: i0.NgModule,
        args: [{
                declarations: [ProductExperienceDirective],
                exports: [ProductExperienceDirective],
                providers: [GainsightService]
            }]
    }], function () { return [{ type: AppStateService }, { type: GainsightService }, { type: CookieBannerService }]; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ProductExperienceModule, { declarations: [ProductExperienceDirective], exports: [ProductExperienceDirective] }); })();
        return ProductExperienceModule;
    }());
    ProductExperienceModule.ctorParameters = function () { return [
        { type: AppStateService },
        { type: GainsightService },
        { type: CookieBannerService }
    ]; };

    var SearchOutletComponent = /** @class */ (function () {
        function SearchOutletComponent(alertService) {
            this.alertService = alertService;
            this.search = [];
        }
        SearchOutletComponent.prototype.getByPriority = function () {
            return lodash.sortBy(this.search, this.byPriority);
        };
        SearchOutletComponent.prototype.byPriority = function (item) {
            return -item.priority;
        };
SearchOutletComponent.ɵfac = function SearchOutletComponent_Factory(t) { return new (t || SearchOutletComponent)(ɵngcc0.ɵɵdirectiveInject(AlertService)); };
SearchOutletComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: SearchOutletComponent, selectors: [["c8y-search-outlet"]], inputs: { search: "search" }, decls: 1, vars: 1, consts: [[4, "ngFor", "ngForOf"], [4, "c8yOutlet"]], template: function SearchOutletComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, SearchOutletComponent_ng_container_0_Template, 2, 1, "ng-container", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngForOf", ctx.getByPriority());
    } }, directives: [ɵngcc6.NgForOf, OutletDirective], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SearchOutletComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-search-outlet',
                template: "<ng-container *ngFor=\"let item of getByPriority()\">\n  <ng-container *c8yOutlet=\"item.template\"></ng-container>\n</ng-container>\n"
            }]
    }], function () { return [{ type: AlertService }]; }, { search: [{
            type: i0.Input
        }] }); })();
        return SearchOutletComponent;
    }());
    SearchOutletComponent.ctorParameters = function () { return [
        { type: AlertService }
    ]; };
    SearchOutletComponent.propDecorators = {
        search: [{ type: i0.Input }]
    };

    var SearchComponent = /** @class */ (function () {
        function SearchComponent(searchService) {
            this.searchService = searchService;
            this.icon = 'search';
            this.priority = 0;
            this.search = new i0.EventEmitter();
            this.term = '';
        }
        SearchComponent.prototype.onSearch = function () {
            this.search.emit(this);
        };
        SearchComponent.prototype.ngAfterViewInit = function () {
            var _this = this;
            this.template = undefined;
            this.viewInitTimeout = setTimeout(function () { return _this.searchService.add(_this); });
        };
        SearchComponent.prototype.ngOnDestroy = function () {
            clearTimeout(this.viewInitTimeout);
            this.searchService.remove(this);
        };
SearchComponent.ɵfac = function SearchComponent_Factory(t) { return new (t || SearchComponent)(ɵngcc0.ɵɵdirectiveInject(SearchService)); };
SearchComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: SearchComponent, selectors: [["c8y-search"]], viewQuery: function SearchComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c0, 5);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.template = _t.first);
    } }, inputs: { icon: "icon", priority: "priority", term: "term", name: "name" }, outputs: { search: "search" }, ngContentSelectors: _c1, decls: 2, vars: 0, consts: [["template", ""]], template: function SearchComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵtemplate(0, SearchComponent_ng_template_0_Template, 1, 0, "ng-template", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);
    } }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SearchComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-search',
                template: "<ng-template #template>\n  <ng-content></ng-content>\n</ng-template>"
            }]
    }], function () { return [{ type: SearchService }]; }, { icon: [{
            type: i0.Input
        }], priority: [{
            type: i0.Input
        }], search: [{
            type: i0.Output
        }], term: [{
            type: i0.Input
        }], template: [{
            type: i0.ViewChild,
            args: ['template', { static: false }]
        }], name: [{
            type: i0.Input
        }] }); })();
        return SearchComponent;
    }());
    SearchComponent.ctorParameters = function () { return [
        { type: SearchService }
    ]; };
    SearchComponent.propDecorators = {
        name: [{ type: i0.Input }],
        icon: [{ type: i0.Input }],
        priority: [{ type: i0.Input }],
        template: [{ type: i0.ViewChild, args: ['template', { static: false },] }],
        search: [{ type: i0.Output }],
        term: [{ type: i0.Input }]
    };

    var HighlightComponent = /** @class */ (function () {
        function HighlightComponent() {
            this.pattern = '';
            this.text = '';
            this.elementClass = 'text-info';
            this.highlightedText = '';
        }
        HighlightComponent.prototype.ngOnChanges = function () {
            var textNoHtml = lodashEs.escape(this.text || '');
            var patternNoHtml = lodashEs.escape(this.pattern || '');
            var patternForRegex = lodashEs.escapeRegExp(patternNoHtml).replace(/\\\*/g, '.*');
            this.highlightedText = textNoHtml.replace(new RegExp(patternForRegex, 'i'), "<strong class=\"" + this.elementClass + "\">$&</strong>");
        };
HighlightComponent.ɵfac = function HighlightComponent_Factory(t) { return new (t || HighlightComponent)(); };
HighlightComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: HighlightComponent, selectors: [["c8y-highlight"]], viewQuery: function HighlightComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c8, 7, i0.ElementRef);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.container = _t.first);
    } }, inputs: { pattern: "pattern", text: "text", elementClass: "elementClass" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 1, vars: 1, consts: [[3, "innerHTML"]], template: function HighlightComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelement(0, "span", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("innerHTML", ctx.highlightedText, ɵngcc0.ɵɵsanitizeHtml);
    } }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HighlightComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-highlight',
                template: '<span [innerHTML]="highlightedText"></span>'
            }]
    }], function () { return []; }, { pattern: [{
            type: i0.Input
        }], text: [{
            type: i0.Input
        }], elementClass: [{
            type: i0.Input
        }], container: [{
            type: i0.ViewChild,
            args: ['text', { read: i0.ElementRef, static: true }]
        }] }); })();
        return HighlightComponent;
    }());
    HighlightComponent.propDecorators = {
        container: [{ type: i0.ViewChild, args: ['text', { read: i0.ElementRef, static: true },] }],
        pattern: [{ type: i0.Input }],
        text: [{ type: i0.Input }],
        elementClass: [{ type: i0.Input }]
    };

    var SearchResultEmptyComponent = /** @class */ (function () {
        function SearchResultEmptyComponent() {
            this.NO_RESULT_FOUND = gettext('No results found.');
            this.msg = this.NO_RESULT_FOUND;
        }
        Object.defineProperty(SearchResultEmptyComponent.prototype, "_message", {
            set: function (msg) {
                if (msg && msg.length > 0) {
                    this.msg = msg;
                }
                else {
                    this.msg = this.NO_RESULT_FOUND;
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SearchResultEmptyComponent.prototype, "message", {
            get: function () {
                return this.msg;
            },
            enumerable: false,
            configurable: true
        });
SearchResultEmptyComponent.ɵfac = function SearchResultEmptyComponent_Factory(t) { return new (t || SearchResultEmptyComponent)(); };
SearchResultEmptyComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: SearchResultEmptyComponent, selectors: [["c8y-search-result-empty"]], inputs: { _message: ["message", "_message"] }, decls: 10, vars: 3, consts: [[1, "no-results"], [1, "c8y-empty-state"], ["c8yIcon", "search"], [1, "p-t-8"], ["translate", ""]], template: function SearchResultEmptyComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵelement(2, "h1", 2);
        ɵngcc0.ɵɵelementStart(3, "div", 3);
        ɵngcc0.ɵɵelementStart(4, "p");
        ɵngcc0.ɵɵelementStart(5, "strong");
        ɵngcc0.ɵɵtext(6);
        ɵngcc0.ɵɵpipe(7, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(8, "small", 4);
        ɵngcc0.ɵɵtext(9, "Refine your search terms.");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(6);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(7, 1, ctx.message));
    } }, directives: [IconDirective, C8yTranslateDirective], pipes: [C8yTranslatePipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SearchResultEmptyComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-search-result-empty',
                template: "<div class=\"no-results\">\n  <div class=\"c8y-empty-state\">\n    <h1 c8yIcon=\"search\"></h1>\n    <div class=\"p-t-8\">\n      <p><strong>{{ message | translate }}</strong></p>\n      <small translate>Refine your search terms.</small>\n    </div>\n  </div>\n</div>\n"
            }]
    }], function () { return []; }, { _message: [{
            type: i0.Input,
            args: ['message']
        }] }); })();
        return SearchResultEmptyComponent;
    }());
    SearchResultEmptyComponent.propDecorators = {
        _message: [{ type: i0.Input, args: ['message',] }]
    };

    /**
     * The angular module definition for the search.
     * @exports SearchComponent
     * @exports SearchOutletComponent
     * @exports HighlightComponent A component to highlight search results.
     */
    var SearchModule = /** @class */ (function () {
        function SearchModule() {
        }
SearchModule.ɵfac = function SearchModule_Factory(t) { return new (t || SearchModule)(); };
SearchModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: SearchModule });
SearchModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[
            forms.FormsModule,
            dropdown.BsDropdownModule,
            CommonModule,
            i1.RouterModule.forChild([])
        ]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SearchModule, [{
        type: i0.NgModule,
        args: [{
                declarations: [
                    SearchOutletComponent,
                    SearchComponent,
                    HighlightComponent,
                    SearchResultEmptyComponent
                ],
                imports: [
                    forms.FormsModule,
                    dropdown.BsDropdownModule,
                    CommonModule,
                    i1.RouterModule.forChild([])
                ],
                exports: [
                    SearchOutletComponent,
                    SearchComponent,
                    HighlightComponent,
                    SearchResultEmptyComponent
                ]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SearchModule, { declarations: [SearchOutletComponent, SearchComponent, HighlightComponent, SearchResultEmptyComponent], imports: [ɵngcc13.FormsModule, ɵngcc9.BsDropdownModule, CommonModule, ɵngcc1.RouterModule], exports: [SearchOutletComponent, SearchComponent, HighlightComponent, SearchResultEmptyComponent] }); })();
        return SearchModule;
    }());

    var UserMenuService = /** @class */ (function (_super) {
        __extends(UserMenuService, _super);
        function UserMenuService() {
            var _this = _super.apply(this, __spreadArray([], __read(arguments))) || this;
            _this.state$ = new rxjs.BehaviorSubject({
                userMenuItems: new Set()
            });
            return _this;
        }
        Object.defineProperty(UserMenuService.prototype, "state", {
            /**
             * Returns the current state.
             * @readonly
             * @returns The current set of actions.
             */
            get: function () {
                return this.state$.value;
            },
            enumerable: false,
            configurable: true
        });
        /**
         * Adds a new item to the search in the header.
         * @param item The item to add.
         */
        UserMenuService.prototype.add = function (item) {
            this.state.userMenuItems.add(item);
            this.emitNewState();
        };
        /**
         * Removes an search from the header.
         * @param item The item to remove.
         */
        UserMenuService.prototype.remove = function (item) {
            this.state.userMenuItems.delete(item);
            this.emitNewState();
        };
UserMenuService.ɵfac = /*@__PURE__*/ function () { var ɵUserMenuService_BaseFactory; return function UserMenuService_Factory(t) { return (ɵUserMenuService_BaseFactory || (ɵUserMenuService_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(UserMenuService)))(t || UserMenuService); }; }();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(UserMenuService, [{
        type: i0.Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], null, null); })();
        return UserMenuService;
    }(StateService));
    UserMenuService.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function UserMenuService_Factory() { return new UserMenuService(); }, token: UserMenuService, providedIn: "root" });

    var UserMenuItemComponent = /** @class */ (function () {
        function UserMenuItemComponent(userService) {
            this.userService = userService;
            this.priority = 0;
            this.click = new i0.EventEmitter();
        }
        UserMenuItemComponent.prototype.ngAfterViewInit = function () {
            var _this = this;
            this.viewInitTimeout = setTimeout(function () { return _this.userService.add(_this); });
        };
        UserMenuItemComponent.prototype.ngOnDestroy = function () {
            clearTimeout(this.viewInitTimeout);
            this.userService.remove(this);
        };
        UserMenuItemComponent.prototype.onClick = function () {
            this.click.emit(this);
        };
UserMenuItemComponent.ɵfac = function UserMenuItemComponent_Factory(t) { return new (t || UserMenuItemComponent)(ɵngcc0.ɵɵdirectiveInject(UserMenuService)); };
UserMenuItemComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: UserMenuItemComponent, selectors: [["c8y-user-menu-item"]], viewQuery: function UserMenuItemComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c0, 5);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.template = _t.first);
    } }, inputs: { priority: "priority", icon: "icon", label: "label", link: "link", target: "target" }, outputs: { click: "click" }, ngContentSelectors: _c1, decls: 2, vars: 0, consts: [["template", ""], [3, "click"], [1, "interact"], [3, "c8yIcon"]], template: function UserMenuItemComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵtemplate(0, UserMenuItemComponent_ng_template_0_Template, 6, 6, "ng-template", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);
    } }, directives: [IconDirective], pipes: [C8yTranslatePipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(UserMenuItemComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-user-menu-item',
                template: "<ng-template #template>\n  <li (click)=\"onClick()\">\n    <a class=\"interact\" [attr.href]=\"link\" [attr.target]=\"target\">\n      <i [c8yIcon]=\"icon\"></i>\n      {{ label | translate }}\n      <ng-content></ng-content>\n    </a>\n  </li>\n</ng-template>\n"
            }]
    }], function () { return [{ type: UserMenuService }]; }, { priority: [{
            type: i0.Input
        }], click: [{
            type: i0.Output
        }], icon: [{
            type: i0.Input
        }], label: [{
            type: i0.Input
        }], link: [{
            type: i0.Input
        }], target: [{
            type: i0.Input
        }], template: [{
            type: i0.ViewChild,
            args: ['template', { static: false }]
        }] }); })();
        return UserMenuItemComponent;
    }());
    UserMenuItemComponent.ctorParameters = function () { return [
        { type: UserMenuService }
    ]; };
    UserMenuItemComponent.propDecorators = {
        icon: [{ type: i0.Input }],
        label: [{ type: i0.Input }],
        link: [{ type: i0.Input }],
        target: [{ type: i0.Input }],
        priority: [{ type: i0.Input }],
        template: [{ type: i0.ViewChild, args: ['template', { static: false },] }],
        click: [{ type: i0.Output }]
    };

    /**
     * Service to manage the login.
     */
    var LoginService = /** @class */ (function () {
        function LoginService(client, basicAuth, cookieAuth, ui, user, tenant, realtime, alert, api, tenantUiService, tenantLoginOptionsService, modalService, location) {
            this.client = client;
            this.basicAuth = basicAuth;
            this.cookieAuth = cookieAuth;
            this.ui = ui;
            this.user = user;
            this.tenant = tenant;
            this.realtime = realtime;
            this.alert = alert;
            this.api = api;
            this.tenantUiService = tenantUiService;
            this.tenantLoginOptionsService = tenantLoginOptionsService;
            this.modalService = modalService;
            this.location = location;
            this.rememberMe = false;
            this.TOKEN_KEY = '_tcy8';
            this.TFATOKEN_KEY = 'TFAToken';
            this.isFirstLogin = true;
            this.GREEN_MIN_LENGTH_DEFAULT = 8;
            // tslint:disable:max-line-length
            this.ERROR_MESSAGES = {
                minlength: gettext('Password must have at least 8 characters and no more than 32.'),
                password_missmatch: gettext('Password confirmation does not match.'),
                maxlength: gettext('Password must have at least 8 characters and no more than 32.'),
                password_strength: gettext('Your password is not strong enough. Please include numbers, lower and upper case characters'),
                remote_error: gettext('Server error occurred.'),
                email: gettext('Invalid email address.'),
                password_change: gettext('Your password is expired. Please set a new password.'),
                password_reset_token_expired: gettext('Password reset link expired. Please enter your email address to receive a new one.'),
                tfa_pin_invalid: gettext('The code you entered is invalid. Please try again.'),
                pattern_phonenumber: gettext('Invalid phone number format. Only digits, spaces, slashes ("/") and dashes ("-") allowed.'),
                pattern_newPassword: gettext('Password must have at least 8 characters and no more than 32 and can only contain letters, numbers and following symbols: `~!@#$%^&*()_|+-=?;:\'",.<>{}[]\\/'),
                international_number_required: gettext('International phone number required, in the format +49 9 876 543 210.'),
                phone_number_error: gettext('Could not update phone number.'),
                pinAlreadySent: gettext('The verification code was already sent. For a new verification code, please click on the link above.'),
                passwordConfirm: gettext('Password confirmation does not match.'),
                tfaExpired: gettext('Two-factor authentication token expired.')
            };
            // tslint:enable:max-line-length
            this.SUCCESS_MESSAGES = {
                password_changed: gettext('Password changed. You can now log in using new password.'),
                password_reset_requested: gettext('Password reset request has been sent. Please check your email.'),
                resend_sms: gettext('Verification code SMS resent.'),
                send_sms: gettext('Verification code SMS sent.')
            };
            this.passwordStrengthSetting = {
                enforcePasswordStrength: false,
                greenMinLength: this.GREEN_MIN_LENGTH_DEFAULT,
                passwordStrengthValidity: false
            };
            this.localhostRegExp = new RegExp('localhost');
            this.localhostIpRegExp = new RegExp('127.0.0.1');
            this.showTenantRegExp = new RegExp('showTenant');
            this.autoLogout();
            this.initLoginOptions();
        }
        /**
         * Returns the current tenant.
         * @return The tenant name.
         */
        LoginService.prototype.getTenant = function () {
            return this.client.tenant;
        };
        LoginService.prototype.initLoginOptions = function () {
            var loginOptions = this.ui.state.loginOptions || [];
            this.loginMode = this.tenantUiService.getPreferredLoginOption(loginOptions);
            this.oauthOptions = this.tenantUiService.getOauth2Option(loginOptions) || {};
        };
        LoginService.prototype.redirectToOauth = function () {
            var initRequest = this.oauthOptions.initRequest;
            var fullPath = (this.location ? this.location._platformLocation : window).location
                .href;
            var redirectUrl = encodeURIComponent(fullPath);
            var originUriParam = (initRequest.includes('?') ? '&' : '?') + "originUri=" + redirectUrl;
            window.location.href = "" + initRequest + originUriParam;
        };
        LoginService.prototype.autoLogout = function () {
            var _this = this;
            var errorPattern = /invalid\scredentials.*pin.*generate/i;
            var isTfaExpired = function (data) { return data && typeof data.message === 'string' && errorPattern.test(data.message); };
            this.ui.currentUser
                .pipe(operators.switchMap(function (u) { return u ? _this.api.hookResponse(function (_a) {
                var response = _a.response;
                return response.status === 401;
            }) : rxjs.EMPTY; }))
                .subscribe(function (apiCall) { return __awaiter(_this, void 0, void 0, function () {
                var response, willLogout, data;
                var _this = this;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            response = apiCall.response;
                            willLogout = false;
                            if (!isTfaExpired(response.data)) return [3 /*break*/, 1];
                            willLogout = true;
                            return [3 /*break*/, 3];
                        case 1:
                            if (!(typeof response.json === 'function')) return [3 /*break*/, 3];
                            return [4 /*yield*/, response.clone().json()];
                        case 2:
                            data = _a.sent();
                            if (isTfaExpired(data)) {
                                willLogout = true;
                            }
                            _a.label = 3;
                        case 3:
                            if (willLogout) {
                                this.logout(false);
                                setTimeout(function () { return _this.alert.danger(_this.ERROR_MESSAGES.tfaExpired); }, 500);
                            }
                            return [2 /*return*/];
                    }
                });
            }); });
        };
        /**
         * Gets the minimal number of characters that a password should have to be considered a “green” strong one.
         * @return The min length for password or default value.
         */
        LoginService.prototype.getGreenMinLength = function () {
            return __awaiter(this, void 0, void 0, function () {
                var greenMinLength;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.getBasicAuthLoginOption()];
                        case 1:
                            greenMinLength = ((_a.sent()) || { greenMinLength: null }).greenMinLength;
                            this.passwordStrengthSetting.greenMinLength = greenMinLength || this.GREEN_MIN_LENGTH_DEFAULT;
                            return [2 /*return*/, this.passwordStrengthSetting.greenMinLength];
                    }
                });
            });
        };
        /**
         * Checks if password strength is enforced for system
         * by retrieving value of `enforceStrength` property from loginOptions response
         * @param refresh boolean used to refresh the app state where result of loginOptions response is stored.
         * If false, it takes value from memory,
         * if true, it refresh the app state value and then retrives data.
         * @return boolean value, true if enforced, false otherwise.
         */
        LoginService.prototype.getEnforcePasswordStrength = function (refresh) {
            return __awaiter(this, void 0, void 0, function () {
                var _this = this;
                return __generator(this, function (_a) {
                    return [2 /*return*/, this.getBasicAuthLoginOption(refresh).then(function (loginOption) {
                            var enforcePasswordStrength = lodashEs.get(loginOption, 'enforceStrength');
                            if (lodashEs.isString(enforcePasswordStrength)) {
                                _this.passwordStrengthSetting.enforcePasswordStrength = enforcePasswordStrength === 'true' ? true : false;
                            }
                            else {
                                _this.passwordStrengthSetting.enforcePasswordStrength = !!enforcePasswordStrength;
                            }
                            return _this.passwordStrengthSetting.enforcePasswordStrength;
                        })];
                });
            });
        };
        /**
         * Checks if password strength is enforced for particular tenant
         * by retrieving value of `strengthValidity` property from loginOptions response
         * @param refresh boolean used to refresh the app state where result of loginOptions response is stored.
         * If false, it takes value from memory,
         * if true, it refresh the app state value and then retrives data.
         * @return boolean value, true if enforced, false otherwise.
         */
        LoginService.prototype.getPasswordStrengthValidity = function (refresh) {
            return __awaiter(this, void 0, void 0, function () {
                var _this = this;
                return __generator(this, function (_a) {
                    return [2 /*return*/, this.getBasicAuthLoginOption(refresh).then(function (loginOption) {
                            var strengthValidity = lodashEs.get(loginOption, 'strengthValidity');
                            if (lodashEs.isString(strengthValidity)) {
                                _this.passwordStrengthSetting.passwordStrengthValidity = strengthValidity === 'true' ? true : false;
                            }
                            else {
                                _this.passwordStrengthSetting.passwordStrengthValidity = !!strengthValidity;
                            }
                            return _this.passwordStrengthSetting.passwordStrengthValidity;
                        })];
                });
            });
        };
        /**
         * Function determines if enforced strength checks should be enabled for current tenant
         * based on properties retrieved from loginOptions
         * @param options object containing specific options:
         *    - {refresh: true} - refreshes values of app state and returns fresh values as result of call
         * @return boolean value, true if strength is enforced for tenant, false otherwise.
         */
        LoginService.prototype.getPasswordStrengthEnforced = function (options) {
            return __awaiter(this, void 0, void 0, function () {
                var refresh;
                return __generator(this, function (_a) {
                    refresh = options && options.refresh;
                    return [2 /*return*/, Promise.all([this.getEnforcePasswordStrength(refresh), this.getPasswordStrengthValidity(refresh)]).then(function (values) {
                            var _a = __read(values, 2), enforcePasswordStrength = _a[0], passwordStrengthValidity = _a[1];
                            return enforcePasswordStrength || passwordStrengthValidity;
                        })];
                });
            });
        };
        /**
         * Clears all backend errors.
         */
        LoginService.prototype.cleanMessages = function () {
            this.alert.clearAll();
        };
        /**
         * Adds a new success message
         * @param successKey The key of the success message as used in SUCCESS_MESSAGES
         */
        LoginService.prototype.addSuccessMessage = function (successKey) {
            var successMessage = this.SUCCESS_MESSAGES[successKey];
            if (successMessage) {
                this.alert.add({
                    text: successMessage,
                    type: 'success',
                    timeout: 0
                });
            }
        };
        /**
         * Returns the current strategy. Defaults to cookie, if a token
         * is found in local or session storage we switch to basic auth.
         * @returns The current auth strategy.
         */
        LoginService.prototype.getAuthStrategy = function () {
            var authStrategy = this.cookieAuth;
            var token = this.getStoredToken();
            var tfa = this.getStoredTfaToken();
            if (token) {
                authStrategy = this.basicAuth;
                this.setCredentials({ token: token, tfa: tfa }, this.basicAuth);
            }
            return authStrategy;
        };
        /**
         * Forces the use of basic auth as strategy with this credentials.
         * @param credentials The credentials to use.
         */
        LoginService.prototype.useBasicAuth = function (credentials) {
            this.setCredentials(credentials, this.basicAuth);
            return this.basicAuth;
        };
        /**
         * Tries to login a user with the given credentials.
         * If successful, the current tenant and user is set. If not an error
         * is thrown. It also verifies if the user is allowed to open the
         * current app.
         * @param auth The authentication strategy used.
         * @param credentials The credentials to try to login.
         */
        LoginService.prototype.login = function (auth, credentials) {
            if (auth === void 0) { auth = this.getAuthStrategy(); }
            return __awaiter(this, void 0, void 0, function () {
                var tenantRes, tenant, userRes, user, supportUserName, token;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            this.client.setAuth(auth);
                            return [4 /*yield*/, this.tenant.current()];
                        case 1:
                            tenantRes = _a.sent();
                            tenant = tenantRes.data;
                            if (credentials) {
                                credentials.tenant = tenant.name;
                            }
                            return [4 /*yield*/, this.setManagementLoginModeIfSupportUser(tenant.domainName, credentials)];
                        case 2:
                            _a.sent();
                            return [4 /*yield*/, this.switchLoginMode(credentials)];
                        case 3:
                            if (_a.sent()) {
                                auth = this.cookieAuth;
                            }
                            return [4 /*yield*/, this.user.current()];
                        case 4:
                            userRes = _a.sent();
                            user = userRes.data;
                            return [4 /*yield*/, this.verifyAppAccess()];
                        case 5:
                            _a.sent();
                            supportUserName = this.getSupportUserName(credentials);
                            token = this.setCredentials({
                                tenant: tenant.name,
                                user: (supportUserName ? supportUserName + "$" : '') + user.userName
                            }, auth);
                            if (token) {
                                this.storeBasicAuthToken(token);
                            }
                            return [4 /*yield*/, this.authFulfilled(tenant, user, supportUserName)];
                        case 6:
                            _a.sent();
                            return [2 /*return*/];
                    }
                });
            });
        };
        /**
         * Saves tenant, user and support user info to the app state.
         * @param tenant The current tenant object.
         * @param user The current user object.
         * @param supportUserName The current support user name.
         */
        LoginService.prototype.authFulfilled = function (tenant, user, supportUserName) {
            return __awaiter(this, void 0, void 0, function () {
                var data, data;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            if (!!tenant) return [3 /*break*/, 2];
                            return [4 /*yield*/, this.tenant.current()];
                        case 1:
                            data = (_a.sent()).data;
                            tenant = data;
                            this.client.tenant = tenant.name;
                            _a.label = 2;
                        case 2:
                            if (!!user) return [3 /*break*/, 4];
                            return [4 /*yield*/, this.user.current()];
                        case 3:
                            data = (_a.sent()).data;
                            user = data;
                            _a.label = 4;
                        case 4:
                            if (!supportUserName) {
                                supportUserName = null;
                            }
                            this.ui.setUser({ user: user, supportUserName: supportUserName });
                            this.ui.currentTenant.next(tenant);
                            return [2 /*return*/];
                    }
                });
            });
        };
        /**
         * Switch the login mode to CookieAuth if the
         * user has configured to use it in loginOptions.
         * @param credentials The credentials for that login
         */
        LoginService.prototype.switchLoginMode = function (credentials) {
            return __awaiter(this, void 0, void 0, function () {
                var isPasswordGrantLogin, res, data, ex_1;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            isPasswordGrantLogin = this.isPasswordGrantLogin(credentials);
                            if (!(isPasswordGrantLogin && credentials)) return [3 /*break*/, 6];
                            return [4 /*yield*/, this.generateOauthToken(credentials)];
                        case 1:
                            res = _a.sent();
                            if (!!res.ok) return [3 /*break*/, 5];
                            _a.label = 2;
                        case 2:
                            _a.trys.push([2, 4, , 5]);
                            return [4 /*yield*/, res.json()];
                        case 3:
                            data = _a.sent();
                            throw { res: res, data: data };
                        case 4:
                            ex_1 = _a.sent();
                            throw ex_1;
                        case 5:
                            this.client.setAuth(this.cookieAuth);
                            this.cleanLocalStorage();
                            this.basicAuth.logout();
                            _a.label = 6;
                        case 6: return [2 /*return*/, isPasswordGrantLogin];
                    }
                });
            });
        };
        LoginService.prototype.generateOauthToken = function (credentials) {
            return __awaiter(this, void 0, void 0, function () {
                var params;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            if (!(this.isPasswordGrantLogin(credentials) && credentials)) return [3 /*break*/, 2];
                            params = new URLSearchParams({
                                grant_type: 'PASSWORD',
                                username: credentials.user,
                                password: credentials.password,
                                tfa_code: credentials.tfa
                            });
                            return [4 /*yield*/, this.client.fetch(this.getUrlForOauth(credentials), {
                                    method: 'POST',
                                    body: params.toString(),
                                    headers: {
                                        'content-type': 'application/x-www-form-urlencoded;charset=UTF-8'
                                    }
                                })];
                        case 1: return [2 /*return*/, _a.sent()];
                        case 2: return [2 /*return*/];
                    }
                });
            });
        };
        LoginService.prototype.isPasswordGrantLogin = function (credentials) {
            return this.isSupportUser(credentials)
                ? this.tenantUiService.isOauthInternal(this.managementLoginMode)
                : this.tenantUiService.isOauthInternal(this.loginMode);
        };
        /**
         * Verifies if the provided credentials use a support user to log in or not.
         * @param credentials Credentials to check.
         * @returns {boolean} Returns true if user is a support user.
         */
        LoginService.prototype.isSupportUser = function (credentials) {
            return credentials && credentials.user.includes('$');
        };
        /**
         * Verifies if the tenant input field should be shown
         * or not.
         * @returns If true, show the tenant input.
         */
        LoginService.prototype.showTenant = function () {
            return !this.ui.state.loginOptions || this.isLocal() || this.isShowTenant();
        };
        /**
         * Verifies if the tenant setup should be shown
         * or not.
         * @returns If true, show the tenant input.
         */
        LoginService.prototype.showTenantSetup = function () {
            return !this.ui.state.loginOptions && !this.isLocal();
        };
        /**
         * Logs the user out
         * @param reload If set to false, the page will not reload
         */
        LoginService.prototype.logout = function (reload) {
            if (reload === void 0) { reload = true; }
            return __awaiter(this, void 0, void 0, function () {
                var resData, _a, basicRes, cookieRes, ex_2;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            resData = null;
                            _b.label = 1;
                        case 1:
                            _b.trys.push([1, 4, 5, 6]);
                            return [4 /*yield*/, this.reset()];
                        case 2:
                            _a = __read.apply(void 0, [_b.sent(), 2]), basicRes = _a[0], cookieRes = _a[1];
                            return [4 /*yield*/, cookieRes.json()];
                        case 3:
                            resData = _b.sent();
                            return [3 /*break*/, 6];
                        case 4:
                            ex_2 = _b.sent();
                            this.alert.removeLastDanger();
                            return [3 /*break*/, 6];
                        case 5:
                            if (resData && resData.url) {
                                this.redirect(resData.url);
                            }
                            else if (reload) {
                                this.location.replaceState({}, '', '', '');
                                window.location.reload();
                            }
                            return [7 /*endfinally*/];
                        case 6: return [2 /*return*/];
                    }
                });
            });
        };
        /**
         * Resets the stored auth-data
         */
        LoginService.prototype.reset = function () {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    this.cleanLocalStorage();
                    this.cleanSessionStorage();
                    this.realtime.disconnect();
                    this.ui.currentUser.next(null);
                    return [2 /*return*/, Promise.all([this.basicAuth.logout(), this.cookieAuth.logout()])];
                });
            });
        };
        /**
         * Saves the TFA token to local or session storage.
         * @param tfaToken The tfa token to save.
         * @param storage The storage to use (local or session).
         */
        LoginService.prototype.saveTFAToken = function (tfaToken, storage) {
            storage.setItem(this.TFATOKEN_KEY, tfaToken);
        };
        /**
         * Request the manifest -> on 401 user has no access to that application
         * and we throw the error up to the login form.
         */
        LoginService.prototype.verifyAppAccess = function () {
            return __awaiter(this, void 0, void 0, function () {
                var ex_3;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            _a.trys.push([0, 2, , 3]);
                            return [4 /*yield*/, this.ui.loadManifest()];
                        case 1:
                            _a.sent();
                            return [3 /*break*/, 3];
                        case 2:
                            ex_3 = _a.sent();
                            if (!(ex_3.res && ex_3.res.status === 404 && this.isLocal())) {
                                throw ex_3;
                            }
                            return [3 /*break*/, 3];
                        case 3: return [2 /*return*/];
                    }
                });
            });
        };
        LoginService.prototype.redirectToDomain = function (domain) {
            var originUrl = new URL(window.location.href);
            var redirectUrl = originUrl.href.replace(originUrl.hostname, domain);
            window.location.href = redirectUrl;
        };
        /**
         * Sets the tenant to the client and updates the credentials on the
         * auth strategy.
         * @param credentials The name of the tenant.
         * @param authStrategy The authentication strategy used.
         * @return Returns the token if basic auth, otherwise undefined.
         */
        LoginService.prototype.setCredentials = function (credentials, authStrategy) {
            if (credentials.tenant) {
                this.client.tenant = credentials.tenant;
            }
            // Check if a token is already set (case for support user login)
            // if yes -> we just need to update the user, and reuse the token
            // of the support user.
            // Therefore we need to pass user and tenant, to get
            // just the stored token and nothing else (see BasicAuth.ts:31).
            var token = this.basicAuth.updateCredentials({
                tenant: credentials.tenant,
                user: credentials.user
            });
            var newCredentials = Object.assign({ token: token }, credentials);
            return authStrategy.updateCredentials(newCredentials);
        };
        /**
         * Verifies if the current user is a developer or not.
         * Running on localhost means development mode.
         */
        LoginService.prototype.isLocal = function () {
            var hostname = window.location.hostname;
            return this.localhostIpRegExp.test(hostname) || this.localhostRegExp.test(hostname);
        };
        /**
         * Save the token to local or session storage.
         * @param token The token to save.
         * @param storage The storage to use (local or session).
         */
        LoginService.prototype.saveToken = function (token, storage) {
            storage.setItem(this.TOKEN_KEY, token);
        };
        LoginService.prototype.storeBasicAuthToken = function (token) {
            this.saveToken(token, sessionStorage);
            if (this.rememberMe) {
                this.saveToken(token, localStorage);
            }
        };
        LoginService.prototype.cleanLocalStorage = function () {
            localStorage.removeItem(this.TOKEN_KEY);
            localStorage.removeItem(this.TFATOKEN_KEY);
        };
        LoginService.prototype.cleanSessionStorage = function () {
            sessionStorage.removeItem(this.TOKEN_KEY);
            sessionStorage.removeItem(this.TFATOKEN_KEY);
        };
        LoginService.prototype.isShowTenant = function () {
            return this.showTenantRegExp.test(window.location.href);
        };
        LoginService.prototype.redirect = function (url) {
            window.location.href = url;
        };
        LoginService.prototype.getBasicAuthLoginOption = function (refresh) {
            return __awaiter(this, void 0, void 0, function () {
                var loginOptions, basicAuthLoginOption;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            if (!refresh) return [3 /*break*/, 2];
                            return [4 /*yield*/, this.ui.refreshLoginOptions()];
                        case 1:
                            _a.sent();
                            _a.label = 2;
                        case 2:
                            loginOptions = this.ui.state.loginOptions || [];
                            basicAuthLoginOption = loginOptions.find(function (_a) {
                                var type = _a.type;
                                return type === 'BASIC';
                            });
                            return [2 /*return*/, Promise.resolve(basicAuthLoginOption)];
                    }
                });
            });
        };
        /**
         * Gets support user name from credentials.
         * @param credentials Credentials object (defaults to the stored one).
         * @returns Support user name.
         */
        LoginService.prototype.getSupportUserName = function (credentials) {
            if (credentials === void 0) { credentials = this.getStoredCredentials(); }
            if (!credentials) {
                return null;
            }
            var supportUserName = credentials.user.match(/^(.+\/)?((.+)\$)?(.+)?$/)[3];
            return supportUserName;
        };
        /**
         * Gets credentials object from the stored token.
         * @returns Credentials object.
         */
        LoginService.prototype.getStoredCredentials = function () {
            var token = this.getStoredToken();
            if (!token) {
                return null;
            }
            return this.decodeToken(token);
        };
        /**
         * Gets stored token from local storage or session storage.
         * @returns Stored token.
         */
        LoginService.prototype.getStoredToken = function () {
            return localStorage.getItem(this.TOKEN_KEY) || sessionStorage.getItem(this.TOKEN_KEY);
        };
        /**
         * Gets stored TFA token from local storage or session storage.
         * @returns Stored TFA token.
         */
        LoginService.prototype.getStoredTfaToken = function () {
            return localStorage.getItem(this.TFATOKEN_KEY) || sessionStorage.getItem(this.TFATOKEN_KEY);
        };
        /**
         * Decodes token to credentials object.
         * @param token Token to decode.
         * @returns Credentials object.
         */
        LoginService.prototype.decodeToken = function (token) {
            var decoded = decodeURIComponent(escape(window.atob(token)));
            var split = decoded.match(/(([^/]*)\/)?([^/:]+):(.+)/);
            return {
                tenant: split[2],
                user: split[3],
                password: split[4]
            };
        };
        LoginService.prototype.getUrlForOauth = function (credentials) {
            if (lodashEs.isEmpty(credentials.tenant) && this.loginMode.initRequest) {
                var urlParams = new URLSearchParams(this.loginMode.initRequest.split('?').pop());
                credentials.tenant = urlParams.get('tenant_id');
            }
            return !lodashEs.isEmpty(credentials.tenant) ? "tenant/oauth?tenant_id=" + credentials.tenant : "tenant/oauth";
        };
        LoginService.prototype.setManagementLoginModeIfSupportUser = function (targetTenantDomain, credentials) {
            return __awaiter(this, void 0, void 0, function () {
                var managementLoginOptions, title, body;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            if (!this.isSupportUser(credentials)) {
                                return [2 /*return*/];
                            }
                            return [4 /*yield*/, this.tenantLoginOptionsService.listForManagement()];
                        case 1:
                            managementLoginOptions = (_a.sent()).data;
                            this.managementLoginMode = this.tenantUiService.getPreferredLoginOption(managementLoginOptions);
                            if (!(this.isPasswordGrantLogin(credentials) &&
                                targetTenantDomain !== window.location.hostname &&
                                !this.isLocal())) return [3 /*break*/, 3];
                            title = gettext('Redirect required');
                            body = gettext('Redirect to correct domain is required to log in as support user.');
                            return [4 /*yield*/, this.modalService.acknowledge(title, body, exports.Status.INFO, gettext('Redirect'))];
                        case 2:
                            _a.sent();
                            this.redirectToDomain(targetTenantDomain);
                            _a.label = 3;
                        case 3: return [2 /*return*/];
                    }
                });
            });
        };
LoginService.ɵfac = function LoginService_Factory(t) { return new (t || LoginService)(ɵngcc0.ɵɵinject(ɵngcc3.FetchClient), ɵngcc0.ɵɵinject(ɵngcc3.BasicAuth), ɵngcc0.ɵɵinject(ɵngcc3.CookieAuth), ɵngcc0.ɵɵinject(AppStateService), ɵngcc0.ɵɵinject(ɵngcc3.UserService), ɵngcc0.ɵɵinject(ɵngcc3.TenantService), ɵngcc0.ɵɵinject(ɵngcc3.Realtime), ɵngcc0.ɵɵinject(AlertService), ɵngcc0.ɵɵinject(ɵngcc2.ApiService), ɵngcc0.ɵɵinject(TenantUiService), ɵngcc0.ɵɵinject(ɵngcc3.TenantLoginOptionsService), ɵngcc0.ɵɵinject(ModalService), ɵngcc0.ɵɵinject(ɵngcc6.LocationStrategy, 8)); };
LoginService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: LoginService, factory: function (t) { return LoginService.ɵfac(t); } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LoginService, [{
        type: i0.Injectable
    }], function () { return [{ type: ɵngcc3.FetchClient }, { type: ɵngcc3.BasicAuth }, { type: ɵngcc3.CookieAuth }, { type: AppStateService }, { type: ɵngcc3.UserService }, { type: ɵngcc3.TenantService }, { type: ɵngcc3.Realtime }, { type: AlertService }, { type: ɵngcc2.ApiService }, { type: TenantUiService }, { type: ɵngcc3.TenantLoginOptionsService }, { type: ModalService }, { type: ɵngcc6.LocationStrategy, decorators: [{
                type: i0.Optional
            }] }]; }, null); })();
        return LoginService;
    }());
    LoginService.ctorParameters = function () { return [
        { type: client.FetchClient },
        { type: client.BasicAuth },
        { type: client.CookieAuth },
        { type: AppStateService },
        { type: client.UserService },
        { type: client.TenantService },
        { type: client.Realtime },
        { type: AlertService },
        { type: i4.ApiService },
        { type: TenantUiService },
        { type: client.TenantLoginOptionsService },
        { type: ModalService },
        { type: common.LocationStrategy, decorators: [{ type: i0.Optional }] }
    ]; };

    var UserEditModalComponent = /** @class */ (function () {
        function UserEditModalComponent(modal, user, ui, auth, client, alert, translate, userPreferences, modalService, c8yModalService, gainsightService, cookieBannerService, loginService) {
            var _this = this;
            this.modal = modal;
            this.user = user;
            this.ui = ui;
            this.auth = auth;
            this.client = client;
            this.alert = alert;
            this.translate = translate;
            this.userPreferences = userPreferences;
            this.modalService = modalService;
            this.c8yModalService = c8yModalService;
            this.gainsightService = gainsightService;
            this.cookieBannerService = cookieBannerService;
            this.loginService = loginService;
            this.loading = false;
            this.showProductUsageSetting = false;
            this.lang = this.ui.state.lang;
            this.modalService.onHide.pipe(operators.take(1)).subscribe(function (reason) {
                if (reason !== null && _this.changedLang !== undefined) {
                    _this.translate.switchToLanguage(_this.lang);
                }
            });
        }
        UserEditModalComponent.prototype.ngOnInit = function () {
            return __awaiter(this, void 0, void 0, function () {
                var _a, _b;
                return __generator(this, function (_c) {
                    switch (_c.label) {
                        case 0:
                            this.updateUserInAppState();
                            _a = this;
                            return [4 /*yield*/, this.gainsightService.canEditProductExperienceSettings()];
                        case 1:
                            _a.showProductUsageSetting = _c.sent();
                            if (!this.showProductUsageSetting) return [3 /*break*/, 3];
                            _b = this;
                            return [4 /*yield*/, this.gainsightService.isGainsightDisabledInUserPreferences()];
                        case 2:
                            _b.currentUsageTrackingState = !(_c.sent()) &&
                                this.cookieBannerService.isFunctionalCookieEnabled();
                            _c.label = 3;
                        case 3: return [2 /*return*/];
                    }
                });
            });
        };
        UserEditModalComponent.prototype.onDismiss = function () {
            if (this.changedLang !== undefined) {
                this.translate.switchToLanguage(this.lang);
            }
            this.modal.hide();
        };
        UserEditModalComponent.prototype.onLanguage = function (lang) {
            this.changedLang = lang;
            this.translate.switchToLanguage(this.changedLang);
        };
        UserEditModalComponent.prototype.onProductExperience = function (option) {
            this.usageTrackingState = option;
        };
        UserEditModalComponent.prototype.updateAndClose = function (user) {
            return __awaiter(this, void 0, void 0, function () {
                var reloadRequired, logoutRequired, passwordChanged, usesOAuth2Internal, _a, e_1;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            this.loading = true;
                            reloadRequired = false;
                            logoutRequired = false;
                            _b.label = 1;
                        case 1:
                            _b.trys.push([1, 14, 15, 18]);
                            passwordChanged = Boolean(user.password);
                            usesOAuth2Internal = this.loginService.loginMode.type === client.TenantLoginOptionType.OAUTH2_INTERNAL;
                            if (!(passwordChanged && usesOAuth2Internal)) return [3 /*break*/, 3];
                            return [4 /*yield*/, this.c8yModalService.confirmLogout(gettext('You will be logged out to apply your new password. Do you want to proceed?'))];
                        case 2:
                            _b.sent();
                            logoutRequired = true;
                            _b.label = 3;
                        case 3:
                            if (!(this.changedLang && this.changedLang !== this.lang)) return [3 /*break*/, 5];
                            return [4 /*yield*/, this.persistLanguage(this.changedLang)];
                        case 4:
                            reloadRequired = _b.sent();
                            _b.label = 5;
                        case 5:
                            if (!(this.currentUsageTrackingState !== this.usageTrackingState)) return [3 /*break*/, 10];
                            return [4 /*yield*/, this.userPreferences.set(this.gainsightService.USER_PREFERENCES_KEY, this.usageTrackingState)];
                        case 6:
                            _b.sent();
                            this.gainsightService.setFunctionalCookie(this.usageTrackingState);
                            if (!this.usageTrackingState) return [3 /*break*/, 7];
                            _a = this.gainsightService.loadTag(this.client.tenant);
                            return [3 /*break*/, 9];
                        case 7: return [4 /*yield*/, this.gainsightTrackingAppReload()];
                        case 8:
                            _a = _b.sent();
                            _b.label = 9;
                        case 9:
                            _a;
                            _b.label = 10;
                        case 10:
                            if (!(user.customProperties.userOrigin !== 'OAUTH2')) return [3 /*break*/, 13];
                            return [4 /*yield*/, this.user.updateCurrent(user)];
                        case 11:
                            _b.sent();
                            if (!!logoutRequired) return [3 /*break*/, 13];
                            if (user.password) {
                                this.updateCredentials(user.password);
                            }
                            return [4 /*yield*/, this.updateUserInAppState()];
                        case 12:
                            _b.sent();
                            _b.label = 13;
                        case 13:
                            this.modal.hide();
                            this.alert.success(gettext('User saved.'));
                            return [3 /*break*/, 18];
                        case 14:
                            e_1 = _b.sent();
                            if (e_1) {
                                this.alert.addServerFailure(e_1);
                            }
                            return [3 /*break*/, 18];
                        case 15:
                            this.loading = false;
                            if (reloadRequired) {
                                location.reload();
                            }
                            if (!logoutRequired) return [3 /*break*/, 17];
                            return [4 /*yield*/, this.loginService.logout(true)];
                        case 16:
                            _b.sent();
                            _b.label = 17;
                        case 17: return [7 /*endfinally*/];
                        case 18: return [2 /*return*/];
                    }
                });
            });
        };
        UserEditModalComponent.prototype.persistLanguage = function (lang) {
            return __awaiter(this, void 0, void 0, function () {
                var shouldReload, ex_1;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            _a.trys.push([0, 3, , 5]);
                            return [4 /*yield*/, this.c8yModalService.confirm(gettext('Reload recommended'), gettext('To change the language in the entire application, we recommend you to reload the page. If you have any unsaved changes, you can reload later. How would you like to proceed?'), exports.Status.WARNING, {
                                    ok: gettext('Reload now'),
                                    cancel: gettext('Reload later')
                                })];
                        case 1:
                            _a.sent();
                            this.translate.saveInLocalStorage(lang);
                            return [4 /*yield*/, this.userPreferences.set('language', lang)];
                        case 2:
                            _a.sent();
                            this.lang = lang;
                            shouldReload = true;
                            return [3 /*break*/, 5];
                        case 3:
                            ex_1 = _a.sent();
                            this.translate.saveInLocalStorage(lang);
                            return [4 /*yield*/, this.userPreferences.set('language', lang)];
                        case 4:
                            _a.sent();
                            this.lang = lang;
                            shouldReload = false;
                            return [3 /*break*/, 5];
                        case 5: return [2 /*return*/, shouldReload];
                    }
                });
            });
        };
        UserEditModalComponent.prototype.gainsightTrackingAppReload = function () {
            return __awaiter(this, void 0, void 0, function () {
                var ex_2;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            _a.trys.push([0, 2, , 3]);
                            return [4 /*yield*/, this.c8yModalService.confirm(gettext('Reload required'), gettext('To change the tracking option in the entire application, you need to reload the page. If you have any unsaved changes, you can reload later. How would you like to proceed?'), exports.Status.WARNING, {
                                    ok: gettext('Reload now'),
                                    cancel: gettext('Reload later')
                                })];
                        case 1:
                            _a.sent();
                            location.reload();
                            return [3 /*break*/, 3];
                        case 2:
                            ex_2 = _a.sent();
                            return [3 /*break*/, 3];
                        case 3: return [2 /*return*/];
                    }
                });
            });
        };
        UserEditModalComponent.prototype.updateUserInAppState = function () {
            return __awaiter(this, void 0, void 0, function () {
                var currentUserResult;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.user.current()];
                        case 1:
                            currentUserResult = _a.sent();
                            this.ui.currentUser.next(currentUserResult.data);
                            return [2 /*return*/];
                    }
                });
            });
        };
        UserEditModalComponent.prototype.updateCredentials = function (password) {
            var newCredentials = {
                password: password,
                user: this.ui.currentUser.value.id,
                tenant: this.client.tenant
            };
            this.auth.updateCredentials(newCredentials);
        };
UserEditModalComponent.ɵfac = function UserEditModalComponent_Factory(t) { return new (t || UserEditModalComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc12.BsModalRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.UserService), ɵngcc0.ɵɵdirectiveInject(AppStateService), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.BasicAuth), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.FetchClient), ɵngcc0.ɵɵdirectiveInject(AlertService), ɵngcc0.ɵɵdirectiveInject(TranslateService), ɵngcc0.ɵɵdirectiveInject(UserPreferencesService), ɵngcc0.ɵɵdirectiveInject(ɵngcc12.BsModalService), ɵngcc0.ɵɵdirectiveInject(ModalService), ɵngcc0.ɵɵdirectiveInject(GainsightService), ɵngcc0.ɵɵdirectiveInject(CookieBannerService), ɵngcc0.ɵɵdirectiveInject(LoginService)); };
UserEditModalComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: UserEditModalComponent, selectors: [["c8y-user-edit-modal"]], decls: 4, vars: 11, consts: [[3, "customFooter", "title", "onDismiss"], [3, "lang", "user", "loading", "isUsageTrackingEnabled", "showProductUsageSetting", "onLanguage", "onProductExperience", "onUser", "onCancel"]], template: function UserEditModalComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "c8y-modal", 0);
        ɵngcc0.ɵɵlistener("onDismiss", function UserEditModalComponent_Template_c8y_modal_onDismiss_0_listener() { return ctx.onDismiss(); });
        ɵngcc0.ɵɵpipe(1, "translate");
        ɵngcc0.ɵɵelementStart(2, "c8y-user-edit", 1);
        ɵngcc0.ɵɵlistener("onLanguage", function UserEditModalComponent_Template_c8y_user_edit_onLanguage_2_listener($event) { return ctx.onLanguage($event); })("onProductExperience", function UserEditModalComponent_Template_c8y_user_edit_onProductExperience_2_listener($event) { return ctx.onProductExperience($event); })("onUser", function UserEditModalComponent_Template_c8y_user_edit_onUser_2_listener($event) { return ctx.updateAndClose($event); })("onCancel", function UserEditModalComponent_Template_c8y_user_edit_onCancel_2_listener() { return ctx.onDismiss(); });
        ɵngcc0.ɵɵpipe(3, "async");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("customFooter", true)("title", ɵngcc0.ɵɵpipeBind1(1, 7, "Edit user"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("lang", ctx.lang)("user", ɵngcc0.ɵɵpipeBind1(3, 9, ctx.ui.currentUser))("loading", ctx.loading)("isUsageTrackingEnabled", ctx.currentUsageTrackingState)("showProductUsageSetting", ctx.showProductUsageSetting);
    } }, directives: function () { return [ModalComponent, UserEditComponent]; }, pipes: function () { return [C8yTranslatePipe, ɵngcc6.AsyncPipe]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(UserEditModalComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-user-edit-modal',
                template: "<c8y-modal [customFooter]=\"true\" [title]=\"'Edit user' | translate\" (onDismiss)=\"onDismiss()\">\n  <c8y-user-edit\n    [lang]=\"lang\"\n    [user]=\"ui.currentUser | async\"\n    [loading]=\"loading\"\n    [isUsageTrackingEnabled]=\"currentUsageTrackingState\"\n    [showProductUsageSetting]=\"showProductUsageSetting\"\n    (onLanguage)=\"onLanguage($event)\"\n    (onProductExperience)=\"onProductExperience($event)\"\n    (onUser)=\"updateAndClose($event)\"\n    (onCancel)=\"onDismiss()\"\n  >\n  </c8y-user-edit>\n</c8y-modal>\n"
            }]
    }], function () { return [{ type: ɵngcc12.BsModalRef }, { type: ɵngcc3.UserService }, { type: AppStateService }, { type: ɵngcc3.BasicAuth }, { type: ɵngcc3.FetchClient }, { type: AlertService }, { type: TranslateService }, { type: UserPreferencesService }, { type: ɵngcc12.BsModalService }, { type: ModalService }, { type: GainsightService }, { type: CookieBannerService }, { type: LoginService }]; }, null); })();
        return UserEditModalComponent;
    }());
    UserEditModalComponent.ctorParameters = function () { return [
        { type: i1$2.BsModalRef },
        { type: client.UserService },
        { type: AppStateService },
        { type: client.BasicAuth },
        { type: client.FetchClient },
        { type: AlertService },
        { type: TranslateService },
        { type: UserPreferencesService },
        { type: i1$2.BsModalService },
        { type: ModalService },
        { type: GainsightService },
        { type: CookieBannerService },
        { type: LoginService }
    ]; };

    var PasswordConfirmModalComponent = /** @class */ (function () {
        function PasswordConfirmModalComponent(user, ui, client, alert, loginService) {
            this.user = user;
            this.ui = ui;
            this.client = client;
            this.alert = alert;
            this.loginService = loginService;
            this.passwordConfirmedEmitter = new i0.EventEmitter();
            this.loading = false;
        }
        PasswordConfirmModalComponent.prototype.passwordConfirm = function () {
            return __awaiter(this, void 0, void 0, function () {
                var supportUserName, userId, credentials, strategy, newClient, e_1;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            if (!this.password) return [3 /*break*/, 5];
                            supportUserName = this.ui.currentSupportUserName.value;
                            userId = this.ui.currentUser.value.id;
                            credentials = {
                                password: this.password,
                                user: "" + (supportUserName ? supportUserName + "$" : '') + userId,
                                tenant: this.client.tenant
                            };
                            _a.label = 1;
                        case 1:
                            _a.trys.push([1, 3, 4, 5]);
                            this.loading = true;
                            strategy = lodashEs.clone(this.loginService.useBasicAuth({}));
                            delete credentials.tfa;
                            strategy.updateCredentials(credentials);
                            newClient = this.createNewClient(strategy, this.client.baseUrl);
                            return [4 /*yield*/, newClient.user.current()];
                        case 2:
                            _a.sent();
                            this.emitSuccessAndClose();
                            return [3 /*break*/, 5];
                        case 3:
                            e_1 = _a.sent();
                            if (e_1.res && e_1.res.status === 401 && e_1.data && /pin|totp/i.test(e_1.data.message)) {
                                this.emitSuccessAndClose();
                            }
                            else {
                                this.alert.danger(gettext("Provided password doesn't match your current one."));
                            }
                            return [3 /*break*/, 5];
                        case 4:
                            this.loading = false;
                            return [7 /*endfinally*/];
                        case 5: return [2 /*return*/];
                    }
                });
            });
        };
        PasswordConfirmModalComponent.prototype.cancel = function () {
            this.passwordConfirmedEmitter.emit(false);
            this.modal._dismiss();
        };
        PasswordConfirmModalComponent.prototype.createNewClient = function (strategy, baseUrl) {
            return new client.Client(strategy, baseUrl);
        };
        PasswordConfirmModalComponent.prototype.emitSuccessAndClose = function () {
            this.passwordConfirmedEmitter.emit(true);
            this.modal._dismiss();
        };
PasswordConfirmModalComponent.ɵfac = function PasswordConfirmModalComponent_Factory(t) { return new (t || PasswordConfirmModalComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc3.UserService), ɵngcc0.ɵɵdirectiveInject(AppStateService), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.FetchClient), ɵngcc0.ɵɵdirectiveInject(AlertService), ɵngcc0.ɵɵdirectiveInject(LoginService)); };
PasswordConfirmModalComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: PasswordConfirmModalComponent, selectors: [["c8y-password-confirm-modal"]], viewQuery: function PasswordConfirmModalComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c27, 5);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.modal = _t.first);
    } }, outputs: { passwordConfirmedEmitter: "passwordConfirmedEmitter" }, decls: 20, vars: 16, consts: [[3, "customFooter", "title"], ["modal", ""], [3, "ngSubmit"], ["confirmForm", "ngForm"], [3, "hasWarning"], ["translate", "", "for", "currentPassword"], ["id", "currentPassword", "type", "password", "name", "password", "required", "", 1, "form-control", 3, "ngModel", "placeholder", "ngModelChange"], ["translate", ""], [1, "modal-footer"], ["type", "button", "translate", "", 1, "btn", "btn-default", 3, "title", "click"], ["type", "submit", "translate", "", 1, "btn", "btn-primary", 3, "title", "disabled"]], template: function PasswordConfirmModalComponent_Template(rf, ctx) { if (rf & 1) {
        var _r2 = ɵngcc0.ɵɵgetCurrentView();
        ɵngcc0.ɵɵelementStart(0, "c8y-modal", 0, 1);
        ɵngcc0.ɵɵpipe(2, "translate");
        ɵngcc0.ɵɵelementStart(3, "form", 2, 3);
        ɵngcc0.ɵɵlistener("ngSubmit", function PasswordConfirmModalComponent_Template_form_ngSubmit_3_listener() { ɵngcc0.ɵɵrestoreView(_r2); var _r1 = ɵngcc0.ɵɵreference(4); return _r1.form.valid && ctx.passwordConfirm(); });
        ɵngcc0.ɵɵelementStart(5, "c8y-form-group", 4);
        ɵngcc0.ɵɵelementStart(6, "label", 5);
        ɵngcc0.ɵɵtext(7, "Enter your password");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(8, "input", 6);
        ɵngcc0.ɵɵlistener("ngModelChange", function PasswordConfirmModalComponent_Template_input_ngModelChange_8_listener($event) { return ctx.password = $event; });
        ɵngcc0.ɵɵpipe(9, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(10, "c8y-messages");
        ɵngcc0.ɵɵelementStart(11, "c8y-message", 7);
        ɵngcc0.ɵɵtext(12, " Enter the password of the user that you are currently logged in with. ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(13, "div", 8);
        ɵngcc0.ɵɵelementStart(14, "button", 9);
        ɵngcc0.ɵɵlistener("click", function PasswordConfirmModalComponent_Template_button_click_14_listener() { return ctx.cancel(); });
        ɵngcc0.ɵɵpipe(15, "translate");
        ɵngcc0.ɵɵtext(16, " Cancel ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(17, "button", 10);
        ɵngcc0.ɵɵpipe(18, "translate");
        ɵngcc0.ɵɵtext(19, " Confirm ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        var _r1 = ɵngcc0.ɵɵreference(4);
        ɵngcc0.ɵɵproperty("customFooter", true)("title", ɵngcc0.ɵɵpipeBind1(2, 8, "Confirm your current password"));
        ɵngcc0.ɵɵadvance(5);
        ɵngcc0.ɵɵproperty("hasWarning", true);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵpropertyInterpolate("placeholder", ɵngcc0.ɵɵpipeBind1(9, 10, "Enter your password"));
        ɵngcc0.ɵɵproperty("ngModel", ctx.password);
        ɵngcc0.ɵɵadvance(6);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(15, 12, "Cancel"));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(18, 14, "Confirm"));
        ɵngcc0.ɵɵproperty("disabled", !_r1.form.valid || ctx.loading);
    } }, directives: function () { return [ModalComponent, ɵngcc13.ɵNgNoValidate, ɵngcc13.NgControlStatusGroup, ɵngcc13.NgForm, FormGroupComponent, C8yTranslateDirective, RequiredInputPlaceholderDirective, ɵngcc13.DefaultValueAccessor, ɵngcc13.RequiredValidator, ɵngcc13.NgControlStatus, ɵngcc13.NgModel, MessagesComponent, MessageDirective]; }, pipes: function () { return [C8yTranslatePipe]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PasswordConfirmModalComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-password-confirm-modal',
                template: "<c8y-modal [customFooter]=\"true\" [title]=\"'Confirm your current password' | translate\" #modal>\r\n  <form #confirmForm=\"ngForm\" (ngSubmit)=\"confirmForm.form.valid && passwordConfirm()\">\r\n    <c8y-form-group [hasWarning]=\"true\">\r\n      <label translate for=\"currentPassword\">Enter your password</label>\r\n      <input\r\n        id=\"currentPassword\"\r\n        [(ngModel)]=\"password\"\r\n        type=\"password\"\r\n        name=\"password\"\r\n        class=\"form-control\"\r\n        placeholder=\"{{ 'Enter your password' | translate }}\"\r\n        required\r\n      />\r\n      <c8y-messages>\r\n        <c8y-message translate>\r\n          Enter the password of the user that you are currently logged in with.\r\n        </c8y-message>\r\n      </c8y-messages>\r\n    </c8y-form-group>\r\n\r\n    <div class=\"modal-footer\">\r\n      <button\r\n        title=\"{{ 'Cancel' | translate }}\"\r\n        class=\"btn btn-default\"\r\n        type=\"button\"\r\n        (click)=\"cancel()\"\r\n        translate\r\n      >\r\n        Cancel\r\n      </button>\r\n      <button\r\n        title=\"{{ 'Confirm' | translate }}\"\r\n        class=\"btn btn-primary\"\r\n        type=\"submit\"\r\n        [disabled]=\"!confirmForm.form.valid || loading\"\r\n        translate\r\n      >\r\n        Confirm\r\n      </button>\r\n    </div>\r\n  </form>\r\n</c8y-modal>\r\n"
            }]
    }], function () { return [{ type: ɵngcc3.UserService }, { type: AppStateService }, { type: ɵngcc3.FetchClient }, { type: AlertService }, { type: LoginService }]; }, { passwordConfirmedEmitter: [{
            type: i0.Output
        }], modal: [{
            type: i0.ViewChild,
            args: ['modal', { static: false }]
        }] }); })();
        return PasswordConfirmModalComponent;
    }());
    PasswordConfirmModalComponent.ctorParameters = function () { return [
        { type: client.UserService },
        { type: AppStateService },
        { type: client.FetchClient },
        { type: AlertService },
        { type: LoginService }
    ]; };
    PasswordConfirmModalComponent.propDecorators = {
        passwordConfirmedEmitter: [{ type: i0.Output }],
        modal: [{ type: i0.ViewChild, args: ['modal', { static: false },] }]
    };

    var PasswordService = /** @class */ (function () {
        function PasswordService(modalService) {
            this.modalService = modalService;
            this.DEFAULT_PASSWORD_MIN_LENGTH = 8;
            this.GREEN = {
                colorName: 'green',
                color: 'rgb(0, 128, 0)',
                description: gettext('strong'),
                passwordStrength: client.PasswordStrength.GREEN
            };
            this.YELLOW = {
                colorName: 'yellow',
                color: 'rgb(255, 204, 51)',
                description: gettext('medium'),
                passwordStrength: client.PasswordStrength.YELLOW
            };
            this.RED = {
                colorName: 'red',
                color: 'rgb(170, 0, 51)',
                description: gettext('weak'),
                passwordStrength: client.PasswordStrength.RED
            };
        }
        PasswordService.prototype.confirmPassword = function () {
            var modalInstance = this.modalService.show(PasswordConfirmModalComponent);
            var passwordConfirmedEmitter = modalInstance.content.passwordConfirmedEmitter;
            return passwordConfirmedEmitter.pipe(operators.take(1));
        };
        PasswordService.prototype.hasLowerCase = function (password) {
            return (password.search(/[a-z]/) !== -1);
        };
        PasswordService.prototype.hasUpperCase = function (password) {
            return (password.search(/[A-Z]/) !== -1);
        };
        PasswordService.prototype.hasNumbers = function (password) {
            return (password.search(/[0-9]/) !== -1);
        };
        PasswordService.prototype.hasSpecialChars = function (password) {
            return (password.search(/[^0-9a-zA-Z]+/) !== -1);
        };
        PasswordService.prototype.getStrengthColor = function (password) {
            var passwordStrength = lodashEs.filter([
                this.hasLowerCase(password),
                this.hasUpperCase(password),
                this.hasNumbers(password),
                this.hasSpecialChars(password)
            ]).length;
            if (passwordStrength > 3) {
                return this.GREEN;
            }
            else if (passwordStrength >= 3) {
                return this.YELLOW;
            }
            else {
                return this.RED;
            }
        };
        PasswordService.prototype.getDefaultPasswordMinLength = function () {
            return this.DEFAULT_PASSWORD_MIN_LENGTH;
        };
PasswordService.ɵfac = function PasswordService_Factory(t) { return new (t || PasswordService)(ɵngcc0.ɵɵinject(ɵngcc12.BsModalService)); };
PasswordService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: PasswordService, factory: function (t) { return PasswordService.ɵfac(t); } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PasswordService, [{
        type: i0.Injectable
    }], function () { return [{ type: ɵngcc12.BsModalService }]; }, null); })();
        return PasswordService;
    }());
    PasswordService.ctorParameters = function () { return [
        { type: i1$2.BsModalService }
    ]; };

    var UserTotpSetupComponent = /** @class */ (function () {
        function UserTotpSetupComponent(user, modalService, modal, loginService) {
            this.user = user;
            this.modalService = modalService;
            this.modal = modal;
            this.loginService = loginService;
        }
        UserTotpSetupComponent.prototype.totpSetupVerified = function (token) {
            return __awaiter(this, void 0, void 0, function () {
                var ex_1;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.user.activateTotp()];
                        case 1:
                            _a.sent();
                            this.modal.hide();
                            _a.label = 2;
                        case 2:
                            _a.trys.push([2, 5, , 6]);
                            return [4 /*yield*/, this.modalService.acknowledge(gettext('Logout required'), gettext('You must log out in order to apply your changes'), exports.Status.WARNING, gettext('Log out'))];
                        case 3:
                            _a.sent();
                            return [4 /*yield*/, this.loginService.logout()];
                        case 4:
                            _a.sent();
                            return [3 /*break*/, 6];
                        case 5:
                            ex_1 = _a.sent();
                            return [3 /*break*/, 6];
                        case 6: return [2 /*return*/];
                    }
                });
            });
        };
        UserTotpSetupComponent.prototype.close = function () {
            this.modal.hide();
        };
UserTotpSetupComponent.ɵfac = function UserTotpSetupComponent_Factory(t) { return new (t || UserTotpSetupComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc3.UserService), ɵngcc0.ɵɵdirectiveInject(ModalService), ɵngcc0.ɵɵdirectiveInject(ɵngcc12.BsModalRef), ɵngcc0.ɵɵdirectiveInject(LoginService)); };
UserTotpSetupComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: UserTotpSetupComponent, selectors: [["c8y-user-totp-setup"]], decls: 10, vars: 4, consts: [[3, "customFooter"], ["c8y-modal-title", ""], ["type", "button", 1, "close", 3, "title", "click"], ["aria-hidden", "true"], ["translate", "", 1, "text-center"], [3, "onSuccess"]], template: function UserTotpSetupComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "c8y-modal", 0);
        ɵngcc0.ɵɵelementContainerStart(1, 1);
        ɵngcc0.ɵɵelementStart(2, "button", 2);
        ɵngcc0.ɵɵlistener("click", function UserTotpSetupComponent_Template_button_click_2_listener() { return ctx.close(); });
        ɵngcc0.ɵɵpipe(3, "translate");
        ɵngcc0.ɵɵelementStart(4, "span", 3);
        ɵngcc0.ɵɵtext(5, "\u00D7");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(6, "h3", 4);
        ɵngcc0.ɵɵtext(7, "Set up two-factor authentication");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementContainerEnd();
        ɵngcc0.ɵɵelement(8, "c8y-totp-setup");
        ɵngcc0.ɵɵelementStart(9, "c8y-totp-challenge", 5);
        ɵngcc0.ɵɵlistener("onSuccess", function UserTotpSetupComponent_Template_c8y_totp_challenge_onSuccess_9_listener($event) { return ctx.totpSetupVerified($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("customFooter", true);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(3, 2, "Close"));
    } }, directives: function () { return [ModalComponent, C8yTranslateDirective, TotpSetupComponent, TotpChallengeComponent]; }, pipes: function () { return [C8yTranslatePipe]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(UserTotpSetupComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-user-totp-setup',
                template: "<c8y-modal [customFooter]=\"true\">\n  <ng-container c8y-modal-title>\n    <button\n      title=\"{{ 'Close' | translate }}\"\n      (click)=\"close()\"\n      type=\"button\"\n      class=\"close\"\n    ><span aria-hidden=\"true\">\u00D7</span></button>\n    <h3 class=\"text-center\" translate>Set up two-factor authentication</h3>\n  </ng-container>\n  <c8y-totp-setup></c8y-totp-setup>\n  <c8y-totp-challenge (onSuccess)=\"totpSetupVerified($event)\"></c8y-totp-challenge>\n</c8y-modal>\n"
            }]
    }], function () { return [{ type: ɵngcc3.UserService }, { type: ModalService }, { type: ɵngcc12.BsModalRef }, { type: LoginService }]; }, null); })();
        return UserTotpSetupComponent;
    }());
    UserTotpSetupComponent.ctorParameters = function () { return [
        { type: client.UserService },
        { type: ModalService },
        { type: i1$2.BsModalRef },
        { type: LoginService }
    ]; };

    var UserEditComponent = /** @class */ (function () {
        function UserEditComponent(state, translate, passwordService, modalConfirmService, bsModalService, alert, userService, tenantLoginOptionsService, tenantService, userPreferencesService) {
            this.state = state;
            this.translate = translate;
            this.passwordService = passwordService;
            this.modalConfirmService = modalConfirmService;
            this.bsModalService = bsModalService;
            this.alert = alert;
            this.userService = userService;
            this.tenantLoginOptionsService = tenantLoginOptionsService;
            this.tenantService = tenantService;
            this.userPreferencesService = userPreferencesService;
            this.loading = false;
            this.showProductUsageSetting = false;
            this.isUsageTrackingEnabled = true;
            this.onUser = new i0.EventEmitter();
            this.onLanguage = new i0.EventEmitter();
            this.onProductExperience = new i0.EventEmitter();
            this.onCancel = new i0.EventEmitter();
            this.userHasActiveTotp = false;
            this.userCanSetupTotp = false;
            this.isPhoneRequired = false;
        }
        Object.defineProperty(UserEditComponent.prototype, "user", {
            get: function () {
                return this._user;
            },
            set: function (u) {
                if (u) {
                    this._user = lodashEs.clone(u);
                    this.userIsExternal = u.customProperties.userOrigin === 'OAUTH2';
                    this.isPhoneRequired = this.isPhoneRequired && u.twoFactorAuthenticationEnabled;
                }
            },
            enumerable: false,
            configurable: true
        });
        UserEditComponent.prototype.ngOnInit = function () {
            return __awaiter(this, void 0, void 0, function () {
                var currentTenant, _a, enabledOnSystemLevel, enabledOnTenantLevel;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0: return [4 /*yield*/, this.tenantService.current()];
                        case 1:
                            currentTenant = (_b.sent()).data;
                            return [4 /*yield*/, this.tenantService.getTfaSettings(currentTenant)];
                        case 2:
                            _a = _b.sent(), enabledOnSystemLevel = _a.enabledOnSystemLevel, enabledOnTenantLevel = _a.enabledOnTenantLevel;
                            this.isTfaEnabled = enabledOnSystemLevel || enabledOnTenantLevel;
                            return [4 /*yield*/, this.initializeTotpSettings()];
                        case 3:
                            _b.sent();
                            if (this.user.twoFactorAuthenticationEnabled && !this.userCanSetupTotp) {
                                this.isPhoneRequired = true;
                            }
                            return [2 /*return*/];
                    }
                });
            });
        };
        Object.defineProperty(UserEditComponent.prototype, "langs", {
            get: function () {
                return this.state.state.langs;
            },
            enumerable: false,
            configurable: true
        });
        UserEditComponent.prototype.setupTotp = function () {
            this.bsModalService.show(UserTotpSetupComponent, { class: 'modal-sm' });
            this.cancel(); // to close the user edit modal and prevent console errors on logout
        };
        UserEditComponent.prototype.cancel = function () {
            this.onCancel.emit();
        };
        UserEditComponent.prototype.save = function () {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    if (this.loading) {
                        return [2 /*return*/];
                    }
                    if (this.showProductUsageSetting) {
                        this.onProductExperience.emit(this.isUsageTrackingEnabled);
                        this.userPreferencesService.set('gainsightEnabled', this.isUsageTrackingEnabled);
                    }
                    this._user.password ? this.saveAfterPasswordConfirmation() : this.onUser.emit(this._user);
                    return [2 /*return*/];
                });
            });
        };
        UserEditComponent.prototype.onNewPasswordChanged = function (newPassword) {
            this._user.password = newPassword.password;
        };
        UserEditComponent.prototype.initializeTotpSettings = function () {
            return __awaiter(this, void 0, void 0, function () {
                var _a, totpActivity, ex_1;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            _b.trys.push([0, 4, , 5]);
                            _a = this;
                            return [4 /*yield*/, this.canUserSetupTotp()];
                        case 1:
                            _a.userCanSetupTotp = _b.sent();
                            if (!this.userCanSetupTotp) return [3 /*break*/, 3];
                            return [4 /*yield*/, this.userService.getActivityTotp()];
                        case 2:
                            totpActivity = (_b.sent()).data;
                            this.userHasActiveTotp = totpActivity.isActive;
                            _b.label = 3;
                        case 3: return [3 /*break*/, 5];
                        case 4:
                            ex_1 = _b.sent();
                            this.alert.removeLastDanger();
                            return [3 /*break*/, 5];
                        case 5: return [2 /*return*/];
                    }
                });
            });
        };
        UserEditComponent.prototype.canUserSetupTotp = function () {
            return __awaiter(this, void 0, void 0, function () {
                var loginOptions;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.tenantLoginOptionsService.listForCurrentTenant()];
                        case 1:
                            loginOptions = (_a.sent()).data;
                            return [2 /*return*/, loginOptions.some(function (_a) {
                                    var _b = _a.tfaStrategy, tfaStrategy = _b === void 0 ? '' : _b;
                                    return tfaStrategy.toLowerCase() === 'totp';
                                })];
                    }
                });
            });
        };
        UserEditComponent.prototype.saveAfterPasswordConfirmation = function () {
            var _this = this;
            this.passwordService.confirmPassword().subscribe(function (confirmed) {
                if (confirmed) {
                    _this.onUser.emit(_this._user);
                }
            });
        };
UserEditComponent.ɵfac = function UserEditComponent_Factory(t) { return new (t || UserEditComponent)(ɵngcc0.ɵɵdirectiveInject(AppStateService), ɵngcc0.ɵɵdirectiveInject(TranslateService), ɵngcc0.ɵɵdirectiveInject(PasswordService), ɵngcc0.ɵɵdirectiveInject(ModalService), ɵngcc0.ɵɵdirectiveInject(ɵngcc12.BsModalService), ɵngcc0.ɵɵdirectiveInject(AlertService), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.UserService), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.TenantLoginOptionsService), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.TenantService), ɵngcc0.ɵɵdirectiveInject(UserPreferencesService)); };
UserEditComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: UserEditComponent, selectors: [["c8y-user-edit"]], inputs: { loading: "loading", showProductUsageSetting: "showProductUsageSetting", isUsageTrackingEnabled: "isUsageTrackingEnabled", user: "user", lang: "lang" }, outputs: { onUser: "onUser", onLanguage: "onLanguage", onProductExperience: "onProductExperience", onCancel: "onCancel" }, decls: 55, vars: 49, consts: [[3, "ngSubmit"], ["userForm", "ngForm"], ["class", "alert alert-warning", "role", "alert", "translate", "", 4, "ngIf"], ["translate", "", "for", "userName"], ["id", "userName", "name", "userName", "autocomplete", "off", "required", "", "maxlength", "254", "c8yDefaultValidation", "user", 1, "form-control", 3, "ngModel", "placeholder", "disabled", "ngModelChange"], ["translate", "", "for", "displayName"], ["id", "displayName", "name", "displayName", "autocomplete", "off", "maxlength", "254", "c8yDefaultValidation", "loginAlias", 1, "form-control", 3, "ngModel", "placeholder", "disabled", "ngModelChange"], [3, "hasWarning"], ["translate", "", "for", "userEmail"], ["id", "userEmail", "type", "email", "name", "email", "autocomplete", "off", "email", "", 1, "form-control", 3, "maxlength", "placeholder", "ngModel", "required", "disabled", "ngModelChange"], [1, "row", 2, "margin-left", "-15px", "margin-right", "-15px"], [1, "col-sm-6"], ["translate", "", "for", "userFirstName"], ["id", "userFirstName", "autocomplete", "off", "maxlength", "50", "name", "firstName", 1, "form-control", 3, "ngModel", "disabled", "ngModelChange"], ["translate", "", "for", "userLastName"], ["id", "userLastName", "autocomplete", "off", "maxlength", "50", "name", "lastName", 1, "form-control", 3, "ngModel", "disabled", "ngModelChange"], ["translate", "", "for", "userTelephone"], ["id", "userTelephone", "autocomplete", "off", "name", "phone", "maxlength", "254", "c8yPhoneValidation", "", "c8yDefaultValidation", "phoneNumber", 1, "form-control", 3, "ngModel", "placeholder", "required", "disabled", "ngModelChange"], ["translate", "", "for", "userLang"], [1, "c8y-select-wrapper"], ["id", "userLang", "name", "lang", 1, "form-control", 3, "ngModel", "ngModelChange", "change"], ["selectLang", ""], [3, "value", 4, "ngFor", "ngForOf"], ["class", "p-t-8 p-b-8 separator-top", 4, "ngIf"], ["class", "form-group", 4, "ngIf"], [4, "ngIf"], [1, "modal-footer"], ["type", "button", 1, "btn", "btn-default", 3, "title", "click"], ["type", "submit", 1, "btn", "btn-primary", 3, "title", "disabled"], ["role", "alert", "translate", "", 1, "alert", "alert-warning"], [3, "value"], [1, "p-t-8", "p-b-8", "separator-top"], ["translate", ""], ["for", "productUsageTracking", 1, "c8y-switch"], ["id", "productUsageTracking", "name", "productUsageTracking", "type", "checkbox", 3, "ngModel", "ngModelChange"], [1, "form-group"], [1, "control-label"], [3, "password"], ["class", "btn btn-default", "type", "button", 3, "title", "click", 4, "ngIf"], [1, "c8y-checkbox", 3, "title"], ["type", "checkbox", "name", "newsletter", 3, "ngModel", "disabled", "ngModelChange"]], template: function UserEditComponent_Template(rf, ctx) { if (rf & 1) {
        var _r17 = ɵngcc0.ɵɵgetCurrentView();
        ɵngcc0.ɵɵelementStart(0, "form", 0, 1);
        ɵngcc0.ɵɵlistener("ngSubmit", function UserEditComponent_Template_form_ngSubmit_0_listener() { ɵngcc0.ɵɵrestoreView(_r17); var _r0 = ɵngcc0.ɵɵreference(1); return _r0.form.valid && ctx.save(); });
        ɵngcc0.ɵɵtemplate(2, UserEditComponent_div_2_Template, 2, 0, "div", 2);
        ɵngcc0.ɵɵelementStart(3, "c8y-form-group");
        ɵngcc0.ɵɵelementStart(4, "label", 3);
        ɵngcc0.ɵɵtext(5, "Username (e.g. email)");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(6, "input", 4);
        ɵngcc0.ɵɵlistener("ngModelChange", function UserEditComponent_Template_input_ngModelChange_6_listener($event) { return ctx.user.userName = $event; });
        ɵngcc0.ɵɵpipe(7, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(8, "c8y-form-group");
        ɵngcc0.ɵɵelementStart(9, "label", 5);
        ɵngcc0.ɵɵtext(10, "Login alias");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(11, "input", 6);
        ɵngcc0.ɵɵlistener("ngModelChange", function UserEditComponent_Template_input_ngModelChange_11_listener($event) { return ctx.user.displayName = $event; });
        ɵngcc0.ɵɵpipe(12, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(13, "c8y-form-group", 7);
        ɵngcc0.ɵɵelementStart(14, "label", 8);
        ɵngcc0.ɵɵtext(15, "Email");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(16, "input", 9);
        ɵngcc0.ɵɵlistener("ngModelChange", function UserEditComponent_Template_input_ngModelChange_16_listener($event) { return ctx.user.email = $event; });
        ɵngcc0.ɵɵpipe(17, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(18, "div", 10);
        ɵngcc0.ɵɵelementStart(19, "div", 11);
        ɵngcc0.ɵɵelementStart(20, "c8y-form-group");
        ɵngcc0.ɵɵelementStart(21, "label", 12);
        ɵngcc0.ɵɵtext(22, "First name");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(23, "input", 13);
        ɵngcc0.ɵɵlistener("ngModelChange", function UserEditComponent_Template_input_ngModelChange_23_listener($event) { return ctx.user.firstName = $event; });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(24, "div", 11);
        ɵngcc0.ɵɵelementStart(25, "c8y-form-group");
        ɵngcc0.ɵɵelementStart(26, "label", 14);
        ɵngcc0.ɵɵtext(27, "Last name");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(28, "input", 15);
        ɵngcc0.ɵɵlistener("ngModelChange", function UserEditComponent_Template_input_ngModelChange_28_listener($event) { return ctx.user.lastName = $event; });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(29, "c8y-form-group");
        ɵngcc0.ɵɵelementStart(30, "label", 16);
        ɵngcc0.ɵɵtext(31, "Telephone");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(32, "input", 17);
        ɵngcc0.ɵɵlistener("ngModelChange", function UserEditComponent_Template_input_ngModelChange_32_listener($event) { return ctx.user.phone = $event; });
        ɵngcc0.ɵɵpipe(33, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(34, "c8y-form-group");
        ɵngcc0.ɵɵelementStart(35, "label", 18);
        ɵngcc0.ɵɵtext(36, "Language");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(37, "div", 19);
        ɵngcc0.ɵɵelementStart(38, "select", 20, 21);
        ɵngcc0.ɵɵlistener("ngModelChange", function UserEditComponent_Template_select_ngModelChange_38_listener($event) { return ctx.lang = $event; })("change", function UserEditComponent_Template_select_change_38_listener() { ɵngcc0.ɵɵrestoreView(_r17); var _r2 = ɵngcc0.ɵɵreference(39); return ctx.onLanguage.emit(_r2.value); });
        ɵngcc0.ɵɵtemplate(40, UserEditComponent_option_40_Template, 2, 2, "option", 22);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(41, "span");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(42, UserEditComponent_c8y_form_group_42_Template, 8, 4, "c8y-form-group", 23);
        ɵngcc0.ɵɵtemplate(43, UserEditComponent_div_43_Template, 6, 4, "div", 24);
        ɵngcc0.ɵɵtemplate(44, UserEditComponent_c8y_form_group_44_Template, 10, 8, "c8y-form-group", 25);
        ɵngcc0.ɵɵpipe(45, "async");
        ɵngcc0.ɵɵelementStart(46, "div", 26);
        ɵngcc0.ɵɵelementStart(47, "button", 27);
        ɵngcc0.ɵɵlistener("click", function UserEditComponent_Template_button_click_47_listener() { return ctx.cancel(); });
        ɵngcc0.ɵɵpipe(48, "translate");
        ɵngcc0.ɵɵtext(49);
        ɵngcc0.ɵɵpipe(50, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(51, "button", 28);
        ɵngcc0.ɵɵpipe(52, "translate");
        ɵngcc0.ɵɵtext(53);
        ɵngcc0.ɵɵpipe(54, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        var _r0 = ɵngcc0.ɵɵreference(1);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.userIsExternal);
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵpropertyInterpolate("placeholder", ɵngcc0.ɵɵpipeBind1(7, 31, "e.g. joe.doe@example.com`LOCALIZE`"));
        ɵngcc0.ɵɵproperty("ngModel", ctx.user.userName)("disabled", ctx.user.id);
        ɵngcc0.ɵɵadvance(5);
        ɵngcc0.ɵɵpropertyInterpolate("placeholder", ɵngcc0.ɵɵpipeBind1(12, 33, "e.g. joe.doe`LOCALIZE`"));
        ɵngcc0.ɵɵproperty("ngModel", ctx.user.displayName)("disabled", ctx.userIsExternal);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("hasWarning", !ctx.user.email);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵpropertyInterpolate("placeholder", ɵngcc0.ɵɵpipeBind1(17, 35, "e.g. joe.doe@example.com`LOCALIZE`"));
        ɵngcc0.ɵɵproperty("maxlength", 254)("ngModel", ctx.user.email)("required", true)("disabled", ctx.userIsExternal);
        ɵngcc0.ɵɵadvance(7);
        ɵngcc0.ɵɵproperty("ngModel", ctx.user.firstName)("disabled", ctx.userIsExternal);
        ɵngcc0.ɵɵadvance(5);
        ɵngcc0.ɵɵproperty("ngModel", ctx.user.lastName)("disabled", ctx.userIsExternal);
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵpropertyInterpolate("placeholder", ɵngcc0.ɵɵpipeBind1(33, 37, "e.g. +49 9 876 543 210`LOCALIZE`"));
        ɵngcc0.ɵɵproperty("ngModel", ctx.user.phone)("required", ctx.isPhoneRequired)("disabled", ctx.userIsExternal);
        ɵngcc0.ɵɵadvance(6);
        ɵngcc0.ɵɵproperty("ngModel", ctx.lang);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.langs);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showProductUsageSetting);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.userIsExternal);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !!ɵngcc0.ɵɵpipeBind1(45, 39, ctx.state.state$).newsletter);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(48, 41, "Cancel"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(50, 43, "Cancel"), " ");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(52, 45, "Save"));
        ɵngcc0.ɵɵproperty("disabled", !_r0.form.valid || _r0.form.pristine || ctx.loading);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(54, 47, "Save"), " ");
    } }, directives: function () { return [ɵngcc13.ɵNgNoValidate, ɵngcc13.NgControlStatusGroup, ɵngcc13.NgForm, ɵngcc6.NgIf, FormGroupComponent, C8yTranslateDirective, RequiredInputPlaceholderDirective, ɵngcc13.DefaultValueAccessor, ɵngcc13.RequiredValidator, ɵngcc13.MaxLengthValidator, DefaultValidationDirective, ɵngcc13.NgControlStatus, ɵngcc13.NgModel, ɵngcc13.EmailValidator, PhoneValidationDirective, ɵngcc13.SelectControlValueAccessor, ɵngcc6.NgForOf, ɵngcc13.NgSelectOption, ɵngcc13.ɵNgSelectMultipleOption, ɵngcc13.CheckboxControlValueAccessor, NewPasswordComponent]; }, pipes: function () { return [C8yTranslatePipe, ɵngcc6.AsyncPipe]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(UserEditComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-user-edit',
                template: "<form #userForm=\"ngForm\" (ngSubmit)=\"userForm.form.valid && save()\">\n  <div class=\"alert alert-warning\" role=\"alert\" *ngIf=\"userIsExternal\" translate>\n    Some of the user settings are not editable here because they are managed via your authorization\n    server.\n  </div>\n  <c8y-form-group>\n    <label translate for=\"userName\">Username (e.g. email)</label>\n    <input\n      id=\"userName\"\n      class=\"form-control\"\n      [(ngModel)]=\"user.userName\"\n      name=\"userName\"\n      autocomplete=\"off\"\n      required\n      maxlength=\"254\"\n      placeholder=\"{{ 'e.g. joe.doe@example.com`LOCALIZE`' | translate }}\"\n      [disabled]=\"user.id\"\n      c8yDefaultValidation=\"user\"\n    />\n  </c8y-form-group>\n\n  <c8y-form-group>\n    <label translate for=\"displayName\">Login alias</label>\n    <input\n      id=\"displayName\"\n      class=\"form-control\"\n      [(ngModel)]=\"user.displayName\"\n      name=\"displayName\"\n      autocomplete=\"off\"\n      maxlength=\"254\"\n      placeholder=\"{{ 'e.g. joe.doe`LOCALIZE`' | translate }}\"\n      [disabled]=\"userIsExternal\"\n      c8yDefaultValidation=\"loginAlias\"\n    />\n  </c8y-form-group>\n\n  <c8y-form-group [hasWarning]=\"!user.email\">\n    <label translate for=\"userEmail\">Email</label>\n    <input\n      id=\"userEmail\"\n      class=\"form-control\"\n      type=\"email\"\n      name=\"email\"\n      [maxlength]=\"254\"\n      autocomplete=\"off\"\n      placeholder=\"{{ 'e.g. joe.doe@example.com`LOCALIZE`' | translate }}\"\n      [(ngModel)]=\"user.email\"\n      email\n      [required]=\"true\"\n      [disabled]=\"userIsExternal\"\n    />\n  </c8y-form-group>\n\n  <div class=\"row\" style=\"margin-left:-15px; margin-right:-15px\">\n    <div class=\"col-sm-6\">\n      <c8y-form-group>\n        <label translate for=\"userFirstName\">First name</label>\n        <input\n          id=\"userFirstName\"\n          class=\"form-control\"\n          autocomplete=\"off\"\n          maxlength=\"50\"\n          name=\"firstName\"\n          [(ngModel)]=\"user.firstName\"\n          [disabled]=\"userIsExternal\"\n        />\n      </c8y-form-group>\n    </div>\n    <div class=\"col-sm-6\">\n      <c8y-form-group>\n        <label translate for=\"userLastName\">Last name</label>\n        <input\n          id=\"userLastName\"\n          class=\"form-control\"\n          autocomplete=\"off\"\n          maxlength=\"50\"\n          name=\"lastName\"\n          [(ngModel)]=\"user.lastName\"\n          [disabled]=\"userIsExternal\"\n        />\n      </c8y-form-group>\n    </div>\n  </div>\n\n  <c8y-form-group>\n    <label translate for=\"userTelephone\">Telephone</label>\n    <input\n      id=\"userTelephone\"\n      class=\"form-control\"\n      autocomplete=\"off\"\n      name=\"phone\"\n      maxlength=\"254\"\n      [(ngModel)]=\"user.phone\"\n      placeholder=\"{{ 'e.g. +49 9 876 543 210`LOCALIZE`' | translate }}\"\n      c8yPhoneValidation\n      c8yDefaultValidation=\"phoneNumber\"\n      [required]=\"isPhoneRequired\"\n      [disabled]=\"userIsExternal\"\n    />\n  </c8y-form-group>\n\n  <c8y-form-group>\n    <label translate for=\"userLang\">Language</label>\n    <div class=\"c8y-select-wrapper\">\n      <select\n        id=\"userLang\"\n        class=\"form-control\"\n        #selectLang\n        name=\"lang\"\n        [(ngModel)]=\"lang\"\n        (change)=\"onLanguage.emit(selectLang.value)\"\n      >\n        <option *ngFor=\"let lang of langs\" [value]=\"lang\">{{\n          translate.getNativeLanguage(lang)\n        }}</option>\n      </select>\n      <span></span>\n    </div>\n  </c8y-form-group>\n\n  <c8y-form-group class=\"p-t-8 p-b-8 separator-top\" *ngIf=\"showProductUsageSetting\">\n    <strong translate>Product experience</strong>\n    <label class=\"c8y-switch\" for=\"productUsageTracking\">\n      <input\n        id=\"productUsageTracking\"\n        name=\"productUsageTracking\"\n        type=\"checkbox\"\n        [(ngModel)]=\"isUsageTrackingEnabled\"\n      />\n      <span></span>\n      {{ 'Enable anonymous tracking to enhance the product experience' | translate }}\n    </label>\n  </c8y-form-group>\n\n  <div class=\"form-group\" *ngIf=\"!userIsExternal\">\n    <label class=\"control-label\">{{ 'Login options' | translate }}</label>\n    <c8y-new-password (password)=\"onNewPasswordChanged($event)\"></c8y-new-password>\n    <button\n      title=\"{{ 'Set up two-factor authentication' | translate }}\"\n      class=\"btn btn-default\"\n      type=\"button\"\n      (click)=\"setupTotp()\"\n      *ngIf=\"userCanSetupTotp && !userHasActiveTotp && isTfaEnabled\"\n    >\n      {{ 'Set up two-factor authentication' | translate }}\n    </button>\n  </div>\n\n  <c8y-form-group *ngIf=\"!!(state.state$ | async).newsletter\">\n    <label translate>Newsletter</label>\n    <label\n      title=\"{{ 'Send me information about outages, maintenance or updates.' | translate }}\"\n      class=\"c8y-checkbox\"\n    >\n      <input\n        type=\"checkbox\"\n        name=\"newsletter\"\n        [(ngModel)]=\"user.newsletter\"\n        [disabled]=\"userIsExternal\"\n      />\n      <span></span>\n      <span>\n        {{ 'Send me information about outages, maintenance or updates.' | translate }}\n      </span>\n    </label>\n  </c8y-form-group>\n\n  <div class=\"modal-footer\">\n    <button\n      title=\"{{ 'Cancel' | translate }}\"\n      class=\"btn btn-default\"\n      type=\"button\"\n      (click)=\"cancel()\"\n    >\n      {{ 'Cancel' | translate }}\n    </button>\n    <button\n      title=\"{{ 'Save' | translate }}\"\n      class=\"btn btn-primary\"\n      type=\"submit\"\n      [disabled]=\"!userForm.form.valid || userForm.form.pristine || loading\"\n    >\n      {{ 'Save' | translate }}\n    </button>\n  </div>\n</form>\n"
            }]
    }], function () { return [{ type: AppStateService }, { type: TranslateService }, { type: PasswordService }, { type: ModalService }, { type: ɵngcc12.BsModalService }, { type: AlertService }, { type: ɵngcc3.UserService }, { type: ɵngcc3.TenantLoginOptionsService }, { type: ɵngcc3.TenantService }, { type: UserPreferencesService }]; }, { loading: [{
            type: i0.Input
        }], showProductUsageSetting: [{
            type: i0.Input
        }], isUsageTrackingEnabled: [{
            type: i0.Input
        }], onUser: [{
            type: i0.Output
        }], onLanguage: [{
            type: i0.Output
        }], onProductExperience: [{
            type: i0.Output
        }], onCancel: [{
            type: i0.Output
        }], user: [{
            type: i0.Input
        }], lang: [{
            type: i0.Input
        }] }); })();
        return UserEditComponent;
    }());
    UserEditComponent.ctorParameters = function () { return [
        { type: AppStateService },
        { type: TranslateService },
        { type: PasswordService },
        { type: ModalService },
        { type: i1$2.BsModalService },
        { type: AlertService },
        { type: client.UserService },
        { type: client.TenantLoginOptionsService },
        { type: client.TenantService },
        { type: UserPreferencesService }
    ]; };
    UserEditComponent.propDecorators = {
        lang: [{ type: i0.Input }],
        loading: [{ type: i0.Input }],
        user: [{ type: i0.Input }],
        showProductUsageSetting: [{ type: i0.Input }],
        isUsageTrackingEnabled: [{ type: i0.Input }],
        onUser: [{ type: i0.Output }],
        onLanguage: [{ type: i0.Output }],
        onProductExperience: [{ type: i0.Output }],
        onCancel: [{ type: i0.Output }]
    };

    var UserMenuOutletComponent = /** @class */ (function () {
        function UserMenuOutletComponent(ui, bsModalService, modalService, loginService, translateService, tenantService, alertService, user, optionsService) {
            this.ui = ui;
            this.bsModalService = bsModalService;
            this.modalService = modalService;
            this.loginService = loginService;
            this.translateService = translateService;
            this.tenantService = tenantService;
            this.alertService = alertService;
            this.user = user;
            this.optionsService = optionsService;
        }
        UserMenuOutletComponent.prototype.copyIt = function (text) {
            var handler = {
                handleEvent: function (e) {
                    e.clipboardData.setData('text/plain', text);
                    e.preventDefault();
                }
            };
            document.addEventListener('copy', handler);
            var copied;
            try {
                copied = document.execCommand('copy');
            }
            catch (e) {
                copied = false;
            }
            if (copied) {
                this.alertService.addByText('success', gettext('Copied to clipboard.'));
            }
            else {
                this.alertService.addByText('danger', gettext('Could not copy to clipboard.'));
            }
            document.removeEventListener('copy', handler);
        };
        UserMenuOutletComponent.prototype.editUser = function () {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    this.bsModalService.show(UserEditModalComponent);
                    return [2 /*return*/];
                });
            });
        };
        UserMenuOutletComponent.prototype.logout = function () {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.loginService.logout()];
                        case 1:
                            _a.sent();
                            return [2 /*return*/];
                    }
                });
            });
        };
        UserMenuOutletComponent.prototype.activateSupportAccess = function () {
            return __awaiter(this, void 0, void 0, function () {
                var title, companyName, textWithCompany, textWithoutCompany, finalQuestion, body, labels, successMsg, ex_1;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            title = gettext('Activate support user access');
                            companyName = this.optionsService.get('companyName', 'Cumulocity');
                            textWithCompany = gettext(
                            // tslint:disable-next-line:max-line-length
                            'You are about to allow a support user from {{companyName}} to access your tenant to help you with your issue.');
                            textWithoutCompany = gettext(
                            // tslint:disable-next-line:max-line-length
                            'You are about to allow a support user to access your tenant to help you with your issue.');
                            finalQuestion = gettext('Do you want to proceed?');
                            body = [
                                this.translateService.instant(companyName ? textWithCompany : textWithoutCompany, {
                                    companyName: companyName
                                }),
                                this.translateService.instant(finalQuestion)
                            ].join(' ');
                            labels = {
                                ok: gettext('Activate access'),
                                cancel: gettext('Cancel')
                            };
                            successMsg = gettext('Support user access activated.');
                            _a.label = 1;
                        case 1:
                            _a.trys.push([1, 5, , 6]);
                            return [4 /*yield*/, this.modalService.confirm(title, body, exports.Status.DANGER, labels)];
                        case 2:
                            _a.sent();
                            return [4 /*yield*/, this.tenantService.enableSupportUser()];
                        case 3:
                            _a.sent();
                            return [4 /*yield*/, this.refreshCurrentUser()];
                        case 4:
                            _a.sent();
                            this.alertService.success(successMsg);
                            return [3 /*break*/, 6];
                        case 5:
                            ex_1 = _a.sent();
                            return [3 /*break*/, 6];
                        case 6: return [2 /*return*/];
                    }
                });
            });
        };
        UserMenuOutletComponent.prototype.deactivateSupportAccess = function () {
            return __awaiter(this, void 0, void 0, function () {
                var title, companyName, textWithCompany, textWithoutCompany, currentUser, isTenantAdmin, tenantAdminNote, finalQuestion, body, labels, successMsg, ex_2;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            title = gettext('Deactivate support user access');
                            companyName = this.optionsService.get('companyName', 'Cumulocity');
                            textWithCompany = gettext(
                            // tslint:disable-next-line:max-line-length
                            'You are about to block a support user from {{companyName}} from accessing your tenant to help you with your issue.');
                            textWithoutCompany = gettext(
                            // tslint:disable-next-line:max-line-length
                            'You are about to block a support user from accessing your tenant to help you with your issue.');
                            return [4 /*yield*/, this.user.current()];
                        case 1:
                            currentUser = (_a.sent()).data;
                            return [4 /*yield*/, this.user.hasRole(currentUser, 'ROLE_TENANT_ADMIN')];
                        case 2:
                            isTenantAdmin = _a.sent();
                            tenantAdminNote = gettext(
                            // tslint:disable-next-line:max-line-length
                            'Deactivating support access as tenant admin will disable all other support requests on your tenant.');
                            finalQuestion = gettext('Do you want to proceed?');
                            body = [
                                this.translateService.instant(companyName ? textWithCompany : textWithoutCompany, {
                                    companyName: companyName
                                }),
                                isTenantAdmin ? this.translateService.instant(tenantAdminNote) : '',
                                this.translateService.instant(finalQuestion)
                            ]
                                .filter(Boolean)
                                .join(' ');
                            labels = {
                                ok: gettext('Deactivate access'),
                                cancel: gettext('Cancel')
                            };
                            successMsg = gettext('Support user access deactivated.');
                            _a.label = 3;
                        case 3:
                            _a.trys.push([3, 7, , 8]);
                            return [4 /*yield*/, this.modalService.confirm(title, body, exports.Status.DANGER, labels)];
                        case 4:
                            _a.sent();
                            return [4 /*yield*/, this.tenantService.disableSupportUser()];
                        case 5:
                            _a.sent();
                            return [4 /*yield*/, this.refreshCurrentUser()];
                        case 6:
                            _a.sent();
                            this.alertService.success(successMsg);
                            return [3 /*break*/, 8];
                        case 7:
                            ex_2 = _a.sent();
                            return [3 /*break*/, 8];
                        case 8: return [2 /*return*/];
                    }
                });
            });
        };
        UserMenuOutletComponent.prototype.getSortedItems = function () {
            return lodashEs.sortBy(Array.from(this.items), this.byPriority);
        };
        UserMenuOutletComponent.prototype.refreshCurrentUser = function () {
            return __awaiter(this, void 0, void 0, function () {
                var currentUserResult;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.user.current()];
                        case 1:
                            currentUserResult = _a.sent();
                            this.ui.currentUser.next(currentUserResult.data);
                            return [2 /*return*/];
                    }
                });
            });
        };
        UserMenuOutletComponent.prototype.byPriority = function (item) {
            return -item.priority;
        };
UserMenuOutletComponent.ɵfac = function UserMenuOutletComponent_Factory(t) { return new (t || UserMenuOutletComponent)(ɵngcc0.ɵɵdirectiveInject(AppStateService), ɵngcc0.ɵɵdirectiveInject(ɵngcc12.BsModalService), ɵngcc0.ɵɵdirectiveInject(ModalService), ɵngcc0.ɵɵdirectiveInject(LoginService), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.TranslateService), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.TenantService), ɵngcc0.ɵɵdirectiveInject(AlertService), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.UserService), ɵngcc0.ɵɵdirectiveInject(OptionsService)); };
UserMenuOutletComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: UserMenuOutletComponent, selectors: [["c8y-user-menu-outlet"]], inputs: { items: "items" }, decls: 22, vars: 33, consts: [["dropdown", "", 1, "dropdown"], ["dropdownToggle", "", 1, "main-header-button", "c8y-dropdown", "dropdown-toggle", "text-nowrap"], [1, "d-inline-block", "hidden-xs", "text-truncate", "m-r-8", 2, "vertical-align", "text-bottom", "max-width", "104px", 3, "title"], [1, "icon-2x", 3, "c8yIcon"], ["class", "dropdown-menu dropdown-menu-right", "style", "max-width: 240px;", 4, "dropdownMenu"], [3, "icon", "label", "priority", "click"], [3, "icon", "label", "click"], [3, "icon", "label", "click", 4, "ngIf"], [3, "icon", "link", "target", "label", 4, "ngIf"], [1, "dropdown-menu", "dropdown-menu-right", 2, "max-width", "240px"], [4, "ngFor", "ngForOf"], ["role", "separator", "class", "divider", 4, "ngIf"], ["class", "dropdown-header bg-gray-white text-pre-normal", "style", "margin-top: -1px;", 4, "ngIf"], [4, "ngIf"], [4, "c8yOutlet"], [3, "click"], [1, "interact"], [3, "c8yIcon"], ["role", "separator", 1, "divider"], [1, "dropdown-header", "bg-gray-white", "text-pre-normal", 2, "margin-top", "-1px"], [1, "flex-row"], [1, "text-info", "flex-item-v-start", "text-14", 2, "margin", "1px 6px 0 -3px", 3, "c8yIcon"], [1, "text-muted", "text-truncate"], [1, "text-primary", "interact", 3, "click"], [3, "icon", "link", "target", "label"]], template: function UserMenuOutletComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "button", 1);
        ɵngcc0.ɵɵelementStart(2, "span", 2);
        ɵngcc0.ɵɵpipe(3, "shortenUserName");
        ɵngcc0.ɵɵpipe(4, "async");
        ɵngcc0.ɵɵtext(5);
        ɵngcc0.ɵɵpipe(6, "shortenUserName");
        ɵngcc0.ɵɵpipe(7, "async");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(8, "i", 3);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(9, UserMenuOutletComponent_ul_9_Template, 6, 7, "ul", 4);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(10, "c8y-user-menu-item", 5);
        ɵngcc0.ɵɵlistener("click", function UserMenuOutletComponent_Template_c8y_user_menu_item_click_10_listener() { return ctx.editUser(); });
        ɵngcc0.ɵɵpipe(11, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(12, "c8y-user-menu-item", 6);
        ɵngcc0.ɵɵlistener("click", function UserMenuOutletComponent_Template_c8y_user_menu_item_click_12_listener() { return ctx.logout(); });
        ɵngcc0.ɵɵpipe(13, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(14, UserMenuOutletComponent_c8y_user_menu_item_14_Template, 2, 4, "c8y-user-menu-item", 7);
        ɵngcc0.ɵɵpipe(15, "async");
        ɵngcc0.ɵɵpipe(16, "async");
        ɵngcc0.ɵɵtemplate(17, UserMenuOutletComponent_c8y_user_menu_item_17_Template, 2, 4, "c8y-user-menu-item", 7);
        ɵngcc0.ɵɵpipe(18, "async");
        ɵngcc0.ɵɵpipe(19, "async");
        ɵngcc0.ɵɵtemplate(20, UserMenuOutletComponent_c8y_user_menu_item_20_Template, 3, 8, "c8y-user-menu-item", 8);
        ɵngcc0.ɵɵpipe(21, "async");
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(3, 11, ɵngcc0.ɵɵpipeBind1(4, 13, ctx.ui.currentUser)));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(6, 15, ɵngcc0.ɵɵpipeBind1(7, 17, ctx.ui.currentUser)), " ");
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("c8yIcon", "c8y-user");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("icon", "user-menu-male")("label", ɵngcc0.ɵɵpipeBind1(11, 19, "User settings"))("priority", 20);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("icon", "sign-out")("label", ɵngcc0.ɵɵpipeBind1(13, 21, "Logout"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", !ɵngcc0.ɵɵpipeBind1(15, 23, ctx.ui.currentUser).supportUserEnabled && ɵngcc0.ɵɵpipeBind1(16, 25, ctx.ui.state$).activateSupportUserAvailable);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind1(18, 27, ctx.ui.currentUser).supportUserEnabled && ɵngcc0.ɵɵpipeBind1(19, 29, ctx.ui.state$).activateSupportUserAvailable);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind1(21, 31, ctx.ui.state$).supportUrl);
    } }, directives: [ɵngcc9.BsDropdownDirective, ɵngcc9.BsDropdownToggleDirective, IconDirective, ɵngcc9.BsDropdownMenuDirective, UserMenuItemComponent, ɵngcc6.NgIf, ɵngcc6.NgForOf, OutletDirective], pipes: [ShortenUserNamePipe, ɵngcc6.AsyncPipe, C8yTranslatePipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(UserMenuOutletComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-user-menu-outlet',
                template: "<div\n  dropdown\n  class=\"dropdown\"\n>\n  <button\n    class=\"main-header-button c8y-dropdown dropdown-toggle text-nowrap\"\n    dropdownToggle\n  >\n    <span\n      class=\"d-inline-block hidden-xs text-truncate m-r-8\"\n      style=\"vertical-align: text-bottom; max-width: 104px;\"\n      title=\"{{ui.currentUser | async | shortenUserName}}\"\n    >\n      {{ui.currentUser | async | shortenUserName}}\n    </span>\n    <i\n      [c8yIcon]=\"'c8y-user'\"\n      class=\"icon-2x\"\n    ></i>\n  </button>\n  <ul\n    *dropdownMenu\n    class=\"dropdown-menu dropdown-menu-right\"\n    style=\"max-width: 240px;\"\n  >\n    <ng-container *ngFor=\"let item of getSortedItems()\">\n      <ng-container *ngIf=\"item.template\">\n        <ng-container *c8yOutlet=\"item.template\"></ng-container>\n      </ng-container>\n      <ng-container *ngIf=\"!item.template\">\n        <li (click)=\"item.click()\">\n          <a class=\"interact\" [attr.href]=\"item.link\" [attr.target]=\"item.target\">\n            <i [c8yIcon]=\"item.icon\"></i>\n            {{item.label | translate}}\n          </a>\n        </li>\n      </ng-container>\n    </ng-container>\n    <li\n      *ngIf=\"!(ui.state$ | async).hidePowered\"\n      role=\"separator\"\n      class=\"divider\"\n    ></li>\n    <li\n      class=\"dropdown-header bg-gray-white text-pre-normal\"\n      style=\"margin-top: -1px;\"\n      *ngIf=\"!(ui.state$ | async).hidePowered\"\n    >\n      <div class=\"flex-row\">\n        <i\n          [c8yIcon]=\"'info-circle'\"\n          class=\"text-info flex-item-v-start text-14\"\n          style=\"margin: 1px 6px 0 -3px;\"\n        ></i>\n        <span class=\"text-muted text-truncate\">\n          {{'Tenant ID' | translate}}: <strong>\n            <span class=\"text-primary interact\" (click)=\"$event.stopPropagation(); copyIt(ui.currentTenant.value.name)\">\n              {{ui.currentTenant.value.name}}&nbsp;\n              <i [c8yIcon]=\"'clipboard'\"></i>\n            </span>\n            </strong><br>\n          {{'Backend' | translate}}: <strong>{{(ui.state$ | async).versions.backend}}</strong><br>\n          {{'UI' | translate }}: <strong>{{ui.uiVersion}}</strong>\n        </span>\n      </div>\n    </li>\n  </ul>\n</div>\n\n<!-- the default items -->\n<c8y-user-menu-item\n  [icon]=\"'user-menu-male'\"\n  [label]=\"'User settings' | translate\"\n  [priority]=\"20\"\n  (click)=\"editUser()\"\n></c8y-user-menu-item>\n<c8y-user-menu-item\n  [icon]=\"'sign-out'\"\n  [label]=\"'Logout' | translate\"\n  (click)=\"logout()\"\n></c8y-user-menu-item>\n<c8y-user-menu-item\n  *ngIf=\"!(ui.currentUser | async).supportUserEnabled && ((ui.state$ | async).activateSupportUserAvailable)\"\n  [icon]=\"'c8y-c8y-support'\"\n  [label]=\"'Activate support' | translate\"\n  (click)=\"activateSupportAccess()\"\n></c8y-user-menu-item>\n<c8y-user-menu-item\n  *ngIf=\"(ui.currentUser | async).supportUserEnabled && ((ui.state$ | async).activateSupportUserAvailable)\"\n  [icon]=\"'c8y-c8y-support'\"\n  [label]=\"'Deactivate support' | translate\"\n  (click)=\"deactivateSupportAccess()\"\n></c8y-user-menu-item>\n<c8y-user-menu-item\n  *ngIf=\"(ui.state$ | async).supportUrl\"\n  [icon]=\"'question-circle'\"\n  [link]=\"(ui.state$ | async).supportUrl\"\n  [target]=\"'_blank'\"\n  [label]=\"'Request support' | translate\"\n></c8y-user-menu-item>\n"
            }]
    }], function () { return [{ type: AppStateService }, { type: ɵngcc12.BsModalService }, { type: ModalService }, { type: LoginService }, { type: ɵngcc4.TranslateService }, { type: ɵngcc3.TenantService }, { type: AlertService }, { type: ɵngcc3.UserService }, { type: OptionsService }]; }, { items: [{
            type: i0.Input
        }] }); })();
        return UserMenuOutletComponent;
    }());
    UserMenuOutletComponent.ctorParameters = function () { return [
        { type: AppStateService },
        { type: i1$2.BsModalService },
        { type: ModalService },
        { type: LoginService },
        { type: i1$1.TranslateService },
        { type: client.TenantService },
        { type: AlertService },
        { type: client.UserService },
        { type: OptionsService }
    ]; };
    UserMenuOutletComponent.propDecorators = {
        items: [{ type: i0.Input }]
    };

    var PasswordCheckListComponent = /** @class */ (function () {
        function PasswordCheckListComponent(loginService, passwordStrengthChecker, passwordService) {
            var _this = this;
            this.loginService = loginService;
            this.passwordStrengthChecker = passwordStrengthChecker;
            this.passwordService = passwordService;
            this.minGreenLength = 0;
            this.checklist = [
                {
                    label: gettext('Include lowercase characters (e.g. abcdef)'),
                    check: this.passwordStrengthChecker.hasLowerCase,
                    icon: '',
                    contextualColor: ''
                },
                {
                    label: gettext('Include uppercase characters (e.g. ABCDEF)'),
                    check: this.passwordStrengthChecker.hasUpperCase,
                    icon: '',
                    contextualColor: ''
                },
                {
                    label: gettext('Include numbers (e.g. 123456)'),
                    check: this.passwordStrengthChecker.hasNumbers,
                    icon: '',
                    contextualColor: ''
                },
                {
                    label: gettext('Include symbols (e.g. !@#$%^)'),
                    check: this.passwordStrengthChecker.hasSpecialChars,
                    icon: '',
                    contextualColor: ''
                },
                {
                    label: gettext('Must have at least {{length}} characters'),
                    check: function (password) { return password.length >= _this.minGreenLength; },
                    icon: '',
                    contextualColor: ''
                }
            ];
        }
        Object.defineProperty(PasswordCheckListComponent.prototype, "password", {
            set: function (password) {
                if (typeof password === 'string') {
                    this.onPasswordChange(password);
                }
            },
            enumerable: false,
            configurable: true
        });
        PasswordCheckListComponent.prototype.ngOnInit = function () {
            return __awaiter(this, void 0, void 0, function () {
                var _a;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            _a = this;
                            return [4 /*yield*/, this.loginService.getGreenMinLength()];
                        case 1:
                            _a.minGreenLength = _b.sent();
                            if (!this.minGreenLength) {
                                this.minGreenLength = this.passwordService.getDefaultPasswordMinLength();
                            }
                            return [2 /*return*/];
                    }
                });
            });
        };
        Object.defineProperty(PasswordCheckListComponent.prototype, "translateParams", {
            get: function () {
                return {
                    length: this.minGreenLength
                };
            },
            enumerable: false,
            configurable: true
        });
        PasswordCheckListComponent.prototype.onPasswordChange = function (password) {
            this.checklist = lodashEs.map(this.checklist, function (requirement) {
                var checked = requirement.check(password);
                lodashEs.assign(requirement, {
                    icon: checked ? 'check-circle' : '',
                    contextualColor: checked ? '' : 'text-muted'
                });
                return requirement;
            });
        };
PasswordCheckListComponent.ɵfac = function PasswordCheckListComponent_Factory(t) { return new (t || PasswordCheckListComponent)(ɵngcc0.ɵɵdirectiveInject(LoginService), ɵngcc0.ɵɵdirectiveInject(PasswordService), ɵngcc0.ɵɵdirectiveInject(PasswordService)); };
PasswordCheckListComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: PasswordCheckListComponent, selectors: [["c8y-password-check-list"]], inputs: { password: "password" }, decls: 6, vars: 4, consts: [[1, "small"], [1, "list-unstyled"], ["class", "small", 4, "ngFor", "ngForOf"], [1, "text-success", 3, "c8yIcon"], [3, "translate", "translateParams"]], template: function PasswordCheckListComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div");
        ɵngcc0.ɵɵelementStart(1, "span", 0);
        ɵngcc0.ɵɵtext(2);
        ɵngcc0.ɵɵpipe(3, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(4, "ul", 1);
        ɵngcc0.ɵɵtemplate(5, PasswordCheckListComponent_li_5_Template, 3, 6, "li", 2);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate1("", ɵngcc0.ɵɵpipeBind1(3, 2, "Please meet 5 out of the 5 conditions below"), ":");
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.checklist);
    } }, directives: [ɵngcc6.NgForOf, IconDirective, C8yTranslateDirective], pipes: [C8yTranslatePipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PasswordCheckListComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-password-check-list',
                template: "<div>\n  <span class=\"small\">{{ 'Please meet 5 out of the 5 conditions below' | translate }}:</span>\n  <ul class=\"list-unstyled\">\n    <li class=\"small\" *ngFor=\"let requirement of checklist\">\n      <i [c8yIcon]=\"requirement.icon\" class=\"text-success\"></i>\n      <span\n        class=\"small {{ requirement.contextualColor }}\"\n        [translate]=\"requirement.label\"\n        [translateParams]=\"this.translateParams\"\n      ></span>\n    </li>\n  </ul>\n</div>\n"
            }]
    }], function () { return [{ type: LoginService }, { type: PasswordService }, { type: PasswordService }]; }, { password: [{
            type: i0.Input,
            args: ['password']
        }] }); })();
        return PasswordCheckListComponent;
    }());
    PasswordCheckListComponent.ctorParameters = function () { return [
        { type: LoginService },
        { type: PasswordService },
        { type: PasswordService }
    ]; };
    PasswordCheckListComponent.propDecorators = {
        password: [{ type: i0.Input, args: ['password',] }]
    };

    var PasswordConfirm = /** @class */ (function () {
        function PasswordConfirm(passwordConfirm) {
            this.passwordConfirm = passwordConfirm;
        }
        PasswordConfirm.prototype.validate = function (abControl) {
            var value = abControl.value;
            var controlToCompareWith = abControl.root.get(this.passwordConfirm);
            if (controlToCompareWith && value !== controlToCompareWith.value) {
                return { passwordConfirm: true };
            }
            return null;
        };
PasswordConfirm.ɵfac = function PasswordConfirm_Factory(t) { return new (t || PasswordConfirm)(ɵngcc0.ɵɵinjectAttribute('passwordConfirm')); };
PasswordConfirm.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: PasswordConfirm, selectors: [["", "passwordConfirm", ""]], features: [ɵngcc0.ɵɵProvidersFeature([
            {
                provide: forms.NG_VALIDATORS,
                useExisting: PasswordConfirm,
                multi: true
            }
        ])] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PasswordConfirm, [{
        type: i0.Directive,
        args: [{
                selector: '[passwordConfirm]',
                providers: [
                    {
                        provide: forms.NG_VALIDATORS,
                        useExisting: PasswordConfirm,
                        multi: true
                    }
                ]
            }]
    }], function () { return [{ type: String, decorators: [{
                type: i0.Attribute,
                args: ['passwordConfirm']
            }] }]; }, null); })();
        return PasswordConfirm;
    }());
    PasswordConfirm.ctorParameters = function () { return [
        { type: String, decorators: [{ type: i0.Attribute, args: ['passwordConfirm',] }] }
    ]; };

    var PasswordStrengthCheckerService = /** @class */ (function () {
        function PasswordStrengthCheckerService() {
            this.GREEN = {
                colorName: 'green',
                color: 'rgb(0, 128, 0)',
                description: gettext('strong'),
                passwordStrength: client.PasswordStrength.GREEN
            };
            this.YELLOW = {
                colorName: 'yellow',
                color: 'rgb(255, 204, 51)',
                description: gettext('medium'),
                passwordStrength: client.PasswordStrength.YELLOW
            };
            this.RED = {
                colorName: 'red',
                color: 'rgb(170, 0, 51)',
                description: gettext('weak'),
                passwordStrength: client.PasswordStrength.RED
            };
        }
        PasswordStrengthCheckerService.prototype.hasLowerCase = function (password) {
            return (password.search(/[a-z]/) !== -1);
        };
        PasswordStrengthCheckerService.prototype.hasUpperCase = function (password) {
            return (password.search(/[A-Z]/) !== -1);
        };
        PasswordStrengthCheckerService.prototype.hasNumbers = function (password) {
            return (password.search(/[0-9]/) !== -1);
        };
        PasswordStrengthCheckerService.prototype.hasSpecialChars = function (password) {
            return (password.search(/[^0-9a-zA-Z]+/) !== -1);
        };
        PasswordStrengthCheckerService.prototype.getStrengthColor = function (password) {
            var passwordStrength = lodashEs.filter([
                this.hasLowerCase(password),
                this.hasUpperCase(password),
                this.hasNumbers(password),
                this.hasSpecialChars(password)
            ]).length;
            if (passwordStrength > 3) {
                return this.GREEN;
            }
            else if (passwordStrength >= 3) {
                return this.YELLOW;
            }
            else {
                return this.RED;
            }
        };
PasswordStrengthCheckerService.ɵfac = function PasswordStrengthCheckerService_Factory(t) { return new (t || PasswordStrengthCheckerService)(); };
PasswordStrengthCheckerService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: PasswordStrengthCheckerService, factory: function (t) { return PasswordStrengthCheckerService.ɵfac(t); } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PasswordStrengthCheckerService, [{
        type: i0.Injectable
    }], function () { return []; }, null); })();
        return PasswordStrengthCheckerService;
    }());

    var PasswordStrengthComponent = /** @class */ (function () {
        function PasswordStrengthComponent(passwordStrengthCheckerService) {
            this.passwordStrengthCheckerService = passwordStrengthCheckerService;
            this.strength = new i0.EventEmitter();
            this.password = '';
        }
        Object.defineProperty(PasswordStrengthComponent.prototype, "password", {
            set: function (password) {
                if (typeof password === 'string') {
                    this.model = this.passwordStrengthCheckerService.getStrengthColor(password);
                    this.strength.emit(this.model);
                }
            },
            enumerable: false,
            configurable: true
        });
PasswordStrengthComponent.ɵfac = function PasswordStrengthComponent_Factory(t) { return new (t || PasswordStrengthComponent)(ɵngcc0.ɵɵdirectiveInject(PasswordService)); };
PasswordStrengthComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: PasswordStrengthComponent, selectors: [["c8y-password-strength"]], inputs: { password: "password" }, outputs: { strength: "strength" }, decls: 8, vars: 6, consts: [["translate", "", 1, "password-strength-label", "small"], [1, "password-bar"], [1, "small"]], template: function PasswordStrengthComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div");
        ɵngcc0.ɵɵelementStart(1, "label", 0);
        ɵngcc0.ɵɵtext(2, " Password strength ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(3, "div");
        ɵngcc0.ɵɵelement(4, "div", 1);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(5, "span", 2);
        ɵngcc0.ɵɵtext(6);
        ɵngcc0.ɵɵpipe(7, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵclassMapInterpolate1("password-strength password-", ctx.model.colorName, "");
        ɵngcc0.ɵɵadvance(6);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(7, 4, ctx.model.description), " ");
    } }, directives: [C8yTranslateDirective], pipes: [C8yTranslatePipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PasswordStrengthComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-password-strength',
                template: "<div class=\"password-strength password-{{ model.colorName }}\">\r\n  <label class=\"password-strength-label small\" translate>\r\n    Password strength\r\n  </label>\r\n  <div>\r\n    <div class=\"password-bar\"></div>\r\n  </div>\r\n  <span class=\"small\">\r\n    {{ model.description | translate }}\r\n  </span>\r\n</div>\r\n"
            }]
    }], function () { return [{ type: PasswordService }]; }, { strength: [{
            type: i0.Output
        }], password: [{
            type: i0.Input,
            args: ['password']
        }] }); })();
        return PasswordStrengthComponent;
    }());
    PasswordStrengthComponent.ctorParameters = function () { return [
        { type: PasswordService }
    ]; };
    PasswordStrengthComponent.propDecorators = {
        password: [{ type: i0.Input, args: ['password',] }],
        strength: [{ type: i0.Output }]
    };

    var NewPasswordComponent = /** @class */ (function () {
        function NewPasswordComponent(loginService) {
            this.loginService = loginService;
            this.password = new i0.EventEmitter();
            this.model = {};
            this.changePassword = false;
            this.passwordEnforced = false;
        }
        NewPasswordComponent.prototype.ngOnInit = function () {
            var _this = this;
            this.loadPasswordStrengthSettings();
            this.loginService.getGreenMinLength().then(function (value) {
                _this.minlength = value;
            });
        };
        NewPasswordComponent.prototype.newPasswordChanged = function () {
            this.password.emit({
                password: this.model.newPassword,
                passwordStrength: this.model.strength
            });
        };
        NewPasswordComponent.prototype.loadPasswordStrengthSettings = function () {
            return __awaiter(this, void 0, void 0, function () {
                var _a;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            _a = this;
                            return [4 /*yield*/, this.loginService.getPasswordStrengthEnforced({ refresh: true })];
                        case 1:
                            _a.passwordEnforced = _b.sent();
                            return [2 /*return*/];
                    }
                });
            });
        };
        NewPasswordComponent.prototype.showPasswordStrength = function () {
            return this.model.newPassword && this.model.newPassword.length >= this.minlength;
        };
        NewPasswordComponent.prototype.toggleChangePassword = function () {
            this.changePassword = !this.changePassword;
            if (!this.changePassword) {
                this.password.emit({});
                this.model = {};
            }
        };
NewPasswordComponent.ɵfac = function NewPasswordComponent_Factory(t) { return new (t || NewPasswordComponent)(ɵngcc0.ɵɵdirectiveInject(LoginService)); };
NewPasswordComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: NewPasswordComponent, selectors: [["c8y-new-password"]], outputs: { password: "password" }, features: [ɵngcc0.ɵɵProvidersFeature([], [{ provide: forms.ControlContainer, useExisting: forms.NgForm }])], decls: 5, vars: 3, consts: [[1, "form-group"], ["type", "button", 1, "btn", "btn-default", 3, "click"], [4, "ngIf"], ["class", "row content-flex-50", 4, "ngIf"], [1, "row", "content-flex-50"], [1, "col-7"], ["for", "newPassword", "translate", ""], ["id", "newPassword", "name", "newPassword", "type", "password", "required", "", "c8yDefaultValidation", "password", "autocomplete", "new-password", 1, "form-control", 3, "ngModel", "ngModelChange", "change", "input"], ["newPassword", "ngModel"], ["for", "newConfirmPassword", "translate", ""], ["id", "newConfirmPassword", "name", "newPasswordConfirm", "type", "password", "required", "", "passwordConfirm", "newPassword", "autocomplete", "new-password", 1, "form-control", 3, "ngModel", "ngModelChange"], ["newPasswordConfirm", "ngModel"], [1, "col-5"], [3, "password", "strength"], [1, "m-t-32", 3, "password", "hidden"]], template: function NewPasswordComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "button", 1);
        ɵngcc0.ɵɵlistener("click", function NewPasswordComponent_Template_button_click_1_listener() { return ctx.toggleChangePassword(); });
        ɵngcc0.ɵɵtemplate(2, NewPasswordComponent_ng_container_2_Template, 3, 3, "ng-container", 2);
        ɵngcc0.ɵɵtemplate(3, NewPasswordComponent_ng_container_3_Template, 3, 3, "ng-container", 2);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(4, NewPasswordComponent_div_4_Template, 15, 5, "div", 3);
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.changePassword);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.changePassword);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.changePassword);
    } }, directives: function () { return [ɵngcc6.NgIf, FormGroupComponent, C8yTranslateDirective, RequiredInputPlaceholderDirective, ɵngcc13.DefaultValueAccessor, ɵngcc13.RequiredValidator, DefaultValidationDirective, ɵngcc13.NgControlStatus, ɵngcc13.NgModel, PasswordConfirm, PasswordStrengthComponent, PasswordCheckListComponent]; }, pipes: function () { return [C8yTranslatePipe]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NewPasswordComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-new-password',
                template: "<div class=\"form-group\">\n  <button type=\"button\" class=\"btn btn-default\" (click)=\"toggleChangePassword()\">\n    <ng-container *ngIf=\"!changePassword\">\n      {{ 'Change password' | translate }}\n    </ng-container>\n    <ng-container *ngIf=\"changePassword\">\n      {{ 'Cancel password change' | translate }}\n    </ng-container>\n  </button>\n</div>\n\n<div *ngIf=\"changePassword\" class=\"row content-flex-50\">\n  <div class=\"col-7\">\n    <c8y-form-group>\n      <label for=\"newPassword\" translate>Password</label>\n      <input\n        id=\"newPassword\"\n        name=\"newPassword\"\n        type=\"password\"\n        #newPassword=\"ngModel\"\n        class=\"form-control\"\n        [(ngModel)]=\"model.newPassword\"\n        (change)=\"newPasswordChanged()\"\n        (input)=\"newPasswordConfirm.control.updateValueAndValidity()\"\n        required\n        c8yDefaultValidation=\"password\"\n        autocomplete=\"new-password\"\n      />\n    </c8y-form-group>\n\n    <c8y-form-group>\n      <label for=\"newConfirmPassword\" translate>Confirm password</label>\n      <input\n        id=\"newConfirmPassword\"\n        name=\"newPasswordConfirm\"\n        type=\"password\"\n        #newPasswordConfirm=\"ngModel\"\n        class=\"form-control\"\n        [(ngModel)]=\"model.newPasswordConfirm\"\n        required\n        passwordConfirm=\"newPassword\"\n        autocomplete=\"new-password\"\n      />\n    </c8y-form-group>\n  </div>\n  <div class=\"col-5\">\n    <c8y-password-strength\n      [password]=\"model.newPassword\"\n      (strength)=\"model.strength = $event\"\n    ></c8y-password-strength>\n\n    <c8y-password-check-list\n      class=\"m-t-32\"\n      [password]=\"model.newPassword\"\n      [hidden]=\"!passwordEnforced\"\n    ></c8y-password-check-list>\n  </div>\n</div>\n",
                viewProviders: [{ provide: forms.ControlContainer, useExisting: forms.NgForm }]
            }]
    }], function () { return [{ type: LoginService }]; }, { password: [{
            type: i0.Output
        }] }); })();
        return NewPasswordComponent;
    }());
    NewPasswordComponent.ctorParameters = function () { return [
        { type: LoginService }
    ]; };
    NewPasswordComponent.propDecorators = {
        password: [{ type: i0.Output }]
    };

    var PhoneValidationDirective = /** @class */ (function () {
        function PhoneValidationDirective() {
        }
        PhoneValidationDirective.prototype.validate = function (control) {
            var valid = this.validateInternationalPhoneNumber(control);
            return valid ? null : {
                internationalPhoneNumber: true
            };
        };
        PhoneValidationDirective.prototype.validateInternationalPhoneNumber = function (control) {
            var numberValid;
            try {
                var phoneNumber = max.parsePhoneNumberFromString(control.value);
                numberValid = phoneNumber.isValid();
                if (numberValid && control.value !== phoneNumber.format('E.164')) {
                    control.setValue(phoneNumber.format('E.164'), { emitEvent: false, emitModelToViewChange: false });
                }
            }
            catch (e) {
                numberValid = !control.value;
            }
            return numberValid;
        };
PhoneValidationDirective.ɵfac = function PhoneValidationDirective_Factory(t) { return new (t || PhoneValidationDirective)(); };
PhoneValidationDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: PhoneValidationDirective, selectors: [["", "c8yPhoneValidation", ""]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: forms.NG_VALIDATORS, useExisting: PhoneValidationDirective, multi: true }])] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PhoneValidationDirective, [{
        type: i0.Directive,
        args: [{
                selector: '[c8yPhoneValidation]',
                providers: [{ provide: forms.NG_VALIDATORS, useExisting: PhoneValidationDirective, multi: true }]
            }]
    }], function () { return []; }, null); })();
        return PhoneValidationDirective;
    }());

    // tslint:disable: max-line-length
    // @dynamic
    var ValidationPattern = /** @class */ (function () {
        function ValidationPattern() {
        }
        ValidationPattern.get = function (key) {
            var pattern = this.rules[key];
            return pattern;
        };
        return ValidationPattern;
    }());
    ValidationPattern.messages = {
        deviceId: gettext('Device ID must not contain spaces or slashes ("/").'),
        domain: gettext('Only lowercase letters, digits and hyphens allowed in the first part of the URI. ' +
            'Must start with a letter; hyphens only allowed in the middle. Must be a valid URI.'),
        email: gettext('Invalid email address.'),
        emails: gettext('Invalid email addresses.'),
        internationalPhoneNumber: gettext('International phone number required, in the format +49 9 876 543 210.'),
        loginAlias: gettext('Login alias must not contain slashes ("/", "\\") nor ("+"), (":"), ("$") signs.'),
        max: gettext('Max value: {{ value }}'),
        min: gettext('Min value: {{ value }}'),
        opcuaBrowsePath: gettext('Invalid OPC UA URI.'),
        password: gettext('Password must have at least 8 characters and no more than 32 and can only contain letters, numbers and following symbols: `~!@#$%^&*()_|+-=?;:\'",.<>{}[]\\/'),
        passwordConfirm: gettext('Passwords do not match.'),
        passwordStrength: gettext('Password not good enough, password must be stronger (green).'),
        phoneNumber: gettext('Invalid phone number format. Only digits, spaces, slashes ("/") and dashes ("-") allowed.'),
        required: gettext('This field is required.'),
        tenantId: gettext('May contain lowercase letters, digits, and hyphens. ' +
            'Must start with a letter; hyphens only allowed in the middle; minimum 2 characters.'),
        urlSegment: gettext('Slash, single or double dots and white space not allowed.'),
        user: gettext('Username must not contain spaces nor slashes ("/", "\\") nor ("+"), (":"), ("$") signs.')
    };
    ValidationPattern.rules = {
        deviceId: {
            pattern: /^[^\s/]*$/
        },
        domain: {
            pattern: /^[a-z]+[a-z0-9-]*[a-z0-9]+\.{1}.+$/
        },
        groupName: {
            maxLength: 254
        },
        hostname: {
            pattern: /^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9])\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9-]*[A-Za-z0-9])$/
        },
        ip: {
            pattern: /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/
        },
        opcuaBrowsePath: {
            pattern: /^(opc.tcp|http|https):\/\/[^ "]+$/
        },
        password: {
            pattern: /^[a-zA-Z0-9`~!@#$%^&*()_|+\-=?;:'",.<>{}[\]\\/]{8,32}$/
        },
        phoneNumber: {
            pattern: /^$|^(\+|0{2})[\d\s/-]{1,30}$/
        },
        tenantId: {
            pattern: /^[a-z]+[a-z0-9-]*[a-z0-9]+$/
        },
        user: {
            pattern: /^[^\\/\s$:+]*$/
        },
        urlSegment: {
            pattern: /^(([.]{1,2})|([/])+|(([/]*)([.]{1,2})([/]*))|((.*)([/]|[ ]+)(.*))|(\s+))$/
        },
        loginAlias: {
            pattern: /^[^\\/$:+]*$/
        }
    };

    var DefaultValidationDirective = /** @class */ (function () {
        function DefaultValidationDirective() {
            this.c8yDefaultValidation = '';
        }
        DefaultValidationDirective.prototype.validate = function (control) {
            var _a;
            if (!control.value) {
                return null;
            }
            var validation = ValidationPattern.get(this.c8yDefaultValidation);
            if (!validation) {
                throw new Error("Pattern " + this.c8yDefaultValidation + " not found.");
            }
            var valid = true;
            if (validation.pattern) {
                valid = validation.pattern.test(control.value);
            }
            if (validation.maxLength) {
                valid = control.value.length < validation.maxLength;
            }
            if (validation.minLength) {
                valid = control.value.length >= validation.minLength;
            }
            return valid ? null : (_a = {}, _a[this.c8yDefaultValidation] = true, _a);
        };
DefaultValidationDirective.ɵfac = function DefaultValidationDirective_Factory(t) { return new (t || DefaultValidationDirective)(); };
DefaultValidationDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: DefaultValidationDirective, selectors: [["", "c8yDefaultValidation", ""]], inputs: { c8yDefaultValidation: "c8yDefaultValidation" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: forms.NG_VALIDATORS, useExisting: DefaultValidationDirective, multi: true }])] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DefaultValidationDirective, [{
        type: i0.Directive,
        args: [{
                selector: '[c8yDefaultValidation]',
                providers: [{ provide: forms.NG_VALIDATORS, useExisting: DefaultValidationDirective, multi: true }]
            }]
    }], function () { return []; }, { c8yDefaultValidation: [{
            type: i0.Input
        }] }); })();
        return DefaultValidationDirective;
    }());
    DefaultValidationDirective.propDecorators = {
        c8yDefaultValidation: [{ type: i0.Input }]
    };

    var MinValidationDirective = /** @class */ (function () {
        function MinValidationDirective() {
            this.min = '';
        }
        MinValidationDirective.prototype.validate = function (control) {
            var parsedMin = parseInt(this.min, 10);
            if (lodashEs.isUndefined(control.value) || !lodashEs.isFinite(parsedMin)) {
                return null;
            }
            var valid = true;
            valid = (control.value !== null) ? !(control.value < parsedMin) : true;
            return valid ? null : { min: { value: parsedMin } };
        };
MinValidationDirective.ɵfac = function MinValidationDirective_Factory(t) { return new (t || MinValidationDirective)(); };
MinValidationDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MinValidationDirective, selectors: [["", "min", ""]], inputs: { min: "min" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: forms.NG_VALIDATORS, useExisting: MinValidationDirective, multi: true }])] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MinValidationDirective, [{
        type: i0.Directive,
        args: [{
                selector: '[min]',
                providers: [{ provide: forms.NG_VALIDATORS, useExisting: MinValidationDirective, multi: true }]
            }]
    }], function () { return []; }, { min: [{
            type: i0.Input
        }] }); })();
        return MinValidationDirective;
    }());
    MinValidationDirective.propDecorators = {
        min: [{ type: i0.Input }]
    };

    var MaxValidationDirective = /** @class */ (function () {
        function MaxValidationDirective() {
            this.max = '';
        }
        MaxValidationDirective.prototype.validate = function (control) {
            var parsedMax = parseInt(this.max, 10);
            if (lodashEs.isUndefined(control.value) || !lodashEs.isFinite(parsedMax)) {
                return null;
            }
            var valid = true;
            valid = !(control.value > parsedMax);
            return valid ? null : { max: { value: parsedMax } };
        };
MaxValidationDirective.ɵfac = function MaxValidationDirective_Factory(t) { return new (t || MaxValidationDirective)(); };
MaxValidationDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MaxValidationDirective, selectors: [["", "max", ""]], inputs: { max: "max" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: forms.NG_VALIDATORS, useExisting: MaxValidationDirective, multi: true }])] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MaxValidationDirective, [{
        type: i0.Directive,
        args: [{
                selector: '[max]',
                providers: [{ provide: forms.NG_VALIDATORS, useExisting: MaxValidationDirective, multi: true }]
            }]
    }], function () { return []; }, { max: [{
            type: i0.Input
        }] }); })();
        return MaxValidationDirective;
    }());
    MaxValidationDirective.propDecorators = {
        max: [{ type: i0.Input }]
    };

    var MessageDirective = /** @class */ (function () {
        function MessageDirective() {
        }
MessageDirective.ɵfac = function MessageDirective_Factory(t) { return new (t || MessageDirective)(); };
MessageDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MessageDirective, selectors: [["c8y-message"]], inputs: { name: "name", text: "text" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MessageDirective, [{
        type: i0.Directive,
        args: [{
                selector: 'c8y-message'
            }]
    }], function () { return []; }, { name: [{
            type: i0.Input
        }], text: [{
            type: i0.Input
        }] }); })();
        return MessageDirective;
    }());
    MessageDirective.propDecorators = {
        name: [{ type: i0.Input }],
        text: [{ type: i0.Input }]
    };

    var MessagesComponent = /** @class */ (function () {
        function MessagesComponent(translateService) {
            this.translateService = translateService;
            this.show = {};
            this.defaults = ValidationPattern.messages;
            this.messages = [];
            this.messageMap = {};
        }
        MessagesComponent.prototype.ngAfterContentInit = function () {
            this.messageMap = Object.assign({}, this.defaults, this.customMessages.reduce(function (messages, directive) {
                messages[directive.name] = directive.text;
                return messages;
            }, {}));
        };
        MessagesComponent.prototype.changVisibility = function (show) {
            this.show = show;
            this.ngOnChanges();
        };
        MessagesComponent.prototype.ngOnChanges = function () {
            var _this = this;
            if (this.show) {
                this.messages = Object.keys(this.show)
                    .map(function (key) { return _this.toMessage(key, _this.show[key]); });
            }
            else {
                this.messages = [];
            }
        };
        MessagesComponent.prototype.toMessage = function (key, value) {
            return this.translateService.instant(this.messageMap[key], value);
        };
MessagesComponent.ɵfac = function MessagesComponent_Factory(t) { return new (t || MessagesComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc4.TranslateService)); };
MessagesComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MessagesComponent, selectors: [["c8y-messages"]], contentQueries: function MessagesComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, MessageDirective, 4);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.customMessages = _t);
    } }, inputs: { show: "show", defaults: "defaults" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c1, decls: 3, vars: 1, consts: [[1, "form-control-feedback-message"], ["class", "d-block", 4, "ngFor", "ngForOf"], [1, "d-block"]], template: function MessagesComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "small", 0);
        ɵngcc0.ɵɵtemplate(1, MessagesComponent_div_1_Template, 3, 3, "div", 1);
        ɵngcc0.ɵɵprojection(2);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.messages);
    } }, directives: [ɵngcc6.NgForOf], pipes: [C8yTranslatePipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MessagesComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-messages',
                template: "<small class=\"form-control-feedback-message\">\n  <div class=\"d-block\" *ngFor=\"let msg of messages\">\n    {{msg | translate}}\n  </div>\n  <ng-content></ng-content>\n</small>\n"
            }]
    }], function () { return [{ type: ɵngcc4.TranslateService }]; }, { show: [{
            type: i0.Input
        }], defaults: [{
            type: i0.Input
        }], customMessages: [{
            type: i0.ContentChildren,
            args: [MessageDirective]
        }] }); })();
        return MessagesComponent;
    }());
    MessagesComponent.ctorParameters = function () { return [
        { type: i1$1.TranslateService }
    ]; };
    MessagesComponent.propDecorators = {
        show: [{ type: i0.Input }],
        defaults: [{ type: i0.Input }],
        customMessages: [{ type: i0.ContentChildren, args: [MessageDirective,] }]
    };

    /**
     * A form group helps to validate an input of a form element.
     *
     * ## Example:
     *
     * ```html
     *  <c8y-form-group [hasWarning]="user.email.length === 0">
     *   <label translate for="userEmail">Email</label>
     *   <input
     *     id="userEmail"
     *     class="form-control"
     *     type="email"
     *     name="email"
     *     [maxlength]="254"
     *     autocomplete="off"
     *     placeholder="{{'e.g. joe.doe@example.com' | translate}}"
     *     [(ngModel)]="user.email"
     *     email
     *     required
     *   >
     *   <c8y-messages>
     *     <c8y-message *ngIf="user.email.length === 0" translate></c8y-message>
     *     <c8y-message name="required" text="The E-Mail is SUPER required"></c8y-message>
     *   </c8y-messages>
     *  </c8y-form-group>
     * ```
     *
     * @param status The current status could be error, warning or success.
     * @param hasError Set this to true to display a error.
     * @param hasWarning Set this to true to display a warning.
     * @param hasSuccess Set this to true to display a success.
     * @param novalidation Set this to true to disable automatic validation by this component.
     */
    var FormGroupComponent = /** @class */ (function () {
        function FormGroupComponent() {
            this.hasError = false;
            this.hasWarning = false;
            this.hasSuccess = false;
            this.novalidation = false;
            this.VALIDATION_DEBOUNCE_MS = 1000;
        }
        Object.defineProperty(FormGroupComponent.prototype, "error", {
            get: function () {
                return this.status === 'error' || this.hasError;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(FormGroupComponent.prototype, "warning", {
            get: function () {
                return this.status === 'warning' || this.hasWarning;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(FormGroupComponent.prototype, "success", {
            get: function () {
                return this.status === 'success' || this.hasSuccess;
            },
            enumerable: false,
            configurable: true
        });
        FormGroupComponent.prototype.ngAfterContentInit = function () {
            this.initNgModel();
        };
        FormGroupComponent.prototype.initNgModel = function () {
            var _this = this;
            if (this.model) {
                this.model.valueAccessor.registerOnTouched(function () {
                    if (_this.model.control && !_this.model.control.dirty) {
                        _this.model.control.markAsDirty();
                        _this.model.control.updateValueAndValidity({ onlySelf: true });
                    }
                });
                this.subscription = rxjs.merge(this.model.valueChanges, this.model.statusChanges)
                    .pipe(operators.filter(function () { return _this.model.dirty && !_this.novalidation; }), operators.debounce(function () { return (_this.hasError ? rxjs.timer(10) : rxjs.timer(_this.VALIDATION_DEBOUNCE_MS)); }))
                    .subscribe(function () { return _this.update(); });
            }
        };
        FormGroupComponent.prototype.update = function () {
            this.hasError = this.model.status === 'INVALID';
            if (this.customErrorMessage) {
                this.customErrorMessage.changVisibility(this.model.errors);
            }
            else {
                this.errors = this.model.errors;
            }
        };
        FormGroupComponent.prototype.ngOnDestroy = function () {
            if (this.subscription) {
                this.subscription.unsubscribe();
            }
        };
FormGroupComponent.ɵfac = function FormGroupComponent_Factory(t) { return new (t || FormGroupComponent)(); };
FormGroupComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: FormGroupComponent, selectors: [["c8y-form-group"]], contentQueries: function FormGroupComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, MessagesComponent, 5);
        ɵngcc0.ɵɵcontentQuery(dirIndex, forms.NgModel, 7);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.customErrorMessage = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.model = _t.first);
    } }, hostAttrs: [1, "form-group"], hostVars: 6, hostBindings: function FormGroupComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("has-error", ctx.error)("has-warning", ctx.warning)("has-success", ctx.success);
    } }, inputs: { hasError: "hasError", hasWarning: "hasWarning", hasSuccess: "hasSuccess", novalidation: "novalidation", status: "status" }, ngContentSelectors: _c1, decls: 2, vars: 1, consts: [[3, "show", 4, "ngIf"], [3, "show"]], template: function FormGroupComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
        ɵngcc0.ɵɵtemplate(1, FormGroupComponent_c8y_messages_1_Template, 1, 1, "c8y-messages", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.customErrorMessage);
    } }, directives: [ɵngcc6.NgIf, MessagesComponent], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FormGroupComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-form-group',
                template: "<ng-content></ng-content>\n<c8y-messages *ngIf=\"!customErrorMessage\" [show]=\"errors\"></c8y-messages>\n",
                host: {
                    class: 'form-group'
                }
            }]
    }], function () { return []; }, { hasError: [{
            type: i0.Input
        }], hasWarning: [{
            type: i0.Input
        }], hasSuccess: [{
            type: i0.Input
        }], novalidation: [{
            type: i0.Input
        }], error: [{
            type: i0.HostBinding,
            args: ['class.has-error']
        }], warning: [{
            type: i0.HostBinding,
            args: ['class.has-warning']
        }], success: [{
            type: i0.HostBinding,
            args: ['class.has-success']
        }], status: [{
            type: i0.Input
        }], customErrorMessage: [{
            type: i0.ContentChild,
            args: [MessagesComponent, { static: false }]
        }], model: [{
            type: i0.ContentChild,
            args: [forms.NgModel, { static: true }]
        }] }); })();
        return FormGroupComponent;
    }());
    FormGroupComponent.propDecorators = {
        hasError: [{ type: i0.Input }],
        hasWarning: [{ type: i0.Input }],
        hasSuccess: [{ type: i0.Input }],
        novalidation: [{ type: i0.Input }],
        status: [{ type: i0.Input }],
        error: [{ type: i0.HostBinding, args: ['class.has-error',] }],
        warning: [{ type: i0.HostBinding, args: ['class.has-warning',] }],
        success: [{ type: i0.HostBinding, args: ['class.has-success',] }],
        customErrorMessage: [{ type: i0.ContentChild, args: [MessagesComponent, { static: false },] }],
        model: [{ type: i0.ContentChild, args: [forms.NgModel, { static: true },] }]
    };

    var InputGroupListComponent = /** @class */ (function () {
        function InputGroupListComponent() {
            this.plus = true;
            this.minus = true;
            this.onRemove = new i0.EventEmitter();
            this.onAdd = new i0.EventEmitter();
        }
        InputGroupListComponent.prototype.add = function () {
            this.onAdd.emit(this.index);
        };
        InputGroupListComponent.prototype.remove = function () {
            this.onRemove.emit(this.index);
        };
InputGroupListComponent.ɵfac = function InputGroupListComponent_Factory(t) { return new (t || InputGroupListComponent)(); };
InputGroupListComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: InputGroupListComponent, selectors: [["c8y-input-group-list"]], inputs: { plus: "plus", minus: "minus", index: "index" }, outputs: { onRemove: "onRemove", onAdd: "onAdd" }, ngContentSelectors: _c1, decls: 6, vars: 2, consts: [[1, "input-group"], [1, "input-group-btn"], ["class", "btn btn-clean text-primary", 3, "title", "click", 4, "ngIf"], [1, "btn", "btn-clean", "text-primary", 3, "title", "click"], ["c8yIcon", "minus-circle", 1, "text-danger"], ["c8yIcon", "plus-circle"]], template: function InputGroupListComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementContainerStart(0);
        ɵngcc0.ɵɵelementStart(1, "div", 0);
        ɵngcc0.ɵɵprojection(2);
        ɵngcc0.ɵɵelementStart(3, "div", 1);
        ɵngcc0.ɵɵtemplate(4, InputGroupListComponent_button_4_Template, 3, 3, "button", 2);
        ɵngcc0.ɵɵtemplate(5, InputGroupListComponent_button_5_Template, 3, 3, "button", 2);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementContainerEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵproperty("ngIf", ctx.minus);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.plus);
    } }, directives: [ɵngcc6.NgIf, IconDirective], pipes: [C8yTranslatePipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(InputGroupListComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-input-group-list',
                template: "<ng-container>\n  <div class=\"input-group\">\n    <ng-content></ng-content>\n    <div class=\"input-group-btn\">\n      <button\n        *ngIf=\"minus\"\n        title=\"{{ 'Remove' | translate }}\"\n        class=\"btn btn-clean text-primary\"\n        (click)=\"remove()\"\n      >\n        <i c8yIcon=\"minus-circle\" class=\"text-danger\"></i>\n      </button>\n      <button\n        *ngIf=\"plus\"\n        title=\"{{ 'Add' | translate }}\"\n        class=\"btn btn-clean text-primary\"\n        (click)=\"add()\"\n      >\n        <i c8yIcon=\"plus-circle\"></i>\n      </button>\n    </div>\n  </div>\n</ng-container>\n"
            }]
    }], function () { return []; }, { plus: [{
            type: i0.Input
        }], minus: [{
            type: i0.Input
        }], onRemove: [{
            type: i0.Output
        }], onAdd: [{
            type: i0.Output
        }], index: [{
            type: i0.Input
        }] }); })();
        return InputGroupListComponent;
    }());
    InputGroupListComponent.propDecorators = {
        plus: [{ type: i0.Input }],
        minus: [{ type: i0.Input }],
        index: [{ type: i0.Input }],
        onRemove: [{ type: i0.Output }],
        onAdd: [{ type: i0.Output }]
    };

    var InputGroupListContainerDirective = /** @class */ (function () {
        function InputGroupListContainerDirective() {
        }
        InputGroupListContainerDirective.prototype.ngAfterContentInit = function () {
            var _this = this;
            this.listProjections.map(function (element) {
                if (element !== _this.listProjections.last) {
                    setTimeout(function () {
                        element.plus = false;
                    });
                }
            });
            this.listProjections.changes.subscribe(function (elements) {
                if (elements.length === 1) {
                    setTimeout(function () {
                        elements.first.plus = true;
                        elements.first.minus = false;
                    });
                    return;
                }
                elements.map(function (element) {
                    setTimeout(function () {
                        element.minus = true;
                    });
                    if (element !== elements.last) {
                        setTimeout(function () {
                            element.plus = false;
                        });
                    }
                    if (element === elements.last) {
                        setTimeout(function () {
                            element.plus = true;
                        });
                    }
                });
            });
        };
InputGroupListContainerDirective.ɵfac = function InputGroupListContainerDirective_Factory(t) { return new (t || InputGroupListContainerDirective)(); };
InputGroupListContainerDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: InputGroupListContainerDirective, selectors: [["", "c8yInputGroupListContainer", ""]], contentQueries: function InputGroupListContainerDirective_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, InputGroupListComponent, 4);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.listProjections = _t);
    } } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(InputGroupListContainerDirective, [{
        type: i0.Directive,
        args: [{
                selector: '[c8yInputGroupListContainer]'
            }]
    }], function () { return []; }, { listProjections: [{
            type: i0.ContentChildren,
            args: [InputGroupListComponent]
        }] }); })();
        return InputGroupListContainerDirective;
    }());
    InputGroupListContainerDirective.propDecorators = {
        listProjections: [{ type: i0.ContentChildren, args: [InputGroupListComponent,] }]
    };

    var JsonValidationPrettifierDirective = /** @class */ (function () {
        function JsonValidationPrettifierDirective(ngCtrl) {
            this.invalidJSON = new i0.EventEmitter();
            this.message = gettext('Must be a valid JSON object.');
            this.debounceTimeInMs = 1000;
            this.abstractCtrl = ngCtrl.control;
        }
        JsonValidationPrettifierDirective.prototype.ngOnInit = function () {
            var _this = this;
            this.subscription = this.abstractCtrl.valueChanges
                .pipe(operators.tap(function () { return _this.clearValidationMessage(); }), operators.debounceTime(this.debounceTimeInMs), operators.distinctUntilChanged())
                .subscribe(function (value) {
                _this.validateInputAndPrettify(value);
            });
        };
        JsonValidationPrettifierDirective.prototype.ngOnDestroy = function () {
            if (this.subscription && !this.subscription.closed) {
                this.subscription.unsubscribe();
            }
        };
        JsonValidationPrettifierDirective.prototype.validateInputAndPrettify = function (value) {
            if (value) {
                try {
                    var validJsonObject = JSON.parse(value);
                    var pretty = JSON.stringify(validJsonObject, undefined, 2);
                    this.abstractCtrl.setValue(pretty);
                }
                catch (ex) {
                    this.setErrorAndValidationMessage();
                }
            }
        };
        JsonValidationPrettifierDirective.prototype.setErrorAndValidationMessage = function () {
            this.abstractCtrl.setErrors({ invalidBodyTemplate: true });
            this.invalidJSON.emit(this.message);
        };
        JsonValidationPrettifierDirective.prototype.clearValidationMessage = function () {
            this.invalidJSON.emit(undefined);
        };
JsonValidationPrettifierDirective.ɵfac = function JsonValidationPrettifierDirective_Factory(t) { return new (t || JsonValidationPrettifierDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc13.NgControl)); };
JsonValidationPrettifierDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: JsonValidationPrettifierDirective, selectors: [["textarea", "prettyValidJson", ""]], outputs: { invalidJSON: "invalidJSON" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(JsonValidationPrettifierDirective, [{
        type: i0.Directive,
        args: [{
                selector: 'textarea[prettyValidJson]'
            }]
    }], function () { return [{ type: ɵngcc13.NgControl }]; }, { invalidJSON: [{
            type: i0.Output
        }] }); })();
        return JsonValidationPrettifierDirective;
    }());
    JsonValidationPrettifierDirective.ctorParameters = function () { return [
        { type: forms.NgControl }
    ]; };
    JsonValidationPrettifierDirective.propDecorators = {
        invalidJSON: [{ type: i0.Output }]
    };

    var TextAreaRowHeightDirective = /** @class */ (function () {
        function TextAreaRowHeightDirective(elem, renderer) {
            this.elem = elem;
            this.renderer = renderer;
            this.rows = 1;
            this.minHeightPerRow = 20;
        }
        TextAreaRowHeightDirective.prototype.ngAfterViewInit = function () {
            var convertedValue = Number(this.heightPerRow);
            if (this.heightPerRow && convertedValue && convertedValue > this.minHeightPerRow) {
                this.setHeight(this.rows * convertedValue + "px");
            }
            else {
                this.setHeight(this.rows * this.minHeightPerRow + "px");
            }
        };
        TextAreaRowHeightDirective.prototype.setHeight = function (value) {
            this.renderer.setStyle(this.elem.nativeElement, 'height', value);
        };
TextAreaRowHeightDirective.ɵfac = function TextAreaRowHeightDirective_Factory(t) { return new (t || TextAreaRowHeightDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };
TextAreaRowHeightDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: TextAreaRowHeightDirective, selectors: [["textarea", "heightPerRow", ""]], hostVars: 1, hostBindings: function TextAreaRowHeightDirective_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵhostProperty("rows", ctx.rows);
    } }, inputs: { rows: "rows", heightPerRow: "heightPerRow" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TextAreaRowHeightDirective, [{
        type: i0.Directive,
        args: [{
                selector: 'textarea[heightPerRow]'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }]; }, { rows: [{
            type: i0.Input
        }, {
            type: i0.HostBinding,
            args: ['rows']
        }], heightPerRow: [{
            type: i0.Input,
            args: ['heightPerRow']
        }] }); })();
        return TextAreaRowHeightDirective;
    }());
    TextAreaRowHeightDirective.ctorParameters = function () { return [
        { type: i0.ElementRef },
        { type: i0.Renderer2 }
    ]; };
    TextAreaRowHeightDirective.propDecorators = {
        rows: [{ type: i0.Input }, { type: i0.HostBinding, args: ['rows',] }],
        heightPerRow: [{ type: i0.Input, args: ['heightPerRow',] }]
    };

    var RequiredInputPlaceholderDirective = /** @class */ (function () {
        function RequiredInputPlaceholderDirective(el, renderer, translationService) {
            this.el = el;
            this.renderer = renderer;
            this.translationService = translationService;
            this.shouldSkipRequiredHint = false;
            this.shouldSkipRequiredHint = !!this.el.nativeElement.closest('[placeholder-no-required-hint]');
        }
        RequiredInputPlaceholderDirective.prototype.ngAfterViewChecked = function () {
            if (this.el && this.el.nativeElement && this.el.nativeElement.required !== undefined) {
                var required = this.el.nativeElement.required && !this.shouldSkipRequiredHint;
                var placeholder = this.el.nativeElement.placeholder;
                if (this.placeholder !== placeholder || this.req !== required) {
                    this.updatePlaceholder(this.getTextForPlaceholder(placeholder, required));
                }
            }
        };
        RequiredInputPlaceholderDirective.prototype.getTextForPlaceholder = function (placeholder, required) {
            if (placeholder === void 0) { placeholder = ''; }
            if (required === void 0) { required = false; }
            this.req = required;
            var requiredText = "(" + this.translationService.instant(gettext('required')) + ")";
            var requiredTextIndex = placeholder.lastIndexOf(requiredText);
            if (requiredTextIndex > 0) {
                placeholder = placeholder.slice(0, requiredTextIndex - 1);
            }
            if (requiredTextIndex === 0) {
                placeholder = '';
            }
            if (!required) {
                return placeholder;
            }
            return placeholder.trim() ? placeholder + " " + requiredText : requiredText;
        };
        RequiredInputPlaceholderDirective.prototype.updatePlaceholder = function (placeholder) {
            this.renderer.setAttribute(this.el.nativeElement, 'placeholder', placeholder);
            this.placeholder = placeholder;
        };
RequiredInputPlaceholderDirective.ɵfac = function RequiredInputPlaceholderDirective_Factory(t) { return new (t || RequiredInputPlaceholderDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.TranslateService)); };
RequiredInputPlaceholderDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: RequiredInputPlaceholderDirective, selectors: [["input", "required", ""]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(RequiredInputPlaceholderDirective, [{
        type: i0.Directive,
        args: [{
                selector: 'input[required]'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc4.TranslateService }]; }, null); })();
        return RequiredInputPlaceholderDirective;
    }());
    RequiredInputPlaceholderDirective.ctorParameters = function () { return [
        { type: i0.ElementRef },
        { type: i0.Renderer2 },
        { type: i1$1.TranslateService }
    ]; };

    var IpRangeInputListComponent = /** @class */ (function () {
        function IpRangeInputListComponent() {
        }
        Object.defineProperty(IpRangeInputListComponent.prototype, "data", {
            get: function () {
                return this.ipRangeList;
            },
            set: function (list) {
                this.ipRangeList = list;
                if (this.ipRangeList.length === 0) {
                    this.add();
                }
            },
            enumerable: false,
            configurable: true
        });
        IpRangeInputListComponent.prototype.add = function () {
            this.ipRangeList.push({ ip: '', cidr: undefined });
        };
        IpRangeInputListComponent.prototype.remove = function (index) {
            this.ipRangeList.splice(index, 1);
        };
IpRangeInputListComponent.ɵfac = function IpRangeInputListComponent_Factory(t) { return new (t || IpRangeInputListComponent)(); };
IpRangeInputListComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: IpRangeInputListComponent, selectors: [["c8y-ip-range-input-list"]], inputs: { data: "data" }, decls: 3, vars: 1, consts: [[1, "m-t-8", "m-b-8"], ["c8yInputGroupListContainer", "", 1, "list-unstyled"], ["class", "m-b-8", 4, "ngFor", "ngForOf"], [1, "m-b-8"], [3, "index", "onAdd", "onRemove"], ["type", "text", "name", "ipAddress", 1, "form-control", "m-r-4", 2, "flex-grow", "2", 3, "placeholder", "ngModel", "required", "ngModelChange"], ["ipAddress", ""], ["type", "number", "name", "cidr", 1, "form-control", 3, "min", "placeholder", "ngModel", "required", "ngModelChange"], ["cidr", ""]], template: function IpRangeInputListComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "c8y-form-group", 0);
        ɵngcc0.ɵɵelementStart(1, "ul", 1);
        ɵngcc0.ɵɵtemplate(2, IpRangeInputListComponent_li_2_Template, 8, 12, "li", 2);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.data);
    } }, directives: [FormGroupComponent, InputGroupListContainerDirective, ɵngcc6.NgForOf, InputGroupListComponent, ɵngcc13.DefaultValueAccessor, RequiredInputPlaceholderDirective, ɵngcc13.NgControlStatus, ɵngcc13.NgModel, ɵngcc13.RequiredValidator, ɵngcc13.MinValidator, ɵngcc13.NumberValueAccessor, MinValidationDirective], pipes: [C8yTranslatePipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(IpRangeInputListComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-ip-range-input-list',
                template: "<c8y-form-group class=\"m-t-8 m-b-8\">\n  <ul c8yInputGroupListContainer class=\"list-unstyled\">\n    <li class=\"m-b-8\" *ngFor=\"let item of data; let i = index\">\n      <c8y-input-group-list [index]=\"i\" (onAdd)=\"add()\" (onRemove)=\"remove($event)\">\n        <input\n          type=\"text\"\n          name=\"ipAddress\"\n          class=\"form-control m-r-4\"\n          placeholder=\"{{ 'IP range start, e.g.' | translate }} 192.168.0.1\"\n          style=\"flex-grow: 2;\"\n          [(ngModel)]=\"item.ip\"\n          [required]=\"true\"\n          #ipAddress\n        />\n        <input\n          type=\"number\"\n          name=\"cidr\"\n          [min]=\"0\"\n          class=\"form-control\"\n          placeholder=\"{{ 'e.g.' | translate }} 20\"\n          [(ngModel)]=\"item.cidr\"\n          [required]=\"true\"\n          #cidr\n        />\n      </c8y-input-group-list>\n    </li>\n  </ul>\n</c8y-form-group>\n"
            }]
    }], function () { return []; }, { data: [{
            type: i0.Input
        }] }); })();
        return IpRangeInputListComponent;
    }());
    IpRangeInputListComponent.propDecorators = {
        data: [{ type: i0.Input }]
    };

    var FilterInputComponent = /** @class */ (function () {
        function FilterInputComponent() {
            this.onSearch = new i0.EventEmitter();
            this.filterChange$ = new rxjs.Subject();
            this.filterTerm = '';
            this.CARRIAGE_RETURN_KEY = 13;
            this.CARRIAGE_RETURN_CODE = 'Enter';
        }
        FilterInputComponent.prototype.ngOnInit = function () {
            var _this = this;
            this.reset();
            this.filterChange$
                .pipe(operators.debounce(function (event) { return event.code === _this.CARRIAGE_RETURN_CODE || event.keyCode === _this.CARRIAGE_RETURN_KEY
                ? rxjs.timer(10)
                : rxjs.timer(300); }), operators.map(function (e) { return e.target.value; }), operators.distinctUntilChanged())
                .subscribe(function (filterTerm) {
                _this.filterTerm = filterTerm;
                _this.onSearch.emit(filterTerm);
            });
        };
        FilterInputComponent.prototype.reset = function () {
            this.filterTerm = '';
            this.onSearch.emit('');
        };
        FilterInputComponent.prototype.ngOnDestroy = function () {
            this.filterChange$.complete();
        };
FilterInputComponent.ɵfac = function FilterInputComponent_Factory(t) { return new (t || FilterInputComponent)(); };
FilterInputComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: FilterInputComponent, selectors: [["c8y-filter"]], inputs: { icon: "icon" }, outputs: { onSearch: "onSearch" }, decls: 6, vars: 5, consts: [[1, "input-group", "input-group-search"], ["type", "text", 1, "form-control", 3, "placeholder", "value", "keyup"], [1, "input-group-btn"], [1, "btn", "btn-clean", 3, "click"], [3, "c8yIcon"]], template: function FilterInputComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "input", 1);
        ɵngcc0.ɵɵlistener("keyup", function FilterInputComponent_Template_input_keyup_1_listener($event) { return ctx.filterChange$.next($event); });
        ɵngcc0.ɵɵpipe(2, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(3, "span", 2);
        ɵngcc0.ɵɵelementStart(4, "button", 3);
        ɵngcc0.ɵɵlistener("click", function FilterInputComponent_Template_button_click_4_listener() { return ctx.reset(); });
        ɵngcc0.ɵɵelement(5, "i", 4);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵpropertyInterpolate("placeholder", ɵngcc0.ɵɵpipeBind1(2, 3, "Filter\u2026"));
        ɵngcc0.ɵɵproperty("value", ctx.filterTerm);
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵproperty("c8yIcon", ctx.filterTerm.length === 0 ? "search" : "close");
    } }, directives: [IconDirective], pipes: [C8yTranslatePipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FilterInputComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-filter',
                template: "<div class=\"input-group input-group-search\">\n  <input\n    class=\"form-control\"\n    placeholder=\"{{ 'Filter\u2026' | translate }}\"\n    type=\"text\"\n    [value]=\"filterTerm\"\n    (keyup)=\"filterChange$.next($event)\"\n  />\n  <span class=\"input-group-btn\">\n    <button class=\"btn btn-clean\" (click)=\"reset()\">\n      <i [c8yIcon]=\"filterTerm.length === 0 ? 'search' : 'close'\"></i>\n    </button>\n  </span>\n</div>\n"
            }]
    }], function () { return []; }, { onSearch: [{
            type: i0.Output
        }], icon: [{
            type: i0.Input
        }] }); })();
        return FilterInputComponent;
    }());
    FilterInputComponent.propDecorators = {
        icon: [{ type: i0.Input }],
        onSearch: [{ type: i0.Output }]
    };

    /**
     * A directive that adds the `emails` validator to controls marked with the
     * `emails` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.
     *
     * **Example**
     *
     * ```html
     * <input type="text" name="emails" ngModel emails>
     * <input type="text" name="emails" ngModel emails="true">
     * <input type="text" name="emails" ngModel [emails]="true">
     * ```
     */
    var EmailsValidatorDirective = /** @class */ (function () {
        function EmailsValidatorDirective() {
            this._enabled = false;
            this.separator = ',';
        }
        Object.defineProperty(EmailsValidatorDirective.prototype, "emails", {
            /**
             * Tracks changes to the emails attribute bound to this directive.
             */
            set: function (value) {
                this._enabled = value === '' || value === true || value === 'true';
                if (this._onChange) {
                    this._onChange();
                }
            },
            enumerable: false,
            configurable: true
        });
        /**
         * Method that validates whether email addresses are valid.
         * Returns the validation result if enabled, otherwise null.
         */
        EmailsValidatorDirective.prototype.validate = function (control) {
            if (!this._enabled) {
                return null;
            }
            var value = control.value || '';
            var emails = value.split(this.separator).map(function (email) { return email.trim(); });
            var invalid = emails.some(function (email) { return forms.Validators.email(new forms.FormControl(email)); });
            return invalid ? { emails: true } : null;
        };
        /**
         * Registers a callback function to call when the validator inputs change.
         */
        EmailsValidatorDirective.prototype.registerOnValidatorChange = function (fn) {
            this._onChange = fn;
        };
EmailsValidatorDirective.ɵfac = function EmailsValidatorDirective_Factory(t) { return new (t || EmailsValidatorDirective)(); };
EmailsValidatorDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: EmailsValidatorDirective, selectors: [["", "emails", "", "formControlName", ""], ["", "emails", "", "formControl", ""], ["", "emails", "", "ngModel", ""]], inputs: { emails: "emails" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: forms.NG_VALIDATORS, useExisting: EmailsValidatorDirective, multi: true }])] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(EmailsValidatorDirective, [{
        type: i0.Directive,
        args: [{
                selector: '[emails][formControlName],[emails][formControl],[emails][ngModel]',
                providers: [{ provide: forms.NG_VALIDATORS, useExisting: EmailsValidatorDirective, multi: true }]
            }]
    }], function () { return []; }, { emails: [{
            type: i0.Input
        }] }); })();
        return EmailsValidatorDirective;
    }());
    EmailsValidatorDirective.propDecorators = {
        emails: [{ type: i0.Input }]
    };

    var RangeDirective = /** @class */ (function () {
        function RangeDirective(elementRef) {
            this.elementRef = elementRef;
        }
RangeDirective.ɵfac = function RangeDirective_Factory(t) { return new (t || RangeDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
RangeDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: RangeDirective, selectors: [["input", "type", "range"]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(RangeDirective, [{
        type: i0.Directive,
        args: [{
                selector: 'input[type="range"]'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();
        return RangeDirective;
    }());
    RangeDirective.ctorParameters = function () { return [
        { type: i0.ElementRef }
    ]; };

    /**
     * An component which renders a range slider in Cumulocity layout. You need
     * to wrap the default range input in this component.
     *
     * Example:
     * ```
     * <c8y-range>
     *   <input id="range" type="range" min="0" max="100000" value="0" step="1">
     * </c8y-range>
     * ```
     */
    var RangeComponent = /** @class */ (function () {
        function RangeComponent() {
            var _this = this;
            this.changeEventListener = function () { return _this.setValue(); };
        }
        RangeComponent.prototype.ngAfterContentInit = function () {
            this.setValue();
            this.range.elementRef.nativeElement.addEventListener('input', this.changeEventListener);
        };
        RangeComponent.prototype.ngOnDestroy = function () {
            this.range.elementRef.nativeElement.removeEventListener('input', this.changeEventListener);
        };
        RangeComponent.prototype.setValue = function () {
            var range = this.range.elementRef.nativeElement;
            var newValue = Number(((range.value - range.min) * 100) / (range.max - range.min));
            var newPosition = 12 - newValue * 0.24;
            this.value = range.value;
            this.left = "calc(" + newValue + "% + (" + newPosition + "px))";
        };
RangeComponent.ɵfac = function RangeComponent_Factory(t) { return new (t || RangeComponent)(); };
RangeComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: RangeComponent, selectors: [["c8y-range"]], contentQueries: function RangeComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, RangeDirective, 7);
        ɵngcc0.ɵɵcontentQuery(dirIndex, _c28, 7);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.range = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.rangeValue = _t.first);
    } }, ngContentSelectors: _c1, decls: 5, vars: 7, consts: [[1, "range-wrap"], [1, "range-value"], [4, "ngIf"], [4, "ngTemplateOutlet"]], template: function RangeComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵtemplate(2, RangeComponent_span_2_Template, 2, 1, "span", 2);
        ɵngcc0.ɵɵtemplate(3, RangeComponent_ng_container_3_Template, 1, 0, "ng-container", 3);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵprojection(4);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵstyleMapInterpolate1("--track-width: ", ctx.left, "");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵstyleProp("left", ctx.left);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.rangeValue);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx.rangeValue);
    } }, directives: [ɵngcc6.NgIf, ɵngcc6.NgTemplateOutlet], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(RangeComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-range',
                template: "<div class=\"range-wrap\" style=\"--track-width: {{left}}\">\n  <div class=\"range-value\" [style.left]=\"left\">\n    <span *ngIf=\"!rangeValue\">{{ value }}</span>\n    <ng-container *ngTemplateOutlet=\"rangeValue\"></ng-container>\n  </div>\n  <ng-content></ng-content>\n</div>\n"
            }]
    }], function () { return []; }, { range: [{
            type: i0.ContentChild,
            args: [RangeDirective, { static: true }]
        }], rangeValue: [{
            type: i0.ContentChild,
            args: ['c8yRangeValue', { static: true }]
        }] }); })();
        return RangeComponent;
    }());
    RangeComponent.propDecorators = {
        range: [{ type: i0.ContentChild, args: [RangeDirective, { static: true },] }],
        rangeValue: [{ type: i0.ContentChild, args: ['c8yRangeValue', { static: true },] }]
    };

    /**
     * @exports FormGroupComponent A component that allows to group an input and can display warnings and errors.
     * @exports PhoneValidationDirective Allows to validate international phone numbers.
     * @exports NewsletterDirective Allows to subscribe to the newsletter.
     * @exports DefaultValidationDirective Allows to validate some predefined patterns.
     * @exports MessageDirective A directive that allows to define messages.
     * @exports MessagesComponent Allows to display error messages.
     * @exports RangeComponent A component that allows to display a styled range slider.
     */
    var FormsModule = /** @class */ (function () {
        function FormsModule() {
        }
FormsModule.ɵfac = function FormsModule_Factory(t) { return new (t || FormsModule)(); };
FormsModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: FormsModule });
FormsModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule, forms.FormsModule], ɵngcc13.FormsModule] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FormsModule, [{
        type: i0.NgModule,
        args: [{
                imports: [CommonModule, forms.FormsModule],
                exports: [
                    PhoneValidationDirective,
                    DefaultValidationDirective,
                    MinValidationDirective,
                    MaxValidationDirective,
                    forms.FormsModule,
                    FormGroupComponent,
                    MessageDirective,
                    MessagesComponent,
                    InputGroupListComponent,
                    InputGroupListContainerDirective,
                    JsonValidationPrettifierDirective,
                    TextAreaRowHeightDirective,
                    RequiredInputPlaceholderDirective,
                    IpRangeInputListComponent,
                    FilterInputComponent,
                    EmailsValidatorDirective,
                    RangeDirective,
                    RangeComponent
                ],
                declarations: [
                    PhoneValidationDirective,
                    DefaultValidationDirective,
                    MinValidationDirective,
                    MaxValidationDirective,
                    FormGroupComponent,
                    MessageDirective,
                    MessagesComponent,
                    InputGroupListComponent,
                    InputGroupListContainerDirective,
                    JsonValidationPrettifierDirective,
                    TextAreaRowHeightDirective,
                    RequiredInputPlaceholderDirective,
                    IpRangeInputListComponent,
                    FilterInputComponent,
                    EmailsValidatorDirective,
                    RangeDirective,
                    RangeComponent
                ]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(FormsModule, { declarations: [PhoneValidationDirective, DefaultValidationDirective, MinValidationDirective, MaxValidationDirective, FormGroupComponent, MessageDirective, MessagesComponent, InputGroupListComponent, InputGroupListContainerDirective, JsonValidationPrettifierDirective, TextAreaRowHeightDirective, RequiredInputPlaceholderDirective, IpRangeInputListComponent, FilterInputComponent, EmailsValidatorDirective, RangeDirective, RangeComponent], imports: [CommonModule, ɵngcc13.FormsModule], exports: [PhoneValidationDirective, DefaultValidationDirective, MinValidationDirective, MaxValidationDirective, ɵngcc13.FormsModule, FormGroupComponent, MessageDirective, MessagesComponent, InputGroupListComponent, InputGroupListContainerDirective, JsonValidationPrettifierDirective, TextAreaRowHeightDirective, RequiredInputPlaceholderDirective, IpRangeInputListComponent, FilterInputComponent, EmailsValidatorDirective, RangeDirective, RangeComponent] }); })();
        return FormsModule;
    }());

    var TotpChallengeComponent = /** @class */ (function () {
        function TotpChallengeComponent(loginService, users, alert) {
            this.loginService = loginService;
            this.users = users;
            this.alert = alert;
            /**
             * Calls the verify endpoint if set to true (default true)
             */
            this.verify = true;
            /**
             * Emits the token on success.
             */
            this.onSuccess = new i0.EventEmitter();
            this.model = {
                token: ''
            };
            this.loading = false;
            this.hasError = false;
        }
        TotpChallengeComponent.prototype.verifyCode = function () {
            return __awaiter(this, void 0, void 0, function () {
                var e_1;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            _a.trys.push([0, 3, , 4]);
                            this.loading = true;
                            this.hasError = false;
                            if (!this.verify) return [3 /*break*/, 2];
                            return [4 /*yield*/, this.users.verifyTotpCode(this.model.token)];
                        case 1:
                            _a.sent();
                            _a.label = 2;
                        case 2:
                            this.onSuccess.emit(this.model.token);
                            return [3 /*break*/, 4];
                        case 3:
                            e_1 = _a.sent();
                            this.hasError = true;
                            this.alert.removeLastDanger();
                            this.loading = false;
                            return [3 /*break*/, 4];
                        case 4: return [2 /*return*/];
                    }
                });
            });
        };
TotpChallengeComponent.ɵfac = function TotpChallengeComponent_Factory(t) { return new (t || TotpChallengeComponent)(ɵngcc0.ɵɵdirectiveInject(LoginService), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.UserService), ɵngcc0.ɵɵdirectiveInject(AlertService)); };
TotpChallengeComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: TotpChallengeComponent, selectors: [["c8y-totp-challenge"]], inputs: { verify: "verify", loading: "loading", hasError: "hasError" }, outputs: { onSuccess: "onSuccess" }, features: [ɵngcc0.ɵɵProvidersFeature([], [{ provide: forms.ControlContainer, useExisting: forms.NgForm }])], decls: 12, vars: 11, consts: [["role", "form", "novalidate", "", 1, "loginForm", 3, "ngSubmit"], ["totpForm", "ngForm"], [3, "hasError", "novalidation", "ngClass"], ["translate", "", "for", "totpToken"], ["id", "totpToken", "name", "totpToken", "type", "text", "autocapitalize", "off", "autocorrect", "off", "autocomplete", "off", "required", "", 1, "form-control", 3, "ngModel", "placeholder", "ngModelChange"], ["translate", "", 4, "ngIf"], ["id", "helpinput", "class", "help-block", "translate", "", 4, "ngIf"], ["type", "submit", "class", "btn btn-primary btn-lg btn-block form-group", 3, "title", "disabled", 4, "ngIf"], ["type", "submit", "class", "btn btn-primary btn-lg btn-block btn-pending", 3, "title", 4, "ngIf"], ["translate", ""], ["id", "helpinput", "translate", "", 1, "help-block"], ["type", "submit", 1, "btn", "btn-primary", "btn-lg", "btn-block", "form-group", 3, "title", "disabled"], ["type", "submit", 1, "btn", "btn-primary", "btn-lg", "btn-block", "btn-pending", 3, "title"]], template: function TotpChallengeComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "form", 0, 1);
        ɵngcc0.ɵɵlistener("ngSubmit", function TotpChallengeComponent_Template_form_ngSubmit_0_listener() { return ctx.verifyCode(); });
        ɵngcc0.ɵɵelementStart(2, "c8y-form-group", 2);
        ɵngcc0.ɵɵelementStart(3, "label", 3);
        ɵngcc0.ɵɵtext(4, " Verification code ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(5, "input", 4);
        ɵngcc0.ɵɵlistener("ngModelChange", function TotpChallengeComponent_Template_input_ngModelChange_5_listener($event) { return ctx.model.token = $event; });
        ɵngcc0.ɵɵpipe(6, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(7, "c8y-messages");
        ɵngcc0.ɵɵtemplate(8, TotpChallengeComponent_c8y_message_8_Template, 2, 0, "c8y-message", 5);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(9, TotpChallengeComponent_p_9_Template, 2, 0, "p", 6);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(10, TotpChallengeComponent_button_10_Template, 4, 7, "button", 7);
        ɵngcc0.ɵɵtemplate(11, TotpChallengeComponent_button_11_Template, 4, 6, "button", 8);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("hasError", ctx.hasError)("novalidation", true)("ngClass", ctx.hasError ? "p-b-24" : "");
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵpropertyInterpolate1("placeholder", "", ɵngcc0.ɵɵpipeBind1(6, 9, "e.g."), " 624327");
        ɵngcc0.ɵɵproperty("ngModel", ctx.model.token);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", ctx.hasError);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.hasError);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.loading);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.loading);
    } }, directives: [ɵngcc13.ɵNgNoValidate, ɵngcc13.NgControlStatusGroup, ɵngcc13.NgForm, FormGroupComponent, ɵngcc6.NgClass, C8yTranslateDirective, RequiredInputPlaceholderDirective, ɵngcc13.DefaultValueAccessor, ɵngcc13.RequiredValidator, ɵngcc13.NgControlStatus, ɵngcc13.NgModel, MessagesComponent, ɵngcc6.NgIf, MessageDirective], pipes: [C8yTranslatePipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TotpChallengeComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-totp-challenge',
                template: "<form #totpForm=\"ngForm\" role=\"form\" class=\"loginForm\" (ngSubmit)=\"verifyCode()\" novalidate>\n  <c8y-form-group [hasError]=\"hasError\" [novalidation]=\"true\" [ngClass]=\"hasError ? 'p-b-24' : ''\">\n    <label translate for=\"totpToken\">\n      Verification code\n    </label>\n\n    <input\n      id=\"totpToken\"\n      [(ngModel)]=\"model.token\"\n      name=\"totpToken\"\n      type=\"text\"\n      autocapitalize=\"off\"\n      autocorrect=\"off\"\n      autocomplete=\"off\"\n      class=\"form-control\"\n      placeholder=\"{{ 'e.g.' | translate }} 624327\"\n      required\n    />\n\n    <c8y-messages>\n      <c8y-message *ngIf=\"hasError\" translate>\n        Invalid verification code. In case of key loss, please contact your platform administrator.\n      </c8y-message>\n    </c8y-messages>\n    <p id=\"helpinput\" *ngIf=\"!hasError\" class=\"help-block\" translate>\n      In case of key loss, please contact your platform administrator.\n    </p>\n  </c8y-form-group>\n  <button *ngIf=\"!loading\"\n    title=\"{{ 'Verify' | translate }}\"\n    [disabled]=\"!totpForm.form.valid\"\n    type=\"submit\"\n    class=\"btn btn-primary btn-lg btn-block form-group\"\n  >\n    {{ 'Verify' | translate }}\n  </button>\n\n  <button *ngIf=\"loading\"\n    title=\"{{ 'Verifying\u2026' | translate }}\"\n    type=\"submit\"\n    class=\"btn btn-primary btn-lg btn-block btn-pending\"\n  >\n    {{ 'Verifying\u2026' | translate }}\n  </button>\n</form>\n",
                viewProviders: [{ provide: forms.ControlContainer, useExisting: forms.NgForm }]
            }]
    }], function () { return [{ type: LoginService }, { type: ɵngcc3.UserService }, { type: AlertService }]; }, { verify: [{
            type: i0.Input
        }], onSuccess: [{
            type: i0.Output
        }], loading: [{
            type: i0.Input
        }], hasError: [{
            type: i0.Input
        }] }); })();
        return TotpChallengeComponent;
    }());
    TotpChallengeComponent.ctorParameters = function () { return [
        { type: LoginService },
        { type: client.UserService },
        { type: AlertService }
    ]; };
    TotpChallengeComponent.propDecorators = {
        verify: [{ type: i0.Input }],
        onSuccess: [{ type: i0.Output }],
        loading: [{ type: i0.Input }],
        hasError: [{ type: i0.Input }]
    };

    var SmsChallengeComponent = /** @class */ (function () {
        function SmsChallengeComponent(loginService, users, alert) {
            this.loginService = loginService;
            this.users = users;
            this.alert = alert;
            this.onCancel = new i0.EventEmitter();
            this.model = {
                smsToken: ''
            };
            this.isLoading = false;
            this.resendTfa = '0';
        }
        SmsChallengeComponent.prototype.verifyTFACode = function () {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            this.isLoading = true;
                            if (!this.useOAuthInternal()) return [3 /*break*/, 2];
                            return [4 /*yield*/, this.verifyCodeWithOauth()];
                        case 1:
                            _a.sent();
                            return [3 /*break*/, 4];
                        case 2: return [4 /*yield*/, this.verifyCodeWithBasicAuth()];
                        case 3:
                            _a.sent();
                            _a.label = 4;
                        case 4:
                            this.isLoading = false;
                            return [2 /*return*/];
                    }
                });
            });
        };
        SmsChallengeComponent.prototype.resendTFASms = function () {
            return __awaiter(this, void 0, void 0, function () {
                var e_1;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            _a.trys.push([0, 2, 3, 4]);
                            this.isLoading = true;
                            return [4 /*yield*/, this.users.verifyTFACode(this.resendTfa)];
                        case 1:
                            _a.sent();
                            return [3 /*break*/, 4];
                        case 2:
                            e_1 = _a.sent();
                            if (e_1.res.status === 403) {
                                this.loginService.cleanMessages();
                                this.loginService.addSuccessMessage('resend_sms');
                            }
                            else {
                                this.alert.addServerFailure(e_1);
                            }
                            return [3 /*break*/, 4];
                        case 3:
                            this.isLoading = false;
                            return [7 /*endfinally*/];
                        case 4: return [2 /*return*/];
                    }
                });
            });
        };
        SmsChallengeComponent.prototype.useOAuthInternal = function () {
            return this.loginService.isPasswordGrantLogin(this.credentials);
        };
        SmsChallengeComponent.prototype.verifyCodeWithOauth = function () {
            return __awaiter(this, void 0, void 0, function () {
                var credentials, e_2, resStatus;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            _a.trys.push([0, 4, , 5]);
                            credentials = this.credentials;
                            return [4 /*yield*/, this.loginService.switchLoginMode(Object.assign(Object.assign({}, credentials), { tfa: this.model.smsToken }))];
                        case 1:
                            _a.sent();
                            return [4 /*yield*/, this.loginService.verifyAppAccess()];
                        case 2:
                            _a.sent();
                            return [4 /*yield*/, this.loginService.authFulfilled()];
                        case 3:
                            _a.sent();
                            return [3 /*break*/, 5];
                        case 4:
                            e_2 = _a.sent();
                            resStatus = e_2.res && e_2.res.status;
                            if (resStatus === 401) {
                                // it is assumed that the user and password are correct so it must be the tfa code
                                this.alert.danger(gettext('Invalid code'));
                            }
                            else {
                                this.alert.addServerFailure(e_2);
                            }
                            return [3 /*break*/, 5];
                        case 5: return [2 /*return*/];
                    }
                });
            });
        };
        SmsChallengeComponent.prototype.verifyCodeWithBasicAuth = function () {
            return __awaiter(this, void 0, void 0, function () {
                var res, tfaToken, e_3, resStatus;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            _a.trys.push([0, 2, , 3]);
                            return [4 /*yield*/, this.users.verifyTFACode(this.model.smsToken)];
                        case 1:
                            res = (_a.sent()).res;
                            tfaToken = res.headers.get('tfatoken');
                            this.credentials.tfa = tfaToken;
                            this.loginWithTFA(tfaToken);
                            return [3 /*break*/, 3];
                        case 2:
                            e_3 = _a.sent();
                            resStatus = e_3.res && e_3.res.status;
                            // BE returns 403 in case of invalid tfa code
                            if (resStatus === 403) {
                                this.alert.danger(gettext('Invalid code'));
                            }
                            else {
                                this.alert.addServerFailure(e_3);
                            }
                            return [3 /*break*/, 3];
                        case 3: return [2 /*return*/];
                    }
                });
            });
        };
        SmsChallengeComponent.prototype.loginWithTFA = function (tfaToken) {
            return __awaiter(this, void 0, void 0, function () {
                var e_4;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            _a.trys.push([0, 2, , 3]);
                            return [4 /*yield*/, this.loginService.login(this.loginService.useBasicAuth({ tfa: tfaToken }), this.credentials)];
                        case 1:
                            _a.sent();
                            this.loginService.saveTFAToken(tfaToken, sessionStorage);
                            if (this.loginService.rememberMe) {
                                this.loginService.saveTFAToken(tfaToken, localStorage);
                            }
                            return [3 /*break*/, 3];
                        case 2:
                            e_4 = _a.sent();
                            this.alert.addServerFailure(e_4);
                            return [3 /*break*/, 3];
                        case 3: return [2 /*return*/];
                    }
                });
            });
        };
SmsChallengeComponent.ɵfac = function SmsChallengeComponent_Factory(t) { return new (t || SmsChallengeComponent)(ɵngcc0.ɵɵdirectiveInject(LoginService), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.UserService), ɵngcc0.ɵɵdirectiveInject(AlertService)); };
SmsChallengeComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: SmsChallengeComponent, selectors: [["c8y-sms-challenge"]], inputs: { credentials: "credentials" }, outputs: { onCancel: "onCancel" }, decls: 21, vars: 18, consts: [["role", "form", "novalidate", "", 1, "loginForm", 3, "ngSubmit"], ["twoFactorForm", "ngForm"], ["translate", "", 1, "legend", "form-block", "center"], ["translate", ""], ["type", "text", "name", "sms_token", "autocapitalize", "off", "autocorrect", "off", "required", "", 1, "form-control", 3, "ngModel", "placeholder", "ngModelChange"], ["sms_token", "ngModel"], ["class", "help-block", "translate", "", 4, "ngIf"], ["type", "submit", "translate", "", 1, "btn", "btn-primary", "btn-lg", "btn-block", "form-group", 3, "title", "disabled"], [1, "d-flex", "m-t-8"], ["translate", "", 1, "small", "pointer", "m-r-auto", 3, "title", "ngClass", "click"], ["translate", "", 1, "small", "pointer", "m-l-auto", 3, "title", "click"], ["translate", "", 1, "help-block"]], template: function SmsChallengeComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "form", 0, 1);
        ɵngcc0.ɵɵlistener("ngSubmit", function SmsChallengeComponent_Template_form_ngSubmit_0_listener() { return ctx.verifyTFACode(); });
        ɵngcc0.ɵɵelementStart(2, "div", 2);
        ɵngcc0.ɵɵtext(3, " Two-factor authentication ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(4, "c8y-form-group");
        ɵngcc0.ɵɵelementStart(5, "label", 3);
        ɵngcc0.ɵɵtext(6, "Verification code");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(7, "input", 4, 5);
        ɵngcc0.ɵɵlistener("ngModelChange", function SmsChallengeComponent_Template_input_ngModelChange_7_listener($event) { return ctx.model.smsToken = $event; });
        ɵngcc0.ɵɵpipe(9, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(10, SmsChallengeComponent_p_10_Template, 2, 0, "p", 6);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(11, "button", 7);
        ɵngcc0.ɵɵpipe(12, "translate");
        ɵngcc0.ɵɵtext(13, " Verify ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(14, "div", 8);
        ɵngcc0.ɵɵelementStart(15, "a", 9);
        ɵngcc0.ɵɵlistener("click", function SmsChallengeComponent_Template_a_click_15_listener() { return ctx.resendTFASms(); });
        ɵngcc0.ɵɵpipe(16, "translate");
        ɵngcc0.ɵɵtext(17, " Send new code ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(18, "a", 10);
        ɵngcc0.ɵɵlistener("click", function SmsChallengeComponent_Template_a_click_18_listener() { return ctx.onCancel.emit(); });
        ɵngcc0.ɵɵpipe(19, "translate");
        ɵngcc0.ɵɵtext(20, " Log in ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        var _r0 = ɵngcc0.ɵɵreference(1);
        ɵngcc0.ɵɵadvance(7);
        ɵngcc0.ɵɵpropertyInterpolate1("placeholder", "", ɵngcc0.ɵɵpipeBind1(9, 8, "e.g."), " 624327");
        ɵngcc0.ɵɵproperty("ngModel", ctx.model.smsToken);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", !_r0.form.valid || ctx.isLoading);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(12, 10, "Verify"));
        ɵngcc0.ɵɵproperty("disabled", !_r0.form.valid || ctx.isLoading);
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(16, 12, "Send new code"));
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(16, _c29, ctx.isLoading));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(19, 14, "Log in"));
    } }, directives: [ɵngcc13.ɵNgNoValidate, ɵngcc13.NgControlStatusGroup, ɵngcc13.NgForm, C8yTranslateDirective, FormGroupComponent, RequiredInputPlaceholderDirective, ɵngcc13.DefaultValueAccessor, ɵngcc13.RequiredValidator, ɵngcc13.NgControlStatus, ɵngcc13.NgModel, ɵngcc6.NgIf, ɵngcc6.NgClass], pipes: [C8yTranslatePipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SmsChallengeComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-sms-challenge',
                template: "<form #twoFactorForm=\"ngForm\" role=\"form\" class=\"loginForm\" (ngSubmit)=\"verifyTFACode()\" novalidate>\n  <div class=\"legend form-block center\" translate>\n    Two-factor authentication\n  </div>\n\n  <c8y-form-group>\n    <label translate>Verification code</label>\n    <input\n      [(ngModel)]=\"model.smsToken\"\n      #sms_token=\"ngModel\"\n      type=\"text\"\n      name=\"sms_token\"\n      autocapitalize=\"off\"\n      autocorrect=\"off\"\n      class=\"form-control\"\n      placeholder=\"{{ 'e.g.' | translate }} 624327\"\n      required\n    />\n    <p *ngIf=\"!twoFactorForm.form.valid || isLoading \" class=\"help-block\" translate>\n      Insert the code received via SMS.\n    </p>\n  </c8y-form-group>\n\n  <button\n    title=\"{{ 'Verify' | translate }}\"\n    [disabled]=\"!twoFactorForm.form.valid || isLoading\"\n    type=\"submit\"\n    class=\"btn btn-primary btn-lg btn-block form-group\"\n    translate\n  >\n    Verify\n  </button>\n\n  <div class=\"d-flex m-t-8\">\n    <a\n      title=\"{{ 'Send new code' | translate }}\"\n      [ngClass]=\"{ disabled: isLoading }\"\n      class=\"small pointer m-r-auto\"\n      (click)=\"resendTFASms()\"\n      translate\n    >\n      Send new code\n    </a>\n    <a\n      title=\"{{ 'Log in' | translate }}\"\n      class=\"small pointer m-l-auto\"\n      (click)=\"onCancel.emit()\"\n      translate\n    >\n      Log in\n    </a>\n  </div>\n</form>\n"
            }]
    }], function () { return [{ type: LoginService }, { type: ɵngcc3.UserService }, { type: AlertService }]; }, { onCancel: [{
            type: i0.Output
        }], credentials: [{
            type: i0.Input
        }] }); })();
        return SmsChallengeComponent;
    }());
    SmsChallengeComponent.ctorParameters = function () { return [
        { type: LoginService },
        { type: client.UserService },
        { type: AlertService }
    ]; };
    SmsChallengeComponent.propDecorators = {
        credentials: [{ type: i0.Input }],
        onCancel: [{ type: i0.Output }]
    };

    var TotpSetupComponent = /** @class */ (function () {
        function TotpSetupComponent(user, alert) {
            this.user = user;
            this.alert = alert;
        }
        Object.defineProperty(TotpSetupComponent.prototype, "qrCodeImage", {
            get: function () {
                return this.totpSecret ? this.totpSecret.secretQrUrl : '';
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TotpSetupComponent.prototype, "secret", {
            get: function () {
                return this.totpSecret ? this.totpSecret.rawSecret : '';
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TotpSetupComponent.prototype, "qrData", {
            get: function () {
                // TODO: waiting for BE:, now we need extract it from secretQrUrl
                // https://cumulocity.atlassian.net/browse/MTM-36387
                // return this.totpSecret ? this.totpSecret.qrData : '';
                var otpAuth = this.qrCodeImage.split('chl=')[1];
                if (!otpAuth) {
                    this.alert.danger(gettext('Failed to generate a QR code.'));
                    return '';
                }
                return decodeURIComponent(otpAuth);
            },
            enumerable: false,
            configurable: true
        });
        TotpSetupComponent.prototype.ngOnInit = function () {
            return __awaiter(this, void 0, void 0, function () {
                var data, ex_1;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            _a.trys.push([0, 2, , 3]);
                            return [4 /*yield*/, this.user.generateTotpSecret()];
                        case 1:
                            data = (_a.sent()).data;
                            this.totpSecret = data;
                            return [3 /*break*/, 3];
                        case 2:
                            ex_1 = _a.sent();
                            this.alert.addServerFailure(ex_1);
                            return [3 /*break*/, 3];
                        case 3: return [2 /*return*/];
                    }
                });
            });
        };
TotpSetupComponent.ɵfac = function TotpSetupComponent_Factory(t) { return new (t || TotpSetupComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc3.UserService), ɵngcc0.ɵɵdirectiveInject(AlertService)); };
TotpSetupComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: TotpSetupComponent, selectors: [["c8y-totp-setup"]], decls: 6, vars: 2, consts: [[1, "text-center"], ["translate", "", 1, "lead", "m-b-16"], [3, "width", "qrdata", "cssClass", "errorCorrectionLevel", 4, "ngIf"], [1, "text-center", "text-muted"], [3, "width", "qrdata", "cssClass", "errorCorrectionLevel"]], template: function TotpSetupComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "p", 1);
        ɵngcc0.ɵɵtext(2, " Scan this QR code with your smartphone using the Google Authenticator app. ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(3, TotpSetupComponent_qrcode_3_Template, 1, 4, "qrcode", 2);
        ɵngcc0.ɵɵelementStart(4, "p", 3);
        ɵngcc0.ɵɵtext(5);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", ctx.totpSecret);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate1(" ", ctx.secret, " ");
    } }, directives: [C8yTranslateDirective, ɵngcc6.NgIf, ɵngcc14.QRCodeComponent], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TotpSetupComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-totp-setup',
                template: "<div class=\"text-center\">\n  <p\n    class=\"lead m-b-16\"\n    translate\n  >\n    Scan this QR code with your smartphone using the Google Authenticator app.\n  </p>\n\n\n  <qrcode\n    *ngIf=\"totpSecret\"\n    [width]=\"300\"\n    [qrdata]=\"qrData\"\n    [cssClass]=\"'m-b-16'\"\n    [errorCorrectionLevel]=\"'M'\"\n  ></qrcode>\n  <p class=\"text-center text-muted\">\n    {{secret}}\n  </p>\n</div>\n"
            }]
    }], function () { return [{ type: ɵngcc3.UserService }, { type: AlertService }]; }, null); })();
        return TotpSetupComponent;
    }());
    TotpSetupComponent.ctorParameters = function () { return [
        { type: client.UserService },
        { type: AlertService }
    ]; };

    exports.LoginViews = void 0;
    (function (LoginViews) {
        LoginViews[LoginViews["None"] = 0] = "None";
        LoginViews[LoginViews["Credentials"] = 1] = "Credentials";
        LoginViews[LoginViews["RecoverPassword"] = 2] = "RecoverPassword";
        LoginViews[LoginViews["SmsChallenge"] = 3] = "SmsChallenge";
        LoginViews[LoginViews["ChangePassword"] = 4] = "ChangePassword";
        LoginViews[LoginViews["TotpChallenge"] = 5] = "TotpChallenge";
        LoginViews[LoginViews["TotpSetup"] = 6] = "TotpSetup";
        LoginViews[LoginViews["ProvidePhoneNumber"] = 7] = "ProvidePhoneNumber";
        LoginViews[LoginViews["TenantIdSetup"] = 8] = "TenantIdSetup";
    })(exports.LoginViews || (exports.LoginViews = {}));

    var ProvidePhoneNumberComponent = /** @class */ (function () {
        function ProvidePhoneNumberComponent(loginService, alert, userService) {
            this.loginService = loginService;
            this.alert = alert;
            this.userService = userService;
            this.onCancel = new i0.EventEmitter();
            this.onChangeView = new i0.EventEmitter();
            this.requestInProgress = false;
            this.sendTfa = '0';
        }
        ProvidePhoneNumberComponent.prototype.save = function () {
            return __awaiter(this, void 0, void 0, function () {
                var e_1;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            _a.trys.push([0, 3, 4, 5]);
                            this.requestInProgress = true;
                            return [4 /*yield*/, this.userService.savePhoneNumber(this.phoneNumber)];
                        case 1:
                            _a.sent();
                            return [4 /*yield*/, this.sendTFASms()];
                        case 2:
                            _a.sent();
                            this.onChangeView.emit({
                                view: exports.LoginViews.SmsChallenge,
                                credentials: this.credentials
                            });
                            return [3 /*break*/, 5];
                        case 3:
                            e_1 = _a.sent();
                            this.alert.addServerFailure(e_1);
                            return [3 /*break*/, 5];
                        case 4:
                            this.requestInProgress = false;
                            return [7 /*endfinally*/];
                        case 5: return [2 /*return*/];
                    }
                });
            });
        };
        ProvidePhoneNumberComponent.prototype.sendTFASms = function () {
            return __awaiter(this, void 0, void 0, function () {
                var e_2;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            _a.trys.push([0, 2, , 3]);
                            return [4 /*yield*/, this.userService.verifyTFACode(this.sendTfa)];
                        case 1:
                            _a.sent();
                            return [3 /*break*/, 3];
                        case 2:
                            e_2 = _a.sent();
                            if (e_2.res.status === 403) {
                                this.loginService.cleanMessages();
                                this.loginService.addSuccessMessage('send_sms');
                            }
                            else {
                                throw e_2;
                            }
                            return [3 /*break*/, 3];
                        case 3: return [2 /*return*/];
                    }
                });
            });
        };
ProvidePhoneNumberComponent.ɵfac = function ProvidePhoneNumberComponent_Factory(t) { return new (t || ProvidePhoneNumberComponent)(ɵngcc0.ɵɵdirectiveInject(LoginService), ɵngcc0.ɵɵdirectiveInject(AlertService), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.UserService)); };
ProvidePhoneNumberComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ProvidePhoneNumberComponent, selectors: [["c8y-provide-phone-number"]], inputs: { credentials: "credentials" }, outputs: { onCancel: "onCancel", onChangeView: "onChangeView" }, decls: 19, vars: 18, consts: [["role", "form", "novalidate", "", 1, "loginForm", 3, "ngSubmit"], ["twoFactorForm", "ngForm"], ["translate", "", 1, "legend", "form-block", "center"], [3, "ngClass"], ["translate", ""], ["type", "text", "name", "phone", "autocomplete", "off", "c8yPhoneValidation", "", "c8yDefaultValidation", "phoneNumber", "required", "", 1, "form-control", 3, "ngModel", "placeholder", "ngModelChange"], ["contactPhone", "ngModel"], ["type", "submit", 1, "btn", "btn-primary", "btn-lg", "btn-block", "form-group", 3, "title", "disabled"], [1, "d-flex", "m-t-8"], ["href", "#", 1, "small", "pointer", "m-l-auto", 3, "title", "click"]], template: function ProvidePhoneNumberComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "form", 0, 1);
        ɵngcc0.ɵɵlistener("ngSubmit", function ProvidePhoneNumberComponent_Template_form_ngSubmit_0_listener() { return ctx.save(); });
        ɵngcc0.ɵɵelementStart(2, "div", 2);
        ɵngcc0.ɵɵtext(3, " Two-factor authentication ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(4, "c8y-form-group", 3);
        ɵngcc0.ɵɵelementStart(5, "label", 4);
        ɵngcc0.ɵɵtext(6, "Provide your phone number");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(7, "input", 5, 6);
        ɵngcc0.ɵɵlistener("ngModelChange", function ProvidePhoneNumberComponent_Template_input_ngModelChange_7_listener($event) { return ctx.phoneNumber = $event; });
        ɵngcc0.ɵɵpipe(9, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(10, "button", 7);
        ɵngcc0.ɵɵpipe(11, "translate");
        ɵngcc0.ɵɵtext(12);
        ɵngcc0.ɵɵpipe(13, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(14, "div", 8);
        ɵngcc0.ɵɵelementStart(15, "a", 9);
        ɵngcc0.ɵɵlistener("click", function ProvidePhoneNumberComponent_Template_a_click_15_listener() { return ctx.onCancel.emit(); });
        ɵngcc0.ɵɵpipe(16, "translate");
        ɵngcc0.ɵɵtext(17);
        ɵngcc0.ɵɵpipe(18, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        var _r0 = ɵngcc0.ɵɵreference(1);
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵproperty("ngClass", ctx.requestInProgress || _r0.invalid ? "p-b-8" : "");
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵpropertyInterpolate("placeholder", ɵngcc0.ɵɵpipeBind1(9, 8, "e.g. +49 9 876 543 210`LOCALIZE`"));
        ɵngcc0.ɵɵproperty("ngModel", ctx.phoneNumber);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(11, 10, "Save and continue"));
        ɵngcc0.ɵɵproperty("disabled", ctx.requestInProgress || _r0.invalid);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(13, 12, "Save and continue"), " ");
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(16, 14, "Login"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(18, 16, "Login"), " ");
    } }, directives: [ɵngcc13.ɵNgNoValidate, ɵngcc13.NgControlStatusGroup, ɵngcc13.NgForm, C8yTranslateDirective, FormGroupComponent, ɵngcc6.NgClass, RequiredInputPlaceholderDirective, ɵngcc13.DefaultValueAccessor, PhoneValidationDirective, DefaultValidationDirective, ɵngcc13.RequiredValidator, ɵngcc13.NgControlStatus, ɵngcc13.NgModel], pipes: [C8yTranslatePipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ProvidePhoneNumberComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-provide-phone-number',
                template: "<form #twoFactorForm=\"ngForm\" role=\"form\" class=\"loginForm\" (ngSubmit)=\"save()\" novalidate>\n  <div class=\"legend form-block center\" translate>\n    Two-factor authentication\n  </div>\n\n  <c8y-form-group [ngClass]=\"requestInProgress || twoFactorForm.invalid ? 'p-b-8' : ''\">\n    <label translate>Provide your phone number</label>\n\n    <input\n      class=\"form-control\"\n      [(ngModel)]=\"phoneNumber\"\n      #contactPhone=\"ngModel\"\n      type=\"text\"\n      name=\"phone\"\n      autocomplete=\"off\"\n      placeholder=\"{{ 'e.g. +49 9 876 543 210`LOCALIZE`' | translate }}\"\n      c8yPhoneValidation\n      c8yDefaultValidation=\"phoneNumber\"\n      required\n    />\n  </c8y-form-group>\n\n  <button\n    title=\"{{ 'Save and continue' | translate }}\"\n    type=\"submit\"\n    class=\"btn btn-primary btn-lg btn-block form-group\"\n    [disabled]=\"requestInProgress || twoFactorForm.invalid\"\n  >\n    {{ 'Save and continue' | translate }}\n  </button>\n\n  <div class=\"d-flex m-t-8\">\n    <a\n      title=\"{{ 'Login' | translate }}\"\n      class=\"small pointer m-l-auto\"\n      href=\"#\"\n      (click)=\"onCancel.emit()\"\n    >\n      {{ 'Login' | translate }}\n    </a>\n  </div>\n</form>\n"
            }]
    }], function () { return [{ type: LoginService }, { type: AlertService }, { type: ɵngcc3.UserService }]; }, { onCancel: [{
            type: i0.Output
        }], onChangeView: [{
            type: i0.Output
        }], credentials: [{
            type: i0.Input
        }] }); })();
        return ProvidePhoneNumberComponent;
    }());
    ProvidePhoneNumberComponent.ctorParameters = function () { return [
        { type: LoginService },
        { type: AlertService },
        { type: client.UserService }
    ]; };
    ProvidePhoneNumberComponent.propDecorators = {
        credentials: [{ type: i0.Input }],
        onCancel: [{ type: i0.Output }],
        onChangeView: [{ type: i0.Output }]
    };

    /**
     * The angular module definition for new password.
     * @exports PasswordStrengthComponent
     * @exports PasswordCheckListComponent
     * @exports PasswordConfirm
     * @exports NewPasswordComponent
     * @exports PasswordConfirmModalComponent
     */
    var AuthenticationModule = /** @class */ (function () {
        function AuthenticationModule() {
        }
AuthenticationModule.ɵfac = function AuthenticationModule_Factory(t) { return new (t || AuthenticationModule)(); };
AuthenticationModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: AuthenticationModule });
AuthenticationModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [PasswordStrengthCheckerService, PasswordService], imports: [[FormsModule, tooltip.TooltipModule, CommonModule, ModalModule, angularxQrcode.QRCodeModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AuthenticationModule, [{
        type: i0.NgModule,
        args: [{
                declarations: [
                    TotpChallengeComponent,
                    PasswordConfirm,
                    PasswordStrengthComponent,
                    PasswordCheckListComponent,
                    NewPasswordComponent,
                    PasswordConfirmModalComponent,
                    SmsChallengeComponent,
                    TotpSetupComponent,
                    ProvidePhoneNumberComponent
                ],
                imports: [FormsModule, tooltip.TooltipModule, CommonModule, ModalModule, angularxQrcode.QRCodeModule],
                exports: [
                    TotpChallengeComponent,
                    PasswordStrengthComponent,
                    PasswordCheckListComponent,
                    PasswordConfirm,
                    NewPasswordComponent,
                    PasswordConfirmModalComponent,
                    SmsChallengeComponent,
                    TotpSetupComponent,
                    ProvidePhoneNumberComponent
                ],
                entryComponents: [PasswordConfirmModalComponent],
                providers: [PasswordStrengthCheckerService, PasswordService]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(AuthenticationModule, { declarations: [TotpChallengeComponent, PasswordConfirm, PasswordStrengthComponent, PasswordCheckListComponent, NewPasswordComponent, PasswordConfirmModalComponent, SmsChallengeComponent, TotpSetupComponent, ProvidePhoneNumberComponent], imports: [FormsModule, ɵngcc8.TooltipModule, CommonModule, ModalModule, ɵngcc14.QRCodeModule], exports: [TotpChallengeComponent, PasswordStrengthComponent, PasswordCheckListComponent, PasswordConfirm, NewPasswordComponent, PasswordConfirmModalComponent, SmsChallengeComponent, TotpSetupComponent, ProvidePhoneNumberComponent] }); })();
        return AuthenticationModule;
    }());

    var UserTotpRevokeComponent = /** @class */ (function () {
        function UserTotpRevokeComponent(users, alert) {
            this.users = users;
            this.alert = alert;
            this.revokeEmitter = new i0.EventEmitter();
        }
        UserTotpRevokeComponent.prototype.revoke = function () {
            return __awaiter(this, void 0, void 0, function () {
                var e_1;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            _a.trys.push([0, 2, , 3]);
                            return [4 /*yield*/, this.users.totpRevokeSecret(this.user)];
                        case 1:
                            _a.sent();
                            this.alert.success(gettext('User TOTP secret revoked.'));
                            this.revokeEmitter.next();
                            return [3 /*break*/, 3];
                        case 2:
                            e_1 = _a.sent();
                            this.alert.addServerFailure(e_1);
                            return [3 /*break*/, 3];
                        case 3: return [2 /*return*/];
                    }
                });
            });
        };
UserTotpRevokeComponent.ɵfac = function UserTotpRevokeComponent_Factory(t) { return new (t || UserTotpRevokeComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc3.UserService), ɵngcc0.ɵɵdirectiveInject(AlertService)); };
UserTotpRevokeComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: UserTotpRevokeComponent, selectors: [["c8y-user-totp-revoke"]], inputs: { user: "user" }, outputs: { revokeEmitter: "revoke" }, decls: 8, vars: 7, consts: [["type", "button", "placement", "right", 1, "btn", "btn-default", 3, "popover", "popoverTitle"], ["popover", "bs-popover"], ["c8yIcon", "key"], ["confirm", ""], ["translate", "", 1, "m-b-16"], ["type", "button", "translate", "", 1, "btn", "btn-danger", 3, "title", "click"], ["type", "button", "translate", "", 1, "btn", "btn-default", 3, "title", "click"]], template: function UserTotpRevokeComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "button", 0, 1);
        ɵngcc0.ɵɵpipe(2, "translate");
        ɵngcc0.ɵɵelement(3, "i", 2);
        ɵngcc0.ɵɵtext(4);
        ɵngcc0.ɵɵpipe(5, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(6, UserTotpRevokeComponent_ng_template_6_Template, 8, 6, "ng-template", null, 3, ɵngcc0.ɵɵtemplateRefExtractor);
    } if (rf & 2) {
        var _r1 = ɵngcc0.ɵɵreference(7);
        ɵngcc0.ɵɵproperty("popover", _r1)("popoverTitle", ɵngcc0.ɵɵpipeBind1(2, 3, "Revoke TOTP secret"));
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(5, 5, "Revoke TOTP secret"), "\n");
    } }, directives: [ɵngcc11.PopoverDirective, IconDirective, C8yTranslateDirective], pipes: [C8yTranslatePipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(UserTotpRevokeComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-user-totp-revoke',
                template: "<button\n  type=\"button\"\n  class=\"btn btn-default\"\n  [popover]=\"confirm\"\n  [popoverTitle]=\"'Revoke TOTP secret' | translate\"\n  #popover=\"bs-popover\"\n  placement=\"right\"\n>\n  <i c8yIcon=\"key\"></i> {{ 'Revoke TOTP secret' | translate }}\n</button>\n\n<ng-template #confirm>\n  <p class=\"m-b-16\" translate>\n    This action will revoke the user's stored TOTP secret which will require a new setup.\n  </p>\n  <button\n    title=\"{{ 'Revoke' | translate }}\"\n    type=\"button\"\n    class=\"btn btn-danger\"\n    (click)=\"revoke(); popover.hide()\"\n    translate\n  >\n    Revoke\n  </button>\n  <button\n    title=\"{{ 'Cancel' | translate }}\"\n    type=\"button\"\n    class=\"btn btn-default\"\n    (click)=\"popover.hide()\"\n    translate\n  >\n    Cancel\n  </button>\n</ng-template>\n"
            }]
    }], function () { return [{ type: ɵngcc3.UserService }, { type: AlertService }]; }, { revokeEmitter: [{
            type: i0.Output,
            args: ['revoke']
        }], user: [{
            type: i0.Input
        }] }); })();
        return UserTotpRevokeComponent;
    }());
    UserTotpRevokeComponent.ctorParameters = function () { return [
        { type: client.UserService },
        { type: AlertService }
    ]; };
    UserTotpRevokeComponent.propDecorators = {
        user: [{ type: i0.Input }],
        revokeEmitter: [{ type: i0.Output, args: ['revoke',] }]
    };

    /**
     * The angular module definition for the user menu.
     * @exports UserMenuComponent
     * @exports UserMenuItemComponent
     * @exports UserEditComponent
     * @exports UserEditModalComponent
     */
    var UserModule = /** @class */ (function () {
        function UserModule() {
        }
UserModule.ɵfac = function UserModule_Factory(t) { return new (t || UserModule)(); };
UserModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: UserModule });
UserModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[
            FormsModule,
            CommonModule,
            ModalModule,
            dropdown.BsDropdownModule,
            AuthenticationModule,
            AlertModule,
            i1.RouterModule,
            tooltip.TooltipModule.forRoot(),
            popover.PopoverModule
        ]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(UserModule, [{
        type: i0.NgModule,
        args: [{
                declarations: [
                    UserMenuOutletComponent,
                    UserEditComponent,
                    UserEditModalComponent,
                    UserMenuItemComponent,
                    UserTotpSetupComponent,
                    UserTotpRevokeComponent,
                ],
                imports: [
                    FormsModule,
                    CommonModule,
                    ModalModule,
                    dropdown.BsDropdownModule,
                    AuthenticationModule,
                    AlertModule,
                    i1.RouterModule,
                    tooltip.TooltipModule.forRoot(),
                    popover.PopoverModule
                ],
                exports: [
                    UserMenuOutletComponent,
                    UserMenuItemComponent,
                    UserEditComponent,
                    UserEditModalComponent,
                    UserTotpSetupComponent,
                    UserTotpRevokeComponent
                ],
                entryComponents: [
                    UserEditModalComponent,
                    UserTotpSetupComponent,
                    UserTotpRevokeComponent
                ]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(UserModule, { declarations: [UserMenuOutletComponent, UserEditComponent, UserEditModalComponent, UserMenuItemComponent, UserTotpSetupComponent, UserTotpRevokeComponent], imports: [FormsModule, CommonModule, ModalModule, ɵngcc9.BsDropdownModule, AuthenticationModule, AlertModule, ɵngcc1.RouterModule, ɵngcc8.TooltipModule, ɵngcc11.PopoverModule], exports: [UserMenuOutletComponent, UserMenuItemComponent, UserEditComponent, UserEditModalComponent, UserTotpSetupComponent, UserTotpRevokeComponent] }); })();
        return UserModule;
    }());

    var AppIconComponent = /** @class */ (function () {
        function AppIconComponent(options) {
            this.options = options;
            this.name = '';
            this.model = {
                appIcon: '',
                showIcon: true,
                iconClass: ['c8y-icon'],
                appNameAbbr: '',
                iconStyle: {}
            };
            this.c8yAppIconsList = {
                analyticsbuilder: 'analytics-builder',
                'analytics-builder': 'analytics-builder',
                cockpit: 'cockpit',
                devicemanagement: 'device-management',
                administration: 'administration',
                apamaepl: 'apama-epl'
            };
            this.white = false;
            this.defaultIconStyle = {
                'background-repeat': 'no-repeat',
                'background-size': 'contain',
                height: '36px',
                width: '36px'
            };
        }
        AppIconComponent.prototype.ngOnInit = function () {
            this.model.appIcon = this.iconFromAppDefinition() || this.findStaticIcon();
            var iconUrl = this.iconUrlFromAppDefinition();
            if (iconUrl) {
                this.model.iconStyle = lodashEs.assign(this.defaultIconStyle, {
                    'background-image': iconUrl
                });
            }
            this.model.showIcon = !!this.model.appIcon || !lodashEs.isEmpty(this.model.iconStyle);
            this.model.iconClass = [
                'c8y-icon',
                this.mapFontAwesomeToDelightIcons(this.model.appIcon),
                this.white ? 'c8y-icon-white' : 'c8y-icon-duocolor'
            ].filter(function (c) { return !!c; });
            this.model.appNameAbbr = this.name.substr(0, 2);
        };
        AppIconComponent.prototype.findStaticIcon = function () {
            var contextPath = this.contextPath || this.name;
            var appContextPathNormalized = lodashEs.find(lodashEs.keys(this.c8yAppIconsList), function (cp) {
                return contextPath.indexOf(cp) > -1;
            });
            var appIcon = this.c8yAppIconsList[appContextPathNormalized];
            return appIcon ? "c8y-icon-" + appIcon : undefined;
        };
        AppIconComponent.prototype.iconFromAppDefinition = function () {
            var app = this.app || this.options;
            var iconClassProperty = ['icon', 'class'];
            var iconClass = lodashEs.get(app, __spreadArray(['manifest'], __read(iconClassProperty))) || lodashEs.get(app, iconClassProperty);
            return iconClass;
        };
        AppIconComponent.prototype.iconUrlFromAppDefinition = function () {
            var app = this.app || this.options;
            var iconUrlProperty = ['icon', 'url'];
            var iconUrl = lodashEs.get(app, __spreadArray(['manifest'], __read(iconUrlProperty))) || lodashEs.get(app, iconUrlProperty);
            return iconUrl;
        };
        AppIconComponent.prototype.mapFontAwesomeToDelightIcons = function (iconClasses) {
            if (!iconClasses) {
                return;
            }
            var regex = /fa-/gi;
            return iconClasses.replace(regex, 'dlt-c8y-icon-');
        };
AppIconComponent.ɵfac = function AppIconComponent_Factory(t) { return new (t || AppIconComponent)(ɵngcc0.ɵɵdirectiveInject(OptionsService)); };
AppIconComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: AppIconComponent, selectors: [["c8y-app-icon"]], hostAttrs: [1, "c8y-app-icon"], inputs: { name: "name", contextPath: "contextPath", app: "app" }, decls: 2, vars: 2, consts: [[3, "ngClass", "ngStyle", 4, "ngIf"], ["class", "app-noicon", 4, "ngIf"], [3, "ngClass", "ngStyle"], [1, "app-noicon"]], template: function AppIconComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, AppIconComponent_i_0_Template, 1, 2, "i", 0);
        ɵngcc0.ɵɵtemplate(1, AppIconComponent_span_1_Template, 2, 1, "span", 1);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.model.showIcon);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.model.showIcon);
    } }, directives: [ɵngcc6.NgIf, ɵngcc6.NgClass, ɵngcc6.NgStyle], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AppIconComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-app-icon',
                template: "<i *ngIf=\"model.showIcon\" [ngClass]=\"model.iconClass\" [ngStyle]=\"model.iconStyle\"></i>\n<span *ngIf=\"!model.showIcon\" class=\"app-noicon\"> {{model.appNameAbbr}}</span>\n",
                host: { class: 'c8y-app-icon' }
            }]
    }], function () { return [{ type: OptionsService }]; }, { name: [{
            type: i0.Input
        }], contextPath: [{
            type: i0.Input
        }], app: [{
            type: i0.Input
        }] }); })();
        return AppIconComponent;
    }());
    AppIconComponent.ctorParameters = function () { return [
        { type: OptionsService }
    ]; };
    AppIconComponent.propDecorators = {
        contextPath: [{ type: i0.Input }],
        name: [{ type: i0.Input }],
        app: [{ type: i0.Input }]
    };

    var AppSwitcherComponent = /** @class */ (function () {
        function AppSwitcherComponent(ui, applications) {
            var _this = this;
            this.ui = ui;
            this.applications = applications;
            var _a = this.ui, currentUser = _a.currentUser, currentTenant = _a.currentTenant;
            rxjs.combineLatest(currentUser, currentTenant)
                .pipe(operators.first())
                .subscribe(function (_a) {
                var _b = __read(_a, 2), user = _b[0], tenant = _b[1];
                _this.tenant = tenant;
                _this.listAppsForUser(user);
            });
        }
        Object.defineProperty(AppSwitcherComponent.prototype, "hideCloudApps", {
            get: function () {
                return false; // this should be configurable from outside
            },
            enumerable: false,
            configurable: true
        });
        AppSwitcherComponent.prototype.isActive = function (app) {
            return app.contextPath === this.ui.state.app.contextPath;
        };
        AppSwitcherComponent.prototype.getHref = function (app) {
            return this.applications.getHref(app);
        };
        AppSwitcherComponent.prototype.listAppsForUser = function (user) {
            return __awaiter(this, void 0, void 0, function () {
                var data;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            if (!user) return [3 /*break*/, 2];
                            return [4 /*yield*/, this.applications.listByUser(user, { pageSize: 1000 })];
                        case 1:
                            data = (_a.sent()).data;
                            this.apps = this.orderApps(this.filterApps(data));
                            _a.label = 2;
                        case 2: return [2 /*return*/];
                    }
                });
            });
        };
        AppSwitcherComponent.prototype.filterApps = function (apps) {
            apps = this.filterVisible(apps);
            apps = this.filterCloud(apps);
            apps = this.filterDuplicates(apps);
            return apps;
        };
        AppSwitcherComponent.prototype.filterVisible = function (apps) {
            var visibleApplicationTypes = ['HOSTED', 'EXTERNAL'];
            return apps.filter(function (app) { return lodashEs.includes(visibleApplicationTypes, app.type) &&
                !app.noAppSwitcher &&
                !lodashEs.get(app, 'manifest.noAppSwitcher'); });
        };
        AppSwitcherComponent.prototype.filterCloud = function (apps) {
            var hideCloudApps = this.hideCloudApps;
            var filterFn = function (app) { return !!app.cloud; };
            if (!hideCloudApps) {
                this.oneCloudApps = this.orderApps(apps.filter(filterFn));
            }
            return apps.filter(function (app) { return !filterFn(app); });
        };
        AppSwitcherComponent.prototype.filterDuplicates = function (apps) {
            var _this = this;
            // Filter out apps that have duplicate contextpaths and are not own owned but the current tenant;
            var filterFn = function (app) { return !apps.some(function (otherApp) { return app !== otherApp &&
                (app.contextPath && app.contextPath === otherApp.contextPath) &&
                app.owner.tenant.id !== _this.tenant.name; }); };
            return apps.filter(filterFn);
        };
        AppSwitcherComponent.prototype.orderApps = function (apps) {
            return lodashEs.orderBy(apps, function (_a) {
                var name = _a.name;
                return name.toLowerCase();
            });
        };
AppSwitcherComponent.ɵfac = function AppSwitcherComponent_Factory(t) { return new (t || AppSwitcherComponent)(ɵngcc0.ɵɵdirectiveInject(AppStateService), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.ApplicationService)); };
AppSwitcherComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: AppSwitcherComponent, selectors: [["c8y-app-switcher"]], decls: 4, vars: 0, consts: [["dropdown", "", 1, "app-switcher-dropdown"], ["id", "appSwitcherDropdown", "dropdownToggle", "", 1, "main-header-button", "c8y-dropdown", "dropdown-toggle"], ["c8yIcon", "th", 1, "icon-2x"], ["class", "app-switcher-dropdown-menu dropdown-menu", "aria-labelledby", "appSwitcherDropdown", 4, "dropdownMenu"], ["aria-labelledby", "appSwitcherDropdown", 1, "app-switcher-dropdown-menu", "dropdown-menu"], ["class", "app-switcher-sagcloud", 4, "ngIf"], [1, "app-switcher"], ["class", "appLink", "c8yProductExperience", "", 3, "title", "ngClass", "href", "actionName", "actionData", 4, "ngFor", "ngForOf"], [1, "app-switcher-sagcloud"], ["class", "appLink", "c8yProductExperience", "", 3, "title", "href", "actionName", "actionData", 4, "ngFor", "ngForOf"], ["c8yProductExperience", "", 1, "appLink", 3, "title", "href", "actionName", "actionData"], [3, "app", "name", "contextPath"], [1, "text-truncate-wrap"], ["c8yProductExperience", "", 1, "appLink", 3, "title", "ngClass", "href", "actionName", "actionData"]], template: function AppSwitcherComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "button", 1);
        ɵngcc0.ɵɵelement(2, "i", 2);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(3, AppSwitcherComponent_div_3_Template, 4, 2, "div", 3);
        ɵngcc0.ɵɵelementEnd();
    } }, directives: [ɵngcc9.BsDropdownDirective, ɵngcc9.BsDropdownToggleDirective, IconDirective, ɵngcc9.BsDropdownMenuDirective, ɵngcc6.NgIf, ɵngcc6.NgForOf, ProductExperienceDirective, AppIconComponent, ɵngcc6.NgClass], pipes: [ɵngcc6.AsyncPipe, HumanizeAppNamePipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AppSwitcherComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-app-switcher',
                template: "<div class=\"app-switcher-dropdown\" dropdown>\n  <button\n    class=\"main-header-button c8y-dropdown dropdown-toggle\"\n    id=\"appSwitcherDropdown\"\n    dropdownToggle\n  >\n    <i c8yIcon=\"th\" class=\"icon-2x\"></i>\n  </button>\n  <div\n    *dropdownMenu\n    class=\"app-switcher-dropdown-menu dropdown-menu\"\n    aria-labelledby=\"appSwitcherDropdown\"\n  >\n    <div class=\"app-switcher-sagcloud\" *ngIf=\"oneCloudApps && oneCloudApps.length > 0\">\n      <a\n        title=\"{{ app.name | humanizeAppName | async }}\"\n        class=\"appLink\"\n        *ngFor=\"let app of oneCloudApps\"\n        [href]=\"getHref(app)\"\n        c8yProductExperience\n        [actionName]=\"'appSwitched'\"\n        [actionData]=\"{ applicationName: app && app.name }\"\n      >\n        <c8y-app-icon [app]=\"app\" [name]=\"app.name\" [contextPath]=\"app.contextPath\"></c8y-app-icon>\n        <span class=\"text-truncate-wrap\">{{ app | humanizeAppName | async }}</span>\n      </a>\n    </div>\n    <div class=\"app-switcher\">\n      <a\n        title=\"{{ app.name | humanizeAppName | async }}\"\n        class=\"appLink\"\n        [ngClass]=\"isActive(app) ? 'active' : ''\"\n        *ngFor=\"let app of apps\"\n        [href]=\"getHref(app)\"\n        c8yProductExperience\n        [actionName]=\"'appSwitched'\"\n        [actionData]=\"{ applicationName: app && app.name }\"\n      >\n        <c8y-app-icon [app]=\"app\" [name]=\"app.name\" [contextPath]=\"app.contextPath\"></c8y-app-icon>\n        <span class=\"text-truncate-wrap\">{{ app | humanizeAppName | async }}</span>\n      </a>\n    </div>\n  </div>\n</div>\n"
            }]
    }], function () { return [{ type: AppStateService }, { type: ɵngcc3.ApplicationService }]; }, null); })();
        return AppSwitcherComponent;
    }());
    AppSwitcherComponent.ctorParameters = function () { return [
        { type: AppStateService },
        { type: client.ApplicationService }
    ]; };

    var HeaderBarComponent = /** @class */ (function () {
        function HeaderBarComponent(headerService, actionService, breadcrumbService, searchService, appState, userMenuService, docs) {
            this.headerService = headerService;
            this.actionService = actionService;
            this.breadcrumbService = breadcrumbService;
            this.searchService = searchService;
            this.appState = appState;
            this.userMenuService = userMenuService;
            this.docs = docs;
            this.canToggle$ = this.headerService.hasItemsInNavigator$;
            this.appState$ = this.appState.state$;
            this.drawerOpen = false;
        }
        HeaderBarComponent.prototype.ngAfterViewInit = function () {
            this.headerService.verifyIfNavOpen();
        };
HeaderBarComponent.ɵfac = function HeaderBarComponent_Factory(t) { return new (t || HeaderBarComponent)(ɵngcc0.ɵɵdirectiveInject(HeaderService), ɵngcc0.ɵɵdirectiveInject(ActionService), ɵngcc0.ɵɵdirectiveInject(BreadcrumbService), ɵngcc0.ɵɵdirectiveInject(SearchService), ɵngcc0.ɵɵdirectiveInject(AppStateService), ɵngcc0.ɵɵdirectiveInject(UserMenuService), ɵngcc0.ɵɵdirectiveInject(DocsService)); };
HeaderBarComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: HeaderBarComponent, selectors: [["c8y-header-bar"]], decls: 33, vars: 51, consts: [[1, "app-main-header", 3, "ngClass"], [1, "header-bar"], ["type", "button", "class", "navigator-toggle main-header-button", 3, "title", "click", 4, "ngIf"], [1, "app-view"], [3, "name", "contextPath"], [1, "page-header"], [1, "app-breadcrumbs", 3, "breadcrumbs"], [1, "main-header-item", 3, "title", "search"], [1, "main-header-item", 3, "title", "items"], [1, "main-header-item", 3, "title"], [1, "main-header-item", 3, "items"], ["class", "drawer-toggle main-header-button", 3, "title", "click", 4, "ngIf"], [1, "head-toggler"], ["type", "button", 3, "title", "click"], [3, "c8yIcon"], [3, "app", "quickLinks", "helpAndSupport", 4, "ngIf"], [1, "loading-bar", 3, "ngClass"], ["type", "button", 1, "navigator-toggle", "main-header-button", 3, "title", "click"], [3, "c8yIcon", 4, "ngIf"], [1, "drawer-toggle", "main-header-button", 3, "title", "click"], [3, "app", "quickLinks", "helpAndSupport"]], template: function HeaderBarComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵpipe(1, "async");
        ɵngcc0.ɵɵelementStart(2, "div", 1);
        ɵngcc0.ɵɵtemplate(3, HeaderBarComponent_button_3_Template, 6, 9, "button", 2);
        ɵngcc0.ɵɵpipe(4, "async");
        ɵngcc0.ɵɵelementStart(5, "div", 3);
        ɵngcc0.ɵɵelement(6, "c8y-app-icon", 4);
        ɵngcc0.ɵɵpipe(7, "async");
        ɵngcc0.ɵɵpipe(8, "async");
        ɵngcc0.ɵɵelementStart(9, "span", 5);
        ɵngcc0.ɵɵelement(10, "c8y-title-outlet");
        ɵngcc0.ɵɵelement(11, "c8y-breadcrumb-outlet", 6);
        ɵngcc0.ɵɵpipe(12, "async");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(13, "c8y-search-outlet", 7);
        ɵngcc0.ɵɵpipe(14, "translate");
        ɵngcc0.ɵɵpipe(15, "async");
        ɵngcc0.ɵɵelement(16, "c8y-action-outlet", 8);
        ɵngcc0.ɵɵpipe(17, "translate");
        ɵngcc0.ɵɵpipe(18, "async");
        ɵngcc0.ɵɵelement(19, "c8y-app-switcher", 9);
        ɵngcc0.ɵɵpipe(20, "translate");
        ɵngcc0.ɵɵelement(21, "c8y-user-menu-outlet", 10);
        ɵngcc0.ɵɵpipe(22, "async");
        ɵngcc0.ɵɵtemplate(23, HeaderBarComponent_button_23_Template, 4, 5, "button", 11);
        ɵngcc0.ɵɵpipe(24, "async");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(25, "div", 12);
        ɵngcc0.ɵɵelementStart(26, "button", 13);
        ɵngcc0.ɵɵlistener("click", function HeaderBarComponent_Template_button_click_26_listener() { return ctx.headerService.toggle(); });
        ɵngcc0.ɵɵpipe(27, "translate");
        ɵngcc0.ɵɵelement(28, "i", 14);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(29, HeaderBarComponent_c8y_right_drawer_29_Template, 4, 9, "c8y-right-drawer", 15);
        ɵngcc0.ɵɵpipe(30, "async");
        ɵngcc0.ɵɵelement(31, "div", 16);
        ɵngcc0.ɵɵpipe(32, "async");
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction2(46, _c31, ɵngcc0.ɵɵpipeBind1(1, 16, ctx.headerService.navigatorOpen$), ctx.drawerOpen));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind1(4, 18, ctx.canToggle$));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("name", ɵngcc0.ɵɵpipeBind1(7, 20, ctx.appState$).app.name)("contextPath", ɵngcc0.ɵɵpipeBind1(8, 22, ctx.appState$).app.contextPath);
        ɵngcc0.ɵɵadvance(5);
        ɵngcc0.ɵɵproperty("breadcrumbs", ɵngcc0.ɵɵpipeBind1(12, 24, ctx.breadcrumbService.items$));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(14, 26, "Search"));
        ɵngcc0.ɵɵproperty("search", ɵngcc0.ɵɵpipeBind1(15, 28, ctx.searchService.items$));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(17, 30, "Add"));
        ɵngcc0.ɵɵproperty("items", ɵngcc0.ɵɵpipeBind1(18, 32, ctx.actionService.items$));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(20, 34, "Application switcher"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("items", ɵngcc0.ɵɵpipeBind1(22, 36, ctx.userMenuService.state$).userMenuItems);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind1(24, 38, ctx.appState$).showRightDrawer);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(27, 40, "Toggle"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("c8yIcon", "angle-right");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind1(30, 42, ctx.appState$).showRightDrawer);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(49, _c32, ɵngcc0.ɵɵpipeBind1(32, 44, ctx.appState$).isLoading));
    } }, directives: function () { return [ɵngcc6.NgClass, ɵngcc6.NgIf, AppIconComponent, TitleOutletComponent, BreadcrumbOutletComponent, SearchOutletComponent, ActionOutletComponent, AppSwitcherComponent, UserMenuOutletComponent, IconDirective, RightDrawerComponent]; }, pipes: function () { return [ɵngcc6.AsyncPipe, C8yTranslatePipe]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HeaderBarComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-header-bar',
                template: "<div\n  class=\"app-main-header\"\n  [ngClass]=\"{\n    open: headerService.navigatorOpen$ | async,\n    drawerOpen: drawerOpen\n  }\"\n>\n  <div class=\"header-bar\">\n    <button\n      *ngIf=\"canToggle$ | async\"\n      type=\"button\"\n      class=\"navigator-toggle main-header-button\"\n      title=\"{{ 'Toggle navigator' | translate }}\"\n      (click)=\"headerService.toggleNavigator()\"\n    > \n      <i [c8yIcon]=\"'outdent'\" *ngIf=\"!(headerService.navigatorOpen$ | async)\"></i>\n      <i [c8yIcon]=\"'dedent-right'\" *ngIf=\"headerService.navigatorOpen$ | async\"></i>\n    </button>\n    <div class=\"app-view\">\n      <c8y-app-icon\n        [name]=\"(appState$ | async).app.name\"\n        [contextPath]=\"(appState$ | async).app.contextPath\"\n      ></c8y-app-icon>\n\n      <span class=\"page-header\">\n        <c8y-title-outlet></c8y-title-outlet>\n        <c8y-breadcrumb-outlet\n          [breadcrumbs]=\"breadcrumbService.items$ | async\"\n          class=\"app-breadcrumbs\"\n        ></c8y-breadcrumb-outlet>\n      </span>\n    </div>\n    <c8y-search-outlet\n      title=\"{{ 'Search' | translate }}\"\n      [search]=\"searchService.items$ | async\"\n      class=\"main-header-item\"\n    ></c8y-search-outlet>\n    <c8y-action-outlet\n      title=\"{{ 'Add' | translate }}\"\n      [items]=\"actionService.items$ | async\"\n      class=\"main-header-item\"\n    ></c8y-action-outlet>\n    <c8y-app-switcher\n      title=\"{{ 'Application switcher' | translate }}\"\n      class=\"main-header-item\"\n    ></c8y-app-switcher>\n    <c8y-user-menu-outlet\n      [items]=\"(userMenuService.state$ | async).userMenuItems\"\n      class=\"main-header-item\"\n    ></c8y-user-menu-outlet>\n\n    <button\n      title=\"{{ 'Toggle side drawer' | translate }}\"\n      class=\"drawer-toggle main-header-button\"\n      *ngIf=\"(appState$ | async).showRightDrawer\"\n      (click)=\"drawerOpen = !drawerOpen\"\n    >\n      <i [c8yIcon]=\"'indent'\" *ngIf=\"drawerOpen\"></i>\n      <i [c8yIcon]=\"'dedent'\" *ngIf=\"!drawerOpen\"></i>\n    </button>\n  </div>\n  <div class=\"head-toggler\">\n    <button title=\"{{ 'Toggle' | translate }}\" type=\"button\" (click)=\"headerService.toggle()\">\n      <i [c8yIcon]=\"'angle-right'\"></i>\n    </button>\n  </div>\n  <c8y-right-drawer\n    *ngIf=\"(appState$ | async).showRightDrawer\"\n    [app]=\"(appState$ | async).app\"\n    [quickLinks]=\"docs.items$ | async\"\n    [helpAndSupport]=\"docs.items$ | async\"\n  >\n  </c8y-right-drawer>\n  <div class=\"loading-bar\" [ngClass]=\"{ active: (appState$ | async).isLoading }\"></div>\n</div>\n"
            }]
    }], function () { return [{ type: HeaderService }, { type: ActionService }, { type: BreadcrumbService }, { type: SearchService }, { type: AppStateService }, { type: UserMenuService }, { type: DocsService }]; }, null); })();
        return HeaderBarComponent;
    }());
    HeaderBarComponent.ctorParameters = function () { return [
        { type: HeaderService },
        { type: ActionService },
        { type: BreadcrumbService },
        { type: SearchService },
        { type: AppStateService },
        { type: UserMenuService },
        { type: DocsService }
    ]; };

    var RightDrawerComponent = /** @class */ (function () {
        function RightDrawerComponent() {
            this.quickLinks = [];
            this.helpAndSupport = [];
        }
        Object.defineProperty(RightDrawerComponent.prototype, "_quickLinks", {
            set: function (data) {
                if (data) {
                    this.quickLinks = data.filter(function (d) { return d.type === 'quicklink'; });
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(RightDrawerComponent.prototype, "_helpAndSupport", {
            set: function (data) {
                if (data) {
                    this.helpAndSupport = data.filter(function (d) { return d.type === 'doc'; });
                }
            },
            enumerable: false,
            configurable: true
        });
RightDrawerComponent.ɵfac = function RightDrawerComponent_Factory(t) { return new (t || RightDrawerComponent)(); };
RightDrawerComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: RightDrawerComponent, selectors: [["c8y-right-drawer"]], inputs: { _quickLinks: ["quickLinks", "_quickLinks"], _helpAndSupport: ["helpAndSupport", "_helpAndSupport"], app: "app" }, decls: 9, vars: 10, consts: [[1, "c8y-right-drawer"], [1, "summary"], [1, "text-light"], [4, "ngIf"], ["translate", "", 1, "legend", "form-block"], [1, "quick-links-drawer"], [4, "ngFor", "ngForOf"], [1, "quick-link", 3, "href", "click"], ["style", "max-width:50px;", "class", "img-responsive center-block", "onerror", "this.style.display = 'none'", 3, "src", 4, "ngIf"], ["onerror", "this.style.display = 'none'", 1, "img-responsive", "center-block", 2, "max-width", "50px", 3, "src"], ["translate", "", 1, "legend", "form-block", "m-t-24"], ["class", "help-support", 4, "ngFor", "ngForOf"], [1, "help-support"], ["target", "_blank", "rel", "noopener noreferrer", 1, "help-and-support-link", "text-truncate", 3, "href"], [3, "c8yIcon"], [1, "d-inline", 3, "title"]], template: function RightDrawerComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵelementStart(2, "h4", 2);
        ɵngcc0.ɵɵtext(3);
        ɵngcc0.ɵɵpipe(4, "translate");
        ɵngcc0.ɵɵpipe(5, "async");
        ɵngcc0.ɵɵpipe(6, "humanizeAppName");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(7, RightDrawerComponent_div_7_Template, 5, 1, "div", 3);
        ɵngcc0.ɵɵtemplate(8, RightDrawerComponent_div_8_Template, 4, 1, "div", 3);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate2(" ", ɵngcc0.ɵɵpipeBind1(4, 4, "Welcome to"), " ", ɵngcc0.ɵɵpipeBind1(5, 6, ɵngcc0.ɵɵpipeBind1(6, 8, ctx.app)), " ");
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵproperty("ngIf", ctx.quickLinks.length);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.helpAndSupport.length);
    } }, directives: [ɵngcc6.NgIf, C8yTranslateDirective, ɵngcc6.NgForOf, IconDirective], pipes: [C8yTranslatePipe, ɵngcc6.AsyncPipe, HumanizeAppNamePipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(RightDrawerComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-right-drawer',
                template: "<div class=\"c8y-right-drawer\">\n  <div class=\"summary\">\n    <h4 class=\"text-light\">\n      {{ 'Welcome to' | translate }} {{ app | humanizeAppName | async }}\n    </h4>\n  </div>\n\n  <div *ngIf=\"quickLinks.length\">\n    <div class=\"legend form-block\" translate>Quick links</div>\n    <div class=\"quick-links-drawer\">\n      <ng-container *ngFor=\"let quickLink of quickLinks\">\n        <a\n          class=\"quick-link\"\n          [href]=\"quickLink.url || '#'\"\n          (click)=\"quickLink.click && $event.preventDefault(); quickLink.click && quickLink.click();\"\n        >\n          <h2 *ngIf=\"quickLink.icon\"><i class=\"{{ quickLink.icon }}\"></i></h2>\n          <img\n            *ngIf=\"quickLink.iconSrc\"\n            [src]=\"quickLink.iconSrc\"\n            style=\"max-width:50px;\"\n            class=\"img-responsive center-block\"\n            onerror=\"this.style.display = 'none'\">\n          {{ quickLink.label | translate }}\n        </a>\n      </ng-container>\n    </div>\n  </div>\n\n  <div *ngIf=\"helpAndSupport.length\">\n    <div class=\"legend form-block m-t-24\" translate>Help &amp; support</div>\n    <div class=\"help-support\" *ngFor=\"let link of helpAndSupport\">\n      <a\n        class=\"help-and-support-link text-truncate\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        [href]=\"link.url\"\n      >\n        <i [c8yIcon]=\"link.icon\"></i>\n        <span title=\"{{ link.label | translate }}\" class=\"d-inline\">\n          {{ link.label | translate }}\n        </span>\n      </a>\n    </div>\n  </div>\n</div>\n"
            }]
    }], function () { return []; }, { _quickLinks: [{
            type: i0.Input,
            args: ['quickLinks']
        }], _helpAndSupport: [{
            type: i0.Input,
            args: ['helpAndSupport']
        }], app: [{
            type: i0.Input
        }] }); })();
        return RightDrawerComponent;
    }());
    RightDrawerComponent.propDecorators = {
        _quickLinks: [{ type: i0.Input, args: ['quickLinks',] }],
        _helpAndSupport: [{ type: i0.Input, args: ['helpAndSupport',] }],
        app: [{ type: i0.Input }]
    };

    var TitleOutletComponent = /** @class */ (function () {
        function TitleOutletComponent(headerService, element, zone) {
            var _this = this;
            this.headerService = headerService;
            this.element = element;
            this.zone = zone;
            this.title = undefined;
            this.pageTitleUpdate = true;
            var title$ = this.headerService.map(function (state) { return state.title; });
            title$.subscribe(function (title) { return (_this.title = title); });
            var pageTitleUpdate$ = this.headerService.map(function (state) { return state.pageTitleUpdate; });
            pageTitleUpdate$.subscribe(function (pageTitleUpdate) { return (_this.pageTitleUpdate = pageTitleUpdate); });
            this.zone.runOutsideAngular(function () {
                _this.headerService.state$.pipe(operators.debounceTime(100), operators.filter(function (state) { return state.pageTitleUpdate; }), operators.debounceTime(100), operators.map(function () { return _this.element.nativeElement.querySelector('h1'); }), operators.filter(function (el) { return el !== null; }), operators.map(function (el) { return el.innerText; }), operators.filter(Boolean))
                    .subscribe(function (title) { return headerService.changePageTitle(title); });
            });
        }
TitleOutletComponent.ɵfac = function TitleOutletComponent_Factory(t) { return new (t || TitleOutletComponent)(ɵngcc0.ɵɵdirectiveInject(HeaderService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
TitleOutletComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: TitleOutletComponent, selectors: [["c8y-title-outlet"]], decls: 2, vars: 1, consts: [[1, "c8y-ui-title"], ["class", "title", 4, "c8yOutlet"], [1, "title"]], template: function TitleOutletComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵtemplate(1, TitleOutletComponent_div_1_Template, 1, 0, "div", 1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("c8yOutlet", ctx.title);
    } }, directives: [OutletDirective], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TitleOutletComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-title-outlet',
                template: "<div class=\"c8y-ui-title\">\n  <div class=\"title\" *c8yOutlet=\"title\"></div>\n</div>\n"
            }]
    }], function () { return [{ type: HeaderService }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
        return TitleOutletComponent;
    }());
    TitleOutletComponent.ctorParameters = function () { return [
        { type: HeaderService },
        { type: i0.ElementRef },
        { type: i0.NgZone }
    ]; };

    var TitleComponent = /** @class */ (function () {
        function TitleComponent(headerService) {
            this.headerService = headerService;
            this.pageTitleUpdate = true;
        }
        TitleComponent.prototype.ngAfterViewInit = function () {
            var _this = this;
            this.viewInitTimeout = setTimeout(function () { return _this.headerService.changeTitle(_this.template, _this.pageTitleUpdate); });
        };
        TitleComponent.prototype.ngOnDestroy = function () {
            if (this.headerService.state.title === this.template) {
                clearTimeout(this.viewInitTimeout);
                this.headerService.changeTitle();
            }
        };
TitleComponent.ɵfac = function TitleComponent_Factory(t) { return new (t || TitleComponent)(ɵngcc0.ɵɵdirectiveInject(HeaderService)); };
TitleComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: TitleComponent, selectors: [["c8y-title"]], viewQuery: function TitleComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c0, 7);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.template = _t.first);
    } }, inputs: { pageTitleUpdate: "pageTitleUpdate" }, ngContentSelectors: _c1, decls: 2, vars: 0, consts: [["template", ""], [1, "text-truncate"]], template: function TitleComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵtemplate(0, TitleComponent_ng_template_0_Template, 2, 0, "ng-template", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);
    } }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TitleComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-title',
                template: "<ng-template #template>\n  <h1 class=\"text-truncate\">\n    <ng-content></ng-content>\n  </h1>\n</ng-template>\n\n"
            }]
    }], function () { return [{ type: HeaderService }]; }, { pageTitleUpdate: [{
            type: i0.Input
        }], template: [{
            type: i0.ViewChild,
            args: ['template', { static: true }]
        }] }); })();
        return TitleComponent;
    }());
    TitleComponent.ctorParameters = function () { return [
        { type: HeaderService }
    ]; };
    TitleComponent.propDecorators = {
        pageTitleUpdate: [{ type: i0.Input }],
        template: [{ type: i0.ViewChild, args: ['template', { static: true },] }]
    };

    /**
     * The angular module definition for the header of the application.
     * @exports HeaderBarComponent
     * @exports TitleComponent
     * @exports TitleOutletComponent
     * @exports AppIconComponent
     * @exports AppSwitcherComponent
     */
    var HeaderModule = /** @class */ (function () {
        function HeaderModule() {
        }
HeaderModule.ɵfac = function HeaderModule_Factory(t) { return new (t || HeaderModule)(); };
HeaderModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: HeaderModule });
HeaderModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[
            dropdown.BsDropdownModule,
            UserModule,
            SearchModule,
            CommonModule,
            ActionModule,
            BreadcrumbModule,
            NavigatorModule,
            ProductExperienceModule
        ]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HeaderModule, [{
        type: i0.NgModule,
        args: [{
                declarations: [
                    TitleComponent,
                    HeaderBarComponent,
                    TitleOutletComponent,
                    AppIconComponent,
                    AppSwitcherComponent,
                    RightDrawerComponent
                ],
                imports: [
                    dropdown.BsDropdownModule,
                    UserModule,
                    SearchModule,
                    CommonModule,
                    ActionModule,
                    BreadcrumbModule,
                    NavigatorModule,
                    ProductExperienceModule
                ],
                exports: [
                    HeaderBarComponent,
                    TitleComponent,
                    TitleOutletComponent,
                    AppIconComponent,
                    AppSwitcherComponent,
                    RightDrawerComponent
                ]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(HeaderModule, { declarations: [TitleComponent, HeaderBarComponent, TitleOutletComponent, AppIconComponent, AppSwitcherComponent, RightDrawerComponent], imports: [ɵngcc9.BsDropdownModule, UserModule, SearchModule, CommonModule, ActionModule, BreadcrumbModule, NavigatorModule, ProductExperienceModule], exports: [HeaderBarComponent, TitleComponent, TitleOutletComponent, AppIconComponent, AppSwitcherComponent, RightDrawerComponent] }); })();
        return HeaderModule;
    }());

    var ChangePasswordComponent = /** @class */ (function () {
        function ChangePasswordComponent(loginService, users, passwordStrengthCheckerService, options, alert) {
            this.loginService = loginService;
            this.users = users;
            this.passwordStrengthCheckerService = passwordStrengthCheckerService;
            this.options = options;
            this.alert = alert;
            this.onChangeView = new i0.EventEmitter();
            this.passwordPattern = /^[a-zA-Z0-9`~!@#$%^&*()_|+\-=?;:'",.<>{}[\]\\/]{8,32}$/;
            this.isLoading = false;
            this.model = {
                tenantId: '',
                email: '',
                newPassword: '',
                newPasswordConfirm: ''
            };
            this.emailReadOnly = false;
            this.passwordStrengthEnforced = false;
            this.TOKEN_PARAM = 'token';
            this.EMAIL_PARAM = 'email';
        }
        ChangePasswordComponent.prototype.ngOnInit = function () {
            return __awaiter(this, void 0, void 0, function () {
                var _a;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            this.model.tenantId = this.loginService.getTenant();
                            this.model.email = this.options.get(this.EMAIL_PARAM, '');
                            this.emailReadOnly = !!this.model.email;
                            _a = this;
                            return [4 /*yield*/, this.loginService.getPasswordStrengthEnforced()];
                        case 1:
                            _a.passwordStrengthEnforced = _b.sent();
                            return [2 /*return*/];
                    }
                });
            });
        };
        ChangePasswordComponent.prototype.changePassword = function () {
            return __awaiter(this, void 0, void 0, function () {
                var passwordStrengthColor, resetPassword, res, e_1;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            passwordStrengthColor = this.passwordStrengthCheckerService.getStrengthColor(this.model.newPassword);
                            resetPassword = {
                                token: this.credentials.token,
                                email: this.model.email,
                                newPassword: this.model.newPassword,
                                passwordStrength: passwordStrengthColor.passwordStrength
                            };
                            _a.label = 1;
                        case 1:
                            _a.trys.push([1, 3, 4, 5]);
                            this.isLoading = true;
                            return [4 /*yield*/, this.users.resetPassword(resetPassword, this.model.tenantId)];
                        case 2:
                            res = (_a.sent()).res;
                            if (res.status === 200) {
                                this.loginService.addSuccessMessage('password_changed');
                                this.credentials.token = undefined;
                                this.options.set(this.TOKEN_PARAM, undefined);
                                this.onChangeView.emit({ view: exports.LoginViews.Credentials });
                            }
                            return [3 /*break*/, 5];
                        case 3:
                            e_1 = _a.sent();
                            this.alert.addServerFailure(e_1);
                            return [3 /*break*/, 5];
                        case 4:
                            this.loginService.reset();
                            this.isLoading = false;
                            return [7 /*endfinally*/];
                        case 5: return [2 /*return*/];
                    }
                });
            });
        };
ChangePasswordComponent.ɵfac = function ChangePasswordComponent_Factory(t) { return new (t || ChangePasswordComponent)(ɵngcc0.ɵɵdirectiveInject(LoginService), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.UserService), ɵngcc0.ɵɵdirectiveInject(PasswordService), ɵngcc0.ɵɵdirectiveInject(OptionsService), ɵngcc0.ɵɵdirectiveInject(AlertService)); };
ChangePasswordComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ChangePasswordComponent, selectors: [["c8y-change-password"]], inputs: { credentials: "credentials" }, outputs: { onChangeView: "onChangeView" }, decls: 35, vars: 26, consts: [["role", "form", "novalidate", "", 1, "loginForm", 3, "ngSubmit"], ["changePasswordForm", "ngForm"], ["translate", "", 1, "legend", "form-block", "center"], ["class", "tenantField", "id", "tenantField", 4, "ngIf"], ["translate", ""], ["type", "text", "name", "email", "autocapitalize", "off", "autocorrect", "off", "email", "", "required", "", 1, "form-control", 3, "ngModel", "placeholder", "readonly", "ngModelChange"], ["email", "ngModel"], [1, "row", "content-flex-50"], [1, "col-7"], ["type", "password", "name", "newPassword", "autocomplete", "new-password", "required", "", 1, "form-control", 3, "ngModel", "placeholder", "pattern", "passwordStrengthEnforced", "ngModelChange"], ["newPassword", "ngModel"], ["name", "pattern", 3, "text"], ["type", "password", "name", "newPasswordConfirm", "passwordConfirm", "newPassword", "autocomplete", "new-password", "required", "", 1, "form-control", 3, "ngModel", "placeholder", "ngModelChange"], ["newPasswordConfirm", "ngModel"], ["name", "passwordConfirm", 3, "text"], [1, "col-5"], [3, "password", "hidden"], [1, "m-t-32", 3, "password", "hidden"], ["type", "submit", "translate", "", 1, "btn", "btn-primary", "btn-lg", "btn-block", "form-group", 3, "title", "disabled"], ["id", "tenantField", 1, "tenantField"], ["type", "text", "name", "tenantId", "autocapitalize", "off", "autocorrect", "off", "required", "", 1, "form-control", 3, "ngModel", "placeholder", "ngModelChange"], ["tenantId", "ngModel"]], template: function ChangePasswordComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "form", 0, 1);
        ɵngcc0.ɵɵlistener("ngSubmit", function ChangePasswordComponent_Template_form_ngSubmit_0_listener() { return ctx.changePassword(); });
        ɵngcc0.ɵɵelementStart(2, "div", 2);
        ɵngcc0.ɵɵtext(3, " Change password ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(4, ChangePasswordComponent_c8y_form_group_4_Template, 6, 4, "c8y-form-group", 3);
        ɵngcc0.ɵɵelementStart(5, "c8y-form-group");
        ɵngcc0.ɵɵelementStart(6, "label", 4);
        ɵngcc0.ɵɵtext(7, "Email address");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(8, "input", 5, 6);
        ɵngcc0.ɵɵlistener("ngModelChange", function ChangePasswordComponent_Template_input_ngModelChange_8_listener($event) { return ctx.model.email = $event; });
        ɵngcc0.ɵɵpipe(10, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(11, "div", 7);
        ɵngcc0.ɵɵelementStart(12, "div", 8);
        ɵngcc0.ɵɵelementStart(13, "c8y-form-group");
        ɵngcc0.ɵɵelementStart(14, "label", 4);
        ɵngcc0.ɵɵtext(15, "New password");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(16, "input", 9, 10);
        ɵngcc0.ɵɵlistener("ngModelChange", function ChangePasswordComponent_Template_input_ngModelChange_16_listener($event) { return ctx.model.newPassword = $event; });
        ɵngcc0.ɵɵpipe(18, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(19, "c8y-messages");
        ɵngcc0.ɵɵelement(20, "c8y-message", 11);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(21, "c8y-form-group");
        ɵngcc0.ɵɵelementStart(22, "label", 4);
        ɵngcc0.ɵɵtext(23, "Confirm password");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(24, "input", 12, 13);
        ɵngcc0.ɵɵlistener("ngModelChange", function ChangePasswordComponent_Template_input_ngModelChange_24_listener($event) { return ctx.model.newPasswordConfirm = $event; });
        ɵngcc0.ɵɵpipe(26, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(27, "c8y-messages");
        ɵngcc0.ɵɵelement(28, "c8y-message", 14);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(29, "div", 15);
        ɵngcc0.ɵɵelement(30, "c8y-password-strength", 16);
        ɵngcc0.ɵɵelement(31, "c8y-password-check-list", 17);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(32, "button", 18);
        ɵngcc0.ɵɵpipe(33, "translate");
        ɵngcc0.ɵɵtext(34, " Set password ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        var _r0 = ɵngcc0.ɵɵreference(1);
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵproperty("ngIf", ctx.loginService.showTenant());
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵpropertyInterpolate("placeholder", ɵngcc0.ɵɵpipeBind1(10, 18, "Email address"));
        ɵngcc0.ɵɵproperty("ngModel", ctx.model.email)("readonly", ctx.emailReadOnly);
        ɵngcc0.ɵɵadvance(8);
        ɵngcc0.ɵɵpropertyInterpolate("placeholder", ɵngcc0.ɵɵpipeBind1(18, 20, "New password"));
        ɵngcc0.ɵɵproperty("ngModel", ctx.model.newPassword)("pattern", ctx.passwordPattern)("passwordStrengthEnforced", ctx.passwordStrengthEnforced);
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵproperty("text", ctx.loginService.ERROR_MESSAGES.pattern_newPassword);
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵpropertyInterpolate("placeholder", ɵngcc0.ɵɵpipeBind1(26, 22, "Confirm password"));
        ɵngcc0.ɵɵproperty("ngModel", ctx.model.newPasswordConfirm);
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵproperty("text", ctx.loginService.ERROR_MESSAGES.passwordConfirm);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("password", ctx.model.newPassword)("hidden", !ctx.model.newPassword);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("password", ctx.model.newPassword)("hidden", !ctx.model.newPassword || !ctx.passwordStrengthEnforced);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(33, 24, "Set password"));
        ɵngcc0.ɵɵproperty("disabled", !_r0.form.valid || ctx.isLoading);
    } }, directives: function () { return [ɵngcc13.ɵNgNoValidate, ɵngcc13.NgControlStatusGroup, ɵngcc13.NgForm, C8yTranslateDirective, ɵngcc6.NgIf, FormGroupComponent, RequiredInputPlaceholderDirective, ɵngcc13.DefaultValueAccessor, ɵngcc13.EmailValidator, ɵngcc13.RequiredValidator, ɵngcc13.NgControlStatus, ɵngcc13.NgModel, ɵngcc13.PatternValidator, PasswordStrengthValidatorDirective, MessagesComponent, MessageDirective, PasswordConfirm, PasswordStrengthComponent, PasswordCheckListComponent]; }, pipes: function () { return [C8yTranslatePipe]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ChangePasswordComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-change-password',
                template: "<form\n  role=\"form\"\n  class=\"loginForm\"\n  (ngSubmit)=\"changePassword()\"\n  #changePasswordForm=\"ngForm\"\n  novalidate\n>\n\n  <div\n    class=\"legend form-block center\"\n    translate\n  >\n    Change password\n  </div>\n\n  <c8y-form-group class=\"tenantField\" id=\"tenantField\" *ngIf=\"loginService.showTenant()\">\n    <label translate>Tenant ID</label>\n    <input\n      [(ngModel)]=\"model.tenantId\"\n      #tenantId=\"ngModel\"\n      type=\"text\"\n      name=\"tenantId\"\n      autocapitalize=\"off\"\n      autocorrect=\"off\"\n      class=\"form-control\"\n      placeholder=\"{{ 'Tenant ID' | translate }}\"\n      required\n    />\n  </c8y-form-group>\n\n  <c8y-form-group>\n    <label translate>Email address</label>\n    <input\n      [(ngModel)]=\"model.email\"\n      #email=\"ngModel\"\n      type=\"text\"\n      name=\"email\"\n      autocapitalize=\"off\"\n      autocorrect=\"off\"\n      class=\"form-control\"\n      placeholder=\"{{ 'Email address' | translate }}\"\n      email\n      required\n      [readonly]=\"emailReadOnly\"\n    />\n  </c8y-form-group>\n\n  <div class=\"row content-flex-50\">\n    <div class=\"col-7\">\n      <c8y-form-group>\n        <label translate>New password</label>\n        <input\n          [(ngModel)]=\"model.newPassword\"\n          #newPassword=\"ngModel\"\n          type=\"password\"\n          name=\"newPassword\"\n          class=\"form-control\"\n          placeholder=\"{{ 'New password' | translate }}\"\n          [pattern]=\"passwordPattern\"\n          autocomplete=\"new-password\"\n          [passwordStrengthEnforced]='passwordStrengthEnforced'\n          required\n        />\n        <c8y-messages>\n          <c8y-message\n            name=\"pattern\"\n            [text]=\"loginService.ERROR_MESSAGES.pattern_newPassword\"\n          ></c8y-message>\n        </c8y-messages>\n      </c8y-form-group>\n\n      <c8y-form-group>\n        <label translate>Confirm password</label>\n        <input\n          [(ngModel)]=\"model.newPasswordConfirm\"\n          #newPasswordConfirm=\"ngModel\"\n          type=\"password\"\n          name=\"newPasswordConfirm\"\n          class=\"form-control\"\n          placeholder=\"{{ 'Confirm password' | translate }}\"\n          passwordConfirm=\"newPassword\"\n          autocomplete=\"new-password\"\n          required\n        />\n        <c8y-messages>\n          <c8y-message\n            name=\"passwordConfirm\"\n            [text]=\"loginService.ERROR_MESSAGES.passwordConfirm\"\n          ></c8y-message>\n        </c8y-messages>\n      </c8y-form-group>\n    </div>\n    <div class=\"col-5\">\n      <c8y-password-strength\n        [password]=\"model.newPassword\"\n        [hidden]=\"!model.newPassword\"\n      ></c8y-password-strength>\n      <c8y-password-check-list\n        class=\"m-t-32\"\n        [password]=\"model.newPassword\"\n        [hidden]=\"!model.newPassword || !passwordStrengthEnforced\"\n      ></c8y-password-check-list>\n    </div>\n  </div>\n\n  <button\n    title=\"{{ 'Set password' | translate }}\"\n    [disabled]=\"!changePasswordForm.form.valid || isLoading\"\n    type=\"submit\"\n    class=\"btn btn-primary btn-lg btn-block form-group\"\n    translate\n  >\n    Set password\n  </button>\n</form>\n"
            }]
    }], function () { return [{ type: LoginService }, { type: ɵngcc3.UserService }, { type: PasswordService }, { type: OptionsService }, { type: AlertService }]; }, { onChangeView: [{
            type: i0.Output
        }], credentials: [{
            type: i0.Input
        }] }); })();
        return ChangePasswordComponent;
    }());
    ChangePasswordComponent.ctorParameters = function () { return [
        { type: LoginService },
        { type: client.UserService },
        { type: PasswordService },
        { type: OptionsService },
        { type: AlertService }
    ]; };
    ChangePasswordComponent.propDecorators = {
        credentials: [{ type: i0.Input }],
        onChangeView: [{ type: i0.Output }]
    };

    var CredentialsComponent = /** @class */ (function () {
        function CredentialsComponent(loginService, alert, ui) {
            this.loginService = loginService;
            this.alert = alert;
            this.ui = ui;
            this.onChangeView = new i0.EventEmitter();
            this.LOGIN_VIEWS = exports.LoginViews;
            this.model = {};
            this.isLoading = false;
            this.showLoginForm = false;
            this.showBasicAuth = false;
            this.oauthOptions = {};
            this.PASSWORD_RESET_HEADER_NAME = 'passwordresettoken';
            this.NO_PHONE_HEADER_NAME = 'NoPhoneHeader';
        }
        CredentialsComponent.prototype.ngOnInit = function () {
            var _a = this.loginService, oauthOptions = _a.oauthOptions, loginMode = _a.loginMode;
            this.model.tenant = this.loginService.getTenant();
            this.showLoginForm =
                typeof loginMode.visibleOnLoginPage === 'undefined' || loginMode.visibleOnLoginPage;
            this.showBasicAuth = loginMode.type === 'BASIC';
            this.oauthOptions = oauthOptions;
        };
        CredentialsComponent.prototype.redirectToOauth = function () {
            this.loginService.redirectToOauth();
        };
        /**
         * Allows to login into the application using basic auth.
         * If successful logged in the client is set in shared/cumulocity.service.ts
         */
        CredentialsComponent.prototype.login = function () {
            return __awaiter(this, void 0, void 0, function () {
                var basicAuth, e_1;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            _a.trys.push([0, 2, 3, 4]);
                            this.isLoading = true;
                            basicAuth = this.loginService.useBasicAuth(this.model);
                            return [4 /*yield*/, this.loginService.login(basicAuth, this.model)];
                        case 1:
                            _a.sent();
                            return [3 /*break*/, 4];
                        case 2:
                            e_1 = _a.sent();
                            if (e_1.res && e_1.res.headers && e_1.res.headers.get(this.PASSWORD_RESET_HEADER_NAME)) {
                                this.handlePasswordReset(e_1.res);
                            }
                            else if (e_1.res && e_1.res.status === 401 && /pin/i.test(e_1.data.message)) {
                                this.handleSmsChallenge(e_1.data.message);
                            }
                            else if (e_1.res && e_1.res.status === 401 && /TOTP/i.test(e_1.data.message)) {
                                this.handleTotpChallenge(e_1.data.message);
                            }
                            else if (e_1.res &&
                                e_1.res.headers &&
                                e_1.res.headers.get(this.NO_PHONE_HEADER_NAME) &&
                                !this.loginService.isSupportUser(this.model)) {
                                this.handleNoPhoneNumberProvided();
                            }
                            else {
                                this.loginService.generateOauthToken(this.model);
                                this.loginService.reset();
                                this.alert.addServerFailure(e_1);
                            }
                            return [3 /*break*/, 4];
                        case 3:
                            this.isLoading = false;
                            return [7 /*endfinally*/];
                        case 4: return [2 /*return*/];
                    }
                });
            });
        };
        CredentialsComponent.prototype.handlePasswordReset = function (e) {
            this.alert.removeLastDanger();
            this.model.token = e.headers.get(this.PASSWORD_RESET_HEADER_NAME);
            this.onChangeView.emit({ view: exports.LoginViews.ChangePassword, credentials: this.model });
        };
        CredentialsComponent.prototype.handleTotpChallenge = function (message) {
            if (/TOTP setup required/i.test(message)) {
                this.onChangeView.emit({ view: exports.LoginViews.TotpSetup, credentials: this.model });
            }
            else {
                this.onChangeView.emit({ view: exports.LoginViews.TotpChallenge, credentials: this.model });
            }
        };
        CredentialsComponent.prototype.handleSmsChallenge = function (message) {
            if (/pin has already been generated/i.test(message)) {
                this.alert.warning(gettext('The verification code was already sent. For a new verification code, please click on the link above.'));
            }
            this.alert.removeLastDanger();
            this.onChangeView.emit({ view: exports.LoginViews.SmsChallenge, credentials: this.model });
        };
        CredentialsComponent.prototype.handleNoPhoneNumberProvided = function () {
            this.onChangeView.emit({ view: exports.LoginViews.ProvidePhoneNumber, credentials: this.model });
            this.alert.warning(gettext('Two-factor authentication has been turned on for this account. Provide your phone number above to save it in your user profile and start receiving verification codes via SMS.'));
        };
CredentialsComponent.ɵfac = function CredentialsComponent_Factory(t) { return new (t || CredentialsComponent)(ɵngcc0.ɵɵdirectiveInject(LoginService), ɵngcc0.ɵɵdirectiveInject(AlertService), ɵngcc0.ɵɵdirectiveInject(AppStateService)); };
CredentialsComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CredentialsComponent, selectors: [["c8y-credentials"]], outputs: { onChangeView: "onChangeView" }, decls: 2, vars: 2, consts: [["id", "oauth", 4, "ngIf"], ["role", "form", "class", "loginForm", "novalidate", "", 3, "ngSubmit", 4, "ngIf"], ["id", "oauth"], [1, "btn", "btn-block", "btn-lg", "form-group", 3, "title", "click"], [1, "pull-left", 3, "c8yIcon"], ["role", "form", "novalidate", "", 1, "loginForm", 3, "ngSubmit"], ["loginForm", "ngForm"], ["class", "legend form-block center", "translate", "", 4, "ngIf", "ngIfElse"], ["orLegend", ""], ["class", "tenantField", "id", "tenantField", 4, "ngIf"], ["for", "user", "translate", ""], ["type", "text", "name", "user", "id", "user", "autocapitalize", "off", "autocorrect", "off", "placeholder-no-required-hint", "", "required", "", 1, "form-control", 3, "ngModel", "placeholder", "ngModelChange"], ["user", "ngModel"], ["for", "password", "translate", ""], ["type", "password", "name", "password", "id", "password", "placeholder-no-required-hint", "", "required", "", 1, "form-control", 3, "ngModel", "ngModelChange"], ["password", "ngModel"], ["class", "form-group", 4, "ngIf"], ["type", "submit", 1, "btn", "btn-primary", "btn-lg", "btn-block", "form-group", 3, "title", "disabled"], [1, "text-center", "m-t-8"], [1, "btn", "btn-link", "btn-sm", 3, "title", "click"], ["class", "text-center m-t-8", 4, "ngIf"], ["translate", "", 1, "legend", "form-block", "center"], ["id", "tenantField", 1, "tenantField"], ["for", "tenant", "translate", ""], ["type", "text", "name", "tenant", "id", "tenant", "autocapitalize", "off", "autocorrect", "off", "placeholder-no-required-hint", "", "required", "", 1, "form-control", 3, "ngModel", "placeholder", "ngModelChange"], ["tenant", "ngModel"], [1, "form-group"], [1, "c8y-checkbox", 3, "title"], ["type", "checkbox", "name", "remember", 3, "ngModel", "ngModelChange"], [1, "btn", "btn-link", "btn-sm", 3, "title", "href"]], template: function CredentialsComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, CredentialsComponent_div_0_Template, 6, 7, "div", 0);
        ɵngcc0.ɵɵtemplate(1, CredentialsComponent_form_1_Template, 29, 25, "form", 1);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.oauthOptions.initRequest && ctx.oauthOptions.visibleOnLoginPage);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showLoginForm);
    } }, directives: [ɵngcc6.NgIf, IconDirective, ɵngcc13.ɵNgNoValidate, ɵngcc13.NgControlStatusGroup, ɵngcc13.NgForm, FormGroupComponent, C8yTranslateDirective, RequiredInputPlaceholderDirective, ɵngcc13.DefaultValueAccessor, ɵngcc13.RequiredValidator, ɵngcc13.NgControlStatus, ɵngcc13.NgModel, ɵngcc13.CheckboxControlValueAccessor], pipes: [C8yTranslatePipe, ɵngcc6.AsyncPipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CredentialsComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-credentials',
                template: "<div id=\"oauth\" *ngIf=\"oauthOptions.initRequest && oauthOptions.visibleOnLoginPage\">\n  <button\n    title=\"{{ oauthOptions.buttonName | translate }}\"\n    (click)=\"redirectToOauth()\"\n    class=\"btn btn-block btn-lg form-group\"\n  >\n    <i [c8yIcon]=\"'sign-in'\" class=\"pull-left\"></i>\n    {{ oauthOptions.buttonName | translate }}\n  </button>\n</div>\n\n<form\n  role=\"form\"\n  class=\"loginForm\"\n  (ngSubmit)=\"login()\"\n  #loginForm=\"ngForm\"\n  *ngIf=\"showLoginForm\"\n  novalidate\n>\n  <div\n    class=\"legend form-block center\"\n    *ngIf=\"!(oauthOptions.initRequest && oauthOptions.visibleOnLoginPage); else orLegend\"\n    translate\n  >\n    Login\n  </div>\n  <ng-template #orLegend>\n    <div class=\"legend form-block center\" translate>or</div>\n  </ng-template>\n\n  <c8y-form-group class=\"tenantField\" id=\"tenantField\" *ngIf=\"loginService.showTenant()\">\n    <label for=\"tenant\" translate>Tenant ID</label>\n    <input\n      [(ngModel)]=\"model.tenant\"\n      #tenant=\"ngModel\"\n      type=\"text\"\n      name=\"tenant\"\n      id=\"tenant\"\n      autocapitalize=\"off\"\n      autocorrect=\"off\"\n      class=\"form-control\"\n      placeholder=\"{{ 'e.g.' | translate }} t12345\"\n      placeholder-no-required-hint\n      required\n    />\n  </c8y-form-group>\n  <c8y-form-group>\n    <label for=\"user\" translate>Username</label>\n    <input\n      [(ngModel)]=\"model.user\"\n      #user=\"ngModel\"\n      type=\"text\"\n      name=\"user\"\n      id=\"user\"\n      autocapitalize=\"off\"\n      autocorrect=\"off\"\n      class=\"form-control\"\n      placeholder=\"{{ 'e.g. joe or joe.doe@example.com`LOCALIZE`' | translate }}\"\n      placeholder-no-required-hint\n      required\n    />\n  </c8y-form-group>\n  <c8y-form-group>\n    <label for=\"password\" translate>Password</label>\n    <input\n      [(ngModel)]=\"model.password\"\n      #password=\"ngModel\"\n      type=\"password\"\n      name=\"password\"\n      id=\"password\"\n      class=\"form-control\"\n      placeholder-no-required-hint\n      required\n    />\n  </c8y-form-group>\n  <div class=\"form-group\" *ngIf=\"showBasicAuth\">\n    <label title=\"{{ 'Remember me' | translate }}\" class=\"c8y-checkbox\">\n      <input type=\"checkbox\" name=\"remember\" [(ngModel)]=\"loginService.rememberMe\" />\n      <span></span>\n      <span>{{ 'Remember me' | translate }}</span>\n    </label>\n  </div>\n  <button\n    title=\"{{ 'Log in' | translate }}\"\n    [disabled]=\"!loginForm.form.valid || isLoading\"\n    type=\"submit\"\n    class=\"btn btn-primary btn-lg btn-block form-group\"\n  >\n    {{ 'Log in' | translate }}\n  </button>\n  <div class=\"text-center m-t-8\">\n    <a\n      title=\"{{ 'Forgot password?' | translate }}\"\n      class=\"btn btn-link btn-sm\"\n      (click)=\"onChangeView.emit({ view: LOGIN_VIEWS.RecoverPassword })\"\n      >{{ 'Forgot password?' | translate }}</a\n    >\n  </div>\n  <div class=\"text-center m-t-8\" *ngIf=\"!!(ui.state$ | async).loginExtraLink\">\n    <a\n      title=\"{{ (ui.state$ | async).loginExtraLink.label }}\"\n      [href]=\"(ui.state$ | async).loginExtraLink.url\"\n      class=\"btn btn-link btn-sm\"\n    >\n      {{ (ui.state$ | async).loginExtraLink.label }}</a\n    >\n  </div>\n</form>\n"
            }]
    }], function () { return [{ type: LoginService }, { type: AlertService }, { type: AppStateService }]; }, { onChangeView: [{
            type: i0.Output
        }] }); })();
        return CredentialsComponent;
    }());
    CredentialsComponent.ctorParameters = function () { return [
        { type: LoginService },
        { type: AlertService },
        { type: AppStateService }
    ]; };
    CredentialsComponent.propDecorators = {
        onChangeView: [{ type: i0.Output }]
    };

    var LoginComponent = /** @class */ (function () {
        /**
         * Just DI.
         */
        function LoginComponent(loginService, options, alert) {
            this.loginService = loginService;
            this.options = options;
            this.alert = alert;
            this.currentView = exports.LoginViews.None;
            this.LOGIN_VIEWS = exports.LoginViews;
            this.disabled = false;
            this.credentials = {};
            this.displayAlerts = false;
            this.TOKEN_PARAM = 'token';
        }
        LoginComponent.prototype.ngOnInit = function () {
            var token = this.getResetPasswordToken();
            if (this.loginService.isFirstLogin) {
                if (!token) {
                    this.loginAutomatically();
                }
                else {
                    this.credentials.token = token;
                    this.reset();
                }
            }
            this.loginService.isFirstLogin = false;
        };
        LoginComponent.prototype.handleLoginTemplate = function (event) {
            this.currentView = event.view;
            this.credentials = event.credentials || {};
        };
        LoginComponent.prototype.onkeyup = function (event) {
            if (event.key !== 'Enter') {
                this.loginService.cleanMessages();
            }
        };
        LoginComponent.prototype.reset = function () {
            this.loginService.reset();
            this.setView();
            this.loginService.cleanMessages();
        };
        LoginComponent.prototype.loginAutomatically = function () {
            return __awaiter(this, void 0, void 0, function () {
                var e_1, preferredLoginOptionType;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            _a.trys.push([0, 2, , 3]);
                            return [4 /*yield*/, this.loginService.login()];
                        case 1:
                            _a.sent();
                            return [3 /*break*/, 3];
                        case 2:
                            e_1 = _a.sent();
                            preferredLoginOptionType = this.loginService.loginMode.type;
                            if (preferredLoginOptionType === client.TenantLoginOptionType.OAUTH2) {
                                this.loginService.redirectToOauth();
                            }
                            else {
                                this.reset();
                                if (preferredLoginOptionType === client.TenantLoginOptionType.OAUTH2_INTERNAL && window.location.protocol !== 'https:') {
                                    this.alert.danger(gettext('Current login mode only supports HTTPS.'));
                                }
                                else if (e_1.res && e_1.res.status === 403) {
                                    this.alert.addServerFailure(e_1);
                                }
                            }
                            return [3 /*break*/, 3];
                        case 3: return [2 /*return*/];
                    }
                });
            });
        };
        LoginComponent.prototype.setView = function () {
            if (this.loginService.showTenantSetup()) {
                this.handleLoginTemplate({ view: exports.LoginViews.TenantIdSetup });
            }
            else if (this.credentials && this.credentials.token) {
                this.handleLoginTemplate({ view: exports.LoginViews.ChangePassword, credentials: this.credentials });
            }
            else {
                this.handleLoginTemplate({ view: exports.LoginViews.Credentials });
            }
        };
        LoginComponent.prototype.getResetPasswordToken = function () {
            var token = this.options.get(this.TOKEN_PARAM);
            if (token) {
                this.options.set(this.TOKEN_PARAM, undefined); // only use once
            }
            return token;
        };
LoginComponent.ɵfac = function LoginComponent_Factory(t) { return new (t || LoginComponent)(ɵngcc0.ɵɵdirectiveInject(LoginService), ɵngcc0.ɵɵdirectiveInject(OptionsService), ɵngcc0.ɵɵdirectiveInject(AlertService)); };
LoginComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: LoginComponent, selectors: [["c8y-login"]], hostBindings: function LoginComponent_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("keyup", function LoginComponent_keyup_HostBindingHandler($event) { return ctx.onkeyup($event); });
    } }, inputs: { name: "name" }, decls: 1, vars: 1, consts: [["class", "loading card fadeInUp animated shadow5", 3, "ngSwitch", 4, "ngIf"], [1, "loading", "card", "fadeInUp", "animated", "shadow5", 3, "ngSwitch"], [1, "card-block", "p-b-0"], [1, "mainlogo"], [3, "onChangeView", 4, "ngSwitchCase"], [3, "credentials", "onChangeView", 4, "ngSwitchCase"], [3, "view", "credentials", "onCancel", 4, "ngSwitchCase"], [3, "credentials", "onCancel", 4, "ngSwitchCase"], [3, "credentials", "onCancel", "onChangeView", 4, "ngSwitchCase"], ["position", "static"], [3, "onChangeView"], [3, "credentials", "onChangeView"], [3, "view", "credentials", "onCancel"], [3, "credentials", "onCancel"], [3, "credentials", "onCancel", "onChangeView"]], template: function LoginComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, LoginComponent_div_0_Template, 12, 9, "div", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.currentView !== ctx.LOGIN_VIEWS.None);
    } }, directives: function () { return [ɵngcc6.NgIf, ɵngcc6.NgSwitch, ɵngcc6.NgSwitchCase, AlertOutletComponent, CredentialsComponent, RecoverPasswordComponent, ChangePasswordComponent, TotpAuthComponent, SmsChallengeComponent, ProvidePhoneNumberComponent, TenantIdSetupComponent]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LoginComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-login',
                template: "<div\n  class=\"loading card fadeInUp animated shadow5\"\n  *ngIf=\"currentView !== LOGIN_VIEWS.None\"\n  [ngSwitch]=\"currentView\"\n>\n  <div class=\"card-block p-b-0\">\n    <img class=\"mainlogo\">\n    <c8y-credentials\n      *ngSwitchCase=\"LOGIN_VIEWS.Credentials\"\n      (onChangeView)=\"handleLoginTemplate($event)\"\n    ></c8y-credentials>\n    <c8y-recover-password\n      *ngSwitchCase=\"LOGIN_VIEWS.RecoverPassword\"\n      (onChangeView)=\"handleLoginTemplate($event)\"\n    ></c8y-recover-password>\n    <c8y-change-password\n      *ngSwitchCase=\"LOGIN_VIEWS.ChangePassword\"\n      (onChangeView)=\"handleLoginTemplate($event)\"\n      [credentials]=\"credentials\"\n    ></c8y-change-password>\n    <c8y-totp-auth\n      *ngSwitchCase=\"LOGIN_VIEWS.TotpChallenge\"\n      (onCancel)=\"reset()\"\n      [view]=\"currentView\"\n      [credentials]=\"credentials\"\n    >\n    </c8y-totp-auth>\n    <c8y-totp-auth\n      *ngSwitchCase=\"LOGIN_VIEWS.TotpSetup\"\n      (onCancel)=\"reset()\"\n      [view]=\"currentView\"\n      [credentials]=\"credentials\"\n    >\n    </c8y-totp-auth>\n    <c8y-sms-challenge\n      *ngSwitchCase=\"LOGIN_VIEWS.SmsChallenge\"\n      (onCancel)=\"reset()\"\n      [credentials]=\"credentials\"\n    ></c8y-sms-challenge>\n\n    <c8y-provide-phone-number\n      *ngSwitchCase=\"LOGIN_VIEWS.ProvidePhoneNumber\"\n      (onCancel)=\"reset()\"\n      (onChangeView)=\"handleLoginTemplate($event)\"\n      [credentials]=\"credentials\"\n    ></c8y-provide-phone-number>\n    <c8y-tenant-id-setup\n      *ngSwitchCase=\"LOGIN_VIEWS.TenantIdSetup\"\n      (onChangeView)=\"handleLoginTemplate($event)\"\n    ></c8y-tenant-id-setup>\n\n    <c8y-alert-outlet position=\"static\"></c8y-alert-outlet>\n  </div>\n</div>\n"
            }]
    }], function () { return [{ type: LoginService }, { type: OptionsService }, { type: AlertService }]; }, { onkeyup: [{
            type: i0.HostListener,
            args: ['keyup', ['$event']]
        }], name: [{
            type: i0.Input
        }] }); })();
        return LoginComponent;
    }());
    LoginComponent.ctorParameters = function () { return [
        { type: LoginService },
        { type: OptionsService },
        { type: AlertService }
    ]; };
    LoginComponent.propDecorators = {
        name: [{ type: i0.Input }],
        onkeyup: [{ type: i0.HostListener, args: ['keyup', ['$event'],] }]
    };

    var RecoverPasswordComponent = /** @class */ (function () {
        function RecoverPasswordComponent(users, loginService) {
            this.users = users;
            this.loginService = loginService;
            this.onChangeView = new i0.EventEmitter();
            this.LOGIN_VIEWS = exports.LoginViews;
            this.isLoading = false;
            this.model = {
                email: '',
                tenantId: ''
            };
        }
        RecoverPasswordComponent.prototype.ngOnInit = function () {
            this.model.tenantId = this.loginService.getTenant();
        };
        RecoverPasswordComponent.prototype.resetPassword = function () {
            return __awaiter(this, void 0, void 0, function () {
                var res;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            _a.trys.push([0, , 2, 3]);
                            this.isLoading = true;
                            return [4 /*yield*/, this.users.sendPasswordResetMail(this.model.email, this.model.tenantId)];
                        case 1:
                            res = (_a.sent()).res;
                            if (res.status === 200) {
                                this.loginService.addSuccessMessage('password_reset_requested');
                            }
                            return [3 /*break*/, 3];
                        case 2:
                            this.loginService.reset();
                            this.isLoading = false;
                            return [7 /*endfinally*/];
                        case 3: return [2 /*return*/];
                    }
                });
            });
        };
RecoverPasswordComponent.ɵfac = function RecoverPasswordComponent_Factory(t) { return new (t || RecoverPasswordComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc3.UserService), ɵngcc0.ɵɵdirectiveInject(LoginService)); };
RecoverPasswordComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: RecoverPasswordComponent, selectors: [["c8y-recover-password"]], outputs: { onChangeView: "onChangeView" }, decls: 19, vars: 12, consts: [["role", "form", "novalidate", "", 1, "loginForm", 3, "ngSubmit"], ["resetForm", "ngForm"], ["translate", "", 1, "legend", "form-block", "center"], ["class", "tenantField", "id", "tenantField", 4, "ngIf"], ["translate", ""], ["type", "text", "name", "email", "autocapitalize", "off", "autocorrect", "off", "email", "", "required", "", 1, "form-control", 3, "ngModel", "placeholder", "ngModelChange"], ["email", "ngModel"], ["type", "submit", "translate", "", 1, "btn", "btn-primary", "btn-lg", "btn-block", "form-group", 3, "title", "disabled"], [1, "text-center", "m-t-8"], ["translate", "", 1, "btn", "btn-link", "btn-sm", 3, "title", "click"], ["id", "tenantField", 1, "tenantField"], ["type", "text", "name", "tenantId", "autocapitalize", "off", "autocorrect", "off", "required", "", 1, "form-control", 3, "ngModel", "placeholder", "ngModelChange"], ["tenantId", "ngModel"]], template: function RecoverPasswordComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "form", 0, 1);
        ɵngcc0.ɵɵlistener("ngSubmit", function RecoverPasswordComponent_Template_form_ngSubmit_0_listener() { return ctx.resetPassword(); });
        ɵngcc0.ɵɵelementStart(2, "div", 2);
        ɵngcc0.ɵɵtext(3, " Forgot password? ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(4, RecoverPasswordComponent_c8y_form_group_4_Template, 6, 4, "c8y-form-group", 3);
        ɵngcc0.ɵɵelementStart(5, "c8y-form-group");
        ɵngcc0.ɵɵelementStart(6, "label", 4);
        ɵngcc0.ɵɵtext(7, "Email address");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(8, "input", 5, 6);
        ɵngcc0.ɵɵlistener("ngModelChange", function RecoverPasswordComponent_Template_input_ngModelChange_8_listener($event) { return ctx.model.email = $event; });
        ɵngcc0.ɵɵpipe(10, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(11, "button", 7);
        ɵngcc0.ɵɵpipe(12, "translate");
        ɵngcc0.ɵɵtext(13, " Reset password ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(14, "div", 8);
        ɵngcc0.ɵɵelementStart(15, "p");
        ɵngcc0.ɵɵelementStart(16, "a", 9);
        ɵngcc0.ɵɵlistener("click", function RecoverPasswordComponent_Template_a_click_16_listener() { return ctx.onChangeView.emit({ view: ctx.LOGIN_VIEWS.Credentials }); });
        ɵngcc0.ɵɵpipe(17, "translate");
        ɵngcc0.ɵɵtext(18, " Login ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        var _r0 = ɵngcc0.ɵɵreference(1);
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵproperty("ngIf", ctx.loginService.showTenant());
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵpropertyInterpolate("placeholder", ɵngcc0.ɵɵpipeBind1(10, 6, "Email address"));
        ɵngcc0.ɵɵproperty("ngModel", ctx.model.email);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(12, 8, "Reset password"));
        ɵngcc0.ɵɵproperty("disabled", !_r0.form.valid || ctx.isLoading);
        ɵngcc0.ɵɵadvance(5);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(17, 10, "Login"));
    } }, directives: [ɵngcc13.ɵNgNoValidate, ɵngcc13.NgControlStatusGroup, ɵngcc13.NgForm, C8yTranslateDirective, ɵngcc6.NgIf, FormGroupComponent, RequiredInputPlaceholderDirective, ɵngcc13.DefaultValueAccessor, ɵngcc13.EmailValidator, ɵngcc13.RequiredValidator, ɵngcc13.NgControlStatus, ɵngcc13.NgModel], pipes: [C8yTranslatePipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(RecoverPasswordComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-recover-password',
                template: "<form #resetForm=\"ngForm\" role=\"form\" class=\"loginForm\" (ngSubmit)=\"resetPassword()\" novalidate>\n  <div class=\"legend form-block center\" translate>\n    Forgot password?\n  </div>\n  <c8y-form-group class=\"tenantField\" id=\"tenantField\" *ngIf=\"loginService.showTenant()\">\n    <label translate>Tenant ID</label>\n    <input\n      [(ngModel)]=\"model.tenantId\"\n      #tenantId=\"ngModel\"\n      type=\"text\"\n      name=\"tenantId\"\n      autocapitalize=\"off\"\n      autocorrect=\"off\"\n      class=\"form-control\"\n      placeholder=\"{{ 'Tenant ID' | translate }}\"\n      required\n    />\n  </c8y-form-group>\n\n  <c8y-form-group>\n    <label translate>Email address</label>\n    <input\n      [(ngModel)]=\"model.email\"\n      #email=\"ngModel\"\n      type=\"text\"\n      name=\"email\"\n      autocapitalize=\"off\"\n      autocorrect=\"off\"\n      class=\"form-control\"\n      placeholder=\"{{ 'Email address' | translate }}\"\n      email\n      required\n    />\n  </c8y-form-group>\n\n  <button\n    title=\"{{ 'Reset password' | translate }}\"\n    [disabled]=\"!resetForm.form.valid || isLoading\"\n    type=\"submit\"\n    class=\"btn btn-primary btn-lg btn-block form-group\"\n    translate\n  >\n    Reset password\n  </button>\n  <div class=\"text-center m-t-8\">\n    <p>\n      <a\n        title=\"{{ 'Login' | translate }}\"\n        class=\"btn btn-link btn-sm\"\n        (click)=\"onChangeView.emit({ view: LOGIN_VIEWS.Credentials })\"\n        translate\n    >\n      Login\n    </a>\n    </p>\n  </div>\n</form>\n"
            }]
    }], function () { return [{ type: ɵngcc3.UserService }, { type: LoginService }]; }, { onChangeView: [{
            type: i0.Output
        }] }); })();
        return RecoverPasswordComponent;
    }());
    RecoverPasswordComponent.ctorParameters = function () { return [
        { type: client.UserService },
        { type: LoginService }
    ]; };
    RecoverPasswordComponent.propDecorators = {
        onChangeView: [{ type: i0.Output }]
    };

    var TotpAuthComponent = /** @class */ (function () {
        function TotpAuthComponent(loginService, userService, alert) {
            this.loginService = loginService;
            this.userService = userService;
            this.alert = alert;
            this.onCancel = new i0.EventEmitter();
            this.LOGIN_VIEWS = exports.LoginViews;
            this.loading = false;
            this.hasError = false;
            this.isSetup = false;
        }
        /**
         * In case of a setup we need the user to be authorized
         * first.
         */
        TotpAuthComponent.prototype.ngOnInit = function () {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            if (!(this.view === this.LOGIN_VIEWS.TotpSetup)) return [3 /*break*/, 2];
                            return [4 /*yield*/, this.loginService.switchLoginMode(this.credentials)];
                        case 1:
                            _a.sent();
                            this.isSetup = true;
                            _a.label = 2;
                        case 2: return [2 /*return*/];
                    }
                });
            });
        };
        TotpAuthComponent.prototype.onTotpSuccess = function (code) {
            return __awaiter(this, void 0, void 0, function () {
                var e_1;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            _a.trys.push([0, 6, 7, 8]);
                            this.loading = true;
                            this.hasError = false;
                            this.credentials.tfa = code;
                            if (!this.isSetup) return [3 /*break*/, 2];
                            return [4 /*yield*/, this.userService.activateTotp()];
                        case 1:
                            _a.sent();
                            _a.label = 2;
                        case 2: return [4 /*yield*/, this.loginService.switchLoginMode(this.credentials)];
                        case 3:
                            _a.sent();
                            return [4 /*yield*/, this.loginService.verifyAppAccess()];
                        case 4:
                            _a.sent();
                            return [4 /*yield*/, this.loginService.authFulfilled()];
                        case 5:
                            _a.sent();
                            return [3 /*break*/, 8];
                        case 6:
                            e_1 = _a.sent();
                            this.alert.removeLastDanger();
                            if (e_1.data && e_1.data.message === 'Access is denied') {
                                this.alert.addServerFailure(e_1);
                            }
                            if (e_1.data && e_1.data.message === 'Authentication failed! : User account is locked') {
                                this.alert.warning(gettext('Authentication failed due to: user account is locked.'));
                            }
                            else {
                                this.hasError = true;
                            }
                            return [3 /*break*/, 8];
                        case 7:
                            this.loading = false;
                            return [7 /*endfinally*/];
                        case 8: return [2 /*return*/];
                    }
                });
            });
        };
TotpAuthComponent.ɵfac = function TotpAuthComponent_Factory(t) { return new (t || TotpAuthComponent)(ɵngcc0.ɵɵdirectiveInject(LoginService), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.UserService), ɵngcc0.ɵɵdirectiveInject(AlertService)); };
TotpAuthComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: TotpAuthComponent, selectors: [["c8y-totp-auth"]], inputs: { credentials: "credentials", view: "view" }, outputs: { onCancel: "onCancel" }, decls: 8, vars: 7, consts: [["translate", "", 1, "legend", "form-block", "center"], [4, "ngIf"], [3, "loading", "hasError", "verify", "onSuccess"], [1, "text-center", "m-t-8"], ["translate", "", 1, "btn", "btn-link", "btn-sm", 3, "title", "click"]], template: function TotpAuthComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵtext(1, " Two-factor authentication\n");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(2, TotpAuthComponent_c8y_totp_setup_2_Template, 1, 0, "c8y-totp-setup", 1);
        ɵngcc0.ɵɵelementStart(3, "c8y-totp-challenge", 2);
        ɵngcc0.ɵɵlistener("onSuccess", function TotpAuthComponent_Template_c8y_totp_challenge_onSuccess_3_listener($event) { return ctx.onTotpSuccess($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(4, "div", 3);
        ɵngcc0.ɵɵelementStart(5, "a", 4);
        ɵngcc0.ɵɵlistener("click", function TotpAuthComponent_Template_a_click_5_listener() { return ctx.onCancel.emit(); });
        ɵngcc0.ɵɵpipe(6, "translate");
        ɵngcc0.ɵɵtext(7, " Cancel ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isSetup);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("loading", ctx.loading)("hasError", ctx.hasError)("verify", ctx.view === ctx.LOGIN_VIEWS.TotpSetup);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(6, 5, "Cancel"));
    } }, directives: [C8yTranslateDirective, ɵngcc6.NgIf, TotpChallengeComponent, TotpSetupComponent], pipes: [C8yTranslatePipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TotpAuthComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-totp-auth',
                template: "<div\n  class=\"legend form-block center\"\n  translate\n>\n  Two-factor authentication\n</div>\n\n<c8y-totp-setup *ngIf=\"isSetup\">\n</c8y-totp-setup>\n<c8y-totp-challenge\n  [loading]=\"loading\"\n  [hasError]=\"hasError\"\n  [verify]=\"view === LOGIN_VIEWS.TotpSetup\"\n  (onSuccess)=\"onTotpSuccess($event)\"\n></c8y-totp-challenge>\n\n<div class=\"text-center m-t-8\">\n  <a\n    title=\"{{ 'Cancel' | translate }}\"\n    class=\"btn btn-link btn-sm\"\n    (click)=\"onCancel.emit()\"\n    translate\n  >\n    Cancel\n  </a>\n</div>\n"
            }]
    }], function () { return [{ type: LoginService }, { type: ɵngcc3.UserService }, { type: AlertService }]; }, { onCancel: [{
            type: i0.Output
        }], credentials: [{
            type: i0.Input
        }], view: [{
            type: i0.Input
        }] }); })();
        return TotpAuthComponent;
    }());
    TotpAuthComponent.ctorParameters = function () { return [
        { type: LoginService },
        { type: client.UserService },
        { type: AlertService }
    ]; };
    TotpAuthComponent.propDecorators = {
        credentials: [{ type: i0.Input }],
        view: [{ type: i0.Input }],
        onCancel: [{ type: i0.Output }]
    };

    var StrengthValidatorService = /** @class */ (function () {
        function StrengthValidatorService(passwordService) {
            this.passwordService = passwordService;
        }
        StrengthValidatorService.prototype.isStrong = function (password) {
            return this.isPasswordGreen(this.passwordService.getStrengthColor(password).passwordStrength);
        };
        StrengthValidatorService.prototype.isPasswordGreen = function (strength) {
            return strength === client.PasswordStrength.GREEN;
        };
StrengthValidatorService.ɵfac = function StrengthValidatorService_Factory(t) { return new (t || StrengthValidatorService)(ɵngcc0.ɵɵinject(PasswordService)); };
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(StrengthValidatorService, [{
        type: i0.Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return [{ type: PasswordService }]; }, null); })();
        return StrengthValidatorService;
    }());
    StrengthValidatorService.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function StrengthValidatorService_Factory() { return new StrengthValidatorService(i0__namespace.ɵɵinject(PasswordService)); }, token: StrengthValidatorService, providedIn: "root" });
    StrengthValidatorService.ctorParameters = function () { return [
        { type: PasswordService }
    ]; };

    var PasswordStrengthValidatorDirective = /** @class */ (function () {
        function PasswordStrengthValidatorDirective(passwordService) {
            this.passwordService = passwordService;
        }
        Object.defineProperty(PasswordStrengthValidatorDirective.prototype, "passwordStrengthEnforced", {
            set: function (value) {
                this.forced = value;
            },
            enumerable: false,
            configurable: true
        });
        PasswordStrengthValidatorDirective.prototype.validate = function (control) {
            var strengthFulfilled = this.passwordService.isStrong(control.value || '');
            var enforcementForcedAndNotFulfilled = this.forced && !strengthFulfilled;
            return enforcementForcedAndNotFulfilled ? { passwordStrength: true } : null;
        };
PasswordStrengthValidatorDirective.ɵfac = function PasswordStrengthValidatorDirective_Factory(t) { return new (t || PasswordStrengthValidatorDirective)(ɵngcc0.ɵɵdirectiveInject(StrengthValidatorService)); };
PasswordStrengthValidatorDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: PasswordStrengthValidatorDirective, selectors: [["", "passwordStrengthEnforced", ""]], inputs: { passwordStrengthEnforced: "passwordStrengthEnforced" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: forms.NG_VALIDATORS, useExisting: PasswordStrengthValidatorDirective, multi: true }])] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PasswordStrengthValidatorDirective, [{
        type: i0.Directive,
        args: [{
                selector: '[passwordStrengthEnforced]',
                providers: [{ provide: forms.NG_VALIDATORS, useExisting: PasswordStrengthValidatorDirective, multi: true }]
            }]
    }], function () { return [{ type: StrengthValidatorService }]; }, { passwordStrengthEnforced: [{
            type: i0.Input
        }] }); })();
        return PasswordStrengthValidatorDirective;
    }());
    PasswordStrengthValidatorDirective.ctorParameters = function () { return [
        { type: StrengthValidatorService }
    ]; };
    PasswordStrengthValidatorDirective.propDecorators = {
        passwordStrengthEnforced: [{ type: i0.Input }]
    };

    /**
     * `TenantIdSetupComponent` is intended to be shown when tenant's id cannot be determined based on the current URL.
     * It asks the user to provide target tenant's id and then it fetches login options for this tenant.
     * In case of OAI-Secure login mode, login options will contain `domain` property set by backend.
     * The component will redirect user to this domain, preserving URL path and params.
     */
    var TenantIdSetupComponent = /** @class */ (function () {
        function TenantIdSetupComponent(client, ui, loginService, alert, translateService) {
            this.client = client;
            this.ui = ui;
            this.loginService = loginService;
            this.alert = alert;
            this.translateService = translateService;
            this.onChangeView = new i0.EventEmitter();
            this.LOGIN_VIEWS = exports.LoginViews;
            this.model = {
                tenant: ''
            };
        }
        /**
         * Sets up login mode for particular tenant. In case of OAI-Secure will redirect user to tenant domain.
         */
        TenantIdSetupComponent.prototype.setupLoginMode = function () {
            return __awaiter(this, void 0, void 0, function () {
                var e_1;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            this.client.tenant = this.model.tenant;
                            _a.label = 1;
                        case 1:
                            _a.trys.push([1, 3, , 4]);
                            return [4 /*yield*/, this.ui.refreshLoginOptions()];
                        case 2:
                            _a.sent();
                            this.loginService.initLoginOptions();
                            this.redirectToCorrectDomain();
                            return [3 /*break*/, 4];
                        case 3:
                            e_1 = _a.sent();
                            if (e_1.res && e_1.res.status === 401) {
                                this.alert.danger(this.translateService.instant(gettext('Could not find tenant with ID "{{ tenantId }}".'), { tenantId: this.model.tenant }));
                            }
                            else {
                                this.alert.addServerFailure(e_1);
                            }
                            return [3 /*break*/, 4];
                        case 4: return [2 /*return*/];
                    }
                });
            });
        };
        /**
         * Redirects to tenant domain when login mode contains domain.
         */
        TenantIdSetupComponent.prototype.redirectToCorrectDomain = function () {
            var loginRedirectDomain = this.loginService.loginMode.loginRedirectDomain;
            if (loginRedirectDomain) {
                this.loginService.redirectToDomain(loginRedirectDomain);
            }
            else {
                this.onChangeView.emit({ view: exports.LoginViews.Credentials });
            }
        };
TenantIdSetupComponent.ɵfac = function TenantIdSetupComponent_Factory(t) { return new (t || TenantIdSetupComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc3.FetchClient), ɵngcc0.ɵɵdirectiveInject(AppStateService), ɵngcc0.ɵɵdirectiveInject(LoginService), ɵngcc0.ɵɵdirectiveInject(AlertService), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.TranslateService)); };
TenantIdSetupComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: TenantIdSetupComponent, selectors: [["c8y-tenant-id-setup"]], outputs: { onChangeView: "onChangeView" }, decls: 13, vars: 8, consts: [["role", "form", "novalidate", "", 1, "loginForm", 3, "ngSubmit"], ["tenantIdSetupForm", "ngForm"], ["translate", "", 1, "legend", "form-block", "center"], ["id", "tenantField", 1, "tenantField"], ["for", "tenant", "translate", ""], ["type", "text", "name", "tenant", "id", "tenant", "autocapitalize", "off", "autocorrect", "off", "placeholder-no-required-hint", "", "required", "", 1, "form-control", 3, "ngModel", "placeholder", "ngModelChange"], ["tenant", "ngModel"], ["type", "submit", "translate", "", 1, "btn", "btn-primary", "btn-lg", "btn-block", "form-group", 3, "title", "disabled"]], template: function TenantIdSetupComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "form", 0, 1);
        ɵngcc0.ɵɵlistener("ngSubmit", function TenantIdSetupComponent_Template_form_ngSubmit_0_listener() { return ctx.setupLoginMode(); });
        ɵngcc0.ɵɵelementStart(2, "div", 2);
        ɵngcc0.ɵɵtext(3, " Tenant setup ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(4, "c8y-form-group", 3);
        ɵngcc0.ɵɵelementStart(5, "label", 4);
        ɵngcc0.ɵɵtext(6, "Tenant ID");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(7, "input", 5, 6);
        ɵngcc0.ɵɵlistener("ngModelChange", function TenantIdSetupComponent_Template_input_ngModelChange_7_listener($event) { return ctx.model.tenant = $event; });
        ɵngcc0.ɵɵpipe(9, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(10, "button", 7);
        ɵngcc0.ɵɵpipe(11, "translate");
        ɵngcc0.ɵɵtext(12, " Apply ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        var _r0 = ɵngcc0.ɵɵreference(1);
        ɵngcc0.ɵɵadvance(7);
        ɵngcc0.ɵɵpropertyInterpolate1("placeholder", "", ɵngcc0.ɵɵpipeBind1(9, 4, "e.g."), " t12345");
        ɵngcc0.ɵɵproperty("ngModel", ctx.model.tenant);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(11, 6, "Apply"));
        ɵngcc0.ɵɵproperty("disabled", !_r0.form.valid);
    } }, directives: [ɵngcc13.ɵNgNoValidate, ɵngcc13.NgControlStatusGroup, ɵngcc13.NgForm, C8yTranslateDirective, FormGroupComponent, RequiredInputPlaceholderDirective, ɵngcc13.DefaultValueAccessor, ɵngcc13.RequiredValidator, ɵngcc13.NgControlStatus, ɵngcc13.NgModel], pipes: [C8yTranslatePipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TenantIdSetupComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-tenant-id-setup',
                template: "<form #tenantIdSetupForm=\"ngForm\" role=\"form\" class=\"loginForm\" (ngSubmit)=\"setupLoginMode()\" novalidate>\n  <div class=\"legend form-block center\" translate>\n    Tenant setup\n  </div>\n  <c8y-form-group class=\"tenantField\" id=\"tenantField\">\n    <label for=\"tenant\" translate>Tenant ID</label>\n    <input\n      [(ngModel)]=\"model.tenant\"\n      #tenant=\"ngModel\"\n      type=\"text\"\n      name=\"tenant\"\n      id=\"tenant\"\n      autocapitalize=\"off\"\n      autocorrect=\"off\"\n      class=\"form-control\"\n      placeholder=\"{{ 'e.g.' | translate }} t12345\"\n      placeholder-no-required-hint\n      required\n    />\n  </c8y-form-group>\n\n  <button\n    title=\"{{ 'Apply' | translate }}\"\n    type=\"submit\"\n    class=\"btn btn-primary btn-lg btn-block form-group\"\n    [disabled]=\"!tenantIdSetupForm.form.valid\"\n    translate\n  >\n    Apply\n  </button>\n</form>\n"
            }]
    }], function () { return [{ type: ɵngcc3.FetchClient }, { type: AppStateService }, { type: LoginService }, { type: AlertService }, { type: ɵngcc4.TranslateService }]; }, { onChangeView: [{
            type: i0.Output
        }] }); })();
        return TenantIdSetupComponent;
    }());
    TenantIdSetupComponent.ctorParameters = function () { return [
        { type: client.FetchClient },
        { type: AppStateService },
        { type: LoginService },
        { type: AlertService },
        { type: i1$1.TranslateService }
    ]; };
    TenantIdSetupComponent.propDecorators = {
        onChangeView: [{ type: i0.Output }]
    };

    /**
     * The angular module definition for the login.
     * @exports LoginComponent
     */
    var LoginModule = /** @class */ (function () {
        function LoginModule() {
        }
        LoginModule.forRoot = function () {
            return {
                ngModule: LoginModule,
                providers: LoginModule.providers()
            };
        };
        LoginModule.providers = function () {
            return [LoginService];
        };
LoginModule.ɵfac = function LoginModule_Factory(t) { return new (t || LoginModule)(); };
LoginModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: LoginModule });
LoginModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[
            forms.FormsModule,
            tooltip.TooltipModule,
            CommonModule,
            AuthenticationModule,
            AlertModule,
            FormsModule
        ]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LoginModule, [{
        type: i0.NgModule,
        args: [{
                declarations: [
                    LoginComponent,
                    RecoverPasswordComponent,
                    ChangePasswordComponent,
                    CredentialsComponent,
                    TotpAuthComponent,
                    PasswordStrengthValidatorDirective,
                    TenantIdSetupComponent
                ],
                imports: [
                    forms.FormsModule,
                    tooltip.TooltipModule,
                    CommonModule,
                    AuthenticationModule,
                    AlertModule,
                    FormsModule
                ],
                exports: [LoginComponent]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(LoginModule, { declarations: [LoginComponent, RecoverPasswordComponent, ChangePasswordComponent, CredentialsComponent, TotpAuthComponent, PasswordStrengthValidatorDirective, TenantIdSetupComponent], imports: [ɵngcc13.FormsModule, ɵngcc8.TooltipModule, CommonModule, AuthenticationModule, AlertModule, FormsModule], exports: [LoginComponent] }); })();
        return LoginModule;
    }());

    var TabComponent = /** @class */ (function () {
        function TabComponent(tabs) {
            this.tabs = tabs;
            this.label = '';
        }
        TabComponent.prototype.ngAfterContentInit = function () {
            var _this = this;
            setTimeout(function () { return _this.tabs.add(_this); });
        };
        TabComponent.prototype.ngOnDestroy = function () {
            this.tabs.remove(this);
        };
TabComponent.ɵfac = function TabComponent_Factory(t) { return new (t || TabComponent)(ɵngcc0.ɵɵdirectiveInject(TabsService)); };
TabComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: TabComponent, selectors: [["c8y-tab"]], viewQuery: function TabComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c33, 5);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.template = _t.first);
    } }, inputs: { label: "label", path: "path", icon: "icon", priority: "priority", orientation: "orientation" }, ngContentSelectors: _c1, decls: 2, vars: 0, consts: [["tpl", ""]], template: function TabComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵtemplate(0, TabComponent_ng_template_0_Template, 1, 0, "ng-template", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);
    } }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TabComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-tab',
                template: '<ng-template #tpl><ng-content></ng-content></ng-template>'
            }]
    }], function () { return [{ type: TabsService }]; }, { label: [{
            type: i0.Input
        }], template: [{
            type: i0.ViewChild,
            args: ['tpl', { static: false }]
        }], path: [{
            type: i0.Input
        }], icon: [{
            type: i0.Input
        }], priority: [{
            type: i0.Input
        }], orientation: [{
            type: i0.Input
        }] }); })();
        return TabComponent;
    }());
    TabComponent.ctorParameters = function () { return [
        { type: TabsService }
    ]; };
    TabComponent.propDecorators = {
        template: [{ type: i0.ViewChild, args: ['tpl', { static: false },] }],
        path: [{ type: i0.Input }],
        label: [{ type: i0.Input }],
        icon: [{ type: i0.Input }],
        priority: [{ type: i0.Input }],
        orientation: [{ type: i0.Input }]
    };

    var TabsOutletComponent = /** @class */ (function () {
        function TabsOutletComponent(router, renderer, el, header) {
            this.router = router;
            this.renderer = renderer;
            this.el = el;
            this.header = header;
            this.tabs = [];
            this.orientation = 'vertical';
            this.navigatorOpen = false;
            this.showLeft = false;
            this.showRight = false;
        }
        Object.defineProperty(TabsOutletComponent.prototype, "isNavigatorOpen", {
            get: function () {
                return this.navigatorOpen;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TabsOutletComponent.prototype, "hasTabs", {
            get: function () {
                var visibleTabs = [];
                if (this.tabs) {
                    visibleTabs = this.tabs.filter(function (tab) { return tab.hide !== true; });
                }
                return visibleTabs.length;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TabsOutletComponent.prototype, "isHorizontal", {
            get: function () {
                return this.orientation === 'horizontal';
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TabsOutletComponent.prototype, "isVertical", {
            get: function () {
                return this.orientation !== 'horizontal';
            },
            enumerable: false,
            configurable: true
        });
        TabsOutletComponent.prototype.ngOnDestroy = function () {
            if (this.scrollSubscription) {
                this.scrollSubscription.unsubscribe();
            }
        };
        TabsOutletComponent.prototype.ngAfterContentInit = function () {
            if (this.orientation === 'horizontal') {
                this.scrollSubscribe();
            }
        };
        TabsOutletComponent.prototype.isActive = function (tab) {
            if (tab && tab.path) {
                return this.router.isActive(tab.path, false);
            }
            else {
                return false;
            }
        };
        TabsOutletComponent.prototype.navigateTo = function (path) {
            this.header.toggle();
            this.router.navigate([path]);
        };
        TabsOutletComponent.prototype.scroll = function (direction) {
            if (direction === void 0) { direction = 'right'; }
            var _a = this.getDimensions(), widthScroll = _a.widthScroll, width = _a.width, scrollLeft = _a.scrollLeft;
            var multiplier = direction === 'left' ? -1 : 1;
            var targetScroll = scrollLeft + width * multiplier;
            if (targetScroll < 0) {
                targetScroll = 0;
            }
            if (targetScroll > widthScroll - width) {
                targetScroll = widthScroll - width;
            }
            // TODO: we should animate this
            this.container.nativeElement.scrollLeft = targetScroll;
        };
        TabsOutletComponent.prototype.scrollSubscribe = function () {
            var _this = this;
            var unlisten;
            this.scrollSubscription = rxjs.merge(rxjs.fromEvent(this.container.nativeElement, 'scroll'), rxjs.fromEventPattern(function (handler) {
                unlisten = _this.renderer.listen('window', 'resize', handler);
            }, function () { return unlisten(); })).pipe(operators.debounceTime(250)).subscribe(function () { return _this.updateScroll(); });
        };
        TabsOutletComponent.prototype.updateScroll = function () {
            var _a = this.getDimensions(), widthScroll = _a.widthScroll, width = _a.width, scrollLeft = _a.scrollLeft;
            this.showLeft = !!scrollLeft;
            this.showRight = widthScroll > width + scrollLeft;
        };
        TabsOutletComponent.prototype.getDimensions = function () {
            var elTabs = this.tabsContainer.nativeElement;
            var el = this.container.nativeElement;
            var widthScroll = elTabs.scrollWidth;
            var width = el.clientWidth;
            var scrollLeft = el.scrollLeft;
            return { widthScroll: widthScroll, width: width, scrollLeft: scrollLeft };
        };
TabsOutletComponent.ɵfac = function TabsOutletComponent_Factory(t) { return new (t || TabsOutletComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Router), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(HeaderService)); };
TabsOutletComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: TabsOutletComponent, selectors: [["c8y-tabs-outlet"], ["c8y-ui-tabs"]], viewQuery: function TabsOutletComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c34, 7, i0.ElementRef);
        ɵngcc0.ɵɵviewQuery(_c35, 5, i0.ElementRef);
        ɵngcc0.ɵɵviewQuery(_c36, 5, i0.ElementRef);
        ɵngcc0.ɵɵviewQuery(_c37, 5, i0.ElementRef);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.container = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.leftBtn = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.rightBtn = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tabsContainer = _t.first);
    } }, hostVars: 8, hostBindings: function TabsOutletComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("navigator-open", ctx.isNavigatorOpen)("page-tabs", ctx.hasTabs)("page-tabs-horizontal", ctx.isHorizontal)("page-tabs-vertical", ctx.isVertical);
    } }, inputs: { tabs: "tabs", orientation: "orientation", navigatorOpen: "navigatorOpen" }, decls: 12, vars: 4, consts: [[1, "tabContainer", "hidden-xs"], ["container", ""], ["class", "tabs-slider tabs-slider-left", 3, "click", 4, "ngIf"], ["class", "tabs-slider tabs-slider-right", 3, "click", 4, "ngIf"], [1, "nav", "nav-tabs", "nav-tabsc8y"], ["tabsContainer", ""], [3, "ngClass", 4, "ngFor", "ngForOf"], [1, "visible-xs", "mobile-tabs"], [1, "c8y-select-wrapper"], [3, "change"], ["select", ""], [3, "value", "selected", 4, "ngFor", "ngForOf"], [1, "tabs-slider", "tabs-slider-left", 3, "click"], ["left", ""], [3, "c8yIcon"], [1, "tabs-slider", "tabs-slider-right", 3, "click"], ["right", ""], [3, "ngClass"], ["routerLinkActive", "", 3, "routerLink", "title"], ["rla", "routerLinkActive"], [3, "c8yIcon", 4, "ngIf"], ["class", "txt", 4, "ngIf"], [4, "ngTemplateOutlet"], [1, "txt"], [3, "value", "selected"]], template: function TabsOutletComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0, 1);
        ɵngcc0.ɵɵtemplate(2, TabsOutletComponent_button_2_Template, 3, 1, "button", 2);
        ɵngcc0.ɵɵtemplate(3, TabsOutletComponent_button_3_Template, 3, 1, "button", 3);
        ɵngcc0.ɵɵelementStart(4, "ul", 4, 5);
        ɵngcc0.ɵɵtemplate(6, TabsOutletComponent_li_6_Template, 7, 10, "li", 6);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(7, "div", 7);
        ɵngcc0.ɵɵelementStart(8, "div", 8);
        ɵngcc0.ɵɵelementStart(9, "select", 9, 10);
        ɵngcc0.ɵɵlistener("change", function TabsOutletComponent_Template_select_change_9_listener($event) { return ctx.navigateTo($event.target.value); });
        ɵngcc0.ɵɵtemplate(11, TabsOutletComponent_option_11_Template, 3, 5, "option", 11);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showLeft);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showRight);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.tabs);
        ɵngcc0.ɵɵadvance(5);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.tabs);
    } }, directives: [ɵngcc6.NgIf, ɵngcc6.NgForOf, IconDirective, ɵngcc6.NgClass, ɵngcc1.RouterLinkWithHref, ɵngcc1.RouterLinkActive, ɵngcc6.NgTemplateOutlet], pipes: [C8yTranslatePipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TabsOutletComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-tabs-outlet,c8y-ui-tabs',
                template: "<div #container class=\"tabContainer hidden-xs\">\n  <button class=\"tabs-slider tabs-slider-left\" #left *ngIf=\"showLeft\" (click)=\"scroll('left')\">\n    <i [c8yIcon]=\"'chevron-left'\"></i>\n  </button>\n  <button class=\"tabs-slider tabs-slider-right\" #right *ngIf=\"showRight\" (click)=\"scroll('right')\">\n    <i [c8yIcon]=\"'chevron-right'\"></i>\n  </button>\n  <ul class=\"nav nav-tabs nav-tabsc8y\" #tabsContainer>\n    <li [ngClass]=\"{'active': rla.isActive}\" *ngFor=\"let tab of tabs\">\n      <a [routerLink]=\"tab.path\" routerLinkActive #rla=\"routerLinkActive\" title=\"{{tab?.label | translate}}\">\n        <i [c8yIcon]=\"tab?.icon\" *ngIf=\"!tab.template && tab?.icon\"></i>\n        <span class=\"txt\" *ngIf=\"!tab.template\">{{tab?.label | translate}}</span>\n        <ng-container *ngTemplateOutlet=\"tab.template\"></ng-container>\n      </a>\n    </li>\n  </ul>\n</div>\n\n<div class=\"visible-xs mobile-tabs\">\n  <div class=\"c8y-select-wrapper\">\n    <select (change)=\"navigateTo($event.target.value)\" #select>\n      <option *ngFor=\"let tab of tabs\" [value]=\"tab.path\" [selected]=\"isActive(tab)\">\n        {{tab?.label | translate}}\n      </option>\n    </select>\n  </div>\n</div>\n"
            }]
    }], function () { return [{ type: ɵngcc1.Router }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }, { type: HeaderService }]; }, { tabs: [{
            type: i0.Input
        }], orientation: [{
            type: i0.Input
        }], navigatorOpen: [{
            type: i0.Input
        }], isNavigatorOpen: [{
            type: i0.HostBinding,
            args: ['class.navigator-open']
        }], hasTabs: [{
            type: i0.HostBinding,
            args: ['class.page-tabs']
        }], isHorizontal: [{
            type: i0.HostBinding,
            args: ['class.page-tabs-horizontal']
        }], isVertical: [{
            type: i0.HostBinding,
            args: ['class.page-tabs-vertical']
        }], container: [{
            type: i0.ViewChild,
            args: ['container', { read: i0.ElementRef, static: true }]
        }], leftBtn: [{
            type: i0.ViewChild,
            args: ['left', { read: i0.ElementRef, static: false }]
        }], rightBtn: [{
            type: i0.ViewChild,
            args: ['right', { read: i0.ElementRef, static: false }]
        }], tabsContainer: [{
            type: i0.ViewChild,
            args: ['tabsContainer', { read: i0.ElementRef, static: false }]
        }] }); })();
        return TabsOutletComponent;
    }());
    TabsOutletComponent.ctorParameters = function () { return [
        { type: i1.Router },
        { type: i0.Renderer2 },
        { type: i0.ElementRef },
        { type: HeaderService }
    ]; };
    TabsOutletComponent.propDecorators = {
        tabs: [{ type: i0.Input }],
        orientation: [{ type: i0.Input }],
        navigatorOpen: [{ type: i0.Input }],
        isNavigatorOpen: [{ type: i0.HostBinding, args: ['class.navigator-open',] }],
        hasTabs: [{ type: i0.HostBinding, args: ['class.page-tabs',] }],
        isHorizontal: [{ type: i0.HostBinding, args: ['class.page-tabs-horizontal',] }],
        isVertical: [{ type: i0.HostBinding, args: ['class.page-tabs-vertical',] }],
        container: [{ type: i0.ViewChild, args: ['container', { read: i0.ElementRef, static: true },] }],
        leftBtn: [{ type: i0.ViewChild, args: ['left', { read: i0.ElementRef, static: false },] }],
        rightBtn: [{ type: i0.ViewChild, args: ['right', { read: i0.ElementRef, static: false },] }],
        tabsContainer: [{ type: i0.ViewChild, args: ['tabsContainer', { read: i0.ElementRef, static: false },] }]
    };

    /**
     * Register this component on the parent route of a view with multiple tabs where the first tab
     * is displayed only conditionally.
     *
     * Given the following routes leading to a single view with multiple tabs:<br>
     * /yourpath/tab-a -> Tab A<br>
     * /yourpath/tab-b -> Tab B<br>
     * /yourpath/tab-c -> Tab C
     *
     * Your components will be registered like
     * ```typescript
     * export const routes: Route[] = [
     *   {
     *     path: 'yourpath/tab-a',
     *     component: TabAComponent
     *   },
     *   {
     *     path: 'yourpath/tab-b',
     *     component: TabBComponent
     *   },
     *   {
     *     path: 'yourpath/tab-c',
     *     component: TabCComponent
     *   }
     * ];
     * ```
     *
     * In the simple case where Tab A is the first tab on the view and it is always displayed, you can register
     * your view in the navigation with a similar navigator node:
     *
     * ```typescript
     * new NavigatorNode({
     *   label: gettext('My tabs'),
     *   path: 'yourpath/tab-a',
     *   icon: 'gears',
     *   parent: gettext('Some parent node'),
     *   priority: 100
     * })
     * ```
     *
     * This will navigate to the first tab's component and activate the first tab in the view.
     *
     * In case Tab A is displayed conditionally you cannot link it from a navigator node since it may not be available in some cases.
     * In this situation `ConditionalTabsOutletComponent` comes handy as it will forward users to the first available tab on your view:
     *
     * ```typescript
     * new NavigatorNode({
     *   label: gettext('My tabs'),
     *   path: 'yourpath', // note that here we use only the parent route
     *   icon: 'gears',
     *   parent: gettext('Some parent node'),
     *   priority: 100
     * })
     *
     * [...]
     *
     * export const routes: Route[] = [
     *   {
     *     path: 'yourpath',
     *     component: ConditionalTabsOutletComponent // we register ConditionalTabsOutletComponent for the parent path
     *   },
     *   {
     *     path: 'yourpath/tab-a',
     *     component: TabAComponent
     *   },
     *   {
     *     path: 'yourpath/tab-b',
     *     component: TabBComponent
     *   },
     *   {
     *     path: 'yourpath/tab-c',
     *     component: TabCComponent
     *   }
     * ];
     * ```
     */
    var ConditionalTabsOutletComponent = /** @class */ (function () {
        function ConditionalTabsOutletComponent(tabsService, router) {
            this.tabsService = tabsService;
            this.router = router;
            this.endSubscriptions$ = new rxjs.Subject();
        }
        ConditionalTabsOutletComponent.prototype.ngOnInit = function () {
            var _this = this;
            this.tabsService.firstTab$.pipe(operators.takeUntil(this.endSubscriptions$)).subscribe(function (tab) {
                if (tab) {
                    _this.router.navigateByUrl(tab.path, { replaceUrl: true });
                }
            });
        };
        ConditionalTabsOutletComponent.prototype.ngOnDestroy = function () {
            this.endSubscriptions$.next();
            this.endSubscriptions$.complete();
        };
ConditionalTabsOutletComponent.ɵfac = function ConditionalTabsOutletComponent_Factory(t) { return new (t || ConditionalTabsOutletComponent)(ɵngcc0.ɵɵdirectiveInject(TabsService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Router)); };
ConditionalTabsOutletComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ConditionalTabsOutletComponent, selectors: [["c8y-conditional-tabs-outlet"]], decls: 1, vars: 0, template: function ConditionalTabsOutletComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelement(0, "router-outlet");
    } }, directives: [ɵngcc1.RouterOutlet], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ConditionalTabsOutletComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-conditional-tabs-outlet',
                template: "\n    <router-outlet></router-outlet>\n  "
            }]
    }], function () { return [{ type: TabsService }, { type: ɵngcc1.Router }]; }, null); })();
        return ConditionalTabsOutletComponent;
    }());
    ConditionalTabsOutletComponent.ctorParameters = function () { return [
        { type: TabsService },
        { type: i1.Router }
    ]; };

    var TabsModule = /** @class */ (function () {
        function TabsModule() {
        }
TabsModule.ɵfac = function TabsModule_Factory(t) { return new (t || TabsModule)(); };
TabsModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: TabsModule });
TabsModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[
            CommonModule,
            i1.RouterModule.forChild([]),
            HeaderModule
        ]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TabsModule, [{
        type: i0.NgModule,
        args: [{
                declarations: [
                    ConditionalTabsOutletComponent,
                    TabsOutletComponent,
                    TabComponent
                ],
                imports: [
                    CommonModule,
                    i1.RouterModule.forChild([]),
                    HeaderModule
                ],
                exports: [
                    ConditionalTabsOutletComponent,
                    TabsOutletComponent,
                    TabComponent
                ]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TabsModule, { declarations: [ConditionalTabsOutletComponent, TabsOutletComponent, TabComponent], imports: [CommonModule, ɵngcc1.RouterModule, HeaderModule], exports: [ConditionalTabsOutletComponent, TabsOutletComponent, TabComponent] }); })();
        return TabsModule;
    }());

    var CookieBannerPreferencesModalComponent = /** @class */ (function () {
        function CookieBannerPreferencesModalComponent(cookieBannerService) {
            this.cookieBannerService = cookieBannerService;
            this.closeSubject = new rxjs.Subject();
            this.title = gettext('Cookie preferences');
            this.labels = { ok: gettext('Save settings'), cancel: gettext('Cancel') };
            this.status = exports.Status.INFO;
        }
        CookieBannerPreferencesModalComponent.prototype.ngOnInit = function () {
            this.configCookiePreferencesList = this.cookieBannerService.transformCookiePreferencesToList(this.configCookiePreferences);
        };
        CookieBannerPreferencesModalComponent.prototype.ngAfterViewInit = function () {
            return __awaiter(this, void 0, void 0, function () {
                var error_1;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            _a.trys.push([0, 2, , 3]);
                            return [4 /*yield*/, this.modalRef.result];
                        case 1:
                            _a.sent();
                            this.onClose();
                            return [3 /*break*/, 3];
                        case 2:
                            error_1 = _a.sent();
                            this.onDismiss();
                            return [3 /*break*/, 3];
                        case 3: return [2 /*return*/];
                    }
                });
            });
        };
        CookieBannerPreferencesModalComponent.prototype.onClose = function () {
            var cookiePref = this.cookieBannerService.transformCookiePreferencesListToCookiePreferences(this.configCookiePreferencesList);
            this.closeSubject.next(cookiePref);
            this.closeSubject.complete();
        };
        CookieBannerPreferencesModalComponent.prototype.onDismiss = function () {
            this.closeSubject.next(undefined);
            this.closeSubject.complete();
        };
        CookieBannerPreferencesModalComponent.prototype.getCookieDescription = function (cookieType) {
            return this.cookieBannerService.getCookieDescription(cookieType);
        };
CookieBannerPreferencesModalComponent.ɵfac = function CookieBannerPreferencesModalComponent_Factory(t) { return new (t || CookieBannerPreferencesModalComponent)(ɵngcc0.ɵɵdirectiveInject(CookieBannerService)); };
CookieBannerPreferencesModalComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CookieBannerPreferencesModalComponent, selectors: [["c8y-cookie-banner-preferences-modal"]], viewQuery: function CookieBannerPreferencesModalComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c39, 5);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.modalRef = _t.first);
    } }, decls: 3, vars: 4, consts: [[3, "title", "status", "labels"], ["modalRef", ""], ["class", "row p-t-8 p-b-8 separator-top", 4, "ngFor", "ngForOf"], [1, "row", "p-t-8", "p-b-8", "separator-top"], [1, "col-xs-2"], [1, "text-center"], [1, "c8y-switch"], ["type", "checkbox", 3, "name", "ngModel", "disabled", "ngModelChange"], [1, "col-xs-10"], [1, "text-medium"]], template: function CookieBannerPreferencesModalComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "c8y-confirm-modal", 0, 1);
        ɵngcc0.ɵɵtemplate(2, CookieBannerPreferencesModalComponent_div_2_Template, 14, 11, "div", 2);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("title", ctx.title)("status", ctx.status)("labels", ctx.labels);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.configCookiePreferencesList);
    } }, directives: [ConfirmModalComponent, ɵngcc6.NgForOf, ɵngcc13.CheckboxControlValueAccessor, ɵngcc13.NgControlStatus, ɵngcc13.NgModel], pipes: [HumanizePipe, C8yTranslatePipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CookieBannerPreferencesModalComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-cookie-banner-preferences-modal',
                template: "<c8y-confirm-modal [title]=\"title\" [status]=\"status\" [labels]=\"labels\" #modalRef>\n\n  <div *ngFor=\"let item of configCookiePreferencesList\" class=\"row p-t-8 p-b-8 separator-top\">\n    <div class=\"col-xs-2\">\n      <div class=\"text-center\">\n        <label class=\"c8y-switch\">\n          <input\n            name=\"{{ item.name }}\"\n            type=\"checkbox\"\n            [(ngModel)]=\"item.value\"\n            [disabled]=\"item.isReadonly\"\n          />\n          <span></span>\n        </label>\n      </div>\n    </div>\n    <div class=\"col-xs-10\">\n      <h4 class=\"text-medium\">\n        {{ item.name | translate | humanize }}\n      </h4>\n      <p>\n        {{ getCookieDescription(item.name) | translate }}\n      </p>\n    </div>\n  </div>\n</c8y-confirm-modal>\n"
            }]
    }], function () { return [{ type: CookieBannerService }]; }, { modalRef: [{
            type: i0.ViewChild,
            args: ['modalRef', { static: false }]
        }] }); })();
        return CookieBannerPreferencesModalComponent;
    }());
    CookieBannerPreferencesModalComponent.ctorParameters = function () { return [
        { type: CookieBannerService }
    ]; };
    CookieBannerPreferencesModalComponent.propDecorators = {
        modalRef: [{ type: i0.ViewChild, args: ['modalRef', { static: false },] }]
    };

    var CookieBannerComponent = /** @class */ (function () {
        function CookieBannerComponent(bsModalService, cookieBannerService) {
            this.bsModalService = bsModalService;
            this.cookieBannerService = cookieBannerService;
            this.shouldDisable = false;
        }
        CookieBannerComponent.prototype.ngOnInit = function () {
            this.settings = this.cookieBannerService.getCookieBannerSettings();
            this.cookiePreferences = this.cookieBannerService.getCookiePreferencesConfig();
            this.shouldShowCookieBanner();
        };
        CookieBannerComponent.prototype.onConfigurePreferences = function () {
            var _this = this;
            this.disableButtons(true);
            var initialState = {
                configCookiePreferences: this.cookiePreferences
            };
            var modalRef = this.bsModalService.show(CookieBannerPreferencesModalComponent, {
                initialState: initialState
            });
            modalRef.content.closeSubject.subscribe(function (userCookiePreferences) {
                _this.disableButtons(false);
                if (userCookiePreferences) {
                    _this.cookieBannerService.setCookies(userCookiePreferences);
                    _this.setCookieBannerVisibility(false);
                }
            });
        };
        CookieBannerComponent.prototype.acceptCookies = function () {
            this.cookieBannerService.setCookies(this.cookiePreferences || { required: true });
            this.setCookieBannerVisibility(false);
        };
        CookieBannerComponent.prototype.shouldShowCookieBanner = function () {
            this.setCookieBannerVisibility(this.cookieBannerService.shouldShowCookieBanner());
        };
        CookieBannerComponent.prototype.disableButtons = function (shouldDisable) {
            this.shouldDisable = shouldDisable;
        };
        CookieBannerComponent.prototype.setCookieBannerVisibility = function (shouldShow) {
            this.showBanner = shouldShow;
            this.cookieBannerService.isCookieBannerShowed$.next(shouldShow);
        };
CookieBannerComponent.ɵfac = function CookieBannerComponent_Factory(t) { return new (t || CookieBannerComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc12.BsModalService), ɵngcc0.ɵɵdirectiveInject(CookieBannerService)); };
CookieBannerComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CookieBannerComponent, selectors: [["c8y-cookie-banner"]], decls: 3, vars: 1, consts: [[1, "c8y-cookie-banner"], [1, "container"], ["class", "row p-t-16 p-b-16", 4, "ngIf"], [1, "row", "p-t-16", "p-b-16"], ["class", "col-md-2", 4, "ngIf"], [1, "col-md-7"], [1, "cookie-banner-content", "text-pre-line"], [1, "col-md-3"], [1, "row"], [1, "col-sm-6", "col-md-12"], [1, "p-b-16", "visible-sm", "visible-xs"], [1, "btn", "btn-primary", "btn-block", 3, "disabled", "click"], ["class", "col-sm-6 col-md-12", 4, "ngIf"], [1, "p-b-16"], ["class", "btn btn-default btn-block", "target", "_blank", 3, "href", 4, "ngIf"], [1, "col-md-2"], [1, "btn", "btn-default", "btn-block", 3, "disabled", "click"], ["target", "_blank", 1, "btn", "btn-default", "btn-block", 3, "href"]], template: function CookieBannerComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵtemplate(2, CookieBannerComponent_div_2_Template, 17, 10, "div", 2);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showBanner);
    } }, directives: [ɵngcc6.NgIf], pipes: [C8yTranslatePipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CookieBannerComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-cookie-banner',
                template: "<div class=\"c8y-cookie-banner\">\n  <div class=\"container\">\n    <div class=\"row p-t-16 p-b-16\" *ngIf=\"showBanner\">\n      <div class=\"col-md-2\" *ngIf=\"settings.cookieBannerTitle\">\n        <h3>{{ settings.cookieBannerTitle | translate }}</h3>\n        <div class=\"p-b-16 visible-sm visible-xs\"></div>\n      </div>\n      <div class=\"col-md-7\">\n        <div class=\"cookie-banner-content text-pre-line\">\n          {{ settings.cookieBannerText | translate }}\n        </div>\n      </div>\n      <div class=\"col-md-3\">\n        <div class=\"row\">\n          <div class=\"col-sm-6 col-md-12\">\n            <div class=\"p-b-16 visible-sm visible-xs\"></div>\n            <button\n              class=\"btn btn-primary btn-block\"\n              (click)=\"acceptCookies()\"\n              [disabled]=\"shouldDisable\"\n            >\n              {{ 'Agree and proceed' | translate }}\n            </button>\n          </div>\n          <div class=\"col-sm-6 col-md-12\" *ngIf=\"!!cookiePreferences\">\n            <div class=\"p-b-16\"></div>\n            <button\n              class=\"btn btn-default btn-block\"\n              (click)=\"onConfigurePreferences()\"\n              [disabled]=\"shouldDisable\"\n            >\n              {{ 'Configure preferences' | translate }}\n            </button>\n          </div>\n          <div class=\"col-sm-6 col-md-12\">\n            <div class=\"p-b-16\"></div>\n            <a\n              class=\"btn btn-default btn-block\"\n              href=\"{{ settings.policyUrl }}\"\n              target=\"_blank\"\n              *ngIf=\"settings.policyUrl\"\n            >\n              {{ 'Privacy policy' | translate }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n"
            }]
    }], function () { return [{ type: ɵngcc12.BsModalService }, { type: CookieBannerService }]; }, null); })();
        return CookieBannerComponent;
    }());
    CookieBannerComponent.ctorParameters = function () { return [
        { type: i1$2.BsModalService },
        { type: CookieBannerService }
    ]; };

    /**
     * The module which allows to bootstrap a custom application.
     * Use it as `bootstrap: []` component in your main app module
     * or as `<c8y-bootstrap>` in your main app.
     */
    var BootstrapModule = /** @class */ (function () {
        function BootstrapModule() {
        }
BootstrapModule.ɵfac = function BootstrapModule_Factory(t) { return new (t || BootstrapModule)(); };
BootstrapModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: BootstrapModule });
BootstrapModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [CookieBannerService], imports: [[
            forms.FormsModule,
            CommonModule,
            HeaderModule,
            LoginModule,
            i1.RouterModule,
            TabsModule,
            ActionBarModule,
            AlertModule,
            NavigatorModule,
            tooltip.TooltipModule,
            ModalModule
        ]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BootstrapModule, [{
        type: i0.NgModule,
        args: [{
                declarations: [BootstrapComponent, CookieBannerComponent, CookieBannerPreferencesModalComponent],
                imports: [
                    forms.FormsModule,
                    CommonModule,
                    HeaderModule,
                    LoginModule,
                    i1.RouterModule,
                    TabsModule,
                    ActionBarModule,
                    AlertModule,
                    NavigatorModule,
                    tooltip.TooltipModule,
                    ModalModule
                ],
                exports: [BootstrapComponent],
                entryComponents: [BootstrapComponent, CookieBannerPreferencesModalComponent],
                providers: [CookieBannerService]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(BootstrapModule, { declarations: [BootstrapComponent, CookieBannerComponent, CookieBannerPreferencesModalComponent], imports: [ɵngcc13.FormsModule, CommonModule, HeaderModule, LoginModule, ɵngcc1.RouterModule, TabsModule, ActionBarModule, AlertModule, NavigatorModule, ɵngcc8.TooltipModule, ModalModule], exports: [BootstrapComponent] }); })();
        return BootstrapModule;
    }());

    /**
     * A drop-zone which is a file selector allowing users to select file(s) from their file system, either natively or by drag and drop.
     *
     * ## Example:
     *
     * ```html
     *  <div>
     *    <c8y-drop-area
     *      (dropped)="uploadFile($event)"
     *      [icon]="'upload'">
     *    </c8y-drop-area>
     *  </div>
     * ```
     */
    var DropAreaComponent = /** @class */ (function () {
        function DropAreaComponent(cd) {
            this.cd = cd;
            this.title = gettext('Upload file');
            this.message = gettext('Drop file here');
            this.icon = 'plus-square';
            this.loadingMessage = gettext('Uploading…');
            this.forceHideList = false;
            /** Affects displaying both the drop zone and the list of dropped files. */
            this.alwaysShow = false;
            this.clickToOpen = true;
            this.loading = false;
            this.progress = -1; // -1 = spinner
            this.dropped = new i0.EventEmitter();
            this.maxAllowedFiles = Infinity;
            this.isOver = false;
            this.errors = false;
            this.onChange = function (_) { return undefined; };
            this.onTouched = function () { return undefined; };
        }
        DropAreaComponent.prototype.ngOnInit = function () {
            this.alwaysShow = this.alwaysShow || this.area.nativeElement.children.length === 0;
            if (this.files && this.files.length > 0) {
                this.onFilesSelected(this.files);
            }
        };
        /**
         * Toggles the style of the drop zone element when a file is dragged over the component.
         */
        DropAreaComponent.prototype.toggle = function ($event) {
            this.zone.nativeElement.style.height = this.area.nativeElement.offsetHeight + 'px';
            this.onOver();
        };
        /**
         * Shows computer browser with files to drop into drop-area zone.
         */
        DropAreaComponent.prototype.showPicker = function ($event) {
            this.preventDefault($event);
            this.picker.nativeElement.value = '';
            this.picker.nativeElement.click();
        };
        /**
         * Triggered when file is on over drop area, but not dropped.
         */
        DropAreaComponent.prototype.onOver = function () {
            if (!this.isOver) {
                this.isOver = true;
                document.addEventListener('dragover', this.preventDefault);
                document.addEventListener('drop', this.preventDefault);
            }
        };
        /**
         * Triggered when file is dropped.
         */
        DropAreaComponent.prototype.onPick = function ($event) {
            this.errors = false;
            this.preventDefault($event);
            this.onFilesSelected($event.target.files);
        };
        /**
         * Handle file when it is dropped into drop-area.
         */
        DropAreaComponent.prototype.onDrop = function ($event) {
            this.preventDefault($event);
            this.onFilesSelected($event.dataTransfer.files);
            this.stopDragging();
        };
        /**
         * Checks condition what should be displayed: drop-area zone or list of dropped files.
         */
        DropAreaComponent.prototype.shouldShowFilesList = function () {
            return (!this.forceHideList &&
                this.alwaysShow &&
                !this.isFilesArrayEmpty() &&
                !this.hasEmptyFiles() &&
                !this.isTooManyFiles());
        };
        /**
         * Triggered when file is picked over web application.
         */
        DropAreaComponent.prototype.stopDragging = function () {
            document.removeEventListener('dragover', this.preventDefault);
            document.removeEventListener('drop', this.preventDefault);
            this.isOver = false;
        };
        /**
         * Delete files already dropped files.
         */
        DropAreaComponent.prototype.onDelete = function () {
            delete this.files;
            delete this.filesNameString;
            this.clearErrors();
            this.dropped.emit(undefined);
            this.onChange(undefined);
        };
        DropAreaComponent.prototype.writeValue = function (value) {
            this.files = value;
            if (!value) {
                this.onDelete();
            }
            this.cd.detectChanges();
        };
        DropAreaComponent.prototype.registerOnChange = function (fn) {
            this.onChange = fn;
        };
        DropAreaComponent.prototype.registerOnTouched = function (fn) {
            this.onTouched = fn;
        };
        DropAreaComponent.prototype.onFilesSelected = function (files) {
            this.files = files;
            this.filesNameString = this.getFilesNamesAsString(files);
            this.errors = false;
            if (!this.isFilesArrayEmpty() && !this.isTooManyFiles()) {
                if (this.hasEmptyFiles()) {
                    this.errors = true;
                    this.errorMessage = gettext('File must not be empty, select another one.');
                }
                else {
                    var droppedFiles = this.compose(files);
                    this.dropped.emit(droppedFiles);
                    this.onChange(droppedFiles);
                }
            }
            else {
                this.errors = true;
                this.errorMessage = gettext('Too many files selected.');
            }
        };
        DropAreaComponent.prototype.getFilesNamesAsString = function (files) {
            return lodashEs.map(files, function (_a) {
                var name = _a.name;
                return name;
            }).join(', ');
        };
        DropAreaComponent.prototype.isFilesArrayEmpty = function () {
            return lodashEs.get(this, 'files.length', 0) === 0;
        };
        DropAreaComponent.prototype.isTooManyFiles = function () {
            return lodashEs.get(this, 'files.length', 0) > this.maxAllowedFiles;
        };
        DropAreaComponent.prototype.hasEmptyFiles = function () {
            var result = true;
            if (!this.isFilesArrayEmpty()) {
                result = this.isAnyFileEmpty();
            }
            return result;
        };
        DropAreaComponent.prototype.isAnyFileEmpty = function () {
            return lodashEs.some(Array.from(this.files), ['size', 0]);
        };
        DropAreaComponent.prototype.clearErrors = function () {
            delete this.errorMessage;
            this.errors = false;
        };
        DropAreaComponent.prototype.preventDefault = function ($event) {
            if ($event) {
                $event.preventDefault();
            }
        };
        DropAreaComponent.prototype.compose = function (files) {
            var _this = this;
            return Array.from(files).map(function (file) { return ({
                file: file,
                readAsJson: function () { return __awaiter(_this, void 0, void 0, function () { var _a, _b; return __generator(this, function (_c) {
                    switch (_c.label) {
                        case 0:
                            _b = (_a = JSON).parse;
                            return [4 /*yield*/, this.read(file, ReadAsType.TEXT)];
                        case 1: return [2 /*return*/, _b.apply(_a, [_c.sent()])];
                    }
                }); }); },
                readAsText: function () { return __awaiter(_this, void 0, void 0, function () { return __generator(this, function (_a) {
                    return [2 /*return*/, this.read(file, ReadAsType.TEXT)];
                }); }); },
                readAsArrayBuffer: function () { return __awaiter(_this, void 0, void 0, function () { return __generator(this, function (_a) {
                    return [2 /*return*/, this.read(file, ReadAsType.ARRAY_BUFFER)];
                }); }); },
                readAsBinaryString: function () { return __awaiter(_this, void 0, void 0, function () { return __generator(this, function (_a) {
                    return [2 /*return*/, this.read(file, ReadAsType.BINARY_STRING)];
                }); }); },
                readAsDataURL: function () { return __awaiter(_this, void 0, void 0, function () { return __generator(this, function (_a) {
                    return [2 /*return*/, this.read(file, ReadAsType.DATA_URL)];
                }); }); }
            }); });
        };
        DropAreaComponent.prototype.read = function (file, type) {
            return __awaiter(this, void 0, void 0, function () {
                var _this = this;
                return __generator(this, function (_a) {
                    return [2 /*return*/, new Promise(function (resolve, reject) {
                            var reader = new FileReader();
                            switch (type) {
                                case ReadAsType.TEXT: {
                                    reader.readAsText(file);
                                    break;
                                }
                                case ReadAsType.ARRAY_BUFFER: {
                                    reader.readAsArrayBuffer(file);
                                    break;
                                }
                                case ReadAsType.BINARY_STRING: {
                                    reader.readAsBinaryString(file);
                                    break;
                                }
                                case ReadAsType.DATA_URL: {
                                    reader.readAsDataURL(file);
                                    break;
                                }
                            }
                            reader.onload = function () { return _this.onLoad(reader, resolve, reject); };
                        })];
                });
            });
        };
        DropAreaComponent.prototype.onLoad = function (reader, resolve, reject) {
            if (reader.readyState !== 2) {
                return;
            }
            if (reader.error) {
                reject(reader.error);
            }
            resolve(reader.result);
        };
DropAreaComponent.ɵfac = function DropAreaComponent_Factory(t) { return new (t || DropAreaComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };
DropAreaComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: DropAreaComponent, selectors: [["c8y-drop-area"]], viewQuery: function DropAreaComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c40, 7);
        ɵngcc0.ɵɵviewQuery(_c41, 5);
        ɵngcc0.ɵɵviewQuery(_c42, 5);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.area = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.zone = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.picker = _t.first);
    } }, inputs: { title: "title", message: "message", icon: "icon", loadingMessage: "loadingMessage", forceHideList: "forceHideList", alwaysShow: "alwaysShow", clickToOpen: "clickToOpen", loading: "loading", progress: "progress", maxAllowedFiles: "maxAllowedFiles", files: "files", accept: "accept" }, outputs: { dropped: "dropped" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: forms.NG_VALUE_ACCESSOR, useExisting: DropAreaComponent, multi: true }])], ngContentSelectors: _c1, decls: 6, vars: 4, consts: [["class", "drop-zone", 3, "ngClass", "pointerEvents", "display", "dragleave", "drop", "dragover", "click", 4, "ngIf"], ["class", "drop-zone", 3, "display", 4, "ngIf"], ["type", "file", "style", "opacity: 0; filter: alpha(opacity = 0); height: 0px", 3, "accept", "multiple", "change", "click", "blur", 4, "ngIf"], [3, "hidden", "dragover"], ["area", ""], [1, "drop-zone", 3, "ngClass", "dragleave", "drop", "dragover", "click"], ["zone", ""], [1, "file-placeholder", 3, "ngClass"], ["class", "d-flex p-4 flex-center", 4, "ngIf"], ["class", "hint-placeholder pointer", 4, "ngIf"], [1, "d-flex", "p-4", "flex-center"], ["class", "progress progress-striped active m-0", "style", "min-width: 50%;", 4, "ngIf"], ["class", "spinner-snake", 4, "ngIf"], [1, "flex-item-middle", "m-r-8"], [1, "progress", "progress-striped", "active", "m-0", 2, "min-width", "50%"], ["role", "progressbar", "aria-valuenow", "0", "aria-valuemin", "0", "aria-valuemax", "100", 1, "progress-bar"], [1, "spinner-snake"], [1, "hint-placeholder", "pointer"], [4, "ngIf"], ["class", "has-errors", 4, "ngIf"], ["translate", "", 4, "ngIf"], ["translate", ""], [1, "has-errors"], [1, "form-control-feedback-message"], [1, "drop-zone"], ["class", "p-absolute p-4 fit-w fit-h d-flex d-col j-c-center a-i-center", 4, "ngIf"], ["class", "file-placeholder p-4", 4, "ngIf"], [1, "p-absolute", "p-4", "fit-w", "fit-h", "d-flex", "d-col", "j-c-center", "a-i-center"], [1, "m-b-8"], ["class", "progress progress-striped active m-0", "style", "min-width: 80%;", 4, "ngIf"], ["class", "spinner  p-relative m-0", 4, "ngIf"], [1, "progress", "progress-striped", "active", "m-0", 2, "min-width", "80%"], [1, "spinner", "p-relative", "m-0"], [1, "rect1"], [1, "rect2"], [1, "rect3"], [1, "rect4"], [1, "rect5"], [1, "file-placeholder", "p-4"], [1, "flex-row", "p-4"], ["c8yIcon", "file-o", 1, "m-r-8"], [1, "text-truncate", 3, "title"], [1, "btn", "btn-clean", "showOnHover", "flex-item-right", 3, "title"], ["c8yIcon", "minus-circle", 1, "text-danger", 3, "click"], ["type", "file", 2, "opacity", "0", "filter", "alpha(opacity = 0)", "height", "0px", 3, "accept", "multiple", "change", "click", "blur"], ["picker", ""]], template: function DropAreaComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵtemplate(0, DropAreaComponent_div_0_Template, 5, 12, "div", 0);
        ɵngcc0.ɵɵtemplate(1, DropAreaComponent_div_1_Template, 3, 4, "div", 1);
        ɵngcc0.ɵɵtemplate(2, DropAreaComponent_input_2_Template, 2, 2, "input", 2);
        ɵngcc0.ɵɵelementStart(3, "div", 3, 4);
        ɵngcc0.ɵɵlistener("dragover", function DropAreaComponent_Template_div_dragover_3_listener($event) { return ctx.toggle($event); });
        ɵngcc0.ɵɵprojection(5);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", !ctx.shouldShowFilesList());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.shouldShowFilesList());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.clickToOpen);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("hidden", ctx.isOver || ctx.loading);
    } }, directives: [ɵngcc6.NgIf, ɵngcc6.NgClass, C8yTranslateDirective, IconDirective], pipes: [C8yTranslatePipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DropAreaComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-drop-area',
                template: "<div\n  class=\"drop-zone\"\n  *ngIf=\"!shouldShowFilesList()\"\n  [ngClass]=\"{ 'has-errors': errors }\"\n  [style.pointerEvents]=\"loading ? 'none' : 'auto'\"\n  #zone\n  (dragleave)=\"stopDragging()\"\n  (drop)=\"onDrop($event)\"\n  (dragover)=\"onOver()\"\n  [style.display]=\"isOver || alwaysShow || loading ? 'block' : 'none'\"\n  (click)=\"showPicker($event)\"\n>\n  <div class=\"file-placeholder\"  [ngClass]=\"{ 'drag-over': isOver }\">\n    <div *ngIf=\"loading\" class=\"d-flex p-4 flex-center\">\n      \n      <div class=\"progress progress-striped active m-0\" *ngIf=\"progress !== -1\"\n          style=\"min-width: 50%;\">\n        <div\n          class=\"progress-bar\"\n          role=\"progressbar\"\n          aria-valuenow=\"0\"\n          aria-valuemin=\"0\"\n          aria-valuemax=\"100\"\n          [style.width]=\"progress + '%'\"\n        ></div>\n      </div>\n      <div class=\"spinner-snake\" *ngIf=\"progress === -1\"></div>\n      <p class=\"flex-item-middle m-r-8\">\n        {{ loadingMessage | translate }}\n      </p>\n    </div>\n\n    <div *ngIf=\"!loading\" class=\"hint-placeholder pointer\">\n      <i class=\"dlt-c8y-icon-{{ icon }}\"></i>\n      <p *ngIf=\"!errors\">\n        <b>{{ message | translate }}</b>\n        <br />\n        <span *ngIf=\"alwaysShow && clickToOpen\" translate>or click to browse your computer.</span>\n      </p>\n      <div *ngIf=\"errors\" class=\"has-errors\">\n        <p class=\"form-control-feedback-message\">\n          {{ errorMessage | translate }}\n        </p>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"drop-zone\" *ngIf=\"shouldShowFilesList()\"\n  [style.display]=\"isOver || alwaysShow || loading ? 'block' : 'none'\">\n  <div *ngIf=\"loading\" class=\"p-absolute p-4 fit-w fit-h d-flex d-col j-c-center a-i-center\">\n    <p class=\"m-b-8\">\n      <strong>\n        {{ loadingMessage | translate }}\n      </strong>\n    </p>\n    <div class=\"progress progress-striped active m-0\" *ngIf=\"progress !== -1\"\n      style=\"min-width: 80%;\">\n      <div\n        class=\"progress-bar\"\n        role=\"progressbar\"\n        aria-valuenow=\"0\"\n        aria-valuemin=\"0\"\n        aria-valuemax=\"100\"\n        [style.width]=\"progress + '%'\"\n      ></div>\n    </div>\n    <div class=\"spinner  p-relative m-0\" *ngIf=\"progress === -1\">\n      <div class=\"rect1\"></div>\n      <div class=\"rect2\"></div>\n      <div class=\"rect3\"></div>\n      <div class=\"rect4\"></div>\n      <div class=\"rect5\"></div>\n    </div>\n  </div>\n  <div *ngIf=\"!loading\" class=\"file-placeholder p-4\">\n    <div class=\"flex-row p-4\">\n      <i c8yIcon=\"file-o\" class=\"m-r-8\"></i>\n      <span title=\"{{ filesNameString }}\" class=\"text-truncate\">\n        {{ filesNameString }}\n      </span>\n      <button\n        title=\"{{ 'Remove' | translate }}\"\n        class=\"btn btn-clean showOnHover flex-item-right\"\n        >\n        <i c8yIcon=\"minus-circle\" class=\"text-danger\" (click)=\"onDelete()\"></i>\n      </button>\n    </div>\n  </div>\n</div>\n\n<input\n  #picker\n  *ngIf=\"clickToOpen\"\n  (change)=\"onPick($event)\"\n  (click)=\"picker.focus()\"\n  (blur)=\"onTouched()\"\n  [accept]=\"accept\"\n  [multiple]=\"maxAllowedFiles > 1\"\n  type=\"file\"\n  style=\"opacity: 0; filter: alpha(opacity = 0); height: 0px\"\n/>\n<div #area [hidden]=\"isOver || loading\" (dragover)=\"toggle($event)\">\n  <ng-content></ng-content>\n</div>\n",
                providers: [{ provide: forms.NG_VALUE_ACCESSOR, useExisting: DropAreaComponent, multi: true }]
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }]; }, { title: [{
            type: i0.Input
        }], message: [{
            type: i0.Input
        }], icon: [{
            type: i0.Input
        }], loadingMessage: [{
            type: i0.Input
        }], forceHideList: [{
            type: i0.Input
        }], alwaysShow: [{
            type: i0.Input
        }], clickToOpen: [{
            type: i0.Input
        }], loading: [{
            type: i0.Input
        }], progress: [{
            type: i0.Input
        }], dropped: [{
            type: i0.Output
        }], maxAllowedFiles: [{
            type: i0.Input
        }], files: [{
            type: i0.Input
        }], accept: [{
            type: i0.Input
        }], area: [{
            type: i0.ViewChild,
            args: ['area', { static: true }]
        }], zone: [{
            type: i0.ViewChild,
            args: ['zone', { static: false }]
        }], picker: [{
            type: i0.ViewChild,
            args: ['picker', { static: false }]
        }] }); })();
        return DropAreaComponent;
    }());
    DropAreaComponent.ctorParameters = function () { return [
        { type: i0.ChangeDetectorRef }
    ]; };
    DropAreaComponent.propDecorators = {
        title: [{ type: i0.Input }],
        message: [{ type: i0.Input }],
        icon: [{ type: i0.Input }],
        loadingMessage: [{ type: i0.Input }],
        forceHideList: [{ type: i0.Input }],
        alwaysShow: [{ type: i0.Input }],
        clickToOpen: [{ type: i0.Input }],
        loading: [{ type: i0.Input }],
        progress: [{ type: i0.Input }],
        dropped: [{ type: i0.Output }],
        maxAllowedFiles: [{ type: i0.Input }],
        files: [{ type: i0.Input }],
        accept: [{ type: i0.Input }],
        area: [{ type: i0.ViewChild, args: ['area', { static: true },] }],
        zone: [{ type: i0.ViewChild, args: ['zone', { static: false },] }],
        picker: [{ type: i0.ViewChild, args: ['picker', { static: false },] }]
    };
    var ReadAsType;
    (function (ReadAsType) {
        ReadAsType[ReadAsType["TEXT"] = 0] = "TEXT";
        ReadAsType[ReadAsType["DATA_URL"] = 1] = "DATA_URL";
        ReadAsType[ReadAsType["ARRAY_BUFFER"] = 2] = "ARRAY_BUFFER";
        ReadAsType[ReadAsType["BINARY_STRING"] = 3] = "BINARY_STRING";
    })(ReadAsType || (ReadAsType = {}));

    /**
     * The angular module definition for a drop-area.
     * @exports DropAreaComponent
     */
    var DropAreaModule = /** @class */ (function () {
        function DropAreaModule() {
        }
DropAreaModule.ɵfac = function DropAreaModule_Factory(t) { return new (t || DropAreaModule)(); };
DropAreaModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: DropAreaModule });
DropAreaModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[
            CommonModule,
        ]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DropAreaModule, [{
        type: i0.NgModule,
        args: [{
                imports: [
                    CommonModule,
                ],
                exports: [
                    DropAreaComponent,
                ],
                declarations: [
                    DropAreaComponent,
                ]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DropAreaModule, { declarations: [DropAreaComponent], imports: [CommonModule], exports: [DropAreaComponent] }); })();
        return DropAreaModule;
    }());

    /**
     * User can upload a binary directly or use an URL.
     *
     * ## Usage Example:
     *
     * ```html
     * <div>
     * <c8y-file-picker [maxAllowedFiles]="1" (onFilesPicked)="onFile($event)">
     * </c8y-file-picker>
     * </div>
     * ```
     */
    var FilePickerComponent = /** @class */ (function () {
        function FilePickerComponent() {
            this.onFilesPicked = new i0.EventEmitter();
            this.maxAllowedFiles = Infinity;
            this.uploadChoice = 'uploadBinary';
            this.config = { maxlength: 2048 };
        }
        /**
         * @ignore
         */
        FilePickerComponent.prototype.ngOnInit = function () {
            if (this.fileBinary) {
                this.droppedFiles = [this.fileBinary];
            }
        };
        /**
         * Triggered by dropped file in component and pass it into drop-area component.
         */
        FilePickerComponent.prototype.onFileDropped = function (droppedFiles) {
            this.onFilesPicked.emit({
                droppedFiles: droppedFiles
            });
        };
        /**
         * Triggered when user changes upload choice, from upload url to upload binary.
         */
        FilePickerComponent.prototype.clearInputFromUrl = function () {
            delete this.fileUrl;
            this.fileToSave = {
                url: undefined
            };
            this.onFilesPicked.emit(this.fileToSave);
        };
        /**
         * Triggered when user changes upload choice, to avoid cumulation of droppedFiles.
         */
        FilePickerComponent.prototype.clearSelectedFiles = function () {
            this.dropArea.onDelete();
            this.fileToSave = {
                droppedFiles: undefined
            };
            this.onFilesPicked.emit(this.fileToSave);
        };
        /**
         * Triggered when user puts binary's url to upload.
         */
        FilePickerComponent.prototype.onFileUrlChange = function (urlStr) {
            this.fileToSave = {
                url: urlStr
            };
            this.onFilesPicked.emit(this.fileToSave);
        };
        /**
         * Checks if there is popover to display.
         */
        FilePickerComponent.prototype.isPopoverUsed = function () {
            return !lodashEs.isEmpty(this.fileUrlPopover);
        };
FilePickerComponent.ɵfac = function FilePickerComponent_Factory(t) { return new (t || FilePickerComponent)(); };
FilePickerComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: FilePickerComponent, selectors: [["c8y-file-picker"]], viewQuery: function FilePickerComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(DropAreaComponent, 7);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.dropArea = _t.first);
    } }, inputs: { maxAllowedFiles: "maxAllowedFiles", uploadChoice: "uploadChoice", config: "config", fileUrl: "fileUrl", fileBinary: "fileBinary", fileUrlPopover: "fileUrlPopover" }, outputs: { onFilesPicked: "onFilesPicked" }, decls: 30, vars: 27, consts: [[1, "form-group"], [1, "c8y-radio", "radio-inline", 3, "title"], ["type", "radio", "value", "uploadBinary", "name", "uploadChoice", 3, "ngModel", "ngModelChange", "click"], ["radio", ""], [1, "c8y-radio", "radio-inline", "m-l-8", 3, "title"], ["type", "radio", "value", "uploadUrl", "name", "uploadChoice", 3, "ngModel", "ngModelChange", "click"], ["class", "btn btn-clean text-primary m-l-4", "type", "button", "triggers", "focus", "container", "body", "placement", "top", 3, "popover", 4, "ngIf"], [3, "hidden"], [1, "m-0"], [1, "drop-area-sm", 3, "title", "maxAllowedFiles", "files", "dropped"], [1, "m-b-4", "p-b-8"], [1, "input-group"], [1, "input-group-addon"], ["c8yIcon", "globe"], ["type", "text", "name", "fileUrl", "required", "", 1, "form-control", 3, "ngModel", "placeholder", "maxlength", "ngModelChange"], ["type", "button", "triggers", "focus", "container", "body", "placement", "top", 1, "btn", "btn-clean", "text-primary", "m-l-4", 3, "popover"], [3, "c8yIcon"]], template: function FilePickerComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "label", 1);
        ɵngcc0.ɵɵpipe(2, "translate");
        ɵngcc0.ɵɵelementStart(3, "input", 2, 3);
        ɵngcc0.ɵɵlistener("ngModelChange", function FilePickerComponent_Template_input_ngModelChange_3_listener($event) { return ctx.uploadChoice = $event; })("click", function FilePickerComponent_Template_input_click_3_listener() { return ctx.clearInputFromUrl(); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(5, "span");
        ɵngcc0.ɵɵelementStart(6, "span");
        ɵngcc0.ɵɵtext(7);
        ɵngcc0.ɵɵpipe(8, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(9, "label", 4);
        ɵngcc0.ɵɵpipe(10, "translate");
        ɵngcc0.ɵɵelementStart(11, "input", 5, 3);
        ɵngcc0.ɵɵlistener("ngModelChange", function FilePickerComponent_Template_input_ngModelChange_11_listener($event) { return ctx.uploadChoice = $event; })("click", function FilePickerComponent_Template_input_click_11_listener() { return ctx.clearSelectedFiles(); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(13, "span");
        ɵngcc0.ɵɵelementStart(14, "span");
        ɵngcc0.ɵɵtext(15);
        ɵngcc0.ɵɵpipe(16, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(17, FilePickerComponent_button_17_Template, 3, 4, "button", 6);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(18, "div", 7);
        ɵngcc0.ɵɵelementStart(19, "c8y-form-group", 8);
        ɵngcc0.ɵɵelementStart(20, "c8y-drop-area", 9);
        ɵngcc0.ɵɵlistener("dropped", function FilePickerComponent_Template_c8y_drop_area_dropped_20_listener($event) { return ctx.onFileDropped($event); });
        ɵngcc0.ɵɵpipe(21, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(22, "div", 7);
        ɵngcc0.ɵɵelementStart(23, "c8y-form-group", 8);
        ɵngcc0.ɵɵelementStart(24, "div", 10);
        ɵngcc0.ɵɵelementStart(25, "div", 11);
        ɵngcc0.ɵɵelementStart(26, "span", 12);
        ɵngcc0.ɵɵelement(27, "i", 13);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(28, "input", 14);
        ɵngcc0.ɵɵlistener("ngModelChange", function FilePickerComponent_Template_input_ngModelChange_28_listener($event) { return ctx.fileUrl = $event; })("ngModelChange", function FilePickerComponent_Template_input_ngModelChange_28_listener($event) { return ctx.onFileUrlChange($event); });
        ɵngcc0.ɵɵpipe(29, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(2, 15, "Upload a binary"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngModel", ctx.uploadChoice);
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(8, 17, "Upload a binary"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(10, 19, "Provide a file path"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngModel", ctx.uploadChoice);
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(16, 21, "Provide a file path"), " ");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isPopoverUsed());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("hidden", ctx.uploadChoice !== "uploadBinary");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("title", ɵngcc0.ɵɵpipeBind1(21, 23, "Drop file or click to browse"))("maxAllowedFiles", ctx.maxAllowedFiles)("files", ctx.droppedFiles);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("hidden", ctx.uploadChoice !== "uploadUrl");
        ɵngcc0.ɵɵadvance(6);
        ɵngcc0.ɵɵpropertyInterpolate1("placeholder", "", ɵngcc0.ɵɵpipeBind1(29, 25, "e.g."), " http://example.com/binary.zip");
        ɵngcc0.ɵɵpropertyInterpolate("maxlength", ctx.config.maxlength);
        ɵngcc0.ɵɵproperty("ngModel", ctx.fileUrl);
    } }, directives: [ɵngcc13.RadioControlValueAccessor, ɵngcc13.DefaultValueAccessor, ɵngcc13.NgControlStatus, ɵngcc13.NgModel, ɵngcc6.NgIf, FormGroupComponent, DropAreaComponent, IconDirective, RequiredInputPlaceholderDirective, ɵngcc13.RequiredValidator, ɵngcc13.MaxLengthValidator, ɵngcc11.PopoverDirective], pipes: [C8yTranslatePipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FilePickerComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-file-picker',
                template: "<div class=\"form-group\">\n  <label title=\"{{ 'Upload a binary' | translate }}\" class=\"c8y-radio radio-inline\">\n    <input\n      #radio\n      type=\"radio\"\n      value=\"uploadBinary\"\n      name=\"uploadChoice\"\n      [(ngModel)]=\"uploadChoice\"\n      (click)=\"clearInputFromUrl()\"\n    />\n    <span></span>\n    <span>{{ 'Upload a binary' | translate }}</span>\n  </label>\n  <label title=\"{{ 'Provide a file path' | translate }}\" class=\"c8y-radio radio-inline m-l-8\">\n    <input\n      #radio\n      type=\"radio\"\n      value=\"uploadUrl\"\n      name=\"uploadChoice\"\n      [(ngModel)]=\"uploadChoice\"\n      (click)=\"clearSelectedFiles()\"\n    />\n    <span></span>\n    <span>\n      {{ 'Provide a file path' | translate }}\n    </span>\n    <button\n      *ngIf=\"isPopoverUsed()\"\n      class=\"btn btn-clean text-primary m-l-4\"\n      type=\"button\"\n      popover=\"{{ fileUrlPopover | translate }}\"\n      triggers=\"focus\"\n      container=\"body\"\n      placement=\"top\"\n    >\n      <i [c8yIcon]=\"'question-circle-o'\"></i>\n    </button>\n  </label>\n</div>\n\n<div [hidden]=\"uploadChoice !== 'uploadBinary'\">\n  <c8y-form-group class=\"m-0\">\n    <c8y-drop-area\n      class=\"drop-area-sm\"\n      (dropped)=\"onFileDropped($event)\"\n      [title]=\"'Drop file or click to browse' | translate\"\n      [maxAllowedFiles]=\"maxAllowedFiles\"\n      [files]=\"droppedFiles\"\n    >\n    </c8y-drop-area>\n  </c8y-form-group>\n</div>\n\n<div [hidden]=\"uploadChoice !== 'uploadUrl'\">\n  <c8y-form-group class=\"m-0\">\n    <div class=\"m-b-4 p-b-8\">\n      <div class=\"input-group\">\n        <span class=\"input-group-addon\">\n          <i c8yIcon=\"globe\"></i>\n        </span>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          name=\"fileUrl\"\n          [(ngModel)]=\"fileUrl\"\n          (ngModelChange)=\"onFileUrlChange($event)\"\n          placeholder=\"{{ 'e.g.' | translate }} http://example.com/binary.zip\"\n          maxlength=\"{{ config.maxlength }}\"\n          required\n        />\n      </div>\n    </div>\n  </c8y-form-group>\n</div>\n"
            }]
    }], function () { return []; }, { onFilesPicked: [{
            type: i0.Output
        }], maxAllowedFiles: [{
            type: i0.Input
        }], uploadChoice: [{
            type: i0.Input
        }], config: [{
            type: i0.Input
        }], dropArea: [{
            type: i0.ViewChild,
            args: [DropAreaComponent, { static: true }]
        }], fileUrl: [{
            type: i0.Input
        }], fileBinary: [{
            type: i0.Input
        }], fileUrlPopover: [{
            type: i0.Input
        }] }); })();
        return FilePickerComponent;
    }());
    FilePickerComponent.propDecorators = {
        dropArea: [{ type: i0.ViewChild, args: [DropAreaComponent, { static: true },] }],
        onFilesPicked: [{ type: i0.Output }],
        maxAllowedFiles: [{ type: i0.Input }],
        uploadChoice: [{ type: i0.Input }],
        fileUrl: [{ type: i0.Input }],
        fileBinary: [{ type: i0.Input }],
        config: [{ type: i0.Input }],
        fileUrlPopover: [{ type: i0.Input }]
    };

    /**
     * The angular module definition for a drop-area.
     * @exports FilePickerComponent
     */
    var FilePickerModule = /** @class */ (function () {
        function FilePickerModule() {
        }
FilePickerModule.ɵfac = function FilePickerModule_Factory(t) { return new (t || FilePickerModule)(); };
FilePickerModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: FilePickerModule });
FilePickerModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[
            FormsModule,
            common.CommonModule,
            DropAreaModule,
            forms.FormsModule,
            CommonModule,
            popover.PopoverModule
        ]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FilePickerModule, [{
        type: i0.NgModule,
        args: [{
                imports: [
                    FormsModule,
                    common.CommonModule,
                    DropAreaModule,
                    forms.FormsModule,
                    CommonModule,
                    popover.PopoverModule
                ],
                exports: [FilePickerComponent],
                declarations: [FilePickerComponent]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(FilePickerModule, { declarations: [FilePickerComponent], imports: [FormsModule, ɵngcc6.CommonModule, DropAreaModule, ɵngcc13.FormsModule, CommonModule, ɵngcc11.PopoverModule], exports: [FilePickerComponent] }); })();
        return FilePickerModule;
    }());

    var DatePickerComponent = /** @class */ (function () {
        function DatePickerComponent() {
            this.onDateSelected = new i0.EventEmitter();
        }
        DatePickerComponent.prototype.ngOnInit = function () {
            this.fgDatePicker = new forms.FormGroup({
                dateFrom: new forms.FormControl(),
                dateTo: new forms.FormControl()
            });
        };
        DatePickerComponent.prototype.filter = function () {
            this.onDateSelected.emit(this.fgDatePicker.value);
            this.dateFrom = this.fgDatePicker.get('dateFrom').value;
            this.dateTo = this.fgDatePicker.get('dateTo').value;
        };
        DatePickerComponent.prototype.clearFilter = function () {
            this.fgDatePicker.setValue({
                dateFrom: null,
                dateTo: null
            });
            this.onDateSelected.emit(null);
            this.dateFrom = null;
            this.dateTo = null;
        };
DatePickerComponent.ɵfac = function DatePickerComponent_Factory(t) { return new (t || DatePickerComponent)(); };
DatePickerComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: DatePickerComponent, selectors: [["c8y-date-picker"]], outputs: { onDateSelected: "onDateSelected" }, decls: 10, vars: 7, consts: [["dropdown", "", "placement", "bottom left", 1, "c8y-child-assets-selector", 3, "autoClose"], ["datefilter", "bs-dropdown"], ["id", "date-range", "dropdownToggle", "", "type", "button", "aria-controls", "dropdown-date-range", 1, "btn", "dropdown-toggle", "d-flex", "a-i-center", "c8y-dropdown", 3, "title"], ["c8yIcon", "calendar-o", 1, "m-r-4", "text-primary"], [1, "text-truncate"], [4, "ngIf"], ["id", "dropdown-date-range", "class", "dropdown-menu", "role", "menu", "aria-labelledby", "date-range", 4, "dropdownMenu"], [1, "text-label-small"], ["id", "dropdown-date-range", "role", "menu", "aria-labelledby", "date-range", 1, "dropdown-menu"], [1, "dropdown-form", 3, "formGroup"], ["translate", "", 1, "text-medium", "m-b-4"], [1, "datepicker", "d-block", "m-b-16", 2, "max-height", "32px"], ["formControlName", "dateFrom", "bsDatepicker", "", 1, "form-control", "fit-w", "text-left", 3, "placeholder", "maxDate", "bsConfig", "bsValueChange"], [1, "datepicker", "m-l-0", "d-block", 2, "max-height", "32px"], ["name", "dateTo", "formControlName", "dateTo", "bsDatepicker", "", 1, "form-control", "fit-w", "text-left", 3, "placeholder", "minDate", "bsConfig", "bsValueChange"], [1, "p-t-24"], ["type", "button", 1, "btn", "btn-default", "btn-sm", 3, "title", "click"], ["type", "submit", 1, "btn", "btn-primary", "btn-sm", 3, "disabled", "title", "click"]], template: function DatePickerComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0, 1);
        ɵngcc0.ɵɵelementStart(2, "button", 2);
        ɵngcc0.ɵɵpipe(3, "translate");
        ɵngcc0.ɵɵelement(4, "i", 3);
        ɵngcc0.ɵɵelementStart(5, "span", 4);
        ɵngcc0.ɵɵtemplate(6, DatePickerComponent_span_6_Template, 6, 6, "span", 5);
        ɵngcc0.ɵɵtemplate(7, DatePickerComponent_span_7_Template, 6, 6, "span", 5);
        ɵngcc0.ɵɵtemplate(8, DatePickerComponent_span_8_Template, 3, 3, "span", 5);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(9, DatePickerComponent_div_9_Template, 21, 26, "div", 6);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("autoClose", false);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(3, 5, "Date filter"));
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵproperty("ngIf", ctx.dateFrom);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.dateTo);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.dateFrom && !ctx.dateTo);
    } }, directives: [ɵngcc9.BsDropdownDirective, ɵngcc9.BsDropdownToggleDirective, IconDirective, ɵngcc6.NgIf, ɵngcc9.BsDropdownMenuDirective, ɵngcc13.ɵNgNoValidate, ɵngcc13.NgControlStatusGroup, ɵngcc13.FormGroupDirective, C8yTranslateDirective, FormGroupComponent, ɵngcc13.DefaultValueAccessor, ɵngcc15.BsDatepickerInputDirective, ɵngcc13.NgControlStatus, ɵngcc13.FormControlName, ɵngcc15.BsDatepickerDirective], pipes: [C8yTranslatePipe, ɵngcc6.DatePipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DatePickerComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-date-picker',
                template: "<div\n  dropdown\n  class=\"c8y-child-assets-selector\"\n  #datefilter=\"bs-dropdown\"\n  placement=\"bottom left\"\n  [autoClose]=\"false\"\n>\n  <button\n    id=\"date-range\"\n    dropdownToggle\n    title=\"{{ 'Date filter' | translate }}\"\n    type=\"button\"\n    class=\"btn dropdown-toggle d-flex a-i-center c8y-dropdown\"\n    aria-controls=\"dropdown-date-range\"\n  >\n    <i c8yIcon=\"calendar-o\" class=\"m-r-4 text-primary\"></i>\n    <span class=\"text-truncate\">\n      <span *ngIf=\"dateFrom\">\n        <span class=\"text-label-small\">{{ 'From`date`' | translate }}</span>\n        {{ dateFrom | date }}\n      </span>\n      <span *ngIf=\"dateTo\">\n        <span class=\"text-label-small\">{{ 'To`date`' | translate }}</span>\n        {{ dateTo | date }}\n      </span>\n      <span *ngIf=\"!dateFrom && !dateTo\">\n        {{ 'Filter by date' | translate }}\n      </span>\n    </span>\n  </button>\n  <div\n    id=\"dropdown-date-range\"\n    *dropdownMenu\n    class=\"dropdown-menu\"\n    role=\"menu\"\n    aria-labelledby=\"date-range\"\n  >\n    <form [formGroup]=\"fgDatePicker\" class=\"dropdown-form\">\n      <span class=\"text-medium m-b-4\" translate>Date from</span>\n      <c8y-form-group class=\"datepicker d-block m-b-16\" style=\"max-height: 32px\">\n        <input\n          formControlName=\"dateFrom\"\n          class=\"form-control fit-w text-left\"\n          placeholder=\"{{ 'Date from' | translate }}\"\n          bsDatepicker\n          [maxDate]=\"dateTo\"\n          (bsValueChange)=\"dateFrom = $event\"\n          [bsConfig]=\"{ customTodayClass: 'today', returnFocusToInput: true }\"\n        />\n      </c8y-form-group>\n      <span class=\"text-medium m-b-4\" translate>Date to</span>\n      <c8y-form-group class=\"datepicker m-l-0 d-block\" style=\"max-height: 32px\">\n        <input\n          name=\"dateTo\"\n          formControlName=\"dateTo\"\n          class=\"form-control fit-w text-left\"\n          placeholder=\"{{ 'Date to' | translate }}\"\n          bsDatepicker\n          [minDate]=\"dateFrom\"\n          (bsValueChange)=\"dateTo = $event\"\n          [bsConfig]=\"{ customTodayClass: 'today', returnFocusToInput: true }\"\n        />\n      </c8y-form-group>\n      <div class=\"p-t-24\">\n        <button\n          title=\"{{ 'Clear selection' | translate }}\"\n          type=\"button\"\n          class=\"btn btn-default btn-sm\"\n          (click)=\"clearFilter(); datefilter.isOpen = !datefilter.isOpen\"\n        >\n          {{ 'Clear`selection`' | translate }}\n        </button>\n        <button\n          [disabled]=\"!fgDatePicker.get('dateFrom').value && !fgDatePicker.get('dateTo').value\"\n          title=\"{{ 'Apply selection' | translate }}\"\n          type=\"submit\"\n          class=\"btn btn-primary btn-sm\"\n          (click)=\"filter(); datefilter.isOpen = !datefilter.isOpen\"\n        >\n          {{ 'Apply`selection`' | translate }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n"
            }]
    }], function () { return []; }, { onDateSelected: [{
            type: i0.Output
        }] }); })();
        return DatePickerComponent;
    }());
    DatePickerComponent.propDecorators = {
        onDateSelected: [{ type: i0.Output }]
    };

    /**
     * The angular module definition for a date picker - it allows you to pick either one date or a range of two.
     * @exports DatePickerComponent
     */
    var DatePickerModule = /** @class */ (function () {
        function DatePickerModule() {
        }
DatePickerModule.ɵfac = function DatePickerModule_Factory(t) { return new (t || DatePickerModule)(); };
DatePickerModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: DatePickerModule });
DatePickerModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[
            FormsModule,
            common.CommonModule,
            forms.FormsModule,
            forms.ReactiveFormsModule,
            dropdown.BsDropdownModule.forRoot(),
            datepicker.BsDatepickerModule.forRoot(),
            CommonModule
        ]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DatePickerModule, [{
        type: i0.NgModule,
        args: [{
                imports: [
                    FormsModule,
                    common.CommonModule,
                    forms.FormsModule,
                    forms.ReactiveFormsModule,
                    dropdown.BsDropdownModule.forRoot(),
                    datepicker.BsDatepickerModule.forRoot(),
                    CommonModule
                ],
                exports: [DatePickerComponent],
                declarations: [DatePickerComponent]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DatePickerModule, { declarations: [DatePickerComponent], imports: [FormsModule, ɵngcc6.CommonModule, ɵngcc13.FormsModule, ɵngcc13.ReactiveFormsModule, ɵngcc9.BsDropdownModule, ɵngcc15.BsDatepickerModule, CommonModule], exports: [DatePickerComponent] }); })();
        return DatePickerModule;
    }());

    var ContextRouteComponent = /** @class */ (function () {
        function ContextRouteComponent(route, contextRouteService) {
            this.route = route;
            this.contextRouteService = contextRouteService;
        }
        ContextRouteComponent.prototype.ngOnInit = function () {
            this.contextRouteService.init(this.route);
        };
        ContextRouteComponent.prototype.ngOnDestroy = function () {
            this.contextRouteService.destroy();
        };
        ContextRouteComponent.prototype.refreshTabs = function () {
            this.contextRouteService.refreshContext();
        };
ContextRouteComponent.ɵfac = function ContextRouteComponent_Factory(t) { return new (t || ContextRouteComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ActivatedRoute), ɵngcc0.ɵɵdirectiveInject(ContextRouteService)); };
ContextRouteComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ContextRouteComponent, selectors: [["c8y-context-route"]], decls: 1, vars: 0, template: function ContextRouteComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelement(0, "router-outlet");
    } }, directives: [ɵngcc1.RouterOutlet], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ContextRouteComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-context-route',
                template: "<router-outlet></router-outlet>\n"
            }]
    }], function () { return [{ type: ɵngcc1.ActivatedRoute }, { type: ContextRouteService }]; }, null); })();
        return ContextRouteComponent;
    }());
    ContextRouteComponent.ctorParameters = function () { return [
        { type: i1.ActivatedRoute },
        { type: ContextRouteService }
    ]; };

    var ContextRouteGuard = /** @class */ (function () {
        function ContextRouteGuard(injector) {
            this.injector = injector;
            this.caches = new Map();
        }
        ContextRouteGuard.prototype.canActivate = function (route) {
            var id = route.paramMap.get('id');
            var service = this.service(route);
            this.clearDetailCached(service, id);
            return this.detailCached(service, id).pipe(operators.tap(function (contextData) { return (route.data = Object.assign(Object.assign({}, route.data), { contextData: contextData })); }), operators.map(function () { return true; }), operators.catchError(function (ex) { return rxjs.of(false); }));
        };
        ContextRouteGuard.prototype.service = function (route) {
            var serviceInstance = ViewContextServices.contextToService(route.data.context);
            return this.injector.get(serviceInstance);
        };
        ContextRouteGuard.prototype.detailCached = function (service, id) {
            var cache = this.getCache(service);
            var cached = cache[id];
            if (!cached) {
                var params = service instanceof i4.InventoryService ? { withChildren: false } : undefined;
                cached = rxjs.from(service.detail(id, params)).pipe(operators.map(function (_a) {
                    var data = _a.data;
                    return data;
                }), operators.shareReplay(1));
                cache[id] = cached;
            }
            return cached;
        };
        ContextRouteGuard.prototype.clearDetailCached = function (service, id) {
            var cache = this.getCache(service);
            delete cache[id];
        };
        ContextRouteGuard.prototype.getCache = function (service) {
            var cache = this.caches.get(service);
            if (!cache) {
                cache = {};
                this.caches.set(service, cache);
            }
            return cache;
        };
ContextRouteGuard.ɵfac = function ContextRouteGuard_Factory(t) { return new (t || ContextRouteGuard)(ɵngcc0.ɵɵinject(ɵngcc0.Injector)); };
ContextRouteGuard.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: ContextRouteGuard, factory: function (t) { return ContextRouteGuard.ɵfac(t); } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ContextRouteGuard, [{
        type: i0.Injectable
    }], function () { return [{ type: ɵngcc0.Injector }]; }, null); })();
        return ContextRouteGuard;
    }());
    ContextRouteGuard.ctorParameters = function () { return [
        { type: i0.Injector }
    ]; };

    var EmptyComponent = /** @class */ (function () {
        function EmptyComponent() {
        }
EmptyComponent.ɵfac = function EmptyComponent_Factory(t) { return new (t || EmptyComponent)(); };
EmptyComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: EmptyComponent, selectors: [["empty"]], decls: 0, vars: 0, template: function EmptyComponent_Template(rf, ctx) { }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(EmptyComponent, [{
        type: i0.Component,
        args: [{ selector: 'empty', template: '' }]
    }], function () { return []; }, null); })();
        return EmptyComponent;
    }());

    var routes = [{
            path: 'users/new',
            component: EmptyComponent
        },
        {
            path: 'tenants/new',
            component: EmptyComponent
        }];
    // tslint:disable-next-line: forin
    for (var key in exports.ViewContext) {
        var context = exports.ViewContext[key];
        routes.push({
            path: context,
            component: ContextRouteComponent,
            canActivate: [ContextRouteGuard],
            data: { context: context, contextData: {} },
            resolve: {
                tabs: RouterTabsResolver,
            }
        });
    }
    var RouterModule = /** @class */ (function () {
        function RouterModule(routerService) {
            // Declared but never used is intended: to always have a instance of RouterService.
        }
        RouterModule.providers = function () {
            return [
                ContextRouteGuard,
                RouterTabsResolver,
                RouterService
            ];
        };
        RouterModule.forRoot = function () {
            return {
                ngModule: RouterModule,
                providers: RouterModule.providers()
            };
        };
RouterModule.ɵfac = function RouterModule_Factory(t) { return new (t || RouterModule)(ɵngcc0.ɵɵinject(RouterService)); };
RouterModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: RouterModule });
RouterModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[
            i1.RouterModule.forRoot(routes),
            HeaderModule,
            CommonModule
        ]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(RouterModule, [{
        type: i0.NgModule,
        args: [{
                declarations: [ContextRouteComponent, EmptyComponent],
                imports: [
                    i1.RouterModule.forRoot(routes),
                    HeaderModule,
                    CommonModule
                ],
                entryComponents: [ContextRouteComponent, EmptyComponent]
            }]
    }], function () { return [{ type: RouterService }]; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(RouterModule, { declarations: [ContextRouteComponent, EmptyComponent], imports: [ɵngcc1.RouterModule, HeaderModule, CommonModule] }); })();
        return RouterModule;
    }());
    RouterModule.ctorParameters = function () { return [
        { type: RouterService }
    ]; };

    var _a, _b;
    // TODO remove  when c8y-icon will works
    exports.SendStatus = void 0;
    (function (SendStatus) {
        SendStatus["AVAILABLE"] = "AVAILABLE";
        SendStatus["UNAVAILABLE"] = "UNAVAILABLE";
        SendStatus["UNKNOWN"] = "UNKNOWN";
        SendStatus["MAINTENANCE"] = "MAINTENANCE";
        SendStatus["NOT_MONITORED"] = "NOT_MONITORED";
    })(exports.SendStatus || (exports.SendStatus = {}));
    exports.PushStatus = void 0;
    (function (PushStatus) {
        PushStatus["CONNECTED"] = "CONNECTED";
        PushStatus["DISCONNECTED"] = "DISCONNECTED";
        PushStatus["UNKNOWN"] = "UNKNOWN";
        PushStatus["MAINTENANCE"] = "MAINTENANCE";
    })(exports.PushStatus || (exports.PushStatus = {}));
    exports.SendStatusLabels = void 0;
    (function (SendStatusLabels) {
        SendStatusLabels[SendStatusLabels["AVAILABLE"] = gettext('Send connection: online')] = "AVAILABLE";
        SendStatusLabels[SendStatusLabels["NOT_MONITORED"] = gettext('Send connection: not monitored')] = "NOT_MONITORED";
        SendStatusLabels[SendStatusLabels["UNAVAILABLE"] = gettext('Send connection: offline')] = "UNAVAILABLE";
        SendStatusLabels[SendStatusLabels["UNKNOWN"] = gettext('Send connection status unknown')] = "UNKNOWN";
        SendStatusLabels[SendStatusLabels["MAINTENANCE"] = gettext('Device is under maintenance')] = "MAINTENANCE";
    })(exports.SendStatusLabels || (exports.SendStatusLabels = {}));
    exports.PushStatusLabels = void 0;
    (function (PushStatusLabels) {
        PushStatusLabels[PushStatusLabels["CONNECTED"] = gettext('Push connection: active')] = "CONNECTED";
        PushStatusLabels[PushStatusLabels["DISCONNECTED"] = gettext('Push connection: inactive')] = "DISCONNECTED";
        PushStatusLabels[PushStatusLabels["UNKNOWN"] = gettext('Push connection: inactive')] = "UNKNOWN";
        PushStatusLabels[PushStatusLabels["MAINTENANCE"] = gettext('Device is under maintenance')] = "MAINTENANCE";
    })(exports.PushStatusLabels || (exports.PushStatusLabels = {}));
    var deviceAvailabilityIconMap = {
        sendData: (_a = {},
            _a[exports.SendStatus.AVAILABLE] = {
                icon: 'long-arrow-right',
                class: 'statusOk'
            },
            _a[exports.SendStatus.UNAVAILABLE] = {
                icon: 'long-arrow-right',
                class: 'statusNok'
            },
            _a[exports.SendStatus.UNKNOWN] = {
                icon: 'long-arrow-right',
                class: 'statusUnknown'
            },
            _a[exports.SendStatus.NOT_MONITORED] = {
                icon: 'long-arrow-right',
                class: 'statusUnknown'
            },
            _a),
        push: (_b = {},
            _b[exports.PushStatus.CONNECTED] = {
                icon: 'long-arrow-left',
                class: 'statusOk'
            },
            _b[exports.PushStatus.DISCONNECTED] = {
                icon: 'long-arrow-left',
                class: 'statusUnknown'
            },
            _b[exports.PushStatus.UNKNOWN] = {
                icon: 'long-arrow-left',
                class: 'statusUnknown'
            },
            _b[exports.PushStatus.MAINTENANCE] = {
                icon: 'wrench',
                class: 'statusAlert'
            },
            _b),
        device: {
            MAINTENANCE: {
                icon: 'wrench',
                class: 'statusAlert'
            }
        }
    };
    var ɵ0$3 = function (lastMessage, translateService) {
        var date = common.formatDate(new Date(lastMessage), 'medium', translateService.currentLang);
        return translateService.instant(gettext('Device last request:\n{{date}}'), { date: date });
    };
    var tooltips = {
        sendStatusConnected: ɵ0$3,
        sendStatusDisconnected: gettext('Connection not monitored'),
        pushStatusConnected: gettext('Connection to device established'),
        pushStatusDisconnected: gettext('Connection to device not established (not supported by device or no connectivity)'),
        maintenance: gettext('Device is under maintenance')
    };

    var DeviceStatusComponent = /** @class */ (function () {
        function DeviceStatusComponent(translateService) {
            this.translateService = translateService;
        }
        Object.defineProperty(DeviceStatusComponent.prototype, "node", {
            set: function (value) {
                this._mo = value.mo || value;
            },
            enumerable: false,
            configurable: true
        });
        DeviceStatusComponent.prototype.get = function () {
            return this._mo;
        };
        DeviceStatusComponent.prototype.ngOnChanges = function () {
            this.setStatusProperites();
        };
        DeviceStatusComponent.prototype.ngAfterContentInit = function () {
            this.setStatusProperites();
        };
        DeviceStatusComponent.prototype.setStatusProperites = function () {
            this.requiredAvailability = lodashEs.get(this._mo, 'c8y_RequiredAvailability');
            this.availabilityStatus = lodashEs.get(this._mo, 'c8y_Availability.status');
            this.pushStatus = lodashEs.get(this._mo, 'c8y_Connection.status') || 'UNKNOWN';
            this.sendStatus =
                this.availabilityStatus || (this.requiredAvailability ? 'UNKNOWN' : 'NOT_MONITORED');
        };
        DeviceStatusComponent.prototype.status = function () {
            var statuses;
            if (this.availabilityStatus === 'MAINTENANCE' || this.pushStatus === 'MAINTENANCE') {
                statuses = this.getMaintenanceStatus();
            }
            else {
                statuses = this.getSendPushStatus();
            }
            return statuses;
        };
        DeviceStatusComponent.prototype.getMaintenanceStatus = function () {
            return {
                sendStatus: false,
                pushStatus: false,
                maintenanceStatus: {
                    icon: deviceAvailabilityIconMap.device.MAINTENANCE.icon,
                    class: deviceAvailabilityIconMap.device.MAINTENANCE.class,
                    tooltip: tooltips.maintenance
                }
            };
        };
        DeviceStatusComponent.prototype.getSendPushStatus = function () {
            return {
                sendStatus: {
                    icon: deviceAvailabilityIconMap.sendData[this.sendStatus].icon,
                    class: deviceAvailabilityIconMap.sendData[this.sendStatus].class,
                    status: this.sendStatus,
                    label: exports.SendStatusLabels[this.sendStatus],
                    tooltip: this.getSendStatusTooltip(this._mo)
                },
                pushStatus: {
                    icon: deviceAvailabilityIconMap.push[this.pushStatus].icon,
                    class: deviceAvailabilityIconMap.push[this.pushStatus].class,
                    status: this.pushStatus,
                    label: exports.PushStatusLabels[this.pushStatus],
                    tooltip: this.getPushStatusTooltip(this.pushStatus === 'CONNECTED')
                },
                maintenanceStatus: false
            };
        };
        DeviceStatusComponent.prototype.getSendStatusTooltip = function (device) {
            var availability = device && device.c8y_Availability;
            var lastMessage = availability && availability.lastMessage;
            if (lastMessage) {
                return tooltips.sendStatusConnected(lastMessage, this.translateService);
            }
            return tooltips.sendStatusDisconnected;
        };
        DeviceStatusComponent.prototype.getPushStatusTooltip = function (isActive) {
            return isActive ? tooltips.pushStatusConnected : tooltips.pushStatusDisconnected;
        };
DeviceStatusComponent.ɵfac = function DeviceStatusComponent_Factory(t) { return new (t || DeviceStatusComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc4.TranslateService)); };
DeviceStatusComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: DeviceStatusComponent, selectors: [["device-status"]], inputs: { node: ["mo", "node"] }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 6, vars: 9, consts: [["placement", "left", 1, "statusContainer", 3, "title"], ["class", "sendStatus", 3, "c8yIcon", "ngClass", 4, "ngIf"], ["class", "pushStatus", 3, "c8yIcon", "ngClass", 4, "ngIf"], ["class", "maintenanceStatus", "container", "body", "placement", "auto", 3, "tooltip", "c8yIcon", "ngClass", 4, "ngIf"], [1, "sendStatus", 3, "c8yIcon", "ngClass"], [1, "pushStatus", 3, "c8yIcon", "ngClass"], ["container", "body", "placement", "auto", 1, "maintenanceStatus", 3, "tooltip", "c8yIcon", "ngClass"]], template: function DeviceStatusComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵpipe(1, "translate");
        ɵngcc0.ɵɵpipe(2, "translate");
        ɵngcc0.ɵɵtemplate(3, DeviceStatusComponent_div_3_Template, 1, 2, "div", 1);
        ɵngcc0.ɵɵtemplate(4, DeviceStatusComponent_div_4_Template, 1, 2, "div", 2);
        ɵngcc0.ɵɵtemplate(5, DeviceStatusComponent_div_5_Template, 2, 5, "div", 3);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵpropertyInterpolate2("title", "", ɵngcc0.ɵɵpipeBind1(1, 5, ctx.status().sendStatus.tooltip), "\n", ɵngcc0.ɵɵpipeBind1(2, 7, ctx.status().pushStatus.tooltip), "");
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", !!ctx.status().sendStatus);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !!ctx.status().pushStatus);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !!ctx.status().maintenanceStatus);
    } }, directives: [ɵngcc6.NgIf, IconDirective, ɵngcc6.NgClass, ɵngcc8.TooltipDirective], pipes: [C8yTranslatePipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DeviceStatusComponent, [{
        type: i0.Component,
        args: [{
                selector: 'device-status',
                template: "<!-- ATTENTION: keep text format in `tooltip` attribute -->\n<div class=\"statusContainer\"\n    title=\"{{status().sendStatus.tooltip | translate}}\n{{status().pushStatus.tooltip | translate}}\"\n    placement=\"left\"\n   >\n    <div\n    *ngIf=\"!!status().sendStatus\"\n    class=\"sendStatus\"\n    [c8yIcon]=\"status().sendStatus.icon\"\n    [ngClass]=\"status().sendStatus.class\"\n    ></div>\n    <div\n    *ngIf=\"!!status().pushStatus\"\n    class=\"pushStatus\"\n    [c8yIcon]=\"status().pushStatus.icon\"\n    [ngClass]=\"status().pushStatus.class\"\n    >\n    </div>\n\n  <div *ngIf=\"!!status().maintenanceStatus\"\n    class=\"maintenanceStatus\"\n    tooltip=\"{{status().maintenanceStatus.tooltip | translate}}\"\n    container=\"body\"\n    placement=\"auto\"\n    [c8yIcon]=\"status().maintenanceStatus.icon\"\n    [ngClass]=\"status().maintenanceStatus.class\"></div>\n</div>\n"
            }]
    }], function () { return [{ type: ɵngcc4.TranslateService }]; }, { node: [{
            type: i0.Input,
            args: ['mo']
        }] }); })();
        return DeviceStatusComponent;
    }());
    DeviceStatusComponent.ctorParameters = function () { return [
        { type: i1$1.TranslateService }
    ]; };
    DeviceStatusComponent.propDecorators = {
        node: [{ type: i0.Input, args: ['mo',] }]
    };

    /**
     * The angular module definition for a device-status.
     * @exports DeviceStatusComponent
     */
    var DeviceStatusModule = /** @class */ (function () {
        function DeviceStatusModule() {
        }
DeviceStatusModule.ɵfac = function DeviceStatusModule_Factory(t) { return new (t || DeviceStatusModule)(); };
DeviceStatusModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: DeviceStatusModule });
DeviceStatusModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[
            CommonModule,
            tooltip.TooltipModule
        ]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DeviceStatusModule, [{
        type: i0.NgModule,
        args: [{
                imports: [
                    CommonModule,
                    tooltip.TooltipModule
                ],
                exports: [
                    DeviceStatusComponent
                ],
                declarations: [
                    DeviceStatusComponent
                ]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DeviceStatusModule, { declarations: [DeviceStatusComponent], imports: [CommonModule, ɵngcc8.TooltipModule], exports: [DeviceStatusComponent] }); })();
        return DeviceStatusModule;
    }());

    var GuideHrefDirective = /** @class */ (function () {
        function GuideHrefDirective(elementRef) {
            this.elementRef = elementRef;
            this.htmlAnchor = this.elementRef.nativeElement;
            if (!this.htmlAnchor.hasAttribute('target')) {
                this.htmlAnchor.setAttribute('target', '_blank');
            }
        }
        Object.defineProperty(GuideHrefDirective.prototype, "baseHref", {
            set: function (href) {
                this.htmlAnchor.href = href + "/" + this.c8yGuideHref;
            },
            enumerable: false,
            configurable: true
        });
GuideHrefDirective.ɵfac = function GuideHrefDirective_Factory(t) { return new (t || GuideHrefDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
GuideHrefDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: GuideHrefDirective, selectors: [["", "c8y-guide-href", ""]], inputs: { c8yGuideHref: ["c8y-guide-href", "c8yGuideHref"] } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(GuideHrefDirective, [{
        type: i0.Directive,
        args: [{
                selector: '[c8y-guide-href]'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { c8yGuideHref: [{
            type: i0.Input,
            args: ['c8y-guide-href']
        }] }); })();
        return GuideHrefDirective;
    }());
    GuideHrefDirective.ctorParameters = function () { return [
        { type: i0.ElementRef }
    ]; };
    GuideHrefDirective.propDecorators = {
        c8yGuideHref: [{ type: i0.Input, args: ['c8y-guide-href',] }]
    };

    var GuideDocsComponent = /** @class */ (function () {
        function GuideDocsComponent(docs, el, renderer) {
            this.docs = docs;
            this.el = el;
            this.renderer = renderer;
            this.destroyed$ = new rxjs.ReplaySubject(1);
        }
        GuideDocsComponent.prototype.ngOnInit = function () {
            this.baseUrl = this.docs.getBaseUrl();
        };
        /**
         * After content is initialized we subscribe for translation events, then we are able to modify
         * anchor just as C8yGuideHrefDirective does.
         */
        GuideDocsComponent.prototype.ngAfterViewInit = function () {
            var _this = this;
            if (this.translateDirective) {
                this.translateDirective.htmlUpdateEvent
                    .pipe(operators.takeUntil(this.destroyed$))
                    .subscribe(function () {
                    _this.replaceAnchorAttributes();
                });
            }
            else {
                this.replaceAnchorAttributes();
            }
            this.links.forEach(function (guide) {
                guide.baseHref = _this.baseUrl;
            });
        };
        /**
         * Find and modify anchor elements
         */
        GuideDocsComponent.prototype.replaceAnchorAttributes = function () {
            var _this = this;
            var anchors = this.findGuideAnchors(this.el.nativeElement);
            anchors.forEach(function (a) {
                var guideHref = _this.baseUrl + "/" + a.getAttribute('c8y-guide-href');
                _this.renderer.setAttribute(a, 'href', guideHref);
                if (!a.hasAttribute('target')) {
                    _this.renderer.setAttribute(a, 'target', '_blank');
                }
            });
        };
        /**
         * Recursive function, returns array of Anchor elements inside HTMLElement.
         */
        GuideDocsComponent.prototype.findGuideAnchors = function (el) {
            var _this = this;
            var isAnchor = function () { return el.nodeName === 'A'; };
            var hasGuideHrefAttr = function () { return !!el.attributes.getNamedItem('c8y-guide-href'); };
            var hasChildren = function () { return el.childNodes && el.childNodes.length > 0; };
            var result = [];
            if (isAnchor() && hasGuideHrefAttr()) {
                result.push(el);
            }
            else if (hasChildren()) {
                el.childNodes.forEach(function (node) {
                    var searchResult = _this.findGuideAnchors(node);
                    if (searchResult) {
                        result = __spreadArray(__spreadArray([], __read(result)), __read(searchResult));
                    }
                });
            }
            return result;
        };
        GuideDocsComponent.prototype.ngOnDestroy = function () {
            this.destroyed$.next(true);
            this.destroyed$.complete();
        };
GuideDocsComponent.ɵfac = function GuideDocsComponent_Factory(t) { return new (t || GuideDocsComponent)(ɵngcc0.ɵɵdirectiveInject(DocsService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };
GuideDocsComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: GuideDocsComponent, selectors: [["", "c8y-guide-docs", ""]], contentQueries: function GuideDocsComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, C8yTranslateDirective, 5);
        ɵngcc0.ɵɵcontentQuery(dirIndex, GuideHrefDirective, 5);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.translateDirective = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.links = _t);
    } }, attrs: _c46, ngContentSelectors: _c1, decls: 1, vars: 1, consts: [[4, "ngIf"]], template: function GuideDocsComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵtemplate(0, GuideDocsComponent_ng_container_0_Template, 2, 0, "ng-container", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", !!ctx.baseUrl);
    } }, directives: [ɵngcc6.NgIf], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(GuideDocsComponent, [{
        type: i0.Component,
        args: [{
                selector: '[c8y-guide-docs]',
                template: "<ng-container *ngIf=\"!!baseUrl\">\n  <ng-content></ng-content>\n</ng-container>\n"
            }]
    }], function () { return [{ type: DocsService }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }]; }, { links: [{
            type: i0.ContentChildren,
            args: [GuideHrefDirective, { descendants: true }]
        }], translateDirective: [{
            type: i0.ContentChild,
            args: [C8yTranslateDirective, { static: false }]
        }] }); })();
        return GuideDocsComponent;
    }());
    GuideDocsComponent.ctorParameters = function () { return [
        { type: DocsService },
        { type: i0.ElementRef },
        { type: i0.Renderer2 }
    ]; };
    GuideDocsComponent.propDecorators = {
        links: [{ type: i0.ContentChildren, args: [GuideHrefDirective, { descendants: true },] }],
        translateDirective: [{ type: i0.ContentChild, args: [C8yTranslateDirective, { static: false },] }]
    };

    var DocsModule = /** @class */ (function () {
        function DocsModule() {
        }
DocsModule.ɵfac = function DocsModule_Factory(t) { return new (t || DocsModule)(); };
DocsModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: DocsModule });
DocsModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [DocsService], imports: [[common.CommonModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DocsModule, [{
        type: i0.NgModule,
        args: [{
                declarations: [
                    GuideHrefDirective,
                    GuideDocsComponent
                ],
                imports: [common.CommonModule],
                exports: [
                    GuideHrefDirective,
                    GuideDocsComponent
                ],
                providers: [DocsService]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DocsModule, { declarations: [GuideHrefDirective, GuideDocsComponent], imports: [ɵngcc6.CommonModule], exports: [GuideHrefDirective, GuideDocsComponent] }); })();
        return DocsModule;
    }());

    var ArrayTypeComponent = /** @class */ (function (_super) {
        __extends(ArrayTypeComponent, _super);
        function ArrayTypeComponent() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        ArrayTypeComponent.prototype.ngOnInit = function () {
            if (this.to.required && !this.field.fieldGroup.length) {
                this.add();
            }
        };
ArrayTypeComponent.ɵfac = /*@__PURE__*/ function () { var ɵArrayTypeComponent_BaseFactory; return function ArrayTypeComponent_Factory(t) { return (ɵArrayTypeComponent_BaseFactory || (ɵArrayTypeComponent_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(ArrayTypeComponent)))(t || ArrayTypeComponent); }; }();
ArrayTypeComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ArrayTypeComponent, selectors: [["c8y-array-type"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 10, vars: 9, consts: [["role", "group"], ["class", "legend form-block", 3, "id", 4, "ngIf"], ["class", "form-control-feedback-message has-error", "role", "alert", 4, "ngIf"], ["class", "input-group-array", 4, "ngFor", "ngForOf"], [1, "p-t-8"], ["type", "button", 1, "btn-add-block", 3, "title", "click"], ["c8yIcon", "plus-square"], ["translate", "", 3, "translateParams"], [1, "legend", "form-block", 3, "id"], ["class", "btn-clean text-14 m-l-4 flex-item-middle", "placement", "right", "outsideClick", "true", "type", "button", 3, "popover", 4, "ngIf"], ["placement", "right", "outsideClick", "true", "type", "button", 1, "btn-clean", "text-14", "m-l-4", "flex-item-middle", 3, "popover"], ["c8yIcon", "question-circle-o", 1, "text-primary"], ["role", "alert", 1, "form-control-feedback-message", "has-error"], [3, "field"], [1, "input-group-array"], [1, "input-group-btn"], ["type", "button", 1, "btn", "btn-clean", "flex-item-right", 3, "title", "click"], ["c8yIcon", "minus-circle", 1, "text-danger"]], template: function ArrayTypeComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵtemplate(1, ArrayTypeComponent_div_1_Template, 3, 3, "div", 1);
        ɵngcc0.ɵɵtemplate(2, ArrayTypeComponent_div_2_Template, 2, 1, "div", 2);
        ɵngcc0.ɵɵtemplate(3, ArrayTypeComponent_div_3_Template, 6, 4, "div", 3);
        ɵngcc0.ɵɵelementStart(4, "div", 4);
        ɵngcc0.ɵɵelementStart(5, "button", 5);
        ɵngcc0.ɵɵlistener("click", function ArrayTypeComponent_Template_button_click_5_listener() { return ctx.add(); });
        ɵngcc0.ɵɵpipe(6, "translate");
        ɵngcc0.ɵɵelement(7, "i", 6);
        ɵngcc0.ɵɵelementStart(8, "span", 7);
        ɵngcc0.ɵɵdisableBindings();
        ɵngcc0.ɵɵtext(9, "Add {{ label }}");
        ɵngcc0.ɵɵenableBindings();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵattribute("aria-labelledby", ctx.id + "-fieldset");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.to.label || ctx.to.description);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showError && ctx.formControl.errors);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.field.fieldGroup);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind2(6, 6, "Add {{ label }}", ctx.field == null ? null : ctx.field.fieldArray == null ? null : ctx.field.fieldArray.templateOptions));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("translateParams", ctx.field == null ? null : ctx.field.fieldArray == null ? null : ctx.field.fieldArray.templateOptions);
    } }, directives: [ɵngcc6.NgIf, ɵngcc6.NgForOf, IconDirective, C8yTranslateDirective, ɵngcc11.PopoverDirective, ɵngcc16.ɵc, ɵngcc16.FormlyField], pipes: [C8yTranslatePipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ArrayTypeComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-array-type',
                template: "<div role=\"group\" [attr.aria-labelledby]=\"id + '-fieldset'\">\n  <div id=\"{{ id + '-fieldset' }}\" class=\"legend form-block\" *ngIf=\"to.label || to.description\">\n    {{ to.label }}\n    <button\n      *ngIf=\"to.description\"\n      class=\"btn-clean text-14 m-l-4 flex-item-middle\"\n      [popover]=\"to.description\"\n      placement=\"right\"\n      outsideClick=\"true\"\n      type=\"button\"\n    >\n      <i c8yIcon=\"question-circle-o\" class=\"text-primary\"></i>\n    </button>\n  </div>\n\n  <div\n    class=\"form-control-feedback-message has-error\"\n    role=\"alert\"\n    *ngIf=\"showError && formControl.errors\"\n  >\n    <formly-validation-message [field]=\"field\"></formly-validation-message>\n  </div>\n\n  <div *ngFor=\"let field of field.fieldGroup; let i = index\" class=\"input-group-array\">\n    <formly-field [field]=\"field\"> </formly-field>\n    <div class=\"input-group-btn\">\n      <button\n        type=\"button\"\n        class=\"btn btn-clean flex-item-right\"\n        title=\"{{ 'Delete' | translate }}\"\n        (click)=\"remove(i)\"\n      >\n        <i c8yIcon=\"minus-circle\" class=\"text-danger\"></i>\n      </button>\n    </div>\n  </div>\n\n  <div class=\"p-t-8\">\n    <button\n      type=\"button\"\n      title=\"{{ 'Add \\{\\{ label \\}\\}' | translate: field?.fieldArray?.templateOptions }}\"\n      class=\"btn-add-block\"\n      (click)=\"add()\"\n    >\n      <i c8yIcon=\"plus-square\"></i>\n      <span ngNonBindable translate [translateParams]=\"field?.fieldArray?.templateOptions\"\n        >Add {{ label }}</span\n      >\n    </button>\n  </div>\n</div>\n"
            }]
    }], null, null); })();
        return ArrayTypeComponent;
    }(core.FieldArrayType));
    ArrayTypeComponent.CONFIG = {
        types: [{ name: 'array', component: ArrayTypeComponent }]
    };

    var FieldCheckbox = /** @class */ (function (_super) {
        __extends(FieldCheckbox, _super);
        function FieldCheckbox() {
            var _this = _super.apply(this, __spreadArray([], __read(arguments))) || this;
            _this.defaultOptions = {
                templateOptions: {
                    indeterminate: true,
                    formCheck: 'custom' // 'custom' | 'custom-inline' | 'custom-switch' | 'stacked' | 'inline' | 'nolabel'
                }
            };
            return _this;
        }
FieldCheckbox.ɵfac = /*@__PURE__*/ function () { var ɵFieldCheckbox_BaseFactory; return function FieldCheckbox_Factory(t) { return (ɵFieldCheckbox_BaseFactory || (ɵFieldCheckbox_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(FieldCheckbox)))(t || FieldCheckbox); }; }();
FieldCheckbox.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: FieldCheckbox, selectors: [["c8y-field-checkbox"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 7, vars: 16, consts: [[1, "c8y-checkbox"], ["type", "checkbox", 3, "indeterminate", "formControl", "formlyAttributes"], [4, "ngIf"], ["class", "btn-clean m-l-4 flex-item-middle", "placement", "auto", "outsideClick", "true", "type", "button", 3, "popover", 4, "ngIf"], ["translate", "", 1, "m-l-4"], ["placement", "auto", "outsideClick", "true", "type", "button", 1, "btn-clean", "m-l-4", "flex-item-middle", 3, "popover"], ["c8yIcon", "question-circle-o", 1, "text-primary"]], template: function FieldCheckbox_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "label", 0);
        ɵngcc0.ɵɵelement(1, "input", 1);
        ɵngcc0.ɵɵelement(2, "span");
        ɵngcc0.ɵɵelementStart(3, "span");
        ɵngcc0.ɵɵtext(4);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(5, FieldCheckbox_span_5_Template, 3, 0, "span", 2);
        ɵngcc0.ɵɵtemplate(6, FieldCheckbox_button_6_Template, 2, 1, "button", 3);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵclassProp("has-error", ctx.showError);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassProp("is-invalid", ctx.showError)("form-check-input", ctx.to.formCheck.indexOf("custom") === -1)("position-static", ctx.to.formCheck === "nolabel")("custom-control-input", ctx.to.formCheck.indexOf("custom") === 0);
        ɵngcc0.ɵɵproperty("indeterminate", ctx.to.indeterminate && ctx.formControl.value == null)("formControl", ctx.formControl)("formlyAttributes", ctx.field);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate1(" ", ctx.to.label, " ");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.to.required && ctx.to.hideRequiredMarker !== true);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !!ctx.to.description);
    } }, directives: [ɵngcc13.CheckboxControlValueAccessor, ɵngcc13.NgControlStatus, ɵngcc13.FormControlDirective, ɵngcc16.FormlyAttributes, ɵngcc6.NgIf, C8yTranslateDirective, ɵngcc11.PopoverDirective, IconDirective], encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FieldCheckbox, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-field-checkbox',
                template: "  <label class=\"c8y-checkbox\" [class.has-error]=\"showError\">\n    <input\n      type=\"checkbox\"\n      [class.is-invalid]=\"showError\"\n      [class.form-check-input]=\"to.formCheck.indexOf('custom') === -1\"\n      [class.position-static]=\"to.formCheck === 'nolabel'\"\n      [class.custom-control-input]=\"to.formCheck.indexOf('custom') === 0\"\n      [indeterminate]=\"to.indeterminate && formControl.value == null\"\n      [formControl]=\"formControl\"\n      [formlyAttributes]=\"field\"\n    /><span></span><span> {{ to.label }} </span>\n    <span *ngIf=\"to.required && to.hideRequiredMarker !== true\"><em class=\"m-l-4\" translate>(required)</em></span>\n    <button\n      *ngIf=\"!!to.description\"\n      class=\"btn-clean m-l-4 flex-item-middle\"\n      [popover]=\"to.description\"\n      placement=\"auto\"\n      outsideClick=\"true\"\n      type=\"button\"\n    >\n      <i c8yIcon=\"question-circle-o\" class=\"text-primary\"></i>\n  </button>\n  </label>\n",
                changeDetection: i0.ChangeDetectionStrategy.OnPush
            }]
    }], null, null); })();
        return FieldCheckbox;
    }(core.FieldType));
    FieldCheckbox.CONFIG = {
        types: [
            {
                name: 'checkbox',
                component: FieldCheckbox
            },
            {
                name: 'boolean',
                extends: 'checkbox'
            }
        ]
    };

    var FieldFile = /** @class */ (function (_super) {
        __extends(FieldFile, _super);
        function FieldFile() {
            var _this = _super.apply(this, __spreadArray([], __read(arguments))) || this;
            _this.dropAreaInputs = [
                'title',
                'message',
                'icon',
                'loadingMessage',
                'alwaysShow',
                'clickToOpen',
                'loading',
                'progress',
                'maxAllowedFiles',
                'files',
                'accept'
            ];
            return _this;
        }
        FieldFile.prototype.ngOnInit = function () {
            var _this = this;
            this.dropAreaInputs
                .filter(function (input) { return _this.to[input] !== undefined; })
                .forEach(function (input) { return (_this.dropArea[input] = _this.to[input]); });
        };
FieldFile.ɵfac = /*@__PURE__*/ function () { var ɵFieldFile_BaseFactory; return function FieldFile_Factory(t) { return (ɵFieldFile_BaseFactory || (ɵFieldFile_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(FieldFile)))(t || FieldFile); }; }();
FieldFile.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: FieldFile, selectors: [["c8y-field-file"]], viewQuery: function FieldFile_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c47, 7);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.dropArea = _t.first);
    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 5, vars: 4, consts: [["role", "group", 1, "form-group"], ["class", "legend form-block", 3, "id", 4, "ngIf"], [1, "drop-area-sm", 3, "formControl"], ["dropArea", ""], ["class", "form-control-feedback-message has-error", "role", "alert", 4, "ngIf"], [1, "legend", "form-block", 3, "id"], ["class", "btn-clean text-14 m-l-4", "placement", "right", "outsideClick", "true", "type", "button", 3, "popover", 4, "ngIf"], ["placement", "right", "outsideClick", "true", "type", "button", 1, "btn-clean", "text-14", "m-l-4", 3, "popover"], ["c8yIcon", "question-circle-o", 1, "text-primary"], ["role", "alert", 1, "form-control-feedback-message", "has-error"], [3, "field"]], template: function FieldFile_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵtemplate(1, FieldFile_div_1_Template, 3, 3, "div", 1);
        ɵngcc0.ɵɵelement(2, "c8y-drop-area", 2, 3);
        ɵngcc0.ɵɵtemplate(4, FieldFile_div_4_Template, 2, 1, "div", 4);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵattribute("aria-labelledby", ctx.id + "-fieldset");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.to.label || ctx.to.description);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("formControl", ctx.formControl);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showError && ctx.formControl.errors);
    } }, directives: [ɵngcc6.NgIf, DropAreaComponent, ɵngcc13.NgControlStatus, ɵngcc13.FormControlDirective, ɵngcc11.PopoverDirective, IconDirective, ɵngcc16.ɵc], encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FieldFile, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-field-file',
                template: "<div class=\"form-group\" role=\"group\" [attr.aria-labelledby]=\"id + '-fieldset'\">\n  <div id=\"{{ id + '-fieldset' }}\" class=\"legend form-block\" *ngIf=\"to.label || to.description\">\n    {{ to.label }}\n    <button\n      *ngIf=\"to.description\"\n      class=\"btn-clean text-14 m-l-4\"\n      [popover]=\"to.description\"\n      placement=\"right\"\n      outsideClick=\"true\"\n      type=\"button\"\n    >\n      <i c8yIcon=\"question-circle-o\" class=\"text-primary\"></i>\n    </button>\n  </div>\n\n  <c8y-drop-area #dropArea class=\"drop-area-sm\" [formControl]=\"formControl\"> </c8y-drop-area>\n\n  <div\n    class=\"form-control-feedback-message has-error\"\n    role=\"alert\"\n    *ngIf=\"showError && formControl.errors\"\n  >\n    <formly-validation-message [field]=\"field\"></formly-validation-message>\n  </div>\n</div>\n",
                changeDetection: i0.ChangeDetectionStrategy.OnPush
            }]
    }], null, { dropArea: [{
            type: i0.ViewChild,
            args: ['dropArea', { static: true }]
        }] }); })();
        return FieldFile;
    }(core.FieldType));
    FieldFile.CONFIG = {
        types: [
            {
                name: 'file',
                component: FieldFile
            }
        ]
    };
    FieldFile.propDecorators = {
        dropArea: [{ type: i0.ViewChild, args: ['dropArea', { static: true },] }]
    };

    var WrapperFormField = /** @class */ (function (_super) {
        __extends(WrapperFormField, _super);
        function WrapperFormField() {
            var _this = _super.apply(this, __spreadArray([], __read(arguments))) || this;
            _this.maxHelpBlockLength = 64;
            return _this;
        }
        WrapperFormField.prototype.ngOnInit = function () {
            this.showDescriptionAsPopup =
                this.field.type === 'radio' ||
                    (this.to.description && this.to.description.length > this.maxHelpBlockLength);
        };
WrapperFormField.ɵfac = /*@__PURE__*/ function () { var ɵWrapperFormField_BaseFactory; return function WrapperFormField_Factory(t) { return (ɵWrapperFormField_BaseFactory || (ɵWrapperFormField_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(WrapperFormField)))(t || WrapperFormField); }; }();
WrapperFormField.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: WrapperFormField, selectors: [["c8y-wrapper-form-field"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 6, vars: 5, consts: [[1, "form-group"], [4, "ngIf"], ["fieldComponent", ""], ["class", "c8y-messages", 4, "ngIf"], ["class", "help-block", 4, "ngIf"], ["class", "btn-clean m-l-4 flex-item-middle", "placement", "auto", "outsideClick", "true", "type", "button", 3, "popover", 4, "ngIf"], ["placement", "auto", "outsideClick", "true", "type", "button", 1, "btn-clean", "m-l-4", "flex-item-middle", 3, "popover"], ["c8yIcon", "question-circle-o", 1, "text-primary"], [1, "c8y-messages"], [1, "form-control-feedback-message", 3, "field"], [1, "help-block"]], template: function WrapperFormField_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵtemplate(1, WrapperFormField_label_1_Template, 3, 3, "label", 1);
        ɵngcc0.ɵɵtemplate(2, WrapperFormField_ng_template_2_Template, 0, 0, "ng-template", null, 2, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(4, WrapperFormField_div_4_Template, 2, 1, "div", 3);
        ɵngcc0.ɵɵtemplate(5, WrapperFormField_div_5_Template, 2, 1, "div", 4);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵclassProp("has-error", ctx.showError);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.to.label && ctx.to.hideLabel !== true);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showError);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.showError && ctx.to.description && !ctx.showDescriptionAsPopup);
    } }, directives: [ɵngcc6.NgIf, ɵngcc11.PopoverDirective, IconDirective, ɵngcc16.ɵc], encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(WrapperFormField, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-wrapper-form-field',
                template: "<div class=\"form-group\" [class.has-error]=\"showError\">\n  <label *ngIf=\"to.label && to.hideLabel !== true\" [attr.for]=\"id\">\n    {{ to.label }}\n    <button\n      *ngIf=\"to.description && showDescriptionAsPopup\"\n      class=\"btn-clean m-l-4 flex-item-middle\"\n      [popover]=\"to.description\"\n      placement=\"auto\"\n      outsideClick=\"true\"\n      type=\"button\"\n    >\n      <i c8yIcon=\"question-circle-o\" class=\"text-primary\"></i>\n    </button>\n  </label>\n\n  <ng-template #fieldComponent></ng-template>\n\n  <div *ngIf=\"showError\" class=\"c8y-messages\">\n    <formly-validation-message\n      class=\"form-control-feedback-message\"\n      [field]=\"field\"\n    ></formly-validation-message>\n  </div>\n\n  <div class=\"help-block\" *ngIf=\"!showError && to.description && !showDescriptionAsPopup\">\n    {{ to.description }}\n  </div>\n</div>\n",
                changeDetection: i0.ChangeDetectionStrategy.OnPush
            }]
    }], null, null); })();
        return WrapperFormField;
    }(core.FieldWrapper));
    WrapperFormField.CONFIG = {
        wrappers: [{ name: 'c8y-form-field', component: WrapperFormField }]
    };

    var FieldInput = /** @class */ (function (_super) {
        __extends(FieldInput, _super);
        function FieldInput() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Object.defineProperty(FieldInput.prototype, "type", {
            get: function () {
                return this.to.type || 'text';
            },
            enumerable: false,
            configurable: true
        });
FieldInput.ɵfac = /*@__PURE__*/ function () { var ɵFieldInput_BaseFactory; return function FieldInput_Factory(t) { return (ɵFieldInput_BaseFactory || (ɵFieldInput_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(FieldInput)))(t || FieldInput); }; }();
FieldInput.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: FieldInput, selectors: [["c8y-field-input"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 2, consts: [["class", "form-control", 3, "type", "formControl", "formlyAttributes", "required", "is-invalid", 4, "ngIf", "ngIfElse"], ["numberTmp", ""], [1, "form-control", 3, "type", "formControl", "formlyAttributes", "required"], ["type", "number", 1, "form-control", 3, "formControl", "formlyAttributes", "required"]], template: function FieldInput_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, FieldInput_input_0_Template, 1, 7, "input", 0);
        ɵngcc0.ɵɵtemplate(1, FieldInput_ng_template_1_Template, 1, 6, "ng-template", null, 1, ɵngcc0.ɵɵtemplateRefExtractor);
    } if (rf & 2) {
        var _r1 = ɵngcc0.ɵɵreference(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.type !== "number")("ngIfElse", _r1);
    } }, directives: [ɵngcc6.NgIf, ɵngcc13.DefaultValueAccessor, RequiredInputPlaceholderDirective, ɵngcc13.NgControlStatus, ɵngcc13.FormControlDirective, ɵngcc16.FormlyAttributes, ɵngcc13.RequiredValidator, ɵngcc13.NumberValueAccessor], encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FieldInput, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-field-input',
                template: "<input\n  *ngIf=\"type !== 'number'; else numberTmp\"\n  [type]=\"type\"\n  [formControl]=\"formControl\"\n  class=\"form-control\"\n  [formlyAttributes]=\"field\"\n  [required]=\"to.required\"\n  [attr.autocomplete]=\"to.autocomplete ? to.autocomplete : null\"\n  [class.is-invalid]=\"showError\"\n/>\n<ng-template #numberTmp>\n  <input\n    type=\"number\"\n    [formControl]=\"formControl\"\n    class=\"form-control\"\n    [formlyAttributes]=\"field\"\n    [required]=\"to.required\"\n    [attr.autocomplete]=\"to.autocomplete ? to.autocomplete : null\"\n    [class.is-invalid]=\"showError\"\n  />\n</ng-template>\n",
                changeDetection: i0.ChangeDetectionStrategy.OnPush
            }]
    }], null, null); })();
        return FieldInput;
    }(core.FieldType));
    FieldInput.CONFIG = {
        types: [
            {
                name: 'input',
                component: FieldInput,
                wrappers: ['c8y-form-field']
            },
            { name: 'string', extends: 'input' },
            {
                name: 'number',
                extends: 'input',
                defaultOptions: {
                    templateOptions: {
                        type: 'number'
                    }
                }
            },
            {
                name: 'integer',
                extends: 'input',
                defaultOptions: {
                    templateOptions: {
                        type: 'number'
                    }
                }
            }
        ]
    };

    var ObjectTypeComponent = /** @class */ (function (_super) {
        __extends(ObjectTypeComponent, _super);
        function ObjectTypeComponent() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
ObjectTypeComponent.ɵfac = /*@__PURE__*/ function () { var ɵObjectTypeComponent_BaseFactory; return function ObjectTypeComponent_Factory(t) { return (ɵObjectTypeComponent_BaseFactory || (ɵObjectTypeComponent_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(ObjectTypeComponent)))(t || ObjectTypeComponent); }; }();
ObjectTypeComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ObjectTypeComponent, selectors: [["c8y-object-type"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 5, vars: 5, consts: [["role", "group"], ["class", "legend form-block", 3, "id", 4, "ngIf"], [4, "ngIf"], ["class", "form-control-feedback-message has-error", "role", "alert", 4, "ngIf"], [3, "field", 4, "ngFor", "ngForOf"], [1, "legend", "form-block", 3, "id"], ["role", "alert", 1, "form-control-feedback-message", "has-error"], [3, "field"]], template: function ObjectTypeComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵtemplate(1, ObjectTypeComponent_div_1_Template, 2, 2, "div", 1);
        ɵngcc0.ɵɵtemplate(2, ObjectTypeComponent_p_2_Template, 2, 1, "p", 2);
        ɵngcc0.ɵɵtemplate(3, ObjectTypeComponent_div_3_Template, 2, 1, "div", 3);
        ɵngcc0.ɵɵtemplate(4, ObjectTypeComponent_formly_field_4_Template, 1, 1, "formly-field", 4);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵattribute("aria-labelledby", ctx.id + "-fieldset");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.to.label);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.to.description);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showError && ctx.formControl.errors);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.field.fieldGroup);
    } }, directives: [ɵngcc6.NgIf, ɵngcc6.NgForOf, ɵngcc16.ɵc, ɵngcc16.FormlyField], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ObjectTypeComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-object-type',
                template: "<div role=\"group\"\n  [attr.aria-labelledby]=\"id + '-fieldset'\" \n>\n  <div id=\"{{id + '-fieldset'}}\" \n    class=\"legend form-block\" \n    *ngIf=\"to.label\"\n  >{{ to.label }}</div>\n  <p *ngIf=\"to.description\">{{ to.description }}</p>\n  <div class=\"form-control-feedback-message has-error\" \n    role=\"alert\" \n    *ngIf=\"showError && formControl.errors\"\n  >\n    <formly-validation-message [field]=\"field\"></formly-validation-message>\n  </div>\n  <formly-field *ngFor=\"let f of field.fieldGroup\" [field]=\"f\"></formly-field>\n</div>\n"
            }]
    }], null, null); })();
        return ObjectTypeComponent;
    }(core.FieldType));
    ObjectTypeComponent.CONFIG = {
        types: [{ name: 'object', component: ObjectTypeComponent }]
    };

    var FieldRadio = /** @class */ (function (_super) {
        __extends(FieldRadio, _super);
        function FieldRadio() {
            var _this = _super.apply(this, __spreadArray([], __read(arguments))) || this;
            _this.defaultOptions = {
                templateOptions: {
                    options: [],
                    formCheck: 'custom' // 'custom' | 'custom-inline' | 'stacked' | 'inline'
                }
            };
            return _this;
        }
FieldRadio.ɵfac = /*@__PURE__*/ function () { var ɵFieldRadio_BaseFactory; return function FieldRadio_Factory(t) { return (ɵFieldRadio_BaseFactory || (ɵFieldRadio_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(FieldRadio)))(t || FieldRadio); }; }();
FieldRadio.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: FieldRadio, selectors: [["c8y-field-radio"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 6, consts: [["class", "c8y-radio", 3, "title", 4, "ngFor", "ngForOf"], [1, "c8y-radio", 3, "title"], ["type", "radio", 3, "id", "name", "value", "formControl", "formlyAttributes"]], template: function FieldRadio_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, FieldRadio_label_0_Template, 5, 9, "label", 0);
        ɵngcc0.ɵɵpipe(1, "async");
        ɵngcc0.ɵɵpipe(2, "formlySelectOptions");
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngForOf", ɵngcc0.ɵɵpipeBind1(1, 1, ɵngcc0.ɵɵpipeBind2(2, 3, ctx.to.options, ctx.field)));
    } }, directives: [ɵngcc6.NgForOf, ɵngcc13.RadioControlValueAccessor, ɵngcc13.DefaultValueAccessor, ɵngcc13.NgControlStatus, ɵngcc13.FormControlDirective, ɵngcc16.FormlyAttributes], pipes: [ɵngcc6.AsyncPipe, ɵngcc17.ɵa], encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FieldRadio, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-field-radio',
                template: "<label\n  *ngFor=\"let option of to.options | formlySelectOptions: field | async; let i = index\"\n  [title]=\"option.label\"\n  class=\"c8y-radio\"\n>\n  <input\n    type=\"radio\"\n    [id]=\"id + '_' + i\"\n    [name]=\"field.name || id\"\n    [attr.value]=\"option.value\"\n    [value]=\"option.value\"\n    [formControl]=\"formControl\"\n    [formlyAttributes]=\"field\"\n    [attr.disabled]=\"option.disabled || formControl.disabled ? true : null\"\n  />\n  <span></span>\n  <span>{{ option.label }}</span>\n</label>\n",
                changeDetection: i0.ChangeDetectionStrategy.OnPush
            }]
    }], null, null); })();
        return FieldRadio;
    }(core.FieldType));
    FieldRadio.CONFIG = {
        types: [
            {
                name: 'radio',
                component: FieldRadio,
                wrappers: ['c8y-form-field']
            }
        ]
    };

    var FIELD_TYPES = [
        FieldCheckbox,
        ArrayTypeComponent,
        WrapperFormField,
        FieldFile,
        FieldInput,
        FieldRadio,
        ObjectTypeComponent
    ];
    function fieldTypeFactory() {
        // tslint:disable-next-line:no-string-literal
        return FIELD_TYPES.map(function (type) { return type['CONFIG']; }).reduce(function (formlyConfig, typeConfig) { return (Object.assign(Object.assign({}, formlyConfig), { types: __spreadArray(__spreadArray([], __read(formlyConfig.types)), __read((typeConfig.types || []))), wrappers: __spreadArray(__spreadArray([], __read(formlyConfig.wrappers)), __read((typeConfig.wrappers || []))) })); }, { types: [], wrappers: [] });
    }
    /**
     * This module declares field type components for dynamic forms that match C8Y styleguide.
     *
     * @dynamic
     */
    var DynamicFormsUIThemeModule = /** @class */ (function () {
        function DynamicFormsUIThemeModule() {
        }
DynamicFormsUIThemeModule.ɵfac = function DynamicFormsUIThemeModule_Factory(t) { return new (t || DynamicFormsUIThemeModule)(); };
DynamicFormsUIThemeModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: DynamicFormsUIThemeModule });
DynamicFormsUIThemeModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [
        {
            provide: core.FORMLY_CONFIG,
            useFactory: fieldTypeFactory,
            multi: true
        }
    ], imports: [[
            common.CommonModule,
            CommonModule,
            popover.PopoverModule,
            forms.ReactiveFormsModule,
            C8yTranslateModule,
            DropAreaModule,
            FormsModule,
            core.FormlyModule,
            select.FormlySelectModule
        ]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DynamicFormsUIThemeModule, [{
        type: i0.NgModule,
        args: [{
                declarations: __spreadArray([], __read(FIELD_TYPES)),
                entryComponents: __spreadArray([], __read(FIELD_TYPES)),
                imports: [
                    common.CommonModule,
                    CommonModule,
                    popover.PopoverModule,
                    forms.ReactiveFormsModule,
                    C8yTranslateModule,
                    DropAreaModule,
                    FormsModule,
                    core.FormlyModule,
                    select.FormlySelectModule
                ],
                providers: [
                    {
                        provide: core.FORMLY_CONFIG,
                        useFactory: fieldTypeFactory,
                        multi: true
                    }
                ]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DynamicFormsUIThemeModule, { declarations: [FieldCheckbox, ArrayTypeComponent, WrapperFormField, FieldFile, FieldInput, FieldRadio, ObjectTypeComponent], imports: [ɵngcc6.CommonModule, CommonModule, ɵngcc11.PopoverModule, ɵngcc13.ReactiveFormsModule, C8yTranslateModule, DropAreaModule, FormsModule, ɵngcc16.FormlyModule, ɵngcc17.FormlySelectModule] }); })();
        return DynamicFormsUIThemeModule;
    }());

    var TranslateExtension = /** @class */ (function () {
        function TranslateExtension(translate, parser) {
            this.translate = translate;
            this.parser = parser;
        }
        TranslateExtension.prototype.prePopulate = function (field) {
            var _this = this;
            var to = field.templateOptions || {};
            if (!to.label || to._translated) {
                return;
            }
            to._translated = true;
            field.expressionProperties = Object.assign(Object.assign({}, (field.expressionProperties || {})), { 'templateOptions.label': to.label ? this.translate.stream(to.label) : to.label, 'templateOptions.description': to.description
                    ? this.translate.stream(to.description)
                    : to.description, 'templateOptions.placeholder': to.placeholder
                    ? rxjs.combineLatest([
                        this.translate.stream(to.placeholder),
                        this.translate.stream(gettext('e.g. {{ example }}'))
                    ]).pipe(operators.map(function (_a) {
                        var _b = __read(_a, 2), placeholder = _b[0], expression = _b[1];
                        return _this.parser.interpolate(expression, { example: placeholder });
                    }))
                    : to.placeholder, 'templateOptions.options': (rxjs.isObservable(to.options) ? to.options : rxjs.of(to.options)).pipe(operators.map(function (options) { return (options || []).map(function (option) { return (Object.assign(Object.assign({}, option), { label: _this.translate.instant(option.label) })); }); })) });
        };
        return TranslateExtension;
    }());
    function registerTranslateExtension(translate, parser) {
        return {
            extensions: [
                {
                    name: 'translate',
                    extension: new TranslateExtension(translate, parser)
                }
            ]
        };
    }

    var ɵ0$2 = registerTranslateExtension;
    var I18nModule = /** @class */ (function () {
        function I18nModule() {
        }
I18nModule.ɵfac = function I18nModule_Factory(t) { return new (t || I18nModule)(); };
I18nModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: I18nModule });
I18nModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [
        {
            provide: core.FORMLY_CONFIG,
            multi: true,
            useFactory: ɵ0$2,
            deps: [i1$1.TranslateService, i1$1.TranslateParser]
        }
    ], imports: [[core.FormlyModule, C8yTranslateModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(I18nModule, [{
        type: i0.NgModule,
        args: [{
                imports: [core.FormlyModule, C8yTranslateModule],
                providers: [
                    {
                        provide: core.FORMLY_CONFIG,
                        multi: true,
                        useFactory: ɵ0$2,
                        deps: [i1$1.TranslateService, i1$1.TranslateParser]
                    }
                ]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(I18nModule, { imports: [ɵngcc16.FormlyModule, C8yTranslateModule] }); })();
        return I18nModule;
    }());

    var C8yJSONSchema = /** @class */ (function (_super) {
        __extends(C8yJSONSchema, _super);
        function C8yJSONSchema() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        C8yJSONSchema.prototype.toFieldConfig = function (schema, options) {
            var config = _super.prototype.toFieldConfig.call(this, schema, this.c8yOptions((options || {}).map));
            if (Array.isArray(config.fieldGroup)) {
                config.fieldGroup.forEach(function (field) {
                    if (field.type === 'array' && field.templateOptions.required) {
                        field.fieldArray.templateOptions.required = true;
                    }
                });
            }
            return config;
        };
        C8yJSONSchema.prototype.c8yOptions = function (map) {
            return {
                map: function (mappedField, mapSource) {
                    var result = mappedField;
                    /** `const` type is represented as hidden input */
                    if (mapSource.const) {
                        result = Object.assign(Object.assign({}, result), { defaultValue: mapSource.const, templateOptions: Object.assign(Object.assign({}, result.templateOptions), { type: 'hidden' }) });
                    }
                    /** `writeOnly` field represented as password input */
                    if (mapSource.writeOnly) {
                        result = Object.assign(Object.assign({}, result), { templateOptions: Object.assign(Object.assign({}, result.templateOptions), { type: 'password', autocomplete: 'off' }) });
                    }
                    /** `examples` values used as placeholder */
                    if (mapSource.examples) {
                        result = Object.assign(Object.assign({}, result), { templateOptions: Object.assign(Object.assign({}, result.templateOptions), { placeholder: mapSource.examples.join(', ') }) });
                    }
                    /** `enum` field represented as radio button group */
                    if (mapSource.enum) {
                        result = Object.assign(Object.assign({}, result), { type: 'radio' });
                    }
                    /** fields with `contentMediaType` or `contentEncoding` are represented as file inputs */
                    if (mapSource.contentMediaType || mapSource.contentEncoding) {
                        result = Object.assign(Object.assign({}, result), { type: 'file', templateOptions: Object.assign(Object.assign({}, result.templateOptions), { accept: mapSource.contentMediaType, maxAllowedFiles: 1, contentEncoding: mapSource.contentEncoding }) });
                    }
                    return map ? map(result, mapSource) : result;
                }
            };
        };
C8yJSONSchema.ɵfac = /*@__PURE__*/ function () { var ɵC8yJSONSchema_BaseFactory; return function C8yJSONSchema_Factory(t) { return (ɵC8yJSONSchema_BaseFactory || (ɵC8yJSONSchema_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(C8yJSONSchema)))(t || C8yJSONSchema); }; }();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(C8yJSONSchema, [{
        type: i0.Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], null, null); })();
        return C8yJSONSchema;
    }(jsonSchema.FormlyJsonschema));
    C8yJSONSchema.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function C8yJSONSchema_Factory() { return new C8yJSONSchema(); }, token: C8yJSONSchema, providedIn: "root" });

    function c8yValidationConfigFactory(translate) {
        return {
            validationMessages: [
                {
                    name: 'required',
                    message: function () {
                        return translate.stream(gettext('This field is required.'));
                    }
                },
                {
                    name: 'pattern',
                    message: function (error, field) {
                        return translate.stream(gettext('Does not match pattern {{ requiredPattern }}'), error);
                    }
                }
            ]
        };
    }

    var ɵ0$1 = c8yValidationConfigFactory;
    var ValidationModule = /** @class */ (function () {
        function ValidationModule() {
        }
ValidationModule.ɵfac = function ValidationModule_Factory(t) { return new (t || ValidationModule)(); };
ValidationModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: ValidationModule });
ValidationModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [
        {
            provide: core.FORMLY_CONFIG,
            multi: true,
            useFactory: ɵ0$1,
            deps: [i1$1.TranslateService]
        }
    ], imports: [[C8yTranslateModule, core.FormlyModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ValidationModule, [{
        type: i0.NgModule,
        args: [{
                imports: [C8yTranslateModule, core.FormlyModule],
                providers: [
                    {
                        provide: core.FORMLY_CONFIG,
                        multi: true,
                        useFactory: ɵ0$1,
                        deps: [i1$1.TranslateService]
                    }
                ]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ValidationModule, { imports: [C8yTranslateModule, ɵngcc16.FormlyModule] }); })();
        return ValidationModule;
    }());

    var DynamicFormsModule = /** @class */ (function () {
        function DynamicFormsModule() {
        }
DynamicFormsModule.ɵfac = function DynamicFormsModule_Factory(t) { return new (t || DynamicFormsModule)(); };
DynamicFormsModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: DynamicFormsModule });
DynamicFormsModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [C8yJSONSchema], imports: [[
            common.CommonModule,
            forms.ReactiveFormsModule,
            I18nModule,
            ValidationModule,
            DynamicFormsUIThemeModule,
            core.FormlyModule.forRoot()
        ], ɵngcc16.FormlyModule, ɵngcc13.ReactiveFormsModule] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DynamicFormsModule, [{
        type: i0.NgModule,
        args: [{
                imports: [
                    common.CommonModule,
                    forms.ReactiveFormsModule,
                    I18nModule,
                    ValidationModule,
                    DynamicFormsUIThemeModule,
                    core.FormlyModule.forRoot()
                ],
                providers: [C8yJSONSchema],
                exports: [core.FormlyModule, forms.ReactiveFormsModule]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DynamicFormsModule, { imports: [ɵngcc6.CommonModule, ɵngcc13.ReactiveFormsModule, I18nModule, ValidationModule, DynamicFormsUIThemeModule, ɵngcc16.FormlyModule], exports: [ɵngcc16.FormlyModule, ɵngcc13.ReactiveFormsModule] }); })();
        return DynamicFormsModule;
    }());

    /**
     * C8y dynamic component.
     * ## Example:
     *
     * register component in HOOK in module:
     * ```typescript
     *  import { HOOK_COMPONENT } from '@c8y/ngx-components';
     *
     * @NgModule({
     *  ...,
     *  providers: [{
     *      provide: HOOK_COMPONENT,
     *      multi: true,
     *      useValue: [{
     *          id: 'test-component',
     *          label: 'My test component',
     *          description: 'this is test component',
     *          component: TestComponent
     *      }],
     *  ...
     *  }]
     *
     * ```
     * Showing dynamic component:
     * ```html
     * <c8y-dynamic-component [componentId]="'test-component'" [config]="config"></c8y-dynamic-component>
     * ```
     */
    var DynamicComponentComponent = /** @class */ (function () {
        /**
         * @ignore only DI
         */
        function DynamicComponentComponent(componentFactoryResolver, dynamicComponentService) {
            this.componentFactoryResolver = componentFactoryResolver;
            this.dynamicComponentService = dynamicComponentService;
            /**
             * DynamicComponents can have two modes, an edit (config) and an view (component) mode.
             * By default it is shown in the component mode.
             */
            this.mode = 'component';
            /**
             * Disable this to hide the error that is shown if the component was not found.
             */
            this.notFoundError = true;
            /**
             * @ignore
             */
            this.expandErrorDetails = false;
        }
        /**
         * Calls the dynamic component life cycle hook. Currently only
         * supporting onBeforeSave, a hook which is called before a config component
         * is saved.
         */
        DynamicComponentComponent.prototype.callLifeCycleHooks = function () {
            return this.callOnBeforeSaveHook();
        };
        /**
         * @ignore
         */
        DynamicComponentComponent.prototype.ngOnChanges = function () {
            return __awaiter(this, void 0, void 0, function () {
                var cmp;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.dynamicComponentService.getById(this.componentId)];
                        case 1:
                            cmp = _a.sent();
                            this.loadComponent(cmp);
                            return [2 /*return*/];
                    }
                });
            });
        };
        DynamicComponentComponent.prototype.loadComponent = function (dynamicComponent) {
            try {
                this.error = undefined;
                var componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.mode === 'component' ? dynamicComponent.component : dynamicComponent.configComponent);
                this.host.clear();
                this.componentRef = this.host.createComponent(componentFactory);
                this.componentRef.instance.config = this.config;
            }
            catch (ex) {
                this.error = ex;
            }
        };
        DynamicComponentComponent.prototype.callOnBeforeSaveHook = function () {
            if (!this.componentRef) {
                return rxjs.of(true);
            }
            var hook = this.componentRef.instance.onBeforeSave;
            if (hook) {
                var result = hook.call(this.componentRef.instance, this.config);
                if (lodashEs.isUndefined(result)) {
                    return rxjs.of(true);
                }
                return rxjs.isObservable(result) ? result : rxjs.of(result);
            }
            return rxjs.of(true);
        };
DynamicComponentComponent.ɵfac = function DynamicComponentComponent_Factory(t) { return new (t || DynamicComponentComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(DynamicComponentService)); };
DynamicComponentComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: DynamicComponentComponent, selectors: [["c8y-dynamic-component"]], viewQuery: function DynamicComponentComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c48, 7, i0.ViewContainerRef);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.host = _t.first);
    } }, inputs: { mode: "mode", notFoundError: "notFoundError", componentId: "componentId", config: "config" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 3, vars: 1, consts: [["host", ""], ["class", "alert alert-warning m-8", "role", "alert", 4, "ngIf"], ["role", "alert", 1, "alert", "alert-warning", "m-8"], [1, "message"], [1, "text-muted", "m-t-8"], [1, "btn", "btn-clean", 3, "click"], ["c8yIcon", "chevron-down"], ["translate", "", 4, "ngIf"], [3, "collapse", "isAnimated"], ["translate", ""]], template: function DynamicComponentComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, DynamicComponentComponent_ng_template_0_Template, 0, 0, "ng-template", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(2, DynamicComponentComponent_div_2_Template, 12, 9, "div", 1);
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.notFoundError && ctx.error);
    } }, directives: [ɵngcc6.NgIf, ɵngcc10.CollapseDirective, C8yTranslateDirective], pipes: [C8yTranslatePipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DynamicComponentComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-dynamic-component',
                template: "<ng-template #host></ng-template>\n\n<div class=\"alert alert-warning m-8\" role=\"alert\" *ngIf=\"notFoundError && error\">\n  <strong class=\"message\">\n    {{\n      'This widget cannot be rendered because the current application does not support the following component:'\n        | translate\n    }}\n    {{ componentId }}.\n  </strong>\n  <p class=\"text-muted m-t-8\">\n    <button class=\"btn btn-clean\" (click)=\"expandErrorDetails = !expandErrorDetails\">\n      <i c8yIcon=\"chevron-down\"></i>\n      <span *ngIf=\"!expandErrorDetails\" translate>Show details</span>\n      <span *ngIf=\"expandErrorDetails\" translate>Hide details</span>\n    </button>\n  </p>\n  <div [collapse]=\"!expandErrorDetails\" [isAnimated]=\"true\">\n    <pre>\n      {{ error }}\n    </pre>\n  </div>\n</div>\n"
            }]
    }], function () { return [{ type: ɵngcc0.ComponentFactoryResolver }, { type: DynamicComponentService }]; }, { mode: [{
            type: i0.Input
        }], notFoundError: [{
            type: i0.Input
        }], componentId: [{
            type: i0.Input
        }], config: [{
            type: i0.Input
        }], host: [{
            type: i0.ViewChild,
            args: ['host', { read: i0.ViewContainerRef, static: true }]
        }] }); })();
        return DynamicComponentComponent;
    }());
    DynamicComponentComponent.ctorParameters = function () { return [
        { type: i0.ComponentFactoryResolver },
        { type: DynamicComponentService }
    ]; };
    DynamicComponentComponent.propDecorators = {
        componentId: [{ type: i0.Input }],
        config: [{ type: i0.Input }],
        mode: [{ type: i0.Input }],
        notFoundError: [{ type: i0.Input }],
        host: [{ type: i0.ViewChild, args: ['host', { read: i0.ViewContainerRef, static: true },] }]
    };

    var DynamicComponentModule = /** @class */ (function () {
        function DynamicComponentModule() {
        }
DynamicComponentModule.ɵfac = function DynamicComponentModule_Factory(t) { return new (t || DynamicComponentModule)(); };
DynamicComponentModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: DynamicComponentModule });
DynamicComponentModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [DynamicComponentService, { provide: RESOLVING_COMPONENT_WAIT_TIME, useValue: 5000 }], imports: [[common.CommonModule, collapse.CollapseModule, i1.RouterModule.forChild([]), I18nModule$1]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DynamicComponentModule, [{
        type: i0.NgModule,
        args: [{
                declarations: [DynamicComponentComponent],
                imports: [common.CommonModule, collapse.CollapseModule, i1.RouterModule.forChild([]), I18nModule$1],
                exports: [DynamicComponentComponent],
                providers: [DynamicComponentService, { provide: RESOLVING_COMPONENT_WAIT_TIME, useValue: 5000 }]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DynamicComponentModule, { declarations: [DynamicComponentComponent], imports: [ɵngcc6.CommonModule, ɵngcc10.CollapseModule, ɵngcc1.RouterModule, I18nModule$1], exports: [DynamicComponentComponent] }); })();
        return DynamicComponentModule;
    }());

    var DashboardChildActionComponent = /** @class */ (function () {
        function DashboardChildActionComponent() {
        }
DashboardChildActionComponent.ɵfac = function DashboardChildActionComponent_Factory(t) { return new (t || DashboardChildActionComponent)(); };
DashboardChildActionComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: DashboardChildActionComponent, selectors: [["c8y-dashboard-child-action"]], viewQuery: function DashboardChildActionComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c0, 5);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.template = _t.first);
    } }, ngContentSelectors: _c1, decls: 2, vars: 0, consts: [["template", ""]], template: function DashboardChildActionComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵtemplate(0, DashboardChildActionComponent_ng_template_0_Template, 2, 0, "ng-template", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);
    } }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DashboardChildActionComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-dashboard-child-action',
                template: "<ng-template #template>\n  <li>\n    <ng-content></ng-content>\n  </li>\n</ng-template>\n"
            }]
    }], function () { return []; }, { template: [{
            type: i0.ViewChild,
            args: ['template', { static: false }]
        }] }); })();
        return DashboardChildActionComponent;
    }());
    DashboardChildActionComponent.propDecorators = {
        template: [{ type: i0.ViewChild, args: ['template', { static: false },] }]
    };

    var DashboardChildTitleComponent = /** @class */ (function () {
        function DashboardChildTitleComponent() {
        }
DashboardChildTitleComponent.ɵfac = function DashboardChildTitleComponent_Factory(t) { return new (t || DashboardChildTitleComponent)(); };
DashboardChildTitleComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: DashboardChildTitleComponent, selectors: [["c8y-dashboard-child-title"]], ngContentSelectors: _c1, decls: 2, vars: 0, consts: [[1, "card-title"]], template: function DashboardChildTitleComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵprojection(1);
        ɵngcc0.ɵɵelementEnd();
    } }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DashboardChildTitleComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-dashboard-child-title',
                template: "<div class=\"card-title\">\n  <ng-content></ng-content>\n</div>\n"
            }]
    }], function () { return []; }, null); })();
        return DashboardChildTitleComponent;
    }());

    var DashboardChildChange = /** @class */ (function () {
        function DashboardChildChange(childToChange) {
            this.MIN_WIDTH = 2;
            this.MIN_HEIGHT = 1;
            this.PIXEL_SIZE_THRESHOLD = 10;
            this.diffX = 0;
            this.diffY = 0;
            this.dashboard = childToChange.dashboard;
            this.children = childToChange.dashboard.children
                ? childToChange.dashboard.children.filter(function (child) { return childToChange !== child; })
                : [];
            this.child = childToChange;
        }
        Object.defineProperty(DashboardChildChange.prototype, "resize$", {
            get: function () {
                var _this = this;
                return this.child.dragSource.moved.pipe(operators.map(function (move) { return _this.getPixelSize(move); }), operators.tap(function (resizeDimension) { return _this.setPixelSize(resizeDimension); }), operators.map(function (resizeDimension) { return _this.getDimensionSize(resizeDimension); }), operators.distinctUntilChanged(function (prev, next) { return prev.width === next.width && prev.height === next.height; }), operators.map(function (dimension) { return _this.setDimension(dimension); }), this.arrangePipe());
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DashboardChildChange.prototype, "drag$", {
            get: function () {
                var _this = this;
                return this.child.dragSource.moved.pipe(operators.map(function (move) { return _this.getDimensionPosition(move); }), operators.filter(function (dimension) { return dimension.x >= 0 &&
                    dimension.x <= _this.dashboard.columns - _this.child.width &&
                    dimension.y >= 0; }), operators.distinctUntilChanged(function (prev, next) { return prev.x === next.x && prev.y === next.y; }), this.arrangePipe());
            },
            enumerable: false,
            configurable: true
        });
        DashboardChildChange.prototype.findFreeDimension = function () {
            var y = -1;
            var x = 0;
            var found = false;
            var _a = this.child, width = _a.width, height = _a.height;
            if (width > this.dashboard.columns) {
                throw new Error('The child does not fit on the current dashboard.');
            }
            do {
                x = 0;
                y++;
                while (x + width <= this.dashboard.columns) {
                    if (this.getCollided({ x: x, y: y, width: width, height: height }).length === 0) {
                        found = true;
                        break;
                    }
                    x++;
                }
            } while (!found);
            return { x: x, y: y, width: width, height: height };
        };
        DashboardChildChange.prototype.collapseUpAll = function () {
            return lodashEs.sortBy(__spreadArray([this.child], __read(this.children)), ['y']).forEach(function (w) {
                var ds = new DashboardChildChange(w);
                var newPosition = ds.collapseUp(w);
                ds.setDimension(newPosition);
            });
        };
        DashboardChildChange.prototype.arrangeAll = function (arrange) {
            var current = arrange.current, scan = arrange.scan, spacing = arrange.spacing, origin = arrange.origin;
            var collided = this.getCollided(current, lodashEs.sortBy(scan, ['y']));
            return collided.map(function (child) {
                var ds = new DashboardChildChange(child);
                ds.setDimension(Object.assign(Object.assign({}, child), { y: spacing }));
                return {
                    current: child,
                    scan: scan.filter(function (w) { return w !== child; }),
                    spacing: child.y + child.height,
                    origin: origin
                };
            });
        };
        DashboardChildChange.prototype.arrangePipe = function () {
            var _this = this;
            return rxjs.pipe(operators.map(function (dimension) { return ({
                current: dimension,
                scan: _this.children,
                spacing: dimension.y + dimension.height,
                origin: Object.assign({}, dimension)
            }); }), operators.expand(function (dimensions) { return _this.arrangeAll(dimensions); }), operators.map(function (_a) {
                var origin = _a.origin;
                return origin;
            }), operators.map(function (dimension) { return _this.setDimension(dimension, true); }), operators.tap(function () { return _this.collapseUpAll(); }));
        };
        DashboardChildChange.prototype.collapseUp = function (dimension) {
            var y = dimension.y;
            while (y > 0) {
                if (this.getCollided(Object.assign(Object.assign({}, dimension), { y: y - 1 })).length !== 0) {
                    break;
                }
                y--;
            }
            return Object.assign(Object.assign({}, dimension), { y: y });
        };
        DashboardChildChange.prototype.setDimension = function (dimension, notIfColliding) {
            if (notIfColliding === void 0) { notIfColliding = false; }
            if (notIfColliding && this.getCollided(dimension).length > 0) {
                return;
            }
            this.child.x = dimension.x;
            this.child.y = dimension.y;
            if (dimension.width >= this.MIN_WIDTH &&
                dimension.x + dimension.width <= this.dashboard.columns) {
                this.child.width = dimension.width;
            }
            else if (dimension.width < this.MIN_WIDTH) {
                dimension.width = this.MIN_WIDTH;
            }
            else {
                dimension.width = this.dashboard.columns - dimension.x;
            }
            if (dimension.height >= this.MIN_HEIGHT) {
                this.child.height = dimension.height;
            }
            else {
                dimension.height = this.MIN_WIDTH;
            }
            return dimension;
        };
        DashboardChildChange.prototype.setPixelSize = function (_a) {
            var width = _a.width, height = _a.height;
            if (width >= this.dashboard.columnSize * this.MIN_WIDTH - this.dashboard.gap) {
                this.child.pxWidth = width + this.PIXEL_SIZE_THRESHOLD;
            }
            if (height >= this.dashboard.rowSize * this.MIN_HEIGHT - this.dashboard.gap) {
                this.child.pxHeight = height + this.PIXEL_SIZE_THRESHOLD;
            }
        };
        DashboardChildChange.prototype.getPixelSize = function (moveEvent) {
            var draggedElement = this.child.element.nativeElement;
            if (!this.diffX) {
                var rect = draggedElement.getBoundingClientRect();
                this.diffX = rect.left;
                this.diffY = rect.top;
            }
            var _a = moveEvent.pointerPosition, x = _a.x, y = _a.y;
            var width = Math.round(x - this.diffX);
            var height = Math.round(y - this.diffY);
            return { width: width, height: height, pointer: { x: x, y: y } };
        };
        DashboardChildChange.prototype.getDimensionSize = function (resizePosition) {
            var _a = this.child, x = _a.x, y = _a.y;
            var ds = this.dashboard.dashboardRect;
            var column = this.dashboard.columnSize;
            var row = this.dashboard.rowSize + this.dashboard.gap;
            var width = Math.round((resizePosition.pointer.x - ds.left + this.dashboard.gap) / column) - x;
            var height = Math.round((resizePosition.pointer.y - ds.top + this.dashboard.gap) / row) - y;
            return { x: x, y: y, width: width, height: height };
        };
        DashboardChildChange.prototype.getDimensionPosition = function (moveEvent) {
            var draggedElement = moveEvent.source.element.nativeElement.nextElementSibling;
            if (!this.diffX) {
                var rect = draggedElement.getBoundingClientRect();
                this.diffX = moveEvent.pointerPosition.x - rect.left;
                this.diffY = moveEvent.pointerPosition.y - rect.top;
            }
            var left = moveEvent.pointerPosition.x - this.diffX;
            var top = moveEvent.pointerPosition.y - this.diffY;
            var _a = this.child, width = _a.width, height = _a.height;
            var ds = this.dashboard.dashboardRect;
            var column = this.dashboard.columnSize;
            var row = this.dashboard.rowSize + this.dashboard.gap / 2;
            var x = Math.round((left - ds.left) / column);
            var y = Math.round((top - ds.top) / row);
            return { x: x, y: y, width: width, height: height };
        };
        DashboardChildChange.prototype.doesCollide = function (a, b) {
            if (b.x === undefined) {
                return false;
            }
            return !(a.y + a.height - 1 < b.y ||
                a.y > b.y + b.height - 1 ||
                a.x + a.width - 1 < b.x ||
                a.x > b.x + b.width - 1);
        };
        DashboardChildChange.prototype.getCollided = function (currentDimension, dimensions) {
            var _this = this;
            if (dimensions === void 0) { dimensions = this.children; }
            var collided = dimensions.filter(function (dimension) { return _this.doesCollide(currentDimension, dimension); });
            return collided;
        };
        return DashboardChildChange;
    }());

    /**
     * Displays a CSS grid which is customizable by the customer. You can set
     * `c8y-dashboard-child`-components on it or position any element on it by
     * setting the grid CSS properties. On change (resize, or rearrange) the
     * component emits an change event.
     *
     * ## Example:
     *
     * ```html
     * <c8y-title>Hello from outlet</c8y-title>
     *
     * <c8y-action-bar-item [placement]="'right'">
     *   <button class="btn btn-link" (click)="addRandom()"><i c8yIcon="plus-circle"></i> Add random</button>
     * </c8y-action-bar-item>
     * <c8y-action-bar-item [placement]="'right'">
     *   <button class="btn btn-link" (click)="isFrozen = !isFrozen">
     *     <i [c8yIcon]="isFrozen ? 'lock' : 'unlock'"></i> Toggle freeze
     *   </button>
     * </c8y-action-bar-item>
     *
     * <c8y-dashboard (dashboardChange)="dashboardChange($event)">
     *   <c8y-dashboard-child
     *     [isFrozen]="isFrozen"
     *     title="dynamic"
     *     *ngFor="let widget of widgets"
     *     #current
     *   >
     *     x: {{ current.x }}<br />
     *     y: {{ current.y }}<br />
     *     width: {{ current.width }}<br />
     *     height: {{ current.height }}<br />
     *   </c8y-dashboard-child>
     *   <c8y-dashboard-child
     *     #cpWidget
     *     [isFrozen]="isFrozen"
     *     [x]="0"
     *     [y]="1"
     *     [width]="3"
     *     [height]="2"
     *     [data]="widget"
     *     [class]="'card card-dashboard panel-title-regular panel-content-branded panel-title-overlay'"
     *   >
     *     <c8y-dashboard-child-title>
     *       <span>World!</span>
     *     </c8y-dashboard-child-title>
     *     x: {{ cpWidget.x }}<br />
     *     y: {{ cpWidget.y }}<br />
     *     width: {{ cpWidget.width }}<br />
     *     height: {{ cpWidget.height }}<br />
     *   </c8y-dashboard-child>
     *   <c8y-dashboard-child
     *     #cpWidget2
     *     [isFrozen]="isFrozen"
     *     [x]="8"
     *     [y]="1"
     *     [width]="4"
     *     [height]="4"
     *     [class]="'card card-dashboard panel-content-dark'"
     *   >
     *     <c8y-dashboard-child-title>
     *       <span>Hello!</span>
     *     </c8y-dashboard-child-title>
     *     <c8y-dashboard-child-action>
     *       <a href="" (click)="cpWidget2.isFrozen = !cpWidget2.isFrozen; (false)">
     *         <i [c8yIcon]="cpWidget2.isFrozen ? 'lock' : 'unlock'"></i> Toggle freeze
     *       </a>
     *     </c8y-dashboard-child-action>
     *     x: {{ cpWidget2.x }}<br />
     *     y: {{ cpWidget2.y }}<br />
     *     width: {{ cpWidget2.width }}<br />
     *     height: {{ cpWidget2.height }}<br />
     *   </c8y-dashboard-child>
     *
     *   <c8y-dashboard-child
     *     #cpWidget3
     *     [isFrozen]="isFrozen"
     *     [x]="0"
     *     [y]="3"
     *     [width]="4"
     *     [height]="4"
     *     [class]="'card-dashboard panel-content-transparent'"
     *   >
     *     <c8y-dashboard-child-title *ngIf="showTitle">
     *       <span>Transparent!</span>
     *     </c8y-dashboard-child-title>
     *     <c8y-dashboard-child-action>
     *       <a href="" (click)="showTitle = !showTitle; (false)">
     *         <i [c8yIcon]="'heading'"></i> Hide/show title
     *       </a>
     *     </c8y-dashboard-child-action>
     *     <c8y-dashboard-child-action>
     *       <a href="" (click)="cpWidget3.isFrozen = !cpWidget3.isFrozen; (false)">
     *         <i [c8yIcon]="cpWidget3.isFrozen ? 'lock' : 'unlock'"></i> Toggle freeze
     *       </a>
     *     </c8y-dashboard-child-action>
     *     x: {{ cpWidget3.x }}<br />
     *     y: {{ cpWidget3.y }}<br />
     *     width: {{ cpWidget3.width }}<br />
     *     height: {{ cpWidget3.height }}<br />
     *   </c8y-dashboard-child>
     * </c8y-dashboard>
     * ```
     */
    var DashboardComponent = /** @class */ (function () {
        function DashboardComponent(element, sanitizer) {
            this.element = element;
            this.sanitizer = sanitizer;
            /**
             * All children in that dashboard.
             */
            this.children = [];
            /**
             * The amount of columns on that dashboard.
             */
            this.columns = 12;
            /**
             * The spacing between each children in pixel.
             */
            this.gap = 12;
            /**
             * The amount of rows to dusplay. Set to auto to
             * auto extend the rows.
             */
            this.rows = 'auto';
            /**
             * An event fired if the dashboard was changed.
             */
            this.dashboardChange = new i0.EventEmitter();
            this.lastRow = 1;
            this.DEFAULT_ROW_SIZE = 68;
        }
        Object.defineProperty(DashboardComponent.prototype, "columnSize", {
            /**
             * The current column size.
             */
            get: function () {
                return this.dashboardRect.width / this.columns;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DashboardComponent.prototype, "rowSize", {
            /**
             * The current row size.
             */
            get: function () {
                return this.rows === 'auto' ? this.DEFAULT_ROW_SIZE : this.calculateRowSize();
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DashboardComponent.prototype, "inlineStyle", {
            /**
             * Returns all positioning styles. Nasty workaround for that issue:
             * https://github.com/angular/angular/issues/9343
             */
            get: function () {
                return this.sanitizer.bypassSecurityTrustStyle("\n        -ms-grid-columns: (1fr)[" + this.columns + "];\n        grid-template-columns: repeat(" + this.columns + ", 1fr);\n        " + (this.rows !== 'auto' ? "grid-template-rows: repeat(" + this.rows + ", 1fr);" : '') + "\n        grid-auto-rows: " + (this.rowSize + this.gap) + "px;\n        -ms-grid-rows: (" + (this.rowSize + this.gap) + "px)[" + (this.rows === 'auto' ? this.lastRow : this.rows) + "];\n        margin: -" + this.gap + "px -" + this.gap + "px 0;\n      ");
            },
            enumerable: false,
            configurable: true
        });
        DashboardComponent.prototype.ngAfterContentInit = function () {
            this.onResize();
        };
        DashboardComponent.prototype.onResize = function () {
            this.updateRectSize();
        };
        /**
         * Updates the current rect size of the dashboard.
         */
        DashboardComponent.prototype.updateRectSize = function () {
            var ele = this.element.nativeElement;
            this.dashboardRect = ele.getBoundingClientRect();
        };
        DashboardComponent.prototype.emitChange = function (widget) {
            this.dashboardChange.emit({ source: widget, children: this.children });
        };
        DashboardComponent.prototype.calculateRowSize = function () {
            return this.dashboardRect.height / this.rows;
        };
DashboardComponent.ɵfac = function DashboardComponent_Factory(t) { return new (t || DashboardComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc18.DomSanitizer)); };
DashboardComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: DashboardComponent, selectors: [["c8y-dashboard"]], hostAttrs: [1, "c8y-grid-dashboard", "dashboard-grid"], hostVars: 1, hostBindings: function DashboardComponent_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("resize", function DashboardComponent_resize_HostBindingHandler() { return ctx.onResize(); }, false, ɵngcc0.ɵɵresolveWindow);
    } if (rf & 2) {
        ɵngcc0.ɵɵattribute("style", ctx.inlineStyle, ɵngcc0.ɵɵsanitizeStyle);
    } }, inputs: { columns: "columns", gap: "gap", rows: "rows" }, outputs: { dashboardChange: "dashboardChange" }, ngContentSelectors: _c1, decls: 1, vars: 0, template: function DashboardComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DashboardComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-dashboard',
                template: "<ng-content></ng-content>\n",
                host: {
                    class: 'c8y-grid-dashboard dashboard-grid'
                },
                changeDetection: i0.ChangeDetectionStrategy.OnPush
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc18.DomSanitizer }]; }, { columns: [{
            type: i0.Input
        }], gap: [{
            type: i0.Input
        }], rows: [{
            type: i0.Input
        }], dashboardChange: [{
            type: i0.Output
        }], inlineStyle: [{
            type: i0.HostBinding,
            args: ['attr.style']
        }], onResize: [{
            type: i0.HostListener,
            args: ['window:resize']
        }] }); })();
        return DashboardComponent;
    }());
    DashboardComponent.ctorParameters = function () { return [
        { type: i0.ElementRef },
        { type: platformBrowser.DomSanitizer }
    ]; };
    DashboardComponent.propDecorators = {
        columns: [{ type: i0.Input }],
        gap: [{ type: i0.Input }],
        rows: [{ type: i0.Input }],
        dashboardChange: [{ type: i0.Output }],
        inlineStyle: [{ type: i0.HostBinding, args: ['attr.style',] }],
        onResize: [{ type: i0.HostListener, args: ['window:resize',] }]
    };

    /**
     * A dashboard child allows to position elements
     * correctly on a grid. The user can then resize and
     * rearrange the elements, as long as they are not `frozen`.
     *
     * By setting `c8y-dashboard-child-actions` and
     * `c8y-dashboard-child-title` on the element you can add
     * custom actions or a custom title to the current child.
     *
     * By adding the correct branded classes, you can define
     * the look and feel of the child. By default it is displayed
     * as a card.
     *
     * Example:
     *
     * ```html
     *   <c8y-dashboard-child
     *     #cpWidget3
     *     [isFrozen]="isFrozen"
     *     [x]="0"
     *     [y]="3"
     *     [width]="4"
     *     [height]="4"
     *     [class]="'card-dashboard panel-content-transparent'"
     *   >
     *     <c8y-dashboard-child-title *ngIf="showTitle">
     *       <span>Transparent!</span>
     *     </c8y-dashboard-child-title>
     *     <c8y-dashboard-child-action>
     *       <a href="" (click)="showTitle = !showTitle; (false)">
     *         <i [c8yIcon]="'heading'"></i> Hide/show title
     *       </a>
     *     </c8y-dashboard-child-action>
     *     <c8y-dashboard-child-action>
     *       <a href="" (click)="cpWidget3.isFrozen = !cpWidget3.isFrozen; (false)">
     *         <i [c8yIcon]="cpWidget3.isFrozen ? 'lock' : 'unlock'"></i> Toggle freeze
     *       </a>
     *     </c8y-dashboard-child-action>
     *     x: {{ cpWidget3.x }}<br />
     *     y: {{ cpWidget3.y }}<br />
     *     width: {{ cpWidget3.width }}<br />
     *     height: {{ cpWidget3.height }}<br />
     *   </c8y-dashboard-child>
     * ```
     */
    var DashboardChildComponent = /** @class */ (function () {
        function DashboardChildComponent(dashboard, sanitizer, element) {
            this.dashboard = dashboard;
            this.sanitizer = sanitizer;
            this.element = element;
            this.actions = [];
            this.isResize = false;
            this.isDragging = false;
            this.klasses = {};
            this._pxWidth = '100%';
            this._pxHeight = '100%';
            /**
             * The width of the component in grid-columns.
             */
            this.width = 1;
            /**
             * The height of the component in grid-rows.
             */
            this.height = 1;
            /**
             * The margin of the child in pixel.
             */
            this.margin = 12;
            /**
             * If a dashboard is frozen, all children cannot be moved
             * or resized.
             */
            this.isFrozen = false;
            /**
             * The child content is initialized, as soon it is scrolled into viewport
             */
            this.useIntersection = false;
            /**
             * An event fired if a child change is started (dragging or resizing)
             */
            this.changeStart = new i0.EventEmitter();
            /**
             * An event fired if a child change is ended
             */
            this.changeEnd = new i0.EventEmitter();
            /**
             * All classes added to this child
             */
            this.class = {};
            /**
             * An indicator if the child is intersected (that mean visible for the user)
             */
            this.intersected = false;
        }
        Object.defineProperty(DashboardChildComponent.prototype, "pxWidth", {
            /**
             * Updates the pixel width of the child (used for resizing)
             */
            set: function (value) {
                this._pxWidth = value + "px";
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DashboardChildComponent.prototype, "pxHeight", {
            /**
             * Updates the pixel height of the child (used for resizing)
             */
            set: function (value) {
                this._pxHeight = value + "px";
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DashboardChildComponent.prototype, "inlineStyle", {
            /**
             * nasty workaround for that issue:
             * https://github.com/angular/angular/issues/9343
             */
            get: function () {
                return this.sanitizer.bypassSecurityTrustStyle("\n    grid-column-start: " + (this.x + 1) + ";\n    grid-row-start: " + (this.y + 1) + ";\n    grid-column-end: span " + this.width + ";\n    grid-row-end: span " + this.height + ";\n    display: block;\n    margin: " + (this.margin || 12) + "px;\n    order: " + this.getOrder() + ";\n    ");
            },
            enumerable: false,
            configurable: true
        });
        DashboardChildComponent.prototype.ngOnChanges = function () {
            this.klasses = Object.assign({ card: true, 'card-dashboard': true, disabled: this.isFrozen, 'on-resize': this.isResize }, this.class);
        };
        DashboardChildComponent.prototype.ngOnInit = function () {
            var _this = this;
            if (this.x === undefined || this.y === undefined) {
                setTimeout(function () { return _this.setDynamicDimension(); });
            }
            if (this.useIntersection && 'IntersectionObserver' in window) {
                var intersectionObserver_1 = new IntersectionObserver(function (event) { return (_this.intersected = _this.childInView(event[0], intersectionObserver_1)); });
                intersectionObserver_1.observe(this.element.nativeElement);
            }
            else {
                this.intersected = true;
            }
        };
        DashboardChildComponent.prototype.ngAfterViewInit = function () {
            this.dashboard.children.push(this);
        };
        DashboardChildComponent.prototype.setDynamicDimension = function () {
            var ds = new DashboardChildChange(this);
            var _a = ds.findFreeDimension(), x = _a.x, y = _a.y;
            this.x = x;
            this.y = y;
            this.dashboard.emitChange(this);
        };
        DashboardChildComponent.prototype.resizeStarted = function ($event) {
            this.isResize = true;
            this.dashboard.updateRectSize();
            this.dragSource = $event.source;
            var positioning = new DashboardChildChange(this);
            this.changeSubscription = positioning.resize$.subscribe();
            this.changeStart.emit(this);
            this.ngOnChanges();
        };
        DashboardChildComponent.prototype.dragStarted = function ($event) {
            this.isDragging = true;
            this.dashboard.updateRectSize();
            this.dragSource = $event.source;
            var positioning = new DashboardChildChange(this);
            this.changeSubscription = positioning.drag$.subscribe();
            this.changeStart.emit(this);
        };
        DashboardChildComponent.prototype.reset = function ($event) {
            this.isResize = false;
            this.isDragging = false;
            this._pxWidth = '100%';
            this._pxHeight = '100%';
            this.ngOnChanges();
            if ($event) {
                $event.source.reset();
            }
            if (this.changeSubscription) {
                this.changeSubscription.unsubscribe();
                this.dashboard.emitChange(this);
                this.changeEnd.emit(this);
            }
        };
        DashboardChildComponent.prototype.ngOnDestroy = function () {
            if (this.changeSubscription) {
                this.changeSubscription.unsubscribe();
            }
            this.removeSelfFromDashboard();
        };
        DashboardChildComponent.prototype.removeSelfFromDashboard = function () {
            var i = this.dashboard.children.indexOf(this);
            if (i >= 0) {
                this.dashboard.children.splice(i, 1);
            }
        };
        DashboardChildComponent.prototype.getOrder = function () {
            return "" + Math.round((this.y + (this.x + 1) / 100) * 100);
        };
        DashboardChildComponent.prototype.childInView = function (event, observer) {
            if (event.isIntersecting) {
                observer.unobserve(event.target);
                return true;
            }
            return false;
        };
DashboardChildComponent.ɵfac = function DashboardChildComponent_Factory(t) { return new (t || DashboardChildComponent)(ɵngcc0.ɵɵdirectiveInject(DashboardComponent), ɵngcc0.ɵɵdirectiveInject(ɵngcc18.DomSanitizer), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
DashboardChildComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: DashboardChildComponent, selectors: [["c8y-dashboard-child"]], contentQueries: function DashboardChildComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, DashboardChildActionComponent, 4);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.actions = _t);
    } }, hostAttrs: [1, "dashboard-grid-child"], hostVars: 1, hostBindings: function DashboardChildComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵattribute("style", ctx.inlineStyle, ɵngcc0.ɵɵsanitizeStyle);
    } }, inputs: { width: "width", height: "height", margin: "margin", isFrozen: "isFrozen", useIntersection: "useIntersection", class: "class", x: "x", y: "y", data: "data" }, outputs: { changeStart: "changeStart", changeEnd: "changeEnd" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c52, decls: 11, vars: 14, consts: [["cdkDropList", ""], ["class", "card-placeholder", 4, "ngIf"], ["cdkDrag", "", 3, "ngClass", "ngStyle", "cdkDragDisabled", "cdkDragStarted", "cdkDragEnded"], ["cdkDragHandle", "", 1, "card-header-actions", "card-header-grid", 3, "ngClass"], ["class", "header-actions", 4, "ngIf"], [1, "card-inner-scroll"], ["class", "resize-handle", "cdkDrag", "", 3, "cdkDragDisabled", "cdkDragStarted", "cdkDragEnded", 4, "ngIf"], ["class", "resize-icon", 4, "ngIf"], ["class", "card-placeholder", 4, "cdkDragPlaceholder"], [1, "card-placeholder"], [1, "header-actions"], ["dropdown", "", "container", "body", "placement", "bottom right", 1, "optionsBtn", "dropdown"], ["href", "", "dropdownToggle", "", 1, "btnIcon", "c8y-dropdown", 3, "title", "click"], [3, "c8yIcon"], ["class", "dropdown-menu dropdown-menu-right", "style", "right:-1px;", 4, "dropdownMenu"], [1, "dropdown-menu", "dropdown-menu-right", 2, "right", "-1px"], [4, "ngFor", "ngForOf"], [4, "ngTemplateOutlet"], ["cdkDrag", "", 1, "resize-handle", 3, "cdkDragDisabled", "cdkDragStarted", "cdkDragEnded"], [1, "resize-icon"]], template: function DashboardChildComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c49);
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵtemplate(1, DashboardChildComponent_div_1_Template, 1, 0, "div", 1);
        ɵngcc0.ɵɵelementStart(2, "div", 2);
        ɵngcc0.ɵɵlistener("cdkDragStarted", function DashboardChildComponent_Template_div_cdkDragStarted_2_listener($event) { return ctx.dragStarted($event); })("cdkDragEnded", function DashboardChildComponent_Template_div_cdkDragEnded_2_listener($event) { return ctx.reset($event); });
        ɵngcc0.ɵɵelementStart(3, "div", 3);
        ɵngcc0.ɵɵprojection(4);
        ɵngcc0.ɵɵtemplate(5, DashboardChildComponent_div_5_Template, 6, 4, "div", 4);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(6, "div", 5);
        ɵngcc0.ɵɵprojection(7, 1);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(8, DashboardChildComponent_div_8_Template, 1, 1, "div", 6);
        ɵngcc0.ɵɵtemplate(9, DashboardChildComponent_div_9_Template, 1, 0, "div", 7);
        ɵngcc0.ɵɵtemplate(10, DashboardChildComponent_div_10_Template, 1, 0, "div", 8);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isResize);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngClass", ctx.klasses)("ngStyle", ɵngcc0.ɵɵpureFunction2(8, _c50, ctx._pxWidth, ctx._pxHeight))("cdkDragDisabled", ctx.isFrozen);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction2(11, _c51, !ctx.isFrozen, !ctx.isFrozen));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.isFrozen && ctx.actions.length > 0);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.isFrozen && !ctx.isDragging);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.isFrozen && !ctx.isDragging);
    } }, directives: [ɵngcc19.CdkDropList, ɵngcc6.NgIf, ɵngcc19.CdkDrag, ɵngcc6.NgClass, ɵngcc6.NgStyle, ɵngcc19.CdkDragHandle, ɵngcc19.CdkDragPlaceholder, ɵngcc9.BsDropdownDirective, ɵngcc9.BsDropdownToggleDirective, IconDirective, ɵngcc9.BsDropdownMenuDirective, ɵngcc6.NgForOf, ɵngcc6.NgTemplateOutlet], pipes: [C8yTranslatePipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DashboardChildComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-dashboard-child',
                template: "<div cdkDropList>\n  <div *ngIf=\"isResize\" class=\"card-placeholder\"></div>\n  <div\n    [ngClass]=\"klasses\"\n    cdkDrag\n    [ngStyle]=\"{ width: _pxWidth, height: _pxHeight }\"\n    (cdkDragStarted)=\"dragStarted($event)\"\n    (cdkDragEnded)=\"reset($event)\"\n    [cdkDragDisabled]=\"isFrozen\"\n  >\n    <div\n      class=\"card-header-actions card-header-grid\"\n      [ngClass]=\"{ 'drag-handle': !isFrozen, draggableCursor: !isFrozen }\"\n      cdkDragHandle\n    >\n      <ng-content select=\"c8y-dashboard-child-title\"></ng-content>\n      <div class=\"header-actions\" *ngIf=\"!isFrozen && actions.length > 0\">\n        <div class=\"optionsBtn dropdown\" dropdown container=\"body\" placement=\"bottom right\">\n          <a\n            title=\"{{ 'Settings' | translate }}\"\n            href=\"\"\n            class=\"btnIcon c8y-dropdown\"\n            (click)=\"(false)\"\n            dropdownToggle\n          >\n            <i [c8yIcon]=\"'cog'\"></i>\n          </a>\n          <ul\n            class=\"dropdown-menu dropdown-menu-right\"\n            style=\"right:-1px;\"\n            *dropdownMenu\n          >\n            <ng-container *ngFor=\"let action of actions\">\n              <ng-container *ngTemplateOutlet=\"action.template\"></ng-container>\n            </ng-container>\n          </ul>\n        </div>\n      </div>\n    </div>\n    <div class=\"card-inner-scroll\">\n      <ng-content></ng-content>\n    </div>\n    <div\n      *ngIf=\"!isFrozen && !isDragging\"\n      class=\"resize-handle\"\n      cdkDrag\n      [cdkDragDisabled]=\"isFrozen\"\n      (cdkDragStarted)=\"resizeStarted($event)\"\n      (cdkDragEnded)=\"reset($event)\"\n    ></div>\n    <div class=\"resize-icon\" *ngIf=\"!isFrozen && !isDragging\"></div>\n\n    <div *cdkDragPlaceholder class=\"card-placeholder\"></div>\n  </div>\n</div>\n",
                host: {
                    class: 'dashboard-grid-child'
                }
            }]
    }], function () { return [{ type: DashboardComponent }, { type: ɵngcc18.DomSanitizer }, { type: ɵngcc0.ElementRef }]; }, { actions: [{
            type: i0.ContentChildren,
            args: [DashboardChildActionComponent]
        }], width: [{
            type: i0.Input
        }], height: [{
            type: i0.Input
        }], margin: [{
            type: i0.Input
        }], isFrozen: [{
            type: i0.Input
        }], useIntersection: [{
            type: i0.Input
        }], changeStart: [{
            type: i0.Output
        }], changeEnd: [{
            type: i0.Output
        }], class: [{
            type: i0.Input
        }], inlineStyle: [{
            type: i0.HostBinding,
            args: ['attr.style']
        }], x: [{
            type: i0.Input
        }], y: [{
            type: i0.Input
        }], data: [{
            type: i0.Input
        }] }); })();
        return DashboardChildComponent;
    }());
    DashboardChildComponent.ctorParameters = function () { return [
        { type: DashboardComponent },
        { type: platformBrowser.DomSanitizer },
        { type: i0.ElementRef }
    ]; };
    DashboardChildComponent.propDecorators = {
        actions: [{ type: i0.ContentChildren, args: [DashboardChildActionComponent,] }],
        x: [{ type: i0.Input }],
        y: [{ type: i0.Input }],
        width: [{ type: i0.Input }],
        height: [{ type: i0.Input }],
        data: [{ type: i0.Input }],
        margin: [{ type: i0.Input }],
        isFrozen: [{ type: i0.Input }],
        useIntersection: [{ type: i0.Input }],
        changeStart: [{ type: i0.Output }],
        changeEnd: [{ type: i0.Output }],
        class: [{ type: i0.Input }],
        inlineStyle: [{ type: i0.HostBinding, args: ['attr.style',] }]
    };

    var WidgetsDashboardComponent = /** @class */ (function () {
        function WidgetsDashboardComponent() {
            this.contextDashboard = { updateTarget: true };
            this.settings = {
                isFrozen: false,
                isDisabled: false,
                widgetMargin: 12,
                translateWidgetTitle: false,
                defaultHeight: 4,
                defaultWidth: 4,
                allowFullscreen: false,
                canDelete: true,
                isLoading: false
            };
            this.onAddWidget = new i0.EventEmitter();
            this.onEditWidget = new i0.EventEmitter();
            this.onDeleteWidget = new i0.EventEmitter();
            this.onChangeDashboard = new i0.EventEmitter();
            this.onEditDashboard = new i0.EventEmitter();
            this.onDeleteDashboard = new i0.EventEmitter();
            this.onFreeze = new i0.EventEmitter();
            this.onChangeStart = new i0.EventEmitter();
            this.onChangeEnd = new i0.EventEmitter();
        }
        Object.defineProperty(WidgetsDashboardComponent.prototype, "_settings", {
            set: function (settings) {
                this.settings = Object.assign(Object.assign({}, this.settings), settings);
            },
            enumerable: false,
            configurable: true
        });
        WidgetsDashboardComponent.prototype.toggleFullscreen = function () {
            var elem = document.body;
            var doc = document;
            if (!this.fullScreen()) {
                if (elem.requestFullscreen) {
                    elem.requestFullscreen();
                }
                else if (elem.msRequestFullscreen) {
                    elem.msRequestFullscreen();
                }
                else if (elem.mozRequestFullScreen) {
                    elem.mozRequestFullScreen();
                }
                else if (elem.webkitRequestFullscreen) {
                    elem.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);
                }
            }
            else if (doc.exitFullscreen) {
                doc.exitFullscreen();
            }
            else if (doc.msExitFullscreen) {
                doc.msExitFullscreen();
            }
            else if (doc.mozCancelFullScreen) {
                doc.mozCancelFullScreen();
            }
            else if (doc.webkitExitFullscreen) {
                doc.webkitExitFullscreen();
            }
        };
        WidgetsDashboardComponent.prototype.fullScreen = function () {
            var doc = document;
            return !!(doc.fullscreenElement ||
                doc.mozFullScreenElement ||
                doc.webkitFullscreenElement ||
                doc.msFullscreenElement);
        };
WidgetsDashboardComponent.ɵfac = function WidgetsDashboardComponent_Factory(t) { return new (t || WidgetsDashboardComponent)(); };
WidgetsDashboardComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: WidgetsDashboardComponent, selectors: [["c8y-widgets-dashboard"]], hostAttrs: [1, "dashboard", "c8y-grid-dashboard", 2, "display", "block"], inputs: { contextDashboard: "contextDashboard", _settings: ["settings", "_settings"], widgets: "widgets", context: "context", breadcrumb: "breadcrumb" }, outputs: { onAddWidget: "onAddWidget", onEditWidget: "onEditWidget", onDeleteWidget: "onDeleteWidget", onChangeDashboard: "onChangeDashboard", onEditDashboard: "onEditDashboard", onDeleteDashboard: "onDeleteDashboard", onFreeze: "onFreeze", onChangeStart: "onChangeStart", onChangeEnd: "onChangeEnd" }, decls: 10, vars: 10, consts: [[4, "ngIf"], [3, "placement", 4, "ngIf"], ["itemClass", "navbar-form", 3, "placement", 4, "ngIf"], [3, "placement", "priority", 4, "ngIf"], ["class", "c8y-empty-state text-center", 4, "ngIf"], ["class", "col-xs-12 text-center", 4, "ngIf"], [3, "dashboardChange", 4, "ngIf"], [3, "icon", "label", "path"], [3, "placement"], [1, "btn", "btn-link", 3, "title", "disabled", "click"], ["c8yIcon", "plus-circle"], ["c8yIcon", "pencil"], [1, "btn", "btn-link", 3, "title", "click"], [3, "c8yIcon"], ["itemClass", "navbar-form", 3, "placement"], ["uib-btn-checkbox", "", 1, "btn", "btn-default", 3, "title", "ngClass", "disabled", "click"], [3, "placement", "priority"], [3, "title", "disabled", "click"], ["c8yIcon", "trash"], ["translate", "", 1, "m-l-4"], [1, "c8y-empty-state", "text-center"], [1, "c8y-icon", "c8y-icon-device", "c8y-icon-duocolor"], ["translate", ""], ["translate", "", 1, "btn", "btn-primary", 3, "title", "disabled", "click"], ["c8y-guide-docs", ""], ["c8y-guide-href", "users-guide/cockpit/#dashboards"], [1, "col-xs-12", "text-center"], [1, "spinner", "p-relative"], [1, "rect1"], [1, "rect2"], [1, "rect3"], [1, "rect4"], [1, "rect5"], [3, "dashboardChange"], ["dashboard", ""], [3, "x", "y", "width", "height", "margin", "isFrozen", "class", "data", "useIntersection", "changeStart", "changeEnd", 4, "ngFor", "ngForOf"], [3, "x", "y", "width", "height", "margin", "isFrozen", "data", "useIntersection", "changeStart", "changeEnd"], ["child", ""], [3, "componentId", "config", 4, "ngIf"], [3, "title", "click"], [3, "componentId", "config"]], template: function WidgetsDashboardComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, WidgetsDashboardComponent_c8y_title_0_Template, 3, 3, "c8y-title", 0);
        ɵngcc0.ɵɵtemplate(1, WidgetsDashboardComponent_c8y_breadcrumb_1_Template, 2, 3, "c8y-breadcrumb", 0);
        ɵngcc0.ɵɵtemplate(2, WidgetsDashboardComponent_c8y_action_bar_item_2_Template, 6, 8, "c8y-action-bar-item", 1);
        ɵngcc0.ɵɵtemplate(3, WidgetsDashboardComponent_c8y_action_bar_item_3_Template, 6, 8, "c8y-action-bar-item", 1);
        ɵngcc0.ɵɵtemplate(4, WidgetsDashboardComponent_c8y_action_bar_item_4_Template, 6, 8, "c8y-action-bar-item", 1);
        ɵngcc0.ɵɵtemplate(5, WidgetsDashboardComponent_c8y_action_bar_item_5_Template, 4, 9, "c8y-action-bar-item", 2);
        ɵngcc0.ɵɵtemplate(6, WidgetsDashboardComponent_c8y_action_bar_item_6_Template, 6, 6, "c8y-action-bar-item", 3);
        ɵngcc0.ɵɵtemplate(7, WidgetsDashboardComponent_div_7_Template, 5, 1, "div", 4);
        ɵngcc0.ɵɵtemplate(8, WidgetsDashboardComponent_div_8_Template, 7, 0, "div", 5);
        ɵngcc0.ɵɵtemplate(9, WidgetsDashboardComponent_c8y_dashboard_9_Template, 3, 1, "c8y-dashboard", 6);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", !!ctx.settings.title);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !!ctx.breadcrumb);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.onAddWidget.observers.length);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.onEditDashboard.observers.length);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.settings.allowFullscreen);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.onFreeze.observers.length);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.settings.canDelete && ctx.onDeleteDashboard.observers.length);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.settings.isLoading && (ctx.widgets == null ? null : ctx.widgets.length) === 0);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.settings.isLoading);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.settings.isLoading);
    } }, directives: [ɵngcc6.NgIf, TitleComponent, BreadcrumbComponent, BreadcrumbItemComponent, ActionBarItemComponent, IconDirective, ɵngcc6.NgClass, C8yTranslateDirective, GuideDocsComponent, GuideHrefDirective, DashboardComponent, ɵngcc6.NgForOf, DashboardChildComponent, DashboardChildTitleComponent, DashboardChildActionComponent, DynamicComponentComponent], pipes: [C8yTranslatePipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(WidgetsDashboardComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-widgets-dashboard',
                template: "<c8y-title *ngIf=\"!!settings.title\">\n  {{ settings.title | translate }}\n</c8y-title>\n\n<c8y-breadcrumb *ngIf=\"!!breadcrumb\">\n  <c8y-breadcrumb-item\n    [icon]=\"breadcrumb.icon\"\n    [label]=\"breadcrumb.label\"\n    [path]=\"breadcrumb.path\"\n  ></c8y-breadcrumb-item>\n</c8y-breadcrumb>\n\n<c8y-action-bar-item [placement]=\"'right'\" *ngIf=\"onAddWidget.observers.length\">\n  <button\n    title=\"{{ 'Add widget' | translate }}\"\n    class=\"btn btn-link\"\n    [disabled]=\"settings.isFrozen || settings.isDisabled\"\n    (click)=\"onAddWidget.emit()\"\n  >\n    <i c8yIcon=\"plus-circle\"></i>\n    {{ 'Add widget' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<c8y-action-bar-item [placement]=\"'right'\" *ngIf=\"onEditDashboard.observers.length\">\n  <button\n    title=\"{{ 'Edit' | translate }}\"\n    class=\"btn btn-link\"\n    [disabled]=\"settings.isFrozen || settings.isDisabled\"\n    (click)=\"onEditDashboard.emit()\"\n  >\n    <i c8yIcon=\"pencil\"></i>\n    {{ 'Edit' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<c8y-action-bar-item [placement]=\"'right'\" *ngIf=\"settings.allowFullscreen\">\n  <button\n    title=\"{{ 'Full screen' | translate }}\"\n    class=\"btn btn-link\"\n    (click)=\"toggleFullscreen()\"\n    >\n    <i [c8yIcon]=\"fullScreen() ? 'compress' : 'expand'\"></i>\n    {{ 'Full screen' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<c8y-action-bar-item\n  [placement]=\"'right'\"\n  itemClass=\"navbar-form\"\n  *ngIf=\"onFreeze.observers.length\"\n>\n  <button\n    title=\"{{ 'Lock/unlock this dashboard' | translate }}\"\n    class=\"btn btn-default\"\n    [ngClass]=\"{ active: settings.isFrozen }\"\n    (click)=\"onFreeze.emit(settings)\"\n    [disabled]=\"settings.isDisabled\"\n    uib-btn-checkbox\n  >\n    <i [c8yIcon]=\"settings.isFrozen ? 'lock' : 'unlock'\"></i>\n  </button>\n</c8y-action-bar-item>\n\n<c8y-action-bar-item\n  [placement]=\"'more'\"\n  [priority]=\"-3000\"\n  *ngIf=\"settings.canDelete && onDeleteDashboard.observers.length\"\n>\n  <button\n    title=\"{{ 'Delete dashboard' | translate }}\"\n    (click)=\"onDeleteDashboard.emit()\"\n    [disabled]=\"settings.isFrozen || settings.isDisabled\"\n  >\n    <i c8yIcon=\"trash\"></i>\n    <span class=\"m-l-4\" translate>Delete dashboard</span>\n  </button>\n</c8y-action-bar-item>\n\n<!-- empty state -->\n<div class=\"c8y-empty-state text-center\" *ngIf=\"!settings.isLoading && widgets?.length === 0\">\n  <h1 class=\"c8y-icon c8y-icon-device c8y-icon-duocolor\"></h1>\n  <h3 translate>No widgets to display.</h3>\n  <div *ngIf=\"!settings.isFrozen && onAddWidget.observers.length\">\n    <p translate>Add widgets to this dashboard.</p>\n    <div>\n      <button\n        title=\"{{ 'Add widget' | translate }}\"\n        [disabled]=\"settings.isFrozen || settings.isDisabled\"\n        (click)=\"onAddWidget.emit()\"\n        class=\"btn btn-primary\"\n        translate\n      >\n        Add widget\n      </button>\n    </div>\n    <p c8y-guide-docs>\n      <small translate ngNonBindable>\n        Find out more in the\n        <a c8y-guide-href=\"users-guide/cockpit/#dashboards\">\n          User guide`KEEP_ORIGINAL`\n        </a>.\n      </small>\n    </p>\n  </div>\n</div>\n<!-- /.empty settings -->\n\n<div class=\"col-xs-12 text-center\" *ngIf=\"settings.isLoading\">\n  <div class=\"spinner p-relative\">\n    <div class=\"rect1\"></div>\n    <div class=\"rect2\"></div>\n    <div class=\"rect3\"></div>\n    <div class=\"rect4\"></div>\n    <div class=\"rect5\"></div>\n  </div>\n</div>\n\n<c8y-dashboard\n  (dashboardChange)=\"onChangeDashboard.emit($event)\"\n  #dashboard\n  *ngIf=\"!settings.isLoading\"\n>\n  <c8y-dashboard-child\n    *ngFor=\"let widget of widgets\"\n    [x]=\"widget._x\"\n    [y]=\"widget._y\"\n    [width]=\"widget._width || settings.defaultWidth\"\n    [height]=\"widget._height || settings.defaultHeight\"\n    [margin]=\"settings.widgetMargin\"\n    [isFrozen]=\"settings.isFrozen || settings.isDisabled\"\n    [class]=\"widget.classes\"\n    [data]=\"widget\"\n    [useIntersection]=\"true\"\n    (changeStart)=\"onChangeStart.emit({ widget: widget, source: child, dashboard: dashboard })\"\n    (changeEnd)=\"onChangeEnd.emit({ widget: widget, source: child, dashboard: dashboard })\"\n    #child\n  >\n    <c8y-dashboard-child-title>\n      <span *ngIf=\"settings.translateWidgetTitle\">\n        {{ widget.title | translate }}\n      </span>\n      <span *ngIf=\"!settings.translateWidgetTitle\">\n        {{ widget.title }}\n      </span>\n    </c8y-dashboard-child-title>\n    <c8y-dashboard-child-action *ngIf=\"onEditWidget.observers.length\">\n      <button\n        title=\"{{ 'Edit widget' | translate }}\"\n        (click)=\"onEditWidget.emit({ widget: widget, source: child, dashboard: dashboard })\"\n      >\n        <i c8yIcon=\"pencil\"></i>\n        <span class=\"m-l-4\" translate>Edit</span>\n      </button>\n    </c8y-dashboard-child-action>\n    <c8y-dashboard-child-action *ngIf=\"onDeleteWidget.observers.length\">\n      <button\n        title=\"{{ 'Remove widget' | translate }}\"\n        (click)=\"onDeleteWidget.emit({ widget: widget, source: child, dashboard: dashboard })\"\n      >\n        <i c8yIcon=\"trash\"></i>\n        <span class=\"m-l-4\" translate>Remove</span>\n      </button>\n    </c8y-dashboard-child-action>\n    <c8y-dynamic-component\n      [componentId]=\"widget.componentId || widget.name\"\n      [config]=\"\n        widget.templateUrl || widget.widgetComponent\n          ? { child: widget, dashboard: contextDashboard, context: context }\n          : widget.config\n      \"\n      *ngIf=\"child.intersected\"\n    ></c8y-dynamic-component>\n  </c8y-dashboard-child>\n</c8y-dashboard>\n",
                host: {
                    style: "\n      display: block;\n    ",
                    class: 'dashboard c8y-grid-dashboard'
                }
            }]
    }], function () { return []; }, { contextDashboard: [{
            type: i0.Input
        }], onAddWidget: [{
            type: i0.Output
        }], onEditWidget: [{
            type: i0.Output
        }], onDeleteWidget: [{
            type: i0.Output
        }], onChangeDashboard: [{
            type: i0.Output
        }], onEditDashboard: [{
            type: i0.Output
        }], onDeleteDashboard: [{
            type: i0.Output
        }], onFreeze: [{
            type: i0.Output
        }], onChangeStart: [{
            type: i0.Output
        }], onChangeEnd: [{
            type: i0.Output
        }], _settings: [{
            type: i0.Input,
            args: ['settings']
        }], widgets: [{
            type: i0.Input
        }], context: [{
            type: i0.Input
        }], breadcrumb: [{
            type: i0.Input
        }] }); })();
        return WidgetsDashboardComponent;
    }());
    WidgetsDashboardComponent.propDecorators = {
        widgets: [{ type: i0.Input }],
        context: [{ type: i0.Input }],
        contextDashboard: [{ type: i0.Input }],
        _settings: [{ type: i0.Input, args: ['settings',] }],
        breadcrumb: [{ type: i0.Input }],
        onAddWidget: [{ type: i0.Output }],
        onEditWidget: [{ type: i0.Output }],
        onDeleteWidget: [{ type: i0.Output }],
        onChangeDashboard: [{ type: i0.Output }],
        onEditDashboard: [{ type: i0.Output }],
        onDeleteDashboard: [{ type: i0.Output }],
        onFreeze: [{ type: i0.Output }],
        onChangeStart: [{ type: i0.Output }],
        onChangeEnd: [{ type: i0.Output }]
    };

    var DashboardModule = /** @class */ (function () {
        function DashboardModule() {
        }
DashboardModule.ɵfac = function DashboardModule_Factory(t) { return new (t || DashboardModule)(); };
DashboardModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: DashboardModule });
DashboardModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[
            CommonModule,
            ActionBarModule,
            DynamicComponentModule,
            dragDrop.DragDropModule,
            dropdown.BsDropdownModule.forRoot(),
            HeaderModule,
            DocsModule,
            BreadcrumbModule
        ]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DashboardModule, [{
        type: i0.NgModule,
        args: [{
                declarations: [
                    DashboardChildComponent,
                    DashboardComponent,
                    DashboardChildTitleComponent,
                    DashboardChildActionComponent,
                    WidgetsDashboardComponent
                ],
                imports: [
                    CommonModule,
                    ActionBarModule,
                    DynamicComponentModule,
                    dragDrop.DragDropModule,
                    dropdown.BsDropdownModule.forRoot(),
                    HeaderModule,
                    DocsModule,
                    BreadcrumbModule
                ],
                exports: [
                    DashboardComponent,
                    DashboardChildComponent,
                    DashboardChildTitleComponent,
                    DashboardChildActionComponent,
                    WidgetsDashboardComponent
                ]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DashboardModule, { declarations: [DashboardChildComponent, DashboardComponent, DashboardChildTitleComponent, DashboardChildActionComponent, WidgetsDashboardComponent], imports: [CommonModule, ActionBarModule, DynamicComponentModule, ɵngcc19.DragDropModule, ɵngcc9.BsDropdownModule, HeaderModule, DocsModule, BreadcrumbModule], exports: [DashboardComponent, DashboardChildComponent, DashboardChildTitleComponent, DashboardChildActionComponent, WidgetsDashboardComponent] }); })();
        return DashboardModule;
    }());

    /**
     * Template to be used to override the icons inside the step header.
     */
    var C8yStepperIcon = /** @class */ (function () {
        function C8yStepperIcon(templateRef) {
            this.templateRef = templateRef;
        }
C8yStepperIcon.ɵfac = function C8yStepperIcon_Factory(t) { return new (t || C8yStepperIcon)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };
C8yStepperIcon.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: C8yStepperIcon, selectors: [["ng-template", "c8yStepperIcon", ""]], inputs: { name: ["c8yStepperIcon", "name"] } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(C8yStepperIcon, [{
        type: i0.Directive,
        args: [{
                selector: 'ng-template[c8yStepperIcon]'
            }]
    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, { name: [{
            type: i0.Input,
            args: ['c8yStepperIcon']
        }] }); })();
        return C8yStepperIcon;
    }());
    C8yStepperIcon.ctorParameters = function () { return [
        { type: i0.TemplateRef }
    ]; };
    C8yStepperIcon.propDecorators = {
        name: [{ type: i0.Input, args: ['c8yStepperIcon',] }]
    };

    /**
     * C8yStepper extends the CdkStepper. You can use cdk based functionality and inputs.
     * Additional to that you are able to modify the behavior and also the look and feel when
     * using the C8yStepper.
     *
     * The C8yStepper is used to present any step-based process to the user.
     * A stepper, C8yStepper and/or CdkStepper is the parent of cdk-steps.
     * Each cdk-step represents one step in the whole process that you want to provide to the user.
     *
     * The C8yStepper will create, based on the given cdk-steps, a kind of stepper-progress which looks like this:
     * (1)---(2)---(3)---(n)
     * The stepper will handle the state of each step and provides styles for active steps, done-steps or in edit-mode.
     * You are able to override icons for each step in the stepper-progress with a template. You are also able to activate
     * default-icons for states like 'edit' and 'done'.
     *
     * To force users through every provided step, set the stepper to 'linear'.
     * This will disable the possibility to move for example from step one to step three.
     *
     * Whenever it comes to validation try to use formGroups. It is possible to
     * assign a formGroup to a cdk-step input called [stepControl], which automatically respects the
     * validation-rules that you created for this formGroup. If fields are required but not filled or
     * any other validation, like a pattern, is not matched the formGroup will be invalid. In this case
     * stepping in a linear stepper to the next step gets impossible.
     *
     * If there is the need to execute asynchronous code you have at least two possibilities.
     * First: As you learned, a cdk-step works with formGroups and Validators, so you are able to use
     * asyncValidators as well.
     * Second: The C8yStepper provides an event-emitter onStepChange which is called whenever a step-button (1)--(2)--(n)
     * in the stepper-progress is clicked. The event of this emitter holds the index of the step as number. You can
     * use this EventEmitter to call for example a custom navigate-method which performs first any async-call and then moves
     * on to the given step.
     *
     * @example
     * ```
     * <c8y-stepper
     * (onStepChange)="navigate($event)"
     * [disableDefaultIcons]="{ edit: true, done: false }"
     * [customClasses]="['m-l-40', 'm-r-40', 'm-t-32']"
     * linear
     * >
     * <!-- override icons -->
     * <ng-template c8yStepperIcon="final">
     *   <span [c8yIcon]="'hand-peace-o'"></span>
     * </ng-template>
     *
     * <cdk-step [stepControl]="formGroupStepOne" label="Name of the hero">
     *   <div class="m-l-40 m-r-40 m-t-32">
     *     <h4 class="p-b-8" translate>What is the name of your hero?</h4>
     *     <c8y-form-group>
     *      <div [formGroup]="formGroupStepOne">
     *       <input
     *         class="form-control"
     *         type="text"
     *         formControlName="name"
     *         placeholder="Mister X"
     *         #nameRef
     *         required
     *       />
     *       <c8y-messages>
     *         <c8y-message *ngIf="!formGroupStepOne.untouched && !nameRef.value" translate
     *           >Enter the name of the Superhero</c8y-message
     *         >
     *       </c8y-messages>
     *      </div>
     *     </c8y-form-group>
     *   </div>
     *   <c8y-stepper-buttons></c8y-stepper-buttons>
     * </cdk-step>
     * <cdk-step>
     *  ...
     * </cdk-step state="final">
     * </c8y-stepper>
     * ```
     */
    var C8yStepper = /** @class */ (function (_super) {
        __extends(C8yStepper, _super);
        function C8yStepper(dir, changeDetectorRef, elementRef) {
            var _this = _super.call(this, dir, changeDetectorRef, elementRef, document) || this;
            _this.dir = dir;
            _this.changeDetectorRef = changeDetectorRef;
            _this.elementRef = elementRef;
            /**
             * Optional
             * Indicator if icons for edit and done state should be shown in step-header buttons
             */
            _this.disableDefaultIcons = { edit: true, done: true };
            /**
             * Will emit the step index number whenever a step-header button was clicked
             * It listens to the stepIndex Subject.
             */
            _this.onStepChange = new i0.EventEmitter();
            /** Consumer-specified template-refs to be used to override the header icons. */
            _this._iconOverrides = {};
            _this._stepIndex = new rxjs.Subject();
            return _this;
        }
        C8yStepper.prototype.ngAfterContentInit = function () {
            var _this = this;
            _super.prototype.ngAfterContentInit.call(this);
            this._icons.forEach(function (_a) {
                var name = _a.name, templateRef = _a.templateRef;
                return (_this._iconOverrides[name] = templateRef);
            });
            this._stepIndexSubscription = this._stepIndex.subscribe(function (index) { return _this.onStepChange.emit(index); });
        };
        C8yStepper.prototype.ngOnDestroy = function () {
            if (this._stepIndexSubscription && !this._stepIndexSubscription.closed) {
                this._stepIndexSubscription.unsubscribe();
            }
        };
        /**
         * Manipulates the state based on the disabledDefaultIcons Input()
         * Changing edit or done to false will change the icons within step-header buttons
         * @param index step index
         * @param state step state, like 'done', 'edit', 'error'
         */
        C8yStepper.prototype.getIndicatorType = function (index, state) {
            var stepState = this._getIndicatorType(index, state);
            var _state = state;
            switch (stepState) {
                case stepper.STEP_STATE.EDIT:
                    if (!this.disableDefaultIcons.edit) {
                        _state = stepper.STEP_STATE.EDIT;
                    }
                    break;
                case stepper.STEP_STATE.DONE:
                    if (!this.disableDefaultIcons.done) {
                        _state = stepper.STEP_STATE.DONE;
                    }
                    else {
                        _state = '_done';
                    }
                    break;
            }
            return _state;
        };
        /**
         * Pushs the step index to the subject
         * @param index step index
         */
        C8yStepper.prototype.setIndex = function (index) {
            this._stepIndex.next(index);
        };
C8yStepper.ɵfac = function C8yStepper_Factory(t) { return new (t || C8yStepper)(ɵngcc0.ɵɵdirectiveInject(ɵngcc20.Directionality), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
C8yStepper.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: C8yStepper, selectors: [["c8y-stepper"]], contentQueries: function C8yStepper_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, C8yStepperIcon, 5);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._icons = _t);
    } }, inputs: { disableDefaultIcons: "disableDefaultIcons", customClasses: "customClasses" }, outputs: { onStepChange: "onStepChange" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: stepper.CdkStepper, useExisting: C8yStepper }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 3, consts: [[1, "c8y-stepper", 3, "ngClass"], [4, "ngFor", "ngForOf"], [3, "ngTemplateOutlet"], [3, "iconOverrides", "state", "index", "selected", "title", "ngClass", "onStepClicked"], [1, "c8y-step__label", 3, "title"]], template: function C8yStepper_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "ul", 0);
        ɵngcc0.ɵɵtemplate(1, C8yStepper_li_1_Template, 7, 16, "li", 1);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementContainer(2, 2);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngClass", ctx.customClasses);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.steps);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx.selected.content);
    } }, directives: function () { return [ɵngcc6.NgClass, ɵngcc6.NgForOf, ɵngcc6.NgTemplateOutlet, C8yStepperProgress]; }, pipes: function () { return [C8yTranslatePipe]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(C8yStepper, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-stepper',
                template: "<ul class=\"c8y-stepper\" [ngClass]=\"customClasses\">\n  <li *ngFor=\"let step of steps; let i = index\">\n    <c8y-stepper-progress\n      [iconOverrides]=\"_iconOverrides\"\n      [state]=\"getIndicatorType(i, step.state)\"\n      [index]=\"i\"\n      [selected]=\"selectedIndex === i\"\n      (onStepClicked)=\"setIndex($event)\"\n      title=\"{{ step.label | translate }}\"\n      [ngClass]=\"{'active': selectedIndex === i}\"\n    >\n    </c8y-stepper-progress>\n    <div class=\"c8y-step__label\"  title=\"{{ step.label | translate }}\">\n      {{ step.label | translate }}\n    </div>\n  </li>\n</ul>\n<ng-container [ngTemplateOutlet]=\"selected.content\"></ng-container>\n",
                providers: [{ provide: stepper.CdkStepper, useExisting: C8yStepper }]
            }]
    }], function () { return [{ type: ɵngcc20.Directionality }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }]; }, { disableDefaultIcons: [{
            type: i0.Input
        }], customClasses: [{
            type: i0.Input
        }], onStepChange: [{
            type: i0.Output
        }], _icons: [{
            type: i0.ContentChildren,
            args: [C8yStepperIcon, { descendants: true }]
        }] }); })();
        return C8yStepper;
    }(stepper.CdkStepper));
    C8yStepper.ctorParameters = function () { return [
        { type: bidi.Directionality },
        { type: i0.ChangeDetectorRef },
        { type: i0.ElementRef }
    ]; };
    C8yStepper.propDecorators = {
        disableDefaultIcons: [{ type: i0.Input }],
        customClasses: [{ type: i0.Input }],
        onStepChange: [{ type: i0.Output }],
        _icons: [{ type: i0.ContentChildren, args: [C8yStepperIcon, { descendants: true },] }]
    };

    var C8yStepperProgress = /** @class */ (function () {
        function C8yStepperProgress() {
            /** Emits the index: number of the step which was clicked */
            this.onStepClicked = new i0.EventEmitter();
        }
        /** Called on click and emits the step index */
        C8yStepperProgress.prototype.stepSelected = function () {
            this.onStepClicked.emit(this.index);
        };
C8yStepperProgress.ɵfac = function C8yStepperProgress_Factory(t) { return new (t || C8yStepperProgress)(); };
C8yStepperProgress.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: C8yStepperProgress, selectors: [["c8y-stepper-progress"]], inputs: { iconOverrides: "iconOverrides", index: "index", selected: "selected", state: "state" }, outputs: { onStepClicked: "onStepClicked" }, decls: 3, vars: 6, consts: [["type", "button", 1, "c8y-step", 3, "ngClass", "ngSwitch", "click"], [3, "ngTemplateOutlet", 4, "ngSwitchCase"], [3, "ngSwitch", 4, "ngSwitchDefault"], [3, "ngTemplateOutlet"], [3, "ngSwitch"], [4, "ngSwitchCase"], [4, "ngSwitchDefault"], [3, "c8yIcon"]], template: function C8yStepperProgress_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "button", 0);
        ɵngcc0.ɵɵlistener("click", function C8yStepperProgress_Template_button_click_0_listener() { return ctx.stepSelected(); });
        ɵngcc0.ɵɵtemplate(1, C8yStepperProgress_ng_container_1_Template, 1, 1, "ng-container", 1);
        ɵngcc0.ɵɵtemplate(2, C8yStepperProgress_ng_container_2_Template, 4, 3, "ng-container", 2);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction2(3, _c54, ctx.selected, ctx.state === "done" || ctx.state === "_done"))("ngSwitch", !!(ctx.iconOverrides && ctx.iconOverrides[ctx.state]));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngSwitchCase", true);
    } }, directives: [ɵngcc6.NgClass, ɵngcc6.NgSwitch, ɵngcc6.NgSwitchCase, ɵngcc6.NgSwitchDefault, ɵngcc6.NgTemplateOutlet, IconDirective], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(C8yStepperProgress, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-stepper-progress',
                template: "<button\n  type=\"button\"\n  class=\"c8y-step\"\n  [ngClass]=\"{ active: selected, 'step-done': state === 'done' || state === '_done' }\"\n  [ngSwitch]=\"!!(iconOverrides && iconOverrides[state])\"\n  (click)=\"stepSelected()\"\n>\n  <ng-container *ngSwitchCase=\"true\" [ngTemplateOutlet]=\"iconOverrides[state]\"></ng-container>\n  <ng-container *ngSwitchDefault [ngSwitch]=\"state\">\n    <span *ngSwitchCase=\"'edit'\">\n      <span [c8yIcon]=\"'edit'\"></span>\n    </span>\n    <span *ngSwitchCase=\"'done'\">\n      <span [c8yIcon]=\"'check'\"></span>\n    </span>\n    <span *ngSwitchDefault> {{ index + 1 }} </span>\n  </ng-container>\n</button>\n"
            }]
    }], function () { return []; }, { onStepClicked: [{
            type: i0.Output
        }], iconOverrides: [{
            type: i0.Input
        }], index: [{
            type: i0.Input
        }], selected: [{
            type: i0.Input
        }], state: [{
            type: i0.Input
        }] }); })();
        return C8yStepperProgress;
    }());
    C8yStepperProgress.propDecorators = {
        iconOverrides: [{ type: i0.Input }],
        index: [{ type: i0.Input }],
        selected: [{ type: i0.Input }],
        state: [{ type: i0.Input }],
        onStepClicked: [{ type: i0.Output }]
    };

    /**
     * C8yStepperButtons provides a convinient way to have, according to
     * the C8yStepper and each cdk-step, buttons to navigate between steps or to cancel the whole
     * step-process. Buttons rendered with the help of this component will use the branding css.
     *
     * By default all steps with this component in use will render a next button, expect the last step.
     * The other way around, every step using this component will render a back button, expect the first step.
     * To get a cancel button rendered you need to handle the onCancel event.
     * For next and back button you don't need to handle the available events onNext and onBack because default behavior
     * is implemented. The default will just call, according to the button, the stepper.next() or stepper.previous()
     * methods and moves the stepper forth or back. Using the EventEmitter onNext and onBack will emit for you the following
     * object: {stepper: C8yStepper, step: CdkStep}. This is useful if you need to implement custom logic before moving
     * to the next step or sending data to a backend. In this case you need to tell the stepper to move forward or back
     * on your own.
     *
     * With the component input [labels] you can change the label of each button in each step. It takes an object like this:
     * {next?: string, back?: string, cancel?: string}
     *
     * The [pending] input is of type boolean and will enable css animation for the next button when true.
     *
     * If the cdk-step provides a stepControl the component will set the next button disabled when the formGroup
     * behind it is invalid. As long as the [pending] input is true the back and next button is also disabled.
     * This will prevent multiple clicks while running a request or stepping back while a request is ongoing.
     *
     * **Example**
     * ```
     * <c8y-stepper>
     *  <cdk-step>
     *    <!--
     *      your html code
     *          ...
     *          ...    -->
     *    <c8y-stepper-buttons
     *     (onNext)="save()"
     *     [labels]="{ next: 'Save' }"
     *     [pending]="pendingStatus"
     *     ></c8y-stepper-buttons>
     *  </cdk-step>
     * </c8y-stepper>
     *
     * // in your component:
     * async save() {
     *   this.pendingStatus = true;
     *   // your async request goes here ...
     *   // await something();
     *   this.pendingStatus = false;
     *   this.stepper.next();
     * }
     * ```
     */
    var C8yStepperButtons = /** @class */ (function () {
        function C8yStepperButtons(stepper, step) {
            this.stepper = stepper;
            this.step = step;
            /**
             * Optional
             * Indicates if a request is pending and sets the next button
             * to disabled when true
             */
            this.pending = false;
            /**
             * Disabled state of a button
             */
            this.disabled = false;
            /**
             * EventEmitter which emits when cancel button is clicked
             */
            this.onCancel = new i0.EventEmitter();
            /**
             * EventEmitter which emits {stepper: C8yStepper; step: CdkStep} when next button is clicked.
             */
            this.onNext = new i0.EventEmitter();
            /**
             * EventEmitter which emits {stepper: C8yStepper; step: CdkStep} when back button is clicked.
             */
            this.onBack = new i0.EventEmitter();
            /**
             * EventEmitter which emits when the optional custom button is clicked
             */
            this.onCustom = new i0.EventEmitter();
            /**
             * Indicator which button should be shown.
             * Based on the cdk-steps within the c8y-stepper
             * next and back buttons are rendered.
             */
            this.showBtns = {
                cancel: false,
                back: false,
                next: false,
                custom: false
            };
            /**
             * Flag that indicates that the default settings defined in the showBtns have been overwritten.
             */
            this.forceShowBtns = false;
        }
        Object.defineProperty(C8yStepperButtons.prototype, "showButtons", {
            /**
             * This option forces the display of the buttons passed by the input.
             * It will override the default settings and take precedence over the standard settings.
             * @param btns An object that contains options for displaying buttons.
             *
             * **Example**
             * ```html
             *
             * <c8y-stepper-buttons
             *   [labels]="{ custom: 'Custom btn', cancel: 'Cancel btn' }"
             *   [showButtons]="{ custom: true, cancel: true }"
             * ></c8y-stepper-buttons>
             *
             * ```
             */
            set: function (btns) {
                if (btns) {
                    this.showBtns = btns;
                    this.forceShowBtns = true;
                }
            },
            enumerable: false,
            configurable: true
        });
        C8yStepperButtons.prototype.ngAfterContentInit = function () {
            var _this = this;
            if (!this.forceShowBtns) {
                this.showBtns.cancel = this.onCancel.observers.length > 0;
                this.showBtns.custom = this.onCustom.observers.length > 0;
            }
            if (this.stepper && this.stepper._steps && this.step && !this.forceShowBtns) {
                this.showBtns.back = this.stepper._steps.first !== this.step;
                this.showBtns.next = this.stepper._steps.last !== this.step;
            }
            if (this.step && this.step.stepControl) {
                this.disabled = this.step.stepControl.invalid;
                this.statusChangeSubscription = this.step.stepControl.statusChanges.subscribe(function (status) {
                    _this.disabled = _this.step.stepControl.invalid;
                });
            }
        };
        C8yStepperButtons.prototype.ngOnChanges = function (changes) {
            /**
             * Disable save/next button while the status is pending
             * This will prevent multiple clicks and therefore multiple requests
             */
            if (changes && changes.pending) {
                this.disabled = changes.pending.currentValue;
            }
        };
        C8yStepperButtons.prototype.ngOnDestroy = function () {
            if (this.statusChangeSubscription && !this.statusChangeSubscription.closed) {
                this.statusChangeSubscription.unsubscribe();
            }
        };
        /**
         * Gets called when cancel button is clicked.
         * It will emit immediate.
         */
        C8yStepperButtons.prototype.cancel = function () {
            this.onCancel.emit();
        };
        /**
         * Gets called when next button is clicked. When onNext EventEmitter has an observer registered
         * it will emit the following object {stepper: C8yStepper; step: CdkStep}.
         * Otherwise it will call stepper.next() as default.
         */
        C8yStepperButtons.prototype.next = function () {
            if (this.onNext.observers.length > 0) {
                this.onNext.emit({ stepper: this.stepper, step: this.step });
            }
            else {
                this.stepper.next();
            }
        };
        /**
         * Gets called when back button is clicked. When onBack EventEmitter has an observer registered
         * it will emit the following object {stepper: C8yStepper; step: CdkStep}.
         * Otherwise it will call stepper.previous() as default.
         */
        C8yStepperButtons.prototype.back = function () {
            this.stepper.selected.completed = false;
            if (this.onBack.observers.length > 0) {
                this.onBack.emit({ stepper: this.stepper, step: this.step });
            }
            else {
                this.stepper.previous();
            }
        };
        /**
         * Gets called when the custom button is clicked.
         * It will emit immediately.
         */
        C8yStepperButtons.prototype.custom = function () {
            this.onCustom.emit();
        };
C8yStepperButtons.ɵfac = function C8yStepperButtons_Factory(t) { return new (t || C8yStepperButtons)(ɵngcc0.ɵɵdirectiveInject(C8yStepper, 1), ɵngcc0.ɵɵdirectiveInject(ɵngcc21.CdkStep, 1)); };
C8yStepperButtons.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: C8yStepperButtons, selectors: [["c8y-stepper-buttons"]], inputs: { pending: "pending", disabled: "disabled", showButtons: "showButtons", labels: "labels" }, outputs: { onCancel: "onCancel", onNext: "onNext", onBack: "onBack", onCustom: "onCustom" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 5, vars: 4, consts: [[1, "text-center"], ["type", "button", "class", "btn btn-default", 3, "click", 4, "ngIf"], ["type", "button", "class", "btn btn-default", 3, "disabled", "click", 4, "ngIf"], ["type", "button", "class", "btn", 3, "ngClass", "disabled", "click", 4, "ngIf"], ["type", "button", "class", "btn btn-primary", 3, "ngClass", "disabled", "click", 4, "ngIf"], ["type", "button", 1, "btn", "btn-default", 3, "click"], [3, "title", 4, "ngIf", "ngIfElse"], ["cancelLabel", ""], [3, "title"], ["type", "button", 1, "btn", "btn-default", 3, "disabled", "click"], ["backLabel", ""], ["type", "button", 1, "btn", 3, "ngClass", "disabled", "click"], ["customLabel", ""], ["type", "button", 1, "btn", "btn-primary", 3, "ngClass", "disabled", "click"], ["nextLabel", ""]], template: function C8yStepperButtons_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵtemplate(1, C8yStepperButtons_button_1_Template, 4, 2, "button", 1);
        ɵngcc0.ɵɵtemplate(2, C8yStepperButtons_button_2_Template, 4, 3, "button", 2);
        ɵngcc0.ɵɵtemplate(3, C8yStepperButtons_button_3_Template, 4, 8, "button", 3);
        ɵngcc0.ɵɵtemplate(4, C8yStepperButtons_button_4_Template, 4, 6, "button", 4);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showBtns.cancel);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showBtns.back);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showBtns.custom);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showBtns.next);
    } }, directives: [ɵngcc6.NgIf, ɵngcc6.NgClass], pipes: [C8yTranslatePipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(C8yStepperButtons, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-stepper-buttons',
                template: "<div class=\"text-center\">\n  <button *ngIf=\"showBtns.cancel\" (click)=\"cancel()\" type=\"button\" class=\"btn btn-default\">\n    <span *ngIf=\"labels?.cancel; else cancelLabel\" title=\"{{ labels?.cancel | translate }}\">{{\n      labels?.cancel | translate\n    }}</span>\n    <ng-template #cancelLabel>\n      <span title=\"{{ 'Cancel' | translate }}\">{{ 'Cancel' | translate }}</span>\n    </ng-template>\n  </button>\n  <button\n    *ngIf=\"showBtns.back\"\n    type=\"button\"\n    (click)=\"back()\"\n    class=\"btn btn-default\"\n    [disabled]=\"pending\"\n  >\n    <span *ngIf=\"labels?.back; else backLabel\" title=\"{{ labels?.back | translate }}\">{{\n      labels?.back | translate\n    }}</span>\n    <ng-template #backLabel>\n      <span title=\"{{ 'Back' | translate }}\">{{ 'Back' | translate }}</span>\n    </ng-template>\n  </button>\n  <button\n    *ngIf=\"showBtns.custom\"\n    (click)=\"custom()\"\n    type=\"button\"\n    class=\"btn\"\n    [ngClass]=\"{\n      'btn-default': showBtns.next,\n      'btn-primary': !showBtns.next,\n      'btn-pending': pending\n    }\"\n    [disabled]=\"pending || disabled\"\n  >\n    <span *ngIf=\"labels?.custom; else customLabel\" title=\"{{ labels?.custom | translate }}\">{{\n      labels?.custom | translate\n    }}</span>\n    <ng-template #customLabel>\n      <span title=\"{{ 'Complete' | translate }}\">{{ 'Complete' | translate }}</span>\n    </ng-template>\n  </button>\n  <button\n    (click)=\"next()\"\n    *ngIf=\"showBtns.next\"\n    type=\"button\"\n    class=\"btn btn-primary\"\n    [ngClass]=\"{ 'btn-pending': pending }\"\n    [disabled]=\"disabled\"\n  >\n    <span *ngIf=\"labels?.next; else nextLabel\" title=\"{{ labels?.next | translate }}\">{{\n      labels?.next | translate\n    }}</span>\n    <ng-template #nextLabel>\n      <span title=\"{{ 'Next' | translate }}\">{{ 'Next' | translate }}</span>\n    </ng-template>\n  </button>\n</div>\n"
            }]
    }], function () { return [{ type: C8yStepper, decorators: [{
                type: i0.Host
            }] }, { type: ɵngcc21.CdkStep, decorators: [{
                type: i0.Host
            }] }]; }, { pending: [{
            type: i0.Input
        }], disabled: [{
            type: i0.Input
        }], onCancel: [{
            type: i0.Output
        }], onNext: [{
            type: i0.Output
        }], onBack: [{
            type: i0.Output
        }], onCustom: [{
            type: i0.Output
        }], showButtons: [{
            type: i0.Input
        }], labels: [{
            type: i0.Input
        }] }); })();
        return C8yStepperButtons;
    }());
    C8yStepperButtons.ctorParameters = function () { return [
        { type: C8yStepper, decorators: [{ type: i0.Host }] },
        { type: stepper.CdkStep, decorators: [{ type: i0.Host }] }
    ]; };
    C8yStepperButtons.propDecorators = {
        labels: [{ type: i0.Input }],
        pending: [{ type: i0.Input }],
        disabled: [{ type: i0.Input }],
        onCancel: [{ type: i0.Output }],
        onNext: [{ type: i0.Output }],
        onBack: [{ type: i0.Output }],
        onCustom: [{ type: i0.Output }],
        showButtons: [{ type: i0.Input }]
    };

    var ɵ0 = { displayDefaultIndicatorType: false };
    /**
     * The angular module definition for c8y-stepper (Wizard).
     * @exports C8yStepper
     * @exports C8yStepperIcon
     * @exports C8yStepperButtons
     * @exports CdkStep
     */
    var StepperModule = /** @class */ (function () {
        function StepperModule() {
        }
StepperModule.ɵfac = function StepperModule_Factory(t) { return new (t || StepperModule)(); };
StepperModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: StepperModule });
StepperModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [
        {
            /**
             * This emables additional states, like: edit, done and error
             * These states are used to display custom icons, if needed.
             * Any change in here will most probably result in not showing custom icons anymore
             */
            provide: stepper.STEPPER_GLOBAL_OPTIONS,
            useValue: ɵ0
        }
    ], imports: [[CommonModule, stepper.CdkStepperModule, tooltip.TooltipModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(StepperModule, [{
        type: i0.NgModule,
        args: [{
                imports: [CommonModule, stepper.CdkStepperModule, tooltip.TooltipModule],
                declarations: [C8yStepper, C8yStepperIcon, C8yStepperProgress, C8yStepperButtons],
                exports: [C8yStepper, stepper.CdkStep, C8yStepperIcon, C8yStepperButtons],
                providers: [
                    {
                        /**
                         * This emables additional states, like: edit, done and error
                         * These states are used to display custom icons, if needed.
                         * Any change in here will most probably result in not showing custom icons anymore
                         */
                        provide: stepper.STEPPER_GLOBAL_OPTIONS,
                        useValue: ɵ0
                    }
                ]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(StepperModule, { declarations: [C8yStepper, C8yStepperIcon, C8yStepperProgress, C8yStepperButtons], imports: [CommonModule, ɵngcc21.CdkStepperModule, ɵngcc8.TooltipModule], exports: [C8yStepper, ɵngcc21.CdkStep, C8yStepperIcon, C8yStepperButtons] }); })();
        return StepperModule;
    }());

    /**
     * Actions are functions that can be executed on the
     * current list item. They are displayed next to the
     * item and can be grouped in a dropdown.
     *
     * @example
     * ```html
     * <c8y-li>
     *   <c8y-li-action (click)="deleteDevice(device.id)" icon="times">
     *     Delete
     *   </c8y-li-action>
     *   <c8y-li-action (click)="(false)" icon="rocket">
     *     Launch to space
     *   </c8y-li-action>
     * </c8y-li>
     * ```
     */
    var ListItemActionComponent = /** @class */ (function () {
        function ListItemActionComponent() {
            /**
             * An EventEmitter to determine what to do if the
             * action is triggered.
             */
            this.click = new i0.EventEmitter();
        }
ListItemActionComponent.ɵfac = function ListItemActionComponent_Factory(t) { return new (t || ListItemActionComponent)(); };
ListItemActionComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ListItemActionComponent, selectors: [["c8y-list-item-action"], ["c8y-li-action"]], viewQuery: function ListItemActionComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c0, 5);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.template = _t.first);
    } }, inputs: { label: "label", icon: "icon" }, outputs: { click: "click" }, ngContentSelectors: _c1, decls: 2, vars: 0, consts: [["template", ""], [3, "title", "click"], [3, "c8yIcon", 4, "ngIf"], [4, "ngIf"], [3, "c8yIcon"]], template: function ListItemActionComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵtemplate(0, ListItemActionComponent_ng_template_0_Template, 7, 5, "ng-template", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);
    } }, directives: [ɵngcc6.NgIf, IconDirective], pipes: [C8yTranslatePipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ListItemActionComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-list-item-action, c8y-li-action',
                template: "<ng-template #template>\n  <li>\n    <button title=\"{{ label | translate }}\" (click)=\"click.emit($event)\">\n      <i [c8yIcon]=\"icon\" *ngIf=\"icon\"></i>&nbsp;\n      <span *ngIf=\"label\">{{ label | translate }}</span>\n      <ng-content></ng-content>\n    </button>\n  </li>\n</ng-template>\n"
            }]
    }], function () { return []; }, { click: [{
            type: i0.Output
        }], template: [{
            type: i0.ViewChild,
            args: ['template', { static: false }]
        }], label: [{
            type: i0.Input
        }], icon: [{
            type: i0.Input
        }] }); })();
        return ListItemActionComponent;
    }());
    ListItemActionComponent.propDecorators = {
        template: [{ type: i0.ViewChild, args: ['template', { static: false },] }],
        label: [{ type: i0.Input }],
        icon: [{ type: i0.Input }],
        click: [{ type: i0.Output }]
    };

    /**
     * Display collapsed content on a list item. Can be
     * used for more detailed information. Use it with
     * content projection.
     *
     * @example
     * ```html
     * <c8y-li>
     *   <c8y-collapsed>
     *     <strong>I am only visible if extended</strong>
     *   </c8y-collapsed>
     * </c8y-li>
     * ```
     */
    var ListItemCollapseComponent = /** @class */ (function () {
        function ListItemCollapseComponent() {
            /**
             * The way how to toggle collapse state.
             * button (default) - additional button for toggle collapse state
             * row - toggling collapse state by clicking to entire row.
             */
            this.collapseWay = 'button';
        }
ListItemCollapseComponent.ɵfac = function ListItemCollapseComponent_Factory(t) { return new (t || ListItemCollapseComponent)(); };
ListItemCollapseComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ListItemCollapseComponent, selectors: [["c8y-list-item-collapse"], ["c8y-li-collapse"]], inputs: { collapseWay: "collapseWay" }, ngContentSelectors: _c1, decls: 1, vars: 0, template: function ListItemCollapseComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ListItemCollapseComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-list-item-collapse, c8y-li-collapse',
                template: "<ng-content></ng-content>\n"
            }]
    }], function () { return []; }, { collapseWay: [{
            type: i0.Input
        }] }); })();
        return ListItemCollapseComponent;
    }());
    ListItemCollapseComponent.propDecorators = {
        collapseWay: [{ type: i0.Input }]
    };

    /**
     * The footer can be used with either content projection
     * or a simple string as an input.
     *
     * @example
     * ```html
     * <c8y-li>
     *   Content
     *   <c8y-li-footer>I am a footer</c8y-li-footer>
     * </c8y-li>
     * ```
     */
    var ListItemFooterComponent = /** @class */ (function () {
        function ListItemFooterComponent() {
        }
ListItemFooterComponent.ɵfac = function ListItemFooterComponent_Factory(t) { return new (t || ListItemFooterComponent)(); };
ListItemFooterComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ListItemFooterComponent, selectors: [["c8y-list-item-footer"], ["c8y-li-footer"]], inputs: { footer: "footer" }, ngContentSelectors: _c1, decls: 2, vars: 1, consts: [[4, "ngIf"]], template: function ListItemFooterComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵtemplate(0, ListItemFooterComponent_span_0_Template, 2, 1, "span", 0);
        ɵngcc0.ɵɵprojection(1);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.footer);
    } }, directives: [ɵngcc6.NgIf], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ListItemFooterComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-list-item-footer, c8y-li-footer',
                template: "<span *ngIf=\"footer\">{{footer}}</span>\n<ng-content></ng-content>\n"
            }]
    }], function () { return []; }, { footer: [{
            type: i0.Input
        }] }); })();
        return ListItemFooterComponent;
    }());
    ListItemFooterComponent.propDecorators = {
        footer: [{ type: i0.Input }]
    };

    /**
     * A list item is a representation of an item inside a list and
     * can be used to compose different styles in a list (mainly in a
     * <c8y-group-list>-component but also in others like the
     * <c8y-typeahead>-component):
     *  - a list with a footer
     *  - a list with one or multiple actions
     *  - an icon
     *  - a checkbox or radio input
     *
     * The item can be composed via content projection. The following
     * example shows a radio list with an icon, two actions
     * and a footer:
     * ```html
     * <c8y-list-group>
     *   <c8y-li
     *     *c8yFor="
     *       let device of devices;
     *       let i = index;
     *     "
     *   >
     *     <c8y-li-radio (onSelect)="updateSelected($event, device)"></c8y-li-radio>
     *     <c8y-li-icon [icon]="'rocket'"></c8y-li-icon>
     *     {{ i + 1 }}. {{ device.name || '-' }}
     *     <c8y-li-footer>
     *       Device id: <a [routerLink]="['/device', device.id]">{{ device.id }}</a>
     *     </c8y-li-footer>
     *     <c8y-li-action (click)="deleteDevice(device.id)" icon="times">
     *       Delete
     *     </c8y-li-action>
     *     <c8y-li-action (click)="(false)" icon="rocket">
     *       Launch to space
     *     </c8y-li-action>
     *   </c8y-li>
     * </c8y-list-group>
     * ```
     */
    var ListItemComponent = /** @class */ (function () {
        /**
         * @ignore
         */
        function ListItemComponent(element) {
            this.element = element;
            /**
             * If set to true, the class "active" is added which
             * indicates that the current row is active.
             */
            this.active = false;
            /**
             * Indicates if the current list item is collapsed. You can trigger the collapsing from
             * any element event by toggling this value.
             *
             * @example
             * ```html
             * <c8y-li #li (click)="li.collapsed = !li.collapsed">
             *  Toggle
             *  <c8y-li-collapse>
             *    I can be toggled by clicking on the row.
             *  </c8y-li-collapse
             * </c8y-li>
             * ``
             */
            this.collapsed = true;
            /**
             * Indicates if the current list item is selectable.
             */
            this.selectable = true;
            /**
             * An event emitter which is triggered when the user collapses the content
             * via the chevron on the right.
             */
            this.collapsedChange = new i0.EventEmitter();
            /**
             * @ignore
             */
            this.showFooter = false;
            /**
             * @ignore
             */
            this.showActions = false;
            /**
             * @ignore
             */
            this.showCollapse = false;
            /**
             * @ignore
             */
            this.dropdownUp = false;
            this.pulse$ = new rxjs.Subject();
            this.destroy$ = new rxjs.Subject();
            this.ACTION_ITEM_HEIGHT = 40;
        }
        /**
         * @ignore
         */
        ListItemComponent.prototype.ngOnInit = function () {
            var _this = this;
            this.pulse$
                .pipe(operators.filter(function (apply) { return !!apply; }), operators.tap(function () { return _this.element.nativeElement.classList.remove('c8y-list--pulse'); }), operators.delay(100), operators.tap(function () { return _this.element.nativeElement.classList.add('c8y-list--pulse'); }), operators.takeUntil(this.destroy$))
                .subscribe();
        };
        /**
         * @ignore
         */
        ListItemComponent.prototype.ngAfterContentChecked = function () {
            this.actions = this.itemActions.toArray();
            this.showFooter = this.itemFooter != null;
            this.showActions = this.itemActions.length > 0;
            this.showCollapse = this.itemCollapse != null;
        };
        /**
         * @ignore
         */
        ListItemComponent.prototype.ngOnDestroy = function () {
            this.destroy$.next();
            this.destroy$.complete();
        };
        /**
         * A helper function which helps to determine if the dropdown
         * should toggle up.
         */
        ListItemComponent.prototype.showDropdownUp = function () {
            var listItemRect = this.element.nativeElement.getBoundingClientRect();
            var dropdownTop = listItemRect.top;
            var dropdownHeightWithToggle = (1 + this.itemActions.length) * this.ACTION_ITEM_HEIGHT;
            var availableHeight = window.innerHeight;
            var dropdownDownFits = dropdownTop + dropdownHeightWithToggle <= availableHeight;
            this.dropdownUp = !dropdownDownFits;
        };
        /**
         * Toggles the collapse state and emits this state as
         * collapsedChange output as boolean.
         * @param $event Pass optional an event to stop propagation.
         */
        ListItemComponent.prototype.toggleCollapsed = function ($event) {
            if ($event) {
                $event.stopPropagation();
            }
            this.collapsed = !this.collapsed;
            this.collapsedChange.emit(this.collapsed);
        };
        /**
         * Highlights the list-item. This method should be used to show the
         * user that something within this item was changed.
         */
        ListItemComponent.prototype.pulse = function () {
            this.pulse$.next(true);
        };
ListItemComponent.ɵfac = function ListItemComponent_Factory(t) { return new (t || ListItemComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
ListItemComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ListItemComponent, selectors: [["c8y-list-item"], ["c8y-li"]], contentQueries: function ListItemComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, ListItemFooterComponent, 5);
        ɵngcc0.ɵɵcontentQuery(dirIndex, ListItemCollapseComponent, 5);
        ɵngcc0.ɵɵcontentQuery(dirIndex, ListItemActionComponent, 4);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.itemFooter = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.itemCollapse = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.itemActions = _t);
    } }, hostAttrs: [1, "c8y-list__item"], hostVars: 2, hostBindings: function ListItemComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("active", ctx.active);
    } }, inputs: { active: "active", collapsed: "collapsed", selectable: "selectable" }, outputs: { collapsedChange: "collapsedChange" }, ngContentSelectors: _c58, decls: 11, vars: 7, consts: [[3, "ngClass"], [1, "c8y-list__item__block"], [1, "c8y-list__item__body", "text-truncate-wrap", 3, "click"], ["class", "c8y-list__item__footer", 4, "ngIf"], ["class", "c8y-list__item__actions", 4, "ngIf"], [3, "collapse", "isAnimated", 4, "ngIf"], [1, "c8y-list__item__footer"], [1, "c8y-list__item__actions"], ["class", "collapse-btn", "type", "button", 3, "title", "click", 4, "ngIf"], ["class", "dropdown", "dropdown", "", 3, "dropup", "onShown", 4, "ngIf"], [4, "ngIf"], ["type", "button", 1, "collapse-btn", 3, "title", "click"], [3, "c8yIcon"], ["dropdown", "", 1, "dropdown", 3, "dropup", "onShown"], ["dropdownToggle", "", "type", "button", "aria-haspopup", "true", 1, "dropdown-toggle", "c8y-dropdown", 3, "title"], ["class", "dropdown-menu dropdown-menu-right", 4, "dropdownMenu"], [1, "dropdown-menu", "dropdown-menu-right"], [4, "ngFor", "ngForOf"], [4, "ngTemplateOutlet"], [3, "collapse", "isAnimated"], [1, "c8y-list__item__collapse--container"]], template: function ListItemComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c56);
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵprojection(2);
        ɵngcc0.ɵɵprojection(3, 1);
        ɵngcc0.ɵɵprojection(4, 2);
        ɵngcc0.ɵɵelementStart(5, "div", 2);
        ɵngcc0.ɵɵlistener("click", function ListItemComponent_Template_div_click_5_listener() { return ctx.itemCollapse && ctx.itemCollapse.collapseWay === "row" && ctx.toggleCollapsed(); });
        ɵngcc0.ɵɵprojection(6, 3);
        ɵngcc0.ɵɵprojection(7, 4);
        ɵngcc0.ɵɵtemplate(8, ListItemComponent_div_8_Template, 2, 0, "div", 3);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(9, ListItemComponent_div_9_Template, 4, 3, "div", 4);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(10, ListItemComponent_div_10_Template, 3, 2, "div", 5);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction2(4, _c57, !ctx.collapsed, ctx.itemCollapse && ctx.itemCollapse.collapseWay === "row"));
        ɵngcc0.ɵɵadvance(8);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showFooter);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showCollapse && (ctx.itemCollapse && ctx.itemCollapse.collapseWay === "button") || ctx.showActions);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showCollapse);
    } }, directives: [ɵngcc6.NgClass, ɵngcc6.NgIf, IconDirective, ɵngcc9.BsDropdownDirective, ɵngcc9.BsDropdownToggleDirective, ɵngcc9.BsDropdownMenuDirective, ɵngcc6.NgForOf, ɵngcc6.NgTemplateOutlet, ɵngcc10.CollapseDirective], pipes: [C8yTranslatePipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ListItemComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-list-item, c8y-li',
                template: "<div [ngClass]=\"{ 'expanded': !collapsed, interact: (itemCollapse && itemCollapse.collapseWay === 'row')}\">\n  <div class=\"c8y-list__item__block\">\n    <ng-content select=\"c8y-list-item-radio, c8y-li-radio\"></ng-content>\n    <ng-content select=\"c8y-list-item-checkbox, c8y-li-checkbox\"></ng-content>\n\n    <ng-content select=\"c8y-list-item-icon, c8y-li-icon\"></ng-content>\n\n    <div class=\"c8y-list__item__body text-truncate-wrap\" (click)=\"(itemCollapse && itemCollapse.collapseWay === 'row') && toggleCollapsed()\">\n      <ng-content select=\"c8y-list-item-body, c8y-li-body\"></ng-content>\n      <ng-content></ng-content>\n      <div class=\"c8y-list__item__footer\" *ngIf=\"showFooter\">\n        <ng-content select=\"c8y-list-item-footer, c8y-li-footer\"></ng-content>\n      </div>\n    </div>\n\n    <div class=\"c8y-list__item__actions\" *ngIf=\"(showCollapse && (itemCollapse && itemCollapse.collapseWay === 'button')) || showActions\">\n      <button\n        class=\"collapse-btn\"\n        title=\"{{ 'Expand' | translate }}\"\n        type=\"button\"\n        (click)=\"toggleCollapsed($event)\"\n        [attr.aria-expanded]=\"!collapsed\"\n        *ngIf=\"showCollapse && itemCollapse.collapseWay === 'button'\"\n      >\n        <i [c8yIcon]=\"'chevron-down'\"></i>\n      </button>\n      <div\n        class=\"dropdown\"\n        dropdown\n        [dropup]=\"dropdownUp\"\n        *ngIf=\"showActions\"\n        (onShown)=\"showDropdownUp()\"\n      >\n        <button\n          class=\"dropdown-toggle c8y-dropdown\"\n          dropdownToggle\n          title=\"{{ 'Actions' | translate }}\"\n          type=\"button\"\n          aria-haspopup=\"true\"\n        >\n          <i [c8yIcon]=\"'ellipsis-v'\"></i>\n        </button>\n        <ul class=\"dropdown-menu dropdown-menu-right\" *dropdownMenu>\n          <ng-content select=\"c8y-list-item-action, c8y-li-action\"></ng-content>\n          <ng-container *ngFor=\"let action of actions\">\n            <ng-container *ngTemplateOutlet=\"action.template\"></ng-container>\n          </ng-container>\n        </ul>\n      </div>\n\n      <ng-content select=\"c8y-list-item-action, c8y-li-action\" *ngIf=\"showActions\"></ng-content>\n    </div>\n  </div>\n\n  <div *ngIf=\"showCollapse\" [collapse]=\"collapsed\" [isAnimated]=\"true\">\n    <div class=\"c8y-list__item__collapse--container\">\n      <ng-content select=\"c8y-list-item-collapse, c8y-li-collapse\"></ng-content>\n    </div>\n  </div>\n</div>\n",
                host: {
                    class: 'c8y-list__item'
                }
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { active: [{
            type: i0.Input
        }, {
            type: i0.HostBinding,
            args: ['class.active']
        }], collapsed: [{
            type: i0.Input
        }], selectable: [{
            type: i0.Input
        }], collapsedChange: [{
            type: i0.Output
        }], itemFooter: [{
            type: i0.ContentChild,
            args: [ListItemFooterComponent, { static: false }]
        }], itemActions: [{
            type: i0.ContentChildren,
            args: [ListItemActionComponent]
        }], itemCollapse: [{
            type: i0.ContentChild,
            args: [ListItemCollapseComponent, { static: false }]
        }] }); })();
        return ListItemComponent;
    }());
    ListItemComponent.ctorParameters = function () { return [
        { type: i0.ElementRef }
    ]; };
    ListItemComponent.propDecorators = {
        active: [{ type: i0.Input }, { type: i0.HostBinding, args: ['class.active',] }],
        collapsed: [{ type: i0.Input }],
        selectable: [{ type: i0.Input }],
        collapsedChange: [{ type: i0.Output }],
        itemFooter: [{ type: i0.ContentChild, args: [ListItemFooterComponent, { static: false },] }],
        itemActions: [{ type: i0.ContentChildren, args: [ListItemActionComponent,] }],
        itemCollapse: [{ type: i0.ContentChild, args: [ListItemCollapseComponent, { static: false },] }]
    };

    /**
     * The li-body component can be used to define the body.
     * Usually it doesn't need to be used, as it is the default
     * content projected to a <c8y-li>.
     */
    var ListItemBodyComponent = /** @class */ (function () {
        function ListItemBodyComponent() {
        }
ListItemBodyComponent.ɵfac = function ListItemBodyComponent_Factory(t) { return new (t || ListItemBodyComponent)(); };
ListItemBodyComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ListItemBodyComponent, selectors: [["c8y-list-item-body"], ["c8y-li-body"]], inputs: { body: "body" }, ngContentSelectors: _c1, decls: 2, vars: 1, consts: [[4, "ngIf"]], template: function ListItemBodyComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵtemplate(0, ListItemBodyComponent_span_0_Template, 2, 1, "span", 0);
        ɵngcc0.ɵɵprojection(1);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.body);
    } }, directives: [ɵngcc6.NgIf], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ListItemBodyComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-list-item-body, c8y-li-body',
                template: "<span *ngIf=\"body\">{{body}}</span>\n<ng-content></ng-content>\n"
            }]
    }], function () { return []; }, { body: [{
            type: i0.Input
        }] }); })();
        return ListItemBodyComponent;
    }());
    ListItemBodyComponent.propDecorators = {
        body: [{ type: i0.Input }]
    };

    /**
     * A component to display a radio button in a c8y-li. Use it with content projection. It
     * can be used standalone or with an ngModel.
     *
     * @example
     * ```html
     * <c8y-li>
     *   <c8y-li-radio></c8y-li-radio>
     * </c8y-li>
     * ```
     */
    var ListItemRadioComponent = /** @class */ (function () {
        function ListItemRadioComponent() {
            /**
             * Indicates if the radio is selected.
             */
            this.selected = false;
            /**
             * The name of the radio (use different names for different radio groups).
             */
            this.name = 'list_item_radio';
            /**
             * Indicates if the radio is disabled.
             */
            this.disabled = false;
            /**
             * An event emitted as soon as the radio is selected.
             */
            this.onSelect = new i0.EventEmitter();
        }
        /**
         * Resets the native radio element.
         */
        ListItemRadioComponent.prototype.reset = function () {
            this.radio.nativeElement.checked = false;
        };
        /**
         * @ignore
         */
        ListItemRadioComponent.prototype.ngOnChanges = function (changes) {
            if (changes.selected && !changes.selected.firstChange) {
                this.onSelect.emit(changes.selected.currentValue);
            }
        };
        /**
         * Triggered when the radio is changed.
         * @param checked Should it be checked or not?
         */
        ListItemRadioComponent.prototype.change = function (checked) {
            this.onSelect.emit(checked);
            this.model = this.value;
            if (this.onChange) {
                this.onChange(this.model);
            }
            if (this.onTouched) {
                this.onTouched();
            }
        };
        /**
         * Registers an onChange event.
         */
        ListItemRadioComponent.prototype.registerOnChange = function (fn) {
            this.onChange = fn;
        };
        /**
         * Registers an onTouch event.
         */
        ListItemRadioComponent.prototype.registerOnTouched = function (fn) {
            this.onTouched = fn;
        };
        /**
         * @ignore
         */
        ListItemRadioComponent.prototype.writeValue = function (value) {
            this.model = value;
        };
ListItemRadioComponent.ɵfac = function ListItemRadioComponent_Factory(t) { return new (t || ListItemRadioComponent)(); };
ListItemRadioComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ListItemRadioComponent, selectors: [["c8y-list-item-radio"], ["c8y-li-radio"]], viewQuery: function ListItemRadioComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c59, 7);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.radio = _t.first);
    } }, hostAttrs: [1, "c8y-list__item__radio"], inputs: { selected: "selected", name: "name", disabled: "disabled", value: "value" }, outputs: { onSelect: "onSelect" }, features: [ɵngcc0.ɵɵProvidersFeature([
            {
                provide: forms.NG_VALUE_ACCESSOR,
                multi: true,
                useExisting: i0.forwardRef(function () { return ListItemRadioComponent; })
            }
        ]), ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c1, decls: 5, vars: 3, consts: [[1, "c8y-radio"], ["type", "radio", 3, "name", "checked", "disabled", "change"], ["radio", ""]], template: function ListItemRadioComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "label", 0);
        ɵngcc0.ɵɵelementStart(1, "input", 1, 2);
        ɵngcc0.ɵɵlistener("change", function ListItemRadioComponent_Template_input_change_1_listener($event) { ctx.change($event.target.checked); return false; });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(3, "span");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵprojection(4);
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("name", ctx.name)("checked", ctx.selected)("disabled", ctx.disabled);
    } }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ListItemRadioComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-list-item-radio, c8y-li-radio',
                template: "<label class=\"c8y-radio\">\n  <input\n    #radio\n    type=\"radio\"\n    [name]=\"name\"\n    [checked]=\"selected\"\n    (change)=\"change($event.target.checked); (false)\"\n    [disabled]=\"disabled\"\n  />\n  <span></span>\n</label>\n<ng-content></ng-content>\n",
                host: {
                    class: 'c8y-list__item__radio'
                },
                providers: [
                    {
                        provide: forms.NG_VALUE_ACCESSOR,
                        multi: true,
                        useExisting: i0.forwardRef(function () { return ListItemRadioComponent; })
                    }
                ]
            }]
    }], function () { return []; }, { selected: [{
            type: i0.Input
        }], name: [{
            type: i0.Input
        }], disabled: [{
            type: i0.Input
        }], onSelect: [{
            type: i0.Output
        }], radio: [{
            type: i0.ViewChild,
            args: ['radio', { static: true }]
        }], value: [{
            type: i0.Input
        }] }); })();
        return ListItemRadioComponent;
    }());
    ListItemRadioComponent.propDecorators = {
        radio: [{ type: i0.ViewChild, args: ['radio', { static: true },] }],
        selected: [{ type: i0.Input }],
        name: [{ type: i0.Input }],
        disabled: [{ type: i0.Input }],
        onSelect: [{ type: i0.Output }],
        value: [{ type: i0.Input }]
    };

    /**
     * Allows to display a timeline. Should be used with
     * content projection.
     *
     * @example
     * ```html
     * <c8y-list-group>
     *   <c8y-li-timeline>
     *     24.April 2020
     *     <c8y-li>
     *       Hello
     *     </c8y-li>
     *   </c8y-li-timeline>
     * </c8y-list-group>
     * ```
     */
    var ListItemTimelineComponent = /** @class */ (function () {
        function ListItemTimelineComponent() {
        }
ListItemTimelineComponent.ɵfac = function ListItemTimelineComponent_Factory(t) { return new (t || ListItemTimelineComponent)(); };
ListItemTimelineComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ListItemTimelineComponent, selectors: [["c8y-list-item-timeline"], ["c8y-li-timeline"]], hostAttrs: [1, "c8y-list--timeline__item"], ngContentSelectors: _c61, decls: 3, vars: 0, consts: [[1, "c8y-list--timeline__item__date"]], template: function ListItemTimelineComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c60);
        ɵngcc0.ɵɵelementStart(0, "small", 0);
        ɵngcc0.ɵɵprojection(1);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵprojection(2, 1);
    } }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ListItemTimelineComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-list-item-timeline, c8y-li-timeline',
                template: "<small class=\"c8y-list--timeline__item__date\">\n  <ng-content></ng-content>\n</small>\n<ng-content select=\"c8y-li, c8y-list-item\"></ng-content>\n",
                host: {
                    class: 'c8y-list--timeline__item'
                }
            }]
    }], function () { return []; }, null); })();
        return ListItemTimelineComponent;
    }());

    /**
     * List groups are flexible and powerful components for displaying
     * both simple lists of elements and complex ones with custom content.
     *
     * @example
     * ```html
     * <c8y-list-group>
     *   <c8y-li>
     *     Plain <strong>Text</strong>
     *   </c8y-li>
     *   <c8y-li>
     *     <c8y-li-icon [icon]="'rocket'"></c8y-li-icon>
     *     Icon
     *   </c8y-li>
     *   <c8y-li>
     *     <c8y-li-radio></c8y-li-radio>
     *     Radio
     *   </c8y-li>
     *   <c8y-li>
     *     <c8y-li-checkbox></c8y-li-checkbox>
     *     Checkbox
     *   </c8y-li>
     *   <c8y-li>
     *     Content
     *     <c8y-li-footer>
     *       Footer
     *     </c8y-li-footer>
     *   </c8y-li>
     *   <c8y-li>
     *     Content
     *     <c8y-li-action icon="rocket">
     *       Launch
     *     </c8y-li-action>
     *   </c8y-li>
     *   <c8y-li>
     *     Content
     *     <c8y-li-collapse>
     *       Collapsed content
     *     </c8y-li-collapse>
     *   </c8y-li>
     * </c8y-list-group>
     * ```
     */
    var ListGroupComponent = /** @class */ (function () {
        function ListGroupComponent() {
            /**
             * @ignore
             */
            this.timeline = false;
        }
        /**
         * @ignore
         */
        ListGroupComponent.prototype.ngAfterContentChecked = function () {
            this.timeline = !!this.timelineComponent;
        };
ListGroupComponent.ɵfac = function ListGroupComponent_Factory(t) { return new (t || ListGroupComponent)(); };
ListGroupComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ListGroupComponent, selectors: [["c8y-list-group"]], contentQueries: function ListGroupComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, ListItemTimelineComponent, 5);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.timelineComponent = _t.first);
    } }, hostAttrs: [1, "c8y-list__group"], hostVars: 2, hostBindings: function ListGroupComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("c8y-list--timeline", ctx.timeline);
    } }, ngContentSelectors: _c1, decls: 1, vars: 0, template: function ListGroupComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ListGroupComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-list-group',
                template: "<ng-content></ng-content>\n\n",
                host: {
                    class: 'c8y-list__group'
                }
            }]
    }], function () { return []; }, { timeline: [{
            type: i0.HostBinding,
            args: ['class.c8y-list--timeline']
        }], timelineComponent: [{
            type: i0.ContentChild,
            args: [ListItemTimelineComponent, { static: false }]
        }] }); })();
        return ListGroupComponent;
    }());
    ListGroupComponent.propDecorators = {
        timeline: [{ type: i0.HostBinding, args: ['class.c8y-list--timeline',] }],
        timelineComponent: [{ type: i0.ContentChild, args: [ListItemTimelineComponent, { static: false },] }]
    };

    /**
     * An icon to display on a list item. Use it with content projection.
     *
     * @example
     * ```html
     * <c8y-li>
     *   <c8y-li-icon="rocket"></c8y-li-icon>
     * </c8y-li>
     * ```
     */
    var ListItemIconComponent = /** @class */ (function () {
        function ListItemIconComponent() {
        }
ListItemIconComponent.ɵfac = function ListItemIconComponent_Factory(t) { return new (t || ListItemIconComponent)(); };
ListItemIconComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ListItemIconComponent, selectors: [["c8y-list-item-icon"], ["c8y-li-icon"]], hostAttrs: [1, "c8y-list__item__icon"], inputs: { icon: "icon", status: "status" }, ngContentSelectors: _c1, decls: 2, vars: 1, consts: [[3, "c8yIcon", "ngClass", 4, "ngIf"], [3, "c8yIcon", "ngClass"]], template: function ListItemIconComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵtemplate(0, ListItemIconComponent_i_0_Template, 1, 2, "i", 0);
        ɵngcc0.ɵɵprojection(1);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.icon);
    } }, directives: [ɵngcc6.NgIf, IconDirective, ɵngcc6.NgClass], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ListItemIconComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-list-item-icon, c8y-li-icon',
                template: "<i [c8yIcon]=\"icon\" [ngClass]=\"status\" *ngIf=\"icon\"></i>\n<ng-content></ng-content>",
                host: {
                    class: 'c8y-list__item__icon'
                }
            }]
    }], function () { return []; }, { icon: [{
            type: i0.Input
        }], status: [{
            type: i0.Input
        }] }); })();
        return ListItemIconComponent;
    }());
    ListItemIconComponent.propDecorators = {
        icon: [{ type: i0.Input }],
        status: [{ type: i0.Input }]
    };

    /**
     * A component to display checkboxes in a c8y-li. Use it with content projection. It
     * can be used standalone or with an ngModel.
     *
     * @example
     * ```html
     * <c8y-li>
     *   <c8y-li-checkbox></c8y-li-checkbox>
     * </c8y-li>
     * ```
     */
    var ListItemCheckboxComponent = /** @class */ (function (_super) {
        __extends(ListItemCheckboxComponent, _super);
        function ListItemCheckboxComponent(renderer, elementRef) {
            var _this = _super.call(this, renderer, elementRef) || this;
            _this.renderer = renderer;
            _this.elementRef = elementRef;
            /**
             * Indicates if the checkbox is selected.
             */
            _this.selected = false;
            /**
             * Indicates if the checkbox is disabled.
             */
            _this.disabled = false;
            /**
             * An event emitted as soon as the checkbox is selected.
             */
            _this.onSelect = new i0.EventEmitter();
            return _this;
        }
        /**
         * @ignore
         */
        ListItemCheckboxComponent.prototype.ngOnChanges = function (changes) {
            if (changes.selected && !changes.selected.firstChange) {
                this.onSelect.emit(changes.selected.currentValue);
            }
        };
        /**
         * Selects the checkbox.
         * @param value The value to pass.
         */
        ListItemCheckboxComponent.prototype.select = function (value) {
            this.onSelect.emit(value);
            this.onChange(value);
        };
ListItemCheckboxComponent.ɵfac = function ListItemCheckboxComponent_Factory(t) { return new (t || ListItemCheckboxComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
ListItemCheckboxComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ListItemCheckboxComponent, selectors: [["c8y-list-item-checkbox"], ["c8y-li-checkbox"]], hostAttrs: [1, "c8y-list__item__check"], inputs: { selected: "selected", disabled: "disabled" }, outputs: { onSelect: "onSelect" }, features: [ɵngcc0.ɵɵProvidersFeature([
            {
                provide: forms.NG_VALUE_ACCESSOR,
                multi: true,
                useExisting: i0.forwardRef(function () { return ListItemCheckboxComponent; })
            }
        ]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c1, decls: 4, vars: 2, consts: [[1, "c8y-checkbox"], ["type", "checkbox", 1, "form-control", 3, "disabled", "checked", "change"]], template: function ListItemCheckboxComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "label", 0);
        ɵngcc0.ɵɵelementStart(1, "input", 1);
        ɵngcc0.ɵɵlistener("change", function ListItemCheckboxComponent_Template_input_change_1_listener($event) { ctx.select($event.target.checked); return false; });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(2, "span");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵprojection(3);
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("disabled", ctx.disabled)("checked", ctx.selected);
    } }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ListItemCheckboxComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-list-item-checkbox, c8y-li-checkbox',
                template: "<label class=\"c8y-checkbox\">\n  <input\n    type=\"checkbox\"\n    class=\"form-control\"\n    [disabled]=\"disabled\"\n    [checked]=\"selected\"\n    (change)=\"select($event.target.checked); (false)\"\n  />\n  <span></span>\n</label>\n<ng-content></ng-content>\n",
                host: {
                    class: 'c8y-list__item__check'
                },
                providers: [
                    {
                        provide: forms.NG_VALUE_ACCESSOR,
                        multi: true,
                        useExisting: i0.forwardRef(function () { return ListItemCheckboxComponent; })
                    }
                ]
            }]
    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }]; }, { selected: [{
            type: i0.Input
        }], disabled: [{
            type: i0.Input
        }], onSelect: [{
            type: i0.Output
        }] }); })();
        return ListItemCheckboxComponent;
    }(forms.CheckboxControlValueAccessor));
    ListItemCheckboxComponent.ctorParameters = function () { return [
        { type: i0.Renderer2 },
        { type: i0.ElementRef }
    ]; };
    ListItemCheckboxComponent.propDecorators = {
        selected: [{ type: i0.Input }],
        disabled: [{ type: i0.Input }],
        onSelect: [{ type: i0.Output }]
    };

    /**
     * The list-group module allows you to compose different styles
     * of lists used in Cumulocity IoT. They can consist of plain
     * text, actions, icons and more.
     *
     * @example
     * ```html
     * <c8y-list-group>
     *   <c8y-li>Item 1<c8y-li>
     *   <c8y-li>Item 2<c8y-li>
     * </c8y-list-group>
     * ```
     */
    var ListGroupModule = /** @class */ (function () {
        function ListGroupModule() {
        }
ListGroupModule.ɵfac = function ListGroupModule_Factory(t) { return new (t || ListGroupModule)(); };
ListGroupModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: ListGroupModule });
ListGroupModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule, collapse.CollapseModule.forRoot(), dropdown.BsDropdownModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ListGroupModule, [{
        type: i0.NgModule,
        args: [{
                imports: [CommonModule, collapse.CollapseModule.forRoot(), dropdown.BsDropdownModule],
                declarations: [
                    ListGroupComponent,
                    ListItemComponent,
                    ListItemIconComponent,
                    ListItemBodyComponent,
                    ListItemFooterComponent,
                    ListItemActionComponent,
                    ListItemCollapseComponent,
                    ListItemCheckboxComponent,
                    ListItemRadioComponent,
                    ListItemTimelineComponent
                ],
                exports: [
                    ListGroupComponent,
                    ListItemComponent,
                    ListItemIconComponent,
                    ListItemBodyComponent,
                    ListItemFooterComponent,
                    ListItemActionComponent,
                    ListItemCollapseComponent,
                    ListItemCheckboxComponent,
                    ListItemRadioComponent,
                    ListItemTimelineComponent
                ]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ListGroupModule, { declarations: [ListGroupComponent, ListItemComponent, ListItemIconComponent, ListItemBodyComponent, ListItemFooterComponent, ListItemActionComponent, ListItemCollapseComponent, ListItemCheckboxComponent, ListItemRadioComponent, ListItemTimelineComponent], imports: [CommonModule, ɵngcc10.CollapseModule, ɵngcc9.BsDropdownModule], exports: [ListGroupComponent, ListItemComponent, ListItemIconComponent, ListItemBodyComponent, ListItemFooterComponent, ListItemActionComponent, ListItemCollapseComponent, ListItemCheckboxComponent, ListItemRadioComponent, ListItemTimelineComponent] }); })();
        return ListGroupModule;
    }());

    /**
     * Audit log component allows to show audits list. Component fetches audit records for the source object given as input.
     *
     * **Example**
     *
     * ```html
     *  <c8y-audit-log [source]="sourceId"></c8y-audit-log>
     * ```
     */
    var AuditLogComponent = /** @class */ (function () {
        /**
         * @ignore
         */
        function AuditLogComponent(audit) {
            this.audit = audit;
        }
        /**
         * After page view is initialized, component gets audit records from auditRecords endpoint.
         */
        AuditLogComponent.prototype.ngOnInit = function () {
            return __awaiter(this, void 0, void 0, function () {
                var _a;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            if (!this.source) return [3 /*break*/, 2];
                            _a = this;
                            return [4 /*yield*/, this.audit.list({
                                    withTotalPages: true,
                                    source: this.source
                                })];
                        case 1:
                            _a.records = _b.sent();
                            _b.label = 2;
                        case 2: return [2 /*return*/];
                    }
                });
            });
        };
AuditLogComponent.ɵfac = function AuditLogComponent_Factory(t) { return new (t || AuditLogComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc3.AuditService)); };
AuditLogComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: AuditLogComponent, selectors: [["c8y-audit-log"]], inputs: { source: "source" }, decls: 3, vars: 1, consts: [[1, "inner-scroll"], [1, "timeline-list", "list-condensed", "m-t-16"], ["class", "timeline-list-item flex-row", 4, "c8yFor", "c8yForOf"], [1, "timeline-list-item", "flex-row"], [1, "timeline-item-date", "text-right"], [1, "timeline-item-content", "flex-row"], [1, "list-item-body"], [1, "row", "text-break-word"], [1, "col-md-5"], [1, "text-truncate"], [1, "text-muted"], [1, "col-md-7"], [1, "small", "text-truncate-wrap"]], template: function AuditLogComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "ul", 1);
        ɵngcc0.ɵɵtemplate(2, AuditLogComponent_li_2_Template, 18, 10, "li", 2);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("c8yForOf", ctx.records);
    } }, directives: [ForOfDirective], pipes: [DatePipe, C8yTranslatePipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AuditLogComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-audit-log',
                template: "<div class=\"inner-scroll\">\n  <ul class=\"timeline-list list-condensed m-t-16\">\n    <li class=\"timeline-list-item flex-row\" *c8yFor=\"let record of records\">\n      <small class=\"timeline-item-date text-right\">\n        <span>{{ record.time | c8yDate }}</span>\n      </small>\n      <div class=\"timeline-item-content flex-row\">\n        <div class=\"list-item-body\">\n          <div class=\"row text-break-word\">\n            <div class=\"col-md-5\">\n              <span class=\"text-truncate\">{{ record.activity | translate }}</span>\n              <small class=\"text-muted\">{{ record.user }}</small>\n            </div>\n            <div class=\"col-md-7\">\n              <div class=\"small text-truncate-wrap\">{{ record.text | translate }}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </li>\n  </ul>\n</div>\n"
            }]
    }], function () { return [{ type: ɵngcc3.AuditService }]; }, { source: [{
            type: i0.Input
        }] }); })();
        return AuditLogComponent;
    }());
    AuditLogComponent.ctorParameters = function () { return [
        { type: client.AuditService }
    ]; };
    AuditLogComponent.propDecorators = {
        source: [{ type: i0.Input }]
    };

    /** Audit module allows to show audits list. */
    var AuditLogModule = /** @class */ (function () {
        function AuditLogModule() {
        }
AuditLogModule.ɵfac = function AuditLogModule_Factory(t) { return new (t || AuditLogModule)(); };
AuditLogModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: AuditLogModule });
AuditLogModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AuditLogModule, [{
        type: i0.NgModule,
        args: [{
                declarations: [AuditLogComponent],
                imports: [CommonModule],
                exports: [AuditLogComponent]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(AuditLogModule, { declarations: [AuditLogComponent], imports: [CommonModule], exports: [AuditLogComponent] }); })();
        return AuditLogModule;
    }());

    /* tslint:disable:max-classes-per-file */
    var CellRendererContext = /** @class */ (function () {
        function CellRendererContext() {
        }
        return CellRendererContext;
    }());
    var CellRendererDefDirective = /** @class */ (function () {
        function CellRendererDefDirective(template) {
            this.template = template;
        }
CellRendererDefDirective.ɵfac = function CellRendererDefDirective_Factory(t) { return new (t || CellRendererDefDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };
CellRendererDefDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CellRendererDefDirective, selectors: [["", "c8yCellRendererDef", ""]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CellRendererDefDirective, [{
        type: i0.Directive,
        args: [{ selector: '[c8yCellRendererDef]' }]
    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();
        return CellRendererDefDirective;
    }());
    CellRendererDefDirective.ctorParameters = function () { return [
        { type: i0.TemplateRef }
    ]; };
    var HeaderCellRendererDefDirective = /** @class */ (function () {
        function HeaderCellRendererDefDirective(template) {
            this.template = template;
        }
HeaderCellRendererDefDirective.ɵfac = function HeaderCellRendererDefDirective_Factory(t) { return new (t || HeaderCellRendererDefDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };
HeaderCellRendererDefDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: HeaderCellRendererDefDirective, selectors: [["", "c8yHeaderCellRendererDef", ""]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HeaderCellRendererDefDirective, [{
        type: i0.Directive,
        args: [{ selector: '[c8yHeaderCellRendererDef]' }]
    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();
        return HeaderCellRendererDefDirective;
    }());
    HeaderCellRendererDefDirective.ctorParameters = function () { return [
        { type: i0.TemplateRef }
    ]; };

    /* tslint:disable:max-classes-per-file */
    var FilteringFormRendererContext = /** @class */ (function () {
        function FilteringFormRendererContext() {
        }
        return FilteringFormRendererContext;
    }());
    var FilteringFormRendererDefDirective = /** @class */ (function () {
        function FilteringFormRendererDefDirective(template) {
            this.template = template;
        }
FilteringFormRendererDefDirective.ɵfac = function FilteringFormRendererDefDirective_Factory(t) { return new (t || FilteringFormRendererDefDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };
FilteringFormRendererDefDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: FilteringFormRendererDefDirective, selectors: [["", "c8yFilteringFormRendererDef", ""]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FilteringFormRendererDefDirective, [{
        type: i0.Directive,
        args: [{ selector: '[c8yFilteringFormRendererDef]' }]
    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();
        return FilteringFormRendererDefDirective;
    }());
    FilteringFormRendererDefDirective.ctorParameters = function () { return [
        { type: i0.TemplateRef }
    ]; };

    var ColumnDirective = /** @class */ (function () {
        function ColumnDirective() {
        }
ColumnDirective.ɵfac = function ColumnDirective_Factory(t) { return new (t || ColumnDirective)(); };
ColumnDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: ColumnDirective, selectors: [["c8y-column"]], contentQueries: function ColumnDirective_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, CellRendererDefDirective, 5);
        ɵngcc0.ɵɵcontentQuery(dirIndex, HeaderCellRendererDefDirective, 5);
        ɵngcc0.ɵɵcontentQuery(dirIndex, FilteringFormRendererDefDirective, 5);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cellRendererDef = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerCellRendererDef = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.filteringFormRendererDef = _t.first);
    } }, inputs: { name: "name" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ColumnDirective, [{
        type: i0.Directive,
        args: [{ selector: 'c8y-column' }]
    }], function () { return []; }, { name: [{
            type: i0.Input
        }], cellRendererDef: [{
            type: i0.ContentChild,
            args: [CellRendererDefDirective, { static: false }]
        }], headerCellRendererDef: [{
            type: i0.ContentChild,
            args: [HeaderCellRendererDefDirective, { static: false }]
        }], filteringFormRendererDef: [{
            type: i0.ContentChild,
            args: [FilteringFormRendererDefDirective, { static: false }]
        }] }); })();
        return ColumnDirective;
    }());
    ColumnDirective.propDecorators = {
        name: [{ type: i0.Input }],
        cellRendererDef: [{ type: i0.ContentChild, args: [CellRendererDefDirective, { static: false },] }],
        headerCellRendererDef: [{ type: i0.ContentChild, args: [HeaderCellRendererDefDirective, { static: false },] }],
        filteringFormRendererDef: [{ type: i0.ContentChild, args: [FilteringFormRendererDefDirective, { static: false },] }]
    };

    var minColumnGridTrackSize = 80;
    /** Maps column types to relative widths. */
    var ratiosByColumnTypes = {
        /** The width ration for icon column type. */
        icon: 1,
        /** The width ration for numeric column type. */
        numeric: 1,
        /** The width ration for short text column type. */
        'text-short': 1.67,
        /** The width ration for long text column type. */
        'text-long': 3.33
    };
    /** Filtering actions. */
    exports.FilteringActionType = void 0;
    (function (FilteringActionType) {
        /** Action invoked when filter settings are to be applied. */
        FilteringActionType["ApplyFilter"] = "APPLY_FILTER";
        /** Action invoked when filter settings are to be cleared. */
        FilteringActionType["ResetFilter"] = "RESET_FILTER";
    })(exports.FilteringActionType || (exports.FilteringActionType = {}));

    var GridDataSource = /** @class */ (function () {
        function GridDataSource() {
            this.loadingSubject = new rxjs.BehaviorSubject(true);
            this.dataSourceSubject = new rxjs.BehaviorSubject([]);
            this.dataStatsSubject = new rxjs.BehaviorSubject({
                size: 0,
                filteredSize: 0,
                currentPage: 0,
                currentPageSize: 0,
                firstPageSize: 0
            });
            this.dataSelectionSubject = new rxjs.BehaviorSubject({
                filteredDataIds: []
            });
            this.resultListSubject = new rxjs.Subject();
            this.loading$ = this.loadingSubject.asObservable();
            this.data$ = this.dataSourceSubject.asObservable();
            this.stats$ = this.dataStatsSubject.asObservable();
            this.selection$ = this.dataSelectionSubject.asObservable();
            this.resultList$ = this.resultListSubject.asObservable();
        }
        GridDataSource.prototype.connect = function (collectionViewer) {
            return this.data$;
        };
        GridDataSource.prototype.disconnect = function (collectionViewer) {
            this.loadingSubject.complete();
            this.dataSourceSubject.complete();
            this.dataStatsSubject.complete();
            this.dataSelectionSubject.complete();
        };
        GridDataSource.prototype.loadData = function (_b) {
            var _this = this;
            var rows = _b.rows, columns = _b.columns, pagination = _b.pagination, searchText = _b.searchText, serverSideDataCallback = _b.serverSideDataCallback, selectable = _b.selectable, selectionPrimaryKey = _b.selectionPrimaryKey, infiniteScroll = _b.infiniteScroll, _c = _b.reload, reload = _c === void 0 ? false : _c;
            var clientSideData$ = this.toObservable(rows).pipe(operators.map(function (initialData) {
                var filteredSize = 0;
                var filteredDataIds = [];
                var transformedData = lodashEs.flow(function (data) { return _this.doClientSideSearch({ data: data, columns: columns, searchText: searchText }); }, function (data) { return _this.doClientSideFiltering({ data: data, columns: columns }); }, function (data) { return _this.doClientSideSorting({ data: data, columns: columns }); }, function (data) {
                    filteredSize = data.length;
                    filteredDataIds = selectable
                        ? data.map(function (item) { return item[selectionPrimaryKey]; })
                        : filteredDataIds;
                    return data;
                }, function (data) { return _this.doClientSidePagination({ data: data, pagination: pagination }); })(initialData);
                _this.dataStatsSubject.next({
                    size: initialData.length,
                    filteredSize: filteredSize,
                    currentPage: pagination.currentPage,
                    currentPageSize: transformedData.length,
                    firstPageSize: pagination.pageSize
                });
                _this.dataSelectionSubject.next({ filteredDataIds: filteredDataIds });
                return transformedData;
            }));
            var serverSideData$ = rxjs.defer(function () { return _this.toObservable(serverSideDataCallback({
                columns: columns,
                searchText: searchText,
                pagination: pagination,
                selection: { enabled: selectable, primaryKey: selectionPrimaryKey }
            })); }).pipe(operators.map(function (result) {
                var data = result.data, paging = result.paging, size = result.size, filteredSize = result.filteredSize, filteredDataIds = result.filteredDataIds;
                _this.dataStatsSubject.next({
                    size: size,
                    filteredSize: filteredSize,
                    currentPage: paging.currentPage,
                    currentPageSize: data.length,
                    nextPage: paging.nextPage,
                    firstPageSize: paging.pageSize
                });
                _this.dataSelectionSubject.next({ filteredDataIds: filteredDataIds || [] });
                _this.resultListSubject.next(result);
                return data;
            }));
            var data$ = typeof serverSideDataCallback === 'function' ? serverSideData$ : clientSideData$;
            rxjs.of([])
                .pipe(operators.tap(function () { return _this.loadingSubject.next(true); }), operators.switchMap(function () { return data$; }), operators.catchError(function (err) {
                _this.dataStatsSubject.next({
                    size: 0,
                    filteredSize: 0,
                    currentPage: 0,
                    currentPageSize: 0,
                    firstPageSize: 0
                });
                _this.dataSelectionSubject.next({ filteredDataIds: [] });
                return rxjs.of([]);
            }), operators.finalize(function () { return _this.loadingSubject.next(false); }))
                .subscribe(function (result) {
                var data = infiniteScroll && !reload ? __spreadArray(__spreadArray([], __read(_this.dataSourceSubject.value)), __read(result)) : result;
                _this.dataSourceSubject.next(data);
            });
        };
        GridDataSource.prototype.resolveValue = function (x, path) {
            return lodashEs.get(x, path);
        };
        GridDataSource.prototype.resolveFunction = function (x) {
            return typeof x === 'function' ? x() : x;
        };
        GridDataSource.prototype.normalizeNil = function (x) {
            return lodashEs.isNil(x) ? '' : x;
        };
        GridDataSource.prototype.doClientSideFiltering = function (_b) {
            var _this = this;
            var data = _b.data, columns = _b.columns;
            return columns.reduce(function (result, column) {
                var filterPredicate = column.filterPredicate;
                if (typeof filterPredicate === 'string') {
                    return _this.doClientSideSearch({
                        data: result,
                        columns: [column],
                        searchText: filterPredicate
                    });
                }
                if (typeof filterPredicate === 'function') {
                    return result.filter(function (item) { return filterPredicate(item, column.path); });
                }
                return result;
            }, data);
        };
        GridDataSource.prototype.doClientSideSearch = function (_b) {
            var _this = this;
            var data = _b.data, columns = _b.columns, searchText = _b.searchText;
            var propPaths = columns.map(function (_b) {
                var path = _b.path;
                return path;
            }).filter(function (column) { return !lodashEs.isNil(column); });
            var regexSearch = this.createRegexSearch(searchText);
            return data.filter(function (item) {
                var itemWithResolvedValues = lodashEs.flow(function (x) { return propPaths.map(function (propPath) { return lodashEs.get(x, propPath); }); }, function (x) { return lodashEs.mapValues(x, _this.resolveFunction); }, function (x) { return lodashEs.omitBy(x, lodashEs.isNil); })(item);
                var cellValues = Object.values(itemWithResolvedValues);
                return cellValues.some(function (cellValue) { return regexSearch.test(cellValue.toString()); });
            });
        };
        GridDataSource.prototype.doClientSideSorting = function (_b) {
            var data = _b.data, columns = _b.columns;
            var actives = columns.filter(function (_b) {
                var sortOrder = _b.sortOrder;
                return !!sortOrder;
            });
            var sortingState = {
                iteratees: actives.map(function (_b) {
                    var path = _b.path;
                    return path;
                }).map(function (path) { return function (item) { var _a; return (_a = lodashEs.get(item, path)) !== null && _a !== void 0 ? _a : ''; }; }),
                orders: actives.map(function (_b) {
                    var sortOrder = _b.sortOrder;
                    return sortOrder;
                })
            };
            return lodashEs.orderBy(data, sortingState.iteratees, sortingState.orders);
        };
        GridDataSource.prototype.doClientSidePagination = function (_b) {
            var data = _b.data, pagination = _b.pagination;
            return pagination
                ? lodashEs.get(lodashEs.chunk(data, pagination.pageSize), pagination.currentPage - 1, [])
                : data;
        };
        GridDataSource.prototype.createRegexSearch = function (filterValue) {
            return RegExp(escapeRegExpPattern(filterValue), 'i');
        };
        GridDataSource.prototype.toObservable = function (x) {
            return rxjs.isObservable(x) ? x : x instanceof Promise ? rxjs.from(x) : rxjs.of(x);
        };
        return GridDataSource;
    }());
    /**
     *
     * @param string pattern Regex pattern.
     * @return string The escaped regex.
     * @see https://stackoverflow.com/a/3561711/2013891
     */
    function escapeRegExpPattern(pattern) {
        if (pattern === void 0) { pattern = ''; }
        return pattern.replace(/[.*+?^${}()|[\]\\]/g, '\\$&');
    }

    var DataGridComponent = /** @class */ (function () {
        function DataGridComponent(sanitizer, hostRef, cd, cfr) {
            var _this = this;
            this.sanitizer = sanitizer;
            this.hostRef = hostRef;
            this.cd = cd;
            this.cfr = cfr;
            /** The title for the data grid, it's displayed in the grid's header. */
            this.title = gettext('Items');
            /** The label for load more button. */
            this.loadMoreItemsLabel = gettext('Load more items');
            /** The label for loading indicator. */
            this.loadingItemsLabel = gettext('Loading items…');
            /** Determines whether text search input is shown in the grid's header. */
            this.showSearch = false;
            this.dataSource = new GridDataSource();
            this.filteringLabelsParams = {
                filteredItemsCount: 0,
                allItemsCount: 0
            };
            this.paginationLabelParams = {
                pageFirstItemIdx: 0,
                pageLastItemIdx: 0,
                itemsTotal: 0
            };
            this.possiblePageSizes = [10, 15, 20, 30, 50];
            this.minPossiblePageSize = Math.min.apply(Math, __spreadArray([], __read(this.possiblePageSizes)));
            this.selectable = false;
            this.selectionPrimaryKey = 'id';
            this.displayOptions = {
                striped: true,
                bordered: false,
                gridHeader: true,
                filter: true
            };
            /** Sets initial search text. */
            this.searchText = '';
            /** Shows the warning for the sub-assets counter */
            this.showCounterWarning = false;
            /** Emits an event when mouse is over a row. */
            this.rowMouseOver = new i0.EventEmitter();
            /** Emits an event when mouse leaves a row. */
            this.rowMouseLeave = new i0.EventEmitter();
            /** Emits an event when a row is clicked. */
            this.rowClick = new i0.EventEmitter();
            /** Emits an event when grid's configuration is changed. */
            this.onConfigChange = new i0.EventEmitter();
            /** Emits an event when a filter is applied in a column. */
            this.onFilter = new i0.EventEmitter();
            /** Emits an event when items selection changes. The array contains keys of selected items (key property is defined by `selectionPrimaryKey`). */
            this.itemsSelect = new i0.EventEmitter();
            /** Emits an event when reload button is clicked. */
            this.onReload = new i0.EventEmitter();
            this.columnNames = [];
            this.styles = {
                tableCursor: 'auto',
                gridTemplateColumns: undefined,
                gridInfiniteScrollColumn: undefined
            };
            this.searchText$ = new i0.EventEmitter();
            this.filteringApplied = false;
            this.totalPagesCount$ = new rxjs.BehaviorSubject(Infinity);
            this.hidePagination$ = this.totalPagesCount$.pipe(operators.map(function (totalPagesCount) { return totalPagesCount <= 1; }), operators.delay(0) // prevents ExpressionChangedAfterItHasBeenCheckedError
            );
            this.selectedItemIds = [];
            this.currentPageSelectionState = {
                allSelected: false,
                allDeselected: true
            };
            this.builtInActionType = {
                Edit: "EDIT" /* Edit */,
                Delete: "DELETE" /* Delete */,
                Export: "EXPORT" /* Export */
            };
            this.resizeHandleMouseDown$ = new i0.EventEmitter();
            this.resizeHandleContainerMouseMove$ = new i0.EventEmitter();
            this.resizeHandleContainerMouseUp$ = new i0.EventEmitter();
            this.unsubscribe$ = new rxjs.Subject();
            /**
             * Event emitter used for loading data grid data with debounce.
             * This is used to avoid having multiple this.loadData() function calls.
             */
            this.triggerLoadData = new i0.EventEmitter();
            this.triggerLoadData.pipe(operators.debounceTime(1), operators.takeUntil(this.unsubscribe$)).subscribe(function () {
                _this.loadData();
            });
        }
        Object.defineProperty(DataGridComponent.prototype, "_columns", {
            /** The list of columns to be displayed in the grid. */
            set: function (columns) {
                this.columns = columns || [];
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DataGridComponent.prototype, "_rows", {
            /** The list of rows to be displayed in the grid (used for client side data). */
            set: function (rows) {
                this.rows = rows || [];
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DataGridComponent.prototype, "_pagination", {
            /** Pagination settings, e.g. allows for setting current page or page size. */
            set: function (pagination) {
                this.pagination = pagination;
                var pageSize = lodashEs.get(this.pagination, 'pageSize');
                if (pageSize &&
                    !this.possiblePageSizes.find(function (possiblePageSize) { return possiblePageSize === pageSize; })) {
                    this.pagination = Object.assign(Object.assign({}, this.pagination), { pageSize: 10 });
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DataGridComponent.prototype, "_infiniteScroll", {
            /** Sets load more mode. */
            set: function (infiniteScroll) {
                this.infiniteScroll = infiniteScroll;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DataGridComponent.prototype, "_serverSideDataCallback", {
            /**
             * Sets a callback function which will be invoked whenever data needs to be loaded from server.
             * The function should take [[DataSourceModifier]] and return [[ServerSideDataResult]].
             */
            set: function (serverSideDataCallback) {
                this.serverSideDataCallback = serverSideDataCallback;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DataGridComponent.prototype, "_selectable", {
            /** Determines whether items can be selected by clicking a checkbox in the first column. */
            set: function (selectable) {
                this.selectable = selectable;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DataGridComponent.prototype, "_selectionPrimaryKey", {
            /** Determines which item's property will be used to distinguish selection status. */
            set: function (selectionPrimaryKey) {
                this.selectionPrimaryKey = selectionPrimaryKey;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DataGridComponent.prototype, "_displayOptions", {
            /** Sets display options. */
            set: function (displayOptions) {
                this.displayOptions = Object.assign(Object.assign({}, this.displayOptions), displayOptions);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DataGridComponent.prototype, "_actionControls", {
            /** Sets action controls (actions available for individual items). */
            set: function (actionControls) {
                this.actionControls = actionControls || [];
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DataGridComponent.prototype, "_bulkActionControls", {
            /** Sets bulk action controls (actions available for items selected by user). */
            set: function (bulkActionControls) {
                this.bulkActionControls = bulkActionControls || [];
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(DataGridComponent.prototype, "_headerActionControls", {
            /** Sets header action controls (actions available from data grid header). */
            set: function (headerActionControls) {
                this.headerActionControls = headerActionControls || [];
            },
            enumerable: false,
            configurable: true
        });
        DataGridComponent.prototype.ngOnInit = function () {
            var _this = this;
            this.searchText$
                .pipe(operators.takeUntil(this.unsubscribe$), operators.debounceTime(300), operators.distinctUntilChanged(), operators.tap(function (searchText) {
                _this.searchText = searchText;
            }))
                .subscribe(function () {
                _this.reload();
            });
            if (this.selectable) {
                rxjs.combineLatest(this.dataSource.data$, this.itemsSelect.asObservable())
                    .pipe(operators.takeUntil(this.unsubscribe$))
                    .subscribe(function (_a) {
                    var _b = __read(_a, 1), data = _b[0];
                    var currentPageEmpty = data.length === 0;
                    _this.currentPageSelectionState = {
                        allSelected: currentPageEmpty ? false : data.every(function (item) { return _this.isItemSelected(item); }),
                        allDeselected: currentPageEmpty ? true : data.every(function (item) { return !_this.isItemSelected(item); })
                    };
                });
            }
            this.dataSource.stats$.pipe(operators.takeUntil(this.unsubscribe$)).subscribe(function (stats) {
                _this.createLoadMoreComponent(stats);
                _this.updateFilteringLabelsParams(stats);
                _this.updatePaginationLabelParams(stats);
            });
            if (this.refresh) {
                this.refresh.pipe(operators.takeUntil(this.unsubscribe$)).subscribe(function () {
                    _this.cancel();
                    _this.reload();
                });
            }
        };
        DataGridComponent.prototype.ngOnChanges = function (event) {
            if (!event._actionControls || event._actionControls.firstChange) {
                this.triggerLoadData.emit();
            }
            this.updateColumns();
        };
        DataGridComponent.prototype.ngAfterViewInit = function () {
            this.updateGridColumnsSize();
            this.thEls = this.thRefs.toArray().map(function (_a) {
                var nativeElement = _a.nativeElement;
                return nativeElement;
            });
            this.setupResizeHandle();
        };
        DataGridComponent.prototype.ngOnDestroy = function () {
            this.unsubscribe$.next();
            this.unsubscribe$.complete();
        };
        DataGridComponent.prototype.trackByName = function (index, item) {
            return item.name;
        };
        DataGridComponent.prototype.resolveCellValue = function (row, path) {
            var _this = this;
            return lodashEs.flow([
                function (x) { return _this.dataSource.resolveValue(x, path); },
                this.dataSource.resolveFunction,
                this.dataSource.normalizeNil
            ])(row);
        };
        DataGridComponent.prototype.changeSortOrder = function (columnName) {
            var column = this.columns.find(function (_a) {
                var name = _a.name;
                return name === columnName;
            });
            if (column) {
                var sortOrder = column.sortOrder;
                if (!sortOrder) {
                    this.updateSorting([columnName], 'asc');
                }
                else if (sortOrder === 'asc') {
                    this.updateSorting([columnName], 'desc');
                }
                else {
                    this.updateSorting([columnName], '');
                }
            }
        };
        DataGridComponent.prototype.updateSorting = function (columnNames, sortOrder) {
            this.columns = this.columns.map(function (column) {
                if (columnNames.includes(column.name)) {
                    return Object.assign(Object.assign({}, column), { sortOrder: sortOrder });
                }
                return column;
            });
            this.emitConfigChange();
            this.reload();
        };
        DataGridComponent.prototype.applyFilter = function (columnName, dropdown, filteringModifier) {
            this.updateFiltering([columnName], {
                type: exports.FilteringActionType.ApplyFilter,
                payload: { filteringModifier: filteringModifier }
            });
            dropdown.hide();
            this.onFilter.emit({ columnName: columnName, dropdown: dropdown, filteringModifier: filteringModifier });
        };
        DataGridComponent.prototype.resetFilter = function (columnName, dropdown) {
            this.updateFiltering([columnName], { type: exports.FilteringActionType.ResetFilter });
            dropdown.hide();
        };
        DataGridComponent.prototype.clearFilters = function () {
            this.updateFiltering(this.columns.map(function (_a) {
                var name = _a.name;
                return name;
            }), {
                type: exports.FilteringActionType.ResetFilter
            });
        };
        DataGridComponent.prototype.updateFiltering = function (columnNames, action, reload) {
            if (reload === void 0) { reload = true; }
            this.columns = this.columns.map(function (column) {
                if (columnNames.includes(column.name)) {
                    return Object.assign(Object.assign({}, column), (action.type === exports.FilteringActionType.ApplyFilter
                        ? action.payload.filteringModifier
                        : { filterPredicate: undefined, externalFilterQuery: undefined }));
                }
                return column;
            });
            this.updateFilteringApplied();
            if (reload) {
                this.reload();
            }
        };
        DataGridComponent.prototype.updateFilteringApplied = function () {
            this.filteringApplied = this.columns.some(this.isColumnFilteringApplied);
        };
        DataGridComponent.prototype.isColumnFilteringApplied = function (column) {
            var filterable = column.filterable, filterPredicate = column.filterPredicate, externalFilterQuery = column.externalFilterQuery;
            return !!(filterable && (filterPredicate || externalFilterQuery));
        };
        DataGridComponent.prototype.updatePagination = function (_a) {
            var itemsPerPage = _a.itemsPerPage, page = _a.page;
            this.pagination = Object.assign(Object.assign({}, this.pagination), { pageSize: itemsPerPage, currentPage: page });
            this.loadData();
            this.emitConfigChange();
        };
        DataGridComponent.prototype.clickReload = function () {
            this.searchText = '';
            this.reload();
            this.onReload.next();
        };
        DataGridComponent.prototype.reload = function () {
            this.pagination = Object.assign(Object.assign({}, this.pagination), { currentPage: 1 });
            this.recreateLoadMoreComponent = true;
            this.loadData(true);
            this.scrollToTop();
        };
        DataGridComponent.prototype.loadNextPage = function () {
            var _this = this;
            this.pagination = Object.assign(Object.assign({}, this.pagination), { currentPage: this.pagination.nextPage });
            this.loadData();
            return this.dataSource.resultList$
                .pipe(operators.take(1)) // in order for `toPromise` to work, the observable needs to complete
                .toPromise()
                .then(function (result) {
                return Object.assign(Object.assign({}, result), { paging: Object.assign(Object.assign({}, result.paging), { next: _this.loadNextPage.bind(_this) }) });
            });
        };
        DataGridComponent.prototype.getCellRendererSpec = function (_a) {
            var value = _a.value, row = _a.row, columnName = _a.columnName;
            return this._getCellRendererSpec({ type: 'CELL', value: value, row: row, columnName: columnName });
        };
        DataGridComponent.prototype.getHeaderCellRendererSpec = function (_a) {
            var value = _a.value, columnName = _a.columnName;
            return this._getCellRendererSpec({ type: 'HEADER', value: value, row: undefined, columnName: columnName });
        };
        DataGridComponent.prototype.getFilteringFormRendererSpec = function (_a) {
            var column = _a.column, dropdown = _a.dropdown;
            return {
                renderer: lodashEs.get(this.getColumnRenderer(column), 'filteringFormRendererDef.template') ||
                    column.filteringFormRendererComponent,
                context: {
                    property: column,
                    applyFilter: this.applyFilter.bind(this, column.name, dropdown),
                    resetFilter: this.resetFilter.bind(this, column.name, dropdown)
                }
            };
        };
        DataGridComponent.prototype.setAllItemsSelected = function (selected) {
            var _this = this;
            this.dataSource.selection$
                .pipe(operators.first())
                .subscribe(function (_a) {
                var filteredDataIds = _a.filteredDataIds;
                return _this.setItemsSelected(filteredDataIds, selected);
            });
        };
        DataGridComponent.prototype.setAllItemsInCurrentPageSelected = function (selected) {
            var _this = this;
            this.dataSource.data$.pipe(operators.first()).subscribe(function (data) { return _this.setItemsSelected(data, selected); });
        };
        DataGridComponent.prototype.setItemsSelected = function (items, selected) {
            var _this = this;
            var itemIds = items.map(function (item) { return typeof item === 'object' ? item[_this.selectionPrimaryKey] : item; });
            this.selectedItemIds = selected
                ? lodashEs.union(this.selectedItemIds, itemIds)
                : lodashEs.without.apply(void 0, __spreadArray([this.selectedItemIds], __read(itemIds)));
            this.itemsSelect.emit(this.selectedItemIds);
        };
        DataGridComponent.prototype.cancel = function () {
            this.selectedItemIds = [];
            this.itemsSelect.emit(this.selectedItemIds);
        };
        DataGridComponent.prototype.isItemSelected = function (item) {
            return this.selectedItemIds.includes(item[this.selectionPrimaryKey]);
        };
        DataGridComponent.prototype.onColumnDrop = function (_a) {
            var previousIndex = _a.previousIndex, currentIndex = _a.currentIndex;
            var differentIndex = previousIndex !== currentIndex;
            if (differentIndex) {
                var column = this.columns.splice(previousIndex, 1);
                this.columns.splice(currentIndex, 0, column[0]);
            }
            this.updateColumnNames();
            this.updateGridColumnsSize();
        };
        DataGridComponent.prototype.updateGridColumnsSize = function () {
            this.styles = Object.assign(Object.assign({}, this.styles), { gridTemplateColumns: this.sanitizer.bypassSecurityTrustStyle(this.columns
                    .filter(function (column) { return column.visible; })
                    .map(function (_a) {
                    var gridTrackSize = _a.gridTrackSize;
                    return gridTrackSize;
                })
                    .join(' ')), gridInfiniteScrollColumn: this.sanitizer.bypassSecurityTrustStyle("1 / span " + this.columns.filter(function (column) { return column.visible; }).length) });
            this.emitConfigChange();
        };
        DataGridComponent.prototype.loadData = function (reload) {
            if (reload === void 0) { reload = false; }
            var _a = this, rows = _a.rows, columns = _a.columns, pagination = _a.pagination, searchText = _a.searchText, serverSideDataCallback = _a.serverSideDataCallback, selectable = _a.selectable, selectionPrimaryKey = _a.selectionPrimaryKey, infiniteScroll = _a.infiniteScroll;
            this.dataSource.loadData({
                rows: rows,
                columns: columns,
                pagination: pagination,
                searchText: searchText,
                serverSideDataCallback: serverSideDataCallback,
                selectable: selectable,
                selectionPrimaryKey: selectionPrimaryKey,
                infiniteScroll: infiniteScroll,
                reload: reload
            });
        };
        DataGridComponent.prototype.emitConfigChange = function () {
            var columns = this.columns.map(function (_a) {
                var visible = _a.visible, sortOrder = _a.sortOrder, name = _a.name;
                return ({
                    visible: visible,
                    sortOrder: sortOrder,
                    name: name
                });
            });
            this.onConfigChange.emit({ columns: columns, pagination: this.pagination });
        };
        DataGridComponent.prototype.updateColumns = function () {
            var specialColumn = {
                gridTrackSize: 'minmax(42px, 82px)',
                sortable: false,
                positionFixed: true
            };
            var columns = __spreadArray(__spreadArray([
                this.selectable ? Object.assign(Object.assign({}, specialColumn), { name: "checkbox" /* Checkbox */ }) : undefined
            ], __read(this.columns)), [
                this.actionControls.length > 0
                    ? Object.assign(Object.assign({}, specialColumn), { name: "actions" /* Actions */ }) : undefined
            ]).filter(Boolean)
                .map(this.withColumnDefaults);
            this.columns = lodashEs.uniqBy(columns, 'name');
            this.updateColumnNames();
            this.updateGridColumnsSize();
            this.updateFilteringApplied();
        };
        DataGridComponent.prototype.withColumnDefaults = function (column) {
            var dataType = column.dataType || "text-short" /* TextShort */;
            var headerCSSClassName = column.headerCSSClassName, cellCSSClassName = column.cellCSSClassName;
            return Object.assign(Object.assign({ visible: true, positionFixed: false, sortable: true, sortOrder: '', filterable: false }, column), { dataType: dataType, gridTrackSize: column.gridTrackSize ||
                    "minmax(" + minColumnGridTrackSize + "px, " + ratiosByColumnTypes[dataType] + "fr)", headerCSSClassName: (typeof headerCSSClassName === 'string'
                    ? headerCSSClassName.split(' ')
                    : headerCSSClassName) || [], cellCSSClassName: (typeof cellCSSClassName === 'string' ? cellCSSClassName.split(' ') : cellCSSClassName) ||
                    [] });
        };
        DataGridComponent.prototype.updateColumnNames = function () {
            this.columnNames = this.columns.map(function (_a) {
                var name = _a.name;
                return name;
            });
        };
        DataGridComponent.prototype.setupResizeHandle = function () {
            var _this = this;
            var resizeHandleDrag$ = this.resizeHandleMouseDown$.pipe(operators.takeUntil(this.unsubscribe$), operators.tap(function () { return _this.clearMouseHighlights(); }), operators.mergeMap(function (_a) {
                var event = _a.event, targetColumnName = _a.targetColumnName;
                _this.columns = _this.columns.map(function (column) {
                    if (column.name === targetColumnName) {
                        return Object.assign(Object.assign({}, column), { headerCSSClassName: lodashEs.union(column.headerCSSClassName, ['header--being-resized']) });
                    }
                    return column;
                });
                _this.headerBeingResized = {
                    columnName: targetColumnName,
                    el: event.target.parentNode
                };
                _this.styles = Object.assign(Object.assign({}, _this.styles), { tableCursor: 'col-resize' });
                return _this.resizeHandleContainerMouseMove$.pipe(operators.tap(function () { return _this.clearMouseHighlights(); }), operators.takeUntil(_this.resizeHandleContainerMouseUp$));
            }));
            resizeHandleDrag$.subscribe(function (event) {
                requestAnimationFrame(function () {
                    _this.columns = _this.columns.map(function (column, i) {
                        if (column.name === _this.headerBeingResized.columnName) {
                            var wrapper = _this.hostRef.nativeElement;
                            // Read wrapper's offset left relative to the document.
                            var horizontalOffset = wrapper.getBoundingClientRect().left;
                            // Adjust with the wrapper horizontal scroll position.
                            var horizontalScrollOffset = wrapper.scrollLeft - horizontalOffset;
                            // Calculate the desired width.
                            var width = horizontalScrollOffset + event.clientX - (_this.headerBeingResized.el.offsetLeft || 0);
                            return Object.assign(Object.assign({}, column), {
                                // Update the column object with the new size value, enforce our minimum size.
                                gridTrackSize: Math.max(minColumnGridTrackSize, width) + "px"
                            });
                        }
                        // For the other headers which don't have a set width, fix it to their computed width.
                        if (column.gridTrackSize.startsWith('minmax')) {
                            return Object.assign(Object.assign({}, column), {
                                // isn't fixed yet (it would be a px value)
                                gridTrackSize: lodashEs.parseInt(_this.thEls[i].clientWidth) + "px"
                            });
                        }
                        return column;
                    });
                    /*
                     * Update the column sizes.
                     * Note: grid-template-columns sets the width for all columns in one value.
                     */
                    _this.updateGridColumnsSize();
                });
            });
            this.resizeHandleContainerMouseUp$.pipe(operators.takeUntil(this.unsubscribe$)).subscribe(function () {
                if (_this.headerBeingResized) {
                    _this.columns = _this.columns.map(function (column) {
                        if (column.name === _this.headerBeingResized.columnName) {
                            return Object.assign(Object.assign({}, column), { headerCSSClassName: lodashEs.without(column.headerCSSClassName, 'header--being-resized') });
                        }
                        return column;
                    });
                    _this.headerBeingResized = undefined;
                    _this.styles = Object.assign(Object.assign({}, _this.styles), { tableCursor: 'auto' });
                }
            });
        };
        DataGridComponent.prototype.clearMouseHighlights = function () {
            if (window.getSelection) {
                window.getSelection().removeAllRanges();
            }
        };
        DataGridComponent.prototype._getCellRendererSpec = function (_a) {
            var type = _a.type, value = _a.value, row = _a.row, columnName = _a.columnName;
            var column = this.columns.find(function (_a) {
                var name = _a.name;
                return name === columnName;
            });
            var columnRenderer = this.getColumnRenderer(column);
            var rendererTemplate = lodashEs.get(columnRenderer, (type === 'HEADER' ? 'headerCellRendererDef' : 'cellRendererDef') + ".template");
            var cellRendererComponent = column.cellRendererComponent, headerCellRendererComponent = column.headerCellRendererComponent;
            var rendererComponent = type === 'HEADER' ? headerCellRendererComponent : cellRendererComponent;
            return {
                renderer: rendererTemplate || rendererComponent,
                context: {
                    value: value,
                    item: row,
                    property: column
                }
            };
        };
        DataGridComponent.prototype.getColumnRenderer = function (column) {
            return this.columnRenderers.toArray().find(function (_a) {
                var name = _a.name;
                return name === column.name;
            });
        };
        DataGridComponent.prototype.updateFilteringLabelsParams = function (stats) {
            this.filteringLabelsParams = {
                filteredItemsCount: stats.filteredSize,
                allItemsCount: stats.size
            };
        };
        DataGridComponent.prototype.updatePaginationLabelParams = function (stats) {
            this.pagination.nextPage = stats.nextPage;
            var pageFirstItemIdx = (stats.currentPage - 1) * stats.firstPageSize + 1;
            this.paginationLabelParams = {
                pageFirstItemIdx: pageFirstItemIdx,
                pageLastItemIdx: pageFirstItemIdx + (stats.currentPageSize - 1),
                itemsTotal: stats.filteredSize
            };
        };
        DataGridComponent.prototype.createLoadMoreComponent = function (stats) {
            if (this.infiniteScroll &&
                stats &&
                stats.nextPage &&
                (!this.loadMoreComponent || this.recreateLoadMoreComponent)) {
                this.recreateLoadMoreComponent = false;
                this.infiniteScrollContainer.clear();
                var componentFactory = this.cfr.resolveComponentFactory(LoadMoreComponent);
                var componentRef = this.infiniteScrollContainer.createComponent(componentFactory);
                var instance = componentRef.instance;
                instance.useIntersection = this.infiniteScroll === 'auto' || this.infiniteScroll === 'hidden';
                instance.hidden = this.infiniteScroll === 'hidden';
                instance.paging = {
                    nextPage: stats.nextPage,
                    next: this.loadNextPage.bind(this)
                };
                instance.loadNextLabel = this.loadMoreItemsLabel;
                instance.loadingLabel = this.loadingItemsLabel;
                this.loadMoreComponent = instance;
            }
            else if (this.loadMoreComponent && !stats.nextPage) {
                this.loadMoreComponent.paging = {
                    nextPage: null
                };
            }
        };
        DataGridComponent.prototype.scrollToTop = function () {
            if (this.infiniteScroll) {
                this.scrollContainer.nativeElement.scrollTop = 0;
            }
        };
DataGridComponent.ɵfac = function DataGridComponent_Factory(t) { return new (t || DataGridComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc18.DomSanitizer), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver)); };
DataGridComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: DataGridComponent, selectors: [["c8y-data-grid"]], contentQueries: function DataGridComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, ColumnDirective, 4);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.columnRenderers = _t);
    } }, viewQuery: function DataGridComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c62, 7);
        ɵngcc0.ɵɵviewQuery(_c63, 5, i0.ViewContainerRef);
        ɵngcc0.ɵɵviewQuery(table.CdkHeaderCell, 5, i0.ElementRef);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.scrollContainer = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.infiniteScrollContainer = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.thRefs = _t);
    } }, inputs: { title: "title", loadMoreItemsLabel: "loadMoreItemsLabel", loadingItemsLabel: "loadingItemsLabel", showSearch: "showSearch", searchText: "searchText", showCounterWarning: "showCounterWarning", _columns: ["columns", "_columns"], _rows: ["rows", "_rows"], _pagination: ["pagination", "_pagination"], _infiniteScroll: ["infiniteScroll", "_infiniteScroll"], _serverSideDataCallback: ["serverSideDataCallback", "_serverSideDataCallback"], _selectable: ["selectable", "_selectable"], _selectionPrimaryKey: ["selectionPrimaryKey", "_selectionPrimaryKey"], _displayOptions: ["displayOptions", "_displayOptions"], _actionControls: ["actionControls", "_actionControls"], _bulkActionControls: ["bulkActionControls", "_bulkActionControls"], _headerActionControls: ["headerActionControls", "_headerActionControls"], refresh: "refresh" }, outputs: { rowMouseOver: "rowMouseOver", rowMouseLeave: "rowMouseLeave", rowClick: "rowClick", onConfigChange: "onConfigChange", onFilter: "onFilter", itemsSelect: "itemsSelect", onReload: "onReload" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c74, decls: 17, vars: 32, consts: [[1, "table-data-grid-scroll", 3, "ngClass"], ["scroll", ""], ["class", "table-data-grid__loading--wrapper", 4, "ngIf"], ["class", "table-data-grid-header separator large-padding", 4, "ngIf"], ["cdk-table", "", 1, "table", "table-hover", "table-filtered-sorted", "table-data-grid", "large-padding", 3, "dataSource", "trackBy", "mousemove", "mouseup"], [3, "cdkColumnDef", 4, "ngFor", "ngForOf", "ngForTrackBy"], ["cdkColumnDef", "infiniteScrollFooter"], ["cdk-footer-cell", "", 3, "grid-column", 4, "cdkFooterCellDef"], ["cdk-header-row", "", 4, "cdkHeaderRowDef"], ["cdk-row", "", 3, "mouseover", "mouseleave", "click", 4, "cdkRowDef", "cdkRowDefColumns"], [4, "ngIf"], ["class", "row m-0 p-t-40 p-b-40", 4, "ngIf"], ["class", "table-data-grid-footer separator large-padding", 4, "ngIf"], [1, "table-data-grid__loading--wrapper"], [1, "table-data-grid__loading--loader"], [3, "message"], [1, "table-data-grid-header", "separator", "large-padding"], [3, "ngClass"], [1, "flex-item-right"], [1, "btnbar", "flex-row"], [4, "ngFor", "ngForOf"], ["dropdown", "", "container", "body", "placement", "bottom left", 1, "dropdown", 3, "insideClick"], ["dropdownToggle", "", 1, "btnbar-btn", "c8y-dropdown", 3, "title"], ["c8yIcon", "columns", 1, "m-r-4"], ["class", "dropdown-menu", 3, "click", 4, "dropdownMenu"], [1, "btnbar-btn", "btn-link", 3, "title", "disabled", "click"], ["c8yIcon", "refresh", 1, "m-r-4"], ["class", "input-group input-group-search m-l-sm-16", 4, "ngIf"], ["class", "table-data-grid-header-bulk-actions animated slideInDown fast", 4, "ngIf"], [1, "hidden-xs", "hidden-sm"], ["placement", "right", "triggers", "focus", 1, "btn-clean", "text-primary", 3, "popover"], ["c8yIcon", "question-circle-o"], ["class", "hidden-xs hidden-sm", 4, "ngIf"], ["translate", "", 1, "label", "label-default", "m-r-4"], ["class", "m-r-4", "ngNonBindable", "", "translate", "", 3, "translateParams", 4, "ngIf"], ["translate", "", 1, "m-r-4", 3, "translateParams"], [1, "m-l-8", "btn", "btn-xs", "btn-default", "m-r-4", 3, "title", "click"], [1, "badge", "badge-info", "m-r-4"], ["translate", "", 3, "translateParams"], ["c8yIcon", "warning"], [4, "ngIf", "ngIfElse"], ["customTemplate", ""], [1, "btnbar-btn", "btn-link", 3, "title", "click"], ["c8yIcon", "headerActionControl.icon", 1, "m-r-4"], [4, "ngTemplateOutlet", "ngTemplateOutletContext"], [1, "dropdown-menu", 3, "click"], [1, "bg-white"], ["cdkDropList", "", 1, "list-group", "m-0", 3, "cdkDropListDropped"], ["cdkDrag", "", "cdkDragLockAxis", "y", 4, "ngFor", "ngForOf"], ["cdkDrag", "", "cdkDragLockAxis", "y"], [1, "list-group-item", "draggable-after", "p-0"], [1, "c8y-checkbox", "p-l-16", "p-r-32", "p-t-8", "p-b-8", "flex-item-v-stretch", 3, "title"], ["type", "checkbox", 3, "ngModel", "ngModelChange", "change"], [1, "input-group", "input-group-search", "m-l-sm-16"], ["type", "search", 1, "form-control", 3, "placeholder", "ngModel", "input"], [1, "input-group-addon"], ["c8yIcon", "search", 4, "ngIf"], ["c8yIcon", "times", "class", "pointer", 3, "click", 4, "ngIf"], ["c8yIcon", "search"], ["c8yIcon", "times", 1, "pointer", 3, "click"], [1, "table-data-grid-header-bulk-actions", "animated", "slideInDown", "fast"], [1, "visible-xs"], [3, "ngSwitch", 4, "ngFor", "ngForOf"], [1, "btnbar-btn", 3, "title", "click"], ["c8yIcon", "times"], [1, "interact", 3, "click"], [3, "ngSwitch"], ["class", "btnbar-btn", 3, "title", "click", 4, "ngSwitchCase"], ["class", "btnbar-btn", 3, "title", "click", 4, "ngSwitchDefault"], ["c8yIcon", "sign-out"], ["c8yIcon", "trash"], [3, "c8yIcon"], [3, "cdkColumnDef"], [4, "ngSwitchCase"], [4, "ngSwitchDefault"], ["cdk-header-cell", "", "data-type", "icon", 4, "cdkHeaderCellDef"], ["cdk-cell", "", "data-type", "icon", 4, "cdkCellDef"], ["cdk-header-cell", "", "data-type", "icon"], [1, "c8y-checkbox"], ["type", "checkbox", 3, "checked", "indeterminate", "change"], ["cdk-cell", "", "data-type", "icon"], ["type", "checkbox", 3, "checked", "change"], ["class", "dropdown", "dropdown", "", "container", "body", "placement", "bottom right", 4, "ngIf"], ["class", "btn btn-icon btn-xs btn-default", 3, "title", "click", 4, "ngSwitchCase"], ["class", "btn btn-dot showOnHover", 3, "title", "click", 4, "ngSwitchCase"], ["class", "btn btn-icon btn-xs btn-default", "container", "body", 3, "title", "tooltip", "click", 4, "ngSwitchDefault"], [1, "btn", "btn-icon", "btn-xs", "btn-default", 3, "title", "click"], ["c8yIcon", "pencil"], [1, "btn", "btn-dot", "showOnHover", 3, "title", "click"], ["c8yIcon", "minus-circle", 1, "text-danger"], ["container", "body", 1, "btn", "btn-icon", "btn-xs", "btn-default", 3, "title", "tooltip", "click"], ["dropdown", "", "container", "body", "placement", "bottom right", 1, "dropdown"], ["dropdownToggle", "", 1, "dropdown-toggle", "c8y-dropdown", 3, "title"], ["c8yIcon", "ellipsis-v"], ["class", "dropdown-menu dropdown-menu-right", 4, "dropdownMenu"], [1, "dropdown-menu", "dropdown-menu-right"], [3, "title", "click", 4, "ngSwitchCase"], [3, "title", "click", 4, "ngSwitchDefault"], [3, "title", "click"], ["c8yIcon", "download"], ["cdk-header-cell", "", 3, "ngClass", "sorted", "filtered", "hidden", 4, "cdkHeaderCellDef"], ["cdk-cell", "", 3, "ngClass", "hidden", 4, "cdkCellDef"], ["cdk-header-cell", "", 3, "ngClass"], [3, "title", 4, "ngIf"], ["class", "dropdown", "dropdown", "", "container", "body", "placement", "bottom left", 3, "insideClick", 4, "ngIf"], ["class", "btn-sort", 3, "title", "click", 4, "ngIf"], [1, "resize-handle", 3, "mousedown"], [3, "title"], [3, "spec"], ["dropdown", "bs-dropdown"], ["dropdownToggle", "", 1, "btn-header", "c8y-dropdown", 3, "title"], ["c8yIcon", "filter", 3, "title"], [1, "data-grid__dropdown"], [1, "btn-sort", 3, "title", "click"], ["c8yIcon", "long-arrow-up", 4, "ngSwitchCase"], ["c8yIcon", "long-arrow-down", 4, "ngSwitchCase"], ["c8yIcon", "exchange", 4, "ngSwitchDefault"], ["c8yIcon", "long-arrow-up"], ["c8yIcon", "long-arrow-down"], ["c8yIcon", "exchange"], ["cdk-cell", "", 3, "ngClass"], ["cdk-footer-cell", ""], ["infiniteScrollContainer", ""], ["cdk-header-row", ""], ["cdk-row", "", 3, "mouseover", "mouseleave", "click"], ["cdk-footer-row", "", 4, "cdkFooterRowDef"], ["cdk-footer-row", ""], [1, "row", "m-0", "p-t-40", "p-b-40"], [1, "col-md-4", "col-md-offset-4"], [1, "table-data-grid-footer", "separator", "large-padding"], [1, "col-sm-4", "no-gutter"], ["class", "counter", 4, "ngIf"], [1, "col-sm-4", "no-gutter", "text-center"], ["class", "form-group form-inline", 4, "ngIf"], [1, "col-sm-4", "no-gutter", "text-right"], ["previousText", " ", "nextText", " ", 3, "ngModel", "totalItems", "itemsPerPage", "maxSize", "boundaryLinks", "pageChanged", "numPages"], [1, "counter"], ["translate", "", 1, "text-muted", 3, "translateParams"], [1, "form-group", "form-inline"], [1, "m-r-4"], [1, "c8y-select-wrapper"], [1, "form-control", 3, "ngModel", "ngModelChange"], [3, "ngValue", 4, "ngFor", "ngForOf"], [3, "ngValue"]], template: function DataGridComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c72);
        ɵngcc0.ɵɵelementStart(0, "div", 0, 1);
        ɵngcc0.ɵɵpipe(2, "async");
        ɵngcc0.ɵɵtemplate(3, DataGridComponent_div_3_Template, 3, 1, "div", 2);
        ɵngcc0.ɵɵpipe(4, "async");
        ɵngcc0.ɵɵtemplate(5, DataGridComponent_div_5_Template, 25, 26, "div", 3);
        ɵngcc0.ɵɵelementStart(6, "table", 4);
        ɵngcc0.ɵɵlistener("mousemove", function DataGridComponent_Template_table_mousemove_6_listener($event) { return ctx.resizeHandleContainerMouseMove$.emit($event); })("mouseup", function DataGridComponent_Template_table_mouseup_6_listener($event) { return ctx.resizeHandleContainerMouseUp$.emit($event); });
        ɵngcc0.ɵɵtemplate(7, DataGridComponent_ng_container_7_Template, 5, 4, "ng-container", 5);
        ɵngcc0.ɵɵelementContainerStart(8, 6);
        ɵngcc0.ɵɵtemplate(9, DataGridComponent_td_9_Template, 3, 2, "td", 7);
        ɵngcc0.ɵɵelementContainerEnd();
        ɵngcc0.ɵɵtemplate(10, DataGridComponent_tr_10_Template, 1, 0, "tr", 8);
        ɵngcc0.ɵɵtemplate(11, DataGridComponent_tr_11_Template, 1, 0, "tr", 9);
        ɵngcc0.ɵɵtemplate(12, DataGridComponent_ng_container_12_Template, 2, 2, "ng-container", 10);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(13, DataGridComponent_div_13_Template, 3, 0, "div", 11);
        ɵngcc0.ɵɵpipe(14, "async");
        ɵngcc0.ɵɵpipe(15, "async");
        ɵngcc0.ɵɵtemplate(16, DataGridComponent_div_16_Template, 11, 17, "div", 12);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(30, _c73, ɵngcc0.ɵɵpipeBind1(2, 22, ctx.dataSource.loading$) && !ctx.loadMoreComponent));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind1(4, 24, ctx.dataSource.loading$) && !ctx.loadMoreComponent);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.displayOptions.gridHeader);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵstyleProp("grid-template-columns", ctx.styles.gridTemplateColumns);
        ɵngcc0.ɵɵclassProp("table-striped", ctx.displayOptions.striped)("table-bordered", ctx.displayOptions.bordered)("table-data-grid-with-checkboxes", ctx.selectable)("table-data-grid-with-actions", ctx.actionControls.length > 0);
        ɵngcc0.ɵɵproperty("dataSource", ctx.dataSource)("trackBy", ctx.trackByName);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.columns)("ngForTrackBy", ctx.trackByName);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("cdkHeaderRowDef", ctx.columnNames);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("cdkRowDefColumns", ctx.columnNames);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.infiniteScroll);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ɵngcc0.ɵɵpipeBind1(14, 26, ctx.dataSource.loading$) && ɵngcc0.ɵɵpipeBind1(15, 28, ctx.dataSource.stats$).filteredSize === 0);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", ctx.pagination && !ctx.infiniteScroll);
    } }, directives: function () { return [ɵngcc6.NgClass, ɵngcc6.NgIf, ɵngcc22.CdkTable, ɵngcc6.NgForOf, ɵngcc22.CdkColumnDef, ɵngcc22.CdkFooterCellDef, ɵngcc22.CdkHeaderRowDef, ɵngcc22.CdkRowDef, ProgressBarComponent, ɵngcc9.BsDropdownDirective, ɵngcc9.BsDropdownToggleDirective, IconDirective, ɵngcc9.BsDropdownMenuDirective, ɵngcc11.PopoverDirective, C8yTranslateDirective, ɵngcc6.NgTemplateOutlet, ɵngcc19.CdkDropList, ɵngcc19.CdkDrag, ɵngcc13.CheckboxControlValueAccessor, ɵngcc13.NgControlStatus, ɵngcc13.NgModel, ɵngcc13.DefaultValueAccessor, ɵngcc6.NgSwitch, ɵngcc6.NgSwitchCase, ɵngcc6.NgSwitchDefault, ɵngcc22.CdkHeaderCellDef, ɵngcc22.CdkCellDef, ɵngcc22.CdkHeaderCell, ɵngcc22.CdkCell, ɵngcc8.TooltipDirective, CellRendererComponent, FilteringFormRendererComponent, ɵngcc22.CdkFooterCell, ɵngcc22.CdkHeaderRow, ɵngcc22.CdkRow, ɵngcc22.CdkFooterRowDef, ɵngcc22.CdkFooterRow, ɵngcc23.PaginationComponent, ɵngcc13.SelectControlValueAccessor, ɵngcc13.NgSelectOption, ɵngcc13.ɵNgSelectMultipleOption]; }, pipes: function () { return [ɵngcc6.AsyncPipe, C8yTranslatePipe, IsControlVisiblePipe, MapFunctionPipe]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DataGridComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-data-grid',
                template: "<div\n  #scroll\n  class=\"table-data-grid-scroll\"\n  [ngClass]=\"{ 'table-data-grid__overlay': (dataSource.loading$ | async) && !loadMoreComponent }\"\n>\n  <div  class=\"table-data-grid__loading--wrapper\" *ngIf=\"(dataSource.loading$ | async) && !loadMoreComponent\">\n    <div class=\"table-data-grid__loading--loader \">\n      <c8y-progress-bar [message]=\"loadingItemsLabel\"></c8y-progress-bar>\n    </div>\n  </div>\n\n  <div *ngIf=\"displayOptions.gridHeader\" class=\"table-data-grid-header separator large-padding\">\n    <h4 [ngClass]=\"{ 'm-r-16': !!title }\">{{ title | translate }}</h4>\n\n    <ng-container *ngIf=\"displayOptions.filter\">\n      <span *ngIf=\"!filteringApplied\">\n        <span class=\"label label-default m-r-4\" translate>No filters</span>\n        <small\n          *ngIf=\"!!filteringLabelsParams.allItemsCount\"\n          class=\"m-r-4\"\n          ngNonBindable\n          translate\n          [translateParams]=\"filteringLabelsParams\"\n          >{{ filteredItemsCount }} of {{ allItemsCount }} items</small\n        >\n      </span>\n      <span *ngIf=\"filteringApplied\">\n        <ng-container *ngIf=\"!!filteringLabelsParams.allItemsCount\">\n          <span class=\"badge badge-info m-r-4\">\n            {{ (dataSource.stats$ | async).filteredSize }}\n          </span>\n          <small ngNonBindable translate [translateParams]=\"filteringLabelsParams\"\n            >of {{ allItemsCount }} items</small\n          >\n        </ng-container>\n        <button\n          title=\" {{ 'Clear filters' | translate }}\"\n          class=\"m-l-8 btn btn-xs btn-default m-r-4\"\n          (click)=\"clearFilters()\"\n        >\n          {{ 'Clear filters' | translate }}\n        </button>\n      </span>\n      <span class=\"hidden-xs hidden-sm\">\n        <button\n          class=\"btn-clean text-primary\"\n          popover=\"{{ 'Click the column headers to apply filters.' | translate }}\"\n          placement=\"right\"\n          triggers=\"focus\"\n        >\n          <i c8yIcon=\"question-circle-o\"></i>\n        </button>\n      </span>\n\n      <span class=\"hidden-xs hidden-sm\" *ngIf=\"showCounterWarning\">\n        <button\n          class=\"btn-clean text-primary\"\n          popover=\"{{\n            'The counter for the total number of items might be inaccurate.' | translate\n          }}\"\n          placement=\"right\"\n          triggers=\"focus\"\n        >\n          <i c8yIcon=\"warning\"></i>\n        </button>\n      </span>\n    </ng-container>\n\n    <div class=\"flex-item-right\">\n      <div class=\"btnbar flex-row\">\n        <ng-container *ngFor=\"let headerActionControl of headerActionControls\">\n          <ng-container *ngIf=\"headerActionControl | isControlVisible\">\n            <ng-container *ngIf=\"!headerActionControl.template; else customTemplate\">\n              <button\n                title=\"{{ headerActionControl.text | translate }}\"\n                class=\"btnbar-btn btn-link\"\n                (click)=\"headerActionControl.callback()\"\n              >\n                <i c8yIcon=\"headerActionControl.icon\" class=\"m-r-4\"></i>\n                <span>{{ headerActionControl.text | translate }}</span>\n              </button>\n            </ng-container>\n            <ng-template #customTemplate>\n              <ng-container\n                *ngTemplateOutlet=\"\n                  headerActionControl.template;\n                  context: { headerActionControl: headerActionControl }\n                \"\n              ></ng-container>\n            </ng-template>\n          </ng-container>\n        </ng-container>\n\n        <div\n          class=\"dropdown\"\n          dropdown\n          [insideClick]=\"true\"\n          container=\"body\"\n          placement=\"bottom left\"\n        >\n          <button\n            title=\"{{ 'Configure columns' | translate }}\"\n            class=\"btnbar-btn c8y-dropdown\"\n            dropdownToggle\n          >\n            <i c8yIcon=\"columns\" class=\"m-r-4\"></i>\n            <span>{{ 'Configure columns' | translate }}</span>\n          </button>\n\n          <ul *dropdownMenu class=\"dropdown-menu\" (click)=\"$event.stopPropagation()\">\n            <li class=\"bg-white\">\n              <div cdkDropList (cdkDropListDropped)=\"onColumnDrop($event)\" class=\"list-group m-0\">\n                <div *ngFor=\"let column of columns\" cdkDrag cdkDragLockAxis=\"y\">\n                  <ng-container *ngIf=\"!column.positionFixed\">\n                    <div class=\"list-group-item draggable-after p-0\">\n                      <label\n                        title=\"{{ (column.header | translate) || column.name }}\"\n                        class=\"c8y-checkbox p-l-16 p-r-32 p-t-8 p-b-8 flex-item-v-stretch\"\n                      >\n                        <input\n                          type=\"checkbox\"\n                          [(ngModel)]=\"column.visible\"\n                          (change)=\"updateGridColumnsSize()\"\n                        />\n                        <span></span>\n                        <span>{{ (column.header | translate) || column.name }}</span>\n                      </label>\n                    </div>\n                  </ng-container>\n                </div>\n              </div>\n            </li>\n          </ul>\n        </div>\n\n        <button\n          title=\"{{ 'Reload' | translate }}\"\n          class=\"btnbar-btn btn-link\"\n          [disabled]=\"dataSource.loading$ | async\"\n          (click)=\"clickReload()\"\n        >\n          <i c8yIcon=\"refresh\" class=\"m-r-4\"></i>\n          <span>{{ 'Reload' | translate }}</span>\n        </button>\n\n        <div\n          *ngIf=\"!serverSideDataCallback || showSearch\"\n          class=\"input-group input-group-search m-l-sm-16\"\n        >\n          <input\n            type=\"search\"\n            class=\"form-control\"\n            placeholder=\"{{ 'Search\u2026' | translate }}\"\n            [ngModel]=\"searchText\"\n            (input)=\"searchText$.emit($event.target.value)\"\n          />\n          <div class=\"input-group-addon\">\n            <i c8yIcon=\"search\" *ngIf=\"searchText.length === 0\"></i>\n            <i\n              c8yIcon=\"times\"\n              class=\"pointer\"\n              *ngIf=\"searchText.length > 0\"\n              (click)=\"searchText = ''; searchText$.emit('')\"\n            ></i>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div\n      class=\"table-data-grid-header-bulk-actions animated slideInDown fast\"\n      *ngIf=\"selectedItemIds.length !== 0\"\n    >\n      <h4>\n        <span ngNonBindable translate [translateParams]=\"{ count: selectedItemIds.length }\">\n          {{ count }} selected items.\n        </span>\n        <br class=\"visible-xs\" />\n        <small *ngIf=\"selectedItemIds.length >= pagination.pageSize\">\n          <a (click)=\"setAllItemsSelected(true)\" class=\"interact\">\n            <span\n              ngNonBindable\n              translate\n              [translateParams]=\"{ count: (dataSource.stats$ | async).filteredSize }\"\n            >\n              Select all {{ count }} items\n            </span>\n          </a>\n        </small>\n      </h4>\n      <div class=\"flex-item-right\">\n        <div class=\"btnbar flex-row\">\n          <ng-container\n            *ngFor=\"let bulkActionControl of bulkActionControls\"\n            [ngSwitch]=\"bulkActionControl.type\"\n          >\n            <ng-container *ngIf=\"bulkActionControl | isControlVisible: selectedItemIds\">\n              <button\n                title=\"{{ 'Export' | translate }}\"\n                *ngSwitchCase=\"builtInActionType.Export\"\n                class=\"btnbar-btn\"\n                (click)=\"bulkActionControl.callback(selectedItemIds, reload.bind(this))\"\n              >\n                <i c8yIcon=\"sign-out\"></i>\n                <span>{{ 'Export' | translate }}</span>\n              </button>\n\n              <button\n                title=\"{{ 'Delete' | translate }}\"\n                *ngSwitchCase=\"builtInActionType.Delete\"\n                class=\"btnbar-btn\"\n                (click)=\"bulkActionControl.callback(selectedItemIds, reload.bind(this))\"\n              >\n                <i c8yIcon=\"trash\"></i>\n                <span>{{ 'Delete' | translate }}</span>\n              </button>\n\n              <button\n                title=\"{{ bulkActionControl.text | translate }}\"\n                *ngSwitchDefault\n                class=\"btnbar-btn\"\n                (click)=\"bulkActionControl.callback(selectedItemIds, reload.bind(this))\"\n              >\n                <i c8yIcon=\"{{ bulkActionControl.icon }}\"></i>\n                <span>{{ bulkActionControl.text | translate }}</span>\n              </button>\n            </ng-container>\n          </ng-container>\n\n          <button title=\"{{ 'Cancel' | translate }}\" class=\"btnbar-btn\" (click)=\"cancel()\">\n            <i c8yIcon=\"times\"></i>\n            <span>{{ 'Cancel' | translate }}</span>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <table\n    class=\"table table-hover table-filtered-sorted table-data-grid large-padding\"\n    cdk-table\n    [dataSource]=\"dataSource\"\n    [trackBy]=\"trackByName\"\n    [class.table-striped]=\"displayOptions.striped\"\n    [class.table-bordered]=\"displayOptions.bordered\"\n    [class.table-data-grid-with-checkboxes]=\"selectable\"\n    [class.table-data-grid-with-actions]=\"actionControls.length > 0\"\n    [style.grid-template-columns]=\"styles.gridTemplateColumns\"\n    (mousemove)=\"resizeHandleContainerMouseMove$.emit($event)\"\n    (mouseup)=\"resizeHandleContainerMouseUp$.emit($event)\"\n  >\n    <ng-container *ngFor=\"let column of columns; trackBy: trackByName\" [cdkColumnDef]=\"column.name\">\n      <ng-container [ngSwitch]=\"column.name\">\n        <ng-container *ngSwitchCase=\"'checkbox'\">\n          <th cdk-header-cell *cdkHeaderCellDef data-type=\"icon\">\n            <div>\n              <label class=\"c8y-checkbox\">\n                <input\n                  type=\"checkbox\"\n                  [checked]=\"currentPageSelectionState.allSelected\"\n                  [indeterminate]=\"\n                    !(\n                      currentPageSelectionState.allSelected ||\n                      currentPageSelectionState.allDeselected\n                    )\n                  \"\n                  (change)=\"setAllItemsInCurrentPageSelected($event.target.checked)\"\n                />\n                <span></span>\n              </label>\n            </div>\n          </th>\n\n          <td cdk-cell *cdkCellDef=\"let row\" data-type=\"icon\">\n            <label class=\"c8y-checkbox\">\n              <input\n                type=\"checkbox\"\n                [checked]=\"isItemSelected(row)\"\n                (change)=\"setItemsSelected([row], $event.target.checked)\"\n              />\n              <span></span>\n            </label>\n          </td>\n        </ng-container>\n\n        <ng-container *ngSwitchCase=\"'actions'\">\n          <th cdk-header-cell *cdkHeaderCellDef data-type=\"icon\"></th>\n\n          <td cdk-cell *cdkCellDef=\"let row\" data-type=\"icon\">\n            <ng-container *ngIf=\"actionControls.length <= 2\">\n              <ng-container\n                *ngFor=\"let actionControl of actionControls\"\n                [ngSwitch]=\"actionControl.type\"\n              >\n                <ng-container *ngIf=\"actionControl.showIf ? actionControl.showIf(row) : true\">\n                  <button\n                    *ngSwitchCase=\"builtInActionType.Edit\"\n                    class=\"btn btn-icon btn-xs btn-default\"\n                    title=\"{{ 'Edit' | translate }}\"\n                    (click)=\"actionControl.callback(row, reload.bind(this))\"\n                  >\n                    <i c8yIcon=\"pencil\"></i>\n                  </button>\n                  <button\n                    *ngSwitchCase=\"builtInActionType.Delete\"\n                    class=\"btn btn-dot showOnHover\"\n                    title=\"{{ 'Delete' | translate }}\"\n                    (click)=\"actionControl.callback(row, reload.bind(this))\"\n                  >\n                    <i class=\"text-danger\" c8yIcon=\"minus-circle\"></i>\n                  </button>\n                  <button\n                    *ngSwitchDefault\n                    class=\"btn btn-icon btn-xs btn-default\"\n                    title=\"{{ actionControl.text | translate }}\"\n                    (click)=\"actionControl.callback(row, reload.bind(this))\"\n                    tooltip=\"{{ actionControl.text | translate }}\"\n                    container=\"body\"\n                  >\n                    <i c8yIcon=\"{{ actionControl.icon }}\"></i>\n                  </button>\n                </ng-container>\n              </ng-container>\n            </ng-container>\n\n            <div [ngClass]=\"{ 'm-l-auto overflow-visible': actionControls.length > 2 }\">\n              <div *ngIf=\"actionControls.length > 2\" class=\"dropdown\" dropdown container=\"body\" placement=\"bottom right\">\n                <button\n                  title=\"{{ 'Actions' | translate }}\"\n                  class=\"dropdown-toggle c8y-dropdown\"\n                  dropdownToggle\n                >\n                  <i c8yIcon=\"ellipsis-v\"></i>\n                </button>\n                <ul class=\"dropdown-menu dropdown-menu-right\" *dropdownMenu>\n                  <li *ngFor=\"let actionControl of actionControls\" [ngSwitch]=\"actionControl.type\">\n                    <ng-container *ngIf=\"actionControl | isControlVisible: row\">\n                      <button\n                        title=\"{{ 'Edit' | translate }}\"\n                        *ngSwitchCase=\"builtInActionType.Edit\"\n                        (click)=\"actionControl.callback(row, reload.bind(this))\"\n                      >\n                        <i c8yIcon=\"pencil\"></i>\n                        {{ 'Edit' | translate }}\n                      </button>\n                      <button\n                        title=\"{{ 'Delete' | translate }}\"\n                        *ngSwitchCase=\"builtInActionType.Delete\"\n                        (click)=\"actionControl.callback(row, reload.bind(this))\"\n                      >\n                        <i c8yIcon=\"trash\"></i>\n                        {{ 'Delete' | translate }}\n                      </button>\n                      <button\n                        title=\"{{ 'Export' | translate }}\"\n                        *ngSwitchCase=\"builtInActionType.Export\"\n                        (click)=\"actionControl.callback(row, reload.bind(this))\"\n                      >\n                        <i c8yIcon=\"download\"></i>\n                        {{ 'Export' | translate }}\n                      </button>\n                      <button\n                        title=\"{{ actionControl.text | translate }}\"\n                        *ngSwitchDefault\n                        (click)=\"actionControl.callback(row, reload.bind(this))\"\n                      >\n                        <i c8yIcon=\"{{ actionControl.icon }}\"></i>\n                        {{ actionControl.text | translate }}\n                      </button>\n                    </ng-container>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </td>\n        </ng-container>\n\n        <ng-container *ngSwitchDefault>\n          <th\n            cdk-header-cell\n            *cdkHeaderCellDef\n            [ngClass]=\"column.headerCSSClassName\"\n            [attr.data-type]=\"column.dataType\"\n            [class.sorted]=\"column.sortOrder\"\n            [class.filtered]=\"column | map: isColumnFilteringApplied\"\n            [class.hidden]=\"!column.visible\"\n          >\n            <div *ngIf=\"!column.filterable\" [title]=\"(column.header | translate) || column.name\">\n              <ng-container\n                *ngIf=\"\n                  [\n                    {\n                      columnName: column.name,\n                      value: (column.header | translate) || column.name\n                    }\n                  ] | map: getHeaderCellRendererSpec:this as cellRendererSpec\n                \"\n              >\n                <c8y-cell-renderer [spec]=\"cellRendererSpec\"></c8y-cell-renderer>\n              </ng-container>\n            </div>\n\n            <div\n              *ngIf=\"column.filterable\"\n              class=\"dropdown\"\n              dropdown\n              #dropdown=\"bs-dropdown\"\n              container=\"body\"\n              placement=\"bottom left\"\n              [insideClick]=\"true\"\n            >\n              <button\n                class=\"btn-header c8y-dropdown\"\n                dropdownToggle\n                [title]=\"(column.header | translate) || column.name\"\n              >\n                <ng-container\n                  *ngIf=\"\n                    [\n                      {\n                        columnName: column.name,\n                        value: (column.header | translate) || column.name\n                      }\n                    ] | map: getHeaderCellRendererSpec:this as cellRendererSpec\n                  \"\n                >\n                  <c8y-cell-renderer [spec]=\"cellRendererSpec\"></c8y-cell-renderer>\n                </ng-container>\n                <i c8yIcon=\"filter\" title=\"{{ 'Filter' | translate }}\"></i>\n              </button>\n\n              <ul *dropdownMenu class=\"dropdown-menu\" (click)=\"$event.stopPropagation()\">\n                <li class=\"data-grid__dropdown\">\n                  <ng-container\n                    *ngIf=\"\n                      [\n                        {\n                          column: column,\n                          dropdown: dropdown\n                        }\n                      ] | map: getFilteringFormRendererSpec:this as filteringFormRendererSpec\n                    \"\n                  >\n                    <c8y-filtering-form-renderer [spec]=\"filteringFormRendererSpec\">\n                    </c8y-filtering-form-renderer>\n                  </ng-container>\n                </li>\n              </ul>\n            </div>\n\n            <button\n              *ngIf=\"column.sortable\"\n              class=\"btn-sort\"\n              title=\"{{ 'Sort' | translate }}\"\n              (click)=\"changeSortOrder(column.name)\"\n            >\n              <ng-container [ngSwitch]=\"column.sortOrder\">\n                <i *ngSwitchCase=\"'asc'\" c8yIcon=\"long-arrow-up\"></i>\n                <i *ngSwitchCase=\"'desc'\" c8yIcon=\"long-arrow-down\"></i>\n                <i *ngSwitchDefault c8yIcon=\"exchange\"></i>\n              </ng-container>\n            </button>\n\n            <span\n              class=\"resize-handle\"\n              (mousedown)=\"\n                resizeHandleMouseDown$.emit({ event: $event, targetColumnName: column.name })\n              \"\n            >\n            </span>\n          </th>\n\n          <td\n            cdk-cell\n            *cdkCellDef=\"let row\"\n            [ngClass]=\"column.cellCSSClassName\"\n            [attr.data-cell-title]=\"column.header | translate\"\n            [attr.data-type]=\"column.dataType\"\n            [class.hidden]=\"!column.visible\"\n          >\n            <ng-container\n              *ngIf=\"\n                [\n                  {\n                    value: resolveCellValue(row, column.path),\n                    row: row,\n                    columnName: column.name\n                  }\n                ] | map: getCellRendererSpec:this as cellRendererSpec\n              \"\n            >\n              <c8y-cell-renderer [spec]=\"cellRendererSpec\"></c8y-cell-renderer>\n            </ng-container>\n          </td>\n        </ng-container>\n      </ng-container>\n    </ng-container>\n\n    <ng-container cdkColumnDef=\"infiniteScrollFooter\">\n      <td cdk-footer-cell *cdkFooterCellDef [style.grid-column]=\"styles.gridInfiniteScrollColumn\">\n        <template #infiniteScrollContainer></template>\n      </td>\n    </ng-container>\n\n    <tr cdk-header-row *cdkHeaderRowDef=\"columnNames\"></tr>\n\n    <tr\n      cdk-row\n      *cdkRowDef=\"let row; columns: columnNames\"\n      (mouseover)=\"rowMouseOver.emit(row)\"\n      (mouseleave)=\"rowMouseLeave.emit(row)\"\n      (click)=\"rowClick.emit(row)\"\n    ></tr>\n\n    <ng-container *ngIf=\"infiniteScroll\">\n      <tr cdk-footer-row *cdkFooterRowDef=\"['infiniteScrollFooter']\"></tr>\n    </ng-container>\n  </table>\n\n  <div\n    class=\"row m-0 p-t-40 p-b-40\"\n    *ngIf=\"!(dataSource.loading$ | async) && (dataSource.stats$ | async).filteredSize === 0\"\n  >\n    <div class=\"col-md-4 col-md-offset-4\">\n      <ng-content select=\".c8y-empty-state\"></ng-content>\n    </div>\n  </div>\n\n  <div *ngIf=\"pagination && !infiniteScroll\" class=\"table-data-grid-footer separator large-padding\">\n    <div class=\"col-sm-4 no-gutter\">\n      <div *ngIf=\"(dataSource.stats$ | async).currentPageSize > 0\" class=\"counter\">\n        <span class=\"text-muted\" ngNonBindable translate [translateParams]=\"paginationLabelParams\"\n          >{{ pageFirstItemIdx }} - {{ pageLastItemIdx }} of {{ itemsTotal }}</span\n        >\n      </div>\n    </div>\n\n    <div class=\"col-sm-4 no-gutter text-center\">\n      <div\n        *ngIf=\"(dataSource.stats$ | async).filteredSize > minPossiblePageSize\"\n        class=\"form-group form-inline\"\n      >\n        <label class=\"m-r-4\">{{ 'Items per page' | translate }}</label>\n        <div class=\"c8y-select-wrapper\">\n          <select\n            class=\"form-control\"\n            [ngModel]=\"pagination.pageSize\"\n            (ngModelChange)=\"\n              updatePagination({ itemsPerPage: $event, page: pagination.currentPage })\n            \"\n          >\n            <option *ngFor=\"let pageSize of possiblePageSizes\" [ngValue]=\"pageSize\">\n              {{ pageSize }}\n            </option>\n          </select>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"col-sm-4 no-gutter text-right\">\n      <pagination\n        [class.hidden]=\"hidePagination$ | async\"\n        [ngModel]=\"pagination.currentPage\"\n        (pageChanged)=\"updatePagination($event)\"\n        [totalItems]=\"(dataSource.stats$ | async).filteredSize\"\n        [itemsPerPage]=\"pagination.pageSize\"\n        (numPages)=\"totalPagesCount$.next($event)\"\n        [maxSize]=\"5\"\n        [boundaryLinks]=\"false\"\n        previousText=\" \"\n        nextText=\" \"\n      ></pagination>\n    </div>\n  </div>\n</div>\n"
            }]
    }], function () { return [{ type: ɵngcc18.DomSanitizer }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ComponentFactoryResolver }]; }, { title: [{
            type: i0.Input
        }], loadMoreItemsLabel: [{
            type: i0.Input
        }], loadingItemsLabel: [{
            type: i0.Input
        }], showSearch: [{
            type: i0.Input
        }], searchText: [{
            type: i0.Input
        }], showCounterWarning: [{
            type: i0.Input
        }], rowMouseOver: [{
            type: i0.Output
        }], rowMouseLeave: [{
            type: i0.Output
        }], rowClick: [{
            type: i0.Output
        }], onConfigChange: [{
            type: i0.Output
        }], onFilter: [{
            type: i0.Output
        }], itemsSelect: [{
            type: i0.Output
        }], onReload: [{
            type: i0.Output
        }], _columns: [{
            type: i0.Input,
            args: ['columns']
        }], _rows: [{
            type: i0.Input,
            args: ['rows']
        }], _pagination: [{
            type: i0.Input,
            args: ['pagination']
        }], _infiniteScroll: [{
            type: i0.Input,
            args: ['infiniteScroll']
        }], _serverSideDataCallback: [{
            type: i0.Input,
            args: ['serverSideDataCallback']
        }], _selectable: [{
            type: i0.Input,
            args: ['selectable']
        }], _selectionPrimaryKey: [{
            type: i0.Input,
            args: ['selectionPrimaryKey']
        }], _displayOptions: [{
            type: i0.Input,
            args: ['displayOptions']
        }], _actionControls: [{
            type: i0.Input,
            args: ['actionControls']
        }], _bulkActionControls: [{
            type: i0.Input,
            args: ['bulkActionControls']
        }], _headerActionControls: [{
            type: i0.Input,
            args: ['headerActionControls']
        }], refresh: [{
            type: i0.Input
        }], columnRenderers: [{
            type: i0.ContentChildren,
            args: [ColumnDirective]
        }], scrollContainer: [{
            type: i0.ViewChild,
            args: ['scroll', { static: true }]
        }], infiniteScrollContainer: [{
            type: i0.ViewChild,
            args: ['infiniteScrollContainer', { static: false, read: i0.ViewContainerRef }]
        }], thRefs: [{
            type: i0.ViewChildren,
            args: [table.CdkHeaderCell, { read: i0.ElementRef }]
        }] }); })();
        return DataGridComponent;
    }());
    DataGridComponent.ctorParameters = function () { return [
        { type: platformBrowser.DomSanitizer },
        { type: i0.ElementRef },
        { type: i0.ChangeDetectorRef },
        { type: i0.ComponentFactoryResolver }
    ]; };
    DataGridComponent.propDecorators = {
        title: [{ type: i0.Input }],
        loadMoreItemsLabel: [{ type: i0.Input }],
        loadingItemsLabel: [{ type: i0.Input }],
        showSearch: [{ type: i0.Input }],
        refresh: [{ type: i0.Input }],
        _columns: [{ type: i0.Input, args: ['columns',] }],
        _rows: [{ type: i0.Input, args: ['rows',] }],
        _pagination: [{ type: i0.Input, args: ['pagination',] }],
        _infiniteScroll: [{ type: i0.Input, args: ['infiniteScroll',] }],
        _serverSideDataCallback: [{ type: i0.Input, args: ['serverSideDataCallback',] }],
        _selectable: [{ type: i0.Input, args: ['selectable',] }],
        _selectionPrimaryKey: [{ type: i0.Input, args: ['selectionPrimaryKey',] }],
        _displayOptions: [{ type: i0.Input, args: ['displayOptions',] }],
        _actionControls: [{ type: i0.Input, args: ['actionControls',] }],
        _bulkActionControls: [{ type: i0.Input, args: ['bulkActionControls',] }],
        _headerActionControls: [{ type: i0.Input, args: ['headerActionControls',] }],
        searchText: [{ type: i0.Input }],
        showCounterWarning: [{ type: i0.Input }],
        rowMouseOver: [{ type: i0.Output }],
        rowMouseLeave: [{ type: i0.Output }],
        rowClick: [{ type: i0.Output }],
        onConfigChange: [{ type: i0.Output }],
        onFilter: [{ type: i0.Output }],
        itemsSelect: [{ type: i0.Output }],
        onReload: [{ type: i0.Output }],
        columnRenderers: [{ type: i0.ContentChildren, args: [ColumnDirective,] }],
        scrollContainer: [{ type: i0.ViewChild, args: ['scroll', { static: true },] }],
        infiniteScrollContainer: [{ type: i0.ViewChild, args: ['infiniteScrollContainer', { static: false, read: i0.ViewContainerRef },] }],
        thRefs: [{ type: i0.ViewChildren, args: [table.CdkHeaderCell, { read: i0.ElementRef },] }]
    };

    var CellRendererComponent = /** @class */ (function () {
        function CellRendererComponent(injector, cd) {
            this.injector = injector;
            this.cd = cd;
        }
        Object.defineProperty(CellRendererComponent.prototype, "_spec", {
            set: function (spec) {
                this.spec = spec;
            },
            enumerable: false,
            configurable: true
        });
        CellRendererComponent.prototype.ngOnChanges = function () {
            if (!this.prevSpec) {
                this.prevSpec = this.spec;
            }
            var renderer = this.spec.renderer;
            if (renderer instanceof i0.TemplateRef) {
                this.rendererType = 'TEMPLATE';
            }
            else if (renderer instanceof i0.Type) {
                this.rendererType = 'COMPONENT';
                this.rendererInjector = i0.Injector.create({
                    providers: [{ provide: CellRendererContext, useValue: this.spec.context }],
                    parent: this.injector
                });
            }
        };
        CellRendererComponent.prototype.ngDoCheck = function () {
            if (!this.spec.context.value === this.prevSpec.context.value) {
                this.prevSpec = this.spec;
                this.cd.markForCheck();
            }
        };
CellRendererComponent.ɵfac = function CellRendererComponent_Factory(t) { return new (t || CellRendererComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };
CellRendererComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CellRendererComponent, selectors: [["c8y-cell-renderer"]], inputs: { _spec: ["spec", "_spec"] }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 2, vars: 2, consts: [[4, "ngIf"], [3, "ngTemplateOutlet", "ngTemplateOutletContext", 4, "ngIf"], [3, "ngComponentOutlet", "ngComponentOutletInjector", 4, "ngIf"], [3, "ngTemplateOutlet", "ngTemplateOutletContext"], [3, "ngComponentOutlet", "ngComponentOutletInjector"], [3, "title"]], template: function CellRendererComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, CellRendererComponent_ng_container_0_Template, 3, 2, "ng-container", 0);
        ɵngcc0.ɵɵtemplate(1, CellRendererComponent_ng_container_1_Template, 3, 2, "ng-container", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.spec.renderer);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.spec.renderer);
    } }, directives: [ɵngcc6.NgIf, ɵngcc6.NgTemplateOutlet, ɵngcc6.NgComponentOutlet], encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CellRendererComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-cell-renderer',
                template: "<ng-container *ngIf=\"spec.renderer\">\n  <ng-container\n    *ngIf=\"rendererType === 'TEMPLATE'\"\n    [ngTemplateOutlet]=\"spec.renderer\"\n    [ngTemplateOutletContext]=\"{ $implicit: spec.context }\"\n  >\n  </ng-container>\n\n  <ng-container\n    *ngIf=\"rendererType === 'COMPONENT'\"\n    [ngComponentOutlet]=\"spec.renderer\"\n    [ngComponentOutletInjector]=\"rendererInjector\"\n  >\n  </ng-container>\n</ng-container>\n\n<ng-container *ngIf=\"!spec.renderer\">\n  <span title=\"{{ spec.context.value }}\">\n    {{ spec.context.value }}\n  </span>\n</ng-container>\n",
                changeDetection: i0.ChangeDetectionStrategy.OnPush
            }]
    }], function () { return [{ type: ɵngcc0.Injector }, { type: ɵngcc0.ChangeDetectorRef }]; }, { _spec: [{
            type: i0.Input,
            args: ['spec']
        }] }); })();
        return CellRendererComponent;
    }());
    CellRendererComponent.ctorParameters = function () { return [
        { type: i0.Injector },
        { type: i0.ChangeDetectorRef }
    ]; };
    CellRendererComponent.propDecorators = {
        _spec: [{ type: i0.Input, args: ['spec',] }]
    };

    var FilteringFormRendererComponent = /** @class */ (function () {
        function FilteringFormRendererComponent(injector, cd) {
            this.injector = injector;
            this.cd = cd;
            this.defaultRendererFilterText = '';
        }
        Object.defineProperty(FilteringFormRendererComponent.prototype, "_spec", {
            set: function (spec) {
                this.spec = spec;
            },
            enumerable: false,
            configurable: true
        });
        FilteringFormRendererComponent.prototype.ngOnChanges = function () {
            var _a = this.spec, renderer = _a.renderer, context = _a.context;
            if (renderer instanceof i0.TemplateRef) {
                this.rendererType = 'TEMPLATE';
            }
            else if (renderer instanceof i0.Type) {
                this.rendererType = 'COMPONENT';
                this.rendererInjector = i0.Injector.create({
                    providers: [{ provide: FilteringFormRendererContext, useValue: this.spec.context }],
                    parent: this.injector
                });
            }
            var filterPredicate = context.property.filterPredicate;
            if (typeof filterPredicate === 'string') {
                this.defaultRendererFilterText = filterPredicate;
            }
        };
FilteringFormRendererComponent.ɵfac = function FilteringFormRendererComponent_Factory(t) { return new (t || FilteringFormRendererComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };
FilteringFormRendererComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: FilteringFormRendererComponent, selectors: [["c8y-filtering-form-renderer"]], inputs: { _spec: ["spec", "_spec"] }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 2, vars: 2, consts: [[4, "ngIf"], [3, "ngTemplateOutlet", "ngTemplateOutletContext", 4, "ngIf"], [3, "ngComponentOutlet", "ngComponentOutletInjector", 4, "ngIf"], [3, "ngTemplateOutlet", "ngTemplateOutletContext"], [3, "ngComponentOutlet", "ngComponentOutletInjector"], [1, "form-group", "m-b-8", "p-t-8"], [1, "form-control", 3, "ngModel", "ngModelChange", "keyup.enter"], [1, "data-grid__dropdown__footer", "d-flex", "separator-top"], [1, "btn", "btn-default", "btn-sm", "flex-grow", "m-r-8", 3, "title", "click"], [1, "btn", "btn-primary", "btn-sm", "flex-grow", 3, "title", "click"]], template: function FilteringFormRendererComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, FilteringFormRendererComponent_ng_container_0_Template, 3, 2, "ng-container", 0);
        ɵngcc0.ɵɵtemplate(1, FilteringFormRendererComponent_ng_container_1_Template, 15, 16, "ng-container", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.spec.renderer);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.spec.renderer);
    } }, directives: [ɵngcc6.NgIf, ɵngcc6.NgTemplateOutlet, ɵngcc6.NgComponentOutlet, ɵngcc13.DefaultValueAccessor, ɵngcc13.NgControlStatus, ɵngcc13.NgModel], pipes: [C8yTranslatePipe], encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FilteringFormRendererComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-filtering-form-renderer',
                template: "<ng-container *ngIf=\"spec.renderer\">\n  <ng-container\n    *ngIf=\"rendererType === 'TEMPLATE'\"\n    [ngTemplateOutlet]=\"spec.renderer\"\n    [ngTemplateOutletContext]=\"{ $implicit: spec.context }\"\n  >\n  </ng-container>\n\n  <ng-container\n    *ngIf=\"rendererType === 'COMPONENT'\"\n    [ngComponentOutlet]=\"spec.renderer\"\n    [ngComponentOutletInjector]=\"rendererInjector\"\n  >\n  </ng-container>\n</ng-container>\n\n<ng-container *ngIf=\"!spec.renderer\">\n  <div class=\"form-group m-b-8 p-t-8\">\n    <label>{{ 'Filter text' | translate }}</label>\n    <input\n      class=\"form-control\"\n      [(ngModel)]=\"defaultRendererFilterText\"\n      (keyup.enter)=\"\n        spec.context.applyFilter({\n          filterPredicate: defaultRendererFilterText\n        })\n      \"\n    />\n  </div>\n\n  <div class=\"data-grid__dropdown__footer d-flex separator-top\">\n    <button\n      title=\"{{ 'Reset' | translate }}\"\n      class=\"btn btn-default btn-sm flex-grow m-r-8\"\n      (click)=\"defaultRendererFilterText = ''; spec.context.resetFilter()\"\n    >\n      {{ 'Reset' | translate }}\n    </button>\n    <button\n      title=\"{{ 'Apply' | translate }}\"\n      class=\"btn btn-primary btn-sm flex-grow\"\n      (click)=\"\n        spec.context.applyFilter({\n          filterPredicate: defaultRendererFilterText\n        })\n      \"\n    >\n      {{ 'Apply' | translate }}\n    </button>\n  </div>\n</ng-container>\n",
                changeDetection: i0.ChangeDetectionStrategy.OnPush
            }]
    }], function () { return [{ type: ɵngcc0.Injector }, { type: ɵngcc0.ChangeDetectorRef }]; }, { _spec: [{
            type: i0.Input,
            args: ['spec']
        }] }); })();
        return FilteringFormRendererComponent;
    }());
    FilteringFormRendererComponent.ctorParameters = function () { return [
        { type: i0.Injector },
        { type: i0.ChangeDetectorRef }
    ]; };
    FilteringFormRendererComponent.propDecorators = {
        _spec: [{ type: i0.Input, args: ['spec',] }]
    };

    var IsControlVisiblePipe = /** @class */ (function () {
        function IsControlVisiblePipe() {
        }
        IsControlVisiblePipe.prototype.transform = function (actionControl, arg) {
            return !actionControl.showIf || actionControl.showIf(arg);
        };
IsControlVisiblePipe.ɵfac = function IsControlVisiblePipe_Factory(t) { return new (t || IsControlVisiblePipe)(); };
IsControlVisiblePipe.ɵpipe = /*@__PURE__*/ ɵngcc0.ɵɵdefinePipe({ name: "isControlVisible", type: IsControlVisiblePipe, pure: true });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(IsControlVisiblePipe, [{
        type: i0.Pipe,
        args: [{ name: 'isControlVisible' }]
    }], function () { return []; }, null); })();
        return IsControlVisiblePipe;
    }());

    var DataGridModule = /** @class */ (function () {
        function DataGridModule() {
        }
DataGridModule.ɵfac = function DataGridModule_Factory(t) { return new (t || DataGridModule)(); };
DataGridModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: DataGridModule });
DataGridModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[
            common.CommonModule,
            table.CdkTableModule,
            dragDrop.DragDropModule,
            forms.FormsModule,
            forms.ReactiveFormsModule,
            CommonModule,
            dropdown.BsDropdownModule.forRoot(),
            popover.PopoverModule.forRoot(),
            tooltip.TooltipModule.forRoot(),
            pagination.PaginationModule.forRoot()
        ]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DataGridModule, [{
        type: i0.NgModule,
        args: [{
                imports: [
                    common.CommonModule,
                    table.CdkTableModule,
                    dragDrop.DragDropModule,
                    forms.FormsModule,
                    forms.ReactiveFormsModule,
                    CommonModule,
                    dropdown.BsDropdownModule.forRoot(),
                    popover.PopoverModule.forRoot(),
                    tooltip.TooltipModule.forRoot(),
                    pagination.PaginationModule.forRoot()
                ],
                declarations: [
                    CellRendererDefDirective,
                    HeaderCellRendererDefDirective,
                    CellRendererComponent,
                    FilteringFormRendererDefDirective,
                    FilteringFormRendererComponent,
                    ColumnDirective,
                    DataGridComponent,
                    IsControlVisiblePipe
                ],
                exports: [
                    CellRendererDefDirective,
                    HeaderCellRendererDefDirective,
                    FilteringFormRendererDefDirective,
                    ColumnDirective,
                    DataGridComponent,
                    IsControlVisiblePipe
                ],
                entryComponents: [DataGridComponent]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DataGridModule, { declarations: [CellRendererDefDirective, HeaderCellRendererDefDirective, CellRendererComponent, FilteringFormRendererDefDirective, FilteringFormRendererComponent, ColumnDirective, DataGridComponent, IsControlVisiblePipe], imports: [ɵngcc6.CommonModule, ɵngcc22.CdkTableModule, ɵngcc19.DragDropModule, ɵngcc13.FormsModule, ɵngcc13.ReactiveFormsModule, CommonModule, ɵngcc9.BsDropdownModule, ɵngcc11.PopoverModule, ɵngcc8.TooltipModule, ɵngcc23.PaginationModule], exports: [CellRendererDefDirective, HeaderCellRendererDefDirective, FilteringFormRendererDefDirective, ColumnDirective, DataGridComponent, IsControlVisiblePipe] }); })();
        return DataGridModule;
    }());

    /**
     * A component which shows a context help in
     * the action bar.
     *
     * @example
     * ```html
     * <c8y-help src="/users-guide/cockpit/#dashboards"></c8y-help>
     * ```
     */
    var HelpComponent = /** @class */ (function () {
        /**
         * @ignore Only private DI
         */
        function HelpComponent(docsService, appState, translateService) {
            this.docsService = docsService;
            this.appState = appState;
            this.translateService = translateService;
            /**
             * The source of the documentation. Used to link to the documentation as well as
             * to parse the source to display.
             */
            this.src = '';
            /**
             * Indicates if the help dialog is collapsed.
             */
            this.isCollapsed = true;
            /**
             * The priority where the help icon should be shown in the action bar
             */
            this.priority = Infinity;
            /**
             * Currrent version of the UI which will be used to get the correct data from
             * the docs. If the UI version is equal to the latest doc version, the value
             * must be ''.
             */
            this.version = this.parseVersion(this.appState.uiVersion);
            /**
             * An title. Set in open by passing the source.
             */
            this.title = '';
            /**
             * The section heading in the doc which is going to be displayed.
             */
            this.sectionHeading = '';
            /**
             * The section content in the doc which is going to be displayed.
             */
            this.sectionContent = '';
            /**
             * Indicates if the component is loading.
             */
            this.isLoading = true;
            /**
             * Indicates if the component failed loading the source.
             */
            this.hasError = false;
            this.SUPPORTED_LANGUAGES = ['en'];
        }
        Object.defineProperty(HelpComponent.prototype, "isSupportedLanguage", {
            /**
             * Identifies if the current user language is supported
             * Currently only English is supported.
             */
            get: function () {
                return this.SUPPORTED_LANGUAGES.indexOf(this.translateService.currentLang) > -1;
            },
            enumerable: false,
            configurable: true
        });
        /**
         * Builds the URL based on the src. The Base URL can be set in the application options docBaseUrl.
         * @param src The source of the help on the guide.
         * @param index This flag is used to call the index.json content of a guide. For example, "https://www.cumulocity.com/guides/users-guide/cockpit/index.json".
         */
        HelpComponent.prototype.getUrl = function (src, index) {
            if (src === void 0) { src = ''; }
            if (index === void 0) { index = false; }
            var docsUrl = new URL(this.docsService.getBaseUrl());
            var srcUrl = new URL("" + docsUrl + src);
            var _a = __read(src.split('#'), 2), url = _a[0], hashFragment = _a[1];
            this.sectionHeading = hashFragment;
            if (index) {
                src = url + "index.json";
            }
            if (this.version === '') {
                return index ? "" + (docsUrl.href + src) : srcUrl.href;
            }
            return docsUrl.href + "/" + this.version + src;
        };
        /**
         * Toggles the visibility of the help dialog.
         */
        HelpComponent.prototype.toggle = function () {
            if (this.isCollapsed) {
                this.open();
                return;
            }
            this.close();
        };
        /**
         * Closes the help dialog.
         */
        HelpComponent.prototype.close = function () {
            this.isCollapsed = true;
            this.clean();
        };
        /**
         * Opens the help dialog.
         */
        HelpComponent.prototype.open = function () {
            this.isCollapsed = false;
            this.isLoading = true;
            this.requestContent();
            if (!this.icon) {
                this.icon = this.resolveIcon();
            }
        };
        HelpComponent.prototype.requestContent = function () {
            var _this = this;
            var req = new XMLHttpRequest();
            req.onreadystatechange = function () { return _this.render(req); };
            req.addEventListener('load', function () { return _this.render(req); });
            req.open('GET', this.getUrl(this.src, true));
            req.responseType = 'json';
            req.setRequestHeader('Accept', 'text/html');
            req.send();
        };
        HelpComponent.prototype.clean = function () {
            this.title = '';
            this.isLoading = true;
            this.hasError = false;
            this.sectionContent = '';
        };
        HelpComponent.prototype.parseVersion = function (uiVersion) {
            var version = uiVersion.split('.')[0];
            var majorNumber = Math.floor(parseInt(version, 10) / 100);
            var minorNumber = parseInt(version, 10) - majorNumber * 100;
            return majorNumber + "." + minorNumber + ".0";
        };
        HelpComponent.prototype.resolveIcon = function () {
            try {
                var icon = Array.from(document.querySelector('nav .active i').classList).find(function (classes) { return classes.startsWith('c8y-icon-') || classes.startsWith('dlt-c8y-icon-'); });
                return icon.replace('dlt-c8y-icon-', '').replace('c8y-icon-', 'c8y-');
            }
            catch (ex) {
                return 'life-saver';
            }
        };
        HelpComponent.prototype.render = function (req) {
            if (req.readyState === 4) {
                this.isLoading = false;
                if (req.status === 404 && this.version !== '') {
                    this.version = '';
                    this.open();
                }
                if (req.status === 200) {
                    this.hasError = false;
                    var sectionData = req.response[this.sectionHeading];
                    if (sectionData) {
                        this.title = sectionData.title;
                        this.sectionContent = sectionData.helpcontent;
                    }
                }
                else {
                    this.hasError = true;
                }
            }
        };
HelpComponent.ɵfac = function HelpComponent_Factory(t) { return new (t || HelpComponent)(ɵngcc0.ɵɵdirectiveInject(DocsService), ɵngcc0.ɵɵdirectiveInject(AppStateService), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.TranslateService)); };
HelpComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: HelpComponent, selectors: [["c8y-help"]], inputs: { src: "src", isCollapsed: "isCollapsed", priority: "priority", icon: "icon" }, decls: 7, vars: 6, consts: [["itemClass", "pull-right", 3, "placement", "priority", 4, "ngIf"], ["id", "collapseHelp", 1, "c8y-help-drawer", 3, "collapse", "isAnimated"], [1, "c8y-help-drawer-block"], ["docOutlet", ""], [4, "ngIf"], ["class", "c8y-help-drawer-footer", 4, "ngIf"], ["itemClass", "pull-right", 3, "placement", "priority"], ["aria-controls", "collapseHelp", 1, "btn", "btn-help", 3, "title", "click"], [1, "text-info", 3, "c8yIcon"], [1, "d-flex"], [1, "c8y-icon-duocolor", "icon-48", 3, "c8yIcon", "ngClass"], ["class", "p-l-16 p-t-16 flex-grow", 4, "ngIf"], [1, "p-l-16", "p-t-16", "flex-grow"], [1, "text-bold", "text-primary", "m-b-16"], ["id", "helpContent", 1, "help-content", 3, "innerHTML"], ["translate", "", 1, "text-bold", "m-b-16"], [1, "help-content"], ["translate", ""], [1, "c8y-help-drawer-footer"], ["aria-controls", "collapseHelp", "translate", "", 1, "btn", "btn-default", 3, "title", "click"], ["target", "_blank", 1, "btn", "btn-primary", 3, "href"], ["translate", "", 4, "ngIf"]], template: function HelpComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, HelpComponent_c8y_action_bar_item_0_Template, 4, 7, "c8y-action-bar-item", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵelementStart(2, "div", 2, 3);
        ɵngcc0.ɵɵtemplate(4, HelpComponent_div_4_Template, 2, 0, "div", 4);
        ɵngcc0.ɵɵtemplate(5, HelpComponent_div_5_Template, 5, 7, "div", 4);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(6, HelpComponent_div_6_Template, 7, 7, "div", 5);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.isSupportedLanguage);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("collapse", ctx.isCollapsed)("isAnimated", true);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isLoading);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.isLoading);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.isLoading);
    } }, directives: [ɵngcc6.NgIf, ɵngcc10.CollapseDirective, ActionBarItemComponent, IconDirective, LoadingComponent, ɵngcc6.NgClass, C8yTranslateDirective], pipes: [C8yTranslatePipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HelpComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-help',
                template: "<c8y-action-bar-item\n  [placement]=\"'right'\"\n  itemClass=\"pull-right\"\n  [priority]=\"priority\"\n  *ngIf=\"isSupportedLanguage\"\n>\n  <button\n    class=\"btn btn-help\"\n    [title]=\"'Open help' | translate\"\n    (click)=\"toggle()\"\n    [attr.aria-expanded]=\"!isCollapsed\"\n    aria-controls=\"collapseHelp\"\n  >\n    <i\n      [c8yIcon]=\"'question-circle-o'\"\n      class=\"text-info\"\n    ></i>\n  </button>\n</c8y-action-bar-item>\n\n<div\n  id=\"collapseHelp\"\n  class=\"c8y-help-drawer\"\n  [collapse]=\"isCollapsed\"\n  [isAnimated]=\"true\"\n>\n  <div\n    class=\"c8y-help-drawer-block\"\n    #docOutlet\n  >\n    <div\n      *ngIf=\"isLoading\"\n    >\n      <c8y-loading></c8y-loading>\n    </div>\n\n    <div *ngIf=\"!isLoading\">\n      <div class=\"d-flex\">\n        <i\n          [c8yIcon]=\"!hasError ? icon : 'unlink'\"\n          [ngClass]=\"{ 'text-warning': hasError, 'text-muted': !hasError }\"\n          class=\"c8y-icon-duocolor icon-48\"\n        ></i>\n        <div\n          class=\"p-l-16 p-t-16 flex-grow\"\n          *ngIf=\"!hasError\"\n        >\n          <h4 class=\"text-bold text-primary m-b-16\">{{title}}</h4>\n          <div\n            id=\"helpContent\"\n            class=\"help-content\"\n            [innerHTML] = \"sectionContent\"\n          ></div>\n          \n        </div>\n\n        <div\n          class=\"p-l-16 p-t-16 flex-grow\"\n          *ngIf=\"hasError\"\n        >\n          <h4\n            class=\"text-bold m-b-16\"\n            translate\n          >Sorry, that didn't work</h4>\n          <div class=\"help-content\">\n            <p translate>The content couldn't be loaded.</p>\n          </div>\n        </div>\n      </div>\n    </div>\n\n  </div>\n  <div class=\"c8y-help-drawer-footer\" *ngIf=\"!isLoading\">\n    <button\n      class=\"btn btn-default\"\n      (click)=\"toggle()\"\n      [title]=\"'Close help' | translate\"\n      [attr.aria-expanded]=\"!isCollapsed\"\n      aria-controls=\"collapseHelp\"\n      translate\n    >Close</button>\n    <a\n      href=\"{{ hasError ? getUrl() : getUrl(src) }}\"\n      class=\"btn btn-primary\"\n      target=\"_blank\"\n    >\n    <span translate *ngIf=\"!hasError\">\n      Open the <span>User guide`KEEP_ORIGINAL`</span>\n    </span>\n    <span translate *ngIf=\"hasError\">\n      Check the <span>User guide`KEEP_ORIGINAL`</span>\n    </span>\n    </a>\n  </div>\n</div>\n"
            }]
    }], function () { return [{ type: DocsService }, { type: AppStateService }, { type: ɵngcc4.TranslateService }]; }, { src: [{
            type: i0.Input
        }], isCollapsed: [{
            type: i0.Input
        }], priority: [{
            type: i0.Input
        }], icon: [{
            type: i0.Input
        }] }); })();
        return HelpComponent;
    }());
    HelpComponent.ctorParameters = function () { return [
        { type: DocsService },
        { type: AppStateService },
        { type: i1$1.TranslateService }
    ]; };
    HelpComponent.propDecorators = {
        src: [{ type: i0.Input }],
        isCollapsed: [{ type: i0.Input }],
        priority: [{ type: i0.Input }],
        icon: [{ type: i0.Input }]
    };

    /**
     * Provides components which allow to display help elements
     * inside the app.
     * @exports HelpComponent A component which shows a context help in
     *                        the action bar.
     */
    var HelpModule = /** @class */ (function () {
        function HelpModule() {
        }
HelpModule.ɵfac = function HelpModule_Factory(t) { return new (t || HelpModule)(); };
HelpModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: HelpModule });
HelpModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule, collapse.CollapseModule.forRoot(), ActionBarModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HelpModule, [{
        type: i0.NgModule,
        args: [{
                declarations: [HelpComponent],
                imports: [CommonModule, collapse.CollapseModule.forRoot(), ActionBarModule],
                exports: [HelpComponent],
                entryComponents: [HelpComponent]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(HelpModule, { declarations: [HelpComponent], imports: [CommonModule, ɵngcc10.CollapseModule, ActionBarModule], exports: [HelpComponent] }); })();
        return HelpModule;
    }());

    var RealtimeButtonComponent = /** @class */ (function () {
        function RealtimeButtonComponent() {
        }
        Object.defineProperty(RealtimeButtonComponent.prototype, "active", {
            get: function () {
                return !!this.service && this.service.active;
            },
            enumerable: false,
            configurable: true
        });
        RealtimeButtonComponent.prototype.toggle = function () {
            if (this.service) {
                this.active ? this.service.stop() : this.service.start();
            }
        };
RealtimeButtonComponent.ɵfac = function RealtimeButtonComponent_Factory(t) { return new (t || RealtimeButtonComponent)(); };
RealtimeButtonComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: RealtimeButtonComponent, selectors: [["c8y-realtime-btn"]], inputs: { service: "service" }, decls: 5, vars: 7, consts: [["type", "button", 1, "btn", "btn-link", "c8y-realtime", 3, "title", "click"], [1, "c8y-pulse", 3, "ngClass"], ["translate", ""]], template: function RealtimeButtonComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "button", 0);
        ɵngcc0.ɵɵlistener("click", function RealtimeButtonComponent_Template_button_click_0_listener() { return ctx.toggle(); });
        ɵngcc0.ɵɵpipe(1, "translate");
        ɵngcc0.ɵɵelement(2, "span", 1);
        ɵngcc0.ɵɵelementStart(3, "span", 2);
        ɵngcc0.ɵɵtext(4, "Realtime");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(1, 2, "Toggle realtime"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction2(4, _c77, ctx.active, !ctx.active));
    } }, directives: [ɵngcc6.NgClass, C8yTranslateDirective], pipes: [C8yTranslatePipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(RealtimeButtonComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-realtime-btn',
                template: "<button\n  type=\"button\"\n  class=\"btn btn-link c8y-realtime\"\n  title=\"{{ 'Toggle realtime' | translate }}\"\n  (click)=\"toggle()\"\n>\n  <span class=\"c8y-pulse\" [ngClass]=\"{ active: active, inactive: !active }\"></span>\n  <span translate>Realtime</span>\n</button>\n"
            }]
    }], function () { return []; }, { service: [{
            type: i0.Input
        }] }); })();
        return RealtimeButtonComponent;
    }());
    RealtimeButtonComponent.propDecorators = {
        service: [{ type: i0.Input }]
    };

    var RealtimeModule = /** @class */ (function () {
        function RealtimeModule() {
        }
RealtimeModule.ɵfac = function RealtimeModule_Factory(t) { return new (t || RealtimeModule)(); };
RealtimeModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: RealtimeModule });
RealtimeModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(RealtimeModule, [{
        type: i0.NgModule,
        args: [{
                imports: [CommonModule],
                declarations: [RealtimeButtonComponent],
                exports: [RealtimeButtonComponent]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(RealtimeModule, { declarations: [RealtimeButtonComponent], imports: [CommonModule], exports: [RealtimeButtonComponent] }); })();
        return RealtimeModule;
    }());

    exports.ModalSelectionMode = void 0;
    (function (ModalSelectionMode) {
        ModalSelectionMode["SINGLE"] = "single";
        ModalSelectionMode["MULTI"] = "multi";
    })(exports.ModalSelectionMode || (exports.ModalSelectionMode = {}));

    var SelectModalComponent = /** @class */ (function () {
        function SelectModalComponent(bsModalRef) {
            var _this = this;
            this.bsModalRef = bsModalRef;
            this.subTitle = gettext('Select from the list of items matching the device type');
            this.mode = exports.ModalSelectionMode.MULTI;
            this.disableSelected = true;
            this.showFilter = true;
            this.areMoreEntries = false;
            this.result = new i0.EventEmitter();
            this.search = new i0.EventEmitter();
            this.selected = false;
            this.filterTerm = '';
            this.listItems = [];
            this.debouncer = new rxjs.Subject();
            this._labels = { ok: gettext('Confirm'), cancel: gettext('Cancel') };
            this.debouncer.pipe(operators.debounceTime(500)).subscribe(function (value) {
                _this.search.emit(value);
            });
        }
        Object.defineProperty(SelectModalComponent.prototype, "labels", {
            get: function () {
                return this._labels;
            },
            set: function (labels) {
                var _a = labels || {}, _b = _a.ok, ok = _b === void 0 ? this.labels.ok : _b, _c = _a.cancel, cancel = _c === void 0 ? this.labels.cancel : _c;
                this._labels = { ok: ok, cancel: cancel };
            },
            enumerable: false,
            configurable: true
        });
        SelectModalComponent.prototype.ngOnChanges = function (changes) {
            return __awaiter(this, void 0, void 0, function () {
                var itemsPromise, _a;
                var _this = this;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            if (!(changes.items && changes.items.currentValue)) return [3 /*break*/, 2];
                            itemsPromise = changes.items.currentValue.map(function (item) { return __awaiter(_this, void 0, void 0, function () {
                                var _a, selected;
                                return __generator(this, function (_b) {
                                    switch (_b.label) {
                                        case 0:
                                            _a = item;
                                            return [4 /*yield*/, item.options];
                                        case 1:
                                            _a.options = _b.sent();
                                            selected = item.options.find(function (option) { return option.selected; });
                                            if (selected) {
                                                item.selectedId = selected.obj.id;
                                                if (this.disableSelected) {
                                                    item.options.map(function (option) { return lodashEs.assign(option, { disabled: true }); });
                                                }
                                            }
                                            return [2 /*return*/, item];
                                    }
                                });
                            }); });
                            _a = this;
                            return [4 /*yield*/, Promise.all(itemsPromise)];
                        case 1:
                            _a.listItems = _b.sent();
                            _b.label = 2;
                        case 2: return [2 /*return*/];
                    }
                });
            });
        };
        SelectModalComponent.prototype.updatePipe = function (filterTerm) {
            this.debouncer.next(filterTerm);
            this.filterTerm = filterTerm;
        };
        SelectModalComponent.prototype.updateChoice = function (_a) {
            var item = _a.item, id = _a.id;
            if (this.mode === 'single') {
                this.listItems.map(function (value) { return (value.selectedId = undefined); });
            }
            item.selectedId = id;
            this.selected = true;
        };
        SelectModalComponent.prototype.dismiss = function () {
            this.bsModalRef.hide();
        };
        SelectModalComponent.prototype.select = function () {
            this.result.emit(this.getOutput());
            this.bsModalRef.hide();
        };
        SelectModalComponent.prototype.ngOnDestroy = function () {
            this.debouncer.complete();
            this.result.complete();
            this.search.complete();
        };
        SelectModalComponent.prototype.getOutput = function () {
            return this.listItems
                .filter(function (item) { return item.selectedId; })
                .map(function (item) { return item.options.find(function (option) { return item.selectedId === option.obj.id; }); })
                .filter(function (option) { return !option.selected; })
                .map(function (selectedOption) { return selectedOption.obj; });
        };
SelectModalComponent.ɵfac = function SelectModalComponent_Factory(t) { return new (t || SelectModalComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc12.BsModalRef)); };
SelectModalComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: SelectModalComponent, selectors: [["c8y-select-modal"]], inputs: { subTitle: "subTitle", mode: "mode", disableSelected: "disableSelected", showFilter: "showFilter", areMoreEntries: "areMoreEntries", labels: "labels", icon: "icon", title: "title", items: "items" }, outputs: { result: "result", search: "search" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 24, vars: 22, consts: [[1, "viewport-modal"], [1, "modal-header", "dialog-header"], [3, "c8yIcon"], [1, "text-uppercase"], [1, "p-16", "text-center", "separator-bottom"], [1, "m-b-8"], [3, "icon", "onSearch", 4, "ngIf"], [1, "modal-inner-scroll"], [1, "p-l-16", "p-r-16"], ["class", "panel m-t-8 m-b-8", 4, "ngIf"], [4, "ngFor", "ngForOf"], [4, "ngIf"], [1, "modal-footer"], ["class", "btn btn-default", 3, "title", "click", 4, "ngIf"], [1, "btn", "btn-primary", 3, "title", "disabled", "click"], [3, "icon", "onSearch"], [1, "panel", "m-t-8", "m-b-8"], [1, "c8y-empty-state", "text-left"], [1, "c8y-icon-duocolor", 3, "c8yIcon"], ["translate", ""], [1, "content-flex-30"], [1, "col-9"], [3, "ngClass", 4, "ngFor", "ngForOf"], ["class", "col-3 text-right", 4, "ngIf"], [3, "ngClass"], [3, "title", "pattern", "text"], [1, "col-3", "text-right"], [3, "name", "disabled", "selected", "onSelect"], [1, "content-flex-50"], [3, "pattern", "text"], ["translate", "", 1, "alert", "alert-info", "m-t-16", "m-r-8", "m-l-8"], [1, "btn", "btn-default", 3, "title", "click"]], template: function SelectModalComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵelement(2, "span", 2);
        ɵngcc0.ɵɵelementStart(3, "h4", 3);
        ɵngcc0.ɵɵtext(4);
        ɵngcc0.ɵɵpipe(5, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(6, "div", 4);
        ɵngcc0.ɵɵelementStart(7, "p", 5);
        ɵngcc0.ɵɵtext(8);
        ɵngcc0.ɵɵpipe(9, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(10, SelectModalComponent_c8y_filter_10_Template, 1, 1, "c8y-filter", 6);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(11, "div", 7);
        ɵngcc0.ɵɵelementStart(12, "div", 8);
        ɵngcc0.ɵɵtemplate(13, SelectModalComponent_div_13_Template, 5, 1, "div", 9);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(14, "c8y-list-group");
        ɵngcc0.ɵɵtemplate(15, SelectModalComponent_c8y_li_15_Template, 10, 4, "c8y-li", 10);
        ɵngcc0.ɵɵpipe(16, "selectModalFilterPipe");
        ɵngcc0.ɵɵtemplate(17, SelectModalComponent_div_17_Template, 3, 0, "div", 11);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(18, "div", 12);
        ɵngcc0.ɵɵtemplate(19, SelectModalComponent_button_19_Template, 4, 6, "button", 13);
        ɵngcc0.ɵɵelementStart(20, "button", 14);
        ɵngcc0.ɵɵlistener("click", function SelectModalComponent_Template_button_click_20_listener() { return ctx.select(); });
        ɵngcc0.ɵɵpipe(21, "translate");
        ɵngcc0.ɵɵtext(22);
        ɵngcc0.ɵɵpipe(23, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵpropertyInterpolate("c8yIcon", ctx.icon);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(5, 11, ctx.title), " ");
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(9, 13, ctx.subTitle));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showFilter);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.items || ctx.items.length === 0);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngForOf", ɵngcc0.ɵɵpipeBind2(16, 15, ctx.listItems, ctx.filterTerm));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.areMoreEntries);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.labels.cancel);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(21, 18, ctx.labels.ok));
        ɵngcc0.ɵɵproperty("disabled", !ctx.selected);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(23, 20, ctx.labels.ok), " ");
    } }, directives: function () { return [IconDirective, ɵngcc6.NgIf, ListGroupComponent, ɵngcc6.NgForOf, FilterInputComponent, C8yTranslateDirective, ListItemComponent, ListItemIconComponent, ListItemBodyComponent, ListItemCollapseComponent, ɵngcc6.NgClass, HighlightComponent, ListItemRadioComponent]; }, pipes: function () { return [C8yTranslatePipe, SelectModalFilterPipe]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SelectModalComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-select-modal',
                template: "<div class=\"viewport-modal\">\n  <div class=\"modal-header dialog-header\">\n    <span c8yIcon=\"{{ icon }}\"></span>\n    <h4 class=\"text-uppercase\">\n      {{ title | translate }}\n    </h4>\n  </div>\n  <div class=\"p-16 text-center separator-bottom\">\n    <p class=\"m-b-8\">{{ subTitle | translate }}</p>\n    <c8y-filter *ngIf=\"showFilter\" [icon]=\"'search'\" (onSearch)=\"updatePipe($event)\"></c8y-filter>\n  </div>\n  <div class=\"modal-inner-scroll\">\n    <div class=\"p-l-16 p-r-16\">\n      <div class=\"panel m-t-8 m-b-8\" *ngIf=\"!items || items.length === 0\">\n        <div class=\"c8y-empty-state text-left\">\n          <h1 c8yIcon=\"{{ icon }} \" class=\"c8y-icon-duocolor\"></h1>\n          <p translate>No items to display.</p>\n        </div>\n      </div>\n    </div>\n    <c8y-list-group>\n      <c8y-li *ngFor=\"let item of listItems | selectModalFilterPipe: filterTerm\">\n        <c8y-li-icon>\n          <i c8yIcon=\"{{ icon }}\"></i>\n        </c8y-li-icon>\n\n        <c8y-li-body class=\"content-flex-30\">\n          <div class=\"col-9\">\n            <div *ngFor=\"let bodyPart of item.body\" [ngClass]=\"bodyPart.class\">\n              <c8y-highlight\n                [title]=\"bodyPart.value\"\n                [pattern]=\"filterTerm\"\n                [text]=\"bodyPart.value\"\n              ></c8y-highlight>\n            </div>\n          </div>\n\n          <div class=\"col-3 text-right\" *ngIf=\"item.additionalInformation\">\n            <div [ngClass]=\"item.additionalInformation.class\">\n              {{ item.additionalInformation.value }}\n            </div>\n          </div>\n        </c8y-li-body>\n\n        <c8y-li-collapse>\n          <c8y-list-group>\n            <c8y-li *ngFor=\"let option of item.options\">\n              <c8y-li-radio\n                [name]=\"mode === 'single' ? 'single' : item.groupId\"\n                (onSelect)=\"updateChoice({ item: item, id: option.obj.id })\"\n                [disabled]=\"option.disabled\"\n                [selected]=\"option.selected\"\n              >\n              </c8y-li-radio>\n              <c8y-li-body class=\"content-flex-50\">\n                <div\n                  *ngFor=\"let optionPart of option.body; let i = index\"\n                  [ngClass]=\"optionPart.class\"\n                >\n                  <c8y-highlight [pattern]=\"filterTerm\" [text]=\"optionPart.value\"></c8y-highlight>\n                </div>\n              </c8y-li-body>\n            </c8y-li>\n          </c8y-list-group>\n        </c8y-li-collapse>\n      </c8y-li>\n      <div *ngIf=\"areMoreEntries\">\n        <div class=\"alert alert-info m-t-16 m-r-8 m-l-8\" translate>\n          Some entries might not be shown. Try narrowing search criteria.\n        </div>\n      </div>\n    </c8y-list-group>\n  </div>\n\n  <div class=\"modal-footer\">\n    <button\n      title=\"{{ labels.cancel | translate }}\"\n      *ngIf=\"labels.cancel\"\n      class=\"btn btn-default\"\n      (click)=\"dismiss()\"\n    >\n      {{ labels.cancel | translate }}\n    </button>\n    <button\n      title=\"{{ labels.ok | translate }}\"\n      class=\"btn btn-primary\"\n      (click)=\"select()\"\n      [disabled]=\"!selected\"\n    >\n      {{ labels.ok | translate }}\n    </button>\n  </div>\n</div>\n"
            }]
    }], function () { return [{ type: ɵngcc12.BsModalRef }]; }, { subTitle: [{
            type: i0.Input
        }], mode: [{
            type: i0.Input
        }], disableSelected: [{
            type: i0.Input
        }], showFilter: [{
            type: i0.Input
        }], areMoreEntries: [{
            type: i0.Input
        }], result: [{
            type: i0.Output
        }], search: [{
            type: i0.Output
        }], labels: [{
            type: i0.Input
        }], icon: [{
            type: i0.Input
        }], title: [{
            type: i0.Input
        }], items: [{
            type: i0.Input
        }] }); })();
        return SelectModalComponent;
    }());
    SelectModalComponent.ctorParameters = function () { return [
        { type: i1$2.BsModalRef }
    ]; };
    SelectModalComponent.propDecorators = {
        icon: [{ type: i0.Input }],
        title: [{ type: i0.Input }],
        subTitle: [{ type: i0.Input }],
        items: [{ type: i0.Input }],
        mode: [{ type: i0.Input }],
        disableSelected: [{ type: i0.Input }],
        showFilter: [{ type: i0.Input }],
        areMoreEntries: [{ type: i0.Input }],
        labels: [{ type: i0.Input }],
        result: [{ type: i0.Output }],
        search: [{ type: i0.Output }]
    };

    var SelectModalFilterPipe = /** @class */ (function () {
        function SelectModalFilterPipe() {
        }
        SelectModalFilterPipe.prototype.transform = function (items, filterTerm) {
            var _this = this;
            return filterTerm.trim().length === 0
                ? items
                : items.filter(function (item) {
                    var allValues = _this.extractValues(item);
                    var filteredValues = allValues.filter(function (value) { return _this.filterContainString(value, filterTerm); });
                    return filteredValues.length > 0;
                });
        };
        SelectModalFilterPipe.prototype.filterContainString = function (value, filterTerm) {
            var term = filterTerm.toLowerCase().trim();
            return value && value.toLowerCase().indexOf(term) > -1;
        };
        SelectModalFilterPipe.prototype.extractValues = function (item) {
            var _this = this;
            var values = [];
            if (item.value) {
                values.push(item.value);
            }
            Object.keys(item).forEach(function (key) {
                if (Array.isArray(item[key])) {
                    item[key].forEach(function (obj) { return values.concat(_this.extractValues(obj)); });
                }
                if (item[key] instanceof Object) {
                    values = values.concat(_this.extractValues(item[key]));
                }
            });
            return values;
        };
SelectModalFilterPipe.ɵfac = function SelectModalFilterPipe_Factory(t) { return new (t || SelectModalFilterPipe)(); };
SelectModalFilterPipe.ɵpipe = /*@__PURE__*/ ɵngcc0.ɵɵdefinePipe({ name: "selectModalFilterPipe", type: SelectModalFilterPipe, pure: true });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SelectModalFilterPipe, [{
        type: i0.Pipe,
        args: [{
                name: 'selectModalFilterPipe'
            }]
    }], function () { return []; }, null); })();
        return SelectModalFilterPipe;
    }());

    var SelectModalModule = /** @class */ (function () {
        function SelectModalModule() {
        }
SelectModalModule.ɵfac = function SelectModalModule_Factory(t) { return new (t || SelectModalModule)(); };
SelectModalModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: SelectModalModule });
SelectModalModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[
            dropdown.BsDropdownModule.forRoot(),
            CommonModule,
            ListGroupModule,
            SearchModule,
            FormsModule
        ]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SelectModalModule, [{
        type: i0.NgModule,
        args: [{
                imports: [
                    dropdown.BsDropdownModule.forRoot(),
                    CommonModule,
                    ListGroupModule,
                    SearchModule,
                    FormsModule
                ],
                exports: [
                    SelectModalComponent,
                    SelectModalFilterPipe
                ],
                declarations: [
                    SelectModalComponent,
                    SelectModalFilterPipe
                ]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SelectModalModule, { declarations: [SelectModalComponent, SelectModalFilterPipe], imports: [ɵngcc9.BsDropdownModule, CommonModule, ListGroupModule, SearchModule, FormsModule], exports: [SelectModalComponent, SelectModalFilterPipe] }); })();
        return SelectModalModule;
    }());

    var SelectComponent = /** @class */ (function () {
        function SelectComponent() {
            this.placeholder = gettext('Select item');
            this.applyLabel = gettext('Apply');
            this.disableApplyOnNoSelection = false;
            this.onChange = new i0.EventEmitter();
            this.textFilter = '';
            this.labelText = '';
            this.isOpen = false;
            this.filteredItems = [];
            this.searchFilter = null;
            this.sizeToShowFilter = 5;
            this.labelsForSelectAll = {
                all: gettext('All'),
                allFiltered: gettext('All filtered')
            };
            this.showAllLabel = false;
            this.itemsSelected = new Set();
            this.stopClicks = false;
        }
        SelectComponent.prototype.preventClick = function (evt) {
            if (this.stopClicks) {
                evt.stopPropagation();
            }
            this.stopClicks = this.isOpen;
        };
        SelectComponent.prototype.isOpenChange = function (isOpen) {
            this.isOpen = isOpen;
            if (isOpen) {
                this.updateSelected();
                this.searchFilter = null;
            }
            else {
                this.stopClicks = false;
            }
        };
        SelectComponent.prototype.outterSelected = function (item) {
            var selected = this.selected;
            var isSelected = function () { return false; };
            if (typeof selected === 'function') {
                isSelected = selected;
            }
            else if (Array.isArray(selected)) {
                isSelected = function (i) { return selected.indexOf(i) > -1; };
            }
            return isSelected(item);
        };
        SelectComponent.prototype.isSelected = function (item) {
            return this.itemsSelected.has(item);
        };
        SelectComponent.prototype.isAllItemsSelected = function () {
            return this.itemsSelected.size === this.items.length;
        };
        SelectComponent.prototype.isAllFilteredSelected = function () {
            return this.itemsSelected.size === this.filteredItems.length;
        };
        SelectComponent.prototype.isNoItemSelected = function () {
            return !this.itemsSelected.size;
        };
        SelectComponent.prototype.applyChanges = function () {
            var selected = Array.from(this.itemsSelected.values());
            this.onChange.emit(selected);
            this.dropdown.hide();
        };
        SelectComponent.prototype.selectAll = function (checked) {
            var _this = this;
            this.filteredItems.forEach(function (item) { return _this.onChangeItem(checked, item); });
        };
        SelectComponent.prototype.ngOnInit = function () {
            var _this = this;
            if (this.updateItems) {
                this.updateItems.subscribe(function () {
                    _this.updateSelected();
                    _this.updateLabel();
                    _this.showAllLabel = _this.isAllItemsSelected();
                });
            }
        };
        SelectComponent.prototype.onChangeItem = function (checked, item) {
            if (checked) {
                this.itemsSelected.add(item);
            }
            else {
                this.itemsSelected.delete(item);
            }
        };
        SelectComponent.prototype.updateFiltered = function (term) {
            if (term) {
                var search_1 = new RegExp(term, 'i');
                this.filteredItems = this.items.filter(function (_a) {
                    var name = _a.name;
                    return search_1.test(name);
                });
            }
            else {
                this.filteredItems = this.items;
            }
        };
        SelectComponent.prototype.getSelectAllToggleStatus = function () {
            var label = this.getLabel();
            var checked = this.isAllSelected();
            var indeterminate = !checked && this.itemsSelected.size > 0;
            return { label: label, checked: checked, indeterminate: indeterminate };
        };
        SelectComponent.prototype.ngOnChanges = function (changes) {
            if (this.isOpen) {
                return;
            }
            if (changes.items || changes.selected || changes.applyLabel) {
                this.updateSelected();
                this.updateLabel();
                this.showAllLabel = this.isAllItemsSelected();
            }
        };
        SelectComponent.prototype.ngOnDestroy = function () {
            if (this.updateItems && !this.updateItems.closed) {
                this.updateItems.unsubscribe();
            }
        };
        SelectComponent.prototype.updateLabel = function () {
            var _this = this;
            var outterSelected = this.items.filter(function (i) { return _this.outterSelected(i); });
            if (typeof this.selectedLabel === 'string') {
                this.labelText = this.selectedLabel;
            }
            else if (typeof this.selectedLabel === 'function') {
                this.labelText = this.selectedLabel(outterSelected);
            }
            else {
                this.labelText = outterSelected.map(function (_a) {
                    var name = _a.name;
                    return name;
                }).join(', ');
            }
        };
        SelectComponent.prototype.updateSelected = function () {
            var _this = this;
            var _a = this, itemsSelected = _a.itemsSelected, items = _a.items;
            itemsSelected.clear();
            items.forEach(function (item) {
                if (_this.outterSelected(item)) {
                    itemsSelected.add(item);
                }
            });
            this.filteredItems = items;
        };
        SelectComponent.prototype.isAllSelected = function () {
            if (this.getLabel() === this.labelsForSelectAll.allFiltered) {
                return this.isAllFilteredSelected();
            }
            else {
                return this.isAllItemsSelected();
            }
        };
        SelectComponent.prototype.getLabel = function () {
            return this.searchFilter ? this.labelsForSelectAll.allFiltered : this.labelsForSelectAll.all;
        };
SelectComponent.ɵfac = function SelectComponent_Factory(t) { return new (t || SelectComponent)(); };
SelectComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: SelectComponent, selectors: [["c8y-select"]], contentQueries: function SelectComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, ListItemComponent, 4);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.liChildren = _t);
    } }, viewQuery: function SelectComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(dropdown.BsDropdownDirective, 5);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.dropdown = _t.first);
    } }, hostBindings: function SelectComponent_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("click", function SelectComponent_click_HostBindingHandler($event) { return ctx.preventClick($event); });
    } }, inputs: { placeholder: "placeholder", applyLabel: "applyLabel", disableApplyOnNoSelection: "disableApplyOnNoSelection", selectedLabel: "selectedLabel", items: "items", selected: "selected", updateItems: "updateItems" }, outputs: { onChange: "onChange" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c79, decls: 7, vars: 5, consts: [["dropdown", "", "c8yDropdownDirection", "", 1, "c8y-child-assets-selector", "dropdown", "fit-w", 3, "isOpenChange"], ["dropdown", ""], ["type", "button", "dropdownToggle", "", 1, "btn", "dropdown-toggle", "c8y-dropdown", 3, "title"], ["class", "text-truncate", 4, "ngIf"], ["class", "text-truncate text-muted", 4, "ngIf"], ["class", "dropdown-menu multiselect-container", 4, "dropdownMenu"], [1, "text-truncate"], [4, "ngIf"], [1, "text-truncate", "text-muted"], [1, "dropdown-menu", "multiselect-container"], ["class", "multiselect-item", 4, "ngIf"], [1, "multiselect-item"], ["ng-click", "vm.toggleSelectAll(); $event.preventDefault()", 1, "c8y-checkbox", "input-sm", 3, "title"], ["type", "checkbox", 1, "m-t-0", 3, "checked", "indeterminate", "change"], [1, "label-text"], [1, "multiselect-item-container"], [1, "list-unstyled"], ["class", "multiselect-item", 4, "ngFor", "ngForOf"], [1, "divider"], [1, "bg-white"], [1, "btn", "btn-primary", "btn-block", 3, "title", "disabled", "click"], [1, "input-group", "input-group-search"], ["type", "search", 1, "form-control", 3, "placeholder", "ngModel", "keyup", "ngModelChange"], [1, "input-group-addon"], ["c8yIcon", "search", 4, "ngIf"], ["c8yIcon", "times", "class", "text-muted", 3, "click", 4, "ngIf"], ["c8yIcon", "search"], ["c8yIcon", "times", 1, "text-muted", 3, "click"], [1, "c8y-checkbox", "input-sm", "text-truncate", 3, "title"], ["type", "checkbox", 1, "m-t-0", 3, "checked", "change"]], template: function SelectComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c78);
        ɵngcc0.ɵɵelementStart(0, "div", 0, 1);
        ɵngcc0.ɵɵlistener("isOpenChange", function SelectComponent_Template_div_isOpenChange_0_listener($event) { return ctx.isOpenChange($event); });
        ɵngcc0.ɵɵelementStart(2, "button", 2);
        ɵngcc0.ɵɵpipe(3, "translate");
        ɵngcc0.ɵɵtemplate(4, SelectComponent_span_4_Template, 3, 2, "span", 3);
        ɵngcc0.ɵɵtemplate(5, SelectComponent_span_5_Template, 3, 3, "span", 4);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(6, SelectComponent_ul_6_Template, 3, 1, "ul", 5);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(3, 3, ctx.labelText || ctx.placeholder));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.labelText);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.labelText);
    } }, directives: [ɵngcc9.BsDropdownDirective, DropdownDirectionDirective, ɵngcc9.BsDropdownToggleDirective, ɵngcc6.NgIf, ɵngcc9.BsDropdownMenuDirective, ɵngcc6.NgForOf, ɵngcc13.DefaultValueAccessor, ɵngcc13.NgControlStatus, ɵngcc13.NgModel, IconDirective], pipes: [C8yTranslatePipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SelectComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-select',
                template: "<div\n  class=\"c8y-child-assets-selector dropdown fit-w\"\n  (isOpenChange)=\"isOpenChange($event)\"\n  dropdown\n  #dropdown\n  c8yDropdownDirection\n>\n  <button\n    type=\"button\"\n    class=\"btn dropdown-toggle c8y-dropdown\"\n    title=\"{{ labelText || placeholder | translate }}\"\n    dropdownToggle\n  >\n    <span class=\"text-truncate\" *ngIf=\"labelText\">\n      <ng-container *ngIf=\"showAllLabel\">{{ 'All' | translate }}</ng-container>\n      <ng-container *ngIf=\"!showAllLabel\">{{ labelText | translate }}</ng-container>\n    </span>\n    <span class=\"text-truncate text-muted\" *ngIf=\"!labelText\">\n      {{ placeholder | translate }}\n    </span>\n  </button>\n\n  <ul class=\"dropdown-menu multiselect-container\" *dropdownMenu>\n    <ng-content select=\"c8y-li\"></ng-content>\n    <ng-container *ngIf=\"liChildren.length === 0\">\n      <li *ngIf=\"items.length > sizeToShowFilter\" class=\"multiselect-item\">\n        <div class=\"input-group input-group-search\">\n          <input\n            type=\"search\"\n            class=\"form-control\"\n            placeholder=\"{{ 'Filter' | translate }}\u2026\"\n            (keyup)=\"updateFiltered($event.target.value)\"\n            [(ngModel)]=\"searchFilter\"\n          />\n          <span class=\"input-group-addon\">\n            <i c8yIcon=\"search\" *ngIf=\"!textFilter\"></i>\n            <i c8yIcon=\"times\" class=\"text-muted\" *ngIf=\"textFilter\" (click)=\"textFilter = ''\"></i>\n          </span>\n        </div>\n      </li>\n\n      <li class=\"multiselect-item\">\n        <label\n          [title]=\"getSelectAllToggleStatus().label | translate\"\n          class=\"c8y-checkbox input-sm\"\n          ng-click=\"vm.toggleSelectAll(); $event.preventDefault()\"\n        >\n          <input\n            type=\"checkbox\"\n            [checked]=\"getSelectAllToggleStatus().checked\"\n            (change)=\"selectAll($event.target.checked)\"\n            [indeterminate]=\"getSelectAllToggleStatus().indeterminate\"\n            class=\"m-t-0\"\n          />\n          <span></span>\n          <span class=\"label-text\">\n            {{ getSelectAllToggleStatus().label | translate }}\n          </span>\n        </label>\n      </li>\n\n      <li class=\"multiselect-item-container\">\n        <ul class=\"list-unstyled\">\n          <li class=\"multiselect-item\" *ngFor=\"let item of filteredItems\">\n            <label title=\"{{ item.name | translate }}\" class=\"c8y-checkbox input-sm text-truncate\">\n              <input\n                type=\"checkbox\"\n                [checked]=\"isSelected(item)\"\n                (change)=\"onChangeItem($event.target.checked, item)\"\n                class=\"m-t-0\"\n              />\n              <span></span>\n              <span class=\"label-text\">\n                {{ item.name | translate }}\n              </span>\n            </label>\n          </li>\n        </ul>\n      </li>\n      <li class=\"divider\"></li>\n      <li class=\"bg-white\">\n        <button\n          title=\"{{ applyLabel | translate }}\"\n          class=\"btn btn-primary btn-block\"\n          [disabled]=\"disableApplyOnNoSelection && isNoItemSelected()\"\n          (click)=\"applyChanges()\"\n        >\n          {{ applyLabel | translate }}\n        </button>\n      </li>\n    </ng-container>\n  </ul>\n</div>\n"
            }]
    }], function () { return []; }, { placeholder: [{
            type: i0.Input
        }], applyLabel: [{
            type: i0.Input
        }], disableApplyOnNoSelection: [{
            type: i0.Input
        }], onChange: [{
            type: i0.Output
        }], preventClick: [{
            type: i0.HostListener,
            args: ['click', ['$event']]
        }], selectedLabel: [{
            type: i0.Input
        }], items: [{
            type: i0.Input
        }], selected: [{
            type: i0.Input
        }], updateItems: [{
            type: i0.Input
        }], dropdown: [{
            type: i0.ViewChild,
            args: [dropdown.BsDropdownDirective, { static: false }]
        }], liChildren: [{
            type: i0.ContentChildren,
            args: [ListItemComponent]
        }] }); })();
        return SelectComponent;
    }());
    SelectComponent.propDecorators = {
        placeholder: [{ type: i0.Input }],
        selectedLabel: [{ type: i0.Input }],
        applyLabel: [{ type: i0.Input }],
        items: [{ type: i0.Input }],
        selected: [{ type: i0.Input }],
        updateItems: [{ type: i0.Input }],
        disableApplyOnNoSelection: [{ type: i0.Input }],
        onChange: [{ type: i0.Output }],
        dropdown: [{ type: i0.ViewChild, args: [dropdown.BsDropdownDirective, { static: false },] }],
        liChildren: [{ type: i0.ContentChildren, args: [ListItemComponent,] }],
        preventClick: [{ type: i0.HostListener, args: ['click', ['$event'],] }]
    };

    var TypeaheadComponent = /** @class */ (function () {
        function TypeaheadComponent() {
            this.required = false;
            this.disabled = false;
            this.allowFreeEntries = true;
            this.displayProperty = 'name';
            this.icon = 'caret-down';
            this.name = this.displayProperty;
            this.autoClose = true;
            this.container = '';
            this.selected = {
                id: null
            };
            this.onSearch = new i0.EventEmitter();
            this.onIconClick = new i0.EventEmitter();
            this.KEYCODE_UP = 38;
            this.KEYCODE_DOWN = 40;
            this.KEYCODE_TAB = 9;
            this.KEYCODE_ENTER = 13;
            this.KEYCODE_ESC = 27;
        }
        TypeaheadComponent.prototype.writeValue = function (value) {
            this.selected = value;
            if (value && this.searchControl) {
                this.searchControl.nativeElement.value = lodashEs.get(value, this.displayProperty, '');
            }
        };
        TypeaheadComponent.prototype.registerOnChange = function (fn) {
            this.onChange = fn;
        };
        TypeaheadComponent.prototype.registerOnTouched = function (fn) {
            this.onTouched = fn;
        };
        TypeaheadComponent.prototype.doBlur = function () {
            if (this.onTouched) {
                this.onTouched();
            }
        };
        TypeaheadComponent.prototype.getDisplayProperty = function () {
            return lodashEs.get(this.selected, this.displayProperty, '');
        };
        TypeaheadComponent.prototype.onShown = function () {
            this.searchControl.nativeElement.focus();
        };
        /**
         * Resets the input field - clear value and clean field to be pristine and untouched.
         */
        TypeaheadComponent.prototype.reset = function () {
            this.searchControlModel.reset();
        };
        TypeaheadComponent.prototype.ngOnDestroy = function () {
            if (this.subscription) {
                this.subscription.unsubscribe();
            }
        };
        TypeaheadComponent.prototype.ngAfterViewInit = function () {
            var _this = this;
            this.subscription = rxjs.fromEvent(this.searchControl.nativeElement, 'keydown')
                .pipe(operators.map(function (e) { return _this.handleKeyboard(e); }), operators.filter(function (e) { return e; }), operators.debounceTime(200), operators.map(function (e) { return e.target.value; }), operators.distinctUntilChanged())
                .subscribe(function (value) {
                _this.selected = {
                    id: null
                };
                lodashEs.set(_this.selected, _this.displayProperty, value || '');
                _this.onChange(_this.selected);
                _this.onSearch.emit(value);
            });
        };
        TypeaheadComponent.prototype.handleKeyboard = function (event) {
            var keyCode = event.keyCode;
            if ([this.KEYCODE_ENTER, this.KEYCODE_DOWN, this.KEYCODE_TAB, this.KEYCODE_UP].includes(keyCode)) {
                var items = this.list.toArray();
                var index = lodashEs.findIndex(items, function (item) { return item.active; });
                if (keyCode === this.KEYCODE_ENTER || keyCode === this.KEYCODE_TAB) {
                    if (index > -1) {
                        event.preventDefault();
                        items[index].element.nativeElement.click();
                    }
                    this.dropdown.hide();
                    this.searchControl.nativeElement.blur();
                }
                else {
                    this.dropdown.show();
                    var upOrDown = keyCode === this.KEYCODE_DOWN ? 1 : -1;
                    if (index > -1) {
                        items[index].active = false;
                    }
                    this.selectNextItemOnKeyboardMove(items, index, upOrDown);
                }
                return;
            }
            else if (keyCode === this.KEYCODE_ESC && this.autoClose) {
                event.stopPropagation();
                this.dropdown.hide();
                this.searchControl.nativeElement.blur();
                return;
            }
            else {
                this.dropdown.show();
            }
            return event;
        };
        TypeaheadComponent.prototype.validate = function (ctrl) {
            if (this.required && !this.getDisplayProperty()) {
                return { required: true };
            }
            if (!this.allowFreeEntries && this.selected && this.selected.id === null) {
                return { notExisting: true };
            }
            return null;
        };
        TypeaheadComponent.prototype.selectNextItemOnKeyboardMove = function (items, index, upOrDown) {
            if (items[index + upOrDown]) {
                if (!items[index + upOrDown].selectable) {
                    this.selectNextItemOnKeyboardMove(items, index + upOrDown, upOrDown);
                    return;
                }
                items[index + upOrDown].active = true;
            }
        };
TypeaheadComponent.ɵfac = function TypeaheadComponent_Factory(t) { return new (t || TypeaheadComponent)(); };
TypeaheadComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: TypeaheadComponent, selectors: [["c8y-typeahead"]], contentQueries: function TypeaheadComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, ListItemComponent, 4);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.list = _t);
    } }, viewQuery: function TypeaheadComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c80, 5);
        ɵngcc0.ɵɵviewQuery(_c81, 5);
        ɵngcc0.ɵɵviewQuery(_c82, 5);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.searchControl = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.searchControlModel = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.dropdown = _t.first);
    } }, inputs: { required: "required", disabled: "disabled", allowFreeEntries: "allowFreeEntries", displayProperty: "displayProperty", icon: "icon", name: "name", autoClose: "autoClose", container: "container", selected: "selected", maxlength: "maxlength", placeholder: "placeholder" }, outputs: { onSearch: "onSearch", onIconClick: "onIconClick" }, features: [ɵngcc0.ɵɵProvidersFeature([
            {
                provide: forms.NG_VALUE_ACCESSOR,
                multi: true,
                useExisting: i0.forwardRef(function () { return TypeaheadComponent; })
            },
            {
                provide: forms.NG_VALIDATORS,
                useExisting: i0.forwardRef(function () { return TypeaheadComponent; }),
                multi: true
            }
        ])], ngContentSelectors: _c84, decls: 14, vars: 17, consts: [["dropdown", "", "placement", "bottom left", 1, "c8y-search-dropdown", "dropdown", "fit-w", 3, "container", "autoClose", "isDisabled", "onShown"], ["dropdown", "bs-dropdown"], ["dropdownToggle", "", 1, "input-group", "input-group-dropdown"], ["type", "text", 1, "form-control", "text-truncate", "p-r-24", 3, "required", "ngModel", "placeholder", "name", "maxlength", "disabled", "title", "blur"], ["searchControl", "", "searchControlModel", "ngModel"], ["class", "label label-info p-absolute", "style", "top: 10px; right: 40px; z-index: 10", "translate", "", 4, "ngIf"], [1, "input-group-btn"], ["type", "button", 1, "btn", "btn-clean", 3, "disabled", "click"], [3, "c8yIcon"], ["class", "dropdown-menu dropdown-menu--modal", 3, "width", 4, "dropdownMenu"], ["translate", "", 1, "label", "label-info", "p-absolute", 2, "top", "10px", "right", "40px", "z-index", "10"], [1, "dropdown-menu", "dropdown-menu--modal"]], template: function TypeaheadComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c83);
        ɵngcc0.ɵɵelementStart(0, "div", 0, 1);
        ɵngcc0.ɵɵlistener("onShown", function TypeaheadComponent_Template_div_onShown_0_listener() { return ctx.onShown(); });
        ɵngcc0.ɵɵelementStart(2, "div", 2);
        ɵngcc0.ɵɵelementStart(3, "input", 3, 4);
        ɵngcc0.ɵɵlistener("blur", function TypeaheadComponent_Template_input_blur_3_listener() { return ctx.doBlur(); });
        ɵngcc0.ɵɵpipe(6, "translate");
        ɵngcc0.ɵɵpipe(7, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(8, "span");
        ɵngcc0.ɵɵtemplate(9, TypeaheadComponent_span_9_Template, 2, 0, "span", 5);
        ɵngcc0.ɵɵelementStart(10, "span", 6);
        ɵngcc0.ɵɵelementStart(11, "button", 7);
        ɵngcc0.ɵɵlistener("click", function TypeaheadComponent_Template_button_click_11_listener() { return ctx.onIconClick.emit(ctx.icon); });
        ɵngcc0.ɵɵelement(12, "i", 8);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(13, TypeaheadComponent_c8y_list_group_13_Template, 2, 2, "c8y-list-group", 9);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        var tmp_10_0;
        ɵngcc0.ɵɵproperty("container", ctx.container)("autoClose", true)("isDisabled", ctx.disabled);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(7, 15, ctx.placeholder));
        ɵngcc0.ɵɵproperty("required", ctx.required)("ngModel", ctx.selected ? ctx.getDisplayProperty() : "")("placeholder", ɵngcc0.ɵɵpipeBind1(6, 13, ctx.placeholder))("name", ctx.name)("maxlength", ctx.maxlength)("disabled", ctx.disabled);
        ɵngcc0.ɵɵadvance(6);
        ɵngcc0.ɵɵproperty("ngIf", ctx.selected ? ctx.selected.id === null && ((tmp_10_0 = ctx.getDisplayProperty()) == null ? null : tmp_10_0.length) > 0 && ctx.allowFreeEntries : false);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("disabled", ctx.disabled);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("c8yIcon", ctx.icon);
    } }, directives: [ɵngcc9.BsDropdownDirective, ɵngcc9.BsDropdownToggleDirective, RequiredInputPlaceholderDirective, ɵngcc13.DefaultValueAccessor, ɵngcc13.RequiredValidator, ɵngcc13.NgControlStatus, ɵngcc13.NgModel, ɵngcc13.MaxLengthValidator, ɵngcc6.NgIf, IconDirective, ɵngcc9.BsDropdownMenuDirective, C8yTranslateDirective, ListGroupComponent], pipes: [C8yTranslatePipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TypeaheadComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-typeahead',
                template: "<div\n  class=\"c8y-search-dropdown dropdown fit-w\"\n  dropdown\n  [container]=\"container\"\n  placement=\"bottom left\"\n  #dropdown=\"bs-dropdown\"\n  [autoClose]=\"true\"\n  (onShown)=\"onShown()\"\n  [isDisabled]=\"disabled\"\n>\n  <div class=\"input-group input-group-dropdown\" dropdownToggle>\n    <input\n      #searchControl\n      #searchControlModel=\"ngModel\"\n      type=\"text\"\n      class=\"form-control text-truncate p-r-24\"\n      [required]=\"required\"\n      [ngModel]=\"selected ? getDisplayProperty() : ''\"\n      [placeholder]=\"placeholder | translate\"\n      (blur)=\"doBlur()\"\n      [name]=\"name\"\n      [maxlength]=\"maxlength\"\n      [disabled]=\"disabled\"\n      title=\"{{ placeholder | translate }}\"\n    />\n    <span></span>\n    <span\n      class=\"label label-info p-absolute\"\n      style=\"top: 10px; right: 40px; z-index: 10\"\n      translate\n      *ngIf=\"\n        selected\n          ? selected.id === null && getDisplayProperty()?.length > 0 && allowFreeEntries\n          : false\n      \"\n    >\n      New\n    </span>\n\n    <span class=\"input-group-btn\">\n      <button\n        type=\"button\"\n        class=\"btn btn-clean\"\n        [disabled]=\"disabled\"\n        (click)=\"onIconClick.emit(icon)\"\n      >\n        <i [c8yIcon]=\"icon\"></i>\n      </button>\n    </span>\n  </div>\n\n  <c8y-list-group\n    class=\"dropdown-menu dropdown-menu--modal\"\n    *dropdownMenu\n    [style.width]=\"container === 'body' ? searchControl.clientWidth + 'px' : undefined\"\n  >\n    <ng-content select=\"div, c8y-li, c8y-list-item, button, a\"></ng-content>\n  </c8y-list-group>\n</div>\n",
                providers: [
                    {
                        provide: forms.NG_VALUE_ACCESSOR,
                        multi: true,
                        useExisting: i0.forwardRef(function () { return TypeaheadComponent; })
                    },
                    {
                        provide: forms.NG_VALIDATORS,
                        useExisting: i0.forwardRef(function () { return TypeaheadComponent; }),
                        multi: true
                    }
                ]
            }]
    }], function () { return []; }, { required: [{
            type: i0.Input
        }], disabled: [{
            type: i0.Input
        }], allowFreeEntries: [{
            type: i0.Input
        }], displayProperty: [{
            type: i0.Input
        }], icon: [{
            type: i0.Input
        }], name: [{
            type: i0.Input
        }], autoClose: [{
            type: i0.Input
        }], container: [{
            type: i0.Input
        }], selected: [{
            type: i0.Input
        }], onSearch: [{
            type: i0.Output
        }], onIconClick: [{
            type: i0.Output
        }], searchControl: [{
            type: i0.ViewChild,
            args: ['searchControl', { static: false }]
        }], searchControlModel: [{
            type: i0.ViewChild,
            args: ['searchControlModel', { static: false }]
        }], dropdown: [{
            type: i0.ViewChild,
            args: ['dropdown', { static: false }]
        }], list: [{
            type: i0.ContentChildren,
            args: [ListItemComponent]
        }], maxlength: [{
            type: i0.Input
        }], placeholder: [{
            type: i0.Input
        }] }); })();
        return TypeaheadComponent;
    }());
    TypeaheadComponent.propDecorators = {
        searchControl: [{ type: i0.ViewChild, args: ['searchControl', { static: false },] }],
        searchControlModel: [{ type: i0.ViewChild, args: ['searchControlModel', { static: false },] }],
        dropdown: [{ type: i0.ViewChild, args: ['dropdown', { static: false },] }],
        list: [{ type: i0.ContentChildren, args: [ListItemComponent,] }],
        required: [{ type: i0.Input }],
        maxlength: [{ type: i0.Input }],
        disabled: [{ type: i0.Input }],
        allowFreeEntries: [{ type: i0.Input }],
        placeholder: [{ type: i0.Input }],
        displayProperty: [{ type: i0.Input }],
        icon: [{ type: i0.Input }],
        name: [{ type: i0.Input }],
        autoClose: [{ type: i0.Input }],
        container: [{ type: i0.Input }],
        selected: [{ type: i0.Input }],
        onSearch: [{ type: i0.Output }],
        onIconClick: [{ type: i0.Output }]
    };

    /**
     * The angular module definition for a select.
     * @exports SelectComponent
     */
    var SelectModule = /** @class */ (function () {
        function SelectModule() {
        }
SelectModule.ɵfac = function SelectModule_Factory(t) { return new (t || SelectModule)(); };
SelectModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: SelectModule });
SelectModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[
            dropdown.BsDropdownModule.forRoot(),
            CommonModule,
            ListGroupModule,
            FormsModule
        ]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SelectModule, [{
        type: i0.NgModule,
        args: [{
                imports: [
                    dropdown.BsDropdownModule.forRoot(),
                    CommonModule,
                    ListGroupModule,
                    FormsModule
                ],
                exports: [
                    SelectComponent,
                    TypeaheadComponent
                ],
                declarations: [
                    SelectComponent,
                    TypeaheadComponent
                ]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SelectModule, { declarations: [SelectComponent, TypeaheadComponent], imports: [ɵngcc9.BsDropdownModule, CommonModule, ListGroupModule, FormsModule], exports: [SelectComponent, TypeaheadComponent] }); })();
        return SelectModule;
    }());

    var PluginsService = /** @class */ (function () {
        function PluginsService(applicationService, client) {
            this.applicationService = applicationService;
            this.client = client;
        }
        PluginsService.prototype.listPackages = function () {
            return __awaiter(this, void 0, void 0, function () {
                var data;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.applicationService.list({ pageSize: 2000 })];
                        case 1:
                            data = (_a.sent()).data;
                            return [2 /*return*/, data.filter(function (app) { return app.exports || (app.manifest && app.manifest.exports); })];
                    }
                });
            });
        };
        PluginsService.prototype.listVersions = function (forPackage) {
            return __awaiter(this, void 0, void 0, function () {
                var data;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.applicationService.binary(forPackage).listPlugins()];
                        case 1:
                            data = (_a.sent()).data;
                            return [2 /*return*/, data
                                    .map(function (plugin) { return (Object.assign(Object.assign({}, plugin.pluginPackage), { version: plugin.pluginName })); })
                                    .filter(function (plugin) { return plugin.exports; })];
                    }
                });
            });
        };
        PluginsService.prototype.listInstalled = function (forApp, flat) {
            if (flat === void 0) { flat = true; }
            return __awaiter(this, void 0, void 0, function () {
                var app, c8yJson, flatList, _loop_1, key;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.getApplication(forApp)];
                        case 1:
                            app = _a.sent();
                            return [4 /*yield*/, this.getCumulocityJsonFile(app)];
                        case 2:
                            c8yJson = _a.sent();
                            if (flat) {
                                flatList = [];
                                _loop_1 = function (key) {
                                    if (c8yJson.imports.hasOwnProperty(key)) {
                                        flatList = __spreadArray(__spreadArray([], __read(flatList)), __read(c8yJson.imports[key].map(function (imp) { return /@/.test(key) ? key + "/" + imp : key + "@latest/" + imp; })));
                                    }
                                };
                                for (key in c8yJson.imports) {
                                    _loop_1(key);
                                }
                                return [2 /*return*/, flatList];
                            }
                            return [2 /*return*/, c8yJson.imports];
                    }
                });
            });
        };
        PluginsService.prototype.addByName = function (addTo, pluginName) {
            return __awaiter(this, void 0, void 0, function () {
                var name, contextPath, pkg;
                return __generator(this, function (_a) {
                    name = pluginName.split('//').pop();
                    contextPath = pluginName.split('//').shift();
                    pkg = {
                        contextPath: contextPath
                    };
                    return [2 /*return*/, this.add(addTo, pkg, name)];
                });
            });
        };
        PluginsService.prototype.removeByName = function (removeFrom, pluginName) {
            return __awaiter(this, void 0, void 0, function () {
                var name, contextPath, pkg;
                return __generator(this, function (_a) {
                    name = pluginName.split('/').pop();
                    contextPath = /@latest/.test(pluginName)
                        ? pluginName.split('@').shift()
                        : pluginName.split('/').shift();
                    pkg = {
                        contextPath: contextPath
                    };
                    return [2 /*return*/, this.remove(removeFrom, pkg, name)];
                });
            });
        };
        PluginsService.prototype.add = function (addToApp, fromPackage, name) {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    return [2 /*return*/, this.addOrRemove(addToApp, fromPackage, name, true)];
                });
            });
        };
        PluginsService.prototype.remove = function (removeFromApp, fromPackage, name) {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    return [2 /*return*/, this.addOrRemove(removeFromApp, fromPackage, name, false)];
                });
            });
        };
        PluginsService.prototype.updateRemotesInCumulocityJson = function (app, remotes) {
            return __awaiter(this, void 0, void 0, function () {
                var c8yJson;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.getCumulocityJsonFile(app)];
                        case 1:
                            c8yJson = _a.sent();
                            return [2 /*return*/, this.storeCumulocityJson(app, Object.assign(Object.assign({}, c8yJson), { remotes: remotes }))];
                    }
                });
            });
        };
        PluginsService.prototype.addOrRemove = function (addToApp, fromPackage, name, add) {
            if (add === void 0) { add = true; }
            return __awaiter(this, void 0, void 0, function () {
                var application, pkg, c8yJson, pkgImport;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.getApplication(addToApp)];
                        case 1:
                            application = _a.sent();
                            return [4 /*yield*/, this.getApplication(fromPackage)];
                        case 2:
                            pkg = _a.sent();
                            return [4 /*yield*/, this.getCumulocityJsonFile(application)];
                        case 3:
                            c8yJson = _a.sent();
                            pkgImport = new Set(c8yJson.imports[pkg.contextPath]);
                            if (add) {
                                pkgImport.add(name);
                            }
                            else {
                                pkgImport.delete(name);
                            }
                            c8yJson.imports[pkg.contextPath] = Array.from(pkgImport);
                            return [4 /*yield*/, this.storeCumulocityJson(application, c8yJson)];
                        case 4:
                            _a.sent();
                            return [2 /*return*/, c8yJson];
                    }
                });
            });
        };
        PluginsService.prototype.storeCumulocityJson = function (application, c8yJson) {
            return this.applicationService
                .binary(application)
                .updateFiles([{ path: 'cumulocity.json', contents: JSON.stringify(c8yJson) }]);
        };
        PluginsService.prototype.getCumulocityJsonFile = function (app) {
            return __awaiter(this, void 0, void 0, function () {
                var result, c8yJson;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.client.fetch("/apps/" + app.contextPath + "/cumulocity.json")];
                        case 1:
                            result = _a.sent();
                            if (result.status >= 400) {
                                throw new Error(gettext('No Cumulocity IoT manifest found.'));
                            }
                            return [4 /*yield*/, result.json()];
                        case 2:
                            c8yJson = _a.sent();
                            if (!c8yJson.imports) {
                                c8yJson.imports = {};
                            }
                            return [2 /*return*/, c8yJson];
                    }
                });
            });
        };
        PluginsService.prototype.getApplication = function (app) {
            return __awaiter(this, void 0, void 0, function () {
                var data;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            if (typeof app !== 'number' && app.contextPath) {
                                return [2 /*return*/, app];
                            }
                            return [4 /*yield*/, this.applicationService.detail(app)];
                        case 1:
                            data = (_a.sent()).data;
                            return [2 /*return*/, data];
                    }
                });
            });
        };
PluginsService.ɵfac = function PluginsService_Factory(t) { return new (t || PluginsService)(ɵngcc0.ɵɵinject(ɵngcc2.ApplicationService), ɵngcc0.ɵɵinject(ɵngcc2.FetchClient)); };
PluginsService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: PluginsService, factory: function (t) { return PluginsService.ɵfac(t); } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PluginsService, [{
        type: i0.Injectable
    }], function () { return [{ type: ɵngcc2.ApplicationService }, { type: ɵngcc2.FetchClient }]; }, null); })();
        return PluginsService;
    }());
    PluginsService.ctorParameters = function () { return [
        { type: i4.ApplicationService },
        { type: i4.FetchClient }
    ]; };

    var PluginsModule = /** @class */ (function () {
        function PluginsModule() {
        }
PluginsModule.ɵfac = function PluginsModule_Factory(t) { return new (t || PluginsModule)(); };
PluginsModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: PluginsModule });
PluginsModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [PluginsService, PluginsResolveService] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PluginsModule, [{
        type: i0.NgModule,
        args: [{
                providers: [PluginsService, PluginsResolveService]
            }]
    }], function () { return []; }, null); })();
        return PluginsModule;
    }());

    var RangeDisplayComponent = /** @class */ (function () {
        function RangeDisplayComponent(sanitizer) {
            this.sanitizer = sanitizer;
            this.config = {};
        }
        Object.defineProperty(RangeDisplayComponent.prototype, "inlineStyle", {
            get: function () {
                this.config = this.config || {};
                if (!this.config.min) {
                    this.config.min = 0;
                }
                if (!this.config.max) {
                    this.config.max = 100;
                }
                if (this.config.fractionSize !== undefined) {
                    this.config.current = parseFloat(this.config.current.toFixed(this.config.fractionSize));
                }
                return this.sanitizer.bypassSecurityTrustStyle("\n          --range-min: " + this.config.min + ";\n          --range-max: " + this.config.max + ";\n          --full-range: " + (this.config.max - this.config.min) + ";\n          --measurement-target: " + ((this.config.target - this.config.min) * 100) /
                    (this.config.max - this.config.min) + "%;\n          --measurement-current: " + ((this.config.current - this.config.min) * 100) /
                    (this.config.max - this.config.min) + "%;\n          --range-y-min: " + ((this.config.yellowRangeMin - this.config.min) * 100) /
                    (this.config.max - this.config.min) + "%;\n          --range-y-max: " + ((this.config.yellowRangeMax - this.config.min) /
                    (this.config.max - this.config.min)) *
                    100 + "%;\n          --range-r-min: " + ((this.config.redRangeMin - this.config.min) * 100) /
                    (this.config.max - this.config.min) + "%;\n          --range-r-max: " + ((this.config.redRangeMax - this.config.min) /
                    (this.config.max - this.config.min)) *
                    100 + "%;\n        ");
            },
            enumerable: false,
            configurable: true
        });
        RangeDisplayComponent.prototype.checkTarget = function () {
            return (this.config.target !== undefined &&
                (this.config.target >= this.config.min && this.config.target <= this.config.max));
        };
        RangeDisplayComponent.prototype.rulerCalc = function (index) {
            var num = this.config.min + ((this.config.max - this.config.min) / 10) * index;
            if (this.config.fractionSize !== undefined) {
                return parseFloat(num.toFixed(this.config.fractionSize));
            }
            return parseFloat(num.toFixed(2));
        };
        RangeDisplayComponent.prototype.trackByIndex = function (index, el) {
            return index;
        };
        RangeDisplayComponent.prototype.isRedRangeDisplayed = function () {
            var _a = this.config, redRangeMin = _a.redRangeMin, redRangeMax = _a.redRangeMax;
            return this.isRangeDisplayed(redRangeMin, redRangeMax);
        };
        RangeDisplayComponent.prototype.isYellowRangeDisplayed = function () {
            var _a = this.config, yellowRangeMin = _a.yellowRangeMin, yellowRangeMax = _a.yellowRangeMax;
            return this.isRangeDisplayed(yellowRangeMin, yellowRangeMax);
        };
        RangeDisplayComponent.prototype.isRangeDisplayed = function (rangeMin, rangeMax) {
            return rangeMin === 0 || rangeMax === 0 || rangeMin && rangeMax;
        };
RangeDisplayComponent.ɵfac = function RangeDisplayComponent_Factory(t) { return new (t || RangeDisplayComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc18.DomSanitizer)); };
RangeDisplayComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: RangeDisplayComponent, selectors: [["c8y-range-display"]], hostVars: 1, hostBindings: function RangeDisplayComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵattribute("style", ctx.inlineStyle, ɵngcc0.ɵɵsanitizeStyle);
    } }, inputs: { config: "config" }, decls: 13, vars: 14, consts: [[3, "ngClass"], [1, "range-display"], [1, "range-display__range"], [1, "range-display__range__unit"], ["class", "range-display__range__max", 4, "ngIf"], ["class", "range-display__range__min", 4, "ngIf"], ["class", "range-display__range__target", 3, "title", 4, "ngIf"], ["class", "range-display__range__current", 3, "title", 4, "ngIf"], [1, "range-display__ruler"], ["class", "range-display__tick", 4, "ngFor", "ngForOf", "ngForTrackBy"], [1, "range-display__tick"], [1, "range-display__range__max"], [1, "range-display__range__min"], [1, "range-display__range__target", 3, "title"], [1, "range-display__range__current", 3, "title"]], template: function RangeDisplayComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵelementStart(2, "div", 2);
        ɵngcc0.ɵɵelementStart(3, "div", 3);
        ɵngcc0.ɵɵtext(4);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(5, RangeDisplayComponent_div_5_Template, 1, 0, "div", 4);
        ɵngcc0.ɵɵtemplate(6, RangeDisplayComponent_div_6_Template, 1, 0, "div", 5);
        ɵngcc0.ɵɵtemplate(7, RangeDisplayComponent_div_7_Template, 2, 7, "div", 6);
        ɵngcc0.ɵɵtemplate(8, RangeDisplayComponent_div_8_Template, 4, 13, "div", 7);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(9, "div", 8);
        ɵngcc0.ɵɵtemplate(10, RangeDisplayComponent_div_10_Template, 1, 1, "div", 9);
        ɵngcc0.ɵɵelement(11, "div", 10);
        ɵngcc0.ɵɵpipe(12, "number");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(11, _c85, ctx.config.orientation === "vertical"));
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵtextInterpolate1(" ", ctx.config.unit, " ");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isRedRangeDisplayed());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isYellowRangeDisplayed());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.checkTarget());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.config.current != undefined && ctx.config.current >= ctx.config.min && ctx.config.current <= ctx.config.max);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngForOf", ɵngcc0.ɵɵpureFunction0(13, _c86).constructor(10))("ngForTrackBy", ctx.trackByIndex);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵattribute("data-label", ɵngcc0.ɵɵpipeBind1(12, 9, ctx.config.max || 100));
    } }, directives: [ɵngcc6.NgClass, ɵngcc6.NgIf, ɵngcc6.NgForOf], pipes: [ɵngcc6.DecimalPipe, C8yTranslatePipe, DatePipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(RangeDisplayComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-range-display',
                template: "<div [ngClass]=\"{ 'range-display--vertical': config.orientation === 'vertical' }\">\n  <div class=\"range-display\">\n    <div class=\"range-display__range\">\n      <div class=\"range-display__range__unit\">\n        {{ config.unit }}\n      </div>\n      <div *ngIf=\"isRedRangeDisplayed()\" class=\"range-display__range__max\"></div>\n      <div\n        *ngIf=\"isYellowRangeDisplayed()\"\n        class=\"range-display__range__min\"\n      ></div>\n      <div\n        *ngIf=\"checkTarget()\"\n        class=\"range-display__range__target\"\n        attr.data-label=\"{{ config.target }} {{ config.unit }}\"\n        title=\"{{ 'Target' | translate }}: {{ config.target }} {{ config.unit }}\"\n      ></div>\n      <div\n        *ngIf=\"\n          config.current != undefined &&\n          config.current >= config.min &&\n          config.current <= config.max\n        \"\n        class=\"range-display__range__current\"\n        attr.data-label=\"{{ config.current }} {{ config.unit }} &#xa; {{ config.time | c8yDate }}\"\n        title=\"{{ 'Current' | translate }}: {{ config.current }} {{ config.unit }} | {{ config.time | c8yDate }}\"\n      ></div>\n    </div>\n    <div class=\"range-display__ruler\">\n      <div\n        *ngFor=\"let x of [].constructor(10); let index = index; trackBy: trackByIndex\"\n        attr.data-label=\"{{rulerCalc(index)}}\"\n        class=\"range-display__tick\"\n      ></div>\n      <div attr.data-label=\"{{ config.max || 100 | number }}\" class=\"range-display__tick\"></div>\n    </div>\n  </div>\n</div>"
            }]
    }], function () { return [{ type: ɵngcc18.DomSanitizer }]; }, { config: [{
            type: i0.Input
        }], inlineStyle: [{
            type: i0.HostBinding,
            args: ['attr.style']
        }] }); })();
        return RangeDisplayComponent;
    }());
    RangeDisplayComponent.ctorParameters = function () { return [
        { type: platformBrowser.DomSanitizer }
    ]; };
    RangeDisplayComponent.propDecorators = {
        config: [{ type: i0.Input }],
        inlineStyle: [{ type: i0.HostBinding, args: ['attr.style',] }]
    };

    /**
     * The angular module definition for a range-display.
     * @exports RangeDisplayModule
     */
    var RangeDisplayModule = /** @class */ (function () {
        function RangeDisplayModule() {
        }
RangeDisplayModule.ɵfac = function RangeDisplayModule_Factory(t) { return new (t || RangeDisplayModule)(); };
RangeDisplayModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: RangeDisplayModule });
RangeDisplayModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(RangeDisplayModule, [{
        type: i0.NgModule,
        args: [{
                imports: [CommonModule],
                exports: [RangeDisplayComponent],
                declarations: [RangeDisplayComponent],
                entryComponents: [RangeDisplayComponent]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(RangeDisplayModule, { declarations: [RangeDisplayComponent], imports: [CommonModule], exports: [RangeDisplayComponent] }); })();
        return RangeDisplayModule;
    }());

    var ListDisplaySwitchComponent = /** @class */ (function () {
        function ListDisplaySwitchComponent(location) {
            var _this = this;
            this.location = location;
            this.filterPipe = rxjs.pipe(operators.tap());
            this.onListClassChange = new i0.EventEmitter();
            this.DISPLAY_OPTIONS = [
                {
                    name: 'AUTO',
                    value: 'auto',
                    label: gettext('Auto'),
                    default: true,
                    getListClass: function () {
                        var option = _this._listLength > _this.AUTO_GRID_ITEMS_LIMIT
                            ? _this.DISPLAY_OPTIONS.find(function (opt) { return opt.name === 'LIST'; })
                            : _this.DISPLAY_OPTIONS.find(function (opt) { return opt.name === 'GRID'; });
                        return option.getListClass();
                    }
                },
                {
                    name: 'GRID',
                    value: 'grid',
                    label: gettext('Grid'),
                    getListClass: function () { return 'interact-grid'; }
                },
                {
                    name: 'LIST',
                    value: 'list',
                    label: gettext('List'),
                    getListClass: function () { return 'interact-list'; }
                }
            ];
            this.AUTO_GRID_ITEMS_LIMIT = 12;
        }
        Object.defineProperty(ListDisplaySwitchComponent.prototype, "listLength", {
            set: function (val) {
                this._listLength = val;
                this.loadSelectedOption();
            },
            enumerable: false,
            configurable: true
        });
        ListDisplaySwitchComponent.prototype.ngOnInit = function () {
            this.loadSelectedOption();
        };
        ListDisplaySwitchComponent.prototype.onOptionSelect = function (option) {
            var localStorageKey = this.getLocalStorageKey();
            if (option.default) {
                localStorage.removeItem(localStorageKey);
            }
            else {
                localStorage.setItem(localStorageKey, option.value);
            }
            this.loadSelectedOption();
        };
        ListDisplaySwitchComponent.prototype.loadSelectedOption = function () {
            this.selectedOption = this.getLocalStorageOption() || this.getDefaultOption();
            this.onListClassChange.emit(this.selectedOption.getListClass());
        };
        ListDisplaySwitchComponent.prototype.getLocalStorageOption = function () {
            var _this = this;
            return this.DISPLAY_OPTIONS.find(function (option) { return option.value === localStorage.getItem(_this.getLocalStorageKey()); });
        };
        ListDisplaySwitchComponent.prototype.getDefaultOption = function () {
            return this.DISPLAY_OPTIONS.find(function (option) { return option.default; });
        };
        ListDisplaySwitchComponent.prototype.getLocalStorageKey = function () {
            return "list-display-option[" + this.getListKey() + "]";
        };
        ListDisplaySwitchComponent.prototype.getListKey = function () {
            return this.listKey || this.location.path();
        };
ListDisplaySwitchComponent.ɵfac = function ListDisplaySwitchComponent_Factory(t) { return new (t || ListDisplaySwitchComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc6.Location)); };
ListDisplaySwitchComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ListDisplaySwitchComponent, selectors: [["c8y-list-display-switch"]], inputs: { filterPipe: "filterPipe", listLength: "listLength", listKey: "listKey" }, outputs: { onListClassChange: "onListClassChange" }, decls: 8, vars: 5, consts: [[1, "form-group"], [1, "m-r-8"], [1, "c8y-select-wrapper"], [1, "form-control", 3, "ngModel", "ngModelChange"], [3, "ngValue", 4, "ngFor", "ngForOf"], [3, "ngValue"]], template: function ListDisplaySwitchComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "label", 1);
        ɵngcc0.ɵɵtext(2);
        ɵngcc0.ɵɵpipe(3, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(4, "div", 2);
        ɵngcc0.ɵɵelementStart(5, "select", 3);
        ɵngcc0.ɵɵlistener("ngModelChange", function ListDisplaySwitchComponent_Template_select_ngModelChange_5_listener($event) { return ctx.onOptionSelect($event); });
        ɵngcc0.ɵɵtemplate(6, ListDisplaySwitchComponent_option_6_Template, 2, 2, "option", 4);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(7, "span");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(3, 3, "Display as"), " ");
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngModel", ctx.selectedOption);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.DISPLAY_OPTIONS);
    } }, directives: [ɵngcc13.SelectControlValueAccessor, ɵngcc13.NgControlStatus, ɵngcc13.NgModel, ɵngcc6.NgForOf, ɵngcc13.NgSelectOption, ɵngcc13.ɵNgSelectMultipleOption], pipes: [C8yTranslatePipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ListDisplaySwitchComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-list-display-switch',
                template: "<div class=\"form-group\">\n  <label class=\"m-r-8\">\n    {{ 'Display as' | translate }}\n  </label>\n  <div class=\"c8y-select-wrapper\">\n    <select\n      class=\"form-control\"\n      [ngModel]=\"selectedOption\"\n      (ngModelChange)=\"onOptionSelect($event)\"\n    >\n      <option *ngFor=\"let option of DISPLAY_OPTIONS\" [ngValue]=\"option\">{{\n        option.label\n      }}</option></select\n    >\n    <span></span>\n  </div>\n</div>\n"
            }]
    }], function () { return [{ type: ɵngcc6.Location }]; }, { filterPipe: [{
            type: i0.Input
        }], onListClassChange: [{
            type: i0.Output
        }], listLength: [{
            type: i0.Input,
            args: ['listLength']
        }], listKey: [{
            type: i0.Input
        }] }); })();
        return ListDisplaySwitchComponent;
    }());
    ListDisplaySwitchComponent.ctorParameters = function () { return [
        { type: common.Location }
    ]; };
    ListDisplaySwitchComponent.propDecorators = {
        listKey: [{ type: i0.Input }],
        listLength: [{ type: i0.Input, args: ['listLength',] }],
        filterPipe: [{ type: i0.Input }],
        onListClassChange: [{ type: i0.Output }]
    };

    /**
     * The angular module definition for the list display switcher.
     * It allows to switch between a list and a grid view.
     * @exports ListDisplaySwitchComponent
     */
    var ListDisplaySwitchModule = /** @class */ (function () {
        function ListDisplaySwitchModule() {
        }
ListDisplaySwitchModule.ɵfac = function ListDisplaySwitchModule_Factory(t) { return new (t || ListDisplaySwitchModule)(); };
ListDisplaySwitchModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: ListDisplaySwitchModule });
ListDisplaySwitchModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule, forms.FormsModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ListDisplaySwitchModule, [{
        type: i0.NgModule,
        args: [{
                declarations: [ListDisplaySwitchComponent],
                imports: [CommonModule, forms.FormsModule],
                exports: [ListDisplaySwitchComponent]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ListDisplaySwitchModule, { declarations: [ListDisplaySwitchComponent], imports: [CommonModule, ɵngcc13.FormsModule], exports: [ListDisplaySwitchComponent] }); })();
        return ListDisplaySwitchModule;
    }());

    /**
     * A hook to add wizard entries.
     */
    var HOOK_WIZARD = new i0.InjectionToken('Generic wizard');

    var WizardService = /** @class */ (function (_super) {
        __extends(WizardService, _super);
        function WizardService(bsModalService, injector, router) {
            var _this = _super.call(this) || this;
            _this.bsModalService = bsModalService;
            _this.injector = injector;
            _this.router = router;
            /** Wizard header subject. It emits header template. */
            _this.headerTemplate$ = new rxjs.Subject();
            /** Wizard body subject. It emits body template. */
            _this.bodyTemplate$ = new rxjs.Subject();
            /** Wizard footer subject. It emits footer template. */
            _this.footerTemplate$ = new rxjs.Subject();
            /**
             * @ignore
             */
            _this.state$ = new rxjs.BehaviorSubject(new Set());
            /** Refresh the extension factories subject. */
            _this.refreshTrigger = new rxjs.Subject();
            /** Additional factories that can be added by plugins. */
            _this.factories = [];
            _this.items$ = fromTrigger(_this.router, _this.refreshTrigger, [
                function () { return _this.injector.get(HOOK_WIZARD, []); },
                function () { return _this.factories; },
                stateToFactory(_this.state$)
            ]).pipe(operators.map(function (entries) { return entries; }), operators.shareReplay(1));
            return _this;
        }
        Object.defineProperty(WizardService.prototype, "state", {
            /**
             * Returns the current state.
             * @returns The current set of entries.
             * @readonly
             */
            get: function () {
                return this.state$.value;
            },
            enumerable: false,
            configurable: true
        });
        /**
         * Refresh the extension factories.
         */
        WizardService.prototype.refresh = function () {
            this.refreshTrigger.next();
        };
        /**
         * Adds a new entry in the wizard.
         * @param entry Wizard entry to add.
         */
        WizardService.prototype.add = function (entry) {
            this.state.add(entry);
            this.emitNewState();
        };
        /**
         * Removes entry from the wizard.
         * @param entry Wizard entry to remove.
         */
        WizardService.prototype.remove = function (entry) {
            this.state.delete(entry);
            this.emitNewState();
        };
        /**
         * List of wizard entries matching the given id.
         * @param id
         * @returns observable with list of wizard entries.
         */
        WizardService.prototype.getEntriesListById = function (id) {
            return this.items$.pipe(operators.map(function (entries) { return entries.filter(function (entry) { return entry.wizardId === id; }); }));
        };
        /**
         * Shows a wizard modal.
         * @param modalOptions Modal options.
         * @returns a reference to the modal.
         */
        WizardService.prototype.show = function (modalOptions) {
            if (modalOptions === void 0) { modalOptions = {}; }
            var options = Object.assign({ class: 'modal-sm', backdrop: 'static' }, modalOptions);
            return this.bsModalService.show(WizardComponent, options);
        };
WizardService.ɵfac = function WizardService_Factory(t) { return new (t || WizardService)(ɵngcc0.ɵɵinject(ɵngcc12.BsModalService), ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(ɵngcc1.Router)); };
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(WizardService, [{
        type: i0.Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return [{ type: ɵngcc12.BsModalService }, { type: ɵngcc0.Injector }, { type: ɵngcc1.Router }]; }, null); })();
        return WizardService;
    }(StateService));
    WizardService.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function WizardService_Factory() { return new WizardService(i0__namespace.ɵɵinject(i1__namespace$2.BsModalService), i0__namespace.ɵɵinject(i0__namespace.INJECTOR), i0__namespace.ɵɵinject(i1__namespace.Router)); }, token: WizardService, providedIn: "root" });
    WizardService.ctorParameters = function () { return [
        { type: i1$2.BsModalService },
        { type: i0.Injector },
        { type: i1.Router }
    ]; };

    /**
     * A generic component that is intended to serve as the building block of more wizards.
     *
     * **Example**
     * ```html
     * <button
     *    title="Add application"
     *    class="btn btn-primary"
     *    (click)="addApplication()"
     *  >
     *    Add application
     *  </button>
     * ```
     *
     * ```ts
     * import { Component } from '@angular/core';
     * import { WizardConfig, WizardService, Wizard } from '@c8y/ngx-components';
     * import { ModalOptions } from 'ngx-bootstrap/modal';
     *
     * @Component({
     *  selector: 'c8y-add-application-wizard',
     *  templateUrl: './templatePath'
     * })
     * export class AddApplicationWizardComponent {
     *   constructor(private wizardService: WizardService) {}
     *
     *   addApplication() {
     *     const wizardConfig: WizardConfig = {
     *       headerText: 'Add Application',
     *       headerIcon: 'c8y-icon-modules',
     *       bodyHeaderText: 'Select methods',
     *       bodyHeaderIcon: 'c8y-icon-modules'
     *     };
     *
     *     const initialState: Wizard = {
     *       wizardConfig,
     *       id: 'uploadApplication'
     *     };
     *
     *     const modalOptions: ModalOptions = { initialState };
     *
     *     this.wizardService.show(modalOptions);
     *   }
     * }
     * ```
     */
    var WizardComponent = /** @class */ (function () {
        function WizardComponent(wizardService, bsModalRef) {
            var _this = this;
            this.wizardService = wizardService;
            this.bsModalRef = bsModalRef;
            /**
             * A configuration object that allows you to set header values, both text and icon.
             */
            this.wizardConfig = {};
            /**
             * The event that is emitted when the wizard is closed.
             */
            this.onClose = new i0.EventEmitter();
            /**
             * The event that is emitted when the wizard is reseted.
             */
            this.onReset = new i0.EventEmitter();
            /**
             * The event that is emitted when the wizard entry is clicked.
             */
            this.onSelect = new i0.EventEmitter();
            this.headerTemplate$ = this.wizardService.headerTemplate$.pipe(operators.filter(function (header) { return header.wizardId === _this.id; }));
            this.bodyTemplate$ = this.wizardService.bodyTemplate$.pipe(operators.filter(function (body) { return body.wizardId === _this.id; }));
            this.footerTemplate$ = this.wizardService.footerTemplate$.pipe(operators.filter(function (footer) { return footer.wizardId === _this.id; }));
        }
        WizardComponent.prototype.ngOnInit = function () {
            this.emitTemplates();
        };
        /**
         * Resets the wizard.
         * @param result Custom result object which will be emitted via onReset output.
         */
        WizardComponent.prototype.reset = function (result) {
            this.onReset.emit(result);
            this.emitTemplates();
        };
        /**
         * Closes the wizard.
         * @param result Custom result object which will be emitted via onClose output.
         */
        WizardComponent.prototype.close = function (result) {
            this.onClose.emit(result);
            this.bsModalRef.hide();
        };
        WizardComponent.prototype.emitTemplates = function () {
            var _this = this;
            setTimeout(function () {
                _this.wizardService.headerTemplate$.next({ template: _this.header, wizardId: _this.id });
                _this.wizardService.bodyTemplate$.next({ template: _this.body, wizardId: _this.id });
                _this.wizardService.footerTemplate$.next({ template: _this.footer, wizardId: _this.id });
            });
        };
WizardComponent.ɵfac = function WizardComponent_Factory(t) { return new (t || WizardComponent)(ɵngcc0.ɵɵdirectiveInject(WizardService), ɵngcc0.ɵɵdirectiveInject(ɵngcc12.BsModalRef)); };
WizardComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: WizardComponent, selectors: [["c8y-wizard"]], viewQuery: function WizardComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c87, 7);
        ɵngcc0.ɵɵviewQuery(_c88, 7);
        ɵngcc0.ɵɵviewQuery(_c89, 7);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.header = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.body = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.footer = _t.first);
    } }, inputs: { wizardConfig: "wizardConfig", id: "id" }, outputs: { onClose: "onClose", onReset: "onReset", onSelect: "onSelect" }, decls: 14, vars: 9, consts: [[1, "viewport-modal", "animated", "fadeIn"], [4, "ngTemplateOutlet"], ["headerRef", ""], ["bodyRef", ""], [3, "onSelect"], ["footerRef", ""], [1, "modal-header", "dialog-header", "animated", "fadeIn"], [3, "c8yIcon"], ["class", "p-16 p-t-8 text-center", 4, "ngIf"], [1, "p-16", "p-t-8", "text-center"], [1, "c8y-wizard-nav"], [1, "modal-footer", "animated", "fadeIn"], ["type", "button", 1, "btn", "btn-default", 3, "title", "click"], ["translate", ""]], template: function WizardComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵtemplate(1, WizardComponent_1_Template, 1, 0, undefined, 1);
        ɵngcc0.ɵɵpipe(2, "async");
        ɵngcc0.ɵɵtemplate(3, WizardComponent_ng_template_3_Template, 5, 4, "ng-template", null, 2, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(5, WizardComponent_5_Template, 1, 0, undefined, 1);
        ɵngcc0.ɵɵpipe(6, "async");
        ɵngcc0.ɵɵtemplate(7, WizardComponent_ng_template_7_Template, 1, 1, "ng-template", null, 3, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵelementStart(9, "c8y-wizard-outlet", 4);
        ɵngcc0.ɵɵlistener("onSelect", function WizardComponent_Template_c8y_wizard_outlet_onSelect_9_listener($event) { return ctx.onSelect.emit($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(10, WizardComponent_10_Template, 1, 0, undefined, 1);
        ɵngcc0.ɵɵpipe(11, "async");
        ɵngcc0.ɵɵtemplate(12, WizardComponent_ng_template_12_Template, 5, 3, "ng-template", null, 5, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        var tmp_0_0;
        var tmp_1_0;
        var tmp_2_0;
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngTemplateOutlet", (tmp_0_0 = ɵngcc0.ɵɵpipeBind1(2, 3, ctx.headerTemplate$)) == null ? null : tmp_0_0.template);
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵproperty("ngTemplateOutlet", (tmp_1_0 = ɵngcc0.ɵɵpipeBind1(6, 5, ctx.bodyTemplate$)) == null ? null : tmp_1_0.template);
        ɵngcc0.ɵɵadvance(5);
        ɵngcc0.ɵɵproperty("ngTemplateOutlet", (tmp_2_0 = ɵngcc0.ɵɵpipeBind1(11, 7, ctx.footerTemplate$)) == null ? null : tmp_2_0.template);
    } }, directives: function () { return [ɵngcc6.NgTemplateOutlet, WizardOutletComponent, IconDirective, ɵngcc6.NgIf, C8yTranslateDirective]; }, pipes: function () { return [ɵngcc6.AsyncPipe, C8yTranslatePipe]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(WizardComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-wizard',
                template: "<div class=\"viewport-modal animated fadeIn\">\n  <ng-template *ngTemplateOutlet=\"(headerTemplate$ | async)?.template\"></ng-template>\n\n  <ng-template #headerRef>\n    <div class=\"modal-header dialog-header animated fadeIn\">\n      <h1 [c8yIcon]=\"wizardConfig.headerIcon\"></h1>\n      <h4>{{ wizardConfig.headerText | translate }}</h4>\n    </div>\n  </ng-template>\n\n  <ng-template *ngTemplateOutlet=\"(bodyTemplate$ | async)?.template\"></ng-template>\n\n  <ng-template #bodyRef>\n    <div class=\"p-16 p-t-8 text-center\" *ngIf=\"wizardConfig.bodyHeaderText\">\n      <div class=\"c8y-wizard-nav\">\n        <i [c8yIcon]=\"wizardConfig.bodyHeaderIcon\"></i>\n        <span>{{ wizardConfig.bodyHeaderText | translate }}</span>\n      </div>\n    </div>\n  </ng-template>\n  <c8y-wizard-outlet (onSelect)=\"onSelect.emit($event)\"></c8y-wizard-outlet>\n\n  <ng-template *ngTemplateOutlet=\"(footerTemplate$ | async)?.template\"></ng-template>\n  <ng-template #footerRef>\n    <div class=\"modal-footer animated fadeIn\">\n      <button\n        (click)=\"close()\"\n        type=\"button\"\n        class=\"btn btn-default\"\n        title=\"{{ 'Cancel' | translate }}\"\n      >\n        <span translate>Cancel</span>\n      </button>\n    </div>\n  </ng-template>\n</div>\n"
            }]
    }], function () { return [{ type: WizardService }, { type: ɵngcc12.BsModalRef }]; }, { wizardConfig: [{
            type: i0.Input
        }], onClose: [{
            type: i0.Output
        }], onReset: [{
            type: i0.Output
        }], onSelect: [{
            type: i0.Output
        }], header: [{
            type: i0.ViewChild,
            args: ['headerRef', { static: true }]
        }], body: [{
            type: i0.ViewChild,
            args: ['bodyRef', { static: true }]
        }], footer: [{
            type: i0.ViewChild,
            args: ['footerRef', { static: true }]
        }], id: [{
            type: i0.Input
        }] }); })();
        return WizardComponent;
    }());
    WizardComponent.ctorParameters = function () { return [
        { type: WizardService },
        { type: i1$2.BsModalRef }
    ]; };
    WizardComponent.propDecorators = {
        header: [{ type: i0.ViewChild, args: ['headerRef', { static: true },] }],
        body: [{ type: i0.ViewChild, args: ['bodyRef', { static: true },] }],
        footer: [{ type: i0.ViewChild, args: ['footerRef', { static: true },] }],
        id: [{ type: i0.Input }],
        wizardConfig: [{ type: i0.Input }],
        onClose: [{ type: i0.Output }],
        onReset: [{ type: i0.Output }],
        onSelect: [{ type: i0.Output }]
    };

    var WizardBodyComponent = /** @class */ (function () {
        function WizardBodyComponent(wizard, wizardService) {
            this.wizard = wizard;
            this.wizardService = wizardService;
        }
        WizardBodyComponent.prototype.ngOnInit = function () {
            var _this = this;
            setTimeout(function () {
                _this.wizardService.bodyTemplate$.next({
                    template: _this.bodyContent,
                    wizardId: _this.wizard.id
                });
            });
        };
WizardBodyComponent.ɵfac = function WizardBodyComponent_Factory(t) { return new (t || WizardBodyComponent)(ɵngcc0.ɵɵdirectiveInject(WizardComponent), ɵngcc0.ɵɵdirectiveInject(WizardService)); };
WizardBodyComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: WizardBodyComponent, selectors: [["c8y-wizard-body"]], viewQuery: function WizardBodyComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c90, 7);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.bodyContent = _t.first);
    } }, ngContentSelectors: _c1, decls: 2, vars: 0, consts: [["bodyContent", ""], [1, "modal-inner-scroll", "animated", "fadeIn"], [1, "modal-body"]], template: function WizardBodyComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵtemplate(0, WizardBodyComponent_ng_template_0_Template, 3, 0, "ng-template", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);
    } }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(WizardBodyComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-wizard-body',
                template: "\n    <ng-template #bodyContent>\n      <div class=\"modal-inner-scroll animated fadeIn\">\n        <div class=\"modal-body\">\n          <ng-content></ng-content>\n        </div>\n      </div>\n    </ng-template>\n  "
            }]
    }], function () { return [{ type: WizardComponent }, { type: WizardService }]; }, { bodyContent: [{
            type: i0.ViewChild,
            args: ['bodyContent', { static: true }]
        }] }); })();
        return WizardBodyComponent;
    }());
    WizardBodyComponent.ctorParameters = function () { return [
        { type: WizardComponent },
        { type: WizardService }
    ]; };
    WizardBodyComponent.propDecorators = {
        bodyContent: [{ type: i0.ViewChild, args: ['bodyContent', { static: true },] }]
    };

    var WizardFooterComponent = /** @class */ (function () {
        function WizardFooterComponent(wizard, wizardService) {
            this.wizard = wizard;
            this.wizardService = wizardService;
        }
        WizardFooterComponent.prototype.ngOnInit = function () {
            var _this = this;
            setTimeout(function () {
                _this.wizardService.footerTemplate$.next({
                    template: _this.footerContent,
                    wizardId: _this.wizard.id
                });
            });
        };
WizardFooterComponent.ɵfac = function WizardFooterComponent_Factory(t) { return new (t || WizardFooterComponent)(ɵngcc0.ɵɵdirectiveInject(WizardComponent), ɵngcc0.ɵɵdirectiveInject(WizardService)); };
WizardFooterComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: WizardFooterComponent, selectors: [["c8y-wizard-footer"]], viewQuery: function WizardFooterComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c91, 7);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.footerContent = _t.first);
    } }, ngContentSelectors: _c1, decls: 2, vars: 0, consts: [["footerContent", ""], [1, "modal-footer"]], template: function WizardFooterComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵtemplate(0, WizardFooterComponent_ng_template_0_Template, 2, 0, "ng-template", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);
    } }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(WizardFooterComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-wizard-footer',
                template: "\n    <ng-template #footerContent>\n      <div class=\"modal-footer\">\n        <ng-content></ng-content>\n      </div>\n    </ng-template>\n  "
            }]
    }], function () { return [{ type: WizardComponent }, { type: WizardService }]; }, { footerContent: [{
            type: i0.ViewChild,
            args: ['footerContent', { static: true }]
        }] }); })();
        return WizardFooterComponent;
    }());
    WizardFooterComponent.ctorParameters = function () { return [
        { type: WizardComponent },
        { type: WizardService }
    ]; };
    WizardFooterComponent.propDecorators = {
        footerContent: [{ type: i0.ViewChild, args: ['footerContent', { static: true },] }]
    };

    var WizardHeaderComponent = /** @class */ (function () {
        function WizardHeaderComponent(wizard, wizardService) {
            this.wizard = wizard;
            this.wizardService = wizardService;
        }
        WizardHeaderComponent.prototype.ngOnInit = function () {
            var _this = this;
            setTimeout(function () {
                _this.wizardService.headerTemplate$.next({
                    template: _this.headerContent,
                    wizardId: _this.wizard.id
                });
            });
        };
WizardHeaderComponent.ɵfac = function WizardHeaderComponent_Factory(t) { return new (t || WizardHeaderComponent)(ɵngcc0.ɵɵdirectiveInject(WizardComponent), ɵngcc0.ɵɵdirectiveInject(WizardService)); };
WizardHeaderComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: WizardHeaderComponent, selectors: [["c8y-wizard-header"]], viewQuery: function WizardHeaderComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c92, 7);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerContent = _t.first);
    } }, ngContentSelectors: _c1, decls: 2, vars: 0, consts: [["headerContent", ""], [1, "modal-header", "dialog-header", "animated", "fadeIn"]], template: function WizardHeaderComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵtemplate(0, WizardHeaderComponent_ng_template_0_Template, 2, 0, "ng-template", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);
    } }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(WizardHeaderComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-wizard-header',
                template: "\n    <ng-template #headerContent>\n      <div class=\"modal-header dialog-header animated fadeIn\">\n        <ng-content></ng-content>\n      </div>\n    </ng-template>\n  "
            }]
    }], function () { return [{ type: WizardComponent }, { type: WizardService }]; }, { headerContent: [{
            type: i0.ViewChild,
            args: ['headerContent', { static: true }]
        }] }); })();
        return WizardHeaderComponent;
    }());
    WizardHeaderComponent.ctorParameters = function () { return [
        { type: WizardComponent },
        { type: WizardService }
    ]; };
    WizardHeaderComponent.propDecorators = {
        headerContent: [{ type: i0.ViewChild, args: ['headerContent', { static: true },] }]
    };

    var WizardOutletComponent = /** @class */ (function () {
        function WizardOutletComponent(wizardComponent, router, c8yWizardService, resolver) {
            this.wizardComponent = wizardComponent;
            this.router = router;
            this.c8yWizardService = c8yWizardService;
            this.resolver = resolver;
            /**
             * The event that is emitted when the wizard entry is clicked.
             */
            this.onSelect = new i0.EventEmitter();
            /**
             * List of wizard entries.
             */
            this.entries = [];
            /**
             * @ignore
             */
            this.showList = true;
            /**
             * @ignore
             */
            this.destroy$ = new rxjs.Subject();
        }
        WizardOutletComponent.prototype.ngAfterViewInit = function () {
            var _this = this;
            this.c8yWizardService
                .getEntriesListById(this.wizardComponent.id)
                .pipe(operators.takeUntil(this.destroy$))
                .subscribe(function (entries) {
                _this.container.clear();
                _this.entries = entries;
                _this.onEntriesLoaded();
            });
            this.wizardComponent.onReset.pipe(operators.takeUntil(this.destroy$)).subscribe(function () {
                if (_this.componentInstance) {
                    _this.componentInstance = undefined;
                    _this.container.clear();
                    _this.showList = true;
                }
            });
        };
        /**
         * Handles the wizard entry, if the entry contains a path, the user will be redirected to it.
         * Otherwise, an attempt will be made to create a dynamic component provided in the entry.
         * @param entry Wizard menu entry.
         */
        WizardOutletComponent.prototype.handleEntry = function (entry) {
            if (entry === void 0) { entry = {}; }
            var path = entry.path, component = entry.component;
            if (path) {
                this.handlePath(path);
                return;
            }
            if (component) {
                this.handleComponent(component);
                this.onSelect.emit(entry);
            }
        };
        WizardOutletComponent.prototype.ngOnDestroy = function () {
            if (this.componentInstance) {
                this.container.clear();
            }
            this.destroy$.next(true);
            this.destroy$.unsubscribe();
        };
        WizardOutletComponent.prototype.onEntriesLoaded = function () {
            var _a = __read(this.entries, 1), firstEntry = _a[0];
            var isSingleEntry = this.entries.length === 1;
            var shouldRedirectToPath = firstEntry && !!firstEntry.path;
            var shouldOmitListOfEntries = isSingleEntry && !shouldRedirectToPath;
            if (shouldOmitListOfEntries) {
                this.handleEntry(firstEntry);
            }
        };
        WizardOutletComponent.prototype.handlePath = function (path) {
            this.router.navigateByUrl(path);
            if (this.wizardComponent) {
                this.wizardComponent.close();
            }
        };
        WizardOutletComponent.prototype.handleComponent = function (component) {
            this.showList = false;
            var factory = this.resolver.resolveComponentFactory(component);
            this.componentInstance = this.container.createComponent(factory);
        };
WizardOutletComponent.ɵfac = function WizardOutletComponent_Factory(t) { return new (t || WizardOutletComponent)(ɵngcc0.ɵɵdirectiveInject(WizardComponent, 1), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Router), ɵngcc0.ɵɵdirectiveInject(WizardService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver)); };
WizardOutletComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: WizardOutletComponent, selectors: [["c8y-wizard-outlet"]], viewQuery: function WizardOutletComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c34, 5, i0.ViewContainerRef);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.container = _t.first);
    } }, outputs: { onSelect: "onSelect" }, decls: 4, vars: 2, consts: [["class", "modal-inner-scroll animated fadeIn", 4, "ngIf"], [3, "hidden"], ["container", ""], [1, "modal-inner-scroll", "animated", "fadeIn"], ["class", "list-group list-group-links", 4, "ngIf", "ngIfElse"], ["emptyState", ""], [1, "list-group", "list-group-links"], ["type", "button", "class", "list-group-item d-flex a-i-center p-t-8 p-b-8", 3, "click", 4, "ngFor", "ngForOf"], ["type", "button", 1, "list-group-item", "d-flex", "a-i-center", "p-t-8", "p-b-8", 3, "click"], [1, "list-item-icon"], [3, "c8yIcon"], [1, "list-item-body", "text-truncate", 3, "title"], [1, "c8y-empty-state"]], template: function WizardOutletComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementContainerStart(0);
        ɵngcc0.ɵɵtemplate(1, WizardOutletComponent_div_1_Template, 4, 2, "div", 0);
        ɵngcc0.ɵɵelementContainerEnd();
        ɵngcc0.ɵɵelement(2, "template", 1, 2);
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showList);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("hidden", ctx.showList);
    } }, directives: [ɵngcc6.NgIf, ɵngcc6.NgForOf, IconDirective], pipes: [C8yTranslatePipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(WizardOutletComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-wizard-outlet',
                template: "<ng-container>\n  <div class=\"modal-inner-scroll animated fadeIn\" *ngIf=\"showList\">\n    <div class=\"list-group list-group-links\" *ngIf=\"entries.length > 0; else emptyState\">\n      <button\n        *ngFor=\"let entry of entries\"\n        type=\"button\"\n        class=\"list-group-item d-flex a-i-center p-t-8 p-b-8\"\n        (click)=\"handleEntry(entry)\"\n      >\n        <div class=\"list-item-icon\">\n          <i [c8yIcon]=\"entry.c8yIcon || 'cogs'\"></i>\n        </div>\n        <div title=\"{{ entry.name | translate }}\" class=\"list-item-body text-truncate\">\n          {{ entry.name | translate }}\n        </div>\n      </button>\n    </div>\n\n    <ng-template #emptyState>\n      <div class=\"c8y-empty-state\">\n        <p>{{ 'No options available.' | translate }}</p>\n      </div>\n    </ng-template>\n  </div>\n</ng-container>\n<template #container [hidden]=\"showList\"></template>\n"
            }]
    }], function () { return [{ type: WizardComponent, decorators: [{
                type: i0.Host
            }] }, { type: ɵngcc1.Router }, { type: WizardService }, { type: ɵngcc0.ComponentFactoryResolver }]; }, { onSelect: [{
            type: i0.Output
        }], container: [{
            type: i0.ViewChild,
            args: ['container', { read: i0.ViewContainerRef }]
        }] }); })();
        return WizardOutletComponent;
    }());
    WizardOutletComponent.ctorParameters = function () { return [
        { type: WizardComponent, decorators: [{ type: i0.Host }] },
        { type: i1.Router },
        { type: WizardService },
        { type: i0.ComponentFactoryResolver }
    ]; };
    WizardOutletComponent.propDecorators = {
        container: [{ type: i0.ViewChild, args: ['container', { read: i0.ViewContainerRef },] }],
        onSelect: [{ type: i0.Output }]
    };

    var WizardModule = /** @class */ (function () {
        function WizardModule() {
        }
WizardModule.ɵfac = function WizardModule_Factory(t) { return new (t || WizardModule)(); };
WizardModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: WizardModule });
WizardModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [WizardService, i1$2.BsModalRef], imports: [[i1$2.ModalModule, common.CommonModule, CommonModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(WizardModule, [{
        type: i0.NgModule,
        args: [{
                imports: [i1$2.ModalModule, common.CommonModule, CommonModule],
                exports: [
                    WizardComponent,
                    WizardOutletComponent,
                    WizardHeaderComponent,
                    WizardBodyComponent,
                    WizardFooterComponent
                ],
                declarations: [
                    WizardComponent,
                    WizardOutletComponent,
                    WizardHeaderComponent,
                    WizardBodyComponent,
                    WizardFooterComponent
                ],
                entryComponents: [
                    WizardComponent,
                    WizardHeaderComponent,
                    WizardBodyComponent,
                    WizardFooterComponent
                ],
                providers: [WizardService, i1$2.BsModalRef]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(WizardModule, { declarations: [WizardComponent, WizardOutletComponent, WizardHeaderComponent, WizardBodyComponent, WizardFooterComponent], imports: [ɵngcc12.ModalModule, ɵngcc6.CommonModule, CommonModule], exports: [WizardComponent, WizardOutletComponent, WizardHeaderComponent, WizardBodyComponent, WizardFooterComponent] }); })();
        return WizardModule;
    }());

    /**
     * Renders a list of properties of an object.
     *
     * @example
     * ```html
     * <c8y-properties-list
     *   icon="info"
     *   [properties]="properties"
     *   [values]="options"
     *   [emptyLabel]="'-'"
     *   [title]="'Application properties' | translate"
     * ></c8y-properties-list>
     * ```
     */
    var PropertiesListComponent = /** @class */ (function () {
        function PropertiesListComponent() {
            /**
             * A string array of groups that are shown. If noParse is set to false,
             * each complex key will form a group.
             */
            this.groups = [];
            /**
             * The component tries to parse the properties and resolve keys and types. You can
             * avoid this by setting this property to true.
             */
            this.noParse = false;
            this._data = {};
        }
        Object.defineProperty(PropertiesListComponent.prototype, "properties", {
            /**
             * @ignore
             */
            get: function () {
                if (this.noParse) {
                    return this._properties;
                }
                var propsWithGroups = __spreadArray(__spreadArray([], __read(this._properties)), __read(this.groups.map(function (group) { return ({
                    key: group,
                    label: group,
                    value: group,
                    type: 'group'
                }); }))).filter(function (item) { return !!item.value; });
                return lodashEs.sortBy(propsWithGroups, ['key']);
            },
            /**
             * The properties that this list should display.
             */
            set: function (items) {
                this._properties = this.parseProperties(items);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(PropertiesListComponent.prototype, "data", {
            /**
             * An object where the properties keys are resolved from.
             */
            set: function (data) {
                this._data = data;
                this._properties = this.parseProperties(this._properties);
            },
            enumerable: false,
            configurable: true
        });
        /**
         * Checks if a certain property has an group associated.
         * @param item The property to verify.
         */
        PropertiesListComponent.prototype.hasGroup = function (item) {
            if (!item.key) {
                return false;
            }
            var keyPath = item.key.split('.');
            return keyPath.length > 1 && this.groups.includes(keyPath[0]);
        };
        /**
         * @ignore
         */
        PropertiesListComponent.prototype.ngOnInit = function () {
            this._properties = this.parseProperties(this._properties);
        };
        /**
         * Used in trackBy to avoid recalculation all the time.
         * @ignore
         */
        PropertiesListComponent.prototype.identity = function (index, item) {
            return item.value;
        };
        PropertiesListComponent.prototype.parseProperties = function (items) {
            var _this = this;
            if (items === void 0) { items = []; }
            return items.map(function (item) { return _this.parsePropertyItem(item); });
        };
        PropertiesListComponent.prototype.parsePropertyItem = function (item) {
            if (this.noParse) {
                return item;
            }
            item.value = this.resolveValueFromKey(item);
            item.value = item.transform && item.value ? item.transform(item.value) : item.value;
            item.type = this.resolveType(item);
            item.value = this.attachEmptyLabel(item);
            return item;
        };
        PropertiesListComponent.prototype.resolveValueFromKey = function (item) {
            if (item.key && this._data) {
                var keyPath = item.key.split('.');
                var rootGroup = keyPath[0];
                if (keyPath.length > 1 && !this.groups.includes(rootGroup)) {
                    this.groups.push(rootGroup);
                }
                return lodashEs.get(this._data, item.key);
            }
            return item.value;
        };
        PropertiesListComponent.prototype.resolveType = function (item) {
            return Array.isArray(item.value) ? 'array' : item.action && item.value ? 'link' : 'string';
        };
        PropertiesListComponent.prototype.attachEmptyLabel = function (item) {
            if (!item.value) {
                return this.emptyLabel;
            }
            return item.value;
        };
PropertiesListComponent.ɵfac = function PropertiesListComponent_Factory(t) { return new (t || PropertiesListComponent)(); };
PropertiesListComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: PropertiesListComponent, selectors: [["c8y-properties-list"]], inputs: { groups: "groups", noParse: "noParse", properties: "properties", data: "data", title: "title", icon: "icon", emptyLabel: "emptyLabel" }, decls: 7, vars: 6, consts: [[1, "m-b-8"], ["class", "text-info m-r-8", 3, "c8yIcon", 4, "ngIf"], [1, "text-label-small"], [1, "list-unstyled", "small"], ["class", "p-t-4 p-b-4 d-flex", 3, "ngClass", 4, "ngFor", "ngForOf", "ngForTrackBy"], [1, "text-info", "m-r-8", 3, "c8yIcon"], [1, "p-t-4", "p-b-4", "d-flex", 3, "ngClass"], [1, "small", "text-medium", "text-nowrap", "m-r-4", 3, "ngClass"], [1, "flex-item-right", 3, "ngSwitch"], ["class", "flex-item-right", 4, "ngSwitchCase"], ["class", "flex-item-right pointer text-truncate m-l-4", 3, "click", 4, "ngSwitchCase"], [4, "ngSwitchCase"], [1, "flex-item-right"], [1, "flex-item-right", "pointer", "text-truncate", "m-l-4", 3, "click"], ["class", "label label-default m-l-4", 3, "ngClass", "click", 4, "ngFor", "ngForOf"], [1, "label", "label-default", "m-l-4", 3, "ngClass", "click"]], template: function PropertiesListComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "p", 0);
        ɵngcc0.ɵɵtemplate(1, PropertiesListComponent_i_1_Template, 1, 1, "i", 1);
        ɵngcc0.ɵɵelementStart(2, "span", 2);
        ɵngcc0.ɵɵtext(3);
        ɵngcc0.ɵɵpipe(4, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(5, "ul", 3);
        ɵngcc0.ɵɵtemplate(6, PropertiesListComponent_li_6_Template, 8, 18, "li", 4);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.icon);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(4, 4, ctx.title));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.properties)("ngForTrackBy", ctx.identity);
    } }, directives: [ɵngcc6.NgIf, ɵngcc6.NgForOf, IconDirective, ɵngcc6.NgClass, ɵngcc6.NgSwitch, ɵngcc6.NgSwitchCase], pipes: [C8yTranslatePipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PropertiesListComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-properties-list',
                template: "<p class=\"m-b-8\">\n  <i *ngIf=\"icon\" [c8yIcon]=\"icon\" class=\"text-info m-r-8\"></i>\n  <span class=\"text-label-small\">{{ title | translate }}</span>\n</p>\n<ul class=\"list-unstyled small\">\n  <li class=\"p-t-4 p-b-4 d-flex\" \n    *ngFor=\"let prop of properties; let i = index; trackBy: identity\"\n    [ngClass]=\"{'separator-top-bottom': i === 0, 'separator-bottom': i > 0}\"\n    >\n    <div\n      [ngClass]=\"{\n        'm-l-16': hasGroup(prop),\n        legend: prop.type === 'group',\n        'form-block': prop.type === 'group',\n        'm-b-0': prop.type === 'group',\n        'm-t-4': prop.type === 'group'\n      }\"\n      class=\"small text-medium text-nowrap m-r-4\"\n    >\n      {{ prop.label | translate }}\n    </div>\n    <span [ngSwitch]=\"prop.type\" class=\"flex-item-right\">\n      <span *ngSwitchCase=\"'string'\" class=\"flex-item-right\">{{ prop.value }}</span>\n      <a\n        *ngSwitchCase=\"'link'\"\n        (click)=\"prop.action($event, prop)\"\n        class=\"flex-item-right pointer text-truncate m-l-4\"\n        >{{ prop.value }}</a\n      >\n      <span *ngSwitchCase=\"'array'\">\n        <span\n          class=\"label label-default m-l-4\"\n          *ngFor=\"let propTag of prop.value\"\n          (click)=\"prop.action && prop.action($event, propTag)\"\n          [ngClass]=\"{\n            pointer: prop.action\n          }\"\n          >{{ propTag }}</span\n        >\n      </span>\n    </span>\n  </li>\n</ul>\n"
            }]
    }], function () { return []; }, { groups: [{
            type: i0.Input
        }], noParse: [{
            type: i0.Input
        }], properties: [{
            type: i0.Input
        }], data: [{
            type: i0.Input
        }], title: [{
            type: i0.Input
        }], icon: [{
            type: i0.Input
        }], emptyLabel: [{
            type: i0.Input
        }] }); })();
        return PropertiesListComponent;
    }());
    PropertiesListComponent.propDecorators = {
        properties: [{ type: i0.Input }],
        title: [{ type: i0.Input }],
        icon: [{ type: i0.Input }],
        data: [{ type: i0.Input }],
        groups: [{ type: i0.Input }],
        noParse: [{ type: i0.Input }],
        emptyLabel: [{ type: i0.Input }]
    };

    var PropertiesListModule = /** @class */ (function () {
        function PropertiesListModule() {
        }
PropertiesListModule.ɵfac = function PropertiesListModule_Factory(t) { return new (t || PropertiesListModule)(); };
PropertiesListModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: PropertiesListModule });
PropertiesListModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [], imports: [[CommonModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PropertiesListModule, [{
        type: i0.NgModule,
        args: [{
                declarations: [PropertiesListComponent],
                imports: [CommonModule],
                exports: [PropertiesListComponent],
                providers: []
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(PropertiesListModule, { declarations: [PropertiesListComponent], imports: [CommonModule], exports: [PropertiesListComponent] }); })();
        return PropertiesListModule;
    }());

    var CoreModule = /** @class */ (function () {
        function CoreModule() {
        }
        CoreModule.forRoot = function () {
            return {
                ngModule: CoreModule,
                providers: __spreadArray(__spreadArray([], __read(CommonModule.providers())), __read(LoginModule.providers()))
            };
        };
CoreModule.ɵfac = function CoreModule_Factory(t) { return new (t || CoreModule)(); };
CoreModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: CoreModule });
CoreModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [ActionBarModule, ActionModule, AlertModule, AuditLogModule, BootstrapModule, BreadcrumbModule, CommonModule, DataGridModule, DropAreaModule, HeaderModule, LoginModule, ModalModule, NavigatorModule, AuthenticationModule, SearchModule, SelectModule, TabsModule, UserModule, FormsModule, DeviceStatusModule, DocsModule, StepperModule, DynamicComponentModule, DashboardModule, ListGroupModule, SelectModalModule, FilePickerModule, DatePickerModule, ProductExperienceModule, HelpModule, RealtimeModule, RangeDisplayModule, ListDisplaySwitchModule, WizardModule, PluginsModule, DynamicFormsModule, PropertiesListModule] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CoreModule, [{
        type: i0.NgModule,
        args: [{
                exports: [
                    ActionBarModule,
                    ActionModule,
                    AlertModule,
                    AuditLogModule,
                    BootstrapModule,
                    BreadcrumbModule,
                    CommonModule,
                    DataGridModule,
                    DropAreaModule,
                    HeaderModule,
                    LoginModule,
                    ModalModule,
                    NavigatorModule,
                    AuthenticationModule,
                    SearchModule,
                    SelectModule,
                    TabsModule,
                    UserModule,
                    FormsModule,
                    DeviceStatusModule,
                    DocsModule,
                    StepperModule,
                    DynamicComponentModule,
                    DashboardModule,
                    ListGroupModule,
                    SelectModalModule,
                    FilePickerModule,
                    DatePickerModule,
                    ProductExperienceModule,
                    HelpModule,
                    RealtimeModule,
                    RangeDisplayModule,
                    ListDisplaySwitchModule,
                    WizardModule,
                    PluginsModule,
                    DynamicFormsModule,
                    PropertiesListModule
                ]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CoreModule, { exports: [ActionBarModule, ActionModule, AlertModule, AuditLogModule, BootstrapModule, BreadcrumbModule, CommonModule, DataGridModule, DropAreaModule, HeaderModule, LoginModule, ModalModule, NavigatorModule, AuthenticationModule, SearchModule, SelectModule, TabsModule, UserModule, FormsModule, DeviceStatusModule, DocsModule, StepperModule, DynamicComponentModule, DashboardModule, ListGroupModule, SelectModalModule, FilePickerModule, DatePickerModule, ProductExperienceModule, HelpModule, RealtimeModule, RangeDisplayModule, ListDisplaySwitchModule, WizardModule, PluginsModule, DynamicFormsModule, PropertiesListModule] }); })();
        return CoreModule;
    }());

    var QuickLinkComponent = /** @class */ (function () {
        function QuickLinkComponent() {
            this.classes = '';
        }
        QuickLinkComponent.prototype.ngOnInit = function () {
            this.classes = "card-block text-center " + lodashEs.kebabCase(this.label);
        };
QuickLinkComponent.ɵfac = function QuickLinkComponent_Factory(t) { return new (t || QuickLinkComponent)(); };
QuickLinkComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: QuickLinkComponent, selectors: [["c8y-quick-link"]], inputs: { icon: "icon", label: "label" }, decls: 7, vars: 9, consts: [[3, "title"], [1, "text-gray-darker"], [1, "c8y-icon-duocolor", 3, "c8yIcon"], [1, "text-muted"]], template: function QuickLinkComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵpipe(1, "translate");
        ɵngcc0.ɵɵelementStart(2, "h1", 1);
        ɵngcc0.ɵɵelement(3, "i", 2);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(4, "p", 3);
        ɵngcc0.ɵɵtext(5);
        ɵngcc0.ɵɵpipe(6, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.classes);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(1, 5, ctx.label));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("c8yIcon", ctx.icon);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(6, 7, ctx.label));
    } }, directives: [IconDirective], pipes: [C8yTranslatePipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(QuickLinkComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-quick-link',
                template: "<div [class]=\"classes\" title=\"{{ label | translate }}\">\r\n  <h1 class=\"text-gray-darker\">\r\n    <i [c8yIcon]=\"icon\" class=\"c8y-icon-duocolor\"></i>\r\n  </h1>\r\n  <p class=\"text-muted\">{{ label | translate }}</p>\r\n</div>\r\n"
            }]
    }], function () { return []; }, { icon: [{
            type: i0.Input
        }], label: [{
            type: i0.Input
        }] }); })();
        return QuickLinkComponent;
    }());
    QuickLinkComponent.propDecorators = {
        icon: [{ type: i0.Input }],
        label: [{ type: i0.Input }]
    };

    var QuickLinkModule = /** @class */ (function () {
        function QuickLinkModule() {
        }
QuickLinkModule.ɵfac = function QuickLinkModule_Factory(t) { return new (t || QuickLinkModule)(); };
QuickLinkModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: QuickLinkModule });
QuickLinkModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [], imports: [[CoreModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(QuickLinkModule, [{
        type: i0.NgModule,
        args: [{
                declarations: [QuickLinkComponent],
                imports: [CoreModule],
                exports: [QuickLinkComponent],
                providers: []
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(QuickLinkModule, { declarations: [QuickLinkComponent], imports: [CoreModule], exports: [QuickLinkComponent] }); })();
        return QuickLinkModule;
    }());

    var HOOK_DYNAMIC_PROVIDER_CONFIG = new i0.InjectionToken('Dynamic Provider Config');

    var ProviderConfigurationNodeFactory = /** @class */ (function () {
        function ProviderConfigurationNodeFactory(config, injector) {
            this.injector = injector;
            this.config = lodashEs.flatten(config);
        }
        ProviderConfigurationNodeFactory.prototype.get = function () {
            var _this = this;
            if (!this.config || !this.config.length) {
                return;
            }
            if (!this.nodes) {
                var canActivate = this.config
                    .map(this.getGuards.bind(this))
                    .map(this.checkCanActivate.bind(this));
                return rxjs.forkJoin(canActivate).pipe(operators.map(function (canActivateResult) { return _this.config
                    .map(function (c, index) { return canActivateResult[index] ? new NavigatorNode(c.navigation) : undefined; })
                    .filter(function (el) { return !!el; }); }), operators.tap(function (nodes) { return (_this.nodes = nodes); }));
            }
            return this.nodes;
        };
        ProviderConfigurationNodeFactory.prototype.checkCanActivate = function (ca) {
            if (!!ca && ca.length) {
                var canActivateResult = ca
                    .map(function (canActivate) { return canActivate.canActivate(undefined, undefined); })
                    .map(toObservable);
                return rxjs.forkJoin(canActivateResult).pipe(operators.map(function (caResult) { return caResult.reduce(function (acc, curr) { return acc && curr; }); }));
            }
            return rxjs.of(true);
        };
        ProviderConfigurationNodeFactory.prototype.getGuards = function (c) {
            var _this = this;
            var result = [];
            if (c.tab && c.tab.canActivate && c.tab.canActivate.length) {
                result = __spreadArray(__spreadArray([], __read(result)), __read(c.tab.canActivate.map(function (ca) { return _this.injector.get(ca); })));
            }
            if (c.navigation.canActivate && c.navigation.canActivate.length) {
                result = __spreadArray(__spreadArray([], __read(result)), __read(c.navigation.canActivate.map(function (ca) { return _this.injector.get(ca); })));
            }
            return result;
        };
ProviderConfigurationNodeFactory.ɵfac = function ProviderConfigurationNodeFactory_Factory(t) { return new (t || ProviderConfigurationNodeFactory)(ɵngcc0.ɵɵinject(HOOK_DYNAMIC_PROVIDER_CONFIG, 8), ɵngcc0.ɵɵinject(ɵngcc0.Injector)); };
ProviderConfigurationNodeFactory.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: ProviderConfigurationNodeFactory, factory: function (t) { return ProviderConfigurationNodeFactory.ɵfac(t); } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ProviderConfigurationNodeFactory, [{
        type: i0.Injectable
    }], function () { return [{ type: Array, decorators: [{
                type: i0.Optional
            }, {
                type: i0.Inject,
                args: [HOOK_DYNAMIC_PROVIDER_CONFIG]
            }] }, { type: ɵngcc0.Injector }]; }, null); })();
        return ProviderConfigurationNodeFactory;
    }());
    ProviderConfigurationNodeFactory.ctorParameters = function () { return [
        { type: Array, decorators: [{ type: i0.Optional }, { type: i0.Inject, args: [HOOK_DYNAMIC_PROVIDER_CONFIG,] }] },
        { type: i0.Injector }
    ]; };

    var ProviderConfigurationService = /** @class */ (function (_super_1) {
        __extends(ProviderConfigurationService, _super_1);
        function ProviderConfigurationService(client, activatedRoute) {
            var _this = _super_1.call(this, client) || this;
            _this.baseUrl = lodashEs.get(activatedRoute, 'snapshot.data.endpoint.configurationEndpoint.baseUrl');
            _this.listUrl = lodashEs.get(activatedRoute, 'snapshot.data.endpoint.configurationEndpoint.listUrl');
            return _this;
        }
        ProviderConfigurationService.prototype.detail = function () {
            var _super = Object.create(null, {
                detail: { get: function () { return _super_1.prototype.detail; } }
            });
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    return [2 /*return*/, _super.detail.call(this, ProviderConfigurationService.NO_DETAIL_ID)];
                });
            });
        };
        ProviderConfigurationService.prototype.update = function (entity) {
            var _super = Object.create(null, {
                update: { get: function () { return _super_1.prototype.update; } }
            });
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    return [2 /*return*/, _super.update.call(this, entity)];
                });
            });
        };
        ProviderConfigurationService.prototype.delete = function () {
            var _super = Object.create(null, {
                delete: { get: function () { return _super_1.prototype.delete; } }
            });
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    return [2 /*return*/, _super.delete.call(this, ProviderConfigurationService.NO_DETAIL_ID)];
                });
            });
        };
        /** There is a single provider configuration per tenant and detail URL is not needed */
        ProviderConfigurationService.prototype.getDetailUrl = function (_) {
            return this.listUrl;
        };
ProviderConfigurationService.ɵfac = function ProviderConfigurationService_Factory(t) { return new (t || ProviderConfigurationService)(ɵngcc0.ɵɵinject(ɵngcc3.FetchClient), ɵngcc0.ɵɵinject(ɵngcc1.ActivatedRoute)); };
ProviderConfigurationService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: ProviderConfigurationService, factory: function (t) { return ProviderConfigurationService.ɵfac(t); } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ProviderConfigurationService, [{
        type: i0.Injectable
    }], function () { return [{ type: ɵngcc3.FetchClient }, { type: ɵngcc1.ActivatedRoute }]; }, null); })();
        return ProviderConfigurationService;
    }(client.Service));
    ProviderConfigurationService.NO_DETAIL_ID = null;
    ProviderConfigurationService.ctorParameters = function () { return [
        { type: client.FetchClient },
        { type: i1.ActivatedRoute }
    ]; };

    var ProviderDefinitionsService = /** @class */ (function (_super_1) {
        __extends(ProviderDefinitionsService, _super_1);
        function ProviderDefinitionsService(client, activatedRoute) {
            var _this = _super_1.call(this, client) || this;
            _this.baseUrl = lodashEs.get(activatedRoute, 'snapshot.data.endpoint.definitionsEndpoint.baseUrl');
            _this.listUrl = lodashEs.get(activatedRoute, 'snapshot.data.endpoint.definitionsEndpoint.listUrl');
            return _this;
        }
        ProviderDefinitionsService.prototype.list = function () {
            var _super = Object.create(null, {
                list: { get: function () { return _super_1.prototype.list; } }
            });
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    return [2 /*return*/, _super.list.call(this)];
                });
            });
        };
ProviderDefinitionsService.ɵfac = function ProviderDefinitionsService_Factory(t) { return new (t || ProviderDefinitionsService)(ɵngcc0.ɵɵinject(ɵngcc3.FetchClient), ɵngcc0.ɵɵinject(ɵngcc1.ActivatedRoute)); };
ProviderDefinitionsService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: ProviderDefinitionsService, factory: function (t) { return ProviderDefinitionsService.ɵfac(t); } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ProviderDefinitionsService, [{
        type: i0.Injectable
    }], function () { return [{ type: ɵngcc3.FetchClient }, { type: ɵngcc1.ActivatedRoute }]; }, null); })();
        return ProviderDefinitionsService;
    }(client.Service));
    ProviderDefinitionsService.ctorParameters = function () { return [
        { type: client.FetchClient },
        { type: i1.ActivatedRoute }
    ]; };

    var ProviderConfigurationComponent = /** @class */ (function () {
        function ProviderConfigurationComponent(permissions, activatedRoute, modalService, alertService, providerDefinitionsService, providerConfigurationService, jsonschema) {
            var _this = this;
            this.permissions = permissions;
            this.activatedRoute = activatedRoute;
            this.modalService = modalService;
            this.alertService = alertService;
            this.providerDefinitionsService = providerDefinitionsService;
            this.providerConfigurationService = providerConfigurationService;
            this.jsonschema = jsonschema;
            this.layout$ = this.activatedRoute.data.pipe(operators.map(function (config) { return config.layout; }), operators.tap(function (layout) { return (_this.layout = layout); }), operators.tap(function (layout) {
                _this.options.formState.disabled = !_this.permissions.hasAllRoles(layout.saveRoles);
                _this.beforeSaveHook = layout.beforeSaveHook;
            }));
            this.allRoles$ = this.layout$.pipe(operators.map(function (layout) { return __spreadArray(__spreadArray([], __read((layout.deleteRoles || []))), __read((layout.saveRoles || []))); }));
            this.changeProvider$ = new rxjs.BehaviorSubject(null);
            this.providerInput$ = new rxjs.BehaviorSubject('');
            this.form = new forms.FormGroup({});
            this.fields = [];
            this.options = {
                formState: {
                    disabled: false
                }
            };
            this.reload$ = new rxjs.BehaviorSubject(null);
            this.updatedConfiguration$ = new rxjs.Subject();
        }
        ProviderConfigurationComponent.prototype.ngOnInit = function () {
            var _this = this;
            var allProviders$ = rxjs.from(this.providerDefinitionsService.list()).pipe(operators.map(function (result) { return result.data; }), operators.shareReplay(1));
            this.providers$ = rxjs.combineLatest(allProviders$, this.providerInput$).pipe(operators.map(function (_a) {
                var _b = __read(_a, 2), providers = _b[0], input = _b[1];
                return input
                    ? providers.filter(function (el) { return el.displayName.toLowerCase().indexOf(input.toLowerCase()) >= 0; })
                    : providers;
            }), operators.shareReplay(1));
            this.configuration$ = rxjs.merge(this.updatedConfiguration$, this.reload$.pipe(operators.switchMap(function () { return rxjs.from(_this.providerConfigurationService.detail()).pipe(operators.catchError(function () { return rxjs.of({}); })); }), operators.map(function (result) { return result.data; }))).pipe(operators.map(this.removeEncryptedValues), operators.shareReplay(1));
            this.selectedProvider$ = rxjs.combineLatest(allProviders$, this.configuration$, this.changeProvider$).pipe(operators.tap(function (_a) {
                var _b = __read(_a, 3), _ = _b[0], configuration = _b[1], newProvider = _b[2];
                return (_this.model = newProvider
                    ? lodashEs.pick(_this.model, 'sms.senderName', 'sms.senderAddress')
                    : configuration);
            }), operators.map(function (_a) {
                var _b = __read(_a, 3), providers = _b[0], configuration = _b[1], newProvider = _b[2];
                return newProvider ||
                    lodashEs.find(providers, function (provider) { return lodashEs.get(configuration, 'provider') === provider.id; });
            }), operators.tap(function (provider) {
                if (provider) {
                    var config = _this.jsonschema.toFieldConfig(lodashEs.get(provider, 'schema'));
                    if (config.fieldGroup) {
                        config.fieldGroup.forEach(function (fieldConfig) {
                            core["ɵdefineHiddenProp"](fieldConfig, '_keyPath', {
                                key: fieldConfig.key,
                                path: [fieldConfig.key]
                            });
                            fieldConfig.expressionProperties = {
                                'templateOptions.disabled': 'formState.disabled'
                            };
                        });
                    }
                    _this.fields = [config];
                    _this.form = new forms.FormGroup({});
                }
            }), operators.shareReplay(1));
        };
        ProviderConfigurationComponent.prototype.saveProviderConfiguration = function () {
            return __awaiter(this, void 0, void 0, function () {
                var modelToSave, _a, res, err_1;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            if (!!!this.beforeSaveHook) return [3 /*break*/, 2];
                            return [4 /*yield*/, this.beforeSaveHook(this.model, this.fields)];
                        case 1:
                            _a = _b.sent();
                            return [3 /*break*/, 3];
                        case 2:
                            _a = this.model;
                            _b.label = 3;
                        case 3:
                            modelToSave = _a;
                            lodashEs.forOwn(modelToSave, function (value, key) {
                                if (Array.isArray(value)) {
                                    modelToSave[key] = value.filter(function (item) { return !!item || item === 0; });
                                }
                            });
                            _b.label = 4;
                        case 4:
                            _b.trys.push([4, 6, , 7]);
                            return [4 /*yield*/, this.providerConfigurationService.update(modelToSave)];
                        case 5:
                            res = _b.sent();
                            this.changeProvider$.next(null);
                            this.updatedConfiguration$.next(res.data);
                            this.alertService.success(this.layout.configurationUpdatedSuccessMsg);
                            this.form.markAsPristine();
                            return [3 /*break*/, 7];
                        case 6:
                            err_1 = _b.sent();
                            this.alertService.addServerFailure(err_1);
                            return [3 /*break*/, 7];
                        case 7: return [2 /*return*/];
                    }
                });
            });
        };
        ProviderConfigurationComponent.prototype.deleteProviderConfiguration = function () {
            return __awaiter(this, void 0, void 0, function () {
                var err_2;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            _a.trys.push([0, 3, , 4]);
                            return [4 /*yield*/, this.modalService.confirm(this.layout.deleteConfigurationModalTitle, this.layout.deleteConfigurationModalBody, exports.Status.DANGER, {
                                    ok: this.layout.deleteConfigurationModalOkBtnLabel,
                                    cancel: this.layout.deleteConfigurationModalCancelBtnLabel
                                })];
                        case 1:
                            _a.sent();
                            return [4 /*yield*/, this.providerConfigurationService.delete()];
                        case 2:
                            _a.sent();
                            this.reload$.next();
                            this.alertService.success(this.layout.configurationDeletedSuccessMsg);
                            return [3 /*break*/, 4];
                        case 3:
                            err_2 = _a.sent();
                            if (err_2) {
                                this.alertService.addServerFailure(err_2);
                            }
                            return [3 /*break*/, 4];
                        case 4: return [2 /*return*/];
                    }
                });
            });
        };
        ProviderConfigurationComponent.prototype.removeEncryptedValues = function (configuration) {
            return lodashEs.mapValues(configuration, function (value) { return (value === '<<Encrypted>>' ? undefined : value); });
        };
ProviderConfigurationComponent.ɵfac = function ProviderConfigurationComponent_Factory(t) { return new (t || ProviderConfigurationComponent)(ɵngcc0.ɵɵdirectiveInject(Permissions), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ActivatedRoute), ɵngcc0.ɵɵdirectiveInject(ModalService), ɵngcc0.ɵɵdirectiveInject(AlertService), ɵngcc0.ɵɵdirectiveInject(ProviderDefinitionsService), ɵngcc0.ɵɵdirectiveInject(ProviderConfigurationService), ɵngcc0.ɵɵdirectiveInject(C8yJSONSchema)); };
ProviderConfigurationComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ProviderConfigurationComponent, selectors: [["c8y-sms-gateway"]], features: [ɵngcc0.ɵɵProvidersFeature([ProviderConfigurationService, ProviderDefinitionsService])], decls: 36, vars: 47, consts: [[1, "row"], [1, "col-md-8", "col-xs-12"], [1, "card", "card--fullpage", 3, "ngSubmit"], [1, "card-header", "separator"], [1, "card-title"], [1, "inner-scroll"], [1, "card-block"], ["class", "m-b-8", 4, "ngIf"], ["for", "providerName"], ["name", "providerName", 3, "disabled", "ngModel", "displayProperty", "placeholder", "allowFreeEntries", "required", "container", "onSearch"], ["class", "p-l-8 p-r-8 c8y-list__item--link", 3, "active", "click", 4, "ngFor", "ngForOf"], ["name", "notExisting", 3, "text"], [3, "form", "fields", "model", "options", 4, "ngIf"], ["class", "card-footer separator", 4, "c8yIfAllowedAllowAny", "c8yIfAllowed"], [1, "m-b-8"], [1, "p-l-8", "p-r-8", "c8y-list__item--link", 3, "active", "click"], [3, "text", "pattern"], [3, "form", "fields", "model", "options"], [1, "card-footer", "separator"], ["class", "btn btn-default", "type", "button", 3, "disabled", "title", "click", 4, "c8yIfAllowed"], ["class", "btn btn-primary", "type", "submit", 3, "disabled", "title", 4, "c8yIfAllowed"], ["type", "button", 1, "btn", "btn-default", 3, "disabled", "title", "click"], ["type", "submit", 1, "btn", "btn-primary", 3, "disabled", "title"]], template: function ProviderConfigurationComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "c8y-title");
        ɵngcc0.ɵɵtext(1);
        ɵngcc0.ɵɵpipe(2, "translate");
        ɵngcc0.ɵɵpipe(3, "async");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(4, "div", 0);
        ɵngcc0.ɵɵelementStart(5, "div", 1);
        ɵngcc0.ɵɵelementStart(6, "form", 2);
        ɵngcc0.ɵɵlistener("ngSubmit", function ProviderConfigurationComponent_Template_form_ngSubmit_6_listener() { return ctx.saveProviderConfiguration(); });
        ɵngcc0.ɵɵelementStart(7, "div", 3);
        ɵngcc0.ɵɵelementStart(8, "h4", 4);
        ɵngcc0.ɵɵtext(9);
        ɵngcc0.ɵɵpipe(10, "translate");
        ɵngcc0.ɵɵpipe(11, "async");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(12, "div", 5);
        ɵngcc0.ɵɵelementStart(13, "div", 6);
        ɵngcc0.ɵɵtemplate(14, ProviderConfigurationComponent_p_14_Template, 4, 5, "p", 7);
        ɵngcc0.ɵɵpipe(15, "async");
        ɵngcc0.ɵɵelementStart(16, "c8y-form-group");
        ɵngcc0.ɵɵelementStart(17, "label", 8);
        ɵngcc0.ɵɵtext(18);
        ɵngcc0.ɵɵpipe(19, "translate");
        ɵngcc0.ɵɵpipe(20, "async");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(21, "c8y-typeahead", 9);
        ɵngcc0.ɵɵlistener("onSearch", function ProviderConfigurationComponent_Template_c8y_typeahead_onSearch_21_listener($event) { return ctx.providerInput$.next($event); });
        ɵngcc0.ɵɵpipe(22, "async");
        ɵngcc0.ɵɵpipe(23, "async");
        ɵngcc0.ɵɵpipe(24, "translate");
        ɵngcc0.ɵɵpipe(25, "async");
        ɵngcc0.ɵɵtemplate(26, ProviderConfigurationComponent_c8y_li_26_Template, 4, 7, "c8y-li", 10);
        ɵngcc0.ɵɵpipe(27, "async");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(28, "c8y-messages");
        ɵngcc0.ɵɵelement(29, "c8y-message", 11);
        ɵngcc0.ɵɵpipe(30, "translate");
        ɵngcc0.ɵɵpipe(31, "async");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(32, ProviderConfigurationComponent_formly_form_32_Template, 1, 4, "formly-form", 12);
        ɵngcc0.ɵɵpipe(33, "async");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(34, ProviderConfigurationComponent_div_34_Template, 5, 6, "div", 13);
        ɵngcc0.ɵɵpipe(35, "async");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 15, ɵngcc0.ɵɵpipeBind1(3, 17, ctx.layout$).pageTitle), "\n");
        ɵngcc0.ɵɵadvance(8);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(10, 19, ɵngcc0.ɵɵpipeBind1(11, 21, ctx.layout$).cardTitle), " ");
        ɵngcc0.ɵɵadvance(5);
        ɵngcc0.ɵɵproperty("ngIf", !!ɵngcc0.ɵɵpipeBind1(15, 23, ctx.layout$).description);
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(19, 25, ɵngcc0.ɵɵpipeBind1(20, 27, ctx.layout$).providerName));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵpropertyInterpolate("placeholder", ɵngcc0.ɵɵpipeBind1(24, 33, ɵngcc0.ɵɵpipeBind1(25, 35, ctx.layout$).providerNamePlaceholder));
        ɵngcc0.ɵɵproperty("disabled", !ctx.permissions.hasAllRoles(ɵngcc0.ɵɵpipeBind1(22, 29, ctx.layout$).saveRoles))("ngModel", ɵngcc0.ɵɵpipeBind1(23, 31, ctx.selectedProvider$))("displayProperty", "displayName")("allowFreeEntries", false)("required", true)("container", "body");
        ɵngcc0.ɵɵadvance(5);
        ɵngcc0.ɵɵproperty("ngForOf", ɵngcc0.ɵɵpipeBind1(27, 37, ctx.providers$));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("text", ɵngcc0.ɵɵpipeBind1(30, 39, ɵngcc0.ɵɵpipeBind1(31, 41, ctx.layout$).providerNameNoMatchesHint));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind1(33, 43, ctx.selectedProvider$));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("c8yIfAllowed", ɵngcc0.ɵɵpipeBind1(35, 45, ctx.allRoles$));
    } }, directives: [TitleComponent, ɵngcc13.ɵNgNoValidate, ɵngcc13.NgControlStatusGroup, ɵngcc13.NgForm, ɵngcc6.NgIf, FormGroupComponent, TypeaheadComponent, ɵngcc13.NgControlStatus, ɵngcc13.NgModel, ɵngcc13.RequiredValidator, ɵngcc6.NgForOf, MessagesComponent, MessageDirective, IfAllowedDirective, ListItemComponent, HighlightComponent, ɵngcc16.FormlyForm], pipes: [C8yTranslatePipe, ɵngcc6.AsyncPipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ProviderConfigurationComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-sms-gateway',
                template: "<c8y-title>\n  {{ (layout$ | async).pageTitle | translate }}\n</c8y-title>\n\n<div class=\"row\">\n  <div class=\"col-md-8 col-xs-12\">\n    <form class=\"card card--fullpage\" (ngSubmit)=\"saveProviderConfiguration()\">\n      <div class=\"card-header separator\">\n        <h4 class=\"card-title\">\n          {{ (layout$ | async).cardTitle | translate }}\n        </h4>\n      </div>\n      <div class=\"inner-scroll\">\n        <div class=\"card-block\">\n          <p *ngIf=\"!!(layout$ | async).description\" class=\"m-b-8\">\n            {{ (layout$ | async).description | translate }}\n          </p>\n          <c8y-form-group>\n            <label for=\"providerName\">{{ (layout$ | async).providerName | translate }}</label>\n            <c8y-typeahead\n              [disabled]=\"!permissions.hasAllRoles((layout$ | async).saveRoles)\"\n              [ngModel]=\"selectedProvider$ | async\"\n              [displayProperty]=\"'displayName'\"\n              name=\"providerName\"\n              placeholder=\"{{ (layout$ | async).providerNamePlaceholder | translate }}\"\n              (onSearch)=\"providerInput$.next($event)\"\n              [allowFreeEntries]=\"false\"\n              [required]=\"true\"\n              [container]=\"'body'\"\n            >\n              <c8y-li\n                *ngFor=\"let provider of providers$ | async\"\n                class=\"p-l-8 p-r-8 c8y-list__item--link\"\n                (click)=\"changeProvider$.next(provider); providerInput$.next('')\"\n                [active]=\"(selectedProvider$ | async) === provider\"\n              >\n                <c8y-highlight\n                  [text]=\"provider.displayName || '--'\"\n                  [pattern]=\"providerInput$ | async\"\n                ></c8y-highlight>\n              </c8y-li>\n            </c8y-typeahead>\n            <c8y-messages\n              ><c8y-message\n                name=\"notExisting\"\n                [text]=\"(layout$ | async).providerNameNoMatchesHint | translate\"\n              ></c8y-message>\n            </c8y-messages>\n          </c8y-form-group>\n          <formly-form\n            *ngIf=\"selectedProvider$ | async\"\n            [form]=\"form\"\n            [fields]=\"fields\"\n            [model]=\"model\"\n            [options]=\"options\"\n          ></formly-form>\n        </div>\n      </div>\n      <div class=\"card-footer separator\" *c8yIfAllowed=\"allRoles$ | async; allowAny\">\n        <button\n          *c8yIfAllowed=\"(layout$ | async).deleteRoles\"\n          class=\"btn btn-default\"\n          type=\"button\"\n          (click)=\"deleteProviderConfiguration()\"\n          [disabled]=\"\n            !(configuration$ | async)?.provider && !(configuration$ | async)?.providerName\n          \"\n          title=\"{{ (layout$ | async).deleteBtnLabel | translate }}\"\n        >\n          {{ (layout$ | async).deleteBtnLabel | translate }}\n        </button>\n        <button\n          *c8yIfAllowed=\"(layout$ | async).saveRoles\"\n          class=\"btn btn-primary\"\n          type=\"submit\"\n          [disabled]=\"form.invalid || form.pristine\"\n          title=\"{{ (layout$ | async).saveBtnLabel | translate }}\"\n        >\n          {{ (layout$ | async).saveBtnLabel | translate }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n",
                providers: [ProviderConfigurationService, ProviderDefinitionsService]
            }]
    }], function () { return [{ type: Permissions }, { type: ɵngcc1.ActivatedRoute }, { type: ModalService }, { type: AlertService }, { type: ProviderDefinitionsService }, { type: ProviderConfigurationService }, { type: C8yJSONSchema }]; }, null); })();
        return ProviderConfigurationComponent;
    }());
    ProviderConfigurationComponent.ctorParameters = function () { return [
        { type: Permissions },
        { type: i1.ActivatedRoute },
        { type: ModalService },
        { type: AlertService },
        { type: ProviderDefinitionsService },
        { type: ProviderConfigurationService },
        { type: C8yJSONSchema }
    ]; };

    var ProviderConfigurationRouteFactory = /** @class */ (function () {
        function ProviderConfigurationRouteFactory(config) {
            this.config = lodashEs.flatten(config);
        }
        ProviderConfigurationRouteFactory.prototype.get = function () {
            var navigationRoutes = lodashEs.uniqBy(this.config.filter(function (c) { return c.tab; }), 'navigation.path').map(function (c) {
                return {
                    path: c.navigation.path,
                    component: ConditionalTabsOutletComponent
                };
            });
            var navigationWithTabsRoutes = this.config.map(function (c) { return ({
                path: c.tab
                    ? c.navigation.path.replace(/^\/|\/$/g, '') + "/" + c.tab.path.replace(/^\/|\/$/g, '')
                    : c.navigation.path,
                component: ProviderConfigurationComponent,
                canActivate: __spreadArray(__spreadArray([], __read((c.navigation.canActivate || []))), __read((lodashEs.get(c, 'tab.canActivate') || []))).filter(function (g) { return !!g; }),
                data: {
                    layout: c.layout,
                    endpoint: c.endpoint
                }
            }); });
            return __spreadArray(__spreadArray([], __read(navigationRoutes)), __read(navigationWithTabsRoutes));
        };
ProviderConfigurationRouteFactory.ɵfac = function ProviderConfigurationRouteFactory_Factory(t) { return new (t || ProviderConfigurationRouteFactory)(ɵngcc0.ɵɵinject(HOOK_DYNAMIC_PROVIDER_CONFIG, 8)); };
ProviderConfigurationRouteFactory.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: ProviderConfigurationRouteFactory, factory: function (t) { return ProviderConfigurationRouteFactory.ɵfac(t); } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ProviderConfigurationRouteFactory, [{
        type: i0.Injectable
    }], function () { return [{ type: Array, decorators: [{
                type: i0.Optional
            }, {
                type: i0.Inject,
                args: [HOOK_DYNAMIC_PROVIDER_CONFIG]
            }] }]; }, null); })();
        return ProviderConfigurationRouteFactory;
    }());
    ProviderConfigurationRouteFactory.ctorParameters = function () { return [
        { type: Array, decorators: [{ type: i0.Optional }, { type: i0.Inject, args: [HOOK_DYNAMIC_PROVIDER_CONFIG,] }] }
    ]; };

    var ProviderConfigurationTabFactory = /** @class */ (function () {
        function ProviderConfigurationTabFactory(config, router, injector) {
            this.router = router;
            this.injector = injector;
            this.config = lodashEs.flatten(config);
        }
        ProviderConfigurationTabFactory.prototype.get = function () {
            var _this = this;
            if (!this.config || !this.config.length) {
                return;
            }
            var configForRoute = this.config.find(function (c) { return c.tab
                ? _this.router.url === '/' + _this.getNodeTabPath(c.navigation.path, c.tab.path) ||
                    _this.router.url.startsWith('/' + c.navigation.path.replace(/^\/|\/$/g, ''))
                : false; });
            var filteredRoutes = configForRoute
                ? this.config.filter(function (c) { return c.navigation.path.replace(/^\/|\/$/g, '') ===
                    configForRoute.navigation.path.replace(/^\/|\/$/g, '') && c.tab; })
                : [];
            var canActivate = filteredRoutes
                .map(function (c) { return c.tab.canActivate && c.tab.canActivate.length
                ? c.tab.canActivate.map(function (ca) { return _this.injector.get(ca); })
                : undefined; })
                .map(this.checkCanActivate.bind(this));
            return canActivate.length > 0
                ? rxjs.forkJoin(canActivate).pipe(operators.map(function (canActivateResult) { return filteredRoutes
                    .map(function (c, index) {
                    var tab = Object.assign(Object.assign({}, c.tab), { path: _this.getNodeTabPath(c.navigation.path, c.tab.path) });
                    return canActivateResult[index] ? tab : undefined;
                })
                    .filter(function (el) { return !!el; }); }))
                : [];
        };
        ProviderConfigurationTabFactory.prototype.checkCanActivate = function (ca) {
            if (!!ca && ca.length) {
                var canActivateResult = ca
                    .map(function (canActivate) { return canActivate.canActivate(undefined, undefined); })
                    .map(toObservable);
                return rxjs.forkJoin(canActivateResult).pipe(operators.map(function (caResult) { return caResult.reduce(function (acc, curr) { return acc && curr; }); }));
            }
            return rxjs.of(true);
        };
        ProviderConfigurationTabFactory.prototype.getNodeTabPath = function (nodePath, tabPath) {
            return nodePath.replace(/^\/|\/$/g, '') + "/" + tabPath.replace(/^\/|\/$/g, '');
        };
ProviderConfigurationTabFactory.ɵfac = function ProviderConfigurationTabFactory_Factory(t) { return new (t || ProviderConfigurationTabFactory)(ɵngcc0.ɵɵinject(HOOK_DYNAMIC_PROVIDER_CONFIG, 8), ɵngcc0.ɵɵinject(ɵngcc1.Router), ɵngcc0.ɵɵinject(ɵngcc0.Injector)); };
ProviderConfigurationTabFactory.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: ProviderConfigurationTabFactory, factory: function (t) { return ProviderConfigurationTabFactory.ɵfac(t); } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ProviderConfigurationTabFactory, [{
        type: i0.Injectable
    }], function () { return [{ type: Array, decorators: [{
                type: i0.Optional
            }, {
                type: i0.Inject,
                args: [HOOK_DYNAMIC_PROVIDER_CONFIG]
            }] }, { type: ɵngcc1.Router }, { type: ɵngcc0.Injector }]; }, null); })();
        return ProviderConfigurationTabFactory;
    }());
    ProviderConfigurationTabFactory.ctorParameters = function () { return [
        { type: Array, decorators: [{ type: i0.Optional }, { type: i0.Inject, args: [HOOK_DYNAMIC_PROVIDER_CONFIG,] }] },
        { type: i1.Router },
        { type: i0.Injector }
    ]; };

    var ProviderConfigurationModule = /** @class */ (function () {
        function ProviderConfigurationModule() {
        }
        ProviderConfigurationModule.config = function (config) {
            return {
                ngModule: ProviderConfigurationModule,
                providers: [{ provide: HOOK_DYNAMIC_PROVIDER_CONFIG, useValue: config, multi: true }]
            };
        };
ProviderConfigurationModule.ɵfac = function ProviderConfigurationModule_Factory(t) { return new (t || ProviderConfigurationModule)(); };
ProviderConfigurationModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: ProviderConfigurationModule });
ProviderConfigurationModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [
        {
            provide: HOOK_ROUTE,
            useClass: i0.forwardRef(function () { return ProviderConfigurationRouteFactory; }),
            multi: true
        },
        {
            provide: HOOK_NAVIGATOR_NODES,
            useClass: i0.forwardRef(function () { return ProviderConfigurationNodeFactory; }),
            multi: true
        },
        {
            provide: HOOK_TABS,
            useClass: i0.forwardRef(function () { return ProviderConfigurationTabFactory; }),
            multi: true
        }
    ], imports: [[CoreModule, CommonModule, DynamicFormsModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ProviderConfigurationModule, [{
        type: i0.NgModule,
        args: [{
                declarations: [ProviderConfigurationComponent],
                exports: [ProviderConfigurationComponent],
                imports: [CoreModule, CommonModule, DynamicFormsModule],
                entryComponents: [ProviderConfigurationComponent],
                providers: [
                    {
                        provide: HOOK_ROUTE,
                        useClass: i0.forwardRef(function () { return ProviderConfigurationRouteFactory; }),
                        multi: true
                    },
                    {
                        provide: HOOK_NAVIGATOR_NODES,
                        useClass: i0.forwardRef(function () { return ProviderConfigurationNodeFactory; }),
                        multi: true
                    },
                    {
                        provide: HOOK_TABS,
                        useClass: i0.forwardRef(function () { return ProviderConfigurationTabFactory; }),
                        multi: true
                    }
                ]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ProviderConfigurationModule, { declarations: [ProviderConfigurationComponent], imports: [CoreModule, CommonModule, DynamicFormsModule], exports: [ProviderConfigurationComponent] }); })();
        return ProviderConfigurationModule;
    }());

    /**
     * A wrapper class for handling realtime notifications in RxJS fashion.
     */
    var RealtimeService = /** @class */ (function () {
        function RealtimeService(realtime) {
            this.realtime = realtime;
            this.subjects$ = new Map();
            this.isActive = true;
        }
        Object.defineProperty(RealtimeService.prototype, "active", {
            /**
             * A flag displaying if realtime notifications are currently active.
             */
            get: function () {
                return this.isActive;
            },
            enumerable: false,
            configurable: true
        });
        /**
         * Get an Observable of all realtime notifications.
         *
         * @param {string | number | IIdentified} entityOrId Entity object or id
         *
         * @returns An [[Observable]] of notifications wrapped as [[RealtimeMessage]]
         */
        RealtimeService.prototype.onAll$ = function (entityOrId) {
            var _this = this;
            var subject$ = this.getSubjectForChannel(entityOrId);
            return subject$.pipe(operators.finalize(function () {
                if (subject$.observers.length === 1 && subject$.observers[0].closed) {
                    subject$.stop();
                    _this.subjects$.delete(subject$.channel);
                }
            }));
        };
        /**
         * Subscribes again all realtime channels with active observers.
         */
        RealtimeService.prototype.start = function () {
            if (!this.isActive) {
                this.subjects$.forEach(function (subject$) {
                    subject$.start();
                });
                this.isActive = true;
            }
        };
        /**
         * Stops realtime notifications and unsubscribes all realtime channels.
         */
        RealtimeService.prototype.stop = function () {
            if (this.isActive) {
                this.subjects$.forEach(function (subject$) {
                    subject$.stop();
                });
                this.isActive = false;
            }
        };
        /**
         * Get an Observable of all CREATE realtime notifications.
         *
         * @param {string | number | IIdentified} entityOrId Entity object or id
         *
         * @returns An [[Observable]] of newly created entity objects.
         */
        RealtimeService.prototype.onCreate$ = function (entityOrId) {
            return this.onAll$(entityOrId).pipe(operators.filter(function (msg) { return msg.realtimeAction === 'CREATE'; }), operators.map(function (msg) { return msg.data; }));
        };
        /**
         * Get an Observable of all UPDATE realtime notifications.
         *
         * @param {string | number | IIdentified} entityOrId Entity object or id
         *
         * @returns An [[Observable]] of updated entity objects.
         */
        RealtimeService.prototype.onUpdate$ = function (entityOrId) {
            return this.onAll$(entityOrId).pipe(operators.filter(function (msg) { return msg.realtimeAction === 'UPDATE'; }), operators.map(function (msg) { return msg.data; }));
        };
        /**
         * Get an Observable of all DELETE realtime notifications.
         *
         * @param {string | number | IIdentified} entityOrId Entity object or id
         *
         * @returns An [[Observable]] of deleted entity objects.
         */
        RealtimeService.prototype.onDelete$ = function (entityOrId) {
            return this.onAll$(entityOrId).pipe(operators.filter(function (msg) { return msg.realtimeAction === 'DELETE'; }), operators.map(function (msg) { return coercion.coerceNumberProperty(msg.data); }));
        };
        RealtimeService.prototype.getIdString = function (reference) {
            var id;
            if (typeof reference === 'object') {
                id = reference.id;
            }
            else {
                id = reference;
            }
            return String(id);
        };
        RealtimeService.prototype.getChannel = function (entityOrId) {
            return entityOrId ? this.channel().replace('*', this.getIdString(entityOrId)) : this.channel();
        };
        RealtimeService.prototype.getSubjectForChannel = function (entityOrId) {
            var channel = this.getChannel(entityOrId);
            var subject$;
            if (this.subjects$.has(channel)) {
                subject$ = this.subjects$.get(channel);
            }
            else {
                subject$ = new RealtimeSubject(channel, this.realtime);
                this.subjects$.set(channel, subject$);
            }
            return subject$;
        };
        return RealtimeService;
    }());
    // tslint:disable-next-line: max-classes-per-file
    var RealtimeSubject = /** @class */ (function (_super) {
        __extends(RealtimeSubject, _super);
        function RealtimeSubject(realtimeChannel, realtime) {
            var _this = _super.call(this) || this;
            _this.realtimeChannel = realtimeChannel;
            _this.realtime = realtime;
            _this.start();
            return _this;
        }
        Object.defineProperty(RealtimeSubject.prototype, "channel", {
            get: function () {
                return this.realtimeChannel;
            },
            enumerable: false,
            configurable: true
        });
        RealtimeSubject.prototype.start = function () {
            var _this = this;
            if (!this.realtimeSubscription) {
                this.realtimeSubscription = this.realtime.subscribe(this.realtimeChannel, function (msg) {
                    var data = {
                        channel: msg.channel,
                        data: msg.data.data,
                        id: msg.id,
                        realtimeAction: msg.data.realtimeAction
                    };
                    _this.next(data);
                });
            }
        };
        RealtimeSubject.prototype.stop = function () {
            if (this.realtimeSubscription) {
                this.realtime.unsubscribe(this.realtimeSubscription);
                this.realtimeSubscription = null;
            }
        };
        return RealtimeSubject;
    }(rxjs.Subject));

    var ManagedObjectRealtimeService = /** @class */ (function (_super) {
        __extends(ManagedObjectRealtimeService, _super);
        function ManagedObjectRealtimeService(realtime) {
            return _super.call(this, realtime) || this;
        }
        ManagedObjectRealtimeService.prototype.channel = function () {
            return '/managedobjects/*';
        };
ManagedObjectRealtimeService.ɵfac = function ManagedObjectRealtimeService_Factory(t) { return new (t || ManagedObjectRealtimeService)(ɵngcc0.ɵɵinject(ɵngcc3.Realtime)); };
ManagedObjectRealtimeService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: ManagedObjectRealtimeService, factory: function (t) { return ManagedObjectRealtimeService.ɵfac(t); } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ManagedObjectRealtimeService, [{
        type: i0.Injectable
    }], function () { return [{ type: ɵngcc3.Realtime }]; }, null); })();
        return ManagedObjectRealtimeService;
    }(RealtimeService));
    ManagedObjectRealtimeService.ctorParameters = function () { return [
        { type: client.Realtime }
    ]; };

    /**
     * A service for handling bulk operation realtime notifications in RxJS fashion.
     */
    var OperationBulkRealtimeService = /** @class */ (function (_super) {
        __extends(OperationBulkRealtimeService, _super);
        function OperationBulkRealtimeService(realtime) {
            return _super.call(this, realtime) || this;
        }
        OperationBulkRealtimeService.prototype.channel = function () {
            return '/bulkOperations/*';
        };
OperationBulkRealtimeService.ɵfac = function OperationBulkRealtimeService_Factory(t) { return new (t || OperationBulkRealtimeService)(ɵngcc0.ɵɵinject(ɵngcc3.Realtime)); };
OperationBulkRealtimeService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: OperationBulkRealtimeService, factory: function (t) { return OperationBulkRealtimeService.ɵfac(t); } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(OperationBulkRealtimeService, [{
        type: i0.Injectable
    }], function () { return [{ type: ɵngcc3.Realtime }]; }, null); })();
        return OperationBulkRealtimeService;
    }(RealtimeService));
    OperationBulkRealtimeService.ctorParameters = function () { return [
        { type: client.Realtime }
    ]; };

    /**
     * A service for handling bulk operation realtime notifications in RxJS fashion.
     */
    var OperationRealtimeService = /** @class */ (function (_super) {
        __extends(OperationRealtimeService, _super);
        function OperationRealtimeService(realtime) {
            return _super.call(this, realtime) || this;
        }
        OperationRealtimeService.prototype.channel = function () {
            return '/operations/*';
        };
OperationRealtimeService.ɵfac = function OperationRealtimeService_Factory(t) { return new (t || OperationRealtimeService)(ɵngcc0.ɵɵinject(ɵngcc3.Realtime)); };
OperationRealtimeService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: OperationRealtimeService, factory: function (t) { return OperationRealtimeService.ɵfac(t); } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(OperationRealtimeService, [{
        type: i0.Injectable
    }], function () { return [{ type: ɵngcc3.Realtime }]; }, null); })();
        return OperationRealtimeService;
    }(RealtimeService));
    OperationRealtimeService.ctorParameters = function () { return [
        { type: client.Realtime }
    ]; };

    var RealtimeMessage = /** @class */ (function () {
        function RealtimeMessage() {
        }
        return RealtimeMessage;
    }());

    /**
     * Barrel to export /core
     */

    /**
     * Generated bundle index. Do not edit.
     */

    exports.ActionBarComponent = ActionBarComponent;
    exports.ActionBarItemComponent = ActionBarItemComponent;
    exports.ActionBarModule = ActionBarModule;
    exports.ActionBarService = ActionBarService;
    exports.ActionComponent = ActionComponent;
    exports.ActionModule = ActionModule;
    exports.ActionOutletComponent = ActionOutletComponent;
    exports.ActionService = ActionService;
    exports.AlertComponent = AlertComponent;
    exports.AlertDetailsComponent = AlertDetailsComponent;
    exports.AlertModule = AlertModule;
    exports.AlertOutletComponent = AlertOutletComponent;
    exports.AlertService = AlertService;
    exports.AlertTextComponent = AlertTextComponent;
    exports.AppIconComponent = AppIconComponent;
    exports.AppStateService = AppStateService;
    exports.AppSwitcherComponent = AppSwitcherComponent;
    exports.ApplicationOptions = ApplicationOptions;
    exports.AuthenticationModule = AuthenticationModule;
    exports.BootstrapComponent = BootstrapComponent;
    exports.BootstrapModule = BootstrapModule;
    exports.BreadcrumbComponent = BreadcrumbComponent;
    exports.BreadcrumbItemComponent = BreadcrumbItemComponent;
    exports.BreadcrumbModule = BreadcrumbModule;
    exports.BreadcrumbOutletComponent = BreadcrumbOutletComponent;
    exports.BreadcrumbService = BreadcrumbService;
    exports.C8yJSONSchema = C8yJSONSchema;
    exports.C8yStepper = C8yStepper;
    exports.C8yStepperButtons = C8yStepperButtons;
    exports.C8yStepperIcon = C8yStepperIcon;
    exports.C8yStepperProgress = C8yStepperProgress;
    exports.C8yTranslateDirective = C8yTranslateDirective;
    exports.C8yTranslateModule = C8yTranslateModule;
    exports.C8yTranslatePipe = C8yTranslatePipe;
    exports.CachedLocaleDictionaryService = CachedLocaleDictionaryService;
    exports.CellRendererComponent = CellRendererComponent;
    exports.CellRendererContext = CellRendererContext;
    exports.CellRendererDefDirective = CellRendererDefDirective;
    exports.ChangePasswordComponent = ChangePasswordComponent;
    exports.ColumnDirective = ColumnDirective;
    exports.CommonModule = CommonModule;
    exports.ConditionalTabsOutletComponent = ConditionalTabsOutletComponent;
    exports.ConfirmModalComponent = ConfirmModalComponent;
    exports.ContextRouteComponent = ContextRouteComponent;
    exports.ContextRouteGuard = ContextRouteGuard;
    exports.ContextRouteService = ContextRouteService;
    exports.CookieBannerComponent = CookieBannerComponent;
    exports.CoreModule = CoreModule;
    exports.CredentialsComponent = CredentialsComponent;
    exports.DashboardChildActionComponent = DashboardChildActionComponent;
    exports.DashboardChildChange = DashboardChildChange;
    exports.DashboardChildComponent = DashboardChildComponent;
    exports.DashboardChildTitleComponent = DashboardChildTitleComponent;
    exports.DashboardComponent = DashboardComponent;
    exports.DashboardModule = DashboardModule;
    exports.DataGridComponent = DataGridComponent;
    exports.DataGridModule = DataGridModule;
    exports.DatePickerComponent = DatePickerComponent;
    exports.DatePickerModule = DatePickerModule;
    exports.DatePipe = DatePipe;
    exports.DefaultValidationDirective = DefaultValidationDirective;
    exports.DeviceStatusComponent = DeviceStatusComponent;
    exports.DeviceStatusModule = DeviceStatusModule;
    exports.DocsModule = DocsModule;
    exports.DocsService = DocsService;
    exports.DropAreaComponent = DropAreaComponent;
    exports.DropAreaModule = DropAreaModule;
    exports.DynamicComponentComponent = DynamicComponentComponent;
    exports.DynamicComponentModule = DynamicComponentModule;
    exports.DynamicComponentService = DynamicComponentService;
    exports.DynamicFormsModule = DynamicFormsModule;
    exports.ES_MAX_TIME_MILLISECONDS = ES_MAX_TIME_MILLISECONDS;
    exports.EmailsValidatorDirective = EmailsValidatorDirective;
    exports.EmptyComponent = EmptyComponent;
    exports.FilePickerComponent = FilePickerComponent;
    exports.FilePickerModule = FilePickerModule;
    exports.FilterInputComponent = FilterInputComponent;
    exports.FilteringFormRendererComponent = FilteringFormRendererComponent;
    exports.FilteringFormRendererContext = FilteringFormRendererContext;
    exports.FilteringFormRendererDefDirective = FilteringFormRendererDefDirective;
    exports.ForOfDirective = ForOfDirective;
    exports.FormGroupComponent = FormGroupComponent;
    exports.FormsModule = FormsModule;
    exports.GainsightService = GainsightService;
    exports.GridDataSource = GridDataSource;
    exports.GuideDocsComponent = GuideDocsComponent;
    exports.GuideHrefDirective = GuideHrefDirective;
    exports.HOOK_ACTION = HOOK_ACTION;
    exports.HOOK_ACTION_BAR = HOOK_ACTION_BAR;
    exports.HOOK_BREADCRUMB = HOOK_BREADCRUMB;
    exports.HOOK_COMPONENTS = HOOK_COMPONENTS;
    exports.HOOK_DOCS = HOOK_DOCS;
    exports.HOOK_DYNAMIC_PROVIDER_CONFIG = HOOK_DYNAMIC_PROVIDER_CONFIG;
    exports.HOOK_NAVIGATOR_NODES = HOOK_NAVIGATOR_NODES;
    exports.HOOK_ONCE_ROUTE = HOOK_ONCE_ROUTE;
    exports.HOOK_OPTIONS = HOOK_OPTIONS;
    exports.HOOK_PATTERN_MESSAGES = HOOK_PATTERN_MESSAGES;
    exports.HOOK_ROUTE = HOOK_ROUTE;
    exports.HOOK_SEARCH = HOOK_SEARCH;
    exports.HOOK_TABS = HOOK_TABS;
    exports.HOOK_WIZARD = HOOK_WIZARD;
    exports.HeaderBarComponent = HeaderBarComponent;
    exports.HeaderCellRendererDefDirective = HeaderCellRendererDefDirective;
    exports.HeaderModule = HeaderModule;
    exports.HeaderService = HeaderService;
    exports.HelpComponent = HelpComponent;
    exports.HelpModule = HelpModule;
    exports.HighlightComponent = HighlightComponent;
    exports.HumanizeAppNamePipe = HumanizeAppNamePipe;
    exports.HumanizePipe = HumanizePipe;
    exports.I18nModule = I18nModule$1;
    exports.ICONS = ICONS;
    exports.ICON_LIST = ICON_LIST;
    exports.IconDirective = IconDirective;
    exports.InputGroupListComponent = InputGroupListComponent;
    exports.InputGroupListContainerDirective = InputGroupListContainerDirective;
    exports.IpRangeInputListComponent = IpRangeInputListComponent;
    exports.JsonValidationPrettifierDirective = JsonValidationPrettifierDirective;
    exports.LANGUAGES = LANGUAGES;
    exports.LOCALE_PATH = LOCALE_PATH;
    exports.ListGroupComponent = ListGroupComponent;
    exports.ListGroupModule = ListGroupModule;
    exports.ListItemActionComponent = ListItemActionComponent;
    exports.ListItemBodyComponent = ListItemBodyComponent;
    exports.ListItemCheckboxComponent = ListItemCheckboxComponent;
    exports.ListItemCollapseComponent = ListItemCollapseComponent;
    exports.ListItemComponent = ListItemComponent;
    exports.ListItemFooterComponent = ListItemFooterComponent;
    exports.ListItemIconComponent = ListItemIconComponent;
    exports.ListItemRadioComponent = ListItemRadioComponent;
    exports.ListItemTimelineComponent = ListItemTimelineComponent;
    exports.LoadMoreComponent = LoadMoreComponent;
    exports.LoadingComponent = LoadingComponent;
    exports.LoginComponent = LoginComponent;
    exports.LoginModule = LoginModule;
    exports.LoginService = LoginService;
    exports.MESSAGES = MESSAGES;
    exports.ManagedObjectRealtimeService = ManagedObjectRealtimeService;
    exports.MapFunctionPipe = MapFunctionPipe;
    exports.MaxValidationDirective = MaxValidationDirective;
    exports.MessageDirective = MessageDirective;
    exports.MessagesComponent = MessagesComponent;
    exports.MinValidationDirective = MinValidationDirective;
    exports.MissingTranslationCustomHandler = MissingTranslationCustomHandler;
    exports.ModalComponent = ModalComponent;
    exports.ModalModule = ModalModule;
    exports.ModalService = ModalService;
    exports.NavigatorIconComponent = NavigatorIconComponent;
    exports.NavigatorItemComponent = NavigatorItemComponent;
    exports.NavigatorModule = NavigatorModule;
    exports.NavigatorNode = NavigatorNode;
    exports.NavigatorNodeComponent = NavigatorNodeComponent;
    exports.NavigatorNodeRoot = NavigatorNodeRoot;
    exports.NavigatorOutletComponent = NavigatorOutletComponent;
    exports.NavigatorService = NavigatorService;
    exports.NewPasswordComponent = NewPasswordComponent;
    exports.OperationBulkRealtimeService = OperationBulkRealtimeService;
    exports.OperationRealtimeService = OperationRealtimeService;
    exports.OptionsService = OptionsService;
    exports.OutletDirective = OutletDirective;
    exports.PasswordCheckListComponent = PasswordCheckListComponent;
    exports.PasswordConfirm = PasswordConfirm;
    exports.PasswordConfirmModalComponent = PasswordConfirmModalComponent;
    exports.PasswordService = PasswordService;
    exports.PasswordStrengthCheckerService = PasswordStrengthCheckerService;
    exports.PasswordStrengthComponent = PasswordStrengthComponent;
    exports.PasswordStrengthValidatorDirective = PasswordStrengthValidatorDirective;
    exports.PatternMessagesService = PatternMessagesService;
    exports.Permissions = Permissions;
    exports.PhoneValidationDirective = PhoneValidationDirective;
    exports.PluginsModule = PluginsModule;
    exports.PluginsResolveService = PluginsResolveService;
    exports.PluginsService = PluginsService;
    exports.PopoverConfirmComponent = PopoverConfirmComponent;
    exports.ProductExperienceDirective = ProductExperienceDirective;
    exports.ProductExperienceModule = ProductExperienceModule;
    exports.ProgressBarComponent = ProgressBarComponent;
    exports.PropertiesListComponent = PropertiesListComponent;
    exports.PropertiesListModule = PropertiesListModule;
    exports.ProviderConfigurationComponent = ProviderConfigurationComponent;
    exports.ProviderConfigurationModule = ProviderConfigurationModule;
    exports.ProviderConfigurationNodeFactory = ProviderConfigurationNodeFactory;
    exports.ProviderConfigurationRouteFactory = ProviderConfigurationRouteFactory;
    exports.ProviderConfigurationService = ProviderConfigurationService;
    exports.ProviderDefinitionsService = ProviderDefinitionsService;
    exports.QuickLinkComponent = QuickLinkComponent;
    exports.QuickLinkModule = QuickLinkModule;
    exports.RESOLVING_COMPONENT_WAIT_TIME = RESOLVING_COMPONENT_WAIT_TIME;
    exports.RangeComponent = RangeComponent;
    exports.RangeDirective = RangeDirective;
    exports.RangeDisplayComponent = RangeDisplayComponent;
    exports.RangeDisplayModule = RangeDisplayModule;
    exports.RealtimeButtonComponent = RealtimeButtonComponent;
    exports.RealtimeMessage = RealtimeMessage;
    exports.RealtimeModule = RealtimeModule;
    exports.RealtimeService = RealtimeService;
    exports.RecoverPasswordComponent = RecoverPasswordComponent;
    exports.RequiredInputPlaceholderDirective = RequiredInputPlaceholderDirective;
    exports.RightDrawerComponent = RightDrawerComponent;
    exports.RouterModule = RouterModule;
    exports.RouterService = RouterService;
    exports.RouterTabsResolver = RouterTabsResolver;
    exports.SearchComponent = SearchComponent;
    exports.SearchModule = SearchModule;
    exports.SearchOutletComponent = SearchOutletComponent;
    exports.SearchResultEmptyComponent = SearchResultEmptyComponent;
    exports.SearchService = SearchService;
    exports.SelectComponent = SelectComponent;
    exports.SelectModalComponent = SelectModalComponent;
    exports.SelectModalFilterPipe = SelectModalFilterPipe;
    exports.SelectModalModule = SelectModalModule;
    exports.SelectModule = SelectModule;
    exports.ShortenUserNamePipe = ShortenUserNamePipe;
    exports.SmsChallengeComponent = SmsChallengeComponent;
    exports.StateService = StateService;
    exports.StepperModule = StepperModule;
    exports.StrengthValidatorService = StrengthValidatorService;
    exports.TabComponent = TabComponent;
    exports.TabsModule = TabsModule;
    exports.TabsOutletComponent = TabsOutletComponent;
    exports.TabsService = TabsService;
    exports.TenantUiService = TenantUiService;
    exports.TextAreaRowHeightDirective = TextAreaRowHeightDirective;
    exports.TitleComponent = TitleComponent;
    exports.TitleOutletComponent = TitleOutletComponent;
    exports.TotpAuthComponent = TotpAuthComponent;
    exports.TotpChallengeComponent = TotpChallengeComponent;
    exports.TotpSetupComponent = TotpSetupComponent;
    exports.TranslateCustomLoader = TranslateCustomLoader;
    exports.TranslateParserCustom = TranslateParserCustom;
    exports.TranslateService = TranslateService;
    exports.TypeaheadComponent = TypeaheadComponent;
    exports.UserEditComponent = UserEditComponent;
    exports.UserEditModalComponent = UserEditModalComponent;
    exports.UserMenuItemComponent = UserMenuItemComponent;
    exports.UserMenuOutletComponent = UserMenuOutletComponent;
    exports.UserMenuService = UserMenuService;
    exports.UserModule = UserModule;
    exports.UserPreferencesService = UserPreferencesService;
    exports.UserPreferencesStorageInventory = UserPreferencesStorageInventory;
    exports.UserPreferencesStorageLocal = UserPreferencesStorageLocal;
    exports.UserTotpRevokeComponent = UserTotpRevokeComponent;
    exports.UserTotpSetupComponent = UserTotpSetupComponent;
    exports.ValidationPattern = ValidationPattern;
    exports.ViewContextServices = ViewContextServices;
    exports.WidgetsDashboardComponent = WidgetsDashboardComponent;
    exports.WizardBodyComponent = WizardBodyComponent;
    exports.WizardComponent = WizardComponent;
    exports.WizardFooterComponent = WizardFooterComponent;
    exports.WizardHeaderComponent = WizardHeaderComponent;
    exports.WizardModule = WizardModule;
    exports.WizardService = WizardService;
    exports.ZipService = ZipService;
    exports._ = _;
    exports.deviceAvailabilityIconMap = deviceAvailabilityIconMap;
    exports.fromFactories = fromFactories;
    exports.fromTrigger = fromTrigger;
    exports.fromTriggerOnce = fromTriggerOnce;
    exports.getActivatedRoute = getActivatedRoute;
    exports.getAngularLocalesLanguageString = getAngularLocalesLanguageString;
    exports.gettext = gettext;
    exports.initializeServices = initializeServices;
    exports.isPromise = isPromise;
    exports.languagesFactory = languagesFactory;
    exports.loadLocale = loadLocale;
    exports.localeId = localeId;
    exports.localePathFactory = localePathFactory;
    exports.memoize = memoize;
    exports.minColumnGridTrackSize = minColumnGridTrackSize;
    exports.operationStatusClasses = operationStatusClasses;
    exports.operationStatusIcons = operationStatusIcons;
    exports.parse = parse;
    exports.ratiosByColumnTypes = ratiosByColumnTypes;
    exports.resolveInjectedFactories = resolveInjectedFactories;
    exports.retryWithDelay = retryWithDelay;
    exports.routes = routes;
    exports.sortByPriority = sortByPriority;
    exports.stateToFactory = stateToFactory;
    exports.statusAlert = statusAlert;
    exports.statusClasses = statusClasses;
    exports.statusIcons = statusIcons;
    exports.throttle = throttle;
    exports.toObservable = toObservable;
    exports.toObservableOfArrays = toObservableOfArrays;
    exports.tooltips = tooltips;
    exports.translateLoaderFactory = translateLoaderFactory;
    exports.trimTranslationKey = trimTranslationKey;
    exports["ɵa"] = IfAllowedDirective;
    exports["ɵb"] = NumberPipe;
    exports["ɵba"] = FieldInput;
    exports["ɵbb"] = FieldRadio;
    exports["ɵbc"] = ObjectTypeComponent;
    exports["ɵbd"] = AuditLogModule;
    exports["ɵbe"] = AuditLogComponent;
    exports["ɵbf"] = IsControlVisiblePipe;
    exports["ɵbg"] = ListDisplaySwitchModule;
    exports["ɵbh"] = ListDisplaySwitchComponent;
    exports["ɵbi"] = WizardOutletComponent;
    exports["ɵbj"] = HOOK_ROUTE;
    exports["ɵbk"] = HOOK_NAVIGATOR_NODES;
    exports["ɵbl"] = HOOK_TABS;
    exports["ɵbm"] = ProviderConfigurationTabFactory;
    exports["ɵc"] = DropdownDirectionDirective;
    exports["ɵd"] = TextareaAutoresizeDirective;
    exports["ɵe"] = OperationResultComponent;
    exports["ɵf"] = VirtualScrollerWrapperComponent;
    exports["ɵg"] = _virtualScrollWindowStrategyFactory;
    exports["ɵh"] = VirtualScrollWindowDirective;
    exports["ɵi"] = HumanizeAppNamePipe;
    exports["ɵj"] = CookieBannerService;
    exports["ɵk"] = CookieBannerPreferencesModalComponent;
    exports["ɵl"] = ProvidePhoneNumberComponent;
    exports["ɵm"] = PasswordService;
    exports["ɵn"] = TenantIdSetupComponent;
    exports["ɵo"] = I18nModule;
    exports["ɵp"] = TranslateExtension;
    exports["ɵq"] = registerTranslateExtension;
    exports["ɵr"] = ValidationModule;
    exports["ɵs"] = c8yValidationConfigFactory;
    exports["ɵt"] = FIELD_TYPES;
    exports["ɵu"] = fieldTypeFactory;
    exports["ɵv"] = DynamicFormsUIThemeModule;
    exports["ɵw"] = FieldCheckbox;
    exports["ɵx"] = ArrayTypeComponent;
    exports["ɵy"] = WrapperFormField;
    exports["ɵz"] = FieldFile;

    Object.defineProperty(exports, '__esModule', { value: true });
exports.IfAllowedDirective = IfAllowedDirective;
exports.NumberPipe = NumberPipe;
exports.DropdownDirectionDirective = DropdownDirectionDirective;
exports.TextareaAutoresizeDirective = TextareaAutoresizeDirective;
exports.OperationResultComponent = OperationResultComponent;
exports.VirtualScrollerWrapperComponent = VirtualScrollerWrapperComponent;
exports.VirtualScrollWindowDirective = VirtualScrollWindowDirective;
exports.ProvidePhoneNumberComponent = ProvidePhoneNumberComponent;
exports.AuditLogComponent = AuditLogComponent;
exports.IsControlVisiblePipe = IsControlVisiblePipe;
exports.ListDisplaySwitchComponent = ListDisplaySwitchComponent;
exports.WizardOutletComponent = WizardOutletComponent;
exports.AuditLogModule = AuditLogModule;
exports.ListDisplaySwitchModule = ListDisplaySwitchModule;

}));

//# sourceMappingURL=c8y-ngx-components.umd.js.map