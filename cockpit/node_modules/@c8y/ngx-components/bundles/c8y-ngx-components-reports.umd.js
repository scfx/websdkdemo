(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(require('@angular/core'),require('@c8y/ngx-components'),require('@c8y/client'),require('@ngx-translate/core'),require('ngx-bootstrap/modal'),require('@angular/common'),require('@angular/forms'),require('ngx-bootstrap/dropdown'),require('ngx-bootstrap/tooltip'),exports, require('@angular/core'), require('@c8y/ngx-components'), require('lodash-es'), require('@c8y/client'), require('@ngx-translate/core'), require('@angular/common'), require('ngx-bootstrap/modal'), require('ngx-bootstrap/dropdown'), require('ngx-bootstrap/tooltip'), require('@angular/upgrade/static'), require('angular'), require('@c8y/ng1-modules')) :
    typeof define === 'function' && define.amd ? define('@c8y/ngx-components/reports', ['@angular/core','@c8y/ngx-components','@c8y/client','@ngx-translate/core','ngx-bootstrap/modal','@angular/common','@angular/forms','ngx-bootstrap/dropdown','ngx-bootstrap/tooltip','exports', '@angular/core', '@c8y/ngx-components', 'lodash-es', '@c8y/client', '@ngx-translate/core', '@angular/common', 'ngx-bootstrap/modal', 'ngx-bootstrap/dropdown', 'ngx-bootstrap/tooltip', '@angular/upgrade/static', 'angular', '@c8y/ng1-modules'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.ng.core,global.c8y.ngxComponents,global.c8y.client,global.ngxTranslate.core,global.ngxBootstrap.modal,global.ng.common,global.ng.forms,global.ngxBootstrap.dropdown,global.ngxBootstrap.tooltip,(global.c8y = global.c8y || {}, global.c8y["ngx-components"] = global.c8y["ngx-components"] || {}, global.c8y["ngx-components"].reports = {}), global.ng.core, global.c8y["ngx-components"], global.lodashEs, global.client, global.core$1, global.ng.common, global.modal, global.dropdown, global.tooltip, global.ng.upgrade["static"], global.angular, global.ng1Modules$1));
})(this, (function (ɵngcc0,ɵngcc1,ɵngcc2,ɵngcc3,ɵngcc4,ɵngcc5,ɵngcc6,ɵngcc7,ɵngcc8,exports, core, ngxComponents, lodashEs, client, core$1, common, modal, dropdown, tooltip, _static, angular, ng1Modules$1) { 
function ScheduleModalComponent_span_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 15);
    ɵngcc0.ɵɵtext(1, "New export schedule");
    ɵngcc0.ɵɵelementEnd();
} }
function ScheduleModalComponent_span_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 15);
    ɵngcc0.ɵɵtext(1, "Edit export schedule");
    ɵngcc0.ɵɵelementEnd();
} }
function ScheduleModalComponent_span_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 15);
    ɵngcc0.ɵɵtext(1, "Duplicate export schedule");
    ɵngcc0.ɵɵelementEnd();
} }
function ScheduleModalComponent_span_82_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 36);
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(1, 2, "Create"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(3, 4, "Create"), " ");
} }
function ScheduleModalComponent_span_83_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 36);
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(1, 2, "Save"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(3, 4, "Save"), " ");
} }
function ScheduleModalComponent_span_84_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 36);
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(1, 2, "Duplicate"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(3, 4, "Duplicate"), " ");
} }
function ExportSchedulesComponent_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 5);
    ɵngcc0.ɵɵelement(1, "c8y-loading");
    ɵngcc0.ɵɵelementStart(2, "span", 6);
    ɵngcc0.ɵɵtext(3, "Retrieving schedules\u2026");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} }
function ExportSchedulesComponent_div_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelementStart(1, "div", 7);
    ɵngcc0.ɵɵtext(2, " Could not load schedules list. ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} }
function ExportSchedulesComponent_div_3_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 10);
    ɵngcc0.ɵɵelement(1, "h1", 11);
    ɵngcc0.ɵɵelementStart(2, "h3", 6);
    ɵngcc0.ɵɵtext(3, "No export schedules defined.");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} }
var _c0 = function (a0) { return { minutes: a0 }; };
function ExportSchedulesComponent_div_3_div_2_div_16_span_12_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 34);
    ɵngcc0.ɵɵdisableBindings();
    ɵngcc0.ɵɵpipe(1, "number");
    ɵngcc0.ɵɵtext(2, " Hourly: {{ minutes }} minute(s) past the hour. ");
    ɵngcc0.ɵɵenableBindings();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var schedule_r7 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("translateParams", ɵngcc0.ɵɵpureFunction1(4, _c0, ɵngcc0.ɵɵpipeBind2(1, 1, schedule_r7.cronConfig.minute, "2.0-0")));
} }
var _c1 = function (a0, a1) { return { hour: a0, minutes: a1 }; };
function ExportSchedulesComponent_div_3_div_2_div_16_span_13_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 34);
    ɵngcc0.ɵɵdisableBindings();
    ɵngcc0.ɵɵpipe(1, "number");
    ɵngcc0.ɵɵpipe(2, "number");
    ɵngcc0.ɵɵtext(3, " Daily: at {{ hour }}:{{ minutes }}. ");
    ɵngcc0.ɵɵenableBindings();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var schedule_r7 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("translateParams", ɵngcc0.ɵɵpureFunction2(7, _c1, ɵngcc0.ɵɵpipeBind2(1, 1, schedule_r7.cronConfig.hour, "2.0-0"), ɵngcc0.ɵɵpipeBind2(2, 4, schedule_r7.cronConfig.minute, "2.0-0")));
} }
var _c2 = function (a0, a1, a2) { return { weekDay: a0, hour: a1, minutes: a2 }; };
function ExportSchedulesComponent_div_3_div_2_div_16_span_14_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 34);
    ɵngcc0.ɵɵdisableBindings();
    ɵngcc0.ɵɵpipe(1, "number");
    ɵngcc0.ɵɵpipe(2, "number");
    ɵngcc0.ɵɵtext(3, " Weekly: {{ weekDay }}, at {{ hour }}:{{ minutes }}. ");
    ɵngcc0.ɵɵenableBindings();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var schedule_r7 = ɵngcc0.ɵɵnextContext().$implicit;
    var ctx_r11 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("translateParams", ɵngcc0.ɵɵpureFunction3(7, _c2, ctx_r11.cronService.getWeekDayName(schedule_r7.cronConfig), ɵngcc0.ɵɵpipeBind2(1, 1, schedule_r7.cronConfig.hour, "2.0-0"), ɵngcc0.ɵɵpipeBind2(2, 4, schedule_r7.cronConfig.minute, "2.0-0")));
} }
var _c3 = function (a0, a1, a2) { return { monthDay: a0, hour: a1, minutes: a2 }; };
function ExportSchedulesComponent_div_3_div_2_div_16_span_15_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 34);
    ɵngcc0.ɵɵdisableBindings();
    ɵngcc0.ɵɵpipe(1, "number");
    ɵngcc0.ɵɵpipe(2, "number");
    ɵngcc0.ɵɵtext(3, " Monthly: {{ monthDay }} day of the month, at {{ hour }}:{{ minutes }}. ");
    ɵngcc0.ɵɵenableBindings();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var schedule_r7 = ɵngcc0.ɵɵnextContext().$implicit;
    var ctx_r12 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("translateParams", ɵngcc0.ɵɵpureFunction3(7, _c3, ctx_r12.cronService.getMonthDayName(schedule_r7.cronConfig), ɵngcc0.ɵɵpipeBind2(1, 1, schedule_r7.cronConfig.hour, "2.0-0"), ɵngcc0.ɵɵpipeBind2(2, 4, schedule_r7.cronConfig.minute, "2.0-0")));
} }
var _c4 = function (a0, a1, a2, a3) { return { month: a0, monthDay: a1, hour: a2, minutes: a3 }; };
function ExportSchedulesComponent_div_3_div_2_div_16_span_16_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 34);
    ɵngcc0.ɵɵdisableBindings();
    ɵngcc0.ɵɵpipe(1, "number");
    ɵngcc0.ɵɵpipe(2, "number");
    ɵngcc0.ɵɵtext(3, " Yearly: {{ month }}, {{ monthDay }} day of the month, at {{ hour }}:{{ minutes }}. ");
    ɵngcc0.ɵɵenableBindings();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var schedule_r7 = ɵngcc0.ɵɵnextContext().$implicit;
    var ctx_r13 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("translateParams", ɵngcc0.ɵɵpureFunction4(7, _c4, ctx_r13.cronService.getMonthName(schedule_r7.cronConfig), ctx_r13.cronService.getMonthDayName(schedule_r7.cronConfig), ɵngcc0.ɵɵpipeBind2(1, 1, schedule_r7.cronConfig.hour, "2.0-0"), ɵngcc0.ɵɵpipeBind2(2, 4, schedule_r7.cronConfig.minute, "2.0-0")));
} }
function ExportSchedulesComponent_div_3_div_2_div_16_ul_22_Template(rf, ctx) { if (rf & 1) {
    var _r22 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "ul", 35);
    ɵngcc0.ɵɵelementStart(1, "li", 36);
    ɵngcc0.ɵɵelementStart(2, "button", 37);
    ɵngcc0.ɵɵlistener("click", function ExportSchedulesComponent_div_3_div_2_div_16_ul_22_Template_button_click_2_listener($event) { ɵngcc0.ɵɵrestoreView(_r22); var ctx_r21 = ɵngcc0.ɵɵnextContext(); var schedule_r7 = ctx_r21.$implicit; var i_r8 = ctx_r21.index; var ctx_r20 = ɵngcc0.ɵɵnextContext(3); return ctx_r20.editSchedule(schedule_r7, i_r8, $event); });
    ɵngcc0.ɵɵelement(3, "i", 4);
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵpipe(5, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(6, "li", 36);
    ɵngcc0.ɵɵelementStart(7, "button", 37);
    ɵngcc0.ɵɵlistener("click", function ExportSchedulesComponent_div_3_div_2_div_16_ul_22_Template_button_click_7_listener($event) { ɵngcc0.ɵɵrestoreView(_r22); var schedule_r7 = ɵngcc0.ɵɵnextContext().$implicit; var ctx_r23 = ɵngcc0.ɵɵnextContext(3); return ctx_r23.duplicateSchedule(schedule_r7, $event); });
    ɵngcc0.ɵɵelement(8, "i", 4);
    ɵngcc0.ɵɵtext(9);
    ɵngcc0.ɵɵpipe(10, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(11, "li", 36);
    ɵngcc0.ɵɵelementStart(12, "button", 37);
    ɵngcc0.ɵɵlistener("click", function ExportSchedulesComponent_div_3_div_2_div_16_ul_22_Template_button_click_12_listener($event) { ɵngcc0.ɵɵrestoreView(_r22); var ctx_r26 = ɵngcc0.ɵɵnextContext(); var schedule_r7 = ctx_r26.$implicit; var i_r8 = ctx_r26.index; var ctx_r25 = ɵngcc0.ɵɵnextContext(3); return ctx_r25.removeSchedule(schedule_r7, i_r8, $event); });
    ɵngcc0.ɵɵelement(13, "i", 4);
    ɵngcc0.ɵɵtext(14);
    ɵngcc0.ɵɵpipe(15, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r14 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("title", ctx_r14.hasRequiredRole ? ctx_r14.buttonLabels.edit : ctx_r14.buttonLabels.editNoPermission)("disabled", !ctx_r14.hasRequiredRole);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("c8yIcon", "pencil");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(5, 12, "Edit"), " ");
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("title", ctx_r14.hasRequiredRole ? ctx_r14.buttonLabels.duplicate : ctx_r14.buttonLabels.duplicateNoPermission)("disabled", !ctx_r14.hasRequiredRole);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("c8yIcon", "copy");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(10, 14, "Duplicate"), " ");
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("title", ctx_r14.hasRequiredRole ? ctx_r14.buttonLabels.delete : ctx_r14.buttonLabels.deleteNoPermission)("disabled", !ctx_r14.hasRequiredRole);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("c8yIcon", "trash");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(15, 16, "Delete"), " ");
} }
function ExportSchedulesComponent_div_3_div_2_div_16_Template(rf, ctx) { if (rf & 1) {
    var _r28 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 22);
    ɵngcc0.ɵɵlistener("click", function ExportSchedulesComponent_div_3_div_2_div_16_Template_div_click_0_listener($event) { var restoredCtx = ɵngcc0.ɵɵrestoreView(_r28); var schedule_r7 = restoredCtx.$implicit; var i_r8 = restoredCtx.index; var ctx_r27 = ɵngcc0.ɵɵnextContext(3); return ctx_r27.editSchedule(schedule_r7, i_r8, $event); });
    ɵngcc0.ɵɵelementStart(1, "div", 14);
    ɵngcc0.ɵɵelementStart(2, "div", 15);
    ɵngcc0.ɵɵelement(3, "i", 11);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(4, "div", 23);
    ɵngcc0.ɵɵelementStart(5, "div", 24);
    ɵngcc0.ɵɵelementStart(6, "div", 25);
    ɵngcc0.ɵɵtext(7);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(8, "div", 24);
    ɵngcc0.ɵɵelementStart(9, "div", 26);
    ɵngcc0.ɵɵelement(10, "i", 27);
    ɵngcc0.ɵɵelementStart(11, "span", 28);
    ɵngcc0.ɵɵtemplate(12, ExportSchedulesComponent_div_3_div_2_div_16_span_12_Template, 3, 6, "span", 29);
    ɵngcc0.ɵɵtemplate(13, ExportSchedulesComponent_div_3_div_2_div_16_span_13_Template, 4, 10, "span", 29);
    ɵngcc0.ɵɵtemplate(14, ExportSchedulesComponent_div_3_div_2_div_16_span_14_Template, 4, 11, "span", 29);
    ɵngcc0.ɵɵtemplate(15, ExportSchedulesComponent_div_3_div_2_div_16_span_15_Template, 4, 11, "span", 29);
    ɵngcc0.ɵɵtemplate(16, ExportSchedulesComponent_div_3_div_2_div_16_span_16_Template, 4, 12, "span", 29);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(17, "div", 30);
    ɵngcc0.ɵɵlistener("click", function ExportSchedulesComponent_div_3_div_2_div_16_Template_div_click_17_listener($event) { return $event.stopPropagation(); });
    ɵngcc0.ɵɵelementStart(18, "div", 31);
    ɵngcc0.ɵɵelementStart(19, "button", 32);
    ɵngcc0.ɵɵpipe(20, "translate");
    ɵngcc0.ɵɵelement(21, "i", 4);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(22, ExportSchedulesComponent_div_3_div_2_div_16_ul_22_Template, 16, 18, "ul", 33);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var schedule_r7 = ctx.$implicit;
    var ctx_r6 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(6);
    ɵngcc0.ɵɵpropertyInterpolate("title", schedule_r7.emailConfig.subject);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", schedule_r7.emailConfig.subject, " ");
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r6.cronService.getBase(schedule_r7.cronConfig) === 2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r6.cronService.getBase(schedule_r7.cronConfig) === 3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r6.cronService.getBase(schedule_r7.cronConfig) === 4);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r6.cronService.getBase(schedule_r7.cronConfig) === 5);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r6.cronService.getBase(schedule_r7.cronConfig) === 6);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(20, 9, "Actions"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("c8yIcon", "ellipsis-v");
} }
function ExportSchedulesComponent_div_3_div_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 12);
    ɵngcc0.ɵɵelementStart(1, "div", 13);
    ɵngcc0.ɵɵelementStart(2, "div", 14);
    ɵngcc0.ɵɵelementStart(3, "div", 15);
    ɵngcc0.ɵɵelement(4, "i", 16);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(5, "div", 17);
    ɵngcc0.ɵɵelementStart(6, "div", 5);
    ɵngcc0.ɵɵelementStart(7, "div", 18);
    ɵngcc0.ɵɵelementStart(8, "label", 19);
    ɵngcc0.ɵɵtext(9);
    ɵngcc0.ɵɵpipe(10, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(11, "div", 20);
    ɵngcc0.ɵɵelementStart(12, "label", 19);
    ɵngcc0.ɵɵtext(13);
    ɵngcc0.ɵɵpipe(14, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(15, "span");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(16, ExportSchedulesComponent_div_3_div_2_div_16_Template, 23, 11, "div", 21);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r5 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(9);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(10, 3, "Description"), " ");
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(14, 5, "Frequency"), " ");
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r5.scheduleList);
} }
function ExportSchedulesComponent_div_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵtemplate(1, ExportSchedulesComponent_div_3_div_1_Template, 4, 0, "div", 8);
    ɵngcc0.ɵɵtemplate(2, ExportSchedulesComponent_div_3_div_2_Template, 17, 7, "div", 9);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r2.scheduleList.length);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r2.scheduleList.length);
} }
function ExportSchedulesComponent_div_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 38);
    ɵngcc0.ɵɵtext(1, " You don't have the permission required to schedule exports. ");
    ɵngcc0.ɵɵelementEnd();
} }
function CronComponent_option_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "option", 13);
    ɵngcc0.ɵɵtext(1, " Select\u2026 ");
    ɵngcc0.ɵɵelementEnd();
} }
function CronComponent_option_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "option", 14);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var baseInterval_r6 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("ngValue", baseInterval_r6.value);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 2, baseInterval_r6.label), " ");
} }
function CronComponent_div_11_option_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "option", 14);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var dayOfWeek_r8 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("ngValue", dayOfWeek_r8.value);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 2, dayOfWeek_r8.label), " ");
} }
function CronComponent_div_11_Template(rf, ctx) { if (rf & 1) {
    var _r10 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 15);
    ɵngcc0.ɵɵelementStart(1, "label", 16);
    ɵngcc0.ɵɵtext(2, " Day ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "div", 4);
    ɵngcc0.ɵɵelementStart(4, "select", 17);
    ɵngcc0.ɵɵlistener("ngModelChange", function CronComponent_div_11_Template_select_ngModelChange_4_listener($event) { ɵngcc0.ɵɵrestoreView(_r10); var ctx_r9 = ɵngcc0.ɵɵnextContext(); return ctx_r9.cronConfig.weekday = $event; })("change", function CronComponent_div_11_Template_select_change_4_listener() { ɵngcc0.ɵɵrestoreView(_r10); var ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11.onChangeSelect(); });
    ɵngcc0.ɵɵtemplate(5, CronComponent_div_11_option_5_Template, 3, 4, "option", 7);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(6, "span");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵproperty("ngModel", ctx_r2.cronConfig.weekday);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r2.daysOfWeekPosix);
} }
function CronComponent_div_12_option_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "option", 14);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var month_r13 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("ngValue", month_r13.value);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 2, month_r13.label), " ");
} }
function CronComponent_div_12_Template(rf, ctx) { if (rf & 1) {
    var _r15 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 18);
    ɵngcc0.ɵɵelementStart(1, "label", 19);
    ɵngcc0.ɵɵtext(2, " Month ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "div");
    ɵngcc0.ɵɵelementStart(4, "div", 4);
    ɵngcc0.ɵɵelementStart(5, "select", 20);
    ɵngcc0.ɵɵlistener("ngModelChange", function CronComponent_div_12_Template_select_ngModelChange_5_listener($event) { ɵngcc0.ɵɵrestoreView(_r15); var ctx_r14 = ɵngcc0.ɵɵnextContext(); return ctx_r14.cronConfig.month = $event; })("change", function CronComponent_div_12_Template_select_change_5_listener() { ɵngcc0.ɵɵrestoreView(_r15); var ctx_r16 = ɵngcc0.ɵɵnextContext(); return ctx_r16.onChangeSelect(); });
    ɵngcc0.ɵɵtemplate(6, CronComponent_div_12_option_6_Template, 3, 4, "option", 7);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(7, "span");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵproperty("ngModel", ctx_r3.cronConfig.month);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r3.months);
} }
function CronComponent_div_13_option_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "option", 14);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var dayOfMonth_r18 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("ngValue", dayOfMonth_r18.value);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 2, dayOfMonth_r18.label), " ");
} }
function CronComponent_div_13_Template(rf, ctx) { if (rf & 1) {
    var _r20 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 21);
    ɵngcc0.ɵɵelementStart(1, "label", 22);
    ɵngcc0.ɵɵtext(2, " Day ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "div");
    ɵngcc0.ɵɵelementStart(4, "div", 4);
    ɵngcc0.ɵɵelementStart(5, "select", 23);
    ɵngcc0.ɵɵlistener("ngModelChange", function CronComponent_div_13_Template_select_ngModelChange_5_listener($event) { ɵngcc0.ɵɵrestoreView(_r20); var ctx_r19 = ɵngcc0.ɵɵnextContext(); return ctx_r19.cronConfig.day = $event; })("change", function CronComponent_div_13_Template_select_change_5_listener() { ɵngcc0.ɵɵrestoreView(_r20); var ctx_r21 = ɵngcc0.ɵɵnextContext(); return ctx_r21.onChangeSelect(); });
    ɵngcc0.ɵɵtemplate(6, CronComponent_div_13_option_6_Template, 3, 4, "option", 7);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(7, "span");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r4 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵproperty("ngModel", ctx_r4.cronConfig.day);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r4.daysOfMonth);
} }
function CronComponent_div_14_span_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 31);
    ɵngcc0.ɵɵtext(1, "Time");
    ɵngcc0.ɵɵelementEnd();
} }
function CronComponent_div_14_span_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 31);
    ɵngcc0.ɵɵtext(1, "Minutes");
    ɵngcc0.ɵɵelementEnd();
} }
function CronComponent_div_14_div_6_option_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "option", 14);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "number");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var hour_r28 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("ngValue", hour_r28.value);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(2, 2, hour_r28.value, "2.0-0"), " ");
} }
function CronComponent_div_14_div_6_Template(rf, ctx) { if (rf & 1) {
    var _r30 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 4);
    ɵngcc0.ɵɵelementStart(1, "select", 32);
    ɵngcc0.ɵɵlistener("ngModelChange", function CronComponent_div_14_div_6_Template_select_ngModelChange_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r30); var ctx_r29 = ɵngcc0.ɵɵnextContext(2); return ctx_r29.cronConfig.hour = $event; })("change", function CronComponent_div_14_div_6_Template_select_change_1_listener() { ɵngcc0.ɵɵrestoreView(_r30); var ctx_r31 = ɵngcc0.ɵɵnextContext(2); return ctx_r31.onChangeSelect(); });
    ɵngcc0.ɵɵtemplate(2, CronComponent_div_14_div_6_option_2_Template, 3, 5, "option", 7);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(3, "span");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r24 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngModel", ctx_r24.cronConfig.hour);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r24.hours);
} }
function CronComponent_div_14_span_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1, " : ");
    ɵngcc0.ɵɵelementEnd();
} }
function CronComponent_div_14_option_10_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "option", 14);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "number");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var minute_r32 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("ngValue", minute_r32.value);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(2, 2, minute_r32.value, "2.0-0"), " ");
} }
function CronComponent_div_14_Template(rf, ctx) { if (rf & 1) {
    var _r34 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 24);
    ɵngcc0.ɵɵelementStart(1, "label", 25);
    ɵngcc0.ɵɵtemplate(2, CronComponent_div_14_span_2_Template, 2, 0, "span", 26);
    ɵngcc0.ɵɵtemplate(3, CronComponent_div_14_span_3_Template, 2, 0, "span", 26);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(4, "div");
    ɵngcc0.ɵɵelementStart(5, "div", 27);
    ɵngcc0.ɵɵtemplate(6, CronComponent_div_14_div_6_Template, 4, 2, "div", 28);
    ɵngcc0.ɵɵtemplate(7, CronComponent_div_14_span_7_Template, 2, 0, "span", 29);
    ɵngcc0.ɵɵelementStart(8, "div", 4);
    ɵngcc0.ɵɵelementStart(9, "select", 30);
    ɵngcc0.ɵɵlistener("ngModelChange", function CronComponent_div_14_Template_select_ngModelChange_9_listener($event) { ɵngcc0.ɵɵrestoreView(_r34); var ctx_r33 = ɵngcc0.ɵɵnextContext(); return ctx_r33.cronConfig.minute = $event; })("change", function CronComponent_div_14_Template_select_change_9_listener() { ɵngcc0.ɵɵrestoreView(_r34); var ctx_r35 = ɵngcc0.ɵɵnextContext(); return ctx_r35.onChangeSelect(); });
    ɵngcc0.ɵɵtemplate(10, CronComponent_div_14_option_10_Template, 3, 5, "option", 7);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(11, "span");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r5 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r5.base >= 3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r5.base < 3);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r5.base >= 3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r5.base >= 3);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngModel", ctx_r5.cronConfig.minute);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r5.minutes);
} }
'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var angular__namespace = /*#__PURE__*/_interopNamespace(angular);

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    /** @deprecated */
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    /** @deprecated */
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    function __spreadArray(to, from, pack) {
        if (pack || arguments.length === 2)
            for (var i = 0, l = from.length, ar; i < l; i++) {
                if (ar || !(i in from)) {
                    if (!ar)
                        ar = Array.prototype.slice.call(from, 0, i);
                    ar[i] = from[i];
                }
            }
        return to.concat(ar || Array.prototype.slice.call(from));
    }
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, state, kind, f) {
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    }
    function __classPrivateFieldSet(receiver, state, value, kind, f) {
        if (kind === "m")
            throw new TypeError("Private method is not writable");
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    }

    var ReportsService = /** @class */ (function () {
        function ReportsService(alertService, inventoryService, client, translateService) {
            this.alertService = alertService;
            this.inventoryService = inventoryService;
            this.client = client;
            this.translateService = translateService;
            this.microserviceUrl = '/service/reporting';
            this.headers = { 'Content-Type': 'application/json' };
            this.isReportAgentSubscribed = true;
            this.REPORT_AGENT_NOT_SUBSCRIBED_EXPECTED_ERROR_LOWER_CASE = 'microservice/not found';
        }
        ReportsService.prototype.getExport = function (exportId) {
            return __awaiter(this, void 0, void 0, function () {
                var exp, exportDetail, data, res;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.inventoryService.detail(exportId)];
                        case 1:
                            exportDetail = _a.sent();
                            data = exportDetail.data, res = exportDetail.res;
                            if (res.status !== 200) {
                                this.alertService.addServerFailure({ data: data, res: res });
                            }
                            else {
                                exp = data ? data : {};
                            }
                            return [2 /*return*/, exp];
                    }
                });
            });
        };
        ReportsService.prototype.getScheduleList = function (exportId) {
            return __awaiter(this, void 0, void 0, function () {
                var exp;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.getExport(exportId)];
                        case 1:
                            exp = _a.sent();
                            return [2 /*return*/, this.extractScheduleListFromExport(exp)];
                    }
                });
            });
        };
        ReportsService.prototype.extractScheduleListFromExport = function (exp) {
            var scheduleList;
            if (exp) {
                scheduleList = exp.c8y_ScheduleConfiguration ? exp.c8y_ScheduleConfiguration : [];
            }
            return lodashEs.orderBy(scheduleList, ['timestamp'], ['desc']);
        };
        ReportsService.prototype.addSchedule = function (schedule, exportId) {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.updateSchedules(exportId, [], [schedule])];
                        case 1: return [2 /*return*/, _a.sent()];
                    }
                });
            });
        };
        ReportsService.prototype.updateSchedule = function (oldSchedule, schedule, exportId) {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.updateSchedules(exportId, [oldSchedule], [schedule])];
                        case 1: return [2 /*return*/, _a.sent()];
                    }
                });
            });
        };
        ReportsService.prototype.updateSchedules = function (exportId, schedulesToRemove, schedulesToAdd) {
            if (schedulesToRemove === void 0) { schedulesToRemove = []; }
            if (schedulesToAdd === void 0) { schedulesToAdd = []; }
            return __awaiter(this, void 0, void 0, function () {
                var success, exp, schedules, _a, data, res;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            success = false;
                            return [4 /*yield*/, this.getExport(exportId)];
                        case 1:
                            exp = _b.sent();
                            schedules = this.extractScheduleListFromExport(exp);
                            lodashEs.remove(schedules, function (schedule) { return lodashEs.some(schedulesToRemove, function (scheduleToRemove) { return lodashEs.isEqual(schedule, scheduleToRemove); }); });
                            schedules.push.apply(schedules, schedulesToAdd);
                            exp.c8y_ScheduleConfiguration = schedules;
                            return [4 /*yield*/, this.inventoryService.update(exp)];
                        case 2:
                            _a = _b.sent(), data = _a.data, res = _a.res;
                            if (!(res.status === 200)) return [3 /*break*/, 4];
                            return [4 /*yield*/, this.reschedule(exportId)];
                        case 3:
                            success = _b.sent();
                            return [3 /*break*/, 5];
                        case 4:
                            this.alertService.addServerFailure({ data: data, res: res });
                            _b.label = 5;
                        case 5: return [2 /*return*/, success];
                    }
                });
            });
        };
        ReportsService.prototype.reschedule = function (exportId) {
            return __awaiter(this, void 0, void 0, function () {
                var options, rescheduling;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            options = {
                                method: 'PUT',
                                headers: this.headers
                            };
                            return [4 /*yield*/, this.client.fetch(this.microserviceUrl + "/schedule/" + exportId, options)];
                        case 1:
                            rescheduling = _a.sent();
                            return [2 /*return*/, rescheduling.status === 200];
                    }
                });
            });
        };
        ReportsService.prototype.deleteSchedule = function (schedule, exportId) {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.updateSchedules(exportId, [schedule], [])];
                        case 1: return [2 /*return*/, _a.sent()];
                    }
                });
            });
        };
        /**
         * Removes report configuration.
         *
         * Note: fallback strategy is based on error code returned by backend
         * in case of missing subscription for report-agent microservice.
         * @param config entity of report configuration
         * @returns Response wrapped in [[IFetchResponse]]
         */
        ReportsService.prototype.removeConfiguration = function (config) {
            return __awaiter(this, void 0, void 0, function () {
                var res, data;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            if (!!this.isReportAgentSubscribed) return [3 /*break*/, 2];
                            return [4 /*yield*/, this.fallbackConfigurationRemoval(config)];
                        case 1:
                            res = _a.sent();
                            return [3 /*break*/, 6];
                        case 2: return [4 /*yield*/, this.normalConfigurationRemoval(config)];
                        case 3:
                            res = _a.sent();
                            if (!(res.status === 404)) return [3 /*break*/, 6];
                            return [4 /*yield*/, res.json()];
                        case 4:
                            data = _a.sent();
                            if (!(data && data.error && data.error.toLowerCase() === this.REPORT_AGENT_NOT_SUBSCRIBED_EXPECTED_ERROR_LOWER_CASE)) return [3 /*break*/, 6];
                            return [4 /*yield*/, this.fallbackConfigurationRemoval(config)];
                        case 5:
                            res = _a.sent();
                            this.isReportAgentSubscribed = false;
                            _a.label = 6;
                        case 6: return [2 /*return*/, res];
                    }
                });
            });
        };
        ReportsService.prototype.normalConfigurationRemoval = function (config) {
            return __awaiter(this, void 0, void 0, function () {
                var url;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            url = this.microserviceUrl + "/config/" + config.id;
                            return [4 /*yield*/, this.client.fetch(url, { method: 'DELETE' })];
                        case 1: return [2 /*return*/, _a.sent()];
                    }
                });
            });
        };
        ReportsService.prototype.fallbackConfigurationRemoval = function (config) {
            return __awaiter(this, void 0, void 0, function () {
                var res, e_1;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            _a.trys.push([0, 2, , 3]);
                            return [4 /*yield*/, this.inventoryService.delete(config)];
                        case 1:
                            res = (_a.sent()).res;
                            return [3 /*break*/, 3];
                        case 2:
                            e_1 = _a.sent();
                            // this could be an error related to not existing object or anything else which makes request return error status code
                            // in case of concurrent removal everything is fine, therefor warning message. But it might not recover from some errors
                            this.alertService.addServerFailure(e_1, 'warning');
                            return [3 /*break*/, 3];
                        case 3: return [2 /*return*/, res];
                    }
                });
            });
        };
ReportsService.ɵfac = function ReportsService_Factory(t) { return new (t || ReportsService)(ɵngcc0.ɵɵinject(ɵngcc1.AlertService), ɵngcc0.ɵɵinject(ɵngcc2.InventoryService), ɵngcc0.ɵɵinject(ɵngcc2.FetchClient), ɵngcc0.ɵɵinject(ɵngcc3.TranslateService)); };
ReportsService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: ReportsService, factory: function (t) { return ReportsService.ɵfac(t); } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ReportsService, [{
        type: core.Injectable
    }], function () { return [{ type: ɵngcc1.AlertService }, { type: ɵngcc2.InventoryService }, { type: ɵngcc2.FetchClient }, { type: ɵngcc3.TranslateService }]; }, null); })();
        return ReportsService;
    }());
    ReportsService.ctorParameters = function () { return [
        { type: ngxComponents.AlertService },
        { type: client.InventoryService },
        { type: client.FetchClient },
        { type: core$1.TranslateService }
    ]; };

    exports.ActionType = void 0;
    (function (ActionType) {
        ActionType["CREATE"] = "create";
        ActionType["EDIT"] = "edit";
        ActionType["DUPLICATE"] = "duplicate";
    })(exports.ActionType || (exports.ActionType = {}));
    exports.Base = void 0;
    (function (Base) {
        Base[Base["Initial"] = 1] = "Initial";
        Base[Base["Hour"] = 2] = "Hour";
        Base[Base["Day"] = 3] = "Day";
        Base[Base["Week"] = 4] = "Week";
        Base[Base["Month"] = 5] = "Month";
        Base[Base["Year"] = 6] = "Year";
    })(exports.Base || (exports.Base = {}));

    var CronService = /** @class */ (function () {
        function CronService(translateService) {
            this.translateService = translateService;
            this.daysOfWeekPosix = [];
            this.daysOfMonth = [
                { value: '1', label: '1.' },
                { value: '2', label: '2.' },
                { value: '3', label: '3.' },
                { value: '4', label: '4.' },
                { value: '5', label: '5.' },
                { value: '6', label: '6.' },
                { value: '7', label: '7.' },
                { value: '8', label: '8.' },
                { value: '9', label: '9.' },
                { value: '10', label: '10.' },
                { value: '11', label: '11.' },
                { value: '12', label: '12.' },
                { value: '13', label: '13.' },
                { value: '14', label: '14.' },
                { value: '15', label: '15.' },
                { value: '16', label: '16.' },
                { value: '17', label: '17.' },
                { value: '18', label: '18.' },
                { value: '19', label: '19.' },
                { value: '20', label: '20.' },
                { value: '21', label: '21.' },
                { value: '22', label: '22.' },
                { value: '23', label: '23.' },
                { value: '24', label: '24.' },
                { value: '25', label: '25.' },
                { value: '26', label: '26.' },
                { value: '27', label: '27.' },
                { value: '28', label: '28.' },
                { value: '29', label: '29.' },
                { value: '30', label: '30.' },
                { value: '31', label: '31.' }
            ];
            this.months = [];
            this.hours = [];
            this.minutes = [];
            this.intervals = [
                { value: 2, label: ngxComponents.gettext('Hour') },
                { value: 3, label: ngxComponents.gettext('Day') },
                { value: 4, label: ngxComponents.gettext('Week') },
                { value: 5, label: ngxComponents.gettext('Month') },
                { value: 6, label: ngxComponents.gettext('Year') }
            ];
            for (var x = 0; x < 24; x++) {
                this.hours.push({ value: x.toString(), label: "" + x });
            }
            for (var x = 0; x < 60; x = x + 5) {
                this.minutes.push({ value: x.toString(), label: "" + x });
            }
            for (var x = 0; x < 7; x++) {
                this.daysOfWeekPosix.push({
                    value: x.toString(),
                    label: this.getWeekDayName({ weekday: x })
                });
            }
            for (var x = 1; x < 13; x++) {
                this.months.push({
                    value: x.toString(),
                    label: this.getMonthName({ month: x })
                });
            }
        }
        CronService.prototype.generateCron = function (cronConfig) {
            var cron = '';
            cron = cronConfig.minute ? "" + cronConfig.minute : '*';
            cron += cronConfig.hour ? " " + cronConfig.hour : ' *';
            cron += cronConfig.day ? " " + cronConfig.day : ' *';
            cron += cronConfig.month ? " " + cronConfig.month : ' *';
            cron += cronConfig.weekday ? " " + cronConfig.weekday : ' *';
            return cron;
        };
        CronService.prototype.generateCronConfig = function (cron) {
            var parts = cron.split(/\s+/);
            var cronConfig = {
                minute: parts[0],
                hour: parts[1],
                day: parts[2],
                month: parts[3],
                weekday: parts[4]
            };
            return cronConfig;
        };
        CronService.prototype.getBase = function (cronConfig) {
            var base = exports.Base.Initial;
            if (cronConfig.minute !== '*' &&
                cronConfig.hour === '*' &&
                cronConfig.day === '*' &&
                cronConfig.month === '*' &&
                cronConfig.weekday === '*') {
                base = exports.Base.Hour;
            }
            else if (cronConfig.minute !== '*' &&
                cronConfig.hour !== '*' &&
                cronConfig.day === '*' &&
                cronConfig.month === '*' &&
                cronConfig.weekday === '*') {
                base = exports.Base.Day;
            }
            else if (cronConfig.minute !== '*' &&
                cronConfig.hour !== '*' &&
                cronConfig.day === '*' &&
                cronConfig.month === '*' &&
                cronConfig.weekday !== '*') {
                base = exports.Base.Week;
            }
            else if (cronConfig.minute !== '*' &&
                cronConfig.hour !== '*' &&
                cronConfig.day !== '*' &&
                cronConfig.month === '*' &&
                cronConfig.weekday === '*') {
                base = exports.Base.Month;
            }
            else if (cronConfig.minute !== '*' &&
                cronConfig.hour !== '*' &&
                cronConfig.day !== '*' &&
                cronConfig.month !== '*' &&
                cronConfig.weekday === '*') {
                base = exports.Base.Year;
            }
            else {
                // cronConfig invalid
            }
            return base;
        };
        CronService.prototype.validateModels = function (base, cronConfig) {
            var valid;
            switch (base) {
                case exports.Base.Initial: // Please select
                    valid = false;
                    break;
                case exports.Base.Hour:
                    if (cronConfig.minute !== '*') {
                        valid = true;
                    }
                    else {
                        valid = false;
                    }
                    break;
                case exports.Base.Day:
                    if (cronConfig.minute !== '*' && cronConfig.hour !== '*') {
                        valid = true;
                    }
                    else {
                        valid = false;
                    }
                    break;
                case exports.Base.Week:
                    if (cronConfig.minute !== '*' && cronConfig.hour !== '*' && cronConfig.weekday !== '*') {
                        valid = true;
                    }
                    else {
                        valid = false;
                    }
                    break;
                case exports.Base.Month:
                    if (cronConfig.minute !== '*' && cronConfig.hour !== '*' && cronConfig.day !== '*') {
                        valid = true;
                    }
                    else {
                        valid = false;
                    }
                    break;
                case exports.Base.Year:
                    if (cronConfig.minute !== '*' &&
                        cronConfig.hour !== '*' &&
                        cronConfig.day !== '*' &&
                        cronConfig.month !== '*') {
                        valid = true;
                    }
                    else {
                        valid = false;
                    }
                    break;
                default:
                    valid = false;
            }
            return valid;
        };
        CronService.prototype.clearNextModels = function (base, cronConfig) {
            if (base === exports.Base.Initial) {
                // please select, delete all
                // cron expression: every minute at second 0
                cronConfig.minute = '*';
                cronConfig.hour = '*';
                cronConfig.day = '*';
                cronConfig.month = '*';
                cronConfig.weekday = '*';
            }
            else if (base === exports.Base.Hour) {
                // hour, don't delete minutes
                // cron expression: every hour, at whatever minute, at second 0
                cronConfig.minute = cronConfig.minute === '*' ? this.minutes[0].value : cronConfig.minute;
                cronConfig.hour = '*';
                cronConfig.day = '*';
                cronConfig.month = '*';
                cronConfig.weekday = '*';
            }
            else if (base === exports.Base.Day) {
                // day, don't delete minutes and hours
                // cron expression: every day of every month, at whatever hour and minute, at second 0
                cronConfig.minute = cronConfig.minute === '*' ? this.minutes[0].value : cronConfig.minute;
                cronConfig.hour = cronConfig.hour === '*' ? this.hours[0].value : cronConfig.hour;
                cronConfig.day = '*';
                cronConfig.month = '*';
                cronConfig.weekday = '*';
            }
            else if (base === exports.Base.Week) {
                // week, delete month and day
                // cron expression: every month, at whatever weekday, hour and minute, at second 0
                cronConfig.minute = cronConfig.minute === '*' ? this.minutes[0].value : cronConfig.minute;
                cronConfig.hour = cronConfig.hour === '*' ? this.hours[0].value : cronConfig.hour;
                cronConfig.day = '*';
                cronConfig.month = '*';
                cronConfig.weekday = cronConfig.weekday === '*' || cronConfig.weekday === '?' ? this.daysOfWeekPosix[0].value : cronConfig.weekday;
            }
            else if (base === exports.Base.Month) {
                // month, delete month and weekday
                // cron expression: every month, at whatever day of month, hour and minute, at second 0
                cronConfig.minute = cronConfig.minute === '*' ? this.minutes[0].value : cronConfig.minute;
                cronConfig.hour = cronConfig.hour === '*' ? this.hours[0].value : cronConfig.hour;
                cronConfig.day = cronConfig.day === '*' ? this.daysOfMonth[0].value : cronConfig.day;
                cronConfig.month = '*';
                cronConfig.weekday = '*';
            }
            else if (base === exports.Base.Year) {
                // year, delete weekday
                // cron expression: every year, at whatever month, day of month, hour and minute, at second 0
                cronConfig.minute = cronConfig.minute === '*' ? this.minutes[0].value : cronConfig.minute;
                cronConfig.hour = cronConfig.hour === '*' ? this.hours[0].value : cronConfig.hour;
                cronConfig.day = cronConfig.day === '*' ? this.daysOfMonth[0].value : cronConfig.day;
                cronConfig.month = cronConfig.month === '*' ? this.months[0].value : cronConfig.month;
                cronConfig.weekday = '*';
            }
        };
        CronService.prototype.getWeekDayName = function (cronConfig) {
            var date = new Date(0);
            var firstSundayDate = date.getDate() + 3; // because we know date 0 was on Thursday...
            date.setDate(firstSundayDate + parseInt(cronConfig.weekday, 10));
            return common.formatDate(date, 'EEEE', this.translateService.currentLang);
        };
        CronService.prototype.getMonthDayName = function (cronConfig) {
            var name = '';
            this.daysOfMonth.forEach(function (item) {
                if (item.value === cronConfig.day) {
                    name = item.label;
                }
            });
            return name;
        };
        CronService.prototype.getMonthName = function (cronConfig) {
            var date = new Date(0);
            date.setMonth(parseInt(cronConfig.month, 10) - 1);
            return common.formatDate(date, 'LLLL', this.translateService.currentLang);
        };
CronService.ɵfac = function CronService_Factory(t) { return new (t || CronService)(ɵngcc0.ɵɵinject(ɵngcc3.TranslateService)); };
CronService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: CronService, factory: function (t) { return CronService.ɵfac(t); } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CronService, [{
        type: core.Injectable
    }], function () { return [{ type: ɵngcc3.TranslateService }]; }, null); })();
        return CronService;
    }());
    CronService.ctorParameters = function () { return [
        { type: core$1.TranslateService }
    ]; };

    var ScheduleModalComponent = /** @class */ (function () {
        function ScheduleModalComponent(reportsService, modalRef, cronService) {
            this.reportsService = reportsService;
            this.modalRef = modalRef;
            this.cronService = cronService;
            this.emitter = new core.EventEmitter();
            this.ActionType = exports.ActionType;
            this.cronExpression = '* * * * *';
            this.validCron = false;
            this.emitterPayload = {
                success: false,
                message: '',
                schedule: { timestamp: undefined, emailConfig: undefined, cronConfig: undefined }
            };
            this.placeholdersInfo = ngxComponents.gettext('Available placeholders: {tenant-domain}, {host}, {binaryId}. Whole link to downloadable file is: {tenant-domain}/inventory/binaries/{binaryId}.');
        }
        ScheduleModalComponent.prototype.ngOnInit = function () {
            this.oldSchedule = lodashEs.cloneDeep(this.schedule);
            this.populateEmailFieldsFromSchedule(this.schedule);
            this.cronExpression = this.cronService.generateCron(this.schedule.cronConfig);
            this.validCron = this.cronService.validateModels(this.cronService.getBase(this.schedule.cronConfig), this.schedule.cronConfig);
        };
        ScheduleModalComponent.prototype.populateEmailFieldsFromSchedule = function (schedule) {
            if (schedule.emailConfig.to && schedule.emailConfig.to.length) {
                this.emailTo = schedule.emailConfig.to.toString();
            }
            if (schedule.emailConfig.cc && schedule.emailConfig.cc.length) {
                this.emailCc = schedule.emailConfig.cc.toString();
            }
            if (schedule.emailConfig.bcc && schedule.emailConfig.bcc.length) {
                this.emailBcc = schedule.emailConfig.bcc.toString();
            }
            if (schedule.emailConfig.replyTo) {
                this.emailReplyTo = schedule.emailConfig.replyTo;
            }
            if (schedule.emailConfig.subject) {
                this.emailSubject = schedule.emailConfig.subject;
            }
            if (schedule.emailConfig.text) {
                this.emailText = schedule.emailConfig.text;
            }
        };
        ScheduleModalComponent.prototype.save = function () {
            this.populateScheduleFromCronExpression();
            this.populateScheduleFromEmailFields();
            if (this.actionType === exports.ActionType.CREATE || this.actionType === exports.ActionType.DUPLICATE) {
                var date = new Date();
                var timestamp = date.getTime();
                this.schedule.timestamp = timestamp;
            }
            this.emitterPayload.success = true;
            this.emitterPayload.schedule = this.schedule;
            this.modalRef.hide();
            // signal to the parent component to update list
            this.emitter.emit(this.emitterPayload);
        };
        ScheduleModalComponent.prototype.cancel = function () {
            this.modalRef.hide();
        };
        ScheduleModalComponent.prototype.getCron = function (cron) {
            this.validCron = cron.valid;
            if (cron.valid) {
                this.cronExpression = cron.cron;
            }
        };
        ScheduleModalComponent.prototype.populateScheduleFromCronExpression = function () {
            this.schedule.cronConfig = this.cronService.generateCronConfig(this.cronExpression);
        };
        ScheduleModalComponent.prototype.convertStringOfEmailsToArray = function (stringOfEmails) {
            var arr = [];
            if (stringOfEmails) {
                var parts = stringOfEmails.split(',');
                parts.forEach(function (item) {
                    if (item) {
                        arr.push(item);
                    }
                });
            }
            return arr;
        };
        ScheduleModalComponent.prototype.populateScheduleFromEmailFields = function () {
            this.schedule.emailConfig.to = this.emailTo
                ? this.convertStringOfEmailsToArray(this.emailTo)
                : null;
            this.schedule.emailConfig.cc = this.emailCc
                ? this.convertStringOfEmailsToArray(this.emailCc)
                : null;
            this.schedule.emailConfig.bcc = this.emailBcc
                ? this.convertStringOfEmailsToArray(this.emailBcc)
                : null;
            this.schedule.emailConfig.replyTo = this.emailReplyTo;
            this.schedule.emailConfig.subject = this.emailSubject;
            this.schedule.emailConfig.text = this.emailText;
        };
ScheduleModalComponent.ɵfac = function ScheduleModalComponent_Factory(t) { return new (t || ScheduleModalComponent)(ɵngcc0.ɵɵdirectiveInject(ReportsService), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.BsModalRef), ɵngcc0.ɵɵdirectiveInject(CronService)); };
ScheduleModalComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScheduleModalComponent, selectors: [["schedule-modal"]], outputs: { emitter: "emitter" }, decls: 85, vars: 41, consts: [[1, "modal-header", "text-center", "bg-primary"], [1, "text-white"], [2, "font-size", "62px"], ["c8yIcon", "c8y-report"], [1, "text-uppercase"], ["translate", "", 4, "ngIf"], [1, "modal-body"], ["translate", "", 1, "lead", "text-center", "p-t-24", "m-b-0"], [1, "modal-inner-scroll", "smart-rule-control"], [1, "edit-smart-rule-details"], ["scheduleForm", "ngForm"], [1, "list-group"], [1, "list-group-item", "bg-gray-white"], [1, "smart-list-icon-label"], [1, "dot", "bg-primary-light", "m-r-8"], ["translate", ""], [1, "p-t-16"], [1, "form-group"], ["name", "cron", 3, "cronIn", "emitter"], [1, "list-group-item"], [1, "d-inline-block"], [1, "help-block", "text-muted", "small", "p-absolute"], ["c8yIcon", "info-circle", 1, "text-info", "m-r-4", "text-14"], [1, "p-t-24"], ["translate", "", 1, "control-label"], ["emails", "", "type", "text", "name", "to", "required", "", 1, "form-control", 3, "ngModel", "placeholder", "ngModelChange"], ["emails", "", "type", "text", "name", "cc", 1, "form-control", "span", 3, "placeholder", "ngModel", "ngModelChange"], ["emails", "", "type", "text", "name", "bcc", 1, "form-control", "span", 3, "placeholder", "ngModel", "ngModelChange"], ["email", "", "type", "text", "name", "replyTo", 1, "form-control", "span", 3, "placeholder", "ngModel", "ngModelChange"], ["type", "text", "name", "subject", "required", "", 1, "form-control", "span", 3, "ngModel", "placeholder", "ngModelChange"], ["name", "text", "rows", "4", "required", "", 1, "form-control", 3, "ngModel", "placeholder", "ngModelChange"], [1, "help-block", "text-muted"], [1, "modal-footer"], [1, "btn", "btn-default", 3, "title", "click"], [1, "btn", "btn-primary", 3, "disabled", "click"], [3, "title", 4, "ngIf"], [3, "title"]], template: function ScheduleModalComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "header", 1);
        ɵngcc0.ɵɵelementStart(2, "div", 2);
        ɵngcc0.ɵɵelement(3, "span", 3);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(4, "h4", 4);
        ɵngcc0.ɵɵtemplate(5, ScheduleModalComponent_span_5_Template, 2, 0, "span", 5);
        ɵngcc0.ɵɵtemplate(6, ScheduleModalComponent_span_6_Template, 2, 0, "span", 5);
        ɵngcc0.ɵɵtemplate(7, ScheduleModalComponent_span_7_Template, 2, 0, "span", 5);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(8, "div", 6);
        ɵngcc0.ɵɵelementStart(9, "p", 7);
        ɵngcc0.ɵɵtext(10, "On schedule send export via email");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(11, "div", 8);
        ɵngcc0.ɵɵelementStart(12, "form", 9, 10);
        ɵngcc0.ɵɵelementStart(14, "div", 11);
        ɵngcc0.ɵɵelementStart(15, "div", 12);
        ɵngcc0.ɵɵelementStart(16, "div", 13);
        ɵngcc0.ɵɵelementStart(17, "span", 14);
        ɵngcc0.ɵɵtext(18, "1");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(19, "strong", 15);
        ɵngcc0.ɵɵtext(20, "Frequency");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(21, "div", 16);
        ɵngcc0.ɵɵelementStart(22, "div", 17);
        ɵngcc0.ɵɵelementStart(23, "cron", 18);
        ɵngcc0.ɵɵlistener("emitter", function ScheduleModalComponent_Template_cron_emitter_23_listener($event) { return ctx.getCron($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(24, "div", 19);
        ɵngcc0.ɵɵelementStart(25, "div", 13);
        ɵngcc0.ɵɵelementStart(26, "span", 14);
        ɵngcc0.ɵɵtext(27, "2");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(28, "div", 20);
        ɵngcc0.ɵɵelementStart(29, "strong", 15);
        ɵngcc0.ɵɵtext(30, "Send email");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(31, "p", 21);
        ɵngcc0.ɵɵelement(32, "i", 22);
        ɵngcc0.ɵɵelementStart(33, "span", 15);
        ɵngcc0.ɵɵtext(34, "Enter one or more valid email addresses, separated with a comma.");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(35, "div", 23);
        ɵngcc0.ɵɵelementStart(36, "div", 17);
        ɵngcc0.ɵɵelementStart(37, "label", 24);
        ɵngcc0.ɵɵtext(38, "Send to");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(39, "c8y-form-group");
        ɵngcc0.ɵɵelementStart(40, "input", 25);
        ɵngcc0.ɵɵlistener("ngModelChange", function ScheduleModalComponent_Template_input_ngModelChange_40_listener($event) { return ctx.emailTo = $event; });
        ɵngcc0.ɵɵpipe(41, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(42, "div", 17);
        ɵngcc0.ɵɵelementStart(43, "label", 24);
        ɵngcc0.ɵɵtext(44, "CC");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(45, "c8y-form-group");
        ɵngcc0.ɵɵelementStart(46, "input", 26);
        ɵngcc0.ɵɵlistener("ngModelChange", function ScheduleModalComponent_Template_input_ngModelChange_46_listener($event) { return ctx.emailCc = $event; });
        ɵngcc0.ɵɵpipe(47, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(48, "div", 17);
        ɵngcc0.ɵɵelementStart(49, "label", 24);
        ɵngcc0.ɵɵtext(50, "BCC");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(51, "c8y-form-group");
        ɵngcc0.ɵɵelementStart(52, "input", 27);
        ɵngcc0.ɵɵlistener("ngModelChange", function ScheduleModalComponent_Template_input_ngModelChange_52_listener($event) { return ctx.emailBcc = $event; });
        ɵngcc0.ɵɵpipe(53, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(54, "div", 17);
        ɵngcc0.ɵɵelementStart(55, "label", 24);
        ɵngcc0.ɵɵtext(56, "Reply to (single email address)");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(57, "c8y-form-group");
        ɵngcc0.ɵɵelementStart(58, "input", 28);
        ɵngcc0.ɵɵlistener("ngModelChange", function ScheduleModalComponent_Template_input_ngModelChange_58_listener($event) { return ctx.emailReplyTo = $event; });
        ɵngcc0.ɵɵpipe(59, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(60, "div", 17);
        ɵngcc0.ɵɵelementStart(61, "label", 24);
        ɵngcc0.ɵɵtext(62, "Subject");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(63, "c8y-form-group");
        ɵngcc0.ɵɵelementStart(64, "input", 29);
        ɵngcc0.ɵɵlistener("ngModelChange", function ScheduleModalComponent_Template_input_ngModelChange_64_listener($event) { return ctx.emailSubject = $event; });
        ɵngcc0.ɵɵpipe(65, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(66, "div", 17);
        ɵngcc0.ɵɵelementStart(67, "label", 24);
        ɵngcc0.ɵɵtext(68, "Message");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(69, "c8y-form-group");
        ɵngcc0.ɵɵelementStart(70, "textarea", 30);
        ɵngcc0.ɵɵlistener("ngModelChange", function ScheduleModalComponent_Template_textarea_ngModelChange_70_listener($event) { return ctx.emailText = $event; });
        ɵngcc0.ɵɵpipe(71, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(72, "p", 31);
        ɵngcc0.ɵɵtext(73);
        ɵngcc0.ɵɵpipe(74, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(75, "div", 32);
        ɵngcc0.ɵɵelementStart(76, "button", 33);
        ɵngcc0.ɵɵlistener("click", function ScheduleModalComponent_Template_button_click_76_listener() { return ctx.cancel(); });
        ɵngcc0.ɵɵpipe(77, "translate");
        ɵngcc0.ɵɵtext(78);
        ɵngcc0.ɵɵpipe(79, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(80, "button", 34);
        ɵngcc0.ɵɵlistener("click", function ScheduleModalComponent_Template_button_click_80_listener() { return ctx.save(); });
        ɵngcc0.ɵɵelementStart(81, "span");
        ɵngcc0.ɵɵtemplate(82, ScheduleModalComponent_span_82_Template, 4, 6, "span", 35);
        ɵngcc0.ɵɵtemplate(83, ScheduleModalComponent_span_83_Template, 4, 6, "span", 35);
        ɵngcc0.ɵɵtemplate(84, ScheduleModalComponent_span_84_Template, 4, 6, "span", 35);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        var _r3 = ɵngcc0.ɵɵreference(13);
        ɵngcc0.ɵɵadvance(5);
        ɵngcc0.ɵɵproperty("ngIf", ctx.actionType === ctx.ActionType.CREATE);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.actionType === ctx.ActionType.EDIT);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.actionType === ctx.ActionType.DUPLICATE);
        ɵngcc0.ɵɵadvance(16);
        ɵngcc0.ɵɵproperty("cronIn", ctx.cronExpression);
        ɵngcc0.ɵɵadvance(17);
        ɵngcc0.ɵɵpropertyInterpolate("placeholder", ɵngcc0.ɵɵpipeBind1(41, 23, "e.g. joe.doe@example.com,john.smith@example.com`LOCALIZE`"));
        ɵngcc0.ɵɵproperty("ngModel", ctx.emailTo);
        ɵngcc0.ɵɵadvance(6);
        ɵngcc0.ɵɵpropertyInterpolate("placeholder", ɵngcc0.ɵɵpipeBind1(47, 25, "e.g. joe.doe@example.com,john.smith@example.com`LOCALIZE`"));
        ɵngcc0.ɵɵproperty("ngModel", ctx.emailCc);
        ɵngcc0.ɵɵadvance(6);
        ɵngcc0.ɵɵpropertyInterpolate("placeholder", ɵngcc0.ɵɵpipeBind1(53, 27, "e.g. joe.doe@example.com,john.smith@example.com`LOCALIZE`"));
        ɵngcc0.ɵɵproperty("ngModel", ctx.emailBcc);
        ɵngcc0.ɵɵadvance(6);
        ɵngcc0.ɵɵpropertyInterpolate("placeholder", ɵngcc0.ɵɵpipeBind1(59, 29, "e.g. joe.doe@example.com`LOCALIZE`"));
        ɵngcc0.ɵɵproperty("ngModel", ctx.emailReplyTo);
        ɵngcc0.ɵɵadvance(6);
        ɵngcc0.ɵɵpropertyInterpolate("placeholder", ɵngcc0.ɵɵpipeBind1(65, 31, "e.g. Daily report"));
        ɵngcc0.ɵɵproperty("ngModel", ctx.emailSubject);
        ɵngcc0.ɵɵadvance(6);
        ɵngcc0.ɵɵpropertyInterpolate("placeholder", ɵngcc0.ɵɵpipeBind1(71, 33, "Message"));
        ɵngcc0.ɵɵproperty("ngModel", ctx.emailText);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(74, 35, ctx.placeholdersInfo), " ");
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(77, 37, "Cancel"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(79, 39, "Cancel"), " ");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("disabled", !ctx.validCron || !_r3.form.valid);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.actionType === ctx.ActionType.CREATE);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.actionType === ctx.ActionType.EDIT);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.actionType === ctx.ActionType.DUPLICATE);
    } }, directives: function () { return [ɵngcc1.IconDirective, ɵngcc5.NgIf, ɵngcc1.C8yTranslateDirective, ɵngcc6.ɵNgNoValidate, ɵngcc6.NgControlStatusGroup, ɵngcc6.NgForm, CronComponent, ɵngcc1.FormGroupComponent, ɵngcc1.RequiredInputPlaceholderDirective, ɵngcc6.DefaultValueAccessor, ɵngcc1.EmailsValidatorDirective, ɵngcc6.RequiredValidator, ɵngcc6.NgControlStatus, ɵngcc6.NgModel, ɵngcc6.EmailValidator]; }, pipes: function () { return [ɵngcc1.C8yTranslatePipe]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScheduleModalComponent, [{
        type: core.Component,
        args: [{
                selector: 'schedule-modal',
                template: "<div class=\"modal-header text-center bg-primary\">\n  <header class=\"text-white\">\n    <div style=\"font-size: 62px;\">\n      <span c8yIcon=\"c8y-report\"></span>\n    </div>\n    <h4 class=\"text-uppercase\">\n      <span *ngIf=\"actionType === ActionType.CREATE\" translate>New export schedule</span>\n      <span *ngIf=\"actionType === ActionType.EDIT\" translate>Edit export schedule</span>\n      <span *ngIf=\"actionType === ActionType.DUPLICATE\" translate>Duplicate export schedule</span>\n    </h4>\n  </header>\n</div>\n\n<div class=\"modal-body\">\n  <p class=\"lead text-center p-t-24 m-b-0\" translate>On schedule send export via email</p>\n</div>\n<div class=\"modal-inner-scroll smart-rule-control\">\n  <form #scheduleForm=\"ngForm\" class=\"edit-smart-rule-details\">\n    <div class=\"list-group\">\n      <div class=\"list-group-item bg-gray-white\">\n        <div class=\"smart-list-icon-label\">\n          <span class=\"dot bg-primary-light m-r-8\">1</span>\n          <strong translate>Frequency</strong>\n        </div>\n        <div class=\"p-t-16\">\n          <div class=\"form-group\">\n            <cron [cronIn]=\"cronExpression\" (emitter)=\"getCron($event)\" name=\"cron\"></cron>\n          </div>\n        </div>\n      </div>\n      <div class=\"list-group-item\">\n        <div class=\"smart-list-icon-label\">\n          <span class=\"dot bg-primary-light m-r-8\">2</span>\n          <div class=\"d-inline-block\">\n            <strong translate>Send email</strong>\n            <p class=\"help-block text-muted small p-absolute\">\n              <i class=\"text-info m-r-4 text-14\" c8yIcon=\"info-circle\"></i>\n              <span translate\n                >Enter one or more valid email addresses, separated with a comma.</span\n              >\n            </p>\n          </div>\n        </div>\n        <div class=\"p-t-24\">\n          <div class=\"form-group\">\n            <label class=\"control-label\" translate>Send to</label>\n            <c8y-form-group>\n              <input\n                emails\n                type=\"text\"\n                class=\"form-control\"\n                name=\"to\"\n                [(ngModel)]=\"emailTo\"\n                placeholder=\"{{\n                  'e.g. joe.doe@example.com,john.smith@example.com`LOCALIZE`' | translate\n                }}\"\n                required\n              />\n            </c8y-form-group>\n          </div>\n\n          <div class=\"form-group\">\n            <label class=\"control-label\" translate>CC</label>\n            <c8y-form-group>\n              <input\n                emails\n                type=\"text\"\n                class=\"form-control span\"\n                name=\"cc\"\n                placeholder=\"{{\n                  'e.g. joe.doe@example.com,john.smith@example.com`LOCALIZE`' | translate\n                }}\"\n                [(ngModel)]=\"emailCc\"\n              />\n            </c8y-form-group>\n          </div>\n\n          <div class=\"form-group\">\n            <label class=\"control-label\" translate>BCC</label>\n            <c8y-form-group>\n              <input\n                emails\n                type=\"text\"\n                class=\"form-control span\"\n                name=\"bcc\"\n                placeholder=\"{{\n                  'e.g. joe.doe@example.com,john.smith@example.com`LOCALIZE`' | translate\n                }}\"\n                [(ngModel)]=\"emailBcc\"\n              />\n            </c8y-form-group>\n          </div>\n\n          <div class=\"form-group\">\n            <label class=\"control-label\" translate>Reply to (single email address)</label>\n            <c8y-form-group>\n              <input\n                email\n                type=\"text\"\n                class=\"form-control span\"\n                name=\"replyTo\"\n                placeholder=\"{{ 'e.g. joe.doe@example.com`LOCALIZE`' | translate }}\"\n                [(ngModel)]=\"emailReplyTo\"\n              />\n            </c8y-form-group>\n          </div>\n\n          <div class=\"form-group\">\n            <label class=\"control-label\" translate>Subject</label>\n            <c8y-form-group>\n              <input\n                type=\"text\"\n                class=\"form-control span\"\n                name=\"subject\"\n                [(ngModel)]=\"emailSubject\"\n                placeholder=\"{{ 'e.g. Daily report' | translate }}\"\n                required\n              />\n            </c8y-form-group>\n          </div>\n\n          <div class=\"form-group\">\n            <label class=\"control-label\" translate>Message</label>\n            <c8y-form-group>\n              <textarea\n                class=\"form-control\"\n                name=\"text\"\n                [(ngModel)]=\"emailText\"\n                placeholder=\"{{ 'Message' | translate }}\"\n                rows=\"4\"\n                required\n              ></textarea>\n              <p class=\"help-block text-muted\">\n                {{ placeholdersInfo | translate }}\n              </p>\n            </c8y-form-group>\n          </div>\n        </div>\n      </div>\n    </div>\n  </form>\n</div>\n\n<div class=\"modal-footer\">\n  <button class=\"btn btn-default\" (click)=\"cancel()\" title=\"{{ 'Cancel' | translate }}\">\n    {{ 'Cancel' | translate }}\n  </button>\n  <button\n    class=\"btn btn-primary\"\n    (click)=\"save()\"\n    [disabled]=\"!validCron || !scheduleForm.form.valid\"\n  >\n    <span>\n      <span *ngIf=\"actionType === ActionType.CREATE\" title=\"{{ 'Create' | translate }}\">\n        {{ 'Create' | translate }}\n      </span>\n      <span *ngIf=\"actionType === ActionType.EDIT\" title=\"{{ 'Save' | translate }}\">\n        {{ 'Save' | translate }}\n      </span>\n      <span *ngIf=\"actionType === ActionType.DUPLICATE\" title=\"{{ 'Duplicate' | translate }}\">\n        {{ 'Duplicate' | translate }}\n      </span>\n    </span>\n  </button>\n</div>\n"
            }]
    }], function () { return [{ type: ReportsService }, { type: ɵngcc4.BsModalRef }, { type: CronService }]; }, { emitter: [{
            type: core.Output
        }] }); })();
        return ScheduleModalComponent;
    }());
    ScheduleModalComponent.ctorParameters = function () { return [
        { type: ReportsService },
        { type: modal.BsModalRef },
        { type: CronService }
    ]; };
    ScheduleModalComponent.propDecorators = {
        emitter: [{ type: core.Output }]
    };

    var ExportSchedulesComponent = /** @class */ (function () {
        function ExportSchedulesComponent(reportsService, bsModalService, cronService, translateService, userService, optionsService) {
            this.reportsService = reportsService;
            this.bsModalService = bsModalService;
            this.cronService = cronService;
            this.translateService = translateService;
            this.userService = userService;
            this.optionsService = optionsService;
            this.onSchedulesUpdate = new core.EventEmitter();
            this.scheduleList = [];
            this.initialSchedule = {
                timestamp: null,
                emailConfig: {
                    to: [],
                    cc: [],
                    bcc: [],
                    replyTo: '',
                    text: '',
                    subject: ''
                },
                cronConfig: {
                    minute: '0',
                    hour: '0',
                    day: '1',
                    month: '1',
                    weekday: '?'
                }
            };
            this.listClass = 'interact-list';
            this.sortReverse = false;
            this.isOpen = {};
            this.isEditMenuOpen = false;
            this.currentUserEmail = '';
            this.hasRequiredRole = false;
            this.defaultExportEmailTemplate = this.translateService.instant(ngxComponents.gettext('File with exported data can be downloaded from {tenant-domain}/inventory/binaries/{binaryId}.'));
            this.loadingStatus = {
                inProgress: false,
                done: false,
                error: false
            };
        }
        Object.defineProperty(ExportSchedulesComponent.prototype, "exportId", {
            set: function (exportId) {
                this._exportId = exportId;
            },
            enumerable: false,
            configurable: true
        });
        ExportSchedulesComponent.prototype.ngOnInit = function () {
            return __awaiter(this, void 0, void 0, function () {
                var _a, currentUserEmail, _b, _c;
                return __generator(this, function (_d) {
                    switch (_d.label) {
                        case 0:
                            _a = this;
                            return [4 /*yield*/, this.checkRole()];
                        case 1:
                            _a.hasRequiredRole = _d.sent();
                            this.getScheduleList(true);
                            return [4 /*yield*/, this.getCurrentUserEmail()];
                        case 2:
                            currentUserEmail = _d.sent();
                            _b = this.initialSchedule.emailConfig;
                            return [4 /*yield*/, this.optionsService.getTenantOption('configuration', 'export.data.mail.text', this.defaultExportEmailTemplate)];
                        case 3:
                            _b.text = _d.sent();
                            this.initialSchedule.emailConfig.to = currentUserEmail;
                            _c = this;
                            return [4 /*yield*/, this.reportsService.getExport(this._exportId)];
                        case 4:
                            _c.exp = _d.sent();
                            this.initialSchedule.emailConfig.subject = this.translateService.instant(ngxComponents.gettext('Export of "{{expName}}"'), { expName: this.exp.name });
                            return [2 /*return*/];
                    }
                });
            });
        };
        ExportSchedulesComponent.prototype.ngOnChanges = function () {
            this.translateButtonTitles();
        };
        ExportSchedulesComponent.prototype.translateButtonTitles = function () {
            this.buttonLabels = {
                edit: this.translateService.instant(ngxComponents.gettext('Edit schedule')),
                editNoPermission: this.translateService.instant(ngxComponents.gettext('Edit schedule - no permissions')),
                duplicate: this.translateService.instant(ngxComponents.gettext('Duplicate schedule')),
                duplicateNoPermission: this.translateService.instant(ngxComponents.gettext('Duplicate schedule - no permissions')),
                delete: this.translateService.instant(ngxComponents.gettext('Delete schedule')),
                deleteNoPermission: this.translateService.instant(ngxComponents.gettext('Delete schedule - no permissions'))
            };
        };
        ExportSchedulesComponent.prototype.getCurrentUserEmail = function () {
            return __awaiter(this, void 0, void 0, function () {
                var data;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.userService.current()];
                        case 1:
                            data = (_a.sent()).data;
                            return [2 /*return*/, data && data.email ? [data.email] : []];
                    }
                });
            });
        };
        ExportSchedulesComponent.prototype.checkRole = function () {
            return __awaiter(this, void 0, void 0, function () {
                var data, role, hasRole;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.userService.current()];
                        case 1:
                            data = (_a.sent()).data;
                            role = 'ROLE_SCHEDULE_REPORT_ADMIN';
                            hasRole = this.userService.hasRole(data, role);
                            return [2 /*return*/, hasRole];
                    }
                });
            });
        };
        ExportSchedulesComponent.prototype.getScheduleList = function (withProgress) {
            return __awaiter(this, void 0, void 0, function () {
                var _a;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            if (withProgress) {
                                this.loadingStatus.inProgress = true;
                            }
                            _a = this;
                            return [4 /*yield*/, this.reportsService.getScheduleList(this._exportId)];
                        case 1:
                            _a.scheduleList = _b.sent();
                            if (withProgress) {
                                this.loadingStatus.inProgress = false;
                            }
                            return [2 /*return*/];
                    }
                });
            });
        };
        ExportSchedulesComponent.prototype.addSchedule = function () {
            this.openAddEditModal(this._exportId, this.initialSchedule, exports.ActionType.CREATE);
        };
        ExportSchedulesComponent.prototype.editSchedule = function (schedule, index, event) {
            if (this.hasRequiredRole) {
                event.preventDefault();
                this.openAddEditModal(this._exportId, schedule, exports.ActionType.EDIT, index);
            }
        };
        ExportSchedulesComponent.prototype.duplicateSchedule = function (schedule, event) {
            event.preventDefault();
            this.openAddEditModal(this._exportId, schedule, exports.ActionType.DUPLICATE);
        };
        ExportSchedulesComponent.prototype.openAddEditModal = function (exportId, schedule, actionType, index) {
            var _this = this;
            var payload = { actionType: actionType, exportId: exportId, schedule: lodashEs.cloneDeep(schedule) };
            var modalOptions = { class: 'modal-sm', initialState: payload };
            this.modalRef = this.bsModalService.show(ScheduleModalComponent, modalOptions);
            this.modalRef.content.emitter.subscribe(function (load) { return _this.getMessageFromModal(load, index); });
        };
        ExportSchedulesComponent.prototype.getMessageFromModal = function (payload, index) {
            if (payload.success) {
                if (index !== undefined) {
                    this.scheduleList[index] = payload.schedule;
                }
                else {
                    this.scheduleList.push(payload.schedule);
                }
                this.onSchedulesUpdate.emit(this.scheduleList);
            }
        };
        ExportSchedulesComponent.prototype.removeSchedule = function (schedule, index, event) {
            event.preventDefault();
            this.scheduleList.splice(index, 1);
            this.onSchedulesUpdate.emit(this.scheduleList);
        };
ExportSchedulesComponent.ɵfac = function ExportSchedulesComponent_Factory(t) { return new (t || ExportSchedulesComponent)(ɵngcc0.ɵɵdirectiveInject(ReportsService), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.BsModalService), ɵngcc0.ɵɵdirectiveInject(CronService), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.TranslateService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.UserService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.OptionsService)); };
ExportSchedulesComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ExportSchedulesComponent, selectors: [["export-schedules"]], inputs: { exportId: "exportId" }, outputs: { onSchedulesUpdate: "onSchedulesUpdate" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 10, vars: 12, consts: [["class", "flex-row", 4, "ngIf"], [4, "ngIf"], ["class", "alert alert-warning max-width-100", "role", "alert", "translate", "", 4, "ngIf"], ["type", "button", 1, "btn-add-block", "m-t-16", 3, "title", "disabled", "click"], [3, "c8yIcon"], [1, "flex-row"], ["translate", ""], ["translate", "", 1, "alert", "alert-warning", "max-width-100"], ["class", "c8y-empty-state text-center max-width-100", 4, "ngIf"], ["class", "c8y-list__group", 4, "ngIf"], [1, "c8y-empty-state", "text-center", "max-width-100"], ["c8yIcon", "c8y-report", 1, "c8y-icon-duocolor"], [1, "c8y-list__group"], [1, "c8y-list__item", "hidden-xs"], [1, "c8y-list__item__block"], [1, "c8y-list__item__icon"], [1, "p-l-24"], [1, "c8y-list__item__body"], [1, "col-sm-6"], [1, "m-0"], [1, "col-sm-6", "m-r-40"], ["class", "c8y-list__item flex-row pointer", 3, "click", 4, "ngFor", "ngForOf"], [1, "c8y-list__item", "flex-row", "pointer", 3, "click"], [1, "c8y-list__item__body", "flex-row"], [1, "col-sm-6", "col-xs-6"], [1, "text-truncate", 3, "title"], [1, "flex-row", "a-i-baseline"], ["c8yIcon", "calendar", 1, "text-muted", "m-r-4"], [1, "smart-rule-information"], ["ngNonBindable", "", "translate", "", 3, "translateParams", 4, "ngIf"], [1, "c8y-list__item__actions", 3, "click"], ["dropdown", "", 1, "settings", "dropdown"], ["dropdownToggle", "", "aria-haspopup", "true", "aria-expanded", "false", 1, "dropdown-toggle", "c8y-dropdown", 3, "title"], ["class", "dropdown-menu dropdown-menu-right", 4, "dropdownMenu"], ["translate", "", 3, "translateParams"], [1, "dropdown-menu", "dropdown-menu-right"], ["role", "menuitem"], [3, "title", "disabled", "click"], ["role", "alert", "translate", "", 1, "alert", "alert-warning", "max-width-100"]], template: function ExportSchedulesComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div");
        ɵngcc0.ɵɵtemplate(1, ExportSchedulesComponent_div_1_Template, 4, 0, "div", 0);
        ɵngcc0.ɵɵtemplate(2, ExportSchedulesComponent_div_2_Template, 3, 0, "div", 1);
        ɵngcc0.ɵɵtemplate(3, ExportSchedulesComponent_div_3_Template, 3, 2, "div", 1);
        ɵngcc0.ɵɵtemplate(4, ExportSchedulesComponent_div_4_Template, 2, 0, "div", 2);
        ɵngcc0.ɵɵelementStart(5, "button", 3);
        ɵngcc0.ɵɵlistener("click", function ExportSchedulesComponent_Template_button_click_5_listener() { return ctx.addSchedule(); });
        ɵngcc0.ɵɵpipe(6, "translate");
        ɵngcc0.ɵɵelement(7, "i", 4);
        ɵngcc0.ɵɵtext(8);
        ɵngcc0.ɵɵpipe(9, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.loadingStatus.inProgress);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.loadingStatus.inProgress && ctx.loadingStatus.done && ctx.loadingStatus.error);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.loadingStatus.inProgress && !ctx.loadingStatus.done && !ctx.loadingStatus.error);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.hasRequiredRole);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(6, 8, "Add schedule"));
        ɵngcc0.ɵɵproperty("disabled", !ctx.hasRequiredRole);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("c8yIcon", "plus-circle");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(9, 10, "Add schedule"), " ");
    } }, directives: [ɵngcc5.NgIf, ɵngcc1.IconDirective, ɵngcc1.LoadingComponent, ɵngcc1.C8yTranslateDirective, ɵngcc5.NgForOf, ɵngcc7.BsDropdownDirective, ɵngcc7.BsDropdownToggleDirective, ɵngcc7.BsDropdownMenuDirective], pipes: [ɵngcc1.C8yTranslatePipe, ɵngcc5.DecimalPipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ExportSchedulesComponent, [{
        type: core.Component,
        args: [{
                selector: 'export-schedules',
                template: "<div>\n  <div *ngIf=\"loadingStatus.inProgress\" class=\"flex-row\">\n    <c8y-loading></c8y-loading>\n    <span translate>Retrieving schedules\u2026</span>\n  </div>\n\n  <div *ngIf=\"!loadingStatus.inProgress && loadingStatus.done && loadingStatus.error\">\n    <div class=\"alert alert-warning max-width-100\" translate>\n      Could not load schedules list.\n    </div>\n  </div>\n\n  <div *ngIf=\"!loadingStatus.inProgress && !loadingStatus.done && !loadingStatus.error\">\n    <div class=\"c8y-empty-state text-center max-width-100\" *ngIf=\"!scheduleList.length\">\n      <h1 c8yIcon=\"c8y-report\" class=\"c8y-icon-duocolor\"></h1>\n      <h3 translate>No export schedules defined.</h3>\n    </div>\n\n    <div class=\"c8y-list__group\" *ngIf=\"scheduleList.length\">\n      <div class=\"c8y-list__item hidden-xs\">\n        <div class=\"c8y-list__item__block\">\n          <div class=\"c8y-list__item__icon\">\n            <i class=\"p-l-24\"></i>\n          </div>\n          <div class=\"c8y-list__item__body\">\n            <div class=\"flex-row\">\n              <div class=\"col-sm-6\">\n                <label class=\"m-0\">\n                  {{ 'Description' | translate }}\n                </label>\n              </div>\n              <div class=\"col-sm-6 m-r-40\">\n                <label class=\"m-0\">\n                  {{ 'Frequency' | translate }}\n                </label>\n              </div>\n            </div>\n          </div>\n          <span></span>\n        </div>\n      </div>\n\n      <div\n        class=\"c8y-list__item flex-row pointer\"\n        *ngFor=\"let schedule of scheduleList; index as i\"\n        (click)=\"editSchedule(schedule, i, $event)\"\n      >\n        <div class=\"c8y-list__item__block\">\n          <div class=\"c8y-list__item__icon\">\n            <i c8yIcon=\"c8y-report\" class=\"c8y-icon-duocolor\"></i>\n          </div>\n          <div class=\"c8y-list__item__body flex-row\">\n            <div class=\"col-sm-6 col-xs-6\">\n              <div class=\"text-truncate\" title=\"{{ schedule.emailConfig.subject }}\">\n                {{ schedule.emailConfig.subject }}\n              </div>\n            </div>\n            <div class=\"col-sm-6 col-xs-6\">\n              <div class=\"flex-row a-i-baseline\">\n                <i c8yIcon=\"calendar\" class=\"text-muted m-r-4\"></i>\n                <span class=\"smart-rule-information\">\n                  <span\n                    *ngIf=\"cronService.getBase(schedule.cronConfig) === 2\"\n                    ngNonBindable\n                    translate\n                    [translateParams]=\"{ minutes: schedule.cronConfig.minute | number: '2.0-0' }\"\n                  >\n                    Hourly: {{ minutes }} minute(s) past the hour.\n                  </span>\n                  <span\n                    *ngIf=\"cronService.getBase(schedule.cronConfig) === 3\"\n                    ngNonBindable\n                    translate\n                    [translateParams]=\"{\n                      hour: schedule.cronConfig.hour | number: '2.0-0',\n                      minutes: schedule.cronConfig.minute | number: '2.0-0'\n                    }\"\n                  >\n                    Daily: at {{ hour }}:{{ minutes }}.\n                  </span>\n                  <span\n                    *ngIf=\"cronService.getBase(schedule.cronConfig) === 4\"\n                    ngNonBindable\n                    translate\n                    [translateParams]=\"{\n                      weekDay: cronService.getWeekDayName(schedule.cronConfig),\n                      hour: schedule.cronConfig.hour | number: '2.0-0',\n                      minutes: schedule.cronConfig.minute | number: '2.0-0'\n                    }\"\n                  >\n                    Weekly: {{ weekDay }}, at {{ hour }}:{{ minutes }}.\n                  </span>\n                  <span\n                    *ngIf=\"cronService.getBase(schedule.cronConfig) === 5\"\n                    ngNonBindable\n                    translate\n                    [translateParams]=\"{\n                      monthDay: cronService.getMonthDayName(schedule.cronConfig),\n                      hour: schedule.cronConfig.hour | number: '2.0-0',\n                      minutes: schedule.cronConfig.minute | number: '2.0-0'\n                    }\"\n                  >\n                    Monthly: {{ monthDay }} day of the month, at {{ hour }}:{{ minutes }}.\n                  </span>\n                  <span\n                    *ngIf=\"cronService.getBase(schedule.cronConfig) === 6\"\n                    ngNonBindable\n                    translate\n                    [translateParams]=\"{\n                      month: cronService.getMonthName(schedule.cronConfig),\n                      monthDay: cronService.getMonthDayName(schedule.cronConfig),\n                      hour: schedule.cronConfig.hour | number: '2.0-0',\n                      minutes: schedule.cronConfig.minute | number: '2.0-0'\n                    }\"\n                  >\n                    Yearly: {{ month }}, {{ monthDay }} day of the month, at {{ hour }}:{{\n                      minutes\n                    }}.\n                  </span>\n                </span>\n              </div>\n            </div>\n          </div>\n          <div class=\"c8y-list__item__actions\" (click)=\"$event.stopPropagation()\">\n            <div class=\"settings dropdown\" dropdown>\n              <button\n                class=\"dropdown-toggle c8y-dropdown\"\n                dropdownToggle\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n                title=\"{{ 'Actions' | translate }}\"\n              >\n                <i [c8yIcon]=\"'ellipsis-v'\"></i>\n              </button>\n              <ul class=\"dropdown-menu dropdown-menu-right\" *dropdownMenu>\n                <li role=\"menuitem\">\n                  <button\n                    [title]=\"hasRequiredRole ? buttonLabels.edit : buttonLabels.editNoPermission\"\n                    (click)=\"editSchedule(schedule, i, $event)\"\n                    [disabled]=\"!hasRequiredRole\"\n                  >\n                    <i [c8yIcon]=\"'pencil'\"></i> {{ 'Edit' | translate }}\n                  </button>\n                </li>\n                <li role=\"menuitem\">\n                  <button\n                    [title]=\"\n                      hasRequiredRole ? buttonLabels.duplicate : buttonLabels.duplicateNoPermission\n                    \"\n                    (click)=\"duplicateSchedule(schedule, $event)\"\n                    [disabled]=\"!hasRequiredRole\"\n                  >\n                    <i [c8yIcon]=\"'copy'\"></i> {{ 'Duplicate' | translate }}\n                  </button>\n                </li>\n                <li role=\"menuitem\">\n                  <button\n                    [title]=\"\n                      hasRequiredRole ? buttonLabels.delete : buttonLabels.deleteNoPermission\n                    \"\n                    (click)=\"removeSchedule(schedule, i, $event)\"\n                    [disabled]=\"!hasRequiredRole\"\n                  >\n                    <i [c8yIcon]=\"'trash'\"></i> {{ 'Delete' | translate }}\n                  </button>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"alert alert-warning max-width-100\" *ngIf=\"!hasRequiredRole\" role=\"alert\" translate>\n    You don't have the permission required to schedule exports.\n  </div>\n  <button\n    type=\"button\"\n    class=\"btn-add-block m-t-16\"\n    title=\"{{ 'Add schedule' | translate }}\"\n    (click)=\"addSchedule()\"\n    [disabled]=\"!hasRequiredRole\"\n  >\n    <i [c8yIcon]=\"'plus-circle'\"></i>\n    {{ 'Add schedule' | translate }}\n  </button>\n</div>\n"
            }]
    }], function () { return [{ type: ReportsService }, { type: ɵngcc4.BsModalService }, { type: CronService }, { type: ɵngcc3.TranslateService }, { type: ɵngcc2.UserService }, { type: ɵngcc1.OptionsService }]; }, { onSchedulesUpdate: [{
            type: core.Output
        }], exportId: [{
            type: core.Input
        }] }); })();
        return ExportSchedulesComponent;
    }());
    ExportSchedulesComponent.ctorParameters = function () { return [
        { type: ReportsService },
        { type: modal.BsModalService },
        { type: CronService },
        { type: core$1.TranslateService },
        { type: client.UserService },
        { type: ngxComponents.OptionsService }
    ]; };
    ExportSchedulesComponent.propDecorators = {
        exportId: [{ type: core.Input }],
        onSchedulesUpdate: [{ type: core.Output }]
    };

    var CronComponent = /** @class */ (function () {
        function CronComponent(cronService) {
            this.cronService = cronService;
            this.emitter = new core.EventEmitter();
            this.emittedCron = {
                valid: false,
                cron: ''
            };
            this.base = exports.Base.Initial;
            //
        }
        CronComponent.prototype.ngOnInit = function () {
            this.daysOfWeekPosix = this.cronService.daysOfWeekPosix;
            this.daysOfMonth = this.cronService.daysOfMonth;
            this.months = this.cronService.months;
            this.hours = this.cronService.hours;
            this.minutes = this.cronService.minutes;
            this.intervals = this.cronService.intervals;
            this.cronConfig = this.cronService.generateCronConfig(this.cronIn);
            this.base = this.cronService.getBase(this.cronConfig);
        };
        CronComponent.prototype.onChangeSelect = function () {
            this.cronService.clearNextModels(this.base, this.cronConfig);
            this.emittedCron.valid = this.cronService.validateModels(this.base, this.cronConfig);
            this.emittedCron.cron = this.cronService.generateCron(this.cronConfig);
            this.emitter.emit(this.emittedCron);
        };
CronComponent.ɵfac = function CronComponent_Factory(t) { return new (t || CronComponent)(ɵngcc0.ɵɵdirectiveInject(CronService)); };
CronComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CronComponent, selectors: [["cron"]], inputs: { cronIn: "cronIn" }, outputs: { emitter: "emitter" }, decls: 15, vars: 7, consts: [[1, "cron-wrap"], [1, "form-group", "smart-cron-job-every"], ["for", "smart-cron-job-every", "translate", "", 1, "control-label"], [1, ""], [1, "c8y-select-wrapper"], ["id", "smart-cron-job-every", "required", "true", 1, "cron-select", "form-control", 3, "ngModel", "ngModelChange", "change"], ["value", "1", "translate", "", 4, "ngIf"], [3, "ngValue", 4, "ngFor", "ngForOf"], [1, "row"], ["class", "form-group smart-cron-job-on col-md-6", 4, "ngIf"], ["class", "form-group smart-cron-job-of col-md-6", 4, "ngIf"], ["class", "form-group smart-cron-job-on-the col-md-6", 4, "ngIf"], ["class", "form-group smart-cron-job-at", 4, "ngIf"], ["value", "1", "translate", ""], [3, "ngValue"], [1, "form-group", "smart-cron-job-on", "col-md-6"], ["for", "smart-cron-job-on", "translate", "", 1, "control-label"], ["id", "smart-cron-job-on", 1, "cron-select", "form-control", "day-value", 3, "ngModel", "ngModelChange", "change"], [1, "form-group", "smart-cron-job-of", "col-md-6"], ["for", "smart-cron-job-of", "translate", "", 1, "control-label"], ["id", "smart-cron-job-of", 1, "cron-select", "form-control", "month-value", 3, "ngModel", "ngModelChange", "change"], [1, "form-group", "smart-cron-job-on-the", "col-md-6"], ["for", "smart-cron-job-on-the", "translate", "", 1, "control-label"], ["id", "smart-cron-job-on-the", 1, "cron-select", "form-control", "day-of-month-value", 3, "ngModel", "ngModelChange", "change"], [1, "form-group", "smart-cron-job-at"], ["for", "smart-cron-job-at-hour", 1, "control-label"], ["translate", "", 4, "ngIf"], [1, "form-inline"], ["class", "c8y-select-wrapper", 4, "ngIf"], [4, "ngIf"], ["id", "smart-cron-job-at-minute", 1, "cron-select", "form-control", "minute-value", 3, "ngModel", "ngModelChange", "change"], ["translate", ""], ["id", "smart-cron-job-at-hour", 1, "cron-select", "form-control", "hour-value", 3, "ngModel", "ngModelChange", "change"]], template: function CronComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵelementStart(2, "label", 2);
        ɵngcc0.ɵɵtext(3, " Interval ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(4, "div", 3);
        ɵngcc0.ɵɵelementStart(5, "div", 4);
        ɵngcc0.ɵɵelementStart(6, "select", 5);
        ɵngcc0.ɵɵlistener("ngModelChange", function CronComponent_Template_select_ngModelChange_6_listener($event) { return ctx.base = $event; })("change", function CronComponent_Template_select_change_6_listener() { return ctx.onChangeSelect(); });
        ɵngcc0.ɵɵtemplate(7, CronComponent_option_7_Template, 2, 0, "option", 6);
        ɵngcc0.ɵɵtemplate(8, CronComponent_option_8_Template, 3, 4, "option", 7);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(9, "span");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(10, "div", 8);
        ɵngcc0.ɵɵtemplate(11, CronComponent_div_11_Template, 7, 2, "div", 9);
        ɵngcc0.ɵɵtemplate(12, CronComponent_div_12_Template, 8, 2, "div", 10);
        ɵngcc0.ɵɵtemplate(13, CronComponent_div_13_Template, 8, 2, "div", 11);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(14, CronComponent_div_14_Template, 12, 6, "div", 12);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(6);
        ɵngcc0.ɵɵproperty("ngModel", ctx.base);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.base === 1);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.intervals);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", ctx.base == 4);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.base == 6);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.base >= 5);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.base >= 2);
    } }, directives: [ɵngcc1.C8yTranslateDirective, ɵngcc6.SelectControlValueAccessor, ɵngcc6.RequiredValidator, ɵngcc6.NgControlStatus, ɵngcc6.NgModel, ɵngcc5.NgIf, ɵngcc5.NgForOf, ɵngcc6.NgSelectOption, ɵngcc6.ɵNgSelectMultipleOption], pipes: [ɵngcc1.C8yTranslatePipe, ɵngcc5.DecimalPipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CronComponent, [{
        type: core.Component,
        args: [{
                selector: 'cron',
                template: "<div class=\"cron-wrap\">\n  <div class=\"form-group smart-cron-job-every\">\n    <label for=\"smart-cron-job-every\" class=\"control-label\" translate>\n      Interval\n    </label>\n    <div class=\"\">\n      <div class=\"c8y-select-wrapper\">\n        <select\n          class=\"cron-select form-control\"\n          id=\"smart-cron-job-every\"\n          [(ngModel)]=\"base\"\n          required=\"true\"\n          (change)=\"onChangeSelect()\"\n        >\n          <option *ngIf=\"base === 1\" value=\"1\" translate>\n            Select\u2026\n          </option>\n          <option *ngFor=\"let baseInterval of intervals\" [ngValue]=\"baseInterval.value\">\n            {{ baseInterval.label | translate }}\n          </option>\n        </select>\n        <span></span>\n      </div>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"form-group smart-cron-job-on col-md-6\" *ngIf=\"base == 4\">\n      <label class=\"control-label\" for=\"smart-cron-job-on\" translate>\n        Day\n      </label>\n\n      <div class=\"c8y-select-wrapper\">\n        <select\n          class=\"cron-select form-control day-value\"\n          id=\"smart-cron-job-on\"\n          [(ngModel)]=\"cronConfig.weekday\"\n          (change)=\"onChangeSelect()\"\n        >\n          <option *ngFor=\"let dayOfWeek of daysOfWeekPosix\" [ngValue]=\"dayOfWeek.value\">\n            {{ dayOfWeek.label | translate }}\n          </option>\n        </select>\n        <span></span>\n      </div>\n    </div>\n\n    <div class=\"form-group smart-cron-job-of col-md-6\" *ngIf=\"base == 6\">\n      <label for=\"smart-cron-job-of\" class=\"control-label\" translate>\n        Month\n      </label>\n      <div>\n        <div class=\"c8y-select-wrapper\">\n          <select\n            id=\"smart-cron-job-of\"\n            class=\"cron-select form-control month-value\"\n            [(ngModel)]=\"cronConfig.month\"\n            (change)=\"onChangeSelect()\"\n          >\n            <option *ngFor=\"let month of months\" [ngValue]=\"month.value\">\n              {{ month.label | translate }}\n            </option>\n          </select>\n          <span></span>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"form-group smart-cron-job-on-the col-md-6\" *ngIf=\"base >= 5\">\n      <label for=\"smart-cron-job-on-the\" class=\"control-label\" translate>\n        Day\n      </label>\n      <div>\n        <div class=\"c8y-select-wrapper\">\n          <select\n            id=\"smart-cron-job-on-the\"\n            class=\"cron-select form-control day-of-month-value\"\n            [(ngModel)]=\"cronConfig.day\"\n            (change)=\"onChangeSelect()\"\n          >\n            <option *ngFor=\"let dayOfMonth of daysOfMonth\" [ngValue]=\"dayOfMonth.value\">\n              {{ dayOfMonth.label | translate }}\n            </option>\n          </select>\n          <span></span>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"form-group smart-cron-job-at\" *ngIf=\"base >= 2\">\n    <label for=\"smart-cron-job-at-hour\" class=\"control-label\">\n      <span *ngIf=\"base >= 3\" translate>Time</span>\n      <span *ngIf=\"base < 3\" translate>Minutes</span>\n    </label>\n    <div>\n      <div class=\"form-inline\">\n        <div class=\"c8y-select-wrapper\" *ngIf=\"base >= 3\">\n          <select\n            id=\"smart-cron-job-at-hour\"\n            class=\"cron-select form-control hour-value\"\n            [(ngModel)]=\"cronConfig.hour\"\n            (change)=\"onChangeSelect()\"\n          >\n            <option *ngFor=\"let hour of hours\" [ngValue]=\"hour.value\">\n              {{ hour.value | number: '2.0-0' }}\n            </option>\n          </select>\n          <span></span>\n        </div>\n        <span *ngIf=\"base >= 3\"> : </span>\n        <div class=\"c8y-select-wrapper\">\n          <select\n            class=\"cron-select form-control minute-value\"\n            id=\"smart-cron-job-at-minute\"\n            [(ngModel)]=\"cronConfig.minute\"\n            (change)=\"onChangeSelect()\"\n          >\n            <option *ngFor=\"let minute of minutes\" [ngValue]=\"minute.value\">\n              {{ minute.value | number: '2.0-0' }}\n            </option>\n          </select>\n          <span></span>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n"
            }]
    }], function () { return [{ type: CronService }]; }, { emitter: [{
            type: core.Output
        }], cronIn: [{
            type: core.Input
        }] }); })();
        return CronComponent;
    }());
    CronComponent.ctorParameters = function () { return [
        { type: CronService }
    ]; };
    CronComponent.propDecorators = {
        cronIn: [{ type: core.Input }],
        emitter: [{ type: core.Output }]
    };

    /**
     * The angular module definition for reports.
     * @exports ExportSchedulesComponent
     * @exports ScheduleModalComponent
     * @exports CronComponent
     */
    var ReportsModule = /** @class */ (function () {
        function ReportsModule() {
        }
ReportsModule.ɵfac = function ReportsModule_Factory(t) { return new (t || ReportsModule)(); };
ReportsModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: ReportsModule });
ReportsModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [ReportsService, CronService], imports: [[ngxComponents.CoreModule, ngxComponents.FormsModule, dropdown.BsDropdownModule, tooltip.TooltipModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ReportsModule, [{
        type: core.NgModule,
        args: [{
                declarations: [ExportSchedulesComponent, ScheduleModalComponent, CronComponent],
                imports: [ngxComponents.CoreModule, ngxComponents.FormsModule, dropdown.BsDropdownModule, tooltip.TooltipModule],
                entryComponents: [ExportSchedulesComponent, ScheduleModalComponent, CronComponent],
                providers: [ReportsService, CronService],
                exports: [ExportSchedulesComponent, ScheduleModalComponent, CronComponent]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ReportsModule, { declarations: [ExportSchedulesComponent, ScheduleModalComponent, CronComponent], imports: [ɵngcc1.CoreModule, ɵngcc1.FormsModule, ɵngcc7.BsDropdownModule, ɵngcc8.TooltipModule], exports: [ExportSchedulesComponent, ScheduleModalComponent, CronComponent] }); })();
        return ReportsModule;
    }());

    var exportSchedulesComponent = _static.downgradeComponent({
        component: ExportSchedulesComponent
    });

    var reportsService = _static.downgradeInjectable(ReportsService);

    var NAME = 'c8y.upgrade.reports';
    var angularJsModule = angular__namespace
        .module(NAME, [])
        .directive('c8yExportSchedules', exportSchedulesComponent)
        .service('c8yReportsService', reportsService);
    var ng1Modules = [NAME];
    ng1Modules$1.registerNgModule(ng1Modules);

    /**
     * Generated bundle index. Do not edit.
     */

    exports.CronComponent = CronComponent;
    exports.CronService = CronService;
    exports.ExportSchedulesComponent = ExportSchedulesComponent;
    exports.ReportsModule = ReportsModule;
    exports.ReportsService = ReportsService;
    exports.ScheduleModalComponent = ScheduleModalComponent;
    exports.exportSchedulesComponent = exportSchedulesComponent;
    exports.ng1Modules = ng1Modules;
    exports.reportsService = reportsService;

    Object.defineProperty(exports, '__esModule', { value: true });

}));

//# sourceMappingURL=c8y-ngx-components-reports.umd.js.map