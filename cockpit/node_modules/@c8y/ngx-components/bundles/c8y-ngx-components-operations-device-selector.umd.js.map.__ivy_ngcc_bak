{"version":3,"file":"c8y-ngx-components-operations-device-selector.umd.js","sources":["../../operations/device-selector/device-selector.component.ts","../../operations/device-selector/device-selector.module.ts","../../operations/device-selector/c8y-ngx-components-operations-device-selector.ts"],"sourcesContent":["import {\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild\n} from '@angular/core';\nimport {\n  AlarmsDeviceGridColumn,\n  DeviceGridComponent,\n  GroupDeviceGridColumn,\n  ModelDeviceGridColumn,\n  NameDeviceGridColumn,\n  RegistrationDateDeviceGridColumn,\n  StatusDeviceGridColumn,\n  TypeDeviceGridColumn\n} from '@c8y/ngx-components/device-grid';\nimport { Column, FilteringActionType } from '@c8y/ngx-components';\nimport { Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'c8y-device-selector',\n  templateUrl: 'device-selector.component.html'\n})\nexport class DeviceSelectorComponent implements OnInit, OnDestroy {\n  @ViewChild(DeviceGridComponent, { static: true })\n  deviceGrid: DeviceGridComponent;\n\n  @Input()\n  deviceTypes: Observable<string[]>;\n\n  typeColumn: Column = new TypeDeviceGridColumn();\n\n  @Output()\n  onDeviceQueryStringChange: EventEmitter<string> = new EventEmitter<string>();\n\n  columns: Column[] = [\n    new StatusDeviceGridColumn(),\n    new NameDeviceGridColumn(),\n    this.typeColumn,\n    new ModelDeviceGridColumn(),\n    new GroupDeviceGridColumn(),\n    new RegistrationDateDeviceGridColumn(),\n    new AlarmsDeviceGridColumn()\n  ];\n\n  private unsubscribe$: Subject<boolean> = new Subject();\n\n  ngOnInit(): void {\n    if (this.deviceTypes) {\n      this.deviceTypes\n        .pipe(\n          distinctUntilChanged(),\n          takeUntil(this.unsubscribe$)\n        )\n        .subscribe((types: string[]) => {\n          this.deviceGrid.updateFiltering([this.typeColumn.name], {\n            type:\n              types && types.length\n                ? FilteringActionType.ApplyFilter\n                : FilteringActionType.ResetFilter,\n            payload: types\n              ? {\n                  filteringModifier: {\n                    externalFilterQuery: {\n                      types\n                    }\n                  }\n                }\n              : undefined\n          });\n        });\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.unsubscribe$.next(true);\n    this.unsubscribe$.complete();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CoreModule } from '@c8y/ngx-components';\nimport { DeviceGridModule } from '@c8y/ngx-components/device-grid';\nimport { DeviceSelectorComponent } from './device-selector.component';\n\n/**\n * This module provides a component for selecting devices based on filters.\n */\n@NgModule({\n  imports: [CoreModule, DeviceGridModule],\n  declarations: [DeviceSelectorComponent],\n  exports: [DeviceSelectorComponent]\n})\nexport class DeviceSelectorModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["TypeDeviceGridColumn","EventEmitter","StatusDeviceGridColumn","NameDeviceGridColumn","ModelDeviceGridColumn","GroupDeviceGridColumn","RegistrationDateDeviceGridColumn","AlarmsDeviceGridColumn","Subject","distinctUntilChanged","takeUntil","FilteringActionType","Component","ViewChild","DeviceGridComponent","Input","Output","NgModule","CoreModule","DeviceGridModule"],"mappings":";;;;;;;QAuBA;YAWE,eAAU,GAAW,IAAIA,+BAAoB,EAAE,CAAC;YAGhD,8BAAyB,GAAyB,IAAIC,iBAAY,EAAU,CAAC;YAE7E,YAAO,GAAa;gBAClB,IAAIC,iCAAsB,EAAE;gBAC5B,IAAIC,+BAAoB,EAAE;gBAC1B,IAAI,CAAC,UAAU;gBACf,IAAIC,gCAAqB,EAAE;gBAC3B,IAAIC,gCAAqB,EAAE;gBAC3B,IAAIC,2CAAgC,EAAE;gBACtC,IAAIC,iCAAsB,EAAE;aAC7B,CAAC;YAEM,iBAAY,GAAqB,IAAIC,YAAO,EAAE,CAAC;SAiCxD;QA/BC,0CAAQ,GAAR;YAAA,iBAyBC;YAxBC,IAAI,IAAI,CAAC,WAAW,EAAE;gBACpB,IAAI,CAAC,WAAW;qBACb,IAAI,CACHC,8BAAoB,EAAE,EACtBC,mBAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAC7B;qBACA,SAAS,CAAC,UAAC,KAAe;oBACzB,KAAI,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE;wBACtD,IAAI,EACF,KAAK,IAAI,KAAK,CAAC,MAAM;8BACjBC,iCAAmB,CAAC,WAAW;8BAC/BA,iCAAmB,CAAC,WAAW;wBACrC,OAAO,EAAE,KAAK;8BACV;gCACE,iBAAiB,EAAE;oCACjB,mBAAmB,EAAE;wCACnB,KAAK,OAAA;qCACN;iCACF;6BACF;8BACD,SAAS;qBACd,CAAC,CAAC;iBACJ,CAAC,CAAC;aACN;SACF;QAED,6CAAW,GAAX;YACE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC7B,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;SAC9B;;;;gBA1DFC,cAAS,SAAC;oBACT,QAAQ,EAAE,qBAAqB;oBAC/B,wgBAA6C;iBAC9C;;;6BAEEC,cAAS,SAACC,8BAAmB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;8BAG/CC,UAAK;4CAKLC,WAAM;;;IC/BT;;;;QAQA;;;;;gBALCC,aAAQ,SAAC;oBACR,OAAO,EAAE,CAACC,wBAAU,EAAEC,2BAAgB,CAAC;oBACvC,YAAY,EAAE,CAAC,uBAAuB,CAAC;oBACvC,OAAO,EAAE,CAAC,uBAAuB,CAAC;iBACnC;;;ICZD;;;;;;;;;;;;;"}