{"version":3,"file":"c8y-ngx-components-sms-gateway.umd.js","sources":["../../sms-gateway/pattern-messages.data.ts","../../sms-gateway/sms-gateway.guard.ts","../../sms-gateway/sms-gateway.module.ts","../../sms-gateway/c8y-ngx-components-sms-gateway.ts"],"sourcesContent":["import { gettext } from '@c8y/ngx-components';\n\nexport const MESSAGES = {\n  '^Sender name$': {\n    gettext: gettext('Sender name')\n  },\n  '^Sender name used for sent SMS$': {\n    gettext: gettext('Sender name used for sent SMS')\n  },\n  '^Sender address$': {\n    gettext: gettext('Sender address')\n  },\n  '^Sender address used for sent SMS$': {\n    gettext: gettext('Sender address used for sent SMS')\n  },\n  '^Username$': {\n    gettext: gettext('Username')\n  },\n  '^Password$': {\n    gettext: gettext('Password')\n  },\n  '^Licence key$': {\n    gettext: gettext('License key')\n  },\n  '^Key$': {\n    gettext: gettext('Key')\n  },\n  '^API base URL$': {\n    gettext: gettext('API base URL')\n  },\n  '^API URL$': {\n    gettext: gettext('API URL')\n  },\n  '^oauth$': {\n    gettext: gettext('OAuth')\n  },\n  '^basic$': {\n    gettext: gettext('Basic')\n  },\n  '^Authentication method$': {\n    gettext: gettext('Authentication method')\n  },\n  '^Defines which authentication method is used with the provider$': {\n    gettext: gettext('Defines which authentication method is used with the provider')\n  },\n  '^Static headers$': {\n    gettext: gettext('Static headers')\n  },\n  '^Static headers that should be added to requests towards the provider$': {\n    gettext: gettext('Static headers that should be added to requests towards the provider')\n  },\n  '^OAuth token URL$': {\n    gettext: gettext('OAuth token URL')\n  },\n  '^URL where the OAuth token is requested from (required if OAuth method is chosen)$': {\n    gettext: gettext(\n      'URL where the OAuth token is requested from (required if OAuth method is chosen)'\n    )\n  },\n  '^OAuth toke mime type$': {\n    gettext: gettext('OAuth token mime type')\n  },\n  '^Overrides the OAuth token response mime type$': {\n    gettext: gettext('Overrides the OAuth token response mime type')\n  },\n  '^OAuth access toke type$': {\n    gettext: gettext('OAuth access token type')\n  },\n  '^Overrides the OAuth access token type$': {\n    gettext: gettext('Overrides the OAuth access token type')\n  },\n  '^Global configuration$': {\n    gettext: gettext('Global configuration')\n  },\n  '^Enables or disables if the settings may be used globally for all tenants (Only possible in management tenant)$': {\n    gettext: gettext(\n      'Enables or disables the settings globally for all tenants (only possible in management tenant)'\n    )\n  },\n  '^API key$': {\n    gettext: gettext('API key')\n  },\n  '^Inherit to subtenants$': {\n    gettext: gettext('Inherit to subtenants')\n  },\n  \"^Enables or disables if this tenant's configuration may be inherited to subtenants$\": {\n    gettext: gettext(\n      'Enables or disables the option to inherit the tenant configuration to subtenants'\n    )\n  },\n  '^Login$': {\n    gettext: gettext('Login')\n  },\n  '^Source business unit ID$': {\n    gettext: gettext('Source business unit ID')\n  },\n  '^Client ID$': {\n    gettext: gettext('Client ID')\n  },\n  '^Client secret$': {\n    gettext: gettext('Client secret')\n  }\n};\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot } from '@angular/router';\nimport { ApplicationService } from '@c8y/client';\nimport { Permissions } from '@c8y/ngx-components';\n\n@Injectable()\nexport class SmsGatewayGuard implements CanActivate {\n  private static readonly applicationName = 'sms-gateway';\n  private showSMSProvider: Promise<boolean>;\n\n  constructor(private permissions: Permissions, private applicationService: ApplicationService) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise<boolean> {\n    if (this.showSMSProvider === undefined) {\n      const hasRole: Promise<boolean> = Promise.resolve(this.permissions.hasRole('ROLE_SMS_READ'));\n\n      this.showSMSProvider = hasRole.then(\n        (hasPermissions: boolean) =>\n          hasPermissions &&\n          this.applicationService\n            .isAvailable(SmsGatewayGuard.applicationName)\n            .then(result => result && result.data)\n      );\n    }\n\n    return this.showSMSProvider;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { gettext, HOOK_PATTERN_MESSAGES, ProviderConfigurationModule } from '@c8y/ngx-components';\nimport { MESSAGES } from './pattern-messages.data';\nimport { SmsGatewayGuard } from './sms-gateway.guard';\n\n@NgModule({\n  imports: [\n    ProviderConfigurationModule.config([\n      {\n        navigation: {\n          label: gettext('SMS provider'),\n          path: 'smsgateway',\n          icon: 'envelope-o',\n          parent: gettext('Settings'),\n          priority: 1000,\n          canActivate: [SmsGatewayGuard]\n        },\n        layout: {\n          pageTitle: gettext('SMS provider'),\n          cardTitle: gettext('Credentials'),\n          description: gettext(\n            'Enter your credentials from your SMS provider. This enables platform features that utilize SMS services (e.g. two-factor authentication and user notifications).'\n          ),\n          providerName: gettext('SMS provider'),\n          providerNamePlaceholder: gettext('Select or type to filter providers'),\n          providerNameNoMatchesHint: gettext('Select one of the existing providers.'),\n          deleteRoles: ['ROLE_SMS_ADMIN'],\n          deleteBtnLabel: gettext('Delete'),\n          saveRoles: ['ROLE_SMS_ADMIN'],\n          saveBtnLabel: gettext('Save'),\n          configurationUpdatedSuccessMsg: gettext('Credentials updated.'),\n          deleteConfigurationModalTitle: gettext('Delete credentials'),\n          deleteConfigurationModalBody: gettext(\n            `You are about to delete SMS provider credentials. Deleting credentials will lock out any users with SMS-based two-factor authentication and deactivate the SMS-based smart rules and device communication. Do you want to proceed?`\n          ),\n          deleteConfigurationModalOkBtnLabel: gettext('Delete'),\n          configurationDeletedSuccessMsg: gettext('Credentials deleted.')\n        },\n        endpoint: {\n          definitionsEndpoint: {\n            baseUrl: 'service/messaging/providers',\n            listUrl: 'definitions'\n          },\n          configurationEndpoint: {\n            baseUrl: 'service/messaging/providers',\n            listUrl: 'configuration'\n          }\n        }\n      }\n    ])\n  ],\n  providers: [SmsGatewayGuard, { provide: HOOK_PATTERN_MESSAGES, useValue: MESSAGES, multi: true }]\n})\nexport class SmsGatewayModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["gettext","Injectable","Permissions","ApplicationService","NgModule","ProviderConfigurationModule","HOOK_PATTERN_MESSAGES"],"mappings":"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"}