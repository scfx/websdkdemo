import { EventEmitter, OnInit } from '@angular/core';
import { ActionControl, BulkActionControl, DataGridComponent, DataSourceModifier, FilteringActionType, FilteringModifier, LoadMoreMode, Pagination, ServerSideDataResult, GridConfig, HeaderActionControl } from '@c8y/ngx-components';
import { DeviceGridColumn, DataCallback } from './device-grid.models';
import { DeviceGridService } from './device-grid.service';
export declare class DeviceGridComponent implements OnInit {
    deviceGridService: DeviceGridService;
    /** Optional callback function that allows to modify server side data result before it's rendered. */
    dataCallback: DataCallback;
    /** Takes an event emitter. When an event is emitted, the grid will be reloaded. */
    refresh: EventEmitter<any>;
    /** The title for the data grid, it's displayed in the grid's header. */
    title: string;
    /** The label for load more button. */
    loadMoreItemsLabel: any;
    /** The label for loading indicator. */
    loadingItemsLabel: string;
    /** The list of columns to be displayed in the grid. If not given, it defaults to standard columns. */
    set _columns(value: DeviceGridColumn[]);
    /** Pagination settings, e.g. allows for setting current page or page size. If not given, defaults to standard settings. */
    set _pagination(value: Pagination);
    infiniteScroll: LoadMoreMode;
    /** Sets load more mode. */
    set _infiniteScroll(infiniteScroll: LoadMoreMode);
    /** Sets action controls (actions available for individual items). If not given, it defaults to standard actions. */
    set _actionControls(value: ActionControl[]);
    /** Determines whether items can be selected by clicking a checkbox in the first column. */
    selectable: boolean;
    /** Sets the base query which is appended to the request for data. */
    baseQuery: any;
    /** Sets bulk action controls (actions available for items selected by user). If not given, it defaults to standard bulk actions. */
    set _bulkActionControls(value: BulkActionControl[]);
    /** Sets header action controls (actions available from the grid header). If not given, it defaults to empty list of actions. */
    set _headerActionControls(value: HeaderActionControl[]);
    childDeviceGrid: boolean;
    parentDeviceId: string;
    /** Sets the withChildren query which is appended to the request. */
    withChildren: boolean;
    /** Emits an event when columns configuration changes. */
    onColumnsChange: EventEmitter<DeviceGridColumn[]>;
    onDeviceQueryStringChange: EventEmitter<string>;
    /** Emits an event when items selection changes. The array contains ids of selected items. */
    itemsSelect: EventEmitter<string[]>;
    actionControls: ActionControl[];
    columns: DeviceGridColumn[];
    pagination: Pagination;
    bulkActionControls: BulkActionControl[];
    headerActionControls: HeaderActionControl[];
    serverSideDataCallback: any;
    dataGrid: DataGridComponent;
    constructor(deviceGridService: DeviceGridService);
    ngOnInit(): void;
    trackByName(_index: any, column: DeviceGridColumn): string;
    onDataSourceModifier(dataSourceModifier: DataSourceModifier): Promise<ServerSideDataResult>;
    setActionControls(): Promise<void>;
    onDeleteDevice(device: any): Promise<void>;
    updateFiltering(columnNames: string[], action: {
        type: FilteringActionType;
        payload?: {
            filteringModifier: FilteringModifier;
        };
    }): void;
    configChange(config: GridConfig): void;
}
