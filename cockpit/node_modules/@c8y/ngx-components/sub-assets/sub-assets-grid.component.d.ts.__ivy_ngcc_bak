import { EventEmitter, OnInit, SimpleChanges } from '@angular/core';
import { IManagedObject, SmartGroupsService } from '@c8y/client';
import { ActionControl, BulkActionControl, DataGridComponent, DataSourceModifier, DisplayOptions, Pagination, ServerSideDataResult } from '@c8y/ngx-components';
import { DeviceGridColumn } from '@c8y/ngx-components/device-grid';
import { BsModalService } from 'ngx-bootstrap/modal';
import { SubAssetsService } from './sub-assets.service';
export declare class SubAssetsGridComponent implements OnInit {
    subAssetsGridService: SubAssetsService;
    private bsModalService;
    private smartGroupsService;
    parentGroup: IManagedObject;
    refresh: EventEmitter<any>;
    title: string;
    emptyStateText: string;
    loadingItemsLabel: string;
    get columns(): DeviceGridColumn[];
    set columns(value: DeviceGridColumn[]);
    set _pagination(value: Pagination);
    set _actionControls(value: ActionControl[]);
    selectable: boolean;
    baseQuery: any;
    set _bulkActionControls(value: BulkActionControl[]);
    filterable: boolean;
    sortable: boolean;
    onColumnsChange: EventEmitter<DeviceGridColumn[]>;
    itemsSelect: EventEmitter<string[]>;
    pagination: Pagination;
    showCounterWarning: boolean;
    actionControls: ActionControl[];
    bulkActionControls: BulkActionControl[];
    serverSideDataCallback: any;
    dataGrid: DataGridComponent;
    displayOptions: DisplayOptions;
    private _columns;
    get isRootGroup(): boolean;
    get getInfiniteScrollMode(): string;
    set _displayOptions(displayOptions: any);
    constructor(subAssetsGridService: SubAssetsService, bsModalService: BsModalService, smartGroupsService: SmartGroupsService);
    ngOnInit(): void;
    setActionControls(): Promise<void>;
    onUnassignAsset(asset: IManagedObject, parentRef: IManagedObject): void;
    onDeleteAsset(asset: IManagedObject, parentRef: IManagedObject): Promise<void>;
    ngOnChanges(changes: SimpleChanges): void;
    trackByName(_index: any, column: DeviceGridColumn): string;
    onDataSourceModifier(dataSourceModifier: DataSourceModifier): Promise<ServerSideDataResult>;
    configChange(config: any): void;
}
