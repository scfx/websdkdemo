{"version":3,"file":"search-grid.component.d.ts","sources":["search-grid.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter } from '@angular/core';\nimport { ActionControl, BulkActionControl, DataGridComponent, DataSourceModifier, FilteringActionType, FilteringModifier, Pagination, ServerSideDataResult } from '@c8y/ngx-components';\nimport { DeviceGridColumn } from '@c8y/ngx-components/device-grid';\nimport { IManagedObject, SmartGroupsService } from '@c8y/client';\nimport { AssetSearchService } from './search.service';\nimport { SubAssetsService } from '@c8y/ngx-components/sub-assets';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nexport declare class SearchGridComponent {\n    searchService: AssetSearchService;\n    private bsModalService;\n    private smartGroupsService;\n    private subAssetsGridService;\n    parentGroup: IManagedObject;\n    title: string;\n    loadingItemsLabel: string;\n    set _columns(value: DeviceGridColumn[]);\n    set _pagination(value: Pagination);\n    set _actionControls(value: ActionControl[]);\n    selectable: boolean;\n    set _bulkActionControls(value: BulkActionControl[]);\n    onColumnsChange: EventEmitter<DeviceGridColumn[]>;\n    searchText: string;\n    filteringName: string;\n    columns: DeviceGridColumn[];\n    pagination: Pagination;\n    actionControls: ActionControl[];\n    bulkActionControls: BulkActionControl[];\n    serverSideDataCallback: any;\n    refresh: EventEmitter<any>;\n    dataGrid: DataGridComponent;\n    private sizeCount;\n    constructor(searchService: AssetSearchService, bsModalService: BsModalService, smartGroupsService: SmartGroupsService, subAssetsGridService: SubAssetsService);\n    ngOnInit(): void;\n    trackByName(_index: any, column: DeviceGridColumn): string;\n    onDataSourceModifier(dataSourceModifier: DataSourceModifier): Promise<ServerSideDataResult>;\n    setActionControls(): void;\n    updateFiltering(columnNames: string[], action: {\n        type: FilteringActionType;\n        payload?: {\n            filteringModifier: FilteringModifier;\n        };\n    }): void;\n    configChange(config: any): void;\n    private onDeleteAsset;\n}\n"]}