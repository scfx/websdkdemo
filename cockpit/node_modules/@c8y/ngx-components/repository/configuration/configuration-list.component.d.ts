import { OnInit, Pipe } from '@angular/core';
import { IManagedObject, InventoryBinaryService, InventoryService, IResultList } from '@c8y/client';
import { AlertService, FilterInputComponent, ModalService } from '@c8y/ngx-components';
import { TranslateService } from '@ngx-translate/core';
import { BsModalService } from 'ngx-bootstrap/modal';
import { Observable } from 'rxjs';
import { RepositoryService } from '../repository.service';
import * as ɵngcc0 from '@angular/core';
export declare class ConfigurationListComponent implements OnInit {
    private alert;
    private repositoryService;
    private bsModalService;
    private modalService;
    private translateService;
    private inventoryBinaryService;
    private inventoryService;
    filter: FilterInputComponent;
    configurations$: Observable<IResultList<IManagedObject>>;
    filterPipe: Pipe;
    filterTerm: string;
    reloading: boolean;
    data: any;
    private readonly DELETED_SUCCESS_MSG;
    constructor(alert: AlertService, repositoryService: RepositoryService, bsModalService: BsModalService, modalService: ModalService, translateService: TranslateService, inventoryBinaryService: InventoryBinaryService, inventoryService: InventoryService);
    ngOnInit(): void;
    loadConfigurations(): Promise<void>;
    add(): Promise<void>;
    edit(configuration: IManagedObject): Promise<void>;
    isBinaryFile(configuration: IManagedObject): boolean;
    getBinaryName(configuration: IManagedObject): Observable<string>;
    download(configuration: IManagedObject): Promise<void>;
    delete(configuration: IManagedObject): Promise<void>;
    setPipe(filterTerm: string): void;
    shouldShowEmptyState(): boolean;
    reset(): void;
    private filterContainString;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ConfigurationListComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ConfigurationListComponent, "c8y-configuration-list", never, {}, {}, never, never>;
}

//# sourceMappingURL=configuration-list.component.d.ts.map