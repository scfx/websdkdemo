import { EventEmitter, OnChanges, SimpleChanges } from '@angular/core';
import { BehaviorSubject } from 'rxjs';
import { DeviceSoftwareChange } from '../repository.model';
import * as ɵngcc0 from '@angular/core';
export declare class DeviceSoftwareChangesComponent implements OnChanges {
    changes: DeviceSoftwareChange[];
    changesInProgress: boolean;
    clear: EventEmitter<void>;
    drop: EventEmitter<DeviceSoftwareChange>;
    apply: EventEmitter<void>;
    hideSoftwareChanges: EventEmitter<void>;
    changes$: BehaviorSubject<DeviceSoftwareChange[]>;
    installations$: import("rxjs").Observable<DeviceSoftwareChange[]>;
    removals$: import("rxjs").Observable<DeviceSoftwareChange[]>;
    ngOnChanges(changes: SimpleChanges): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<DeviceSoftwareChangesComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<DeviceSoftwareChangesComponent, "c8y-device-software-changes", never, { "changes": "changes"; "changesInProgress": "changesInProgress"; }, { "clear": "clear"; "drop": "drop"; "apply": "apply"; "hideSoftwareChanges": "hideSoftwareChanges"; }, never, never>;
}

//# sourceMappingURL=device-software-changes.component.d.ts.map