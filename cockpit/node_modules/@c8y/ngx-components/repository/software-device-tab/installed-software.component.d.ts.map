{"version":3,"file":"installed-software.component.d.ts","sources":["installed-software.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter, OnInit } from '@angular/core';\nimport { IManagedObject, IOperation } from '@c8y/client';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { RepositoryService } from '../repository.service';\nimport { DeviceSoftware, DeviceSoftwareChange, SoftwareFilterCriteria } from './../repository.model';\nexport declare class InstalledSoftwareComponent implements OnInit {\n    private repository;\n    private bsModal;\n    device: IManagedObject;\n    softwareList: DeviceSoftware[];\n    deviceSoftwareChanges: DeviceSoftwareChange[];\n    deviceSoftwareChangesOperation: IOperation;\n    deviceSoftwareChangesInProgress: boolean;\n    deviceTypeQuery: object;\n    changes: EventEmitter<DeviceSoftwareChange[]>;\n    showSoftwareChanges: EventEmitter<void>;\n    showFilter: boolean;\n    supportsSoftwareOperations: boolean;\n    textFilter$: BehaviorSubject<string>;\n    softwareTypeFilter$: BehaviorSubject<string>;\n    filterCriteria$: Observable<SoftwareFilterCriteria>;\n    private readonly operationTypes;\n    constructor(repository: RepositoryService, bsModal: BsModalService);\n    ngOnInit(): void;\n    installSoftware(): void;\n    updateSoftware(softwareToRemove: any): void;\n    removeSoftware(softwareToRemove: any): void;\n    getInstallableSoftwareListWithVersions$(searchTerm$: BehaviorSubject<string>): Observable<IManagedObject[]>;\n    getSingleSoftwareWithVersions$(software: DeviceSoftware): Observable<IManagedObject[]>;\n    attachVersions(softwareList: IManagedObject[]): IManagedObject[];\n    displaySoftwareSelectModal(initialStateOverrides: any): EventEmitter<import(\"./../repository.model\").SelectedRepositoryBinary[]>;\n    emitSoftwareInstall(items: DeviceSoftware[]): void;\n    emitSoftwareRemoval(items: DeviceSoftware[]): void;\n}\n"]}