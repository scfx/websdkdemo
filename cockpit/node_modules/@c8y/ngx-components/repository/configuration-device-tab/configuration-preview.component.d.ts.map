{"version":3,"file":"configuration-preview.component.d.ts","sources":["configuration-preview.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnDestroy, OnInit } from '@angular/core';\nimport { ConfigurationSnapshot, DeviceConfigurationOperation } from '../repository.model';\nimport { IManagedObject, IOperation, OperationService, UserService } from '@c8y/client';\nimport { DeviceConfigurationService } from './device-configuration.service';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { AlertService, AppStateService, OperationRealtimeService } from '@c8y/ngx-components';\nimport { RepositoryService } from '../repository.service';\nexport declare class ConfigurationPreviewComponent implements OnInit, OnDestroy {\n    private deviceConfigurationService;\n    private operationRealtime;\n    private bsModal;\n    private user;\n    private appState;\n    private repositoryService;\n    private operationService;\n    private alertService;\n    device: IManagedObject;\n    set configurationType(type: string);\n    get configurationType(): string;\n    configSnapshot: ConfigurationSnapshot;\n    canSaveSnapshot: boolean;\n    actionButtonText: string;\n    actionButtonIcon: string;\n    isLegacy: boolean;\n    operationToTrigger: DeviceConfigurationOperation.UPLOAD_CONFIG | DeviceConfigurationOperation.DOWNLOAD_CONFIG;\n    operation: IOperation;\n    canCallAction: boolean;\n    deviceConfigurationOperation: typeof DeviceConfigurationOperation;\n    private _configurationType;\n    private operationsSubscription;\n    constructor(deviceConfigurationService: DeviceConfigurationService, operationRealtime: OperationRealtimeService, bsModal: BsModalService, user: UserService, appState: AppStateService, repositoryService: RepositoryService, operationService: OperationService, alertService: AlertService);\n    ngOnInit(): Promise<void>;\n    setOperation(configType: any): Promise<void>;\n    setCanCallAction(): void;\n    createDeviceOperation(): Promise<void>;\n    showOperation(): boolean;\n    showBinary(): boolean;\n    isCreateOperationDisabled(): boolean;\n    updatePreview(operation: IOperation): void;\n    download(): void;\n    saveToRepository(): Promise<void>;\n    hasPermission(): boolean;\n    ngOnDestroy(): void;\n    private updateSnapshotsOnConfigUpload;\n}\n"]}