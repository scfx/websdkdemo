import { AfterViewInit, ChangeDetectorRef, ElementRef, OnInit } from '@angular/core';
import { IManagedObject, IResultList } from '@c8y/client';
import { FilteringFormRendererContext, TypeaheadComponent } from '@c8y/ngx-components';
import { BehaviorSubject, Observable, UnaryFunction } from 'rxjs';
import { RepositoryService } from '../../repository.service';
export declare class SoftwareTypeFilteringFormRendererComponent implements OnInit, AfterViewInit {
    context: FilteringFormRendererContext;
    changeDetectorRef: ChangeDetectorRef;
    private repositoryService;
    private elementRef;
    selectedType: IManagedObject;
    softwareWithType$: Observable<IResultList<IManagedObject>>;
    search$: BehaviorSubject<string>;
    filterPipe: UnaryFunction<unknown, unknown>;
    typeaheadPlaceholder: any;
    typeahead: TypeaheadComponent;
    private queriesUtil;
    private softwareTypes;
    constructor(context: FilteringFormRendererContext, changeDetectorRef: ChangeDetectorRef, repositoryService: RepositoryService, elementRef: ElementRef);
    onEnterKeyDown(event: KeyboardEvent): void;
    onEscapeKeyDown(event: KeyboardEvent): void;
    ngOnInit(): void;
    ngAfterViewInit(): void;
    applyFilter(): void;
    private removeDuplicatesBySoftwareType;
}
