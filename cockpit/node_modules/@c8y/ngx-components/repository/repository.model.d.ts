import { IManagedObject } from '@c8y/client';
export declare enum RepositoryType {
    FIRMWARE = "c8y_Firmware",
    SOFTWARE = "c8y_Software",
    CONFIGURATION = "c8y_ConfigurationDump"
}
export declare const REPOSITORY_BINARY_TYPES: {
    c8y_Software: string;
    c8y_Firmware: string;
    c8y_ConfigurationDump: string;
};
export interface ModalModel {
    selected?: {
        id?: string;
        name?: string;
        [key: string]: any;
    };
    version?: string;
    dependency?: {
        c8y_Firmware: {
            version: string;
        };
    };
    patchVersion?: string;
    description?: string;
    deviceType?: string;
    softwareType?: any;
    binary?: {
        file?: File;
        url?: string;
    };
}
export interface RepositoryCategory extends Partial<IManagedObject> {
    type: string;
    description?: string;
    c8y_Filter?: {
        type: string;
    };
}
export interface FirmwareBinary extends Partial<IManagedObject> {
    type: 'c8y_FirmwareBinary';
    c8y_Firmware: {
        version: string;
        url: string;
    };
}
export interface FirmwarePatchBinary extends FirmwareBinary {
    c8y_Patch: {
        dependency: string;
    };
}
export interface SoftwareBinary extends Partial<IManagedObject> {
    type: string;
    c8y_Software: {
        version: string;
        url: string;
    };
}
export declare type RepositoryBinary = FirmwareBinary | SoftwareBinary | FirmwarePatchBinary;
export interface SelectedRepositoryBinary {
    id?: string;
    name: string;
    version: string;
    url: string;
    dependency?: string;
    c8y_Patch?: boolean;
    isPatch?: boolean;
    patchDependency?: string;
}
export interface DeviceFirmware {
    version: string;
    url: string;
    name: string;
}
export interface DeviceSoftware {
    name: string;
    version?: string;
    url: string;
    softwareType?: string;
}
export interface DeviceSoftwareChange extends DeviceSoftware {
    action: 'install' | 'delete';
}
export interface ConfigurationSnapshot {
    id?: string;
    time: string;
    name: string;
    binaryUrl?: string;
    binary?: any;
    binaryType?: any;
    deviceType?: string;
    configurationType?: string;
    description?: string;
}
export interface SupportedConfigurationItem {
    name: string;
    deviceType?: string;
    configurationType?: string;
    isLegacy?: boolean;
}
export interface DeviceConfigurationListEmptyState {
    icon?: string;
    title?: string;
    text?: string;
}
export interface SoftwareFilterCriteria {
    name?: string;
    softwareType?: string;
}
export declare enum DeviceConfigurationOperation {
    UPLOAD_CONFIG = "c8y_UploadConfigFile",
    DOWNLOAD_CONFIG = "c8y_DownloadConfigFile",
    CONFIG = "c8y_Configuration",
    SEND_CONFIG = "c8y_SendConfiguration"
}
