import { EventEmitter } from '@angular/core';
import { BsModalRef } from 'ngx-bootstrap/modal';
import { RepositoryService } from '../repository.service';
import { ModalModel, RepositoryCategory } from '../repository.model';
import { AlertService } from '@c8y/ngx-components';
import { IManagedObject, IResultList } from '@c8y/client';
import { BehaviorSubject, Observable } from 'rxjs';
import { BsDropdownDirective } from 'ngx-bootstrap/dropdown';
import { NgForm } from '@angular/forms';
import { PickedFiles } from '@c8y/ngx-components';
export declare class AddFirmwarePatchModalComponent {
    private modal;
    private repository;
    private alert;
    saved: EventEmitter<RepositoryCategory>;
    dropdown: BsDropdownDirective;
    form: NgForm;
    textForFirmwareUrlPopover: string;
    model: ModalModel;
    firmwareInput$: BehaviorSubject<string>;
    firmwares$: Observable<IResultList<IManagedObject>>;
    firmwareSelected$: BehaviorSubject<Partial<RepositoryCategory>>;
    patchDependencyInput$: BehaviorSubject<string>;
    saving: boolean;
    firmwarePreselected: boolean;
    baseVersions$: Observable<IResultList<IManagedObject>>;
    baseVersionsFilterPipe: import("rxjs").UnaryFunction<Observable<[]>, Observable<never[]>>;
    constructor(modal: BsModalRef, repository: RepositoryService, alert: AlertService);
    ngOnInit(): Promise<void>;
    setInitialState(): void;
    save(): Promise<void>;
    successMsg(): void;
    cancel(): void;
    onFile(dropped: PickedFiles): void;
}
