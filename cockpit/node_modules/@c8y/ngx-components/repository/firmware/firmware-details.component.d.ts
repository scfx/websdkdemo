import { OnDestroy, OnInit } from '@angular/core';
import { ActivatedRoute } from '@angular/router';
import { IManagedObject, InventoryService, IResultList } from '@c8y/client';
import { AlertService, ModalService } from '@c8y/ngx-components';
import { TranslateService } from '@ngx-translate/core';
import { BsModalService } from 'ngx-bootstrap/modal';
import { BehaviorSubject, Observable, Subject } from 'rxjs';
import { FirmwareBinary } from '../repository.model';
import { RepositoryService } from './../repository.service';
import * as ɵngcc0 from '@angular/core';
export declare class FirmwareDetailsComponent implements OnInit, OnDestroy {
    private activatedRoute;
    private inventoryService;
    private repositoryService;
    private alertService;
    private translateService;
    private modalService;
    private bsModalService;
    reload$: Subject<void>;
    reloading$: BehaviorSubject<boolean>;
    updateFirmware$: Subject<Partial<IManagedObject>>;
    firmwareUpdated$: Subject<IManagedObject>;
    baseVersionsUpdated$: Subject<void>;
    patchVersionsUpdated$: Subject<void>;
    firmware$: Observable<IManagedObject>;
    baseVersions$: Observable<IResultList<IManagedObject>>;
    isLegacy$: Observable<boolean>;
    canAddPatchVersions$: Observable<boolean>;
    expanded: {
        [id: string]: boolean;
    };
    destroy$: Subject<boolean>;
    constructor(activatedRoute: ActivatedRoute, inventoryService: InventoryService, repositoryService: RepositoryService, alertService: AlertService, translateService: TranslateService, modalService: ModalService, bsModalService: BsModalService);
    ngOnInit(): void;
    getPatchVersionsCount$(baseVersion: FirmwareBinary): Observable<number>;
    getBinaryName$(binaryUrl: any): Observable<string>;
    getPatchVersions$(baseVersion: any): Observable<IResultList<IManagedObject>>;
    addBaseVersion(): void;
    addPatchVersion(): void;
    deleteBaseVersion(baseVersion: IManagedObject): Promise<void>;
    deletePatchVersion(patchVersion: IManagedObject): Promise<void>;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<FirmwareDetailsComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<FirmwareDetailsComponent, "c8y-firmware-details", never, {}, {}, never, never>;
}

//# sourceMappingURL=firmware-details.component.d.ts.map