{"version":3,"file":"context-dashboard.service.d.ts","sources":["context-dashboard.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ActivatedRouteSnapshot, Router } from '@angular/router';\nimport { IManagedObject, InventoryService, UserService } from '@c8y/client';\nimport { AppStateService, ModalService, NavigatorService, TabsService, Widget, Permissions } from '@c8y/ngx-components';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ContextDashboard, ContextDashboardManagedObject, ContextDashboardType } from './context-dashboard.model';\nexport declare class ContextDashboardService {\n    private inventory;\n    private tabs;\n    private modal;\n    private translateService;\n    private router;\n    private user;\n    private appState;\n    private navigator;\n    private permissions;\n    readonly REPORT_PARTIAL_NAME = \"report_\";\n    private cache;\n    private readonly DEFAULT_PAGESIZE;\n    private readonly FRAGMENT_NAME;\n    private readonly DASHBOARD_ROUTE_PATH;\n    private readonly INDEX_SPLIT;\n    private currentContextRoute;\n    private _formDisabled;\n    get formDisabled(): boolean;\n    set formDisabled(value: boolean);\n    constructor(inventory: InventoryService, tabs: TabsService, modal: ModalService, translateService: TranslateService, router: Router, user: UserService, appState: AppStateService, navigator: NavigatorService, permissions: Permissions);\n    create(dashboardCfg: ContextDashboard, context?: {\n        contextData: any;\n    }, name?: string): Promise<ContextDashboardManagedObject>;\n    detail(dashboardMO: ContextDashboardManagedObject): Promise<IManagedObject>;\n    update(dashboard: ContextDashboardManagedObject): Promise<IManagedObject>;\n    delete(dashboard: ContextDashboardManagedObject, withConfirmation?: boolean): Promise<void>;\n    activateDashboards(route: ActivatedRouteSnapshot, types: ContextDashboardType[]): import(\"rxjs\").Observable<boolean> | import(\"rxjs\").Observable<{\n        icon: string;\n        path: string;\n        label: string;\n        priority: number;\n        hide: any;\n    }[]>;\n    getNamedDashboardOrCreate(name: string, defaultWidgets: Widget[], context?: {\n        contextData: any;\n    }): import(\"rxjs\").Observable<ContextDashboardManagedObject>;\n    refreshTabs(dashboardMO: ContextDashboardManagedObject): Promise<void>;\n    updateNavigatorItem(mo: IManagedObject): void;\n    navigateToDashboard(dashboardMO: ContextDashboardManagedObject): Promise<void>;\n    canEditDashboard(mo: any): Promise<boolean>;\n    isNamed(dashboard: Partial<ContextDashboardManagedObject>): any;\n    isReport(dashboard: Partial<ContextDashboardManagedObject>): any;\n    isDeviceType(dashboard: Partial<ContextDashboardManagedObject>): any;\n    getFilteredDashboardStyles(styleList: string[]): string[];\n    getStyling(styleList: any, styleName: any, defaultValue: any): any;\n    mapWidgets(widgets: Widget[]): any;\n    getDashboard$(dashboardIdOrName: any, dashboardType: ContextDashboardType[], mo?: IManagedObject): import(\"rxjs\").Observable<ContextDashboardManagedObject>;\n    private getTabs$;\n    private getContextDashboards$;\n    private setBaseContextRoute;\n    /**\n     * Cleans already corrupted dashboards from dashboardMo property.\n     * Added to fix dashboards on the cloud instance (eu-latest).\n     * @deprecated This is going to be removed after 1007.7.0.\n     */\n    private removeDashboardMoProperty;\n    private cacheDashboard;\n    private createDashboardTab;\n    private clean;\n    private getNamedDashboard;\n    private getContextDashboards;\n    private createDashboardFragment;\n    private getDashboardTypeFromViewContext;\n    private createFragmentKey;\n    private shouldSetGlobal;\n}\n"]}