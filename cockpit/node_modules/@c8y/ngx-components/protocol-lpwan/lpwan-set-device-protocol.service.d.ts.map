{"version":3,"file":"lpwan-set-device-protocol.service.d.ts","sources":["lpwan-set-device-protocol.service.d.ts"],"names":[],"mappings":"AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { IManagedObject, InventoryService, IResultList, FetchClient, IdentityService } from '@c8y/client';\nexport declare class LpwanSetDeviceProtocolService {\n    private inventoryService;\n    private client;\n    private identityService;\n    supportedDevicesCfgs: {\n        name: string;\n        match: (device: any) => boolean;\n        protocolTypes: string[];\n        externalIdTypes: string[];\n    }[];\n    private readonly header;\n    constructor(inventoryService: InventoryService, client: FetchClient, identityService: IdentityService);\n    refreshCache(device: any): Promise<import(\"@c8y/client\").IFetchResponse>;\n    getMicroserviceUrl(device: any): string;\n    isSupportedDevice(device: IManagedObject): boolean;\n    getCurrentProtocol(device: IManagedObject): Promise<IManagedObject>;\n    applyProtocol(device: IManagedObject, selectedProtocol: IManagedObject): Promise<import(\"@c8y/client\").IResult<IManagedObject>>;\n    getAvailableProtocols(device: IManagedObject): Promise<IResultList<IManagedObject>>;\n    private getProtocolTypesMatchingDevice;\n    private getExternalId;\n}\n"]}