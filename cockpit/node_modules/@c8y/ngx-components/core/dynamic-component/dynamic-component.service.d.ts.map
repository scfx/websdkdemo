{"version":3,"file":"dynamic-component.service.d.ts","sources":["dynamic-component.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { Injector } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { ExtensionPoint } from '../common/extension-hooks';\nimport { StateService } from '../common/state-service.abstract';\nimport { DynamicComponentDefinition, DynamicComponentExtension } from './dynamic-component.model';\nexport declare class DynamicComponentService extends StateService implements ExtensionPoint<DynamicComponentExtension> {\n    private injector;\n    items$: Observable<DynamicComponentDefinition[]>;\n    readonly refreshTrigger: Subject<unknown>;\n    readonly state$: BehaviorSubject<Set<DynamicComponentDefinition>>;\n    /**\n     * Additional factories that can be added by plugins.\n     */\n    factories: DynamicComponentExtension[];\n    constructor(injector: Injector, router: Router, waitTimeout: number);\n    refresh(): void;\n    get state(): Set<DynamicComponentDefinition>;\n    /**\n     * Returns a component by it's id as an observable.\n     * @param id The id of the component.\n     */\n    getById(id: any): Promise<DynamicComponentDefinition>;\n    add(component: DynamicComponentDefinition): void;\n    remove(component: DynamicComponentDefinition): void;\n}\n"]}