{"version":3,"file":"dynamic-component.component.d.ts","sources":["dynamic-component.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ComponentFactoryResolver, ViewContainerRef } from '@angular/core';\nimport { DynamicComponentService } from './dynamic-component.service';\nimport { Observable } from 'rxjs';\n/**\n * C8y dynamic component.\n * ## Example:\n *\n * register component in HOOK in module:\n * ```typescript\n *  import { HOOK_COMPONENT } from '@c8y/ngx-components';\n *\n * @NgModule({\n *  ...,\n *  providers: [{\n *      provide: HOOK_COMPONENT,\n *      multi: true,\n *      useValue: [{\n *          id: 'test-component',\n *          label: 'My test component',\n *          description: 'this is test component',\n *          component: TestComponent\n *      }],\n *  ...\n *  }]\n *\n * ```\n * Showing dynamic component:\n * ```html\n * <c8y-dynamic-component [componentId]=\"'test-component'\" [config]=\"config\"></c8y-dynamic-component>\n * ```\n */\nexport declare class DynamicComponentComponent {\n    private componentFactoryResolver;\n    private dynamicComponentService;\n    /**\n     * The ID of the registered component. It needs to be a component that is hooked\n     * with the HOOK_COMPONENTS extension hook.\n     */\n    componentId: string;\n    /**\n     * The configuration to pass.\n     */\n    config: any;\n    /**\n     * DynamicComponents can have two modes, an edit (config) and an view (component) mode.\n     * By default it is shown in the component mode.\n     */\n    mode: 'config' | 'component';\n    /**\n     * Disable this to hide the error that is shown if the component was not found.\n     */\n    notFoundError: boolean;\n    /**\n     * @ignore\n     */\n    host: ViewContainerRef;\n    /**\n     * @ignore\n     */\n    error: any;\n    /**\n     * @ignore\n     */\n    expandErrorDetails: boolean;\n    private componentRef;\n    /**\n     * @ignore only DI\n     */\n    constructor(componentFactoryResolver: ComponentFactoryResolver, dynamicComponentService: DynamicComponentService);\n    /**\n     * Calls the dynamic component life cycle hook. Currently only\n     * supporting onBeforeSave, a hook which is called before a config component\n     * is saved.\n     */\n    callLifeCycleHooks(): Observable<unknown>;\n    /**\n     * @ignore\n     */\n    ngOnChanges(): Promise<void>;\n    private loadComponent;\n    private callOnBeforeSaveHook;\n}\n"]}