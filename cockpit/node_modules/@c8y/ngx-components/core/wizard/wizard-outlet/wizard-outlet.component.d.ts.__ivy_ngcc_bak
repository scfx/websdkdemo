import { AfterViewInit, ComponentFactoryResolver, EventEmitter, OnDestroy, ViewContainerRef } from '@angular/core';
import { Router } from '@angular/router';
import { WizardComponent } from '../wizard.component';
import { WizardEntry } from '../wizard.model';
import { WizardService } from '../wizard.service';
export declare class WizardOutletComponent implements AfterViewInit, OnDestroy {
    private wizardComponent;
    private router;
    private c8yWizardService;
    private resolver;
    container: ViewContainerRef;
    /**
     * The event that is emitted when the wizard entry is clicked.
     */
    onSelect: EventEmitter<WizardEntry>;
    /**
     * List of wizard entries.
     */
    entries: WizardEntry[];
    /**
     * @ignore
     */
    showList: boolean;
    /**
     * @ignore
     */
    private destroy$;
    /**
     * @ignore
     */
    private componentInstance;
    constructor(wizardComponent: WizardComponent, router: Router, c8yWizardService: WizardService, resolver: ComponentFactoryResolver);
    ngAfterViewInit(): void;
    /**
     * Handles the wizard entry, if the entry contains a path, the user will be redirected to it.
     * Otherwise, an attempt will be made to create a dynamic component provided in the entry.
     * @param entry Wizard menu entry.
     */
    handleEntry(entry?: WizardEntry): void;
    ngOnDestroy(): void;
    private onEntriesLoaded;
    private handlePath;
    private handleComponent;
}
