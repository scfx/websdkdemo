import { EventEmitter, InjectionToken } from '@angular/core';
import { ExtensionFactory } from '../common/extension-hooks';
/**
 * A hook to add wizard entries.
 */
export declare const HOOK_WIZARD: InjectionToken<WizardExtension[]>;
export interface Wizard {
    /**
     * The id parameter identifies the particular wizard and can be used to refer to it when hooking wizard entries.
     * Example: "wizardId".
     */
    id: string;
    /** Wizard configuration object. */
    wizardConfig?: WizardConfig;
    /** The event that is emitted when the wizard entry is selected. */
    onSelect?: EventEmitter<WizardEntry>;
    /** The event that is emitted when the wizard is closed. */
    onClose?: EventEmitter<any>;
    /** The event that is emitted when the wizard is reset. */
    onReset?: EventEmitter<any>;
}
export interface WizardConfig {
    /** Text that will be displayed in the header of the wizard  */
    headerText?: string;
    /** Icon that will be displayed in the header of the wizard  */
    headerIcon?: string;
    /** Text that will be displayed in the header of the wizard body section  */
    bodyHeaderText?: string;
    /** Icon that will be displayed in the header of the wizard body section  */
    bodyHeaderIcon?: string;
}
/**
 * A single item in the wizard.
 * An interface describing the entry displayed in the first step of the wizard as well as the configuration of the second step and their way of interaction.
 */
export interface WizardEntry {
    /**
     * The identifier of a wizard to which the entry will be hooked.
     * Example: "wizardId".
     */
    wizardId: string;
    /** The name that will be displayed in the wizard menu  */
    name: string;
    /** The path where user will be redirected when this entry is selected in the wizard's menu. Takes precedence over `component` property. */
    path?: string;
    /** The component that will be rendered when this entry is selected in the wizard's menu. If `path` is provided, the `component` will be ignored. */
    component?: any;
    /** The icon that will be shown in the wizard menu next to the item. */
    c8yIcon?: string;
}
export declare type WizardExtension = WizardEntry | WizardEntry[] | ExtensionFactory<WizardEntry>;
