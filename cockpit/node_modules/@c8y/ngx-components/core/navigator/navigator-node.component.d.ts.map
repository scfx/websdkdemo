{"version":3,"file":"navigator-node.component.d.ts","sources":["navigator-node.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ComponentFactoryResolver, QueryList, ViewContainerRef, EventEmitter, OnDestroy } from '@angular/core';\nimport { RouterLinkActive } from '@angular/router';\nimport { NavigatorNode, ClickOptions } from './navigator-node';\nimport { NavigatorService } from './navigator.service';\nimport { PopoverConfirmComponent } from '../modal/popover-confirm.component';\nexport declare const enum ClickEventSource {\n    ICON = \"icon\",\n    EXPANDER = \"expander\",\n    LINK = \"link\"\n}\n/**\n * Navigator node renderer.\n */\nexport declare class NavigatorNodeComponent implements OnDestroy {\n    private componentFactoryResolver;\n    private navigator;\n    /**\n     * @ignore\n     */\n    iconSlot: ViewContainerRef;\n    /**\n     * Navigator node.\n     */\n    node: NavigatorNode;\n    /**\n     * Determines whether the navigator node is a root node (top node in the hierarchy).\n     */\n    isRoot: boolean;\n    /**\n     * @ignore\n     */\n    routerLinkActive: RouterLinkActive;\n    /**\n     * @ignore\n     */\n    childrenNodes: QueryList<NavigatorNodeComponent>;\n    /**\n     * Event emitter responsible for broadcasting one of the following events: \"icon\", \"expander\" or \"link\" as string value.\n     *\n     * The type of event depends on where you click on the navigator node:\n     * * clicking the icon will broadcast the event \"icon\",\n     * * clicking the expander will broadcast the event \"expander\",\n     * * clicking the label will broadcast the event \"link\".\n     */\n    nodeClick: EventEmitter<string>;\n    /**\n     * @ignore\n     */\n    confirm: PopoverConfirmComponent;\n    /**\n     * Parent node renderer.\n     */\n    parentNode: NavigatorNodeComponent;\n    private viewInitTimeout;\n    constructor(componentFactoryResolver: ComponentFactoryResolver, navigator: NavigatorService);\n    /**\n     * @ignore\n     */\n    ngAfterViewInit(): void;\n    /**\n     * Expands the navigator node when the URL matches the path provided in the node.\n     */\n    openOnFirstUrl(): void;\n    /**\n     * Returns the expander title.\n     */\n    get expandTitle(): \"Expand\" | \"Collapse\";\n    /**\n     * Click event handler.\n     *\n     * @param {string} from Source of the click event.\n     * @param event DOM event.\n     */\n    click(from?: 'icon' | 'expander' | 'link', $event?: MouseEvent): void;\n    /**\n     * Expands or collapses the navigator node and its children recursively.\n     *\n     * @param {boolean} open Open or close the node.\n     * @param {boolean} recursive Open or close the children.\n     * @param {ClickOptions} forNode Click options.\n     */\n    expandCollapse(open: any, recursive?: any, forNode?: ClickOptions): void;\n    /**\n     * @ignore\n     */\n    ngOnDestroy(): void;\n    private handleExpandCollapse;\n    private expandParentIfActive;\n    private updateIcon;\n    private updateIconComponent;\n    private updateIconTemplate;\n}\n"]}