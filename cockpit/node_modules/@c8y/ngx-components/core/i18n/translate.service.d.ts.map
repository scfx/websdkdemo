{"version":3,"file":"translate.service.d.ts","sources":["translate.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { TranslateService as NgxTranslateService } from '@ngx-translate/core';\nimport { OptionsService } from '../common/options.service';\nimport { AppStateService } from '../common/ui-state.service';\n/**\n * A service to manage the language of the application.\n */\nexport declare class TranslateService {\n    private ngxTranslate;\n    private ui;\n    private options;\n    static SAVE_LANGUAGE_KEY: string;\n    static defaultLang(): string;\n    langsDetail: any;\n    langs: any;\n    private DEFAULT_SEPARATOR;\n    constructor(ngxTranslate: NgxTranslateService, ui: AppStateService, options: OptionsService);\n    /**\n     * Switches to given language.\n     * @param lang The language as two-letter code.\n     */\n    switchToLanguage(lang: string): Promise<void>;\n    loadLocales(moduleLang: any): Promise<void>;\n    setLanguage(lang: string): void;\n    /**\n     * Finds the first supported language\n     */\n    firstSupportedLanguage(): any;\n    /**\n     * Converts a iso language code to a PO language code (e.g. de-de gets de_de).\n     * @param lang The iso language code.\n     */\n    convertToLanguageCodePO(lang: string): string;\n    /**\n     * Returns the language in the native language.\n     * @param lang The language two-letter code.\n     * @return The native name.\n     */\n    getNativeLanguage(lang: string): string;\n    saveInLocalStorage(lang: string): void;\n    getSupported(lang: string): any;\n    /**\n     * Gets the language from the query parameter.\n     * @return The language two-letter code.\n     */\n    queryStringLang(): any;\n    private getLessSpecific;\n    /**\n     * Gets the language from local storage.\n     * @return The language two-letter code.\n     */\n    private localStorageLang;\n    /**\n     * Determines which language is set in the browser.\n     * @return The languages the browser supports as string array.\n     */\n    private browserLangs;\n    private getQueryParameter;\n}\n"]}