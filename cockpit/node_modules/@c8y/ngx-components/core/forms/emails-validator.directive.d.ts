import { AbstractControl, ValidationErrors, Validator } from '@angular/forms';
/**
 * A directive that adds the `emails` validator to controls marked with the
 * `emails` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.
 *
 * **Example**
 *
 * ```html
 * <input type="text" name="emails" ngModel emails>
 * <input type="text" name="emails" ngModel emails="true">
 * <input type="text" name="emails" ngModel [emails]="true">
 * ```
 */
import * as ɵngcc0 from '@angular/core';
export declare class EmailsValidatorDirective implements Validator {
    private _enabled;
    private _onChange?;
    private separator;
    /**
     * Tracks changes to the emails attribute bound to this directive.
     */
    set emails(value: boolean | string);
    /**
     * Method that validates whether email addresses are valid.
     * Returns the validation result if enabled, otherwise null.
     */
    validate(control: AbstractControl): ValidationErrors | null;
    /**
     * Registers a callback function to call when the validator inputs change.
     */
    registerOnValidatorChange(fn: () => void): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<EmailsValidatorDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDeclaration<EmailsValidatorDirective, "[emails][formControlName],[emails][formControl],[emails][ngModel]", never, { "emails": "emails"; }, {}, never>;
}

//# sourceMappingURL=emails-validator.directive.d.ts.map