import { InventoryService, UserService } from '@c8y/client';
import { IUser } from '@c8y/client';
import { Observable } from 'rxjs';
import { AppStateService } from '../ui-state.service';
import * as ɵngcc0 from '@angular/core';
export declare class UserPreferencesService {
    private user;
    private inventory;
    private appState;
    currentUser: Observable<IUser>;
    private LOCAL_STORAGE_KEY;
    private storage;
    constructor(user: UserService, inventory: InventoryService, appState: AppStateService);
    get(key: any): Observable<any>;
    set(key: any, value: any): Promise<any>;
    getForUser(key: any, user: any): Observable<any>;
    setForUser(key: any, value: any, user: any): Promise<any>;
    private getRawKey;
    private getStorage;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<UserPreferencesService, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDeclaration<UserPreferencesService>;
}

//# sourceMappingURL=user-preferences.service.d.ts.map