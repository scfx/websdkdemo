import { EventEmitter } from '@angular/core';
import { BsModalRef } from 'ngx-bootstrap/modal';
import { ModalLabels } from '../select-modal/select-modal.model';
/**
 * C8y modal component.
 * ## Example:
 *
 * Creating custom modal:
 * ```typescript
 *  import { Component } from "@angular/core";
 *  import { Subject } from 'rxjs';
 *
 * @Component({
 *  selector: "my-modal",
 *  template: `
 *    <c8y-modal title="CustomTitle"
 *      (onClose)="onClose($event)"
 *      (onDismiss)="onDismiss($event)"
 *      [labels]="labels"
 *      [disabled]="true" <- will disable ok button
 *      >
 *        <span>I am body of modal</span>
 *        <span>For simple string use body="string"</span>
 *    </c8y-modal>`
 * })
 *
 * export class MyModalComponent {
 *
 *  closeSubject: Subject<boolean> = new Subject();
 *  labels : ModalLabels = {ok: "customOK", cancel: "customCancel"};
 *
 *  onDismiss(event){
 *    this.closeSubject.next(false);
 *  }
 *
 *  onClose(event) {
 *    this.closeSubject.next(true);
 *  }
 * }
 * ```
 * Showing modal:
 * ```typescript
 * import { BsModalService } from "ngx-bootstrap/modal";
 *
 * constructor(
 *  public bsModalService: BsModalService,
 * ) {}
 *
 * showModal() {
 *  const modalRef = this.bsModalService.show(MyModalComponent);
 *  modalRef.content.closeSubject.subscribe(result => {
 *    console.log('results:', result);
 *  });
 * }
 * ```
 */
import * as ɵngcc0 from '@angular/core';
export declare class ModalComponent {
    private modal;
    onDismiss: EventEmitter<boolean>;
    onClose: EventEmitter<boolean>;
    disabled: boolean;
    close: () => void;
    dismiss: () => void;
    title: string;
    body: string;
    customFooter: boolean;
    set labels({ ok, cancel }: ModalLabels);
    get labels(): ModalLabels;
    private _labels;
    constructor(modal: BsModalRef);
    _dismiss(): void;
    _close(): void;
    onEnterKeyDown(event: KeyboardEvent): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ModalComponent, [{ optional: true; }]>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ModalComponent, "c8y-modal", never, { "disabled": "disabled"; "customFooter": "customFooter"; "labels": "labels"; "close": "close"; "dismiss": "dismiss"; "title": "title"; "body": "body"; }, { "onDismiss": "onDismiss"; "onClose": "onClose"; }, never, ["[c8y-modal-title]", "*", "[c8y-modal-footer]"]>;
}

//# sourceMappingURL=modal.component.d.ts.map