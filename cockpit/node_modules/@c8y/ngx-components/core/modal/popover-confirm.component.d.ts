import { PopoverDirective } from 'ngx-bootstrap/popover';
import { StatusType } from '../common/status.model';
import * as ɵngcc0 from '@angular/core';
export interface PopoverConfirmButtons {
    /**
     * The label of the button
     */
    label: string;
    /**
     * Which action to perform.
     */
    action: () => Promise<any>;
    /**
     * The status class attached to the button.
     */
    status?: StatusType | 'primary';
}
/**
 * A component to show a popover right next to the
 * user action. Add this component where the confirm modal
 * should be shown and toggle isOpen to display it. You
 * can use `await isShow()` to wait for a result on the
 * click action.
 */
export declare class PopoverConfirmComponent {
    popover: PopoverDirective;
    buttons: PopoverConfirmButtons[];
    message: string;
    title: string;
    isOpen: boolean;
    containerClass: string;
    placement: string;
    outsideClick: boolean;
    click: (action: () => Promise<any>) => void;
    /**
     * Show the popover. Wait until an action is performed on it.
     */
    show(buttons?: PopoverConfirmButtons[]): Promise<any>;
    buttonStatus(status: any): string;
    handleOutsideClick(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<PopoverConfirmComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<PopoverConfirmComponent, "c8y-popover-confirm", never, { "buttons": "buttons"; "isOpen": "isOpen"; "containerClass": "containerClass"; "placement": "placement"; "outsideClick": "outsideClick"; "message": "message"; "title": "title"; }, {}, never, never>;
}

//# sourceMappingURL=popover-confirm.component.d.ts.map