import { DashboardChildDimension, DashboardChildArrangement } from './dashboard.model';
import { DashboardChildComponent } from './dashboard-child.component';
export declare class DashboardChildChange {
    child: DashboardChildComponent;
    children: DashboardChildComponent[];
    private dashboard;
    private readonly MIN_WIDTH;
    private MIN_HEIGHT;
    private readonly PIXEL_SIZE_THRESHOLD;
    private diffX;
    private diffY;
    constructor(childToChange: DashboardChildComponent);
    get resize$(): import("rxjs").Observable<DashboardChildDimension>;
    get drag$(): import("rxjs").Observable<DashboardChildDimension>;
    findFreeDimension(): DashboardChildDimension;
    collapseUpAll(): void;
    arrangeAll(arrange: DashboardChildArrangement): {
        current: DashboardChildComponent;
        scan: DashboardChildComponent[];
        spacing: any;
        origin: DashboardChildDimension;
    }[];
    private arrangePipe;
    private collapseUp;
    private setDimension;
    private setPixelSize;
    private getPixelSize;
    private getDimensionSize;
    private getDimensionPosition;
    private doesCollide;
    private getCollided;
}
