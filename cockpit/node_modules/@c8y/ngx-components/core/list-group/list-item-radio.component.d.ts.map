{"version":3,"file":"list-item-radio.component.d.ts","sources":["list-item-radio.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, EventEmitter, SimpleChanges } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\n/**\n * A component to display a radio button in a c8y-li. Use it with content projection. It\n * can be used standalone or with an ngModel.\n *\n * @example\n * ```html\n * <c8y-li>\n *   <c8y-li-radio></c8y-li-radio>\n * </c8y-li>\n * ```\n */\nexport declare class ListItemRadioComponent implements ControlValueAccessor {\n    /**\n     * @ignore\n     */\n    radio: ElementRef;\n    /**\n     * Indicates if the radio is selected.\n     */\n    selected: boolean;\n    /**\n     * The name of the radio (use different names for different radio groups).\n     */\n    name: string;\n    /**\n     * Indicates if the radio is disabled.\n     */\n    disabled: boolean;\n    /**\n     * An event emitted as soon as the radio is selected.\n     */\n    onSelect: EventEmitter<boolean>;\n    /**\n     * The current value.\n     */\n    value: any;\n    /**\n     * @ignore\n     */\n    model: any;\n    /**\n     * @ignore\n     */\n    onChange: (value: any) => void;\n    /**\n     * @ignore\n     */\n    onTouched: () => void;\n    /**\n     * Resets the native radio element.\n     */\n    reset(): void;\n    /**\n     * @ignore\n     */\n    ngOnChanges(changes: SimpleChanges): void;\n    /**\n     * Triggered when the radio is changed.\n     * @param checked Should it be checked or not?\n     */\n    change(checked: any): void;\n    /**\n     * Registers an onChange event.\n     */\n    registerOnChange(fn: any): void;\n    /**\n     * Registers an onTouch event.\n     */\n    registerOnTouched(fn: any): void;\n    /**\n     * @ignore\n     */\n    writeValue(value: boolean): void;\n}\n"]}