{"version":3,"file":"list-item.component.d.ts","sources":["list-item.component.d.ts"],"names":[],"mappingssourcesContent":["import { ElementRef, EventEmitter, QueryList } from '@angular/core';\nimport { ListItemActionComponent } from './list-item-action.component';\nimport { ListItemCollapseComponent } from './list-item-collapse.component';\nimport { ListItemFooterComponent } from './list-item-footer.component';\n/**\n * A list item is a representation of an item inside a list and\n * can be used to compose different styles in a list (mainly in a\n * <c8y-group-list>-component but also in others like the\n * <c8y-typeahead>-component):\n *  - a list with a footer\n *  - a list with one or multiple actions\n *  - an icon\n *  - a checkbox or radio input\n *\n * The item can be composed via content projection. The following\n * example shows a radio list with an icon, two actions\n * and a footer:\n * ```html\n * <c8y-list-group>\n *   <c8y-li\n *     *c8yFor=\"\n *       let device of devices;\n *       let i = index;\n *     \"\n *   >\n *     <c8y-li-radio (onSelect)=\"updateSelected($event, device)\"></c8y-li-radio>\n *     <c8y-li-icon [icon]=\"'rocket'\"></c8y-li-icon>\n *     {{ i + 1 }}. {{ device.name || '-' }}\n *     <c8y-li-footer>\n *       Device id: <a [routerLink]=\"['/device', device.id]\">{{ device.id }}</a>\n *     </c8y-li-footer>\n *     <c8y-li-action (click)=\"deleteDevice(device.id)\" icon=\"times\">\n *       Delete\n *     </c8y-li-action>\n *     <c8y-li-action (click)=\"(false)\" icon=\"rocket\">\n *       Launch to space\n *     </c8y-li-action>\n *   </c8y-li>\n * </c8y-list-group>\n * ```\n */\nexport declare class ListItemComponent {\n    element: ElementRef;\n    /**\n     * If set to true, the class \"active\" is added which\n     * indicates that the current row is active.\n     */\n    active: boolean;\n    /**\n     * Indicates if the current list item is collapsed. You can trigger the collapsing from\n     * any element event by toggling this value.\n     *\n     * @example\n     * ```html\n     * <c8y-li #li (click)=\"li.collapsed = !li.collapsed\">\n     *  Toggle\n     *  <c8y-li-collapse>\n     *    I can be toggled by clicking on the row.\n     *  </c8y-li-collapse\n     * </c8y-li>\n     * ``\n     */\n    collapsed: boolean;\n    /**\n     * Indicates if the current list item is selectable.\n     */\n    selectable: boolean;\n    /**\n     * An event emitter which is triggered when the user collapses the content\n     * via the chevron on the right.\n     */\n    collapsedChange: EventEmitter<boolean>;\n    /**\n     * A [[ListItemFooterComponent]] element which can be used to show a footer.\n     * @example\n     * ```html\n     * <c8y-li>\n     *  I am the main content\n     *  <c8y-li-footer>\n     *    I am the footer content\n     *  </c8y-li-footer>\n     * </c8y-li>\n     * ```\n     */\n    itemFooter: ListItemFooterComponent;\n    /**\n     * [[ListItemActionComponent]] elements which can be used to show an action.\n     * An action is displayed on the right in the dropdown and usually consists of an\n     * icon and a label.\n     * @example\n     * ```html\n     * <c8y-li>\n     *  I am the main content\n     *  <c8y-li-action (click)=\"launchToSpace(device.id)\" icon=\"rocket\">\n     *    Launch\n     *  </c8y-li-action>\n     *  <c8y-li-action (click)=\"deleteDevice(device.id)\" icon=\"times\">\n     *    Delete\n     *  </c8y-li-action>\n     * </c8y-li>\n     * ```\n     */\n    itemActions: QueryList<ListItemActionComponent>;\n    /**\n     * [[ListItemCollapseComponent]] elements which can be used to show detail views.\n     * @example\n     * ```html\n     * <c8y-li>\n     *  I am the main content\n     *  <c8y-li-collapse>\n     *    I am detailed content\n     *  </c8y-li-collapse>\n     * </c8y-li>\n     * ```\n     */\n    itemCollapse: ListItemCollapseComponent;\n    /**\n     * @ignore\n     */\n    showFooter: boolean;\n    /**\n     * @ignore\n     */\n    showActions: boolean;\n    /**\n     * @ignore\n     */\n    showCollapse: boolean;\n    /**\n     * @ignore\n     */\n    actions: ListItemActionComponent[];\n    /**\n     * @ignore\n     */\n    dropdownUp: boolean;\n    private pulse$;\n    private destroy$;\n    private readonly ACTION_ITEM_HEIGHT;\n    /**\n     * @ignore\n     */\n    constructor(element: ElementRef);\n    /**\n     * @ignore\n     */\n    ngOnInit(): void;\n    /**\n     * @ignore\n     */\n    ngAfterContentChecked(): void;\n    /**\n     * @ignore\n     */\n    ngOnDestroy(): void;\n    /**\n     * A helper function which helps to determine if the dropdown\n     * should toggle up.\n     */\n    showDropdownUp(): void;\n    /**\n     * Toggles the collapse state and emits this state as\n     * collapsedChange output as boolean.\n     * @param $event Pass optional an event to stop propagation.\n     */\n    toggleCollapsed($event?: Event): void;\n    /**\n     * Highlights the list-item. This method should be used to show the\n     * user that something within this item was changed.\n     */\n    pulse(): void;\n}\n"]}