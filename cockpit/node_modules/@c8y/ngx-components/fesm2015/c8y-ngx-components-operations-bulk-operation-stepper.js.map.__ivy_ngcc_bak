{"version":3,"file":"c8y-ngx-components-operations-bulk-operation-stepper.js","sources":["../../operations/bulk-operation-stepper/custom-step.directive.ts","../../operations/bulk-operation-stepper/bulk-operation-stepper.component.ts","../../operations/bulk-operation-stepper/base-stepper.component.ts","../../operations/bulk-operation-stepper/bulk-operation-stepper.module.ts","../../operations/bulk-operation-stepper/c8y-ngx-components-operations-bulk-operation-stepper.ts"],"sourcesContent":["import { CdkStep } from '@angular/cdk/stepper';\nimport { Directive, Input, TemplateRef } from '@angular/core';\nimport { C8yStepper } from '@c8y/ngx-components';\n\n@Directive({ selector: '[customStep]' })\nexport class CustomStep {\n  @Input('customStep') label: string;\n  @Input('customStepCompleted') completed: string;\n  @Input('customStepButtonsDisabled') buttonsDisabled: boolean = false;\n  constructor(public templateRef: TemplateRef<any>) {}\n  @Input('customStepOnNext') onNext: (event: { stepper: C8yStepper; step: CdkStep }) => void = ({\n    stepper,\n    step\n  }) => {\n    // steps without own `onNext` handler, e.g. preview steps need to mark themselves as `completed`,\n    // otherwise stepper will not allow to move forth from them as soon as the user navigates back\n    // and the `c8y-stepper-buttons` component marks the step as incomplete.\n    step.completed = true;\n    stepper.next();\n  };\n}\n","import { CdkStep, StepperSelectionEvent } from '@angular/cdk/stepper';\nimport {\n  Component,\n  ContentChildren,\n  EventEmitter,\n  OnDestroy,\n  Output,\n  QueryList,\n  ViewChild\n} from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { AlertService, C8yStepper, gettext, ModalService, Status } from '@c8y/ngx-components';\nimport { get } from 'lodash-es';\nimport { Observable, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { OperationDetailsComponent } from '@c8y/ngx-components/operations/details';\nimport { OperationSchedule } from '@c8y/ngx-components/operations/bulk-operation-scheduler';\nimport { CustomStep } from './custom-step.directive';\nimport {\n  OperationDetails,\n  BulkOperationType,\n  BulkOperationsService\n} from '@c8y/ngx-components/operations/bulk-operations-service';\n\n@Component({\n  selector: 'c8y-bulk-operation-stepper',\n  templateUrl: 'bulk-operation-stepper.component.html'\n})\nexport class BulkOperationStepper implements OnDestroy {\n  @Output() selectionChange: EventEmitter<StepperSelectionEvent> = new EventEmitter();\n  @ContentChildren(CustomStep) customSteps: QueryList<CustomStep>;\n  @ViewChild(C8yStepper, { static: false })\n  stepper: C8yStepper;\n  @ViewChild(OperationDetailsComponent, { static: false })\n  operationDetailsComponent: OperationDetailsComponent;\n\n  steps: CustomStep[] = [];\n  showStepper: boolean = false;\n  showButtons: boolean = false;\n  pendingStatus: boolean;\n  stepperButtonsLabels = { custom: gettext('Schedule bulk operation') };\n  deviceTypes$: Observable<string[]>;\n  deviceQueryString: string;\n  bulkOperationType: BulkOperationType;\n  scheduleData: OperationSchedule;\n  operationDetailsForm: FormGroup;\n  operationDetails: OperationDetails;\n  retrieveOperationDetails: () => OperationDetails | Promise<OperationDetails>;\n\n  private deviceTypesSubject$: Subject<string[]> = new Subject();\n  private endSubscriptions: Subject<void> = new Subject();\n\n  constructor(\n    private bulkOperationService: BulkOperationsService,\n    private modal: ModalService,\n    private alert: AlertService\n  ) {\n    this.deviceTypes$ = this.deviceTypesSubject$.asObservable();\n  }\n\n  ngAfterViewInit(): void {\n    setTimeout(() => {\n      // wait for the next event loop turn as `steps` has already been checked in this CD cycle\n      this.steps = this.customSteps.toArray();\n      this.showStepper = true;\n      setTimeout(() => {\n        // postpone rendering of buttons for custom steps to the point where custom steps have already been rendered\n        this.showButtons = true;\n        if (this.stepper) {\n          this.stepper.selectionChange.pipe(takeUntil(this.endSubscriptions)).subscribe(event => {\n            this.selectionChange.next(event);\n          });\n          this.operationDetailsForm = this.operationDetailsComponent.fgOperationDescription;\n        }\n      });\n    });\n  }\n\n  changeDeviceTypes(deviceTypes: string | string[]) {\n    if (deviceTypes) {\n      this.deviceTypesSubject$.next(Array.isArray(deviceTypes) ? deviceTypes : [deviceTypes]);\n    } else {\n      this.deviceTypesSubject$.next([]);\n    }\n  }\n\n  async confirmDeviceSelection($event: { stepper: C8yStepper; step: CdkStep }) {\n    if (!this.deviceQueryString) {\n      try {\n        await this.modal.confirm(\n          gettext('All devices selected'),\n          gettext(\n            'You are about to schedule the bulk operation to be executed for all devices. Do you want to proceed?'\n          ),\n          Status.WARNING,\n          { ok: gettext('Schedule for all devices'), cancel: gettext('Cancel and select devices') }\n        );\n        $event.step.completed = true;\n        $event.stepper.next();\n        this.operationDetails = this.retrieveOperationDetails\n          ? await this.retrieveOperationDetails()\n          : undefined;\n      } catch (ex) {\n        // Intentionally empty\n      }\n    } else {\n      $event.step.completed = true;\n      $event.stepper.next();\n      this.operationDetails = this.retrieveOperationDetails\n        ? await this.retrieveOperationDetails()\n        : undefined;\n    }\n\n    this.bulkOperationType = this.bulkOperationService.retrieveBulkOperationType(\n      get(this.operationDetails, 'prototype')\n    );\n    if (\n      this.operationDetailsForm &&\n      get(this.operationDetailsForm, 'controls.description.pristine') &&\n      this.operationDetails\n    ) {\n      this.operationDetailsForm.patchValue({\n        description: get(this.operationDetails, 'prototype.description')\n      });\n    }\n  }\n\n  cancel() {\n    this.close();\n  }\n\n  async scheduleBulkOperation() {\n    this.pendingStatus = true;\n\n    try {\n      this.operationDetails.prototype.description = get(\n        this.operationDetailsForm,\n        'controls.description.value'\n      );\n      this.operationDetails.note = get(this.operationDetailsForm, 'controls.note.value');\n      this.operationDetails.schedule = get(this.operationDetailsForm, 'controls.schedule.value');\n\n      await this.bulkOperationService.scheduleBulkOperation(\n        this.deviceQueryString,\n        this.operationDetails\n      );\n      this.alert.success(gettext('New bulk operation scheduled.'));\n      this.close();\n    } catch (ex) {\n      this.alert.addServerFailure(ex);\n    }\n\n    this.pendingStatus = false;\n  }\n\n  ngOnDestroy(): void {\n    this.endSubscriptions.next();\n    this.endSubscriptions.complete();\n  }\n\n  private close() {\n    this.stepper.reset();\n    this.bulkOperationService.returnToBulkOperationOverview();\n  }\n}\n","import { StepperSelectionEvent } from '@angular/cdk/stepper';\nimport { OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { IManagedObject } from '@c8y/client';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { BulkOperationStepper } from './bulk-operation-stepper.component';\nimport { OperationDetails } from '@c8y/ngx-components/operations/bulk-operations-service';\n\nexport abstract class BaseStepperComponent implements OnInit, OnDestroy {\n  @ViewChild(BulkOperationStepper, { static: true }) operationStepper: BulkOperationStepper;\n\n  set deviceTypes(deviceTypes: string | string[]) {\n    if (this.operationStepper) {\n      this.operationStepper.changeDeviceTypes(deviceTypes);\n    }\n  }\n\n  /**\n   * A map holding step data. The order of properties need to match the order of\n   * the steps they hold data for as the index of the property is used to clear\n   * step data when navigating forth after changing data at an earlier step.\n   */\n  stepData: { [key: string]: IManagedObject } = {};\n\n  private endSubscriptions: Subject<void> = new Subject();\n\n  ngOnInit(): void {\n    this.operationStepper.retrieveOperationDetails = this.retrieveOperationPrototype.bind(this);\n\n    this.operationStepper.selectionChange\n      .pipe(takeUntil(this.endSubscriptions))\n      .subscribe(this.onSelectionChange.bind(this));\n  }\n\n  ngOnDestroy(): void {\n    this.endSubscriptions.next();\n    this.endSubscriptions.complete();\n  }\n\n  protected abstract retrieveOperationPrototype(): OperationDetails | Promise<OperationDetails>;\n\n  protected onSelectionChange(event: StepperSelectionEvent) {\n    const { selectedIndex, previouslySelectedIndex } = event;\n    if (\n      selectedIndex > previouslySelectedIndex &&\n      selectedIndex < Object.keys(this.stepData).length\n    ) {\n      // TODO clear step data only if previous step is \"dirty\"\n      this.stepData[this.getStepDataKeyByIndex(selectedIndex)] = undefined;\n    }\n  }\n\n  private getStepDataKeyByIndex(index: number): string {\n    return Object.keys(this.stepData)[index];\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CoreModule } from '@c8y/ngx-components';\nimport { OperationDetailsModule } from '@c8y/ngx-components/operations/details';\nimport { DeviceSelectorModule } from '@c8y/ngx-components/operations/device-selector';\nimport { OperationSummaryModule } from '@c8y/ngx-components/operations/operation-summary';\nimport { BulkOperationStepper } from './bulk-operation-stepper.component';\nimport { CustomStep } from './custom-step.directive';\n\n/**\n * This module provides base stepper class and stepper wrapper component.\n */\n@NgModule({\n  imports: [CoreModule, DeviceSelectorModule, OperationDetailsModule, OperationSummaryModule],\n  declarations: [BulkOperationStepper, CustomStep],\n  exports: [BulkOperationStepper, CustomStep]\n})\nexport class BulkOperationStepperModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}