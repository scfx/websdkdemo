import { Component, NgModule } from '@angular/core';
import { ReactiveFormsModule } from '@angular/forms';
import { gettext, CoreModule, FormsModule } from '@c8y/ngx-components';
import { RepositoryType, RepositoryService, RepositoryModule } from '@c8y/ngx-components/repository';
import { BaseStepperComponent, BulkOperationStepperModule } from '@c8y/ngx-components/operations/bulk-operation-stepper';
import { BulkOperationsService, BulkOperationType, baseUrl, HOOK_LIST_BULK_TYPE } from '@c8y/ngx-components/operations/bulk-operations-service';
import { __awaiter } from 'tslib';
import { TranslateService } from '@ngx-translate/core';
import { uniqWith, isEqual, get } from 'lodash-es';
import { BehaviorSubject, combineLatest, from } from 'rxjs';
import { switchMap, shareReplay, debounceTime, distinctUntilChanged } from 'rxjs/operators';

import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@c8y/ngx-components/operations/bulk-operations-service';
import * as ɵngcc2 from '@c8y/ngx-components/repository';
import * as ɵngcc3 from '@ngx-translate/core';
import * as ɵngcc4 from '@c8y/ngx-components/operations/bulk-operation-stepper';
import * as ɵngcc5 from '@angular/forms';
import * as ɵngcc6 from '@angular/common';
import * as ɵngcc7 from '@c8y/ngx-components';

function StepperBulkTypeConfigurationComponent_ng_container_1_i_15_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "i", 23);
} }
function StepperBulkTypeConfigurationComponent_ng_container_1_i_17_Template(rf, ctx) { if (rf & 1) {
    const _r7 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "i", 24);
    ɵngcc0.ɵɵlistener("click", function StepperBulkTypeConfigurationComponent_ng_container_1_i_17_Template_i_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r7); const ctx_r6 = ɵngcc0.ɵɵnextContext(2); return ctx_r6.textFilter$.next(""); });
    ɵngcc0.ɵɵelementEnd();
} }
function StepperBulkTypeConfigurationComponent_ng_container_1_c8y_li_28_Template(rf, ctx) { if (rf & 1) {
    const _r10 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "c8y-li", 25);
    ɵngcc0.ɵɵlistener("click", function StepperBulkTypeConfigurationComponent_ng_container_1_c8y_li_28_Template_c8y_li_click_0_listener() { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r10); const configType_r8 = restoredCtx.$implicit; const ctx_r9 = ɵngcc0.ɵɵnextContext(2); ctx_r9.selectedConfigType = configType_r8; return ctx_r9.configType$.next(configType_r8.name); });
    ɵngcc0.ɵɵelement(1, "c8y-highlight", 26);
    ɵngcc0.ɵɵpipe(2, "async");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const configType_r8 = ctx.$implicit;
    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("active", ctx_r4.selectedConfigType === configType_r8);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("text", configType_r8.name)("pattern", ɵngcc0.ɵɵpipeBind1(2, 3, ctx_r4.configType$));
} }
function StepperBulkTypeConfigurationComponent_ng_container_1_c8y_li_33_em_15_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "em", 39);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 1, "Undefined`device type`"), " ");
} }
function StepperBulkTypeConfigurationComponent_ng_container_1_c8y_li_33_span_17_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 40);
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵelement(2, "c8y-highlight", 41);
    ɵngcc0.ɵɵpipe(3, "async");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const configuration_r11 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r14 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵpropertyInterpolate2("title", "", ɵngcc0.ɵɵpipeBind1(1, 4, "Configuration type"), ": ", configuration_r11.configurationType, "");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("text", configuration_r11.configurationType)("pattern", ɵngcc0.ɵɵpipeBind1(3, 6, ctx_r14.configType$));
} }
function StepperBulkTypeConfigurationComponent_ng_container_1_c8y_li_33_span_18_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 42);
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵpipe(4, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵpropertyInterpolate2("title", "", ɵngcc0.ɵɵpipeBind1(1, 3, "Configuration type"), ": ", ɵngcc0.ɵɵpipeBind1(2, 5, "Undefined"), "");
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(4, 7, "Undefined"), " ");
} }
function StepperBulkTypeConfigurationComponent_ng_container_1_c8y_li_33_Template(rf, ctx) { if (rf & 1) {
    const _r18 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "c8y-li", null, 27);
    ɵngcc0.ɵɵelementStart(2, "c8y-li-radio", 28);
    ɵngcc0.ɵɵlistener("onSelect", function StepperBulkTypeConfigurationComponent_ng_container_1_c8y_li_33_Template_c8y_li_radio_onSelect_2_listener() { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r18); const configuration_r11 = restoredCtx.$implicit; const ctx_r17 = ɵngcc0.ɵɵnextContext(2); return ctx_r17.selectConfiguration(configuration_r11); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(3, "c8y-li-icon", 29);
    ɵngcc0.ɵɵelementStart(4, "c8y-li-body", 30);
    ɵngcc0.ɵɵelementStart(5, "div", 31);
    ɵngcc0.ɵɵelementStart(6, "div", 32);
    ɵngcc0.ɵɵelement(7, "c8y-highlight", 26);
    ɵngcc0.ɵɵpipe(8, "async");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(9, "div", 33);
    ɵngcc0.ɵɵelementStart(10, "div", 32);
    ɵngcc0.ɵɵpipe(11, "translate");
    ɵngcc0.ɵɵelementStart(12, "span", 34);
    ɵngcc0.ɵɵtext(13, "Device type");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(14);
    ɵngcc0.ɵɵtemplate(15, StepperBulkTypeConfigurationComponent_ng_container_1_c8y_li_33_em_15_Template, 3, 3, "em", 35);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(16, "div", 36);
    ɵngcc0.ɵɵtemplate(17, StepperBulkTypeConfigurationComponent_ng_container_1_c8y_li_33_span_17_Template, 4, 8, "span", 37);
    ɵngcc0.ɵɵtemplate(18, StepperBulkTypeConfigurationComponent_ng_container_1_c8y_li_33_span_18_Template, 5, 9, "span", 38);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const configuration_r11 = ctx.$implicit;
    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(6);
    ɵngcc0.ɵɵpropertyInterpolate("title", configuration_r11.name || "-");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("text", configuration_r11.name || "-")("pattern", ɵngcc0.ɵɵpipeBind1(8, 9, ctx_r5.textFilter$));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵpropertyInterpolate2("title", "", ɵngcc0.ɵɵpipeBind1(11, 11, "Device type"), ": ", ctx_r5.getDeviceTypeTitle(configuration_r11), "");
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate1(" ", configuration_r11.deviceType, " ");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !configuration_r11.deviceType);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", configuration_r11.configurationType);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !configuration_r11.configurationType);
} }
const _c0 = function (a0) { return { "dd-low": a0 }; };
function StepperBulkTypeConfigurationComponent_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    const _r20 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "div", 2);
    ɵngcc0.ɵɵelementStart(2, "div", 3);
    ɵngcc0.ɵɵelementStart(3, "div", 4);
    ɵngcc0.ɵɵelementStart(4, "h4", 5);
    ɵngcc0.ɵɵtext(5);
    ɵngcc0.ɵɵpipe(6, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(7, "div", 6);
    ɵngcc0.ɵɵelementStart(8, "div", 7);
    ɵngcc0.ɵɵelementStart(9, "div", 8);
    ɵngcc0.ɵɵelementStart(10, "input", 9);
    ɵngcc0.ɵɵlistener("ngModelChange", function StepperBulkTypeConfigurationComponent_ng_container_1_Template_input_ngModelChange_10_listener($event) { ɵngcc0.ɵɵrestoreView(_r20); const ctx_r19 = ɵngcc0.ɵɵnextContext(); return ctx_r19.textFilter$.next($event); });
    ɵngcc0.ɵɵpipe(11, "translate");
    ɵngcc0.ɵɵpipe(12, "translate");
    ɵngcc0.ɵɵpipe(13, "async");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(14, "span", 10);
    ɵngcc0.ɵɵtemplate(15, StepperBulkTypeConfigurationComponent_ng_container_1_i_15_Template, 1, 0, "i", 11);
    ɵngcc0.ɵɵpipe(16, "async");
    ɵngcc0.ɵɵtemplate(17, StepperBulkTypeConfigurationComponent_ng_container_1_i_17_Template, 1, 0, "i", 12);
    ɵngcc0.ɵɵpipe(18, "async");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(19, "div", 13);
    ɵngcc0.ɵɵelementStart(20, "div", 7);
    ɵngcc0.ɵɵelementStart(21, "c8y-form-group", 14);
    ɵngcc0.ɵɵelementStart(22, "c8y-typeahead", 15);
    ɵngcc0.ɵɵlistener("ngModelChange", function StepperBulkTypeConfigurationComponent_ng_container_1_Template_c8y_typeahead_ngModelChange_22_listener($event) { ɵngcc0.ɵɵrestoreView(_r20); const ctx_r21 = ɵngcc0.ɵɵnextContext(); return ctx_r21.selectedConfigType = $event; })("onSearch", function StepperBulkTypeConfigurationComponent_ng_container_1_Template_c8y_typeahead_onSearch_22_listener($event) { ɵngcc0.ɵɵrestoreView(_r20); const ctx_r22 = ɵngcc0.ɵɵnextContext(); return ctx_r22.configType$.next($event); });
    ɵngcc0.ɵɵpipe(23, "translate");
    ɵngcc0.ɵɵelementStart(24, "c8y-li", 16);
    ɵngcc0.ɵɵlistener("click", function StepperBulkTypeConfigurationComponent_ng_container_1_Template_c8y_li_click_24_listener() { ɵngcc0.ɵɵrestoreView(_r20); const ctx_r23 = ɵngcc0.ɵɵnextContext(); ctx_r23.selectedConfigType = { name: "" }; return ctx_r23.configType$.next(""); });
    ɵngcc0.ɵɵelementStart(25, "span");
    ɵngcc0.ɵɵtext(26);
    ɵngcc0.ɵɵpipe(27, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(28, StepperBulkTypeConfigurationComponent_ng_container_1_c8y_li_28_Template, 3, 5, "c8y-li", 17);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(29, "div", 18);
    ɵngcc0.ɵɵelementStart(30, "div", 19);
    ɵngcc0.ɵɵelementStart(31, "div", 20);
    ɵngcc0.ɵɵelementStart(32, "c8y-list-group", 21);
    ɵngcc0.ɵɵtemplate(33, StepperBulkTypeConfigurationComponent_ng_container_1_c8y_li_33_Template, 19, 13, "c8y-li", 22);
    ɵngcc0.ɵɵpipe(34, "async");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(6, 12, "Select configuration"));
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(11, 14, "Filter\u2026"));
    ɵngcc0.ɵɵpropertyInterpolate("placeholder", ɵngcc0.ɵɵpipeBind1(12, 16, "Filter\u2026"));
    ɵngcc0.ɵɵproperty("ngModel", ɵngcc0.ɵɵpipeBind1(13, 18, ctx_r0.textFilter$));
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind1(16, 20, ctx_r0.textFilter$).length === 0);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind1(18, 22, ctx_r0.textFilter$).length > 0);
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵpropertyInterpolate("placeholder", ɵngcc0.ɵɵpipeBind1(23, 24, "Type to filter configuration types\u2026"));
    ɵngcc0.ɵɵproperty("ngModel", ctx_r0.selectedConfigType);
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(27, 26, "All configuration types"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r0.configTypes);
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(30, _c0, ctx_r0.elementCount < ctx_r0.DD_LOW_COUNT));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("c8yForOf", ɵngcc0.ɵɵpipeBind1(34, 28, ctx_r0.configurations$));
} }
function StepperBulkTypeConfigurationComponent_ng_container_3_span_13_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 57);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r24 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r24.selectedConfiguration.configurationType, " ");
} }
function StepperBulkTypeConfigurationComponent_ng_container_3_span_14_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 58);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 1, "Undefined"), " ");
} }
function StepperBulkTypeConfigurationComponent_ng_container_3_em_21_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "em", 59);
    ɵngcc0.ɵɵtext(1, " Undefined`device type` ");
    ɵngcc0.ɵɵelementEnd();
} }
function StepperBulkTypeConfigurationComponent_ng_container_3_div_35_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 60);
    ɵngcc0.ɵɵelement(1, "h1", 61);
    ɵngcc0.ɵɵelementStart(2, "p");
    ɵngcc0.ɵɵelementStart(3, "strong", 62);
    ɵngcc0.ɵɵtext(4, "No preview available.");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(5, "br");
    ɵngcc0.ɵɵelementStart(6, "small", 62);
    ɵngcc0.ɵɵtext(7, "Could not fetch the file.");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("c8yIcon", "file-code-o");
} }
function StepperBulkTypeConfigurationComponent_ng_container_3_ng_template_36_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "pre", 63);
    ɵngcc0.ɵɵelementStart(1, "code");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r29 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r29.selectedConfiguration == null ? null : ctx_r29.selectedConfiguration.binary);
} }
function StepperBulkTypeConfigurationComponent_ng_container_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "div", 43);
    ɵngcc0.ɵɵelementStart(2, "div", 44);
    ɵngcc0.ɵɵelementStart(3, "div", 6);
    ɵngcc0.ɵɵelementStart(4, "div", 4);
    ɵngcc0.ɵɵelementStart(5, "h4", 5);
    ɵngcc0.ɵɵtext(6);
    ɵngcc0.ɵɵpipe(7, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(8, "div", 45);
    ɵngcc0.ɵɵelementStart(9, "div", 46);
    ɵngcc0.ɵɵelementStart(10, "div", 47);
    ɵngcc0.ɵɵelementStart(11, "strong");
    ɵngcc0.ɵɵtext(12);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(13, StepperBulkTypeConfigurationComponent_ng_container_3_span_13_Template, 2, 1, "span", 48);
    ɵngcc0.ɵɵtemplate(14, StepperBulkTypeConfigurationComponent_ng_container_3_span_14_Template, 3, 3, "span", 49);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(15, "div", 50);
    ɵngcc0.ɵɵelementStart(16, "div", 32);
    ɵngcc0.ɵɵpipe(17, "translate");
    ɵngcc0.ɵɵelementStart(18, "span", 34);
    ɵngcc0.ɵɵtext(19, " Device type ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(20);
    ɵngcc0.ɵɵtemplate(21, StepperBulkTypeConfigurationComponent_ng_container_3_em_21_Template, 2, 0, "em", 51);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(22, "p");
    ɵngcc0.ɵɵelementStart(23, "span", 34);
    ɵngcc0.ɵɵtext(24, "Updated");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(25, "small");
    ɵngcc0.ɵɵtext(26);
    ɵngcc0.ɵɵpipe(27, "c8yDate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(28, "div", 18);
    ɵngcc0.ɵɵelementStart(29, "div", 19);
    ɵngcc0.ɵɵelementStart(30, "div", 52);
    ɵngcc0.ɵɵelementStart(31, "div", 6);
    ɵngcc0.ɵɵelementStart(32, "div", 53);
    ɵngcc0.ɵɵelementStart(33, "div", 54);
    ɵngcc0.ɵɵtext(34, "Preview");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(35, StepperBulkTypeConfigurationComponent_ng_container_3_div_35_Template, 8, 1, "div", 55);
    ɵngcc0.ɵɵtemplate(36, StepperBulkTypeConfigurationComponent_ng_container_3_ng_template_36_Template, 3, 1, "ng-template", null, 56, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const _r28 = ɵngcc0.ɵɵreference(37);
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(6);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(7, 12, "Preview configuration"), " ");
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵpropertyInterpolate("title", ctx_r1.selectedConfiguration == null ? null : ctx_r1.selectedConfiguration.name);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r1.selectedConfiguration == null ? null : ctx_r1.selectedConfiguration.name);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.selectedConfiguration == null ? null : ctx_r1.selectedConfiguration.configurationType);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !(ctx_r1.selectedConfiguration == null ? null : ctx_r1.selectedConfiguration.configurationType));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵpropertyInterpolate2("title", "", ɵngcc0.ɵɵpipeBind1(17, 14, "Device type"), ": ", ctx_r1.getDeviceTypeTitle(ctx_r1.selectedConfiguration), "");
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r1.selectedConfiguration == null ? null : ctx_r1.selectedConfiguration.deviceType, " ");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !(ctx_r1.selectedConfiguration == null ? null : ctx_r1.selectedConfiguration.deviceType));
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(27, 16, ctx_r1.selectedConfiguration == null ? null : ctx_r1.selectedConfiguration.lastUpdated));
    ɵngcc0.ɵɵadvance(9);
    ɵngcc0.ɵɵproperty("ngIf", !(ctx_r1.selectedConfiguration == null ? null : ctx_r1.selectedConfiguration.binary))("ngIfElse", _r28);
} }
class StepperBulkTypeConfigurationComponent extends BaseStepperComponent {
    constructor(bulkOperationService, repositoryService, translate) {
        super();
        this.bulkOperationService = bulkOperationService;
        this.repositoryService = repositoryService;
        this.translate = translate;
        this.NO_DEVICE_TYPE_AVAILABLE = gettext('Undefined`device type`');
        this.elementCount = 0;
        this.DD_LOW_COUNT = 10;
        this.textFilter$ = new BehaviorSubject('');
        this.configType$ = new BehaviorSubject('');
        this.configTypes = [];
        this.selectedConfigType = { name: '' };
        this.configurations$ = combineLatest(this.textFilter$, this.configType$).pipe(switchMap(([name, configType]) => this.getConfiguration(name, configType)), shareReplay(1));
        this.DD_LOW_COUNT = this.bulkOperationService.DD_LOW_COUNT;
        this.loadConfigurationTypes();
    }
    loadConfigurationTypes() {
        this.configTypeSubscription = this.configType$
            .pipe(debounceTime(300), distinctUntilChanged(), switchMap(searchStr => {
            const query = { configurationType: `*${searchStr}*` };
            return from(this.repositoryService.listRepositoryEntries(RepositoryType.CONFIGURATION, { query }));
        }))
            .subscribe(result => {
            const { data } = result;
            this.configTypes = uniqWith(data.map(val => ({ name: val.configurationType })), isEqual);
        });
    }
    ngOnDestroy() {
        this.configTypeSubscription.unsubscribe();
    }
    selectConfiguration(configuration) {
        this.selectedConfiguration = configuration;
    }
    goToSecondStep($event) {
        $event.stepper.next();
        this.getConfigBinary();
        this.deviceTypes = this.selectedConfiguration.deviceType;
    }
    getConfigBinary() {
        return __awaiter(this, void 0, void 0, function* () {
            if (this.selectedConfiguration.url) {
                this.selectedConfiguration.binary = yield this.repositoryService.getBinaryText(this.selectedConfiguration.url, { allowExternal: true, noAlerts: true });
            }
        });
    }
    getDeviceTypeTitle(configuration) {
        return get(configuration, 'deviceType', this.translate.instant(this.NO_DEVICE_TYPE_AVAILABLE));
    }
    retrieveOperationPrototype() {
        const configuration = {
            type: this.selectedConfiguration.configurationType,
            url: this.selectedConfiguration.url
        };
        return {
            name: gettext('Configuration update'),
            description: get(this.selectedConfiguration, 'name'),
            prototype: {
                description: `Update configuration to: ${this.selectedConfiguration.name}.`,
                c8y_DownloadConfigFile: configuration
            }
        };
    }
    getConfiguration(name, configurationType) {
        const query = name ? { name: `*${name}*` } : {};
        if (configurationType) {
            query.__or = [{ configurationType }, { __not: { __has: `configurationType` } }];
        }
        return this.repositoryService.listRepositoryEntries(RepositoryType.CONFIGURATION, { query });
    }
}
StepperBulkTypeConfigurationComponent.ɵfac = function StepperBulkTypeConfigurationComponent_Factory(t) { return new (t || StepperBulkTypeConfigurationComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.BulkOperationsService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.RepositoryService), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.TranslateService)); };
StepperBulkTypeConfigurationComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: StepperBulkTypeConfigurationComponent, selectors: [["c8y-stepper-bulk-type-configuration"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 5, vars: 9, consts: [[4, "customStep", "customStepCompleted", "customStepButtonsDisabled", "customStepOnNext"], [4, "customStep"], [1, "card-block", "p-t-0", "overflow-visible", "flex-no-shrink", "separator-bottom", "col-xs-12"], [1, "row", "p-b-16"], [1, "col-md-8", "col-md-offset-2", "col-lg-6", "col-lg-offset-3"], [1, "text-center", "m-b-16"], [1, "row"], [1, "col-md-6"], [1, "input-group", "input-group-search"], ["type", "search", 1, "form-control", 3, "title", "placeholder", "ngModel", "ngModelChange"], [1, "input-group-addon"], ["c8yIcon", "filter", 4, "ngIf"], ["c8yIcon", "times", "class", "text-muted", 3, "click", 4, "ngIf"], [1, "col-xs-12", "p-b-8", "visible-xs", "visible-sm"], [1, "m-0"], ["name", "configType", 3, "ngModel", "placeholder", "ngModelChange", "onSearch"], [1, "p-l-8", "p-r-8", "c8y-list__item--link", 3, "click"], ["class", "p-l-8 p-r-8 c8y-list__item--link", 3, "active", "click", 4, "ngFor", "ngForOf"], [1, "col-xs-12", "flex-grow", "no-gutter"], [1, "card-inner-scroll", "fit-h"], [1, "card-block", "p-t-0", "p-b-0"], [3, "ngClass"], [4, "c8yFor", "c8yForOf"], ["c8yIcon", "filter"], ["c8yIcon", "times", 1, "text-muted", 3, "click"], [1, "p-l-8", "p-r-8", "c8y-list__item--link", 3, "active", "click"], [3, "text", "pattern"], ["listItem", ""], [3, "onSelect"], ["icon", "gears"], [1, "content-flex-60"], [1, "col-5"], [1, "text-truncate", 3, "title"], [1, "col-4"], ["translate", "", 1, "text-label-small", "m-r-4"], ["class", "text-muted", 4, "ngIf"], [1, "col-3"], ["class", "label label-info", 3, "title", 4, "ngIf"], ["class", "label label-default", 3, "title", 4, "ngIf"], [1, "text-muted"], [1, "label", "label-info", 3, "title"], ["elementClass", "text-gray-lighter", 3, "text", "pattern"], [1, "label", "label-default", 3, "title"], [1, "d-contents"], [1, "card-block", "p-t-0", "flex-no-shrink", "separator-bottom"], [1, "row", "no-gutter"], [1, "col-xs-6"], [1, "text-right", "text-truncate", 3, "title"], ["class", "label label-primary", 4, "ngIf"], ["class", "label label-default", 4, "ngIf"], [1, "col-xs-6", "text-right"], ["class", "text-muted", "translate", "", 4, "ngIf"], [1, "card-block", "p-t-0"], [1, "col-md-8", "col-md-offset-2"], ["translate", "", 1, "legend", "form-block"], ["class", "c8y-empty-state text-left", 4, "ngIf", "ngIfElse"], ["binaryPreview", ""], [1, "label", "label-primary"], [1, "label", "label-default"], ["translate", "", 1, "text-muted"], [1, "c8y-empty-state", "text-left"], [3, "c8yIcon"], ["translate", ""], [2, "min-height", "98px"]], template: function StepperBulkTypeConfigurationComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "c8y-bulk-operation-stepper");
        ɵngcc0.ɵɵtemplate(1, StepperBulkTypeConfigurationComponent_ng_container_1_Template, 35, 32, "ng-container", 0);
        ɵngcc0.ɵɵpipe(2, "translate");
        ɵngcc0.ɵɵtemplate(3, StepperBulkTypeConfigurationComponent_ng_container_3_Template, 38, 18, "ng-container", 1);
        ɵngcc0.ɵɵpipe(4, "translate");
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("customStep", ɵngcc0.ɵɵpipeBind1(2, 5, "Select configuration"))("customStepCompleted", !!ctx.selectedConfiguration)("customStepButtonsDisabled", !ctx.selectedConfiguration)("customStepOnNext", ctx.goToSecondStep.bind(ctx));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("customStep", ɵngcc0.ɵɵpipeBind1(4, 7, "Preview configuration"));
    } }, directives: [ɵngcc4.BulkOperationStepper, ɵngcc4.CustomStep, ɵngcc5.DefaultValueAccessor, ɵngcc5.NgControlStatus, ɵngcc5.NgModel, ɵngcc6.NgIf, ɵngcc7.FormGroupComponent, ɵngcc7.TypeaheadComponent, ɵngcc7.ListItemComponent, ɵngcc6.NgForOf, ɵngcc7.ListGroupComponent, ɵngcc6.NgClass, ɵngcc7.ForOfDirective, ɵngcc7.IconDirective, ɵngcc7.HighlightComponent, ɵngcc7.ListItemRadioComponent, ɵngcc7.ListItemIconComponent, ɵngcc7.ListItemBodyComponent, ɵngcc7.C8yTranslateDirective], pipes: [ɵngcc7.C8yTranslatePipe, ɵngcc6.AsyncPipe, ɵngcc7.DatePipe], encapsulation: 2 });
StepperBulkTypeConfigurationComponent.ctorParameters = () => [
    { type: BulkOperationsService },
    { type: RepositoryService },
    { type: TranslateService }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(StepperBulkTypeConfigurationComponent, [{
        type: Component,
        args: [{
                selector: 'c8y-stepper-bulk-type-configuration',
                template: "<c8y-bulk-operation-stepper>\n  <ng-container\n    *customStep=\"\n      'Select configuration' | translate;\n      completed: !!selectedConfiguration;\n      buttonsDisabled: !selectedConfiguration;\n      onNext: goToSecondStep.bind(this)\"\n  >\n    <div class=\"card-block p-t-0 overflow-visible flex-no-shrink separator-bottom col-xs-12\">\n      <div class=\"row p-b-16\">\n        <div class=\"col-md-8 col-md-offset-2 col-lg-6 col-lg-offset-3\">\n          <h4 class=\"text-center m-b-16\">{{ 'Select configuration' | translate }}</h4>\n          <div class=\"row\">\n            <div class=\"col-md-6\">\n              <div class=\"input-group input-group-search\">\n                <input\n                  type=\"search\"\n                  class=\"form-control\"\n                  title=\"{{ 'Filter\u2026' | translate }}\"\n                  placeholder=\"{{ 'Filter\u2026' | translate }}\"\n                  [ngModel]=\"textFilter$ | async\"\n                  (ngModelChange)=\"textFilter$.next($event)\"\n                />\n                <span class=\"input-group-addon\">\n                  <i c8yIcon=\"filter\" *ngIf=\"(textFilter$ | async).length === 0\"></i>\n                  <i\n                    c8yIcon=\"times\"\n                    class=\"text-muted\"\n                    *ngIf=\"(textFilter$ | async).length > 0\"\n                    (click)=\"textFilter$.next('')\"\n                  ></i>\n                </span>\n              </div>\n            </div>\n            <div class=\"col-xs-12 p-b-8 visible-xs visible-sm\"></div>\n            <div class=\"col-md-6\">\n              <c8y-form-group class=\"m-0\">\n                <c8y-typeahead\n                  name=\"configType\"\n                  [(ngModel)]=\"selectedConfigType\"\n                  placeholder=\"{{ 'Type to filter configuration types\u2026' | translate }}\"\n                  (onSearch)=\"configType$.next($event)\"\n                >\n                  <c8y-li\n                    class=\"p-l-8 p-r-8 c8y-list__item--link\"\n                    (click)=\"selectedConfigType = { name: '' }; configType$.next('')\"\n                  >\n                    <span>{{ 'All configuration types' | translate }}</span>\n                  </c8y-li>\n                  <c8y-li\n                    *ngFor=\"let configType of configTypes\"\n                    class=\"p-l-8 p-r-8 c8y-list__item--link\"\n                    (click)=\"selectedConfigType = configType; configType$.next(configType.name)\"\n                    [active]=\"selectedConfigType === configType\"\n                  >\n                    <c8y-highlight\n                      [text]=\"configType.name\"\n                      [pattern]=\"configType$ | async\"\n                    ></c8y-highlight>\n                  </c8y-li>\n                </c8y-typeahead>\n              </c8y-form-group>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-xs-12 flex-grow no-gutter\">\n      <div class=\"card-inner-scroll fit-h\">\n        <div class=\"card-block p-t-0 p-b-0\">\n          <c8y-list-group [ngClass]=\"{ 'dd-low': elementCount < DD_LOW_COUNT }\">\n            <c8y-li #listItem *c8yFor=\"let configuration of configurations$ | async\">\n              <c8y-li-radio (onSelect)=\"selectConfiguration(configuration)\"></c8y-li-radio>\n              <c8y-li-icon icon=\"gears\"></c8y-li-icon>\n              <c8y-li-body class=\"content-flex-60\">\n                <div class=\"col-5\">\n                  <div class=\"text-truncate\" title=\"{{ configuration.name || '-' }}\">\n                    <c8y-highlight\n                      [text]=\"configuration.name || '-'\"\n                      [pattern]=\"textFilter$ | async\"\n                    ></c8y-highlight>\n                  </div>\n                </div>\n                <div class=\"col-4\">\n                  <div\n                    class=\"text-truncate\"\n                    title=\"{{ 'Device type' | translate }}: {{ getDeviceTypeTitle(configuration) }}\"\n                  >\n                    <span translate class=\"text-label-small m-r-4\">Device type</span>\n                    {{ configuration.deviceType }}\n                    <em class=\"text-muted\" *ngIf=\"!configuration.deviceType\">\n                      {{ 'Undefined`device type`' | translate }}\n                    </em>\n                  </div>\n                </div>\n                <div class=\"col-3\">\n                  <span\n                    class=\"label label-info\"\n                    *ngIf=\"configuration.configurationType\"\n                    title=\"{{ 'Configuration type' | translate }}: {{\n                      configuration.configurationType\n                    }}\"\n                  >\n                    <c8y-highlight\n                      [text]=\"configuration.configurationType\"\n                      elementClass=\"text-gray-lighter\"\n                      [pattern]=\"configType$ | async\"\n                    ></c8y-highlight>\n                  </span>\n                  <span\n                    class=\"label label-default\"\n                    *ngIf=\"!configuration.configurationType\"\n                    title=\"{{ 'Configuration type' | translate }}: {{ 'Undefined' | translate }}\"\n                  >\n                    {{ 'Undefined' | translate }}\n                  </span>\n                </div>\n              </c8y-li-body>\n            </c8y-li>\n          </c8y-list-group>\n        </div>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *customStep=\"'Preview configuration' | translate\">\n    <div class=\"d-contents\">\n      <div class=\"card-block p-t-0 flex-no-shrink separator-bottom\">\n        <div class=\"row\">\n          <div class=\"col-md-8 col-md-offset-2 col-lg-6 col-lg-offset-3\">\n            <h4 class=\"text-center m-b-16\">\n              {{ 'Preview configuration' | translate }}\n            </h4>\n            <div class=\"row no-gutter\">\n              <div class=\"col-xs-6\">\n                <div class=\"text-right text-truncate\" title=\"{{ selectedConfiguration?.name }}\">\n                  <strong>{{ selectedConfiguration?.name }}</strong>\n                </div>\n                <span class=\"label label-primary\" *ngIf=\"selectedConfiguration?.configurationType\">\n                  {{ selectedConfiguration.configurationType }}\n                </span>\n                <span class=\"label label-default\" *ngIf=\"!selectedConfiguration?.configurationType\">\n                  {{ 'Undefined' | translate }}\n                </span>\n              </div>\n              <div class=\"col-xs-6 text-right\">\n                <div class=\"text-truncate\" title=\"{{ 'Device type' | translate }}: {{ getDeviceTypeTitle(selectedConfiguration) }}\">\n                  <span translate class=\"text-label-small m-r-4\">\n                    Device type\n                  </span>\n                  {{ selectedConfiguration?.deviceType }}\n                  <em class=\"text-muted\" *ngIf=\"!selectedConfiguration?.deviceType\" translate>\n                    Undefined`device type`\n                  </em>\n                </div>\n                <p>\n                  <span translate class=\"text-label-small m-r-4\">Updated</span>\n                  <small>{{ selectedConfiguration?.lastUpdated | c8yDate }}</small>\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-xs-12 flex-grow no-gutter\">\n        <div class=\"card-inner-scroll fit-h\">\n          <div class=\"card-block p-t-0\">\n            <div class=\"row\">\n              <div class=\"col-md-8 col-md-offset-2\">\n                <div class=\"legend form-block\" translate>Preview</div>\n                <div\n                  class=\"c8y-empty-state text-left\"\n                  *ngIf=\"!this.selectedConfiguration?.binary; else binaryPreview\"\n                >\n                  <h1 [c8yIcon]=\"'file-code-o'\"></h1>\n                  <p>\n                    <strong translate>No preview available.</strong><br />\n                    <small translate>Could not fetch the file.</small>\n                  </p>\n                </div>\n                <ng-template #binaryPreview>\n                  <pre\n                    style=\"min-height: 98px;\"\n                  ><code>{{ this.selectedConfiguration?.binary }}</code></pre>\n                </ng-template>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </ng-container>\n</c8y-bulk-operation-stepper>\n"
            }]
    }], function () { return [{ type: ɵngcc1.BulkOperationsService }, { type: ɵngcc2.RepositoryService }, { type: ɵngcc3.TranslateService }]; }, null); })();

const ɵ0 = {
    type: BulkOperationType.CONFIGURATION,
    c8yIcon: 'cogs',
    name: gettext('Configuration update'),
    path: `${baseUrl}configuration`,
    component: StepperBulkTypeConfigurationComponent,
    fragments: ['c8y_DownloadConfigFile', 'c8y_Configuration'],
    selected: false
};
/** Module for the 'Configuration update' operation type stepper */
class StepperBulkTypeConfigurationModule {
}
StepperBulkTypeConfigurationModule.ɵfac = function StepperBulkTypeConfigurationModule_Factory(t) { return new (t || StepperBulkTypeConfigurationModule)(); };
StepperBulkTypeConfigurationModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: StepperBulkTypeConfigurationModule });
StepperBulkTypeConfigurationModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [
        {
            provide: HOOK_LIST_BULK_TYPE,
            useValue: ɵ0,
            multi: true
        }
    ], imports: [[
            CoreModule,
            FormsModule,
            ReactiveFormsModule,
            BulkOperationStepperModule,
            RepositoryModule
        ]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(StepperBulkTypeConfigurationModule, [{
        type: NgModule,
        args: [{
                declarations: [StepperBulkTypeConfigurationComponent],
                imports: [
                    CoreModule,
                    FormsModule,
                    ReactiveFormsModule,
                    BulkOperationStepperModule,
                    RepositoryModule
                ],
                providers: [
                    {
                        provide: HOOK_LIST_BULK_TYPE,
                        useValue: ɵ0,
                        multi: true
                    }
                ],
                entryComponents: [StepperBulkTypeConfigurationComponent],
                exports: [StepperBulkTypeConfigurationComponent]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(StepperBulkTypeConfigurationModule, { declarations: function () { return [StepperBulkTypeConfigurationComponent]; }, imports: function () { return [CoreModule,
        FormsModule,
        ReactiveFormsModule,
        BulkOperationStepperModule,
        RepositoryModule]; }, exports: function () { return [StepperBulkTypeConfigurationComponent]; } }); })();

/**
 * Generated bundle index. Do not edit.
 */

export { StepperBulkTypeConfigurationComponent, StepperBulkTypeConfigurationModule, ɵ0 };

//# sourceMappingURL=c8y-ngx-components-operations-stepper-bulk-type-configuration.js.map