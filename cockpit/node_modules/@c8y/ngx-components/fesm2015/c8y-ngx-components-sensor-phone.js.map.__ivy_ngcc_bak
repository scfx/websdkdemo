{"version":3,"file":"c8y-ngx-components-sensor-phone.js","sources":["../../sensor-phone/sensor-phone.service.ts","../../sensor-phone/sensor-phone-modal.component.ts","../../sensor-phone/connect-smartphone.factory.ts","../../sensor-phone/sensor-phone.module.ts","../../sensor-phone/real-time-mock.service.ts","../../sensor-phone/c8y-ngx-components-sensor-phone.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { DeviceRegistrationService, InventoryService } from '@c8y/client';\nimport { AppStateService, gettext } from '@c8y/ngx-components';\nimport { head } from 'lodash-es';\n\n@Injectable()\nexport class SensorPhoneService {\n  readonly HTTP_STATUS_CODE = {\n    OK: 200,\n    CREATED: 201\n  };\n  private domainName: string;\n  private tenantId: string;\n  private PHONE_GROUP_FRAGMENT = 'c8y_IsSensorPhoneGroup';\n  private readonly PHONE_GROUP_NAME = gettext('Phones');\n\n  constructor(\n    private ui: AppStateService,\n    private inventoryService: InventoryService,\n    private deviceRegistrationService: DeviceRegistrationService\n  ) {\n    this.ui.currentTenant.subscribe(data => {\n      if (data) {\n        this.domainName = data.domainName;\n        this.tenantId = data.name;\n      }\n    });\n  }\n\n  getHost() {\n    return this.domainName.substring(this.domainName.indexOf('.') + 1);\n  }\n\n  getTenantName() {\n    return this.domainName.split('.')[0];\n  }\n\n  getTenantId() {\n    return this.tenantId;\n  }\n\n  async checkPhoneGroupExists() {\n    const { data, res } = await this.inventoryService.list({\n      fragmentType: this.PHONE_GROUP_FRAGMENT\n    });\n    if (data && res && res.status === this.HTTP_STATUS_CODE.OK) {\n      return head(data);\n    }\n    return null;\n  }\n\n  async addPhoneGroup() {\n    const group = await this.checkPhoneGroupExists();\n    if (group) {\n      return group;\n    }\n    return await this.createPhoneGroup();\n  }\n\n  async createPhoneGroup() {\n    const newPhoneGroup = {\n      c8y_Global: {},\n      c8y_IsDeviceGroup: {},\n      type: 'c8y_DeviceGroup',\n      name: this.PHONE_GROUP_NAME,\n      [this.PHONE_GROUP_FRAGMENT]: {}\n    };\n\n    const { data, res } = await this.inventoryService.create(newPhoneGroup);\n    if (data && res && res.status === this.HTTP_STATUS_CODE.CREATED) {\n      return data;\n    }\n    return null;\n  }\n\n  generateRegistrationData(deviceId) {\n    const res = 'c8y://' + this.getTenantName() + '.' + this.getHost() + '/?deviceId=' + deviceId;\n    return res;\n  }\n\n  async createPhoneRegistrationRequest(deviceId) {\n    const group = await this.addPhoneGroup();\n    const device = { id: deviceId, groupId: group.id };\n\n    const { res } = await this.deviceRegistrationService.create(device);\n    if (res.status !== this.HTTP_STATUS_CODE.CREATED) {\n      throw res;\n    }\n  }\n\n  async acceptPhoneReqistrationRequest(deviceId) {\n    const { res } = await this.deviceRegistrationService.accept(deviceId);\n    if (res.status !== this.HTTP_STATUS_CODE.OK) {\n      throw res;\n    }\n  }\n}\n","import { Component, ViewChild, AfterViewInit, ElementRef, Renderer2 } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { C8yStepper, gettext, retryWithDelay } from '@c8y/ngx-components';\nimport { SensorPhoneService } from './sensor-phone.service';\nimport { map, tap, throttleTime } from 'rxjs/operators';\nimport { DeviceRegistrationService, DeviceRegistrationStatus, InventoryService } from '@c8y/client';\nimport { Router } from '@angular/router';\nimport { defer } from 'rxjs';\n\n@Component({\n  selector: 'c8y-sensor-phone',\n  templateUrl: 'sensor-phone-modal.component.html'\n})\nexport class SensorPhoneModalComponent implements AfterViewInit {\n  @ViewChild(C8yStepper, { static: false })\n  stepper: C8yStepper;\n  @ViewChild(C8yStepper, { read: ElementRef, static: false })\n  container: ElementRef;\n  pendingDeviceBootstrap: boolean = true;\n  success;\n  errorMessage = gettext('Failed to register a smartphone.');\n  registrationData = null;\n  tenantId;\n  instance;\n  deviceId: string;\n  dashboardLink: string = '';\n  constructor(\n    private bsModalRef: BsModalRef,\n    private sensorPhoneService: SensorPhoneService,\n    private renderer: Renderer2,\n    private deviceRegistrationService: DeviceRegistrationService,\n    private router: Router,\n    private inventoryService: InventoryService\n  ) {\n  }\n\n  ngAfterViewInit() {\n    this.stepper.selectionChange\n      .pipe(throttleTime(100))\n      .subscribe((stepper: Partial<C8yStepper>) => this.onStepperSelectionChange(stepper));\n    this.tenantId = this.sensorPhoneService.getTenantName();\n    this.instance = this.sensorPhoneService.getHost();\n  }\n\n  onStepperSelectionChange(stepper: Partial<C8yStepper>) {\n    const PHONE_REGISTRATION_STEP_INDEX = 2;\n    if (stepper.selectedIndex === PHONE_REGISTRATION_STEP_INDEX) {\n      this.registerPhone();\n    }\n  }\n\n  async registerPhone() {\n    try {\n      this.deviceId = this.generateDeviceId();\n      this.registrationData = this.sensorPhoneService.generateRegistrationData(this.deviceId);\n      await this.sensorPhoneService.createPhoneRegistrationRequest(this.deviceId);\n      await this.waitForPhoneToConnect();\n      await this.sensorPhoneService.acceptPhoneReqistrationRequest(this.deviceId);\n      const { deviceMo, dashboardMo } = await this.waitForDeviceAndDashboardMos();\n      this.onDeviceAndDashboardMosCreated(deviceMo, dashboardMo);\n    } catch (error) {\n      this.onFailure();\n    }\n  }\n\n  waitForPhoneToConnect() {\n    return defer(() => this.deviceRegistrationService.detail(this.deviceId))\n      .pipe(\n        map(res => res.data),\n        tap(phoneRegistration => {\n          if (phoneRegistration.status === DeviceRegistrationStatus.WAITING_FOR_CONNECTION) {\n            throw new Error('Phone is not connected yet.');\n          } else {\n            this.pendingDeviceBootstrap = false;\n          }\n        }),\n        retryWithDelay(6000, 4)\n      ).toPromise();\n  }\n\n  waitForDeviceAndDashboardMos() {\n    return defer(() => this.inventoryService.list({ owner: `device_${this.deviceId}` }))\n      .pipe(\n        map(res => res.data),\n        map(mos => {\n          const deviceMo = mos.find(mo => !!mo.c8y_IsDevice);\n          const dashboardMo = mos.find(mo => !!mo.c8y_Dashboard);\n          if (!(deviceMo && dashboardMo)) {\n            throw new Error('Both device and dashboard MO must be present.');\n          } else {\n            return { deviceMo, dashboardMo };\n          }\n        }),\n        retryWithDelay(6000, 4)\n      ).toPromise();\n  }\n\n  onDeviceAndDashboardMosCreated(deviceMo, dashboardMo) {\n    this.dashboardLink = `/device/${deviceMo.id}/dashboard/${dashboardMo.id}`;\n    this.stepper.next();\n    if (this.container) {\n      this.renderer.setStyle(this.container.nativeElement, 'display', 'none');\n      this.success = true;\n    }\n  }\n\n  generateDeviceId() {\n    return 'phone' + Math.floor(Math.random() * 100000);\n  }\n\n  openDashboard() {\n    if (this.dashboardLink) {\n      this.router.navigate([this.dashboardLink]);\n      this.cancel();\n    }\n  }\n\n  cancel() {\n    this.bsModalRef.hide();\n    this.deleteDeviceRequest();\n  }\n\n  retry() {\n    this.success = undefined;\n    if (this.container) {\n      this.renderer.setStyle(this.container.nativeElement, 'display', 'block');\n    }\n    this.deleteDeviceRequest();\n    this.stepper.selectedIndex = 2;\n  }\n\n  onFailure() {\n    this.success = false;\n    this.stepper.next();\n    if (this.container) {\n      this.renderer.setStyle(this.container.nativeElement, 'display', 'none');\n    }\n  }\n\n  async deleteDeviceRequest() {\n    if (this.deviceId) {\n      try {\n        await this.deviceRegistrationService.delete(this.deviceId);\n      } catch (error) {\n        //\n      }\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { DocLink, ExtensionFactory, gettext, OptionsService } from '@c8y/ngx-components';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { of } from 'rxjs';\nimport { SensorPhoneModalComponent } from './sensor-phone-modal.component';\n\n@Injectable()\nexport class ConnectSmartphoneFactory implements ExtensionFactory<DocLink> {\n  constructor(\n    private optionsService: OptionsService,\n    private bsModalService: BsModalService\n  ) {}\n  get() {\n    if (this.optionsService.get('sensorPhone', false)) {\n      return of([\n        {\n          icon: 'c8y-icon c8y-icon-mobile-add',\n          type: 'quicklink',\n          label: gettext('Connect smartphone'),\n          url: undefined,\n          click: () => {\n            this.bsModalService.show(SensorPhoneModalComponent, {\n              backdrop: 'static',\n              class: 'lg'\n            });\n          }\n        } as DocLink\n      ]);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CoreModule, HOOK_DOCS } from '@c8y/ngx-components';\nimport { ConnectSmartphoneFactory } from './connect-smartphone.factory';\nimport { SensorPhoneModalComponent } from './sensor-phone-modal.component';\nimport { QRCodeModule } from 'angularx-qrcode';\nimport { SensorPhoneService } from './sensor-phone.service';\n\n@NgModule({\n  imports: [CoreModule, QRCodeModule],\n  declarations: [SensorPhoneModalComponent],\n  entryComponents: [SensorPhoneModalComponent],\n  providers: [\n    {\n      provide: HOOK_DOCS,\n      useClass: ConnectSmartphoneFactory,\n      multi: true\n    },\n    SensorPhoneService\n  ]\n})\nexport class SensorPhoneModule {}\n","export class RealTimeMock {\n  deviceId;\n  bootstrapCallback;\n  managedObjCallback;\n  subscribe(channel, callback) {\n    if (channel === '/bootstrap') {\n      this.bootstrapCallback = callback;\n    } else {\n      this.managedObjCallback = callback;\n    }\n  }\n  unsubscribe() {\n    /* empty */\n  }\n\n  triggerBootstrap(res) {\n    this.bootstrapCallback({ data: res });\n  }\n  triggerManagedObject(res) {\n    this.managedObjCallback({ data: res });\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}