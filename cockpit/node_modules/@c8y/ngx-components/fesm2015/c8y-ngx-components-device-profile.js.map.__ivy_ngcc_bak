{"version":3,"file":"c8y-ngx-components-device-profile.js","sources":["../../device-profile/device-profile-navigation.factory.ts","../../device-profile/device-profile.service.ts","../../device-profile/select-configuration-modal.component.ts","../../device-profile/device-profile.model.ts","../../device-profile/device-profile.component.ts","../../device-profile/add-device-profile.component.ts","../../device-profile/device-profile-list.component.ts","../../device-profile/device-profile.guard.ts","../../device-profile/device-tab-profile/device-tab-profile.component.ts","../../device-profile/device-tab-profile/device-tab-profile-detail.component.ts","../../device-profile/device-tab-profile/device-profile-item-list.component.ts","../../device-profile/device-profile.module.ts","../../device-profile/c8y-ngx-components-device-profile.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { gettext, NavigatorNode, NavigatorNodeFactory } from '@c8y/ngx-components';\n\n@Injectable()\nexport class DeviceProfileNavigationFactory implements NavigatorNodeFactory {\n  nodeItem: NavigatorNode;\n\n  async get() {\n    if (!this.nodeItem) {\n      this.nodeItem = new NavigatorNode({\n        label: gettext('Device profiles'),\n        path: '/device-profiles',\n        icon: 'c8y-device-profile',\n        parent: gettext('Management')\n      });\n    }\n    return this.nodeItem;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  IManagedObject,\n  InventoryService,\n  IOperation,\n  IResultList,\n  OperationService,\n  OperationStatus,\n  QueriesUtil\n} from '@c8y/client';\nimport {\n  DeviceProfile,\n  DeviceProfileFirmware,\n  DeviceProfileSoftware,\n  ComparisonResult\n} from './device-profile.model';\nimport { AlertService } from '@c8y/ngx-components';\nimport { sortBy, toArray, get } from 'lodash-es';\nimport { gettext } from '@c8y/ngx-components';\n\n@Injectable()\nexport class DeviceProfileService {\n  readonly dateFrom = new Date(0);\n  readonly dateTo = new Date(Date.now() + 86400000); // 1 day in the future\n  private queriesUtil: QueriesUtil;\n\n  private NOT_INSTALLED_WARNING = gettext('Not installed on the device');\n  private VERSION_MISSMATCH_WARNING = gettext('Version mismatch');\n  private SAME_URL_WARNING = gettext(\n    'Installed configuration has the same URL but different name or type than the one in the profile'\n  );\n\n  constructor(\n    private inventoryService: InventoryService,\n    private operationService: OperationService,\n    private alertService: AlertService\n  ) {\n    this.queriesUtil = new QueriesUtil();\n  }\n\n  createDeviceProfile(deviceProfile: Partial<DeviceProfile>) {\n    if (get(deviceProfile, 'c8y_Filter.type') === '') {\n      delete deviceProfile.c8y_Filter.type;\n    }\n    return this.inventoryService.create(deviceProfile as IManagedObject);\n  }\n\n  getDeviceProfilesByDeviceType(deviceType: string): Promise<IResultList<IManagedObject>> {\n    const deviceTypeFilter = {\n      __or: [\n        { 'c8y_Filter.type': deviceType },\n        { 'c8y_Filter.type': '' },\n        { __not: { __has: 'c8y_Filter.type' } }\n      ]\n    };\n    return this.getDeviceProfiles(deviceTypeFilter);\n  }\n\n  getDeviceProfiles(andQuery?: any): Promise<IResultList<IManagedObject>> {\n    let query: object = {\n      type: 'c8y_Profile'\n    };\n    const filter: object = {\n      pageSize: 100,\n      withTotalPages: true\n    };\n    query = this.queriesUtil.addAndFilter(query, andQuery || {});\n    return this.inventoryService.listQuery(query, filter);\n  }\n\n  async getProfileOperation(deviceId: string | number) {\n    const filter: object = {\n      deviceId,\n      fragmentType: 'c8y_DeviceProfile',\n      dateFrom: this.dateFrom.toISOString(),\n      dateTo: this.dateTo.toISOString(),\n      revert: true,\n      pageSize: 1\n    };\n\n    const operation = (await this.operationService.list(filter)).data[0];\n    return operation && operation.status !== OperationStatus.SUCCESSFUL ? operation : undefined;\n  }\n\n  async createProfileOperation(device: IManagedObject, deviceProfile: Partial<DeviceProfile>) {\n    let operation;\n    const operationCfg: IOperation = {\n      deviceId: device.id,\n      profileId: deviceProfile.id,\n      profileName: deviceProfile.name,\n      c8y_DeviceProfile: deviceProfile.c8y_DeviceProfile,\n      description: `Assign device profile ${deviceProfile.name} to device ${device.name}`\n    };\n    try {\n      const { data } = await this.operationService.create(operationCfg);\n      operation = data;\n    } catch (ex) {\n      this.alertService.addServerFailure(ex);\n    }\n    return operation;\n  }\n\n  getFirmwareItems(\n    device: IManagedObject,\n    selectedProfile: Partial<DeviceProfile>\n  ): ComparisonResult[] {\n    const deviceFirmware = device.c8y_Firmware;\n    const profileFirmware = get(selectedProfile, 'c8y_DeviceProfile.firmware');\n    const deviceItems = [];\n    const profileItems = [];\n\n    if (deviceFirmware) {\n      deviceItems.push(deviceFirmware);\n    }\n    if (profileFirmware) {\n      profileItems.push(profileFirmware);\n    }\n    return this.createProfileComparison(\n      deviceItems,\n      profileItems,\n      'name',\n      'version',\n      this.getAlert('firmware')\n    );\n  }\n\n  getSoftwareItems(\n    device: IManagedObject,\n    selectedProfile: Partial<DeviceProfile>\n  ): ComparisonResult[] {\n    const deviceSoftware = device.c8y_SoftwareList;\n    const profileSoftware = get(selectedProfile, 'c8y_DeviceProfile.software');\n    return this.createProfileComparison(\n      deviceSoftware,\n      profileSoftware,\n      'name',\n      'version',\n      this.getAlert('software')\n    );\n  }\n\n  getConfigurationItems(\n    device: IManagedObject,\n    selectedProfile: Partial<DeviceProfile>\n  ): ComparisonResult[] {\n    const deviceConfiguration = [];\n    Object.keys(device).forEach(key => {\n      if (key.slice(0, 18) === 'c8y_Configuration_') {\n        deviceConfiguration.push(device[key]);\n      }\n    });\n    const profileConfiguration = get(selectedProfile, 'c8y_DeviceProfile.configuration');\n    return this.createProfileComparison(\n      deviceConfiguration,\n      profileConfiguration,\n      'url',\n      'type',\n      this.getAlert('configuration')\n    );\n  }\n\n  private getAlert(itemType: string): (comparisionResult: ComparisonResult) => string {\n    const notInstalled = (comparisionResult: ComparisonResult) => {\n      return !comparisionResult.device ? this.NOT_INSTALLED_WARNING : '';\n    };\n\n    switch (itemType) {\n      case 'firmware':\n      case 'software':\n        return (comparisionResult: ComparisonResult) => {\n          return comparisionResult.device &&\n            comparisionResult.profile &&\n            comparisionResult.device.itemDetails !== comparisionResult.profile.itemDetails\n            ? this.VERSION_MISSMATCH_WARNING\n            : notInstalled(comparisionResult);\n        };\n      case 'configuration':\n        return (comparisionResult: ComparisonResult) => {\n          return comparisionResult.device &&\n            comparisionResult.profile &&\n            (comparisionResult.device.itemName !== comparisionResult.profile.itemName ||\n              comparisionResult.device.itemDetails !== comparisionResult.profile.itemDetails)\n            ? this.SAME_URL_WARNING\n            : notInstalled(comparisionResult);\n        };\n      default:\n        return notInstalled;\n    }\n  }\n\n  private createProfileComparison(\n    deviceItems: any[] = [],\n    profileItems: Array<DeviceProfileSoftware | DeviceProfileFirmware> = [],\n    mergeByProperty: string,\n    propertyNameWithDetails: string,\n    getAlert: (comparisionResult: ComparisonResult) => string\n  ): ComparisonResult[] {\n    const comparisonObj = this.createProfileComparisonFromDeviceItems(\n      deviceItems,\n      mergeByProperty,\n      propertyNameWithDetails\n    );\n    const extendedComparisonObj = this.extendProfileComparisonWithProfileItems(\n      comparisonObj,\n      profileItems,\n      mergeByProperty,\n      propertyNameWithDetails,\n      getAlert\n    );\n    return sortBy(toArray(extendedComparisonObj), 'name');\n  }\n\n  private createProfileComparisonFromDeviceItems(\n    deviceItems: any[],\n    mergeByProperty: string,\n    propertyNameWithDetails: string\n  ): any {\n    return deviceItems.reduce(\n      (comapritionItem, deviceItem) =>\n        Object.assign(comapritionItem, {\n          [deviceItem[mergeByProperty]]: {\n            device: {\n              itemName: deviceItem.name,\n              itemDetails: deviceItem[propertyNameWithDetails],\n              itemUrl: deviceItem.url\n            },\n            profile: undefined\n          }\n        }),\n      {}\n    );\n  }\n\n  private extendProfileComparisonWithProfileItems(\n    comparisonObj: object,\n    profileItems: Array<DeviceProfileSoftware | DeviceProfileFirmware>,\n    mergeByProperty: string,\n    propertyNameWithDetails: string,\n    getAlert: (comparisionResult: ComparisonResult) => string\n  ) {\n    profileItems.forEach(profileItem => {\n      const comparisionResult: ComparisonResult = {\n        profile: {\n          itemName: profileItem.name,\n          itemDetails: profileItem[propertyNameWithDetails],\n          itemUrl: profileItem.url\n        },\n        device: comparisonObj[profileItem[mergeByProperty]]\n          ? comparisonObj[profileItem[mergeByProperty]].device\n          : undefined\n      };\n      comparisionResult.comparisonAlert = getAlert(comparisionResult);\n      comparisonObj[profileItem[mergeByProperty]] = comparisionResult;\n    });\n    return comparisonObj;\n  }\n}\n","import { Component, EventEmitter } from '@angular/core';\nimport { gettext, ISelectModalObject, ISelectModalOption, ModalLabels } from '@c8y/ngx-components';\nimport { IManagedObject, QueriesUtil } from '@c8y/client';\nimport { Subject, Observable } from 'rxjs';\nimport { switchMap, map } from 'rxjs/operators';\nimport { RepositoryService, RepositoryType } from '@c8y/ngx-components/repository';\n\n@Component({\n  selector: 'c8y-select-configuration-modal',\n  templateUrl: './select-configuration-modal.component.html'\n})\nexport class SelectConfigurationModalComponent {\n  title: string = gettext('Select configuration');\n  load: Subject<void> = new Subject();\n  configurations: Observable<any[]> = this.load.pipe(\n    switchMap(() => this.getItems()),\n    map(({ data }) => this.aggregate(data))\n  );\n  resultEmitter: EventEmitter<any[]> = new EventEmitter<any>();\n  selected: any[];\n  deviceTypeQuery: any = {};\n  searchQuery: any = {};\n  labels: ModalLabels = { ok: gettext('Save') };\n  private queriesUtil: QueriesUtil;\n\n  constructor(private repositoryService: RepositoryService) {\n    this.queriesUtil = new QueriesUtil();\n  }\n\n  search(searchTerm) {\n    if (!searchTerm) {\n      this.searchQuery = {};\n    } else {\n      this.searchQuery = this.queriesUtil.addOrFilter(\n        { name: `*${searchTerm}*` },\n        { configurationType: `*${searchTerm}*` }\n      );\n    }\n    this.load.next();\n  }\n\n  result(selectedItems) {\n    this.resultEmitter.emit(selectedItems);\n  }\n\n  getItems() {\n    return this.repositoryService.listRepositoryEntries(RepositoryType.CONFIGURATION, {\n      query: this.queriesUtil.addOrFilter(this.deviceTypeQuery, this.searchQuery),\n      params: { pageSize: 100 }\n    });\n  }\n\n  aggregate(mos: IManagedObject[]): ISelectModalObject[] {\n    const selectedItems: any[] = this.selected;\n    return mos.reduce((acc, curr) => {\n      curr.configurationType = curr.configurationType || curr.name;\n      const selected =\n        selectedItems && selectedItems.filter(val => val.url === curr.url).length > 0;\n      const selectModalOption: ISelectModalOption = {\n        body: [{ value: curr.name }],\n        obj: curr,\n        selected\n      };\n      let selectModalObject: ISelectModalObject = acc.find(\n        val => val.body[0].value === curr.configurationType\n      ) as ISelectModalObject;\n      if (selectModalObject) {\n        selectModalObject.options.push(selectModalOption);\n      } else {\n        selectModalObject = {\n          groupId: curr.id,\n          body: [{ value: curr.configurationType }],\n          options: [selectModalOption]\n        };\n        acc.push(selectModalObject);\n      }\n      return acc;\n    }, []);\n  }\n}\n","import { IManagedObject } from '@c8y/client';\n\nexport interface DeviceProfile extends Partial<IManagedObject> {\n  name?: string;\n  type: string;\n  c8y_Filter: {\n    type?: string;\n  };\n  c8y_DeviceProfile: {\n    firmware?: DeviceProfileFirmware;\n    software?: DeviceProfileSoftware[];\n    configuration?: DeviceProfileConfiguration[];\n  };\n}\n\nexport interface DeviceProfileFirmware {\n  name: string;\n  version: string;\n  url: string;\n  isPatch: boolean;\n  patchDependency?: string;\n}\n\nexport interface DeviceProfileSoftware {\n  name: string;\n  version: string;\n  url: string;\n  action: string;\n}\n\nexport interface DeviceProfileConfiguration {\n  url: string;\n  name: string;\n  type: string;\n}\n\nexport interface ComparisonResult {\n  profile: {\n    itemName: string;\n    itemDetails?: string;\n    itemUrl: string;\n  };\n  device: {\n    itemName: string;\n    itemDetails?: string;\n    itemUrl: string;\n  };\n  comparisonAlert?: string;\n}\n\nexport enum DeviceProfileOperation {\n  APPLY_PROFILE = 'c8y_DeviceProfile'\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { ActivatedRoute } from '@angular/router';\nimport {\n  DeviceProfile,\n  DeviceProfileConfiguration,\n  DeviceProfileFirmware,\n  DeviceProfileSoftware\n} from './device-profile.model';\nimport { AlertService, BreadcrumbService, gettext, ModalSelectionMode } from '@c8y/ngx-components';\nimport { IManagedObject, InventoryService, QueriesUtil } from '@c8y/client';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { assign, isEqual, concat, uniqWith } from 'lodash-es';\nimport { SelectConfigurationModalComponent } from './select-configuration-modal.component';\nimport { has, isEmpty } from 'lodash-es';\nimport { take, distinctUntilChanged, switchMap, map, shareReplay } from 'rxjs/operators';\nimport { RepositoryType, RepositorySelectModalComponent } from '@c8y/ngx-components/repository';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { RepositoryService } from '@c8y/ngx-components/repository';\n\n@Component({\n  selector: 'c8y-device-profile',\n  templateUrl: './device-profile.component.html'\n})\nexport class DeviceProfileComponent implements OnInit {\n  DEVICE_TYPE_POPOVER = gettext(\n    'The device profile will be available for assignments on devices of the specified type. Otherwise, it will be available for all device types.'\n  );\n  deviceProfile: DeviceProfile;\n  profileName: string;\n  private queriesUtil: QueriesUtil;\n\n  constructor(\n    private route: ActivatedRoute,\n    private alertService: AlertService,\n    private inventoryService: InventoryService,\n    private location: Location,\n    private breadcrumbService: BreadcrumbService,\n    private bsModal: BsModalService,\n    private repositoryService: RepositoryService\n  ) {\n    this.queriesUtil = new QueriesUtil();\n  }\n\n  async ngOnInit() {\n    const profileId = this.route.snapshot.paramMap.get('id');\n    this.deviceProfile = (await this.getDeviceProfile(profileId)) as DeviceProfile;\n    if (this.deviceProfile) {\n      this.profileName = this.deviceProfile.name;\n      if (!this.deviceProfile.c8y_DeviceProfile.software) {\n        this.deviceProfile.c8y_DeviceProfile.software = [];\n      }\n      if (!this.deviceProfile.c8y_DeviceProfile.configuration) {\n        this.deviceProfile.c8y_DeviceProfile.configuration = [];\n      }\n    }\n  }\n\n  addFirmware() {\n    const initialState: Partial<RepositorySelectModalComponent> & {\n      repositoryEntriesWithVersionsFn$: (modal: any) => Observable<IManagedObject[]>;\n    } = {\n      deviceTypeQuery: this.getDeviceTypeQuery(RepositoryType.FIRMWARE),\n      repositoryType: RepositoryType.FIRMWARE,\n      repositoryEntriesWithVersionsFn$: modalDialog =>\n        this.getRepositoryEntriesWithVersions$(\n          modalDialog.content.searchTerm,\n          RepositoryType.FIRMWARE\n        ),\n      icon: 'c8y-firmware',\n      title: gettext('Select firmware'),\n      mode: ModalSelectionMode.SINGLE\n    };\n    const modal = this.bsModal.show(RepositorySelectModalComponent, {\n      ignoreBackdropClick: true,\n      initialState\n    });\n\n    if (initialState.repositoryEntriesWithVersionsFn$) {\n      modal.content.repositoryEntriesWithVersions$ = initialState.repositoryEntriesWithVersionsFn$(\n        modal\n      );\n    }\n\n    modal.content.load.next();\n    modal.content.resultEmitter.pipe(take(1)).subscribe(firmwareList => {\n      const [firmware] = firmwareList;\n      if (!firmware) {\n        return;\n      }\n      const deviceProfilePartial: Partial<IManagedObject> = {\n        c8y_DeviceProfile: this.deviceProfile.c8y_DeviceProfile || {}\n      };\n      assign(deviceProfilePartial.c8y_DeviceProfile, {\n        firmware: {\n          name: firmware.name,\n          version: firmware.version,\n          url: firmware.url,\n          isPatch: firmware.isPatch,\n          patchDependency: firmware.patchDependency\n        } as DeviceProfileFirmware\n      });\n      this.updateDeviceProfile(deviceProfilePartial);\n    });\n  }\n\n  getRepositoryEntriesWithVersions$(\n    searchTerm$: BehaviorSubject<string>,\n    repoType: RepositoryType\n  ) {\n    return searchTerm$.pipe(\n      distinctUntilChanged(),\n      switchMap(searchTerm =>\n        this.repositoryService.listRepositoryEntries(repoType, {\n          partialName: searchTerm,\n          params: { pageSize: 100 },\n          skipLegacy: true\n        })\n      ),\n      map(({ data }) => data),\n      map(mos => this.getAndAssignRepositoryBinaries(mos)),\n      shareReplay(1)\n    );\n  }\n\n  getAndAssignRepositoryBinaries(mos: IManagedObject[]) {\n    mos.forEach(mo => {\n      mo.versions = this.repositoryService.listBaseVersions(mo);\n    });\n    return mos;\n  }\n\n  addConfiguration() {\n    const modal = this.bsModal.show(SelectConfigurationModalComponent, {\n      ignoreBackdropClick: true\n    });\n    modal.content.deviceTypeQuery = this.getDeviceTypeQuery(RepositoryType.CONFIGURATION);\n    modal.content.selected = this.deviceProfile.c8y_DeviceProfile.configuration;\n    modal.content.load.next();\n    modal.content.resultEmitter.pipe(take(1)).subscribe(selectedConfigurations => {\n      const selectedMapped: DeviceProfileConfiguration[] = selectedConfigurations.map(\n        selectedItem => {\n          return assign(\n            {\n              url: selectedItem.url,\n              name: selectedItem.name\n            },\n            selectedItem.configurationType ? { type: selectedItem.configurationType } : {}\n          );\n        }\n      );\n      const merged: DeviceProfileConfiguration = concat(\n        selectedMapped,\n        this.deviceProfile.c8y_DeviceProfile.configuration || []\n      );\n      const configuration: DeviceProfileConfiguration = uniqWith(merged, (arrVal, othVal) => {\n        return arrVal.type && othVal.type && arrVal.type === othVal.type;\n      });\n      const deviceProfilePartial: Partial<IManagedObject> = {\n        c8y_DeviceProfile: this.deviceProfile.c8y_DeviceProfile || {}\n      };\n      assign(deviceProfilePartial.c8y_DeviceProfile, { configuration });\n      this.updateDeviceProfile(deviceProfilePartial);\n    });\n  }\n\n  addSoftware() {\n    const initialState: Partial<RepositorySelectModalComponent> & {\n      repositoryEntriesWithVersionsFn$: (modal: any) => Observable<IManagedObject[]>;\n    } = {\n      deviceTypeQuery: this.getDeviceTypeQuery(RepositoryType.SOFTWARE),\n      repositoryType: RepositoryType.SOFTWARE,\n      repositoryEntriesWithVersionsFn$: modalDialog =>\n        this.getRepositoryEntriesWithVersions$(\n          modalDialog.content.searchTerm,\n          RepositoryType.SOFTWARE\n        ),\n      selected: this.deviceProfile.c8y_DeviceProfile.software,\n      icon: 'c8y-tools',\n      title: gettext('Select software'),\n      mode: ModalSelectionMode.MULTI\n    };\n    const modal = this.bsModal.show(RepositorySelectModalComponent, {\n      ignoreBackdropClick: true,\n      initialState\n    });\n\n    if (initialState.repositoryEntriesWithVersionsFn$) {\n      modal.content.repositoryEntriesWithVersions$ = initialState.repositoryEntriesWithVersionsFn$(\n        modal\n      );\n    }\n\n    modal.content.load.next();\n    modal.content.resultEmitter.pipe(take(1)).subscribe(selectedSoftware => {\n      const selectedMapped: DeviceProfileSoftware[] = selectedSoftware.map(selectedItem => {\n        return {\n          name: selectedItem.name,\n          version: selectedItem.version,\n          url: selectedItem.url,\n          action: 'install'\n        };\n      });\n      const merged: DeviceProfileSoftware = concat(\n        selectedMapped,\n        this.deviceProfile.c8y_DeviceProfile.software || []\n      );\n      const software: DeviceProfileSoftware = uniqWith(merged, (arrVal, othVal) => {\n        return arrVal.name && othVal.name && arrVal.name === othVal.name;\n      });\n      const deviceProfilePartial: Partial<IManagedObject> = {\n        c8y_DeviceProfile: this.deviceProfile.c8y_DeviceProfile || {}\n      };\n      assign(deviceProfilePartial.c8y_DeviceProfile, { software });\n      this.updateDeviceProfile(deviceProfilePartial);\n    });\n  }\n\n  get isDeviceProfileEmpty() {\n    const isSoftware =\n      this.deviceProfile.c8y_DeviceProfile.software &&\n      this.deviceProfile.c8y_DeviceProfile.software.length > 0;\n    const isFirmware = Boolean(this.deviceProfile.c8y_DeviceProfile.firmware);\n    const isConfiguration =\n      this.deviceProfile.c8y_DeviceProfile.configuration &&\n      this.deviceProfile.c8y_DeviceProfile.configuration.length > 0;\n    return isSoftware || isFirmware || isConfiguration;\n  }\n\n  removeItem(removedItem, category) {\n    const deviceProfilePartial: Partial<IManagedObject> = {\n      c8y_DeviceProfile: this.deviceProfile.c8y_DeviceProfile\n    };\n    const filtered = deviceProfilePartial.c8y_DeviceProfile[category].filter(\n      item => !isEqual(removedItem, item)\n    );\n    deviceProfilePartial.c8y_DeviceProfile[category] = filtered;\n    this.updateDeviceProfile(deviceProfilePartial);\n  }\n\n  removeFirmware() {\n    delete this.deviceProfile.c8y_DeviceProfile.firmware;\n    this.updateDeviceProfile({ c8y_DeviceProfile: this.deviceProfile.c8y_DeviceProfile });\n  }\n\n  async updateDeviceProfile(partialDeviceProfile) {\n    if (partialDeviceProfile.c8y_Filter && partialDeviceProfile.c8y_Filter.type === '') {\n      delete partialDeviceProfile.c8y_Filter.type;\n    }\n    Object.assign(partialDeviceProfile, { id: this.deviceProfile.id });\n    try {\n      const { data } = await this.inventoryService.update(partialDeviceProfile);\n      this.deviceProfile = data as DeviceProfile;\n      this.profileName = this.deviceProfile.name;\n      this.alertService.success(gettext('Device profile changed.'));\n    } catch (ex) {\n      this.alertService.addServerFailure(ex);\n    }\n  }\n\n  private async getDeviceProfile(profileId) {\n    try {\n      const { data } = await this.inventoryService.detail(profileId);\n      return data;\n    } catch (ex) {\n      this.alertService.addServerFailure(ex);\n    }\n  }\n\n  private getDeviceTypeQuery(repositoryType) {\n    if (\n      has(this.deviceProfile, 'c8y_Filter.type') &&\n      !isEmpty(this.deviceProfile.c8y_Filter.type)\n    ) {\n      if (repositoryType === RepositoryType.CONFIGURATION) {\n        return this.queriesUtil.addOrFilter(\n          { deviceType: this.deviceProfile.c8y_Filter.type },\n          { __not: { __has: `deviceType` } }\n        );\n      } else {\n        return this.queriesUtil.addOrFilter(\n          { 'c8y_Filter.type': this.deviceProfile.c8y_Filter.type },\n          { __not: { __has: `c8y_Filter.type` } }\n        );\n      }\n    }\n    return {};\n  }\n}\n","import { Component } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { DeviceProfile } from './device-profile.model';\nimport { DeviceProfileService } from './device-profile.service';\nimport { gettext } from '@c8y/ngx-components';\n\n@Component({\n  selector: 'c8y-add-device-profile',\n  templateUrl: './add-device-profile-component.html'\n})\nexport class AddDeviceProfileComponent {\n  DEVICE_TYPE_POPOVER = gettext('The device profile will be available for assignments on devices of the specified type. Otherwise, it will be available for all device types.');\n  deviceProfile: Partial<DeviceProfile> = {\n    name: '',\n    type: 'c8y_Profile',\n    c8y_Filter: {},\n    c8y_DeviceProfile : {\n    }\n  };\n  result: Promise<any> = new Promise((resolve, reject) => {\n    this._save = resolve;\n    this._cancel = reject;\n  });\n  private _save;\n  private _cancel;\n\n  constructor(private modal: BsModalRef, private deviceProfileService: DeviceProfileService) {}\n\n  async create() {\n    const mo = (await this.deviceProfileService.createDeviceProfile(this.deviceProfile)).data;\n    this._save(mo.id);\n  }\n\n  close() {\n    this._cancel();\n    this.modal.hide();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { IManagedObject, InventoryService, IResultList } from '@c8y/client';\nimport { TranslateService } from '@ngx-translate/core';\nimport { AlertService, gettext, ModalService, Status } from '@c8y/ngx-components';\nimport { cloneDeep } from 'lodash-es';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { AddDeviceProfileComponent } from './add-device-profile.component';\nimport { DeviceProfileService } from './device-profile.service';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { tap, switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'c8y-device-profile-list',\n  templateUrl: './device-profile-list.component.html'\n})\nexport class DeviceProfileListComponent implements OnInit {\n  reloading: boolean = false;\n  reload: BehaviorSubject<void> = new BehaviorSubject(null);\n  deviceProfiles$: Observable<IResultList<IManagedObject>> = this.reload.pipe(\n    tap(() => (this.reloading = true)),\n    switchMap(() => this.deviceProfileService.getDeviceProfiles()),\n    tap(() => (this.reloading = false))\n  );\n\n  constructor(\n    private inventoryService: InventoryService,\n    private translateService: TranslateService,\n    private modalService: ModalService,\n    private alertService: AlertService,\n    private bsModalService: BsModalService,\n    private router: Router,\n    private deviceProfileService: DeviceProfileService\n  ) {}\n\n  ngOnInit() {\n    this.loadDeviceProfiles();\n  }\n\n  loadDeviceProfiles() {\n    this.reload.next();\n  }\n\n  async createDeviceProfile() {\n    const modal = this.bsModalService.show(AddDeviceProfileComponent, {\n      class: 'modal-sm'\n    }).content as AddDeviceProfileComponent;\n    try {\n      const profileId = await modal.result;\n      modal.close();\n      this.router.navigateByUrl(`/device-profiles/${profileId}`);\n    } catch (ex) {\n      // do nothing\n    }\n  }\n\n  async duplicateDeviceProfile(deviceProfile) {\n    const copy = cloneDeep(deviceProfile);\n    copy.id = null;\n    copy.name = 'Duplicate of ' + deviceProfile.name;\n    const mo = (await this.deviceProfileService.createDeviceProfile(copy)).data;\n    this.router.navigateByUrl(`/device-profiles/${mo.id}`);\n  }\n\n  async deleteDeviceProfile(deviceProfile) {\n    const deviceProfileName = deviceProfile.name;\n    const title = gettext('Delete device profile');\n    const confirmationText = this.translateService.instant(\n      gettext('You are about to delete a device profile \"{{ deviceProfileName }}\".'),\n      { deviceProfileName }\n    );\n    const finalQuestion = this.translateService.instant(gettext('Do you want to proceed?'));\n    try {\n      await this.modalService.confirm(\n        title,\n        `${confirmationText} ${finalQuestion}`,\n        Status.DANGER,\n        {\n          ok: gettext('Delete')\n        }\n      );\n      await this.delete(deviceProfile.id);\n      this.reload.next();\n    } catch (ex) {\n      // do nothing\n    }\n  }\n\n  private async delete(profileId) {\n    try {\n      await this.inventoryService.delete(profileId);\n      this.alertService.success(gettext('Device profile deleted.'));\n    } catch (ex) {\n      this.alertService.addServerFailure(ex);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot } from '@angular/router';\nimport { DeviceProfileOperation } from './device-profile.model';\nimport { IManagedObject } from '@c8y/client';\n\n@Injectable()\nexport class DeviceProfileGuard implements CanActivate {\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    const contextData = route.data.contextData || route.parent.data.contextData;\n    if (!contextData) {\n      return false;\n    }\n    return this.hasSupportedOperation(contextData, DeviceProfileOperation.APPLY_PROFILE);\n  }\n\n  private hasSupportedOperation(mo: IManagedObject, operation: DeviceProfileOperation) {\n    const supported = mo.c8y_SupportedOperations || [];\n    if (!supported) {\n      return false;\n    }\n    return !!supported.find(supportedOperation => supportedOperation === operation);\n  }\n}\n","import { Component, OnDestroy, OnInit, Pipe } from '@angular/core';\nimport { IManagedObject, IOperation, IResultList, Realtime } from '@c8y/client';\nimport { ActivatedRoute } from '@angular/router';\nimport { pipe, Subscription } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { DeviceProfileService } from '../device-profile.service';\nimport { DeviceProfile, ComparisonResult } from '../device-profile.model';\nimport {\n  AlertService,\n  gettext,\n  ManagedObjectRealtimeService,\n  OperationRealtimeService\n} from '@c8y/ngx-components';\n\n@Component({\n  selector: 'c8y-device-tab-profile',\n  templateUrl: './device-tab-profile.component.html',\n  providers: [ManagedObjectRealtimeService]\n})\nexport class DeviceTabProfileComponent implements OnInit, OnDestroy {\n  device: IManagedObject;\n  deviceProfiles: IResultList<IManagedObject>;\n  selectedProfile: Partial<DeviceProfile>;\n  operation: IOperation;\n  firmwareItems: ComparisonResult[] = [];\n  softwareItems: ComparisonResult[] = [];\n  configurationItems: ComparisonResult[] = [];\n\n  filterPipe: Pipe;\n  pattern: string = '';\n  reloading: boolean = false;\n  private operationsSubscription: Subscription;\n  private moOnDeleteSubscription: Subscription;\n  private moOnUpdateSubscription: Subscription;\n\n  constructor(\n    public deviceRealtime: ManagedObjectRealtimeService,\n    private deviceProfileService: DeviceProfileService,\n    private route: ActivatedRoute,\n    private operationRealtime: OperationRealtimeService,\n    private alertService: AlertService\n  ) {}\n\n  async ngOnInit() {\n    this.device = this.route.snapshot.parent.data.contextData;\n    this.getDeviceProfilesAndUpdateProfileItems();\n    this.subscribeToManagedObjects();\n  }\n\n  async getDeviceProfilesAndUpdateProfileItems() {\n    this.reloading = true;\n    this.deviceProfiles = await this.deviceProfileService.getDeviceProfilesByDeviceType(\n      this.device.type\n    );\n    if (this.device.c8y_Profile) {\n      const profileId = this.device.c8y_Profile.profileId;\n      this.selectedProfile = this.deviceProfiles.data.find(mo => mo.id === profileId);\n    }\n    this.updateProfileItems(this.device, this.selectedProfile);\n    this.operation = await this.deviceProfileService.getProfileOperation(this.device.id);\n    this.subscribeToOperations();\n    this.reloading = false;\n  }\n\n  selectProfile(mo: DeviceProfile) {\n    this.selectedProfile = mo;\n    this.updateProfileItems(this.device, this.selectedProfile);\n  }\n\n  async createOperation() {\n    this.operation = await this.deviceProfileService.createProfileOperation(\n      this.device,\n      this.selectedProfile\n    );\n  }\n\n  setPipe(filterStr: string) {\n    this.pattern = filterStr;\n    this.filterPipe = pipe(\n      map((data: any[]) => {\n        return data.filter(\n          (mo: any) => mo.name && mo.name.toLowerCase().indexOf(filterStr.toLowerCase()) > -1\n        );\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this.operationsSubscription.unsubscribe();\n    this.moOnUpdateSubscription.unsubscribe();\n    this.moOnDeleteSubscription.unsubscribe();\n  }\n\n  updateProfileItems(device, profile) {\n    this.firmwareItems = this.deviceProfileService.getFirmwareItems(device, profile);\n    this.softwareItems = this.deviceProfileService.getSoftwareItems(device, profile);\n    this.configurationItems = this.deviceProfileService.getConfigurationItems(device, profile);\n  }\n\n  private subscribeToManagedObjects() {\n    this.moOnUpdateSubscription = this.deviceRealtime\n      .onUpdate$(this.device.id)\n      .subscribe((managedObject: IManagedObject) => {\n        this.updateProfileItems(managedObject, this.selectedProfile);\n      });\n    this.moOnDeleteSubscription = this.deviceRealtime.onDelete$(this.device.id).subscribe(() => {\n      this.alertService.danger(\n        gettext(\n          'This device has just been deleted. You will be redirected to \"All devices\" page now.'\n        )\n      );\n      window.location.href = '#/device';\n    });\n  }\n\n  private subscribeToOperations() {\n    this.operationsSubscription = this.operationRealtime\n      .onAll$(this.device.id)\n      .pipe(\n        map(({ data }) => data as IOperation),\n        filter(operation => operation.c8y_DeviceProfile)\n      )\n      .subscribe(operation => {\n        this.operation = operation;\n      });\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { ComparisonResult } from '../device-profile.model';\n\n@Component({\n  selector: 'c8y-device-tab-profile-detail',\n  templateUrl: './device-tab-profile-detail.component.html'\n})\nexport class DeviceTabProfileDetailComponent {\n  @Input() sectionTitle: string;\n  @Input() sectionIcon: string;\n  @Input() emptyStateText: string = '';\n  @Input() emptyStateDetails: string = '';\n  @Input() isProfileSelected: boolean;\n  @Input() isEmpty: boolean;\n  @Input() items: ComparisonResult[];\n  @Input() showTextLabel: boolean = true;\n}\n","import { Component, Input } from '@angular/core';\nimport { ComparisonResult } from '../device-profile.model';\n\n@Component({\n  selector: 'c8y-device-profile-item-list',\n  templateUrl: './device-profile-item-list.component.html'\n})\nexport class DeviceProfileItemListComponent {\n  @Input() icon: string;\n  @Input() comparisonResults: ComparisonResult[];\n  @Input() showProfileItems: boolean;\n  @Input() showTextLabel: boolean;\n}\n","import { NgModule } from '@angular/core';\nimport { Route, RouterModule } from '@angular/router';\nimport {\n  CommonModule,\n  CoreModule,\n  HOOK_NAVIGATOR_NODES,\n  HOOK_ROUTE,\n  gettext,\n  ViewContext\n} from '@c8y/ngx-components';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { PopoverModule } from 'ngx-bootstrap/popover';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { DeviceProfileComponent } from './device-profile.component';\nimport { DeviceProfileListComponent } from './device-profile-list.component';\nimport { DeviceProfileNavigationFactory } from './device-profile-navigation.factory';\nimport { DeviceProfileService } from './device-profile.service';\nimport { AddDeviceProfileComponent } from './add-device-profile.component';\nimport { DeviceProfileGuard } from './device-profile.guard';\nimport { RepositoryModule } from '@c8y/ngx-components/repository';\nimport { SelectConfigurationModalComponent } from './select-configuration-modal.component';\nimport { DeviceTabProfileComponent } from './device-tab-profile/device-tab-profile.component';\nimport { DeviceTabProfileDetailComponent } from './device-tab-profile/device-tab-profile-detail.component';\nimport { DeviceProfileItemListComponent } from './device-tab-profile/device-profile-item-list.component';\nimport { SingleOperationDetailsModule } from '@c8y/ngx-components/operations/single-operation-details';\n\nconst deviceProfilesRoutes: Route[] = [\n  {\n    path: 'device-profiles/:id',\n    component: DeviceProfileComponent\n  },\n  {\n    path: 'device-profiles',\n    component: DeviceProfileListComponent\n  }\n];\n\nconst deviceTabProfileRoutes: any[] = [\n  {\n    context: ViewContext.Device,\n    path: 'device-profile',\n    component: DeviceTabProfileComponent,\n    label: gettext('Device profile'),\n    icon: 'c8y-device-profile',\n    canActivate: [DeviceProfileGuard]\n  }\n];\n\n@NgModule({\n  declarations: [\n    DeviceProfileComponent,\n    DeviceProfileListComponent,\n    AddDeviceProfileComponent,\n    SelectConfigurationModalComponent,\n    DeviceTabProfileComponent,\n    DeviceTabProfileDetailComponent,\n    DeviceProfileItemListComponent\n  ],\n  exports: [],\n  imports: [\n    CoreModule,\n    CommonModule,\n    RepositoryModule,\n    RouterModule.forChild(deviceProfilesRoutes),\n    BsDropdownModule.forRoot(),\n    TooltipModule,\n    ReactiveFormsModule,\n    ButtonsModule,\n    PopoverModule,\n    SingleOperationDetailsModule\n  ],\n  entryComponents: [\n    AddDeviceProfileComponent,\n    SelectConfigurationModalComponent,\n    DeviceTabProfileComponent\n  ],\n  providers: [\n    {\n      provide: HOOK_NAVIGATOR_NODES,\n      useClass: DeviceProfileNavigationFactory,\n      multi: true\n    },\n    {\n      provide: HOOK_ROUTE,\n      useValue: deviceTabProfileRoutes,\n      multi: true\n    },\n    DeviceProfileService,\n    DeviceProfileGuard\n  ]\n})\nexport class DeviceProfileModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {DeviceProfileItemListComponent as ɵc} from './device-tab-profile/device-profile-item-list.component';\nexport {DeviceTabProfileDetailComponent as ɵb} from './device-tab-profile/device-tab-profile-detail.component';\nexport {DeviceTabProfileComponent as ɵa} from './device-tab-profile/device-tab-profile.component';"],"names":[],"mappings":"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"}