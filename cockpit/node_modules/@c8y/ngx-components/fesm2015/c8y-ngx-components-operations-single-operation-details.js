import { Component, Input, Injectable, ViewChild, NgModule } from '@angular/core';
import { CollapseModule } from 'ngx-bootstrap/collapse';
import { PopoverModule } from 'ngx-bootstrap/popover';
import { TooltipModule } from 'ngx-bootstrap/tooltip';
import { operationStatusIcons, operationStatusClasses, gettext, AlertService, CoreModule } from '@c8y/ngx-components';
import { BulkOperationDetailsService, BulkOperationsListModule } from '@c8y/ngx-components/operations/bulk-operations-list';
import { BulkOperationsServiceModule } from '@c8y/ngx-components/operations/bulk-operations-service';
import { __awaiter } from 'tslib';
import { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';
import { OperationService, OperationStatus } from '@c8y/client';
import { Router } from '@angular/router';
import { get, assign } from 'lodash-es';

import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from 'ngx-bootstrap/modal';
import * as ɵngcc2 from '@c8y/ngx-components';
import * as ɵngcc3 from '@c8y/client';
import * as ɵngcc4 from '@angular/common';
import * as ɵngcc5 from 'ngx-bootstrap/tooltip';
import * as ɵngcc6 from '@angular/router';
import * as ɵngcc7 from '@c8y/ngx-components/operations/bulk-operations-list';

function SingleOperationComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    const _r2 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 1);
    ɵngcc0.ɵɵelementStart(1, "a", 2);
    ɵngcc0.ɵɵelementStart(2, "div", 3);
    ɵngcc0.ɵɵelementStart(3, "div", 4);
    ɵngcc0.ɵɵelement(4, "i", 5);
    ɵngcc0.ɵɵpipe(5, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(6, "div", 6);
    ɵngcc0.ɵɵelementStart(7, "div", 7);
    ɵngcc0.ɵɵelementStart(8, "div", 8);
    ɵngcc0.ɵɵelementStart(9, "button", 9);
    ɵngcc0.ɵɵlistener("click", function SingleOperationComponent_div_0_Template_button_click_9_listener() { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r1 = ɵngcc0.ɵɵnextContext(); return ctx_r1.openDetails(); });
    ɵngcc0.ɵɵpipe(10, "translate");
    ɵngcc0.ɵɵtext(11);
    ɵngcc0.ɵɵpipe(12, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(13, "div", 10);
    ɵngcc0.ɵɵelementStart(14, "small", 11);
    ɵngcc0.ɵɵelement(15, "i", 12);
    ɵngcc0.ɵɵelementStart(16, "span");
    ɵngcc0.ɵɵtext(17);
    ɵngcc0.ɵɵpipe(18, "c8yDate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵproperty("c8yIcon", ctx_r0.statusIcons[ctx_r0.operation.status])("ngClass", ctx_r0.statusClasses[ctx_r0.operation.status])("tooltip", ɵngcc0.ɵɵpipeBind1(5, 6, ctx_r0.operation.status == null ? null : ctx_r0.operation.status.toString()));
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(10, 8, ctx_r0.operation.description));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(12, 10, ctx_r0.operation.description), " ");
    ɵngcc0.ɵɵadvance(6);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(18, 12, ctx_r0.operation.creationTime));
} }
const _c0 = ["listItem"];
const _c1 = ["details"];
const _c2 = ["historyOfChanges"];
function SingleOperationListItemComponent_c8y_li_action_28_Template(rf, ctx) { if (rf & 1) {
    const _r9 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "c8y-li-action", 23);
    ɵngcc0.ɵɵlistener("click", function SingleOperationListItemComponent_c8y_li_action_28_Template_c8y_li_action_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r8 = ɵngcc0.ɵɵnextContext(); return ctx_r8.cancel(); });
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵpropertyInterpolate("label", ɵngcc0.ɵɵpipeBind1(1, 1, "Cancel`operation`"));
} }
const _c3 = function (a0) { return { active: a0 }; };
function SingleOperationListItemComponent_li_32_Template(rf, ctx) { if (rf & 1) {
    const _r12 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "li", 3);
    ɵngcc0.ɵɵelementStart(1, "button", 24);
    ɵngcc0.ɵɵlistener("click", function SingleOperationListItemComponent_li_32_Template_button_click_1_listener() { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r12); const tab_r10 = restoredCtx.$implicit; const ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11.selectedTab = tab_r10; });
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelement(3, "i", 25);
    ɵngcc0.ɵɵelementStart(4, "span", 26);
    ɵngcc0.ɵɵtext(5);
    ɵngcc0.ɵɵpipe(6, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const tab_r10 = ctx.$implicit;
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(8, _c3, ctx_r2.selectedTab === tab_r10));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("title", ɵngcc0.ɵɵpipeBind1(2, 4, tab_r10.label));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("c8yIcon", tab_r10.icon);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(6, 6, tab_r10.label));
} }
function SingleOperationListItemComponent_ng_container_33_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function SingleOperationListItemComponent_ng_template_34_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "c8y-single-operation-details", 27);
} if (rf & 2) {
    const ctx_r5 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("operation", ctx_r5.operation)("readOnly", ctx_r5.readOnly);
} }
function SingleOperationListItemComponent_ng_template_36_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "c8y-audit-log", 28);
} if (rf & 2) {
    const ctx_r7 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("source", ctx_r7.operation.id);
} }
const _c4 = function (a0) { return { "c8y-list__item--no-expand": a0 }; };
const _c5 = function (a0, a1) { return { "content-flex-80": a0, "content-flex-50": a1 }; };
function SingleOperationDetailsComponent_li_5_Template(rf, ctx) { if (rf & 1) {
    const _r4 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "li", 5);
    ɵngcc0.ɵɵelementStart(1, "label", 6);
    ɵngcc0.ɵɵtext(2, "Bulk operation");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "span", 7);
    ɵngcc0.ɵɵelementStart(4, "a", 10);
    ɵngcc0.ɵɵlistener("click", function SingleOperationDetailsComponent_li_5_Template_a_click_4_listener() { ɵngcc0.ɵɵrestoreView(_r4); const ctx_r3 = ɵngcc0.ɵɵnextContext(); return ctx_r3.openBulkOperationDetails(); });
    ɵngcc0.ɵɵtext(5, "See details");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} }
function SingleOperationDetailsComponent_li_12_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "li", 5);
    ɵngcc0.ɵɵelementStart(1, "label", 6);
    ɵngcc0.ɵɵtext(2, "Failure reason");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "span", 7);
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵpipe(5, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(5, 1, ctx_r1.operation.failureReason));
} }
function SingleOperationDetailsComponent_li_13_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "li", 5);
    ɵngcc0.ɵɵelementStart(1, "label", 11);
    ɵngcc0.ɵɵtext(2, "Result");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "span", 7);
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(ctx_r2.operation.c8y_Command.result);
} }
class SingleOperationModalComponent {
    constructor(modalRef) {
        this.modalRef = modalRef;
        this.collapsed = false;
        this.readOnly = false;
    }
}
SingleOperationModalComponent.ɵfac = function SingleOperationModalComponent_Factory(t) { return new (t || SingleOperationModalComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.BsModalRef)); };
SingleOperationModalComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: SingleOperationModalComponent, selectors: [["c8y-single-operation-modal"]], inputs: { collapsed: "collapsed", readOnly: "readOnly", operation: "operation" }, decls: 12, vars: 12, consts: [[1, "viewport-modal"], [1, "modal-header"], [1, "modal-inner-scroll"], [3, "operation", "collapsed", "readOnly"], [1, "modal-footer"], [1, "btn", "btn-default", 3, "title", "click"]], template: function SingleOperationModalComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵelementStart(2, "h3");
        ɵngcc0.ɵɵtext(3);
        ɵngcc0.ɵɵpipe(4, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(5, "div", 2);
        ɵngcc0.ɵɵelement(6, "c8y-single-operation-list-item", 3);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(7, "div", 4);
        ɵngcc0.ɵɵelementStart(8, "button", 5);
        ɵngcc0.ɵɵlistener("click", function SingleOperationModalComponent_Template_button_click_8_listener() { return ctx.modalRef.hide(); });
        ɵngcc0.ɵɵpipe(9, "translate");
        ɵngcc0.ɵɵtext(10);
        ɵngcc0.ɵɵpipe(11, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(4, 6, "Single operation details"));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("operation", ctx.operation)("collapsed", ctx.collapsed)("readOnly", ctx.readOnly);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(9, 8, "Close"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(11, 10, "Close"), " ");
    } }, directives: function () { return [SingleOperationListItemComponent]; }, pipes: function () { return [ɵngcc2.C8yTranslatePipe]; }, encapsulation: 2 });
SingleOperationModalComponent.ctorParameters = () => [
    { type: BsModalRef }
];
SingleOperationModalComponent.propDecorators = {
    operation: [{ type: Input }],
    collapsed: [{ type: Input }],
    readOnly: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SingleOperationModalComponent, [{
        type: Component,
        args: [{
                selector: 'c8y-single-operation-modal',
                template: "<div class=\"viewport-modal\">\n  <div class=\"modal-header\">\n    <h3>{{ 'Single operation details' | translate }}</h3>\n  </div>\n\n  <div class=\"modal-inner-scroll\">\n    <c8y-single-operation-list-item\n      [operation]=\"operation\"\n      [collapsed]=\"collapsed\"\n      [readOnly]=\"readOnly\"\n    ></c8y-single-operation-list-item>\n  </div>\n\n  <div class=\"modal-footer\">\n    <button title=\"{{ 'Close' | translate }}\" class=\"btn btn-default\" (click)=\"modalRef.hide()\">\n      {{ 'Close' | translate }}\n    </button>\n  </div>\n</div>\n"
            }]
    }], function () { return [{ type: ɵngcc1.BsModalRef }]; }, { collapsed: [{
            type: Input
        }], readOnly: [{
            type: Input
        }], operation: [{
            type: Input
        }] }); })();

class SingleOperationDetailsService {
    constructor(operationService, modalService) {
        this.operationService = operationService;
        this.modalService = modalService;
    }
    /**
     * Opens a modal window with the details of given single operation.
     * @param operationOrOperationId Operation's object or id.
     * @param options Additional options:
     * - `collapsed`: boolean - whether the details pane should be initially collapsed
     * - `readOnly`: boolean - whether the details should be displayed in read-only mode
     */
    openDetails(operationOrOperationId, options) {
        return __awaiter(this, void 0, void 0, function* () {
            const operation = operationOrOperationId.id
                ? operationOrOperationId
                : (yield this.operationService.detail(operationOrOperationId)).data;
            const initialState = Object.assign({ operation }, options);
            this.modalService.show(SingleOperationModalComponent, {
                initialState,
                class: 'modal-lg'
            });
        });
    }
}
SingleOperationDetailsService.ɵfac = function SingleOperationDetailsService_Factory(t) { return new (t || SingleOperationDetailsService)(ɵngcc0.ɵɵinject(ɵngcc3.OperationService), ɵngcc0.ɵɵinject(ɵngcc1.BsModalService)); };
SingleOperationDetailsService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: SingleOperationDetailsService, factory: SingleOperationDetailsService.ɵfac });
SingleOperationDetailsService.ctorParameters = () => [
    { type: OperationService },
    { type: BsModalService }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SingleOperationDetailsService, [{
        type: Injectable
    }], function () { return [{ type: ɵngcc3.OperationService }, { type: ɵngcc1.BsModalService }]; }, null); })();

/**
 * Single operation component displays a single operation's status, description and creationTime.
 *
 * Example:
 *
 * ```html
 * <c8y-single-operation [operation]="operation"></c8y-single-operation>
 * ```
 */
class SingleOperationComponent {
    constructor(singleOperationDetailsService) {
        this.singleOperationDetailsService = singleOperationDetailsService;
    }
    ngOnInit() {
        this.statusIcons = operationStatusIcons;
        this.statusClasses = operationStatusClasses;
    }
    openDetails() {
        this.singleOperationDetailsService.openDetails(this.operation);
    }
}
SingleOperationComponent.ɵfac = function SingleOperationComponent_Factory(t) { return new (t || SingleOperationComponent)(ɵngcc0.ɵɵdirectiveInject(SingleOperationDetailsService)); };
SingleOperationComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: SingleOperationComponent, selectors: [["c8y-single-operation"]], inputs: { operation: "operation" }, decls: 1, vars: 1, consts: [["class", "c8y-list--group", 4, "ngIf"], [1, "c8y-list--group"], [1, "c8y-list__item"], [1, "c8y-list__item__block"], [1, "c8y-list__item__icon"], ["placement", "right", "container", "body", 3, "c8yIcon", "ngClass", "tooltip"], [1, "c8y-list__item__body", "p-r-16"], [1, "content-flex-40"], [1, "col-8"], [1, "btn-clean", "text-truncate", 3, "title", "click"], [1, "col-4", "text-muted"], [1, "icon-flex"], ["c8yIcon", "calendar", 1, "m-r-4"]], template: function SingleOperationComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, SingleOperationComponent_div_0_Template, 19, 14, "div", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.operation);
    } }, directives: [ɵngcc4.NgIf, ɵngcc2.IconDirective, ɵngcc4.NgClass, ɵngcc5.TooltipDirective], pipes: [ɵngcc2.C8yTranslatePipe, ɵngcc2.DatePipe], encapsulation: 2 });
SingleOperationComponent.ctorParameters = () => [
    { type: SingleOperationDetailsService }
];
SingleOperationComponent.propDecorators = {
    operation: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SingleOperationComponent, [{
        type: Component,
        args: [{
                selector: 'c8y-single-operation',
                template: "<div class=\"c8y-list--group\" *ngIf=\"operation\">\n  <a class=\"c8y-list__item\">\n    <div class=\"c8y-list__item__block\">\n      <div class=\"c8y-list__item__icon\">\n        <i\n          [c8yIcon]=\"statusIcons[operation.status]\"\n          [ngClass]=\"statusClasses[operation.status]\"\n          [tooltip]=\"operation.status?.toString() | translate\"\n          placement=\"right\"\n          container=\"body\"\n        ></i>\n      </div>\n      <div class=\"c8y-list__item__body p-r-16\">\n        <div class=\"content-flex-40\">\n          <div class=\"col-8\">\n            <button\n              class=\"btn-clean text-truncate\"\n              (click)=\"openDetails()\"\n              title=\"{{ operation.description | translate }}\"\n            >\n              {{ operation.description | translate }}\n            </button>\n          </div>\n          <div class=\"col-4 text-muted\">\n            <small class=\"icon-flex\">\n              <i c8yIcon=\"calendar\" class=\"m-r-4\"></i>\n              <span>{{ operation.creationTime | c8yDate }}</span>\n            </small>\n          </div>\n        </div>\n      </div>\n    </div>\n  </a>\n</div>\n"
            }]
    }], function () { return [{ type: SingleOperationDetailsService }]; }, { operation: [{
            type: Input
        }] }); })();

class SingleOperationListItemComponent {
    constructor(router, operationService, alertService) {
        this.router = router;
        this.operationService = operationService;
        this.alertService = alertService;
        this.collapsed = true;
        this.readOnly = false;
        this.tabs = [];
        this.statusIcons = operationStatusIcons;
        this.statusClasses = operationStatusClasses;
        this.OperationStatus = OperationStatus;
    }
    get displayedDescription() {
        const commandText = get(this.operation, 'c8y_Command.text');
        const opDescription = get(this.operation, 'description');
        return commandText || opDescription || gettext('(no command text or description available)');
    }
    ngOnInit() {
        this.statusIcons = operationStatusIcons;
        this.statusClasses = operationStatusClasses;
        this.tabs = [
            {
                label: gettext('Details'),
                icon: 'asterisk',
                template: this.detailsTabTemplate
            },
            {
                label: gettext('History of changes'),
                icon: 'archive',
                template: this.historyOfChangesTabTemplate
            }
        ];
        this.selectedTab = this.tabs[0];
    }
    scheduleAsBulkOperation() {
        this.router.navigateByUrl(`/devicecontrol/single/create-bulk/${this.operation.id}`);
    }
    cancel() {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                const operationAfterUpdate = (yield this.operationService.update({
                    id: this.operation.id,
                    status: OperationStatus.FAILED,
                    failureReason: gettext('Operation cancelled by user.')
                })).data;
                assign(this.operation, operationAfterUpdate);
                this.alertService.success(gettext('Operation cancelled.'));
            }
            catch (ex) {
                this.alertService.addServerFailure(ex);
            }
        });
    }
}
SingleOperationListItemComponent.ɵfac = function SingleOperationListItemComponent_Factory(t) { return new (t || SingleOperationListItemComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc6.Router), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.OperationService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.AlertService)); };
SingleOperationListItemComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: SingleOperationListItemComponent, selectors: [["c8y-single-operation-list-item"]], viewQuery: function SingleOperationListItemComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c0, 7);
        ɵngcc0.ɵɵviewQuery(_c1, 7);
        ɵngcc0.ɵɵviewQuery(_c2, 7);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.listItem = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.detailsTabTemplate = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.historyOfChangesTabTemplate = _t.first);
    } }, inputs: { collapsed: "collapsed", readOnly: "readOnly", operation: "operation" }, decls: 38, vars: 28, consts: [[1, "c8y-list__item--double-actions", 3, "ngClass", "collapsed", "id"], ["listItem", ""], [3, "c8yIcon", "ngClass"], [3, "ngClass"], [1, "col-6"], [1, "text-truncate", 3, "title"], [1, "flex-grow"], [1, "col-3"], [1, "m-r-16"], [1, "icon-flex"], ["c8yIcon", "calendar", 1, "m-r-4"], [1, "c8y-list__item__footer"], ["c8yIcon", "exchange", 1, "m-r-4"], [3, "href"], ["icon", "c8y-energy", 3, "label", "click"], ["icon", "times", 3, "label", "click", 4, "ngIf"], [1, "m-b-16"], [1, "tabContainer"], [1, "nav", "nav-tabs", "nav-tabsc8y"], [3, "ngClass", 4, "ngFor", "ngForOf"], [4, "ngTemplateOutlet"], ["details", ""], ["historyOfChanges", ""], ["icon", "times", 3, "label", "click"], [1, "btn-clean", 3, "title", "click"], [3, "c8yIcon"], [1, "txt"], [3, "operation", "readOnly"], [3, "source"]], template: function SingleOperationListItemComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "c8y-li", 0, 1);
        ɵngcc0.ɵɵelementStart(2, "c8y-li-icon");
        ɵngcc0.ɵɵelement(3, "i", 2);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(4, "div", 3);
        ɵngcc0.ɵɵelementStart(5, "div", 4);
        ɵngcc0.ɵɵelementStart(6, "span", 5);
        ɵngcc0.ɵɵpipe(7, "translate");
        ɵngcc0.ɵɵtext(8);
        ɵngcc0.ɵɵpipe(9, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(10, "div", 6);
        ɵngcc0.ɵɵelementStart(11, "div", 7);
        ɵngcc0.ɵɵelementStart(12, "div", 8);
        ɵngcc0.ɵɵelementStart(13, "small", 9);
        ɵngcc0.ɵɵelement(14, "i", 10);
        ɵngcc0.ɵɵelementStart(15, "span");
        ɵngcc0.ɵɵtext(16);
        ɵngcc0.ɵɵpipe(17, "c8yDate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(18, "div", 11);
        ɵngcc0.ɵɵelementStart(19, "div", 8);
        ɵngcc0.ɵɵelementStart(20, "small", 9);
        ɵngcc0.ɵɵelement(21, "i", 12);
        ɵngcc0.ɵɵelementStart(22, "span");
        ɵngcc0.ɵɵelementStart(23, "a", 13);
        ɵngcc0.ɵɵtext(24);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementContainerStart(25);
        ɵngcc0.ɵɵelementStart(26, "c8y-li-action", 14);
        ɵngcc0.ɵɵlistener("click", function SingleOperationListItemComponent_Template_c8y_li_action_click_26_listener() { return ctx.scheduleAsBulkOperation(); });
        ɵngcc0.ɵɵpipe(27, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(28, SingleOperationListItemComponent_c8y_li_action_28_Template, 2, 3, "c8y-li-action", 15);
        ɵngcc0.ɵɵelementContainerEnd();
        ɵngcc0.ɵɵelementStart(29, "c8y-li-collapse", 16);
        ɵngcc0.ɵɵelementStart(30, "div", 17);
        ɵngcc0.ɵɵelementStart(31, "ul", 18);
        ɵngcc0.ɵɵtemplate(32, SingleOperationListItemComponent_li_32_Template, 7, 10, "li", 19);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(33, SingleOperationListItemComponent_ng_container_33_Template, 1, 0, "ng-container", 20);
        ɵngcc0.ɵɵtemplate(34, SingleOperationListItemComponent_ng_template_34_Template, 1, 2, "ng-template", null, 21, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(36, SingleOperationListItemComponent_ng_template_36_Template, 1, 1, "ng-template", null, 22, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵpropertyInterpolate1("id", "single-operation-", ctx.operation.id, "");
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(23, _c4, !ctx.collapsed))("collapsed", ctx.collapsed);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("c8yIcon", ctx.statusIcons[ctx.operation.status])("ngClass", ctx.statusClasses[ctx.operation.status]);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction2(25, _c5, !ctx.readOnly, ctx.readOnly));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(7, 15, ctx.displayedDescription));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(9, 17, ctx.displayedDescription), " ");
        ɵngcc0.ɵɵadvance(8);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(17, 19, ctx.operation.creationTime), " ");
        ɵngcc0.ɵɵadvance(7);
        ɵngcc0.ɵɵpropertyInterpolate1("href", "#/device/", ctx.operation.deviceId, "", ɵngcc0.ɵɵsanitizeUrl);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate(ctx.operation.deviceName);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵpropertyInterpolate("label", ɵngcc0.ɵɵpipeBind1(27, 21, "Schedule as bulk operation"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.readOnly && ctx.operation.status === ctx.OperationStatus.PENDING);
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.tabs);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx.selectedTab.template);
    } }, directives: function () { return [ɵngcc2.ListItemComponent, ɵngcc4.NgClass, ɵngcc2.ListItemIconComponent, ɵngcc2.IconDirective, ɵngcc2.ListItemActionComponent, ɵngcc4.NgIf, ɵngcc2.ListItemCollapseComponent, ɵngcc4.NgForOf, ɵngcc4.NgTemplateOutlet, SingleOperationDetailsComponent, ɵngcc2.ɵbe]; }, pipes: function () { return [ɵngcc2.C8yTranslatePipe, ɵngcc2.DatePipe]; }, encapsulation: 2 });
SingleOperationListItemComponent.ctorParameters = () => [
    { type: Router },
    { type: OperationService },
    { type: AlertService }
];
SingleOperationListItemComponent.propDecorators = {
    operation: [{ type: Input }],
    collapsed: [{ type: Input }],
    readOnly: [{ type: Input }],
    listItem: [{ type: ViewChild, args: ['listItem', { static: true },] }],
    detailsTabTemplate: [{ type: ViewChild, args: ['details', { static: true },] }],
    historyOfChangesTabTemplate: [{ type: ViewChild, args: ['historyOfChanges', { static: true },] }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SingleOperationListItemComponent, [{
        type: Component,
        args: [{
                selector: 'c8y-single-operation-list-item',
                template: "<c8y-li\n  class=\"c8y-list__item--double-actions\"\n  [ngClass]=\"{ 'c8y-list__item--no-expand': !collapsed }\"\n  [collapsed]=\"collapsed\"\n  #listItem\n  id=\"single-operation-{{ operation.id }}\"\n>\n  <c8y-li-icon>\n    <i [c8yIcon]=\"statusIcons[operation.status]\" [ngClass]=\"statusClasses[operation.status]\"></i>\n  </c8y-li-icon>\n  <div [ngClass]=\"{ 'content-flex-80': !readOnly, 'content-flex-50': readOnly }\">\n    <div class=\"col-6\">\n      <span class=\"text-truncate\" title=\"{{ displayedDescription | translate }}\">\n        {{ displayedDescription | translate }}\n      </span>\n    </div>\n    <div class=\"flex-grow\"></div>\n    <div class=\"col-3\">\n      <div class=\"m-r-16\">\n        <small class=\"icon-flex\">\n          <i c8yIcon=\"calendar\" class=\"m-r-4\"></i>\n          <span>\n            {{ operation.creationTime | c8yDate }}\n          </span>\n        </small>\n      </div>\n    </div>\n  </div>\n  <div class=\"c8y-list__item__footer\">\n    <div class=\"m-r-16\">\n      <small class=\"icon-flex\">\n        <i c8yIcon=\"exchange\" class=\"m-r-4\"></i>\n        <span>\n          <a href=\"#/device/{{ operation.deviceId }}\">{{ operation.deviceName }}</a>\n        </span>\n      </small>\n    </div>\n  </div>\n  <ng-container>\n    <c8y-li-action\n      label=\"{{ 'Schedule as bulk operation' | translate }}\"\n      (click)=\"scheduleAsBulkOperation()\"\n      icon=\"c8y-energy\"\n    >\n    </c8y-li-action>\n    <c8y-li-action\n      *ngIf=\"!readOnly && operation.status === OperationStatus.PENDING\"\n      label=\"{{ 'Cancel`operation`' | translate }}\"\n      (click)=\"cancel()\"\n      icon=\"times\"\n    >\n    </c8y-li-action>\n  </ng-container>\n  <c8y-li-collapse class=\"m-b-16\">\n    <div class=\"tabContainer\">\n      <ul class=\"nav nav-tabs nav-tabsc8y\">\n        <li [ngClass]=\"{ active: selectedTab === tab }\" *ngFor=\"let tab of tabs\">\n          <button [title]=\"tab.label | translate\" (click)=\"selectedTab = tab\" class=\"btn-clean\">\n            <i [c8yIcon]=\"tab.icon\"></i>\n            <span class=\"txt\">{{ tab.label | translate }}</span>\n          </button>\n        </li>\n      </ul>\n    </div>\n\n    <ng-container *ngTemplateOutlet=\"selectedTab.template\"></ng-container>\n\n    <ng-template #details>\n      <c8y-single-operation-details [operation]=\"operation\" [readOnly]=\"readOnly\">\n      </c8y-single-operation-details>\n    </ng-template>\n\n    <ng-template #historyOfChanges>\n      <c8y-audit-log [source]=\"operation.id\"></c8y-audit-log>\n    </ng-template>\n  </c8y-li-collapse>\n</c8y-li>\n"
            }]
    }], function () { return [{ type: ɵngcc6.Router }, { type: ɵngcc3.OperationService }, { type: ɵngcc2.AlertService }]; }, { collapsed: [{
            type: Input
        }], readOnly: [{
            type: Input
        }], operation: [{
            type: Input
        }], listItem: [{
            type: ViewChild,
            args: ['listItem', { static: true }]
        }], detailsTabTemplate: [{
            type: ViewChild,
            args: ['details', { static: true }]
        }], historyOfChangesTabTemplate: [{
            type: ViewChild,
            args: ['historyOfChanges', { static: true }]
        }] }); })();

class SingleOperationDetailsComponent {
    constructor(bulkOperationDetailsService) {
        this.bulkOperationDetailsService = bulkOperationDetailsService;
        this.readOnly = false;
    }
    openBulkOperationDetails() {
        this.bulkOperationDetailsService.openDetails(this.operation.bulkOperationId);
    }
}
SingleOperationDetailsComponent.ɵfac = function SingleOperationDetailsComponent_Factory(t) { return new (t || SingleOperationDetailsComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc7.BulkOperationDetailsService)); };
SingleOperationDetailsComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: SingleOperationDetailsComponent, selectors: [["c8y-single-operation-details"]], inputs: { readOnly: "readOnly", operation: "operation" }, decls: 20, vars: 9, consts: [[1, "row"], [1, "col-sm-3"], ["translate", "", 1, "legend", "form-block"], [1, "list-unstyled", "small"], ["class", "p-t-4 p-b-4 flex-row separator-bottom wrap", 4, "ngIf"], [1, "p-t-4", "p-b-4", "flex-row", "separator-bottom", "wrap"], ["translate", "", 1, "small", "m-0", "m-r-4"], [1, "flex-item-right"], [1, "col-sm-9"], [1, "p-16"], ["role", "button", "translate", "", 1, "pointer", 3, "click"], ["translate", "", 1, "small", "flex-item-top", "m-r-4"]], template: function SingleOperationDetailsComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵelementStart(2, "div", 2);
        ɵngcc0.ɵɵtext(3, " Details ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(4, "ul", 3);
        ɵngcc0.ɵɵtemplate(5, SingleOperationDetailsComponent_li_5_Template, 6, 0, "li", 4);
        ɵngcc0.ɵɵelementStart(6, "li", 5);
        ɵngcc0.ɵɵelementStart(7, "label", 6);
        ɵngcc0.ɵɵtext(8, "Status");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(9, "span", 7);
        ɵngcc0.ɵɵtext(10);
        ɵngcc0.ɵɵpipe(11, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(12, SingleOperationDetailsComponent_li_12_Template, 6, 3, "li", 4);
        ɵngcc0.ɵɵtemplate(13, SingleOperationDetailsComponent_li_13_Template, 5, 1, "li", 4);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(14, "div", 8);
        ɵngcc0.ɵɵelementStart(15, "div", 2);
        ɵngcc0.ɵɵtext(16, " Operation ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(17, "pre", 9);
        ɵngcc0.ɵɵtext(18);
        ɵngcc0.ɵɵpipe(19, "json");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(5);
        ɵngcc0.ɵɵproperty("ngIf", ctx.operation.bulkOperationId);
        ɵngcc0.ɵɵadvance(5);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(11, 5, ctx.operation.status.toString()));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.operation.failureReason);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.operation.c8y_Command);
        ɵngcc0.ɵɵadvance(5);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(19, 7, ctx.operation));
    } }, directives: [ɵngcc2.C8yTranslateDirective, ɵngcc4.NgIf], pipes: [ɵngcc2.C8yTranslatePipe, ɵngcc4.JsonPipe], encapsulation: 2 });
SingleOperationDetailsComponent.ctorParameters = () => [
    { type: BulkOperationDetailsService }
];
SingleOperationDetailsComponent.propDecorators = {
    operation: [{ type: Input }],
    readOnly: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SingleOperationDetailsComponent, [{
        type: Component,
        args: [{
                selector: 'c8y-single-operation-details',
                template: "<div class=\"row\">\n  <div class=\"col-sm-3\">\n    <div class=\"legend form-block\" translate>\n      Details\n    </div>\n    <ul class=\"list-unstyled small\">\n      <li class=\"p-t-4 p-b-4 flex-row separator-bottom wrap\" *ngIf=\"operation.bulkOperationId\">\n        <label class=\"small m-0 m-r-4\" translate>Bulk operation</label>\n        <span class=\"flex-item-right\">\n          <a class=\"pointer\" role=\"button\" (click)=\"openBulkOperationDetails()\" translate\n            >See details</a\n          >\n        </span>\n      </li>\n      <li class=\"p-t-4 p-b-4 flex-row separator-bottom wrap\">\n        <label class=\"small m-0 m-r-4\" translate>Status</label>\n        <span class=\"flex-item-right\">{{ operation.status.toString() | translate }}</span>\n      </li>\n      <li *ngIf=\"operation.failureReason\" class=\"p-t-4 p-b-4 flex-row separator-bottom wrap\">\n        <label class=\"small m-0 m-r-4\" translate>Failure reason</label>\n        <span class=\"flex-item-right\">{{ operation.failureReason | translate }}</span>\n      </li>\n      <li *ngIf=\"operation.c8y_Command\" class=\"p-t-4 p-b-4 flex-row separator-bottom wrap\">\n        <label class=\"small flex-item-top m-r-4\" translate>Result</label>\n        <span class=\"flex-item-right\">{{ operation.c8y_Command.result }}</span>\n      </li>\n    </ul>\n  </div>\n  <div class=\"col-sm-9\">\n    <div class=\"legend form-block\" translate>\n      Operation\n    </div>\n    <pre class=\"p-16\">{{ operation | json }}</pre>\n  </div>\n</div>\n"
            }]
    }], function () { return [{ type: ɵngcc7.BulkOperationDetailsService }]; }, { readOnly: [{
            type: Input
        }], operation: [{
            type: Input
        }] }); })();

/**
 * This module allows to display details of a single operation in a modal.
 */
class SingleOperationDetailsModule {
}
SingleOperationDetailsModule.ɵfac = function SingleOperationDetailsModule_Factory(t) { return new (t || SingleOperationDetailsModule)(); };
SingleOperationDetailsModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: SingleOperationDetailsModule });
SingleOperationDetailsModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [SingleOperationDetailsService], imports: [[
            CoreModule,
            PopoverModule,
            TooltipModule,
            CollapseModule,
            BulkOperationsListModule,
            BulkOperationsServiceModule
        ]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SingleOperationDetailsModule, [{
        type: NgModule,
        args: [{
                imports: [
                    CoreModule,
                    PopoverModule,
                    TooltipModule,
                    CollapseModule,
                    BulkOperationsListModule,
                    BulkOperationsServiceModule
                ],
                providers: [SingleOperationDetailsService],
                declarations: [
                    SingleOperationComponent,
                    SingleOperationModalComponent,
                    SingleOperationListItemComponent,
                    SingleOperationDetailsComponent
                ],
                entryComponents: [
                    SingleOperationComponent,
                    SingleOperationModalComponent,
                    SingleOperationListItemComponent,
                    SingleOperationDetailsComponent
                ],
                exports: [SingleOperationComponent]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SingleOperationDetailsModule, { declarations: function () { return [SingleOperationComponent, SingleOperationModalComponent, SingleOperationListItemComponent, SingleOperationDetailsComponent]; }, imports: function () { return [CoreModule,
        PopoverModule,
        TooltipModule,
        CollapseModule,
        BulkOperationsListModule,
        BulkOperationsServiceModule]; }, exports: function () { return [SingleOperationComponent]; } }); })();

/**
 * Generated bundle index. Do not edit.
 */

export { SingleOperationComponent, SingleOperationDetailsComponent, SingleOperationDetailsModule, SingleOperationDetailsService, SingleOperationListItemComponent, SingleOperationModalComponent };

//# sourceMappingURL=c8y-ngx-components-operations-single-operation-details.js.map