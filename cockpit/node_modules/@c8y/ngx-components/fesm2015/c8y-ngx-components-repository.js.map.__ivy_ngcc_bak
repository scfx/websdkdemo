{"version":3,"file":"c8y-ngx-components-repository.js","sources":["../../repository/configuration-device-tab/configuration-filter.pipe.ts","../../repository/repository.model.ts","../../repository/configuration-device-tab/device-configuration.service.ts","../../repository/repository.service.ts","../../repository/configuration-device-tab/save-to-repository.component.ts","../../repository/configuration-device-tab/configuration-preview.component.ts","../../repository/configuration-device-tab/device-configuration-list.component.ts","../../repository/configuration-device-tab/text-based-configuration.component.ts","../../repository/configuration-device-tab/device-configuration.component.ts","../../repository/configuration-device-tab/device-configuration.guard.ts","../../repository/configuration-device-tab/source-code-preview.component.ts","../../repository/configuration/configuration-detail.component.ts","../../repository/configuration/configuration-list.component.ts","../../repository/file-download/link-render-type.enum.ts","../../repository/file-download/file-download.component.ts","../../repository/select-modal/repository-select-modal.component.ts","../../repository/firmware-device-tab/firmware-device-tab.component.ts","../../repository/firmware-device-tab/firmware-device-tab.guard.ts","../../repository/firmware/add-firmware-modal.component.ts","../../repository/firmware/add-firmware-patch-modal.component.ts","../../repository/firmware/firmware-details.component.ts","../../repository/firmware/firmware-list.component.ts","../../repository/repository-navigation-factory.ts","../../repository/software-device-tab/advanced-software.service.ts","../../repository/software-device-tab/device-software-changes.component.ts","../../repository/software-device-tab/device-software-list.component.ts","../../repository/software-device-tab/installed-software.component.ts","../../repository/software-device-tab/software-device-tab.component.ts","../../repository/software-device-tab/software-device-tab.guard.ts","../../repository/software/add-software-modal.component.ts","../../repository/software/columns/device-type.cell-renderer.component.ts","../../repository/software/columns/name.cell-renderer.component.ts","../../repository/software/columns/software-type.cell-renderer.component.ts","../../repository/software/columns/software-type.filtering-form-renderer.component.ts","../../repository/software/columns/versions.cell-renderer.component.ts","../../repository/software/software-type.component.ts","../../repository/software/software-details.component.ts","../../repository/software/columns/description.grid-column.ts","../../repository/software/columns/device-type.grid-column.ts","../../repository/software/columns/name.grid-column.ts","../../repository/software/columns/software-type.grid-column.ts","../../repository/software/columns/versions.grid-column.ts","../../repository/software/software-list.component.ts","../../repository/repository.module.ts","../../repository/c8y-ngx-components-repository.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\nimport { SupportedConfigurationItem } from '../repository.model';\n\n@Pipe({\n  name: 'configurationFilterPipe'\n})\nexport class ConfigurationFilterPipe implements PipeTransform {\n  transform(items: any[], filterTerm: string): any {\n    return filterTerm.trim().length === 0\n      ? items\n      : items.filter(\n          (item: SupportedConfigurationItem) =>\n            this.filterContainString(item.name, filterTerm) ||\n            this.filterContainString(item.deviceType, filterTerm)\n        );\n  }\n\n  private filterContainString(name: string, filterTerm: string) {\n    const term = filterTerm.toLowerCase().trim();\n    return name && name.toLowerCase().indexOf(term) > -1;\n  }\n}\n","import { IManagedObject } from '@c8y/client';\n\nexport enum RepositoryType {\n  FIRMWARE = 'c8y_Firmware',\n  SOFTWARE = 'c8y_Software',\n  CONFIGURATION = 'c8y_ConfigurationDump'\n}\n\nexport const REPOSITORY_BINARY_TYPES = {\n  [RepositoryType.SOFTWARE]: 'c8y_SoftwareBinary',\n  [RepositoryType.FIRMWARE]: 'c8y_FirmwareBinary',\n  [RepositoryType.CONFIGURATION]: 'c8y_ConfigurationDumpBinary'\n};\n\nexport interface ModalModel {\n  selected?: { id?: string; name?: string; [key: string]: any };\n  version?: string;\n  dependency?: { c8y_Firmware: { version: string } };\n  patchVersion?: string;\n  description?: string;\n  deviceType?: string;\n  softwareType?;\n  binary?: {\n    file?: File;\n    url?: string;\n  };\n}\n\nexport interface RepositoryCategory extends Partial<IManagedObject> {\n  type: string;\n  description?: string;\n  c8y_Filter?: {\n    type: string;\n  };\n}\n\nexport interface FirmwareBinary extends Partial<IManagedObject> {\n  type: 'c8y_FirmwareBinary';\n  c8y_Firmware: {\n    version: string;\n    url: string;\n  };\n}\n\nexport interface FirmwarePatchBinary extends FirmwareBinary {\n  c8y_Patch: {\n    dependency: string;\n  };\n}\n\nexport interface SoftwareBinary extends Partial<IManagedObject> {\n  type: string;\n  c8y_Software: {\n    version: string;\n    url: string;\n  };\n}\n\nexport type RepositoryBinary = FirmwareBinary | SoftwareBinary | FirmwarePatchBinary;\n\nexport interface SelectedRepositoryBinary {\n  id?: string;\n  name: string;\n  version: string;\n  url: string;\n  dependency?: string;\n  c8y_Patch?: boolean;\n  isPatch?: boolean;\n  patchDependency?: string;\n}\n\nexport interface DeviceFirmware {\n  version: string;\n  url: string;\n  name: string;\n}\n\nexport interface DeviceSoftware {\n  name: string;\n  version?: string;\n  url: string;\n  softwareType?: string;\n}\n\nexport interface DeviceSoftwareChange extends DeviceSoftware {\n  action: 'install' | 'delete';\n}\n\nexport interface ConfigurationSnapshot {\n  id?: string;\n  time: string;\n  name: string;\n  binaryUrl?: string;\n  binary?: any;\n  binaryType?: any;\n  deviceType?: string;\n  configurationType?: string;\n  description?: string;\n}\n\nexport interface SupportedConfigurationItem {\n  name: string;\n  deviceType?: string;\n  configurationType?: string;\n  isLegacy?: boolean;\n}\n\nexport interface DeviceConfigurationListEmptyState {\n  icon?: string;\n  title?: string;\n  text?: string;\n}\n\nexport interface SoftwareFilterCriteria {\n  name?: string;\n  softwareType?: string;\n}\n\nexport enum DeviceConfigurationOperation {\n  UPLOAD_CONFIG = 'c8y_UploadConfigFile',\n  DOWNLOAD_CONFIG = 'c8y_DownloadConfigFile',\n  CONFIG = 'c8y_Configuration',\n  SEND_CONFIG = 'c8y_SendConfiguration'\n}\n","import { EventEmitter, Injectable } from '@angular/core';\nimport { DeviceConfigurationOperation } from '../repository.model';\nimport { IManagedObject } from '@c8y/client';\n\n@Injectable()\nexport class DeviceConfigurationService {\n  configurationsUpdated = new EventEmitter<any>();\n\n  updateConfigurations(repositorySnapsOnly?: boolean) {\n    this.configurationsUpdated.emit(repositorySnapsOnly);\n  }\n\n  hasAnySupportedOperation(\n    mo: IManagedObject,\n    operation: DeviceConfigurationOperation | DeviceConfigurationOperation[]\n  ) {\n    const supported = mo.c8y_SupportedOperations as [];\n    if (!supported) {\n      return false;\n    }\n    if (!Array.isArray(operation)) {\n      operation = [operation];\n    }\n    return supported.some(supportedOperation => operation.includes(supportedOperation));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  EventBinaryService,\n  EventService,\n  IdReference,\n  IEvent,\n  IFetchResponse,\n  IIdentified,\n  IManagedObject,\n  IManagedObjectBinary,\n  InventoryBinaryService,\n  InventoryService,\n  IOperation,\n  IResult,\n  IResultList,\n  OperationService,\n  OperationStatus,\n  QueriesUtil\n} from '@c8y/client';\nimport { AlertService, gettext, OperationRealtimeService } from '@c8y/ngx-components';\nimport {\n  assign,\n  cloneDeep,\n  find,\n  forEach,\n  get,\n  head,\n  isNil,\n  isString,\n  isUndefined,\n  map as _map,\n  pick,\n  remove,\n  set\n} from 'lodash-es';\nimport { defer, from, merge, Observable, of, throwError } from 'rxjs';\nimport { filter, map, switchMap, take, takeWhile, withLatestFrom } from 'rxjs/operators';\nimport {\n  ConfigurationSnapshot,\n  DeviceFirmware,\n  DeviceSoftware,\n  DeviceSoftwareChange,\n  FirmwareBinary,\n  FirmwarePatchBinary,\n  ModalModel,\n  RepositoryBinary,\n  RepositoryCategory,\n  RepositoryType,\n  REPOSITORY_BINARY_TYPES,\n  SelectedRepositoryBinary,\n  SoftwareBinary\n} from './repository.model';\n\n@Injectable()\nexport class RepositoryService {\n  readonly dateFrom = new Date(0);\n  readonly dateTo = new Date(Date.now() + 86400000); // 1 day in the future\n  private queriesUtil: QueriesUtil;\n\n  constructor(\n    private inventory: InventoryService,\n    private inventoryBinary: InventoryBinaryService,\n    private operation: OperationService,\n    private alert: AlertService,\n    private event: EventService,\n    private operationRealtime: OperationRealtimeService,\n    private eventBinary: EventBinaryService\n  ) {\n    this.queriesUtil = new QueriesUtil();\n  }\n\n  /**\n   * Lists repository entries of given type.\n   * @param type The type of repository entries to list.\n   * @param options Extra listing options.\n   */\n  listRepositoryEntries(\n    type: RepositoryType,\n    options?: {\n      /** Additional query. */\n      query?: any;\n      /** (deprecated - to be removed) Only include entries with matching partial names. */\n      partialName?: string;\n      /** Include entries with matching partial text in the specified properties. */\n      partialTextFilter?: { partialText: string; properties: string[] };\n      /** Exclude legacy entries. */\n      skipLegacy?: boolean;\n      /** Exclude default ordering. */\n      skipDefaultOrder?: boolean;\n      /** Other request params. */\n      params?: any;\n    }\n  ) {\n    const defaultOrder = [{ name: 1 }];\n    const defaultFilters = { type };\n    const legacyFilters = { __has: `url` };\n    let filters = {};\n\n    let fullQuery = (options && options.query) || {};\n    if (!options || (options && !options.skipDefaultOrder)) {\n      fullQuery = this.queriesUtil.addOrderbys(fullQuery, defaultOrder, 'prepend');\n    }\n\n    fullQuery = this.queriesUtil.addAndFilter(fullQuery, defaultFilters);\n\n    if (options && options.partialTextFilter) {\n      const { partialText, properties } = options.partialTextFilter;\n      const orFilter = { __or: properties.map(property => ({ [property]: `*${partialText}*` })) };\n      fullQuery = this.queriesUtil.addAndFilter(fullQuery, orFilter);\n    }\n\n    if (options && options.partialName) {\n      // backwards compatibility if\n      fullQuery = this.queriesUtil.addAndFilter(fullQuery, { name: `*${options.partialName}*` });\n    }\n\n    if (options && options.skipLegacy) {\n      fullQuery = this.queriesUtil.addAndFilter(fullQuery, { __not: legacyFilters });\n    }\n\n    filters = {\n      query: this.queriesUtil.buildQuery(fullQuery),\n      pageSize: 50,\n      withTotalPages: true,\n      ...((options && options.params) || {})\n    };\n    return this.inventory.list(filters);\n  }\n\n  // TODO: merge with create()\n  async save(data: ModalModel, type: RepositoryType, mo: Partial<IManagedObject> = {}) {\n    switch (type) {\n      case RepositoryType.CONFIGURATION: {\n        Object.assign(mo, {\n          type: RepositoryType.CONFIGURATION,\n          configurationType: data.selected ? data.selected.configurationType : undefined,\n          name: data.version,\n          description: data.description,\n          deviceType: data.deviceType,\n          c8y_Global: {}\n        });\n        if (!data.deviceType && mo.id) {\n          mo.deviceType = null;\n        }\n        if (!data.selected && mo.id) {\n          mo.configurationType = null;\n        }\n        break;\n      }\n    }\n\n    const existingUrl = mo.url;\n    if (data.binary.url) {\n      mo.url = data.binary.url;\n    } else if (data.binary.file) {\n      const response = await this.inventoryBinary.create(data.binary.file, {\n        c8y_Global: {}\n      } as Partial<IManagedObject>);\n      mo.url = response.data.self;\n    }\n\n    if (mo.id) {\n      return this.updateEntry(mo, existingUrl);\n    }\n    return this.createEntry(mo);\n  }\n\n  async create(modal: ModalModel, type: RepositoryType) {\n    switch (type) {\n      case RepositoryType.FIRMWARE:\n      case RepositoryType.SOFTWARE:\n        return this.createFirmwareOrSoftware(modal, type);\n    }\n  }\n\n  async createFirmwareOrSoftware(\n    modal: ModalModel,\n    type: RepositoryType\n  ): Promise<RepositoryCategory> {\n    let binary: IManagedObjectBinary;\n    let binaryURL: string;\n    let repositoryEntry: RepositoryCategory;\n    let repositoryBinary: FirmwareBinary | SoftwareBinary;\n    const mos = [];\n    const {\n      selected: { id: selectedId },\n      binary: { file, url }\n    } = modal;\n    try {\n      if (file) {\n        ({ data: binary } = await this.saveBinary(file));\n        ({ self: binaryURL } = binary);\n        mos.push(binary);\n      } else {\n        binaryURL = url;\n      }\n\n      ({ data: repositoryEntry } = await this.createOrUpdateRepositoryEntry(modal, type));\n      if (isNil(selectedId)) {\n        mos.push(repositoryEntry);\n      }\n\n      ({ data: repositoryBinary } = await this.createRepositoryBinary(\n        modal,\n        binaryURL,\n        type,\n        repositoryEntry\n      ));\n      mos.push(repositoryBinary);\n\n      if (file) {\n        await this.linkBinary(repositoryBinary, binary);\n      }\n\n      return repositoryEntry;\n    } catch (error) {\n      this.cleanUp(mos);\n      this.errorMsg();\n\n      // Propagate error\n      throw error;\n    }\n  }\n\n  saveBinary(file: File): Promise<IResult<IManagedObjectBinary>> {\n    return this.inventoryBinary.create(file, { c8y_Global: {} } as Partial<IManagedObject>);\n  }\n\n  createOrUpdateRepositoryEntry(\n    modal: ModalModel,\n    type: RepositoryType\n  ): Promise<IResult<RepositoryCategory>> {\n    const {\n      selected: { id, name },\n      description,\n      deviceType\n    } = modal;\n\n    const mo = {\n      id,\n      name: id ? undefined : name,\n      description,\n      type: id ? undefined : type,\n      c8y_Global: {}\n    };\n\n    if (deviceType) {\n      set(mo, 'c8y_Filter.type', deviceType);\n    }\n\n    if (modal.softwareType) {\n      set(mo, 'softwareType', modal.softwareType.softwareType);\n    }\n\n    return id\n      ? (this.inventory.update(mo) as Promise<IResult<RepositoryCategory>>)\n      : (this.inventory.create(mo) as Promise<IResult<RepositoryCategory>>);\n  }\n\n  createRepositoryBinary(\n    modal: ModalModel,\n    binaryURL: string,\n    type: RepositoryType,\n    parent: RepositoryCategory\n  ): Promise<IResult<FirmwareBinary | SoftwareBinary | FirmwarePatchBinary>> {\n    const mo = this.prepareRepositoryBinaryMO(modal, binaryURL, type);\n\n    return this.inventory.childAdditionsCreate(mo, parent) as Promise<\n      IResult<FirmwareBinary | SoftwareBinary | FirmwarePatchBinary>\n    >;\n  }\n\n  prepareRepositoryBinaryMO(modal: ModalModel, binaryURL: string, type: RepositoryType) {\n    const { version, patchVersion, dependency } = modal;\n    const result = {\n      type: REPOSITORY_BINARY_TYPES[type],\n      [type]: {\n        url: binaryURL\n      },\n      c8y_Global: {}\n    };\n\n    if (dependency) {\n      set(result, [type, 'version'], patchVersion);\n      assign(result, {\n        c8y_Patch: {\n          dependency: dependency.c8y_Firmware.version\n        }\n      });\n    } else {\n      set(result, [type, 'version'], version);\n    }\n    return result;\n  }\n\n  async linkBinary(\n    repositoryBinary: FirmwareBinary | SoftwareBinary,\n    binary: IManagedObjectBinary\n  ) {\n    const { id: repositoryBinaryId } = repositoryBinary;\n    if (binary) {\n      const { id: binaryId } = binary;\n      return this.inventory.childAdditionsAdd(binaryId, repositoryBinaryId);\n    }\n  }\n\n  cleanUp(mosToDelete: IIdentified[]) {\n    mosToDelete.forEach(mo => {\n      const { c8y_IsBinary } = mo;\n      isUndefined(c8y_IsBinary) ? this.delete(mo) : this.inventoryBinary.delete(mo);\n    });\n  }\n\n  delete(entity: IIdentified): Promise<IResult<null>> {\n    return this.inventory.delete(entity, { forceCascade: true });\n  }\n\n  errorMsg() {\n    const msg = gettext('Failed to save');\n    this.alert.danger(msg);\n  }\n\n  getBaseVersionsCount$(entry: IManagedObject): Observable<number> {\n    if (this.isLegacyEntry(entry)) {\n      return of(1);\n    }\n    return from(this.listBaseVersions(entry, { pageSize: 1, withTotalPages: true })).pipe(\n      map(({ paging }) => paging.totalPages)\n    );\n  }\n\n  getBaseVersionFromMO(mo: RepositoryBinary): string {\n    return this.isPatch(mo) ? get(mo, 'c8y_Patch.dependency') : get(mo, 'c8y_Firmware.version');\n  }\n\n  isPatch(mo: RepositoryBinary): boolean {\n    return !!get(mo, 'c8y_Patch.dependency');\n  }\n\n  getPatchVersionsCount$(entry: IManagedObject, baseVersion: FirmwareBinary): Observable<number> {\n    if (this.isLegacyEntry(baseVersion)) {\n      return of(0);\n    }\n    return from(\n      this.listPatchVersions(entry, baseVersion, { pageSize: 1, withTotalPages: true })\n    ).pipe(map(({ paging }) => paging.totalPages));\n  }\n\n  isLegacyEntry(entry: Partial<IManagedObject>): boolean {\n    return Boolean(entry.url);\n  }\n\n  /**\n   * Lists all versions (base and patch ones) of given top level entry.\n   * Versions are ordered by creation time (assuming the earlier created, the older the version).\n   * @param entry Top level repository entry.\n   * @param params Additional query params.\n   */\n  listAllVersions(entry: Partial<IManagedObject>, params = {}) {\n    if (this.isLegacyEntry(entry)) {\n      return this.getBaseVersionResultListForLegacyEntry(entry);\n    }\n\n    const VERSION_FILTER_ORDER = {\n      __filter: {},\n      __orderby: [{ 'creationTime.date': -1 }, { creationTime: -1 }]\n    };\n    return this.listChildren(entry, VERSION_FILTER_ORDER, params);\n  }\n\n  /**\n   * Lists base versions of given top level entry.\n   * Versions are ordered by creation time (assuming the earlier created, the older the version).\n   * @param entry Top level repository entry.\n   * @param params Additional query params.\n   */\n  listBaseVersions(entry: Partial<IManagedObject>, params = {}) {\n    if (this.isLegacyEntry(entry)) {\n      return this.getBaseVersionResultListForLegacyEntry(entry);\n    }\n\n    const NO_PATCH_FILTER_ORDER = {\n      __filter: {\n        __not: { __has: 'c8y_Patch' }\n      },\n      __orderby: [{ 'creationTime.date': -1 }, { creationTime: -1 }]\n    };\n    return this.listChildren(entry, NO_PATCH_FILTER_ORDER, params);\n  }\n\n  /**\n   * Lists patch versions of given base version under the entry.\n   * Versions are ordered by creation time (assuming the earlier created, the older the version).\n   * @param entry Top level repository entry.\n   * @param baseVersion Base version.\n   * @param params Additional query params.\n   */\n  listPatchVersions(entry: IManagedObject, baseVersion: FirmwareBinary | string, params = {}) {\n    const version = isString(baseVersion) ? baseVersion : get(baseVersion, 'c8y_Firmware.version');\n    const PATCH_FILTER_ORDER = {\n      __filter: {\n        'c8y_Patch.dependency': version\n      },\n      __orderby: [{ 'creationTime.date': -1 }, { creationTime: -1 }]\n    };\n    return this.listChildren(entry, PATCH_FILTER_ORDER, params);\n  }\n\n  /**\n   * Lists patch versions of given base version under the entry including the base version.\n   * Versions are ordered by creation time (assuming the earlier created, the older the version).\n   * In terms of legacy base version the entry gets transformed to fit the needed data model.\n   * @param entry Top level repository entry.\n   * @param baseVersion Base version.\n   * @param params Additional query params.\n   */\n  listBaseVersionAndPatches(entry: IManagedObject, baseVersion: IManagedObject, params = {}) {\n    if (this.isLegacyEntry(entry)) {\n      return Promise.resolve({\n        data: [\n          Object.assign(\n            {\n              c8y_Firmware: {\n                version: entry.version,\n                url: entry.url\n              }\n            },\n            entry\n          )\n        ]\n      });\n    }\n\n    const PATCH_FILTER_ORDER = {\n      __filter: {\n        __or: {\n          'c8y_Patch.dependency': baseVersion.c8y_Firmware.version,\n          'c8y_Firmware.version': baseVersion.c8y_Firmware.version\n        }\n      },\n      __orderby: [{ 'c8y_Patch.dependency': 1 }, { 'c8y_Firmware.version': 1 }]\n    };\n    return this.listChildren(entry, PATCH_FILTER_ORDER, params);\n  }\n\n  listChildren(entry: Partial<IManagedObject>, filters = {}, params: any = {}) {\n    const childrenFilters = { __bygroupid: entry.id };\n    const query = this.queriesUtil.addAndFilter(filters, childrenFilters);\n    // FIXME: needed because of issue in forOf directive (...)\n    params.withTotalPages = true;\n    return this.inventory.listQuery(query, params);\n  }\n\n  /**\n   * Fetches all items from the list starting with the provided page.\n   * @param firstPage The first page of the list to fetch all items for.\n   */\n  async fetchAllItemsFromList(firstPage) {\n    let allItems;\n\n    if (!firstPage.then) {\n      allItems = [...firstPage];\n    } else {\n      let { paging, data: items } = await firstPage;\n      allItems = [...items];\n\n      while (paging && paging.nextPage) {\n        ({ paging, data: items } = await paging.next());\n        allItems = [...allItems, ...items];\n      }\n    }\n\n    return allItems;\n  }\n\n  /**\n   * Gets top level repository entry managed object for base or patch version.\n   * @param mo Base or patch version managed object with parents.\n   */\n  getRepositoryEntryMO$(mo: IManagedObject): Observable<IManagedObject | undefined> {\n    if (!mo) {\n      return of(undefined);\n    }\n    const [reference] = get(mo, 'additionParents.references');\n    const id = get(reference, 'managedObject.id');\n    return id\n      ? from(this.inventory.detail(id, { withChildren: false })).pipe(map(({ data }) => data))\n      : of(undefined);\n  }\n  /**\n   * Gets base or patch version managed object.\n   * @param deviceRepositoryFragment Device repository fragment.\n   * @param type Top level repository entry type.\n   * @param configuration Configuration object with options:\n   * - **skipLegacy** - `boolean` - Exclude legacy entries.\n   * - **filters** - `object` - Filter object.\n   *\n   * @deprecated as it doesn't support 'missing url' case\n   */\n  getRepositoryBinaryMoByVersion(\n    deviceRepositoryFragment: DeviceFirmware | DeviceSoftware,\n    type: RepositoryType,\n    { skipLegacy = false, filters = {} }: { skipLegacy?: boolean; filters?: object } = {}\n  ): Promise<IManagedObject> {\n    const { version, url, name } = deviceRepositoryFragment;\n    const repositoryBinaryType = REPOSITORY_BINARY_TYPES[type];\n    let query;\n    const newModelBaseVersionQuery = {\n      [`${type}.version`]: version,\n      [`${type}.url`]: url,\n      type: repositoryBinaryType\n    };\n    const legacyVersionQuery = { url, type, name };\n    filters = { withChildren: false, withParents: true, ...filters };\n\n    if (skipLegacy) {\n      query = {\n        __and: {\n          ...newModelBaseVersionQuery\n        }\n      };\n    } else {\n      query = {\n        __or: [{ __and: { ...newModelBaseVersionQuery } }, { __and: { ...legacyVersionQuery } }]\n      };\n    }\n\n    return this.inventory.listQuery(query, filters).then(({ data }) => head(data));\n  }\n\n  getBinaryName$(binaryUrl: string): Observable<string> {\n    if (!binaryUrl) {\n      return of('---');\n    }\n\n    const binaryId = this.inventoryBinary.getIdFromUrl(binaryUrl);\n    if (!binaryId) {\n      return of(binaryUrl);\n    }\n    return defer(() => this.inventory.detail(binaryId).then(result => result.data)).pipe(\n      map(mo => mo.name)\n    );\n  }\n\n  /**\n   * Generates an inventory query object which can be used to find\n   * repository entries of specified type matching the type of provided device.\n   * @param repositoryType The type of repository entries which will be queried with the generated query.\n   * @param device The device for which matching repository entries will be queried with the generated query.\n   */\n\n  getDeviceTypeQuery(repositoryType: RepositoryType, device: IManagedObject): object {\n    let result = { type: repositoryType };\n    if (repositoryType === RepositoryType.CONFIGURATION) {\n      if (device.type) {\n        result = this.queriesUtil.addAndFilter(result, {\n          __or: [{ deviceType: device.type }, { __not: { __has: `deviceType` } }]\n        });\n      }\n    } else {\n      result = this.queriesUtil.addAndFilter(result, {\n        __or: [\n          { 'c8y_Filter.type': device.type },\n          { 'c8y_Filter.type': '' },\n          { __not: { __has: `c8y_Filter.type` } }\n        ]\n      });\n    }\n    return result;\n  }\n\n  /**\n   * Generates an inventory query object which can be used to find configuration repository entries\n   * matching the type of provided device and specified configuration type.\n   * @param device The device for which matching repository entries will be queried with the generated query.\n   * @param configurationType Configuration type for which matching repository entries will be queried with the generated query.\n   */\n  getConfigurationTypeQuery(device: IManagedObject, configurationType: string): object {\n    const query = this.getDeviceTypeQuery(RepositoryType.CONFIGURATION, device);\n    return this.queriesUtil.addAndFilter(query, {\n      __or: [\n        { configurationType },\n        { configurationType: '' },\n        { __not: { __has: `configurationType` } }\n      ]\n    });\n  }\n\n  /**\n   * Gets the list of software installed in the device in the uniform format.\n   * Supports c8y_SoftwareList and c8y_Software fragments.\n   * @param device The device whose software list should be returned.\n   */\n  getDeviceSoftwareList(device: IManagedObject): DeviceSoftware[] {\n    if (device.c8y_SoftwareList) {\n      return cloneDeep(device.c8y_SoftwareList);\n    }\n    if (device.c8y_Software) {\n      return _map(device.c8y_Software, (version, name) => ({ name, version }));\n    }\n    return [];\n  }\n\n  /**\n   * Prepares a software update operation for given device and the list of changes, and sends it to the device.\n   * @param device The device which the operation should be prepared for and sent to.\n   * @param changes The list of software changes which should be applied.\n   */\n  async createSoftwareUpdateOperation(\n    device: IManagedObject,\n    changes: DeviceSoftwareChange[]\n  ): Promise<IOperation> {\n    const operation = this.getSoftwareUpdateOperation(device, changes);\n    return (await this.operation.create(operation)).data;\n  }\n\n  /**\n   * Prepares a software update operation for given device and changes.\n   * Returned operation type depends on device's supported operations.\n   * Supports c8y_SoftwareUpdate, c8y_SoftwareList, and c8y_Software operations.\n   * @param device The device for which operation should be prepared.\n   * @param changes The list of software changes which should be applied.\n   */\n  getSoftwareUpdateOperation(device: IManagedObject, changes: DeviceSoftwareChange[]): IOperation {\n    const operation: IOperation = {\n      deviceId: device.id,\n      description: `Apply software changes: ${changes\n        .map(\n          change =>\n            `${change.action} \"${change.name}\"${\n              change.version ? ` (version: ${change.version})` : ''\n            }`\n        )\n        .join(', ')}`\n    };\n    if (device.c8y_SupportedOperations.includes('c8y_SoftwareUpdate')) {\n      operation.c8y_SoftwareUpdate = cloneDeep(changes);\n    } else if (device.c8y_SupportedOperations.includes('c8y_SoftwareList')) {\n      operation.c8y_SoftwareList = cloneDeep(device.c8y_SoftwareList) || [];\n      changes.forEach(change => {\n        const deviceSoftware: DeviceSoftware = pick(change, ['name', 'version', 'url']);\n        if (change.action === 'delete') {\n          remove(operation.c8y_SoftwareList, deviceSoftware);\n        }\n        if (change.action === 'install') {\n          operation.c8y_SoftwareList.push(deviceSoftware);\n        }\n      });\n    } else if (device.c8y_SupportedOperations.includes('c8y_Software')) {\n      operation.c8y_Software = cloneDeep(device.c8y_Software) || {};\n      changes.forEach(change => {\n        if (change.action === 'delete') {\n          delete operation.c8y_Software[change.name];\n        }\n        if (change.action === 'install') {\n          operation.c8y_Software[change.name] = change.version;\n        }\n      });\n    }\n    return operation;\n  }\n\n  /**\n   * Extracts the list of device software changes from given operation in the context of given device.\n   * @param operation The operation from which the list should be extracted.\n   * @param device The target device of the operation.\n   */\n  getDeviceSoftwareChangesFromOperation(\n    operation: IOperation,\n    device: IManagedObject\n  ): DeviceSoftwareChange[] {\n    if (operation.c8y_SoftwareUpdate) {\n      return cloneDeep(operation.c8y_SoftwareUpdate);\n    }\n    if (operation.c8y_SoftwareList) {\n      return this.getDeviceSoftwareChangesFromSoftwareListOperation(operation, device);\n    }\n    if (operation.c8y_Software) {\n      return this.getDeviceSoftwareChangesFromSoftwareOperation(operation, device);\n    }\n    return [];\n  }\n\n  /**\n   * Prepares a firmware update operation for given device and the selected repository binary, and sends it to the device.\n   * @param device The device which the operation should be prepared for and sent to.\n   * @param selectedOption The selected repository binary option.\n   */\n  async createFirmwareUpdateOperation(\n    device: IManagedObject,\n    selectedOption: SelectedRepositoryBinary\n  ): Promise<IOperation> {\n    const operation = this.getFirmwareUpdateOperation(device, selectedOption);\n    return (await this.operation.create(operation)).data;\n  }\n\n  /**\n   * Prepares a firmware update operation for given device and selected version.\n   * Supports c8y_Firmware operation.\n   * @param device The device for which operation should be prepared.\n   * @param selectedOption Selected firmware version.\n   */\n  getFirmwareUpdateOperation(\n    device: IManagedObject,\n    selectedOption: SelectedRepositoryBinary\n  ): IOperation {\n    delete selectedOption.id;\n\n    const operation: IOperation = {\n      deviceId: device.id,\n      description: `Update firmware to: \"${selectedOption.name}\"${\n        selectedOption.version ? ` (version: ${selectedOption.version})` : ''\n      }`,\n      c8y_Firmware: { ...selectedOption }\n    };\n\n    return operation;\n  }\n\n  /**\n   * Prepares a configuration file upload operation for given device and configuration type.\n   * @param device The device for which operation should be prepared.\n   * @param configurationType Selected configuration type.\n   * @param isLegacy  A legacy operation is created without a configurationType.\n   */\n  getUploadConfigurationFileOperation(\n    device: IManagedObject,\n    configurationType: string,\n    isLegacy: boolean = false\n  ): IOperation {\n    if (isLegacy) {\n      return {\n        deviceId: device.id,\n        description: `Retrieve configuration snapshot from device ${device.name}`,\n        c8y_UploadConfigFile: {}\n      };\n    }\n    return {\n      deviceId: device.id,\n      description: `Retrieve ${configurationType} configuration snapshot from device ${device.name}`,\n      c8y_UploadConfigFile: {\n        type: configurationType\n      }\n    };\n  }\n\n  /**\n   * Prepares a configuration file download operation for given device and configuration type.\n   * @param device The device for which operation should be prepared.\n   * @param configurationType Selected configuration type.\n   * @param binaryUrl The url of a binary to be downloaded.\n   * @param isLegacy A legacy operation is created without a configurationType.\n   */\n  getDownloadConfigurationFileOperation(\n    device: IManagedObject,\n    configurationType: string,\n    configSnapshot: ConfigurationSnapshot,\n    isLegacy: boolean = false\n  ): IOperation {\n    if (isLegacy) {\n      return {\n        deviceId: device.id,\n        description: `Send configuration snapshot ${configSnapshot.name} to device ${device.name}`,\n        c8y_DownloadConfigFile: {\n          url: configSnapshot.binaryUrl,\n          c8y_ConfigurationDump: {\n            id: configSnapshot.id\n          }\n        }\n      };\n    }\n    return {\n      deviceId: device.id,\n      description: `Send configuration snapshot ${configSnapshot.name} of configuration type ${configurationType} to device ${device.name}`,\n      c8y_DownloadConfigFile: {\n        url: configSnapshot.binaryUrl,\n        type: configurationType\n      }\n    };\n  }\n\n  /**\n   * Gets the last firmware update operation for given device.\n   * Looks for c8y_Firmware operations.\n   * @param deviceId The ID of the device to find an operation for.\n   */\n  async getLastFirmwareUpdateOperation(deviceId: string | number): Promise<IOperation> {\n    const filters = {\n      deviceId,\n      dateFrom: new Date(0).toISOString(),\n      dateTo: new Date(Date.now()).toISOString(),\n      revert: true,\n      pageSize: 1\n    };\n    return this.getFirstMatchingOperation([{ ...filters, fragmentType: 'c8y_Firmware' }]);\n  }\n\n  /**\n   * Gets the last software update operation for given device.\n   * Looks for c8y_SoftwareUpdate, c8y_SoftwareList, or c8y_Software operations.\n   * @param deviceId The ID of the device to find an operation for.\n   */\n  async getLastSoftwareUpdateOperation(deviceId: string | number): Promise<IOperation> {\n    const filters = {\n      deviceId,\n      dateFrom: new Date(0).toISOString(),\n      dateTo: new Date(Date.now()).toISOString(),\n      revert: true,\n      pageSize: 1\n    };\n    return this.getFirstMatchingOperation([\n      { ...filters, fragmentType: 'c8y_SoftwareUpdate' },\n      { ...filters, fragmentType: 'c8y_SoftwareList' },\n      { ...filters, fragmentType: 'c8y_Software' }\n    ]);\n  }\n\n  /**\n   * Iterates over the list of filters and queries the operations.\n   * If a query returns at least one operation, the first one will be returned.\n   * Otherwise the next query will be performed.\n   * If none of the queries returns any operation, null will be returned.\n   * @param filtersList The list of filters for the queries.\n   */\n  async getFirstMatchingOperation(filtersList: any[]): Promise<IOperation> {\n    let matchingOperation = null;\n\n    for (const filters of filtersList) {\n      const operations = (await this.operation.list(filters)).data;\n      if (operations.length) {\n        matchingOperation = operations[0];\n        break;\n      }\n    }\n\n    return matchingOperation;\n  }\n\n  /**\n   * Iterates over the list of filters and queries the operations.\n   * It compares the operations retrieved by the queries by 'creationTime'\n   * and return the latest one.\n   * If none of the queries returns any operation, null will be returned.\n   * @param filtersList The list of filters for the queries.\n   */\n  async getLatestMatchingOperation(filtersList: any[]): Promise<IOperation> {\n    let matchingOperation: IOperation = null;\n\n    for (const filters of filtersList) {\n      const operations: IOperation[] = (await this.operation.list(filters)).data;\n      if (operations.length) {\n        if (matchingOperation) {\n          matchingOperation =\n            new Date(matchingOperation.creationTime).getTime() <\n            new Date(operations[0].creationTime).getTime()\n              ? operations[0]\n              : matchingOperation;\n        } else {\n          matchingOperation = operations[0];\n        }\n      }\n    }\n\n    return matchingOperation;\n  }\n\n  /**\n   * Creates the operation and returns an observable to track its progress.\n   * Fails the observable when the operation returns FAILED status.\n   * Completes the observable when the operation returns SUCCESSFUL status.\n   * @param operation The operation to create and track.\n   */\n  createObservedOperation(operation: IOperation): Observable<IOperation> {\n    return from(this.operation.create(operation)).pipe(\n      map(({ data }) => data),\n      take(1),\n      switchMap(createdOperation => this.observeOperation(createdOperation))\n    );\n  }\n\n  /**\n   * Returns an observable to track progress of given operation.\n   * Fails the observable when the operation returns FAILED status.\n   * Completes the observable when the operation returns SUCCESSFUL status.\n   * @param operation The operation to be observed.\n   */\n  observeOperation(operation: IOperation): Observable<IOperation> {\n    const observedOperation$ = of(operation);\n    const operationUpdates$ = observedOperation$.pipe(\n      switchMap(observedOperation => this.operationRealtime.onAll$(observedOperation.deviceId)),\n      map(({ data }) => data as IOperation),\n      withLatestFrom(observedOperation$),\n      filter(([operationUpdate, observedOperation]) => operationUpdate.id === observedOperation.id),\n      switchMap(([operationUpdate]) => {\n        if (operationUpdate.status === OperationStatus.FAILED) {\n          return throwError(operationUpdate);\n        }\n        return of(operationUpdate);\n      }),\n      takeWhile(operationUpdate => operationUpdate.status !== OperationStatus.SUCCESSFUL, true)\n    );\n    return merge(observedOperation$, operationUpdates$);\n  }\n\n  /**\n   * Gets a single event with latest creationTime for the given device Id and event type.\n   * @param deviceId The device Id for which the events should be queried.\n   * @param type Event type.\n   */\n  async getLatestConfigurationEvent(\n    deviceId: string | number,\n    type: string\n  ): Promise<IEvent | undefined> {\n    const eventFilter: object = {\n      source: deviceId,\n      type,\n      dateFrom: this.dateFrom.toISOString(),\n      dateTo: this.dateTo.toISOString(),\n      pageSize: 1\n    };\n\n    const { data } = await this.event.list(eventFilter);\n    return data[0];\n  }\n\n  /**\n   * Gets a list of operations for the given device Id, and operation type.\n   * @param deviceId The device Id for which the operation should be queried.\n   * @param operationType Operation type fragment.\n   */\n  async getConfigFileOperationList(\n    deviceId: string | number,\n    operationType: string\n  ): Promise<IOperation[]> {\n    const operationFilter: object = {\n      deviceId,\n      fragmentType: operationType,\n      dateFrom: this.dateFrom.toISOString(),\n      dateTo: this.dateTo.toISOString(),\n      revert: true,\n      pageSize: 2000\n    };\n\n    return (await this.operation.list(operationFilter)).data;\n  }\n\n  /**\n   * Gets latest uploaded configuration snapshot for the given device, and configuration type.\n   * @param device The device for which the configuration snapshot was uploaded.\n   * @param configurationType Selected configuration type.\n   */\n  async getConfigSnapshot(\n    device: IManagedObject,\n    configurationType: string\n  ): Promise<ConfigurationSnapshot | undefined> {\n    const event: IEvent = await this.getLatestConfigurationEvent(device.id, configurationType);\n    let configSnapshot: ConfigurationSnapshot;\n    if (event) {\n      configSnapshot = {\n        time: event.time,\n        name: event.text,\n        deviceType: device.type,\n        configurationType\n      };\n      try {\n        configSnapshot.binary = await (await this.eventBinary.download(event)).text();\n        if (event.c8y_IsBinary) {\n          configSnapshot.binaryType = event.c8y_IsBinary.type;\n        }\n      } catch (ex) {\n        const msg = gettext('Could not get the binary.');\n        this.alert.danger(msg);\n      }\n    }\n    return configSnapshot;\n  }\n\n  async getLegacyConfigSnapshot(deviceId) {\n    let configSnapshot: ConfigurationSnapshot;\n    let mo;\n    const device = (await this.inventory.detail(deviceId, { withChildren: false })).data;\n    const snapshotId = device.c8y_ConfigurationDump && device.c8y_ConfigurationDump.id;\n    if (!snapshotId) {\n      return;\n    }\n\n    try {\n      mo = (await this.inventory.detail(snapshotId)).data;\n    } catch (ex) {\n      // do nothing\n    }\n    if (mo) {\n      configSnapshot = {\n        time: mo.creationTime,\n        name: mo.name\n      };\n      configSnapshot.binary = await this.getBinaryText(mo.url, { allowExternal: false });\n    }\n    return configSnapshot;\n  }\n\n  /**\n   * Returns a binary object as text.\n   * @param binaryUrl The URL to find binary\n   * @param options The object with additional options:\n   * - **allowExternal** - `boolean` - allows downloading external binary file\n   * - **noAlerts** - `boolean` - do not display an alert message; defaults to `false`\n   */\n  async getBinaryText(\n    binaryUrl: string,\n    options: { allowExternal: boolean; noAlerts?: boolean }\n  ): Promise<string> {\n    const binaryId = this.inventoryBinary.getIdFromUrl(binaryUrl);\n    let res;\n    if (!binaryId && options.allowExternal) {\n      res = await this.getExternalBinaryResponse(binaryUrl, options);\n    } else {\n      res = await this.getInternalBinaryResponse(binaryId, options);\n    }\n    if (!res) {\n      return null;\n    }\n    return res.text();\n  }\n\n  /**\n   * Returns a binary object as File.\n   * @param binaryUrl The URL to find binary\n   * @param options The object with additional options:\n   * - **allowExternal** - `boolean` - allows downloading external binary file\n   */\n  async getBinaryFile(binaryUrl: string, options: { allowExternal: boolean }): Promise<File> {\n    const binaryId = this.inventoryBinary.getIdFromUrl(binaryUrl);\n    if (!binaryId && !options.allowExternal) {\n      return null;\n    }\n    // @TODO: note that it doesn't solve issue with external binary here, such url won't have binaryId, so we won't know the name or contentType to use in File constructor, let's add a @FIXME comment for now?\n    const { name, contentType } = (await this.inventory.detail(binaryId)).data;\n    const res = !!binaryId\n      ? await this.getInternalBinaryResponse(binaryId)\n      : await this.getExternalBinaryResponse(binaryUrl);\n    const arrayBuffer = await res.arrayBuffer();\n    return new File([arrayBuffer], name, { type: contentType });\n  }\n\n  /**\n   * Gets the last configuration update operation for given device.\n   * Looks for c8y_Configuration and c8y_SendConfiguration operations.\n   * @param deviceId The ID of the device to find an operation for.\n   */\n  async getLastConfigUpdateOperation(deviceId: string | number): Promise<IOperation> {\n    const filters = {\n      deviceId,\n      dateFrom: new Date(0).toISOString(),\n      dateTo: new Date(Date.now()).toISOString(),\n      revert: true,\n      pageSize: 1\n    };\n    return this.getLatestMatchingOperation([\n      { ...filters, fragmentType: 'c8y_Configuration' },\n      { ...filters, fragmentType: 'c8y_SendConfiguration' }\n    ]);\n  }\n\n  /**\n   * Prepares a configuration download operation for given device and its current configuration.\n   * Supports c8y_SendConfiguration operation.\n   * @param device The device for which operation should be prepared.\n   */\n  createTextBasedConfigurationReloadOperation(device: IManagedObject): IOperation {\n    return {\n      deviceId: device.id,\n      description: gettext('Requested current configuration'),\n      c8y_SendConfiguration: {}\n    };\n  }\n\n  /**\n   * Prepares a configuration update operation for the given device.\n   * Supports c8y_Configuration operation.\n   * @param device The device for which operation should be prepared.\n   * @param config The configuration which will update the existing one.\n   */\n  createTextBasedConfigurationUpdateOperation(device: IManagedObject, config: string): IOperation {\n    return {\n      deviceId: device.id,\n      description: gettext('Configuration update'),\n      c8y_Configuration: {\n        config\n      }\n    };\n  }\n\n  async getBinary(binaryId: IdReference): Promise<IFetchResponse> {\n    try {\n      return await this.inventoryBinary.download(binaryId);\n    } catch (ex) {\n      const msg = gettext('Could not get the binary.');\n      this.alert.danger(msg);\n    }\n  }\n\n  /**\n   * Gets all available snapshots from the repository for the given device.\n   * @param device The device for which the snapshots should be prepared.\n   * @param configurationType Selected configuration type.\n   */\n  async getSnapshotsFromRepository(device, configurationType) {\n    const searchQuery = this.getConfigurationTypeQuery(device, configurationType);\n    const res = await this.listRepositoryEntries(RepositoryType.CONFIGURATION, {\n      query: searchQuery,\n      params: { pageSize: 100 }\n    });\n    return res.data;\n  }\n\n  /**\n   * Returns a binary object.\n   * @param binaryId binary ID\n   * @param options The object with additional options:\n   * - **noAlerts** - `boolean` - do not display an alert message; defaults to `false`\n   */\n  private async getInternalBinaryResponse(\n    binaryId: IdReference,\n    options: { noAlerts?: boolean } = {}\n  ): Promise<IFetchResponse> {\n    let res;\n    try {\n      res = await this.inventoryBinary.download(binaryId);\n    } catch (ex) {\n      if (!options.noAlerts) {\n        const msg = gettext('Could not get the binary.');\n        this.alert.danger(msg);\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Returns a binary object.\n   * @param binaryUrl The URL to find binary\n   * @param options The object with additional options:\n   * - **noAlerts** - `boolean` - do not display an alert message; defaults to `false`\n   */\n  private async getExternalBinaryResponse(\n    binaryUrl: string,\n    options: { noAlerts?: boolean } = {}\n  ): Promise<IFetchResponse> {\n    let res;\n    try {\n      const fetchRes = await fetch(binaryUrl);\n      if (fetchRes.status >= 400) {\n        throw res;\n      }\n      res = fetchRes;\n    } catch {\n      if (!options.noAlerts) {\n        const msg = gettext('Could not get the external binary');\n        this.alert.danger(msg);\n      }\n    }\n    return res;\n  }\n\n  private async createEntry(mo: Partial<IManagedObject>) {\n    const binaryId = await this.inventoryBinary.getIdFromUrl(mo.url);\n    const newMo = await this.inventory.create(mo);\n    if (binaryId) {\n      await this.inventory.childAdditionsAdd(binaryId, newMo.data);\n    }\n    return newMo;\n  }\n\n  private async updateEntry(mo: Partial<IManagedObject>, url) {\n    const existingBinaryId = await this.inventoryBinary.getIdFromUrl(url);\n    const newBinaryId = await this.inventoryBinary.getIdFromUrl(mo.url);\n    if (existingBinaryId && existingBinaryId !== newBinaryId) {\n      const id = this.inventoryBinary.getIdFromUrl(url);\n      await this.inventoryBinary.delete(id);\n    }\n    if (newBinaryId) {\n      await this.inventory.childAdditionsAdd(newBinaryId, mo);\n    }\n    return this.inventory.update(mo);\n  }\n\n  private getBaseVersionResultListForLegacyEntry(entry) {\n    return Promise.resolve({\n      res: {} as IFetchResponse,\n      data: [\n        {\n          ...entry,\n          [entry.type]: {\n            version: entry.version,\n            url: entry.url\n          }\n        }\n      ]\n    } as IResultList<IManagedObject>);\n  }\n\n  private getDeviceSoftwareChangesFromSoftwareListOperation(\n    operation: IOperation,\n    device: IManagedObject\n  ): DeviceSoftwareChange[] {\n    const changes: DeviceSoftwareChange[] = [];\n    forEach(device.c8y_SoftwareList, deviceSoftware => {\n      const operationSoftware = find(operation.c8y_SoftwareList, { name: deviceSoftware.name });\n      if (\n        (operationSoftware && operationSoftware.version) !==\n        (deviceSoftware && deviceSoftware.version)\n      ) {\n        changes.push({\n          ...deviceSoftware,\n          action: 'delete'\n        } as DeviceSoftwareChange);\n      }\n    });\n    forEach(operation.c8y_SoftwareList, operationSoftware => {\n      const deviceSoftware = find(device.c8y_SoftwareList, { name: operationSoftware.name });\n      if (\n        (operationSoftware && operationSoftware.version) !==\n        (deviceSoftware && deviceSoftware.version)\n      ) {\n        changes.push({\n          ...operationSoftware,\n          action: 'install'\n        } as DeviceSoftwareChange);\n      }\n    });\n    return changes;\n  }\n\n  private getDeviceSoftwareChangesFromSoftwareOperation(\n    operation: IOperation,\n    device: IManagedObject\n  ): DeviceSoftwareChange[] {\n    const changes: DeviceSoftwareChange[] = [];\n    forEach(device.c8y_Software, (deviceSoftwareVersion, deviceSoftwareName) => {\n      if (operation.c8y_Software[deviceSoftwareName] !== deviceSoftwareVersion) {\n        changes.push({\n          name: deviceSoftwareName,\n          version: deviceSoftwareVersion,\n          action: 'delete'\n        } as DeviceSoftwareChange);\n      }\n    });\n    forEach(operation.c8y_Software, (operationSoftwareVersion, operationSoftwareName) => {\n      const deviceSoftwareVersion =\n        device.c8y_Software && device.c8y_Software[operationSoftwareName];\n      if (deviceSoftwareVersion !== operationSoftwareVersion) {\n        changes.push({\n          name: operationSoftwareName,\n          version: operationSoftwareVersion,\n          action: 'install'\n        } as DeviceSoftwareChange);\n      }\n    });\n    return changes;\n  }\n}\n","import { Component } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { ConfigurationSnapshot, RepositoryType } from '../repository.model';\nimport { AlertService, gettext } from '@c8y/ngx-components';\nimport { RepositoryService } from '../repository.service';\n\n@Component({\n  selector: 'c8y-save-config-to-configuration-repository',\n  templateUrl: 'save-to-repository.component.html'\n})\nexport class SaveToRepositoryComponent {\n  configSnapshot: ConfigurationSnapshot;\n  result: Promise<any> = new Promise((resolve, reject) => {\n    this._save = resolve;\n    this._cancel = reject;\n  });\n  private _save;\n  private _cancel;\n\n  constructor(\n    private modal: BsModalRef,\n    private alertService: AlertService,\n    private repositoryService: RepositoryService\n  ) {}\n\n  async save() {\n    {\n      try {\n        const configSnapshotData = {\n          selected: {\n            configurationType: this.configSnapshot.configurationType\n          },\n          version: this.configSnapshot.name,\n          deviceType: this.configSnapshot.deviceType,\n          description: this.configSnapshot.description,\n          binary: {\n            file: new File([this.configSnapshot.binary], this.configSnapshot.name)\n          }\n        };\n        await this.repositoryService.save(configSnapshotData, RepositoryType.CONFIGURATION);\n        this.alertService.success(gettext('Configuration saved.'));\n        this._save();\n      } catch (ex) {\n        this.alertService.addServerFailure(ex);\n      }\n    }\n  }\n\n  close() {\n    this._cancel();\n    this.modal.hide();\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { ConfigurationSnapshot, DeviceConfigurationOperation } from '../repository.model';\nimport {\n  IManagedObject,\n  IOperation,\n  OperationService,\n  OperationStatus,\n  UserService\n} from '@c8y/client';\nimport { DeviceConfigurationService } from './device-configuration.service';\nimport { Subscription } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { saveAs } from 'file-saver';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { SaveToRepositoryComponent } from './save-to-repository.component';\nimport { cloneDeep } from 'lodash-es';\nimport { AlertService, AppStateService, OperationRealtimeService } from '@c8y/ngx-components';\nimport { RepositoryService } from '../repository.service';\n\n@Component({\n  selector: 'c8y-device-configuration-preview',\n  templateUrl: './configuration-preview.component.html'\n})\nexport class ConfigurationPreviewComponent implements OnInit, OnDestroy {\n  @Input() device: IManagedObject;\n  @Input() set configurationType(type: string) {\n    this._configurationType = type;\n    this.setOperation(type);\n  }\n  get configurationType(): string {\n    return this._configurationType;\n  }\n  @Input() configSnapshot: ConfigurationSnapshot;\n  @Input() canSaveSnapshot: boolean;\n  @Input() actionButtonText: string;\n  @Input() actionButtonIcon: string;\n  @Input() isLegacy: boolean = false;\n  @Input() operationToTrigger:\n    | DeviceConfigurationOperation.UPLOAD_CONFIG\n    | DeviceConfigurationOperation.DOWNLOAD_CONFIG;\n\n  operation: IOperation;\n  canCallAction = true;\n  deviceConfigurationOperation = DeviceConfigurationOperation;\n  private _configurationType: string;\n  private operationsSubscription: Subscription;\n\n  constructor(\n    private deviceConfigurationService: DeviceConfigurationService,\n    private operationRealtime: OperationRealtimeService,\n    private bsModal: BsModalService,\n    private user: UserService,\n    private appState: AppStateService,\n    private repositoryService: RepositoryService,\n    private operationService: OperationService,\n    private alertService: AlertService\n  ) {}\n\n  async ngOnInit() {\n    this.setCanCallAction();\n    this.setOperation(this._configurationType);\n    this.operationsSubscription = this.operationRealtime\n      .onAll$(this.device.id)\n      .pipe(map(({ data }) => data as IOperation))\n      .subscribe(operation => {\n        this.updatePreview(operation);\n      });\n  }\n\n  async setOperation(configType): Promise<void> {\n    const operationList = await this.repositoryService.getConfigFileOperationList(\n      this.device.id,\n      this.operationToTrigger\n    );\n\n    const operation = this.isLegacy\n      ? operationList.find(op => op[this.operationToTrigger] && !op[this.operationToTrigger].type)\n      : operationList.find(op => op[this.operationToTrigger].type === configType);\n\n    this.operation =\n      operation && operation.status !== OperationStatus.SUCCESSFUL ? operation : undefined;\n  }\n\n  setCanCallAction(): void {\n    this.canCallAction = this.deviceConfigurationService.hasAnySupportedOperation(\n      this.device,\n      this.operationToTrigger\n    );\n  }\n\n  async createDeviceOperation() {\n    let operationCfg;\n    if (this.operationToTrigger === DeviceConfigurationOperation.DOWNLOAD_CONFIG) {\n      operationCfg = this.repositoryService.getDownloadConfigurationFileOperation(\n        this.device,\n        this._configurationType,\n        this.configSnapshot,\n        this.isLegacy\n      );\n    }\n    if (this.operationToTrigger === DeviceConfigurationOperation.UPLOAD_CONFIG) {\n      operationCfg = this.repositoryService.getUploadConfigurationFileOperation(\n        this.device,\n        this._configurationType,\n        this.isLegacy\n      );\n    }\n    try {\n      this.operation = (await this.operationService.create(operationCfg)).data;\n    } catch (ex) {\n      this.alertService.addServerFailure(ex);\n    }\n  }\n\n  showOperation(): boolean {\n    if (this.operationToTrigger === DeviceConfigurationOperation.DOWNLOAD_CONFIG) {\n      return !!this.operation;\n    }\n    return (\n      this.operation &&\n      [OperationStatus.PENDING, OperationStatus.EXECUTING, OperationStatus.FAILED].includes(\n        this.operation.status\n      )\n    );\n  }\n\n  showBinary(): boolean {\n    if (this.operationToTrigger === DeviceConfigurationOperation.DOWNLOAD_CONFIG) {\n      return true;\n    }\n    return !this.showOperation();\n  }\n\n  isCreateOperationDisabled(): boolean {\n    return (\n      this.operation &&\n      [OperationStatus.PENDING, OperationStatus.EXECUTING].includes(this.operation.status)\n    );\n  }\n\n  updatePreview(operation: IOperation) {\n    if (\n      operation &&\n      operation[this.operationToTrigger] &&\n      (this.isLegacy ||\n        (operation[this.operationToTrigger].type &&\n          operation[this.operationToTrigger].type === this.configurationType))\n    ) {\n      this.operation = operation;\n      this.updateSnapshotsOnConfigUpload(operation);\n    }\n  }\n\n  download() {\n    const blob = new Blob([this.configSnapshot.binary], { type: this.configSnapshot.binaryType });\n    let fileName = this.configSnapshot.name;\n    switch (this.configSnapshot.binaryType) {\n      case 'text/csv':\n      case 'application/csv':\n        fileName = fileName.concat('.csv');\n        break;\n      case 'text/yaml':\n      case 'application/x-yaml':\n        fileName = fileName.concat('.yaml');\n        break;\n      case 'application/json':\n        fileName = fileName.concat('.json');\n        break;\n    }\n    saveAs(blob, fileName);\n  }\n\n  async saveToRepository() {\n    const initialState = {\n      configSnapshot: cloneDeep(this.configSnapshot)\n    };\n    const modal = this.bsModal.show(SaveToRepositoryComponent, {\n      class: 'modal-sm',\n      initialState,\n      ignoreBackdropClick: true\n    }).content as SaveToRepositoryComponent;\n    try {\n      await modal.result;\n      this.deviceConfigurationService.updateConfigurations(true);\n      modal.close();\n    } catch (ex) {\n      // do nothing\n    }\n  }\n\n  hasPermission(): boolean {\n    return this.user.hasAnyRole(this.appState.currentUser.value, [\n      'ROLE_INVENTORY_ADMIN',\n      'ROLE_INVENTORY_CREATE'\n    ]);\n  }\n\n  ngOnDestroy() {\n    if (this.operationsSubscription) {\n      this.operationsSubscription.unsubscribe();\n    }\n  }\n\n  private async updateSnapshotsOnConfigUpload(operation) {\n    if (\n      operation[DeviceConfigurationOperation.UPLOAD_CONFIG] &&\n      operation.status === OperationStatus.SUCCESSFUL\n    ) {\n      this.deviceConfigurationService.updateConfigurations();\n    }\n  }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { DeviceConfigurationListEmptyState, SupportedConfigurationItem } from '../repository.model';\n\n@Component({\n  selector: 'c8y-device-configuration-list',\n  templateUrl: './device-configuration-list.component.html'\n})\nexport class DeviceConfigurationListComponent {\n  @Input() items: SupportedConfigurationItem[];\n  @Input() itemIcon: string;\n  @Input() emptyState: DeviceConfigurationListEmptyState;\n  @Input() isFilterEnabled: boolean;\n  @Output() configSelected = new EventEmitter<string>();\n  selectedConfig;\n  filterTerm: string = '';\n\n  showConfigurationTypePreview(config): void {\n    this.selectedConfig = config;\n    this.configSelected.emit(config);\n  }\n\n  updatePipe(filterTerm: string) {\n    this.filterTerm = filterTerm;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { IManagedObject, InventoryService, IOperation, OperationStatus } from '@c8y/client';\nimport { AlertService, gettext } from '@c8y/ngx-components';\nimport { DeviceConfigurationOperation } from '../repository.model';\nimport { RepositoryService } from '../repository.service';\nimport { DeviceConfigurationService } from './device-configuration.service';\n\n@Component({\n  selector: 'c8y-text-based-configuration',\n  templateUrl: './text-based-configuration.component.html'\n})\nexport class TextBasedConfigurationComponent implements OnInit {\n  device: IManagedObject;\n  latestOperation: IOperation;\n  showTextBasedConfigReload: boolean;\n  showTextBasedConfigSave: boolean;\n  reloadingConfig = false;\n  config: string;\n\n  constructor(\n    private route: ActivatedRoute,\n    private alertService: AlertService,\n    private repositoryService: RepositoryService,\n    private deviceConfigurationService: DeviceConfigurationService,\n    private inventoryService: InventoryService\n  ) {\n  }\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  async load() {\n    this.device = this.route.snapshot.parent.data.contextData;\n    await this.loadDevice();\n    await this.loadOperation();\n    this.showTextBasedConfigReload = this.deviceConfigurationService.hasAnySupportedOperation(\n      this.device,\n      [DeviceConfigurationOperation.SEND_CONFIG]\n    );\n    this.showTextBasedConfigSave = this.deviceConfigurationService.hasAnySupportedOperation(\n      this.device,\n      [DeviceConfigurationOperation.CONFIG]\n    );\n    if (this.device.c8y_Configuration && this.device.c8y_Configuration.config) {\n      this.config = this.device.c8y_Configuration.config;\n    }\n  }\n\n  async loadOperation() {\n    const operation = await this.repositoryService.getLastConfigUpdateOperation(this.device.id);\n    if (operation !== null) {\n      this.reloadingConfig =\n        !!operation.c8y_SendConfiguration &&\n        (operation.status === OperationStatus.PENDING ||\n          operation.status === OperationStatus.EXECUTING);\n      this.repositoryService.observeOperation(operation).subscribe((operationUpdate) => {\n        this.latestOperation = operationUpdate;\n      });\n    }\n  }\n\n  get savingConfig() {\n    return this.latestOperation\n      ? !!this.latestOperation.c8y_Configuration &&\n          (this.latestOperation.status === OperationStatus.PENDING ||\n            this.latestOperation.status === OperationStatus.EXECUTING)\n      : false;\n  }\n\n  async reloadConfiguration() {\n    this.reloadingConfig = true;\n    const operationCfg = await this.repositoryService.createTextBasedConfigurationReloadOperation(\n      this.device\n    );\n    try {\n      this.repositoryService\n        .createObservedOperation(operationCfg)\n        .subscribe(\n          operationUpdate => this.onOperationReloadSuccess(operationUpdate),\n          operationUpdate => this.onOperationReloadError(operationUpdate),\n          () => this.onOperationReloadComplete()\n        );\n    } catch (ex) {\n      this.alertService.addServerFailure(ex);\n    }\n  }\n\n  async updateConfiguration(config) {\n    const operationCfg = await this.repositoryService.createTextBasedConfigurationUpdateOperation(\n      this.device,\n      config\n    );\n    try {\n      this.repositoryService\n        .createObservedOperation(operationCfg)\n        .subscribe(\n          operationUpdate => this.onOperationUpdateSuccess(operationUpdate),\n          operationUpdate => this.onOperationUpdateError(operationUpdate),\n          () => this.onOperationUpdateComplete()\n        );\n    } catch (ex) {\n      this.alertService.addServerFailure(ex);\n    }\n  }\n\n  private onOperationReloadSuccess(operationUpdate) {\n    this.latestOperation = operationUpdate;\n    if (operationUpdate.status === OperationStatus.PENDING) {\n      this.alertService.success(gettext('Configuration will be reloaded.'));\n    }\n  }\n\n  private onOperationReloadError(operationUpdate) {\n    this.latestOperation = operationUpdate;\n    this.reloadingConfig = false;\n  }\n\n  private async onOperationReloadComplete() {\n    await this.loadDevice();\n    this.config = this.device.c8y_Configuration.config;\n    this.reloadingConfig = false;\n  }\n\n  private onOperationUpdateSuccess(operationUpdate) {\n    this.latestOperation = operationUpdate;\n    if (operationUpdate.status === OperationStatus.PENDING) {\n      this.alertService.success(gettext('Configuration will be updated.'));\n    }\n  }\n\n  private onOperationUpdateError(operationUpdate) {\n    this.latestOperation = operationUpdate;\n  }\n\n  private onOperationUpdateComplete() {\n    this.device.c8y_Configuration.config = this.config;\n  }\n\n  private async loadDevice() {\n    this.device = (await this.inventoryService.detail(this.device.id, {\n      withChildren: false\n    })).data;\n  }\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { IManagedObject, Realtime } from '@c8y/client';\nimport { DeviceConfigurationService } from './device-configuration.service';\nimport {\n  DeviceConfigurationListEmptyState,\n  ConfigurationSnapshot,\n  SupportedConfigurationItem,\n  DeviceConfigurationOperation\n} from '../repository.model';\nimport { gettext } from '@c8y/ngx-components';\nimport { has } from 'lodash-es';\nimport { RepositoryService } from '../repository.service';\nimport { TextBasedConfigurationComponent } from './text-based-configuration.component';\n\n@Component({\n  selector: 'c8y-device-configuration',\n  templateUrl: './device-configuration.component.html'\n})\nexport class DeviceConfigurationComponent implements OnInit {\n  supportedConfigurations: SupportedConfigurationItem[] = [];\n  showBinaryBasedConfig = false;\n  configurationType: string;\n  configSnapshot: Partial<ConfigurationSnapshot> = {};\n  repositorySnapshots: IManagedObject[];\n  repositorySnapshot: ConfigurationSnapshot;\n  repositorySnapshotsEmptyState: DeviceConfigurationListEmptyState;\n  device: IManagedObject;\n  isLegacy: boolean;\n  showTextBasedConfig: boolean;\n  reloading: boolean = false;\n\n  @ViewChild(TextBasedConfigurationComponent) textBasedConfigurationComponent: TextBasedConfigurationComponent;\n\n  constructor(\n    private route: ActivatedRoute,\n    private deviceConfigurationService: DeviceConfigurationService,\n    private realtime: Realtime,\n    private repositoryService: RepositoryService\n  ) {\n    this.deviceConfigurationService.configurationsUpdated.subscribe(repositorySnapsOnly => {\n      this.updateSnapshots(repositorySnapsOnly);\n    });\n  }\n\n  ngOnInit() {\n    this.device = this.route.snapshot.parent.data.contextData;\n    if (this.device.c8y_SupportedConfigurations) {\n      this.supportedConfigurations = this.device.c8y_SupportedConfigurations.map(item => ({\n        name: item\n      }));\n    }\n\n    if (\n      this.deviceConfigurationService.hasAnySupportedOperation(this.device, [\n        DeviceConfigurationOperation.DOWNLOAD_CONFIG,\n        DeviceConfigurationOperation.UPLOAD_CONFIG\n      ])\n    ) {\n      this.supportedConfigurations.push({\n        name: gettext('Legacy configuration snapshot'),\n        isLegacy: true\n      });\n    }\n    if (this.supportedConfigurations.length > 0) {\n      this.showBinaryBasedConfig = true;\n    }\n\n    this.repositorySnapshotsEmptyState = {\n      icon: 'gears',\n      title: gettext('No configurations available.'),\n      text: gettext('Add configuration to configuration repository')\n    };\n\n    this.showTextBasedConfig =\n      this.deviceConfigurationService.hasAnySupportedOperation(this.device, [\n        DeviceConfigurationOperation.CONFIG,\n        DeviceConfigurationOperation.SEND_CONFIG\n      ]) || has(this.device, 'c8y_Configuration');\n  }\n\n  async onConfigTypeSelected(config) {\n    this.configurationType = config.name;\n    this.isLegacy = config.isLegacy;\n    this.updateSnapshots();\n  }\n\n  async onRepositoryConfigSelected(config) {\n    this.repositorySnapshot = {\n      id: config.id,\n      time: config.creationTime,\n      name: config.name,\n      binaryUrl: config.url,\n      deviceType: config.deviceType,\n      configurationType: config.configurationType\n    };\n    if (config.url) {\n      try {\n        const binary = await this.repositoryService.getBinaryFile(config.url, {\n          allowExternal: false\n        });\n        if (binary) {\n          this.repositorySnapshot.binary = await (binary as any).text();\n        }\n      } catch (ex) {\n        // do nothing\n      }\n    }\n  }\n\n  async updateSnapshots(repositorySnapsOnly?: boolean) {\n    this.reloading = true;\n    this.repositorySnapshot = undefined;\n    this.repositorySnapshots = await this.repositoryService.getSnapshotsFromRepository(\n      this.device,\n      this.configurationType\n    );\n    if (!repositorySnapsOnly) {\n      this.configSnapshot = this.isLegacy\n        ? await this.repositoryService.getLegacyConfigSnapshot(this.device)\n        : await this.repositoryService.getConfigSnapshot(this.device, this.configurationType);\n    }\n    if ( this.showTextBasedConfig ) {\n      await this.textBasedConfigurationComponent.load();\n    }\n    this.reloading = false;\n  }\n}\n","import { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { has } from 'lodash-es';\nimport { DeviceConfigurationService } from './device-configuration.service';\nimport { DeviceConfigurationOperation } from '../repository.model';\n\n@Injectable()\nexport class DeviceConfigurationGuard implements CanActivate {\n  constructor(private deviceConfigurationService: DeviceConfigurationService) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    const contextData = route.data.contextData || route.parent.data.contextData;\n    if (!contextData) {\n      return false;\n    }\n    return (\n      (contextData.c8y_SupportedConfigurations &&\n        contextData.c8y_SupportedConfigurations.length > 0) ||\n      this.deviceConfigurationService.hasAnySupportedOperation(contextData, [\n        DeviceConfigurationOperation.DOWNLOAD_CONFIG,\n        DeviceConfigurationOperation.UPLOAD_CONFIG,\n        DeviceConfigurationOperation.CONFIG,\n        DeviceConfigurationOperation.SEND_CONFIG\n      ]) ||\n      has(contextData, 'c8y_Configuration')\n    );\n  }\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'c8y-source-code-preview',\n  templateUrl: './source-code-preview.component.html'\n})\nexport class SourceCodePreviewComponent {\n  @Input() isDisabled: boolean;\n  @Input() text: string;\n}\n","import { Component, ViewChild } from '@angular/core';\nimport { IManagedObject } from '@c8y/client';\nimport { AlertService, gettext } from '@c8y/ngx-components';\nimport { uniqBy, isUndefined } from 'lodash-es';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { pipe } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ModalModel, RepositoryType } from '../repository.model';\nimport { RepositoryService } from '../repository.service';\nimport { PickedFiles } from '@c8y/ngx-components';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'c8y-configuration-detail',\n  templateUrl: './configuration-detail.component.html'\n})\nexport class ConfigurationDetailComponent implements ModalModel {\n  @ViewChild('configurationForm', { static: true }) configurationForm: NgForm;\n  selected: { id?: string; name?: string; [key: string]: any };\n  version: string;\n  description: string;\n  binary: { file?: File; url?: string } = {\n    file: undefined,\n    url: undefined\n  };\n  deviceType: string;\n\n  pattern: string = '';\n  filterPipe;\n  configs;\n  mo: Partial<IManagedObject> = {};\n  saving = false;\n  uploadChoice: 'uploadBinary' | 'uploadUrl' = 'uploadBinary';\n  existingBinary: File;\n  submitButtonTitle: string;\n  textForConfigurationUrlPopover: string = gettext(`Path for binaries can vary depending on device agent implementation, e.g.:\n    /configuration/binaries/configuration1.bin\n    https://configuration/binary/123\n    ftp://configuration/binary/123.tar.gz\n  `);\n\n  result: Promise<void> = new Promise((resolve, reject) => {\n    this._save = resolve;\n    this._cancel = reject;\n  });\n\n  private _save;\n  private _cancel;\n\n  constructor(\n    private repositoryService: RepositoryService,\n    private bsModalRef: BsModalRef,\n    private alert: AlertService\n  ) {}\n\n  async ngOnInit() {\n    this.configs = await this.repositoryService.listRepositoryEntries(RepositoryType.CONFIGURATION);\n    if (this.selected) {\n      this.uploadChoice = this.binary.file ? 'uploadBinary' : 'uploadUrl';\n      this.existingBinary = this.binary.file;\n    }\n    this.setPipe('');\n    this.submitButtonTitle = this.mo.id\n      ? gettext('Update configuration')\n      : gettext('Add configuration');\n  }\n\n  cancel() {\n    this.bsModalRef.hide();\n    this._cancel();\n  }\n\n  setPipe(filterStr: string) {\n    this.pattern = filterStr;\n    this.filterPipe = pipe(\n      map((data: []) => uniqBy(data, 'configurationType')),\n      map((data: []) => {\n        return data.filter(\n          (mo: any) =>\n            mo.configurationType &&\n            mo.configurationType.toLowerCase().indexOf(filterStr.toLowerCase()) > -1\n        );\n      })\n    );\n  }\n\n  onFile(dropped: PickedFiles) {\n    this.configurationForm.form.markAsDirty();\n    if (!isUndefined(dropped.url)) {\n      this.binary = {\n        url: dropped.url\n      };\n      return;\n    } else if (!isUndefined(dropped.droppedFiles)) {\n      this.binary = {\n        file: dropped.droppedFiles[0].file\n      };\n      return;\n    } else {\n      this.binary = {\n        file: undefined,\n        url: undefined\n      };\n    }\n  }\n\n  async save() {\n    try {\n      this.saving = true;\n      const { selected, version, description, binary, deviceType } = this;\n      if (this.existingBinary === this.binary.file) {\n        binary.file = undefined;\n      }\n      await this.repositoryService.save(\n        { selected, version, description, binary, deviceType },\n        RepositoryType.CONFIGURATION,\n        this.mo\n      );\n      this.alert.success(\n        this.mo.id ? gettext('Configuration updated.') : gettext('Configuration created.')\n      );\n      this.bsModalRef.hide();\n      this._save();\n    } catch (ex) {\n      this.alert.addServerFailure(ex);\n      this._cancel();\n    } finally {\n      this.saving = false;\n    }\n  }\n}\n","import { Component, OnInit, Pipe, ViewChild } from '@angular/core';\nimport {IManagedObject, InventoryBinaryService, InventoryService, IResultList} from '@c8y/client';\nimport {\n  AlertService,\n  FilterInputComponent,\n  gettext, memoize,\n  ModalService,\n  Status\n} from '@c8y/ngx-components';\nimport { TranslateService } from '@ngx-translate/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { Observable, of, pipe } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { RepositoryType } from '../repository.model';\nimport { RepositoryService } from '../repository.service';\nimport { ConfigurationDetailComponent } from './configuration-detail.component';\nimport { property } from 'lodash-es';\nimport { saveAs } from 'file-saver';\n\n@Component({\n  selector: 'c8y-configuration-list',\n  templateUrl: './configuration-list.component.html'\n})\nexport class ConfigurationListComponent implements OnInit {\n  @ViewChild(FilterInputComponent, { static: false }) filter: FilterInputComponent;\n  configurations$: Observable<IResultList<IManagedObject>>;\n  filterPipe: Pipe;\n  filterTerm = '';\n  reloading: boolean = false;\n  data;\n  private readonly DELETED_SUCCESS_MSG = gettext('Configuration deleted.');\n\n  constructor(\n    private alert: AlertService,\n    private repositoryService: RepositoryService,\n    private bsModalService: BsModalService,\n    private modalService: ModalService,\n    private translateService: TranslateService,\n    private inventoryBinaryService: InventoryBinaryService,\n    private inventoryService: InventoryService\n  ) {}\n\n  ngOnInit() {\n    this.loadConfigurations();\n  }\n\n  async loadConfigurations() {\n    this.reloading = true;\n    this.configurations$ = of(\n      await this.repositoryService.listRepositoryEntries(RepositoryType.CONFIGURATION)\n    );\n    this.reloading = false;\n    this.reset();\n  }\n\n  async add() {\n    try {\n      await (this.bsModalService.show(ConfigurationDetailComponent, {\n        class: 'modal-sm',\n        ignoreBackdropClick: true\n      }).content as ConfigurationDetailComponent).result;\n      await this.loadConfigurations();\n    } catch (ex) {\n      // intended empty\n    }\n  }\n\n  async edit(configuration: IManagedObject) {\n    const fileBinary: File = await this.repositoryService.getBinaryFile(configuration.url, {\n      allowExternal: false\n    });\n    try {\n      const modal = this.bsModalService.show(ConfigurationDetailComponent, {\n        class: 'modal-sm',\n        ignoreBackdropClick: true,\n        initialState: {\n          selected: configuration,\n          version: configuration.name,\n          deviceType: configuration.deviceType,\n          description: configuration.description,\n          binary: { file: fileBinary, url: configuration.url }\n        }\n      }).content as ConfigurationDetailComponent;\n      modal.mo = configuration;\n      await modal.result;\n      await this.loadConfigurations();\n    } catch (ex) {\n      // intended empty\n    }\n  }\n\n  isBinaryFile(configuration: IManagedObject) {\n    return configuration.url ? !!this.inventoryBinaryService.getIdFromUrl(configuration.url) : false;\n  }\n\n  @memoize(property('id'))\n  getBinaryName(configuration: IManagedObject) {\n    return this.repositoryService.getBinaryName$(configuration.url);\n  }\n\n  async download(configuration: IManagedObject) {\n    const fileBinary: File = await this.repositoryService.getBinaryFile(configuration.url, {\n      allowExternal: false\n    });\n    saveAs(fileBinary);\n  }\n\n  async delete(configuration: IManagedObject) {\n    try {\n      const title = gettext('Delete configuration snapshot');\n      const confirmationText = gettext(\n        'You are about to delete the configuration snapshot {{ name }}.'\n      );\n      const hint = gettext('This operation is irreversible.');\n      const proceed = gettext('Do you want to proceed?');\n      const body = [\n        this.translateService.instant(confirmationText, {\n          name: configuration.name\n        }),\n        this.translateService.instant(hint),\n        this.translateService.instant(proceed)\n      ].join(' ');\n      const labels = {\n        ok: gettext('Delete')\n      };\n      await this.modalService.confirm(title, body, Status.DANGER, labels);\n      await this.repositoryService.delete(configuration);\n      this.alert.success(this.DELETED_SUCCESS_MSG);\n      await this.loadConfigurations();\n    } catch (ex) {\n      if (ex) {\n        this.alert.addServerFailure(ex);\n      }\n    }\n  }\n\n  setPipe(filterTerm: string) {\n    this.filterTerm = filterTerm;\n    this.filterPipe = pipe(\n      map((data: []) => {\n        this.data =\n          filterTerm.trim().length === 0\n            ? data\n            : data.filter(\n            (mo: IManagedObject) =>\n              this.filterContainString(mo.name, filterTerm) ||\n              this.filterContainString(mo.configurationType, filterTerm) ||\n              this.filterContainString(mo.deviceType, filterTerm) ||\n              this.filterContainString(mo.description, filterTerm)\n            );\n\n        return this.data;\n      })\n    );\n  }\n\n  shouldShowEmptyState() {\n    return !(this.data && this.data.length > 0);\n  }\n\n  reset() {\n    this.filter.filterTerm = '';\n    this.setPipe('');\n  }\n\n  private filterContainString(name: string, filterTerm: string) {\n    const term = filterTerm.toLowerCase().trim();\n    return name && name.toLowerCase().indexOf(term) > -1;\n  }\n}\n","export enum LinkRenderType {\n    DOWNLOAD,\n    LINK,\n    TEXTONLY\n}\n","import { AlertService } from '@c8y/ngx-components';\nimport { Component, Input } from '@angular/core';\nimport { RepositoryService } from './../repository.service';\nimport { memoize } from '@c8y/ngx-components';\nimport { saveAs } from 'file-saver';\nimport { InventoryBinaryService } from '@c8y/client';\nimport { LinkRenderType } from './link-render-type.enum';\n\n@Component({\n  selector: 'c8y-file-download',\n  templateUrl: './file-download.component.html'\n})\nexport class FileDownloadComponent {\n  @Input() url: string;\n  linkRenderType = LinkRenderType;\n  isDownloading = false;\n  constructor(\n    private repositoryService: RepositoryService,\n    private inventoryBinaryService: InventoryBinaryService,\n    private alertService: AlertService\n  ) {}\n\n  @memoize()\n  getBinaryName$(binaryUrl) {\n    return this.repositoryService.getBinaryName$(binaryUrl);\n  }\n\n  @memoize()\n  determineBehavior(): LinkRenderType {\n    let result: LinkRenderType;\n    if (this.inventoryBinaryService.getIdFromUrl(this.url)) {\n      result = LinkRenderType.DOWNLOAD;\n    } else if (this.url.match(/\\/\\//g)) {\n      result = LinkRenderType.LINK;\n    } else {\n      result = LinkRenderType.TEXTONLY;\n    }\n    return result;\n  }\n\n  async downloadFile() {\n    try {\n      this.isDownloading = true;\n      const binary: File = await this.repositoryService.getBinaryFile(this.url, {\n        allowExternal: false\n      });\n      this.isDownloading = false;\n      saveAs(binary);\n    } catch (ex) {\n      this.isDownloading = false;\n      if (ex) {\n        this.alertService.addServerFailure(ex);\n      }\n    }\n  }\n}\n","import { Component, EventEmitter } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  gettext,\n  ISelectModalObject,\n  ISelectModalOption,\n  ModalLabels,\n  ModalSelectionMode\n} from '@c8y/ngx-components';\nimport { get } from 'lodash-es';\nimport { IManagedObject, QueriesUtil } from '@c8y/client';\nimport { Subject, Observable, from, BehaviorSubject } from 'rxjs';\nimport { switchMap, map, mergeMap, shareReplay, tap } from 'rxjs/operators';\nimport { RepositoryService } from '../repository.service';\nimport {\n  RepositoryType,\n  RepositoryCategory,\n  RepositoryBinary,\n  SelectedRepositoryBinary\n} from '../repository.model';\n\n// MODAL STRUCTURE\n// - selectModalObject (repository entry (repositoryCategory) -> type c8y_Firmware/c8y_Software)\n//   -- ISelectModalOption (repository binary entry (repositoryBinary) => type c8y_FirmwareBinary/c8y_SoftwareBinary)\n//   -- ISelectModalOption...\n// - selectModalObject...\n\n/**\n * RepositorySelectModalComponent displays repository entries options and allows to select them.\n *\n * @example\n * ```\n * import { take } from 'rxjs/operators';\n * import { RepositorySelectModalComponent, ModalSelectionMode, RepositoryType } from '@c8y/ngx-components/repository';\n *\n * const initialState = {\n *   repositoryType: RepositoryType.FIRMWARE,\n *   title: gettext('Install firmware'),\n *   subTitle: gettext('Available firmwares matching the device type'),\n *   icon: 'c8y-firmware',\n *   mode: ModalSelectionMode.SINGLE,\n *   labels: { ok: gettext('Install') },\n *   disableSelected: false\n * };\n *\n * const modal = this.bsModal.show(RepositorySelectModalComponent, {\n *   ignoreBackdropClick: true,\n *   initialState\n * });\n *\n * modal.content.load.next();\n * modal.content.resultEmitter.pipe(take(1)).subscribe((firmware) => {\n *   ...\n * })\n * ```\n */\n\n@Component({\n  selector: 'c8y-repository-select-modal',\n  templateUrl: './repository-select-modal.component.html'\n})\nexport class RepositorySelectModalComponent {\n  /**\n   * Optional\n   * Allows to provide custom data.\n   * @example\n   * ```\n   * import { from } from 'rxjs';\n   *\n   * const repositoryEntry = { name: 'ExampleEntry', type: 'c8y_Firmware' };\n   * const versions = [{ c8y_Firmware: { version: '1.0.0', url: 'http://example.com' } }];\n   *\n   * const initialState = {repositoryEntriesWithVersions$: from({ ...repositoryEntry, versions })};\n   * ```\n   */\n  repositoryEntriesWithVersions$: Observable<IManagedObject[]> = undefined;\n  /**\n   * Repository entry type.\n   */\n  repositoryType: RepositoryType.FIRMWARE | RepositoryType.SOFTWARE;\n  /**\n   * Optional\n   * Allows to use custom badges templates.\n   * @example\n   * ```\n   * import { gettext } from '@c8y/ngx-components';\n   *\n   * const badgeTemplates = { '=1': gettext('{{count}} version'), other: gettext('{{count}} versions') };\n   * const initialState = { badgeTemplates };\n   * ```\n   */\n  badgeTemplates = { '=1': gettext('{{count}} version'), other: gettext('{{count}} versions') };\n  /**\n   * Optional\n   * Allows to provide custom modal title.\n   */\n  title: string = gettext('Select repository entry');\n  /**\n   * Optional\n   * Allows to provide custom modal subtitle.\n   */\n  subTitle: string;\n  /**\n   * Loads the content of the modal.\n   * Must be invoked by the modal's caller.\n   */\n  load: Subject<void> = new Subject();\n  /**\n   * Optional\n   * Emits a search string currently entered in the filter input.\n   * Use it to filter the items if you use custom repositoryEntriesWithVersions$.\n   */\n  searchTerm: BehaviorSubject<string> = new BehaviorSubject('');\n  /**\n   * Optional\n   * Allows to provide device type query to restrict search criteria.\n   * Only takes effect when repositoryEntriesWithVersions$ is not provided,\n   * otherwise modal's caller have to provide already filtered data in the repositoryEntriesWithVersions$.\n   */\n  deviceTypeQuery: any = {};\n  /**\n   * Optional\n   * Allows to provide query to restrict search criteria.\n   * Only takes effect when repositoryEntriesWithVersions$ is not provided,\n   * otherwise modal's caller have to provide already filtered data in the repositoryEntriesWithVersions$.\n   */\n  searchQuery: any = {};\n  /**\n   * Optional\n   * Allows to provide custom labels for the buttons responsible for confirm/dismiss modal actions.\n   */\n  labels: ModalLabels = { ok: gettext('Save') };\n  /**\n   * Optional\n   * Allows to hide the filter input field.\n   * By default, the filter input field is displayed.\n   */\n  showFilter: boolean = true;\n  /**\n   * Optional\n   * Allows to show a warning that the search criteria should be narrowed down.\n   * By default, this warning is hidden.\n   */\n  areMoreEntries: boolean = false;\n  /**\n   * Optional\n   * Allows to pass the array of items. Each item from this array will be marked as selected in the modal.\n   */\n  selected: SelectedRepositoryBinary[];\n  /**\n   * Emits the list of selected options.\n   */\n  resultEmitter: EventEmitter<SelectedRepositoryBinary[]> = new EventEmitter<\n    SelectedRepositoryBinary[]\n  >();\n  /**\n   * Optional\n   * Allows to change selection mode.\n   * Supported options:\n   *   * single: only single option can be selected.\n   *   * multiple: multiple options can be selected.\n   */\n  mode: ModalSelectionMode = ModalSelectionMode.SINGLE;\n  /**\n   * Optional\n   * Allows to use custom icon in the modal header.\n   */\n  icon: string;\n  /**\n   * Allows to block selection of the other versions from the same repository entry.\n   */\n  disableSelected: boolean = true;\n  modalEntries: Observable<ISelectModalObject[]> = this.load.pipe(\n    switchMap(() => this.repositoryEntriesWithVersions$),\n    mergeMap(mos => this.aggregate(mos)),\n    tap(items => {\n      this.areMoreEntries = items.length >= this.PAGE_SIZE ? true : false;\n    })\n  );\n  private PAGE_SIZE = 100;\n  private queriesUtil: QueriesUtil;\n\n  constructor(\n    private repositoryService: RepositoryService,\n    private translateService: TranslateService\n  ) {\n    this.queriesUtil = new QueriesUtil();\n  }\n\n  ngOnInit() {\n    if (!this.repositoryType) {\n      throw new Error('Repository type must be defined');\n    }\n\n    if (!this.repositoryEntriesWithVersions$) {\n      this.repositoryEntriesWithVersions$ = from(\n        this.repositoryService.listRepositoryEntries(this.repositoryType, {\n          query: this.queriesUtil.addOrFilter(this.deviceTypeQuery, this.searchQuery),\n          params: { pageSize: this.PAGE_SIZE }\n        })\n      ).pipe(\n        map(({ data }) => data),\n        map(mos => this.getAndAssignRepositoryBinaries(mos)),\n        shareReplay(1)\n      );\n    }\n  }\n\n  getAndAssignRepositoryBinaries(mos: IManagedObject[]) {\n    mos.forEach(mo => {\n      mo.versions = this.repositoryService.listAllVersions(mo);\n    });\n    return mos;\n  }\n\n  search(searchTerm: string) {\n    this.searchTerm.next(searchTerm);\n    if (!searchTerm) {\n      this.searchQuery = {};\n    } else {\n      this.searchQuery = { name: `*${searchTerm}*` };\n    }\n    this.load.next();\n  }\n\n  result(selectedItems: SelectedRepositoryBinary[]) {\n    this.resultEmitter.emit(selectedItems);\n  }\n\n  async aggregate(mos: IManagedObject[]): Promise<ISelectModalObject[]> {\n    const repositoryType = this.repositoryType;\n    const selectedItems: SelectedRepositoryBinary[] = this.selected;\n\n    return Promise.all(\n      mos.map(async repositoryEntry => {\n        const options: ISelectModalOption[] = this.getSelectModalOptions(\n          await this.repositoryService.fetchAllItemsFromList(repositoryEntry.versions),\n          selectedItems,\n          repositoryEntry as RepositoryCategory,\n          repositoryType\n        );\n        const selectModalObject = this.getSelectModalObject(\n          repositoryEntry as RepositoryCategory,\n          options\n        );\n\n        return selectModalObject;\n      })\n    );\n  }\n\n  getSelectModalOptions(\n    versions: RepositoryBinary[],\n    selectedItems: SelectedRepositoryBinary[],\n    repositoryEntry: RepositoryCategory,\n    repositoryType: RepositoryType\n  ): ISelectModalOption[] {\n    const selectModalOptions: ISelectModalOption[] = [];\n    versions.forEach(repositoryBinary => {\n      const isSelected: boolean = this.isBinaryRepositorySelected(\n        selectedItems,\n        repositoryEntry,\n        repositoryBinary,\n        repositoryType\n      );\n\n      const { version } = repositoryBinary[`${repositoryType}`];\n      const bodyValue =\n        version || `(${this.translateService.instant(gettext('not specified`version`'))})`;\n      const bodyClass = version ? '' : 'text-muted';\n      selectModalOptions.push({\n        body: [\n          {\n            value: bodyValue,\n            class: bodyClass\n          }\n        ],\n        obj: {\n          id: repositoryBinary.id,\n          name: repositoryEntry.name,\n          version,\n          ...(get(repositoryBinary, 'c8y_Patch.dependency') && {\n            dependency: get(repositoryBinary, 'c8y_Patch.dependency')\n          }),\n          ...(get(repositoryBinary, 'c8y_Patch') && { isPatch: true }),\n          url: repositoryBinary[`${repositoryType}`].url\n        },\n        selected: isSelected\n      });\n    });\n    return selectModalOptions;\n  }\n\n  isBinaryRepositorySelected(\n    selectedItems: SelectedRepositoryBinary[],\n    repositoryEntry: RepositoryCategory,\n    repositoryBinary: RepositoryBinary,\n    repositoryType: RepositoryType\n  ): boolean {\n    const isSelected = selectedItems\n      ? selectedItems.filter(\n          repositoryFragment =>\n            repositoryFragment.name === repositoryEntry.name &&\n            repositoryFragment.version === repositoryBinary[`${repositoryType}`].version\n        ).length > 0\n      : false;\n\n    return isSelected;\n  }\n\n  getSelectModalObject(\n    repositoryEntry: RepositoryCategory,\n    options: ISelectModalOption[]\n  ): ISelectModalObject {\n    const label =\n      options.length === 1\n        ? this.translateService.instant(this.badgeTemplates['=1'], { count: options.length })\n        : this.translateService.instant(this.badgeTemplates.other, { count: options.length });\n\n    const selectModalObject: ISelectModalObject = {\n      groupId: repositoryEntry.id,\n      body: [\n        { value: repositoryEntry.name, class: 'text-truncate' },\n        { value: repositoryEntry.description, class: 'text-truncate text-muted' }\n      ],\n      additionalInformation: { value: label, class: 'label label-info' },\n      options\n    };\n\n    return selectModalObject;\n  }\n}\n","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { assign, get, isEmpty } from 'lodash-es';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BehaviorSubject, Observable, combineLatest, from, of } from 'rxjs';\nimport { distinctUntilChanged, filter, map, shareReplay, switchMap, take } from 'rxjs/operators';\n\nimport { ModalSelectionMode, gettext } from '@c8y/ngx-components';\nimport { IManagedObject, IOperation, InventoryService, OperationStatus } from '@c8y/client';\n\nimport { RepositoryService } from '../repository.service';\nimport { DeviceFirmware, FirmwareBinary, RepositoryType } from '../repository.model';\nimport { RepositorySelectModalComponent } from '../select-modal/repository-select-modal.component';\n\n@Component({\n  selector: 'c8y-firmware-device-tab',\n  templateUrl: 'firmware-device-tab.component.html'\n})\nexport class FirmwareDeviceTabComponent {\n  isEmpty = isEmpty;\n  reloading: boolean = false;\n  device$: BehaviorSubject<IManagedObject> = new BehaviorSubject(\n    this.route.parent.snapshot.data.contextData\n  );\n  deviceFirmwareFragment$: Observable<DeviceFirmware> = this.device$.pipe(\n    map(device => device.c8y_Firmware)\n  );\n  firmwareBinary$: Observable<IManagedObject> = this.deviceFirmwareFragment$.pipe(\n    filter(deviceFirmwareFragment => !isEmpty(deviceFirmwareFragment)),\n    switchMap(deviceFirmwareFragment =>\n      from(\n        this.repository.getRepositoryBinaryMoByVersion(\n          deviceFirmwareFragment,\n          RepositoryType.FIRMWARE\n        )\n      )\n    ),\n    shareReplay(1)\n  );\n  repositoryEntry$: Observable<IManagedObject> = this.firmwareBinary$.pipe(\n    switchMap(mo => this.repository.getRepositoryEntryMO$(mo)),\n    shareReplay(1)\n  );\n  patches$: Observable<IManagedObject[]> = combineLatest(\n    this.firmwareBinary$,\n    this.repositoryEntry$\n  ).pipe(\n    switchMap(([firmwareBinary, repositoryEntry]) => {\n      if (repositoryEntry && firmwareBinary) {\n        const version: string = this.repository.getBaseVersionFromMO(\n          firmwareBinary as FirmwareBinary\n        );\n\n        return from(this.repository.listPatchVersions(repositoryEntry, version)).pipe(\n          map(({ data }) => data)\n        );\n      } else {\n        return of([]);\n      }\n    }),\n    shareReplay(1)\n  );\n  supportsFirmwareOperations$: Observable<boolean> = this.device$.pipe(\n    map(\n      (device: IManagedObject) =>\n        get(device, 'c8y_SupportedOperations', []).indexOf('c8y_Firmware') > -1\n    )\n  );\n  changesOperation$ = new BehaviorSubject<IOperation>(null);\n  changesInProgress$: Observable<boolean> = this.changesOperation$.pipe(\n    map(operation => this.isInProgress(operation))\n  );\n\n  constructor(\n    private route: ActivatedRoute,\n    private repository: RepositoryService,\n    private inventory: InventoryService,\n    private bsModal: BsModalService\n  ) {}\n\n  async ngOnInit() {\n    // TODO check route snapshot, why is not refreshing device.\n    // Scenario: missing deviceFirmwareFragment => install new version => switch tabs.\n    // Expected: device should be set.\n    await this.loadDevice();\n    await this.loadOperation();\n  }\n\n  installFirmware() {\n    const initialState: Partial<RepositorySelectModalComponent> & {\n      repositoryEntriesWithVersionsFn$: (modal: any) => Observable<IManagedObject[]>;\n    } = {\n      repositoryEntriesWithVersions$: of([]),\n      repositoryEntriesWithVersionsFn$: modal =>\n        this.getRepositoryEntriesWithVersions$(modal.content.searchTerm),\n      repositoryType: RepositoryType.FIRMWARE,\n      title: gettext('Install firmware'),\n      subTitle: gettext('Available firmwares matching the device type'),\n      icon: 'c8y-firmware',\n      mode: ModalSelectionMode.SINGLE,\n      labels: { ok: gettext('Install') },\n      disableSelected: false\n    };\n\n    this.deviceFirmwareFragment$\n      .pipe(\n        take(1),\n        switchMap(deviceFirmwareFragment => {\n          if (deviceFirmwareFragment) {\n            const { name, version } = deviceFirmwareFragment;\n            const selected = [{ name, version }];\n            assign(initialState, { selected });\n          }\n\n          const modal = this.bsModal.show(RepositorySelectModalComponent, {\n            ignoreBackdropClick: true,\n            initialState\n          });\n\n          if (initialState.repositoryEntriesWithVersionsFn$) {\n            modal.content.repositoryEntriesWithVersions$ = initialState.repositoryEntriesWithVersionsFn$(\n              modal\n            );\n          }\n\n          modal.content.load.next();\n\n          return modal.content.resultEmitter;\n        })\n      )\n      .subscribe(([selectedFirmware]) => {\n        this.handleOperation(selectedFirmware);\n      });\n  }\n\n  getRepositoryEntriesWithVersions$(searchTerm$: BehaviorSubject<string>) {\n    return searchTerm$.pipe(\n      distinctUntilChanged(),\n      switchMap(searchTerm =>\n        this.repository.listRepositoryEntries(RepositoryType.FIRMWARE, {\n          query: this.repository.getDeviceTypeQuery(RepositoryType.FIRMWARE, this.device$.value),\n          partialName: searchTerm,\n          params: { pageSize: 100 }\n        })\n      ),\n      map(({ data }) => data),\n      map(mos => this.getAndAssignRepositoryBinaries(mos)),\n      shareReplay(1)\n    );\n  }\n\n  getAndAssignRepositoryBinaries(mos: IManagedObject[]) {\n    mos.forEach(mo => {\n      mo.versions = this.repository.listBaseVersions(mo);\n    });\n    return mos;\n  }\n\n  addPatch() {\n    const initialState: Partial<RepositorySelectModalComponent> & {\n      repositoryEntriesWithVersions$: Observable<IManagedObject[]>;\n    } = {\n      repositoryType: RepositoryType.FIRMWARE,\n      repositoryEntriesWithVersions$: this.getRepositoryEntryWithPatches$(),\n      title: gettext('Install firmware'),\n      subTitle: gettext('Available firmwares matching the device type'),\n      icon: 'c8y-firmware',\n      mode: ModalSelectionMode.SINGLE,\n      labels: { ok: gettext('Install') },\n      disableSelected: false\n    };\n\n    this.deviceFirmwareFragment$\n      .pipe(\n        take(1),\n        switchMap(deviceFirmwareFragment => {\n          if (deviceFirmwareFragment) {\n            const { name, version } = deviceFirmwareFragment;\n            const selected = [{ name, version }];\n            assign(initialState, { selected });\n          }\n\n          const modal = this.bsModal.show(RepositorySelectModalComponent, {\n            ignoreBackdropClick: true,\n            initialState\n          });\n          modal.content.load.next();\n\n          return modal.content.resultEmitter;\n        })\n      )\n      .subscribe(([selectedOption]) => {\n        this.handleOperation(selectedOption);\n      });\n  }\n\n  getRepositoryEntryWithPatches$() {\n    return combineLatest(this.repositoryEntry$, this.patches$).pipe(\n      map(([repositoryEntry, patches]) => {\n        return [{ ...repositoryEntry, versions: patches }];\n      })\n    );\n  }\n\n  async loadDevice() {\n    this.reloading = true;\n    const deviceId = this.device$.value.id;\n    const device = (await this.inventory.detail(deviceId, { withChildren: false })).data;\n    this.device$.next(device);\n    this.reloading = false;\n  }\n\n  private async handleOperation(selectedFirmware) {\n    const operation = await this.repository.createFirmwareUpdateOperation(\n      this.device$.value,\n      selectedFirmware\n    );\n    this.trackOperation(operation);\n  }\n\n  private async loadOperation() {\n    const deviceId = this.device$.value.id;\n    const operation = await this.repository.getLastFirmwareUpdateOperation(deviceId);\n    this.trackOperation(operation);\n  }\n\n  private trackOperation(operation: IOperation) {\n    this.changesOperation$.next(operation);\n\n    if (this.isInProgress(operation)) {\n      this.repository.observeOperation(operation).subscribe(\n        operationUpdate => {\n          this.changesOperation$.next(operationUpdate);\n          if (operationUpdate.status === OperationStatus.SUCCESSFUL) {\n            this.loadDevice();\n          }\n        },\n        operationUpdate => {\n          this.changesOperation$.next(operationUpdate);\n        }\n      );\n    }\n  }\n\n  private isInProgress(operation: IOperation) {\n    return (\n      operation && [OperationStatus.PENDING, OperationStatus.EXECUTING].includes(operation.status)\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { get, has, indexOf } from 'lodash-es';\n\nconst FIRMWARE_FRAGMENT = 'c8y_Firmware';\nconst SUPPORTED_OPERATIONS_FRAGMENT = 'c8y_SupportedOperations';\n\n@Injectable()\nexport class FirmwareDeviceTabGuard implements CanActivate {\n  canActivate(route) {\n    const contextData = get(route, 'data.contextData') || get(route, 'parent.data.contextData');\n    const supportedOperations = get(contextData, SUPPORTED_OPERATIONS_FRAGMENT);\n    return (\n      (!!supportedOperations ? indexOf(supportedOperations, FIRMWARE_FRAGMENT) >= 0 : false) ||\n      has(contextData, 'c8y_Firmware')\n    );\n  }\n}\n","import { Component, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { RepositoryService } from '../repository.service';\nimport { RepositoryType, ModalModel, RepositoryCategory } from '../repository.model';\nimport { AlertService, gettext } from '@c8y/ngx-components';\nimport { isUndefined, get, assign } from 'lodash-es';\nimport { BehaviorSubject, Subscription, from } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, tap, switchMap } from 'rxjs/operators';\nimport { PickedFiles } from '@c8y/ngx-components';\nimport { IManagedObject } from '@c8y/client';\n\n@Component({\n  selector: 'c8y-add-firmware-software-modal',\n  templateUrl: 'add-firmware-modal.component.html'\n})\nexport class AddFirmwareModalComponent {\n  @ViewChild('firmwareForm', { static: false }) form: NgForm;\n  @Output() saved: EventEmitter<RepositoryCategory> = new EventEmitter<RepositoryCategory>();\n  onInput: BehaviorSubject<string> = new BehaviorSubject<string>('');\n  model: ModalModel = {\n    selected: undefined,\n    version: undefined,\n    description: undefined,\n    deviceType: undefined,\n    binary: {\n      file: undefined,\n      url: undefined\n    }\n  };\n  firmwaresResult;\n  saving = false;\n  firmwarePreselected: boolean = false;\n  textForFirmwareUrlPopover: string = gettext(`Path for binaries can vary depending on device agent implementation, e.g.:\n    /firmware/binaries/firmware1.bin\n    https://firmware/binary/123\n    ftp://firmware/binary/123.tar.gz\n  `);\n  private inputSubscription$: Subscription;\n\n  constructor(\n    private modal: BsModalRef,\n    private repositoryService: RepositoryService,\n    private alert: AlertService\n  ) {}\n\n  ngOnInit() {\n    this.setInitialState();\n    this.loadFirmwares();\n  }\n\n  setInitialState() {\n    if (this.model.selected) {\n      this.firmwarePreselected = true;\n    }\n  }\n\n  loadFirmwares() {\n    this.inputSubscription$ = this.onInput\n      .pipe(\n        tap(() => {\n          if (!this.firmwarePreselected) {\n            this.model.description = null;\n            if (this.form) {\n              this.form.form.get('description').reset();\n            }\n          }\n        }),\n        debounceTime(300),\n        distinctUntilChanged(),\n        switchMap(searchStr => this.getFirmwareResult(searchStr))\n      )\n      .subscribe(result => {\n        this.firmwaresResult = result;\n      });\n  }\n\n  getFirmwareResult(searchStr: string) {\n    return from(\n      this.repositoryService.listRepositoryEntries(RepositoryType.FIRMWARE, {\n        partialName: searchStr,\n        skipLegacy: true\n      })\n    );\n  }\n\n  async save() {\n    this.saving = true;\n    this.repositoryService\n      .create(this.model, RepositoryType.FIRMWARE)\n      .then(savedFirmware => {\n        this.successMsg();\n        this.saving = false;\n        this.saved.next(savedFirmware);\n        this.cancel();\n      })\n      .catch(e => {\n        this.saving = false;\n        this.saved.error(e);\n        this.cancel();\n      });\n  }\n\n  successMsg() {\n    const msg = gettext('Firmware added.');\n    this.alert.success(msg);\n  }\n\n  cancel() {\n    this.modal.hide();\n    this.saved.complete();\n  }\n\n  ngOnDestroy() {\n    this.inputSubscription$.unsubscribe();\n  }\n\n  onFile(dropped: PickedFiles) {\n    if (!isUndefined(dropped.url)) {\n      this.model.binary = {\n        url: dropped.url\n      };\n      return;\n    } else if (!isUndefined(dropped.droppedFiles)) {\n      this.model.binary = {\n        file: dropped.droppedFiles[0].file\n      };\n      return;\n    } else {\n      this.model.binary = {\n        file: undefined,\n        url: undefined\n      };\n    }\n  }\n\n  onFirmwareSelect(firmware: IManagedObject) {\n    assign(this.model, {\n      selected: firmware,\n      description: firmware.description,\n      deviceType: get(firmware, 'c8y_Filter.type')\n    });\n  }\n}\n","import { Component, ViewChild, Output, EventEmitter } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { RepositoryService } from '../repository.service';\nimport { RepositoryType, ModalModel, RepositoryCategory } from '../repository.model';\nimport { AlertService, gettext } from '@c8y/ngx-components';\nimport { IManagedObject, IResultList } from '@c8y/client';\nimport { isUndefined } from 'lodash-es';\nimport { BehaviorSubject, of, from, pipe, merge, Observable } from 'rxjs';\nimport { BsDropdownDirective } from 'ngx-bootstrap/dropdown';\nimport { NgForm } from '@angular/forms';\nimport {\n  debounceTime,\n  tap,\n  switchMap,\n  distinctUntilChanged,\n  shareReplay,\n  map\n} from 'rxjs/operators';\nimport { PickedFiles } from '@c8y/ngx-components';\n\n@Component({\n  selector: 'c8y-add-firmware-patch-modal.component',\n  templateUrl: 'add-firmware-patch-modal.component.html'\n})\nexport class AddFirmwarePatchModalComponent {\n  @Output() saved: EventEmitter<RepositoryCategory> = new EventEmitter<RepositoryCategory>();\n\n  @ViewChild('dropdown', { static: false }) dropdown: BsDropdownDirective;\n  @ViewChild('firmwarePatchForm', { static: false }) form: NgForm;\n  textForFirmwareUrlPopover: string = gettext(`Path for binaries can vary depending on device agent implementation, e.g.:\n    /firmware/binaries/firmware1.bin\n    https://firmware/binary/123\n    ftp://firmware/binary/123.tar.gz\n  `);\n\n  model: ModalModel = {\n    selected: undefined,\n    dependency: null,\n    patchVersion: undefined,\n    binary: {\n      file: undefined,\n      url: undefined\n    }\n  };\n\n  firmwareInput$ = new BehaviorSubject<string>('');\n  firmwares$: Observable<IResultList<IManagedObject>> = this.firmwareInput$.pipe(\n    debounceTime(300),\n    distinctUntilChanged(),\n    switchMap(searchStr =>\n      from(\n        this.repository.listRepositoryEntries(RepositoryType.FIRMWARE, {\n          partialName: searchStr,\n          skipLegacy: true\n        })\n      )\n    ),\n    shareReplay(1)\n  );\n  firmwareSelected$ = new BehaviorSubject<Partial<RepositoryCategory>>(null);\n  patchDependencyInput$ = new BehaviorSubject<string>('');\n\n  saving = false;\n  firmwarePreselected: boolean = false;\n  baseVersions$: Observable<IResultList<IManagedObject>> = merge(\n    this.firmwareInput$.pipe(\n      tap(() => {\n        this.model.dependency = null;\n        if (this.form) {\n          this.form.form.get('patchDependency').reset();\n        }\n      }),\n      switchMap(() => of(null))\n    ),\n    this.firmwareSelected$\n  ).pipe(\n    switchMap(selectedFirmware =>\n      selectedFirmware ? this.repository.listBaseVersions(selectedFirmware) : of(null)\n    ),\n    shareReplay(1)\n  );\n  baseVersionsFilterPipe = pipe(\n    switchMap((data: []) =>\n      this.patchDependencyInput$.pipe(\n        map(partialVersion =>\n          data.filter((mo: any) => {\n            const version = mo.c8y_Firmware.version.toLowerCase();\n            return (\n              partialVersion.length === 0 || version.indexOf(partialVersion.toLowerCase()) > -1\n            );\n          })\n        )\n      )\n    )\n  );\n\n  constructor(\n    private modal: BsModalRef,\n    private repository: RepositoryService,\n    private alert: AlertService\n  ) {}\n\n  async ngOnInit() {\n    this.setInitialState();\n  }\n\n  setInitialState() {\n    if (this.model.selected) {\n      this.firmwarePreselected = true;\n      this.firmwareSelected$.next(this.model.selected);\n    }\n  }\n\n  async save() {\n    this.saving = true;\n    this.repository\n      .create(this.model, RepositoryType.FIRMWARE)\n      .then(savedFirmware => {\n        this.successMsg();\n        this.saving = false;\n        this.saved.next(savedFirmware);\n        this.cancel();\n      })\n      .catch(e => {\n        this.saving = false;\n        this.saved.error(e);\n        this.cancel();\n      });\n  }\n\n  successMsg() {\n    const msg = gettext('Firmware patch added.');\n    this.alert.success(msg);\n  }\n\n  cancel() {\n    this.modal.hide();\n    this.saved.complete();\n  }\n\n  onFile(dropped: PickedFiles) {\n    if (!isUndefined(dropped.url)) {\n      this.model.binary = {\n        url: dropped.url\n      };\n      return;\n    } else if (!isUndefined(dropped.droppedFiles)) {\n      this.model.binary = {\n        file: dropped.droppedFiles[0].file\n      };\n      return;\n    } else {\n      this.model.binary = {\n        file: undefined,\n        url: undefined\n      };\n    }\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { IManagedObject, InventoryService, IResultList } from '@c8y/client';\nimport { AlertService, gettext, memoize, ModalService, Status } from '@c8y/ngx-components';\nimport { TranslateService } from '@ngx-translate/core';\nimport { property } from 'lodash-es';\nimport { BsModalService, ModalOptions } from 'ngx-bootstrap/modal';\nimport { BehaviorSubject, combineLatest, defer, merge, Observable, Subject } from 'rxjs';\nimport {\n  distinctUntilKeyChanged,\n  map,\n  shareReplay,\n  switchMap,\n  take,\n  takeUntil,\n  tap,\n  withLatestFrom\n} from 'rxjs/operators';\nimport { FirmwareBinary } from '../repository.model';\nimport { RepositoryService } from './../repository.service';\nimport { AddFirmwareModalComponent } from './add-firmware-modal.component';\nimport { AddFirmwarePatchModalComponent } from './add-firmware-patch-modal.component';\n\n@Component({\n  selector: 'c8y-firmware-details',\n  templateUrl: './firmware-details.component.html'\n})\nexport class FirmwareDetailsComponent implements OnInit, OnDestroy {\n  reload$: Subject<void> = new Subject();\n  reloading$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  updateFirmware$: Subject<Partial<IManagedObject>> = new Subject();\n  firmwareUpdated$: Subject<IManagedObject> = new Subject();\n  baseVersionsUpdated$: Subject<void> = new Subject();\n  patchVersionsUpdated$: Subject<void> = new Subject();\n\n  firmware$: Observable<IManagedObject> = merge(\n    this.activatedRoute.params.pipe(\n      map(params => params.id),\n      switchMap(id => defer(() => this.inventoryService.detail(id).then(result => result.data)))\n    ),\n    this.reload$.pipe(\n      tap(() => this.reloading$.next(true)),\n      switchMap(() => this.activatedRoute.params),\n      map(params => params.id),\n      switchMap(id => defer(() => this.inventoryService.detail(id).then(result => result.data))),\n      tap(() => this.reloading$.next(false))\n    ),\n    this.firmwareUpdated$\n  ).pipe(shareReplay(1));\n\n  baseVersions$: Observable<IResultList<IManagedObject>> = merge(\n    this.firmware$.pipe(distinctUntilKeyChanged('id')),\n    this.baseVersionsUpdated$,\n    this.patchVersionsUpdated$,\n    this.reload$\n  ).pipe(\n    switchMap(() => this.firmware$),\n    switchMap(firmware => this.repositoryService.listBaseVersions(firmware)),\n    shareReplay(1)\n  );\n\n  isLegacy$: Observable<boolean> = this.firmware$.pipe(\n    map(firmware => this.repositoryService.isLegacyEntry(firmware)),\n    shareReplay(1)\n  );\n\n  canAddPatchVersions$: Observable<boolean> = combineLatest(\n    this.isLegacy$,\n    this.baseVersions$.pipe(map(({ data }) => data.length > 0))\n  ).pipe(map(([isLegacy, hasBaseVersions]) => !isLegacy && hasBaseVersions));\n\n  expanded: { [id: string]: boolean } = {};\n\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private inventoryService: InventoryService,\n    private repositoryService: RepositoryService,\n    private alertService: AlertService,\n    private translateService: TranslateService,\n    private modalService: ModalService,\n    private bsModalService: BsModalService\n  ) {}\n\n  ngOnInit() {\n    this.updateFirmware$\n      .pipe(\n        withLatestFrom(this.firmware$),\n        switchMap(([firmwarePartial, firmware]) =>\n          this.inventoryService.update({\n            id: firmware.id,\n            ...firmwarePartial\n          })\n        ),\n        map(({ data }) => data),\n        tap(firmware => this.firmwareUpdated$.next(firmware)),\n        tap(() => this.alertService.success(gettext('Saved.'))),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  @memoize(property('id'))\n  getPatchVersionsCount$(baseVersion: FirmwareBinary) {\n    return merge(\n      this.firmware$.pipe(distinctUntilKeyChanged('id')),\n      this.baseVersionsUpdated$,\n      this.patchVersionsUpdated$,\n      this.reload$\n    ).pipe(\n      switchMap(() => this.firmware$),\n      switchMap(firmware => this.repositoryService.getPatchVersionsCount$(firmware, baseVersion)),\n      shareReplay(1)\n    );\n  }\n\n  @memoize()\n  getBinaryName$(binaryUrl) {\n    return this.repositoryService.getBinaryName$(binaryUrl);\n  }\n\n  @memoize(property('id'))\n  getPatchVersions$(baseVersion) {\n    return merge(\n      this.firmware$.pipe(distinctUntilKeyChanged('id')),\n      this.patchVersionsUpdated$,\n      this.reload$\n    ).pipe(\n      switchMap(() => this.firmware$),\n      switchMap(firmware => this.repositoryService.listPatchVersions(firmware, baseVersion)),\n      shareReplay(1)\n    );\n  }\n\n  addBaseVersion() {\n    this.firmware$\n      .pipe(\n        take(1),\n        switchMap(firmware => {\n          const initialState = {\n            model: {\n              selected: firmware,\n              description: firmware.description\n            }\n          };\n          const config: ModalOptions<AddFirmwareModalComponent> = {\n            class: 'modal-sm',\n            ignoreBackdropClick: true,\n            initialState\n          };\n          const modalRef = this.bsModalService.show(AddFirmwareModalComponent, config);\n          return modalRef.content.saved;\n        })\n      )\n      .subscribe(() => this.baseVersionsUpdated$.next());\n  }\n\n  addPatchVersion() {\n    this.firmware$\n      .pipe(\n        take(1),\n        switchMap(firmware => {\n          const initialState = {\n            model: {\n              selected: firmware\n            }\n          };\n          const config: ModalOptions<AddFirmwarePatchModalComponent> = {\n            class: 'modal-sm',\n            ignoreBackdropClick: true,\n            initialState\n          };\n          const modalRef = this.bsModalService.show(AddFirmwarePatchModalComponent, config);\n          return modalRef.content.saved;\n        })\n      )\n      .subscribe(() => this.patchVersionsUpdated$.next());\n  }\n\n  async deleteBaseVersion(baseVersion: IManagedObject) {\n    try {\n      const title = gettext('Delete firmware');\n      const body = `\n        ${this.translateService.instant(\n          gettext('You are about to delete firmware {{ version }} with all its patches.'),\n          { version: baseVersion.c8y_Firmware.version }\n        )}\n        ${this.translateService.instant(gettext('This operation is irreversible.'))}\n        ${this.translateService.instant(gettext('Do you want to proceed?'))}\n      `;\n      const labels = {\n        ok: gettext('Delete')\n      };\n      await this.modalService.confirm(title, body, Status.DANGER, labels);\n      await this.repositoryService.delete(baseVersion);\n      this.alertService.success(gettext('Firmware deleted.'));\n      this.baseVersionsUpdated$.next();\n    } catch (ex) {\n      // only if not cancel from modal\n      if (ex) {\n        this.alertService.addServerFailure(ex);\n      }\n    }\n  }\n\n  async deletePatchVersion(patchVersion: IManagedObject) {\n    try {\n      const title = gettext('Delete firmware patch');\n      const body = `\n        ${this.translateService.instant(\n          gettext('You are about to delete firmware patch {{ version }}.'),\n          { version: patchVersion.c8y_Firmware.version }\n        )}\n        ${this.translateService.instant(gettext('This operation is irreversible.'))}\n        ${this.translateService.instant(gettext('Do you want to proceed?'))}\n      `;\n      const labels = {\n        ok: gettext('Delete')\n      };\n      await this.modalService.confirm(title, body, Status.DANGER, labels);\n      await this.repositoryService.delete(patchVersion);\n      this.alertService.success(gettext('Firmware patch deleted.'));\n      this.patchVersionsUpdated$.next();\n    } catch (ex) {\n      // only if not cancel from modal\n      if (ex) {\n        this.alertService.addServerFailure(ex);\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.unsubscribe();\n  }\n}\n","import { Router, ActivatedRoute } from '@angular/router';\nimport { Component } from '@angular/core';\nimport { BsModalService, ModalOptions } from 'ngx-bootstrap/modal';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  distinctUntilChanged,\n  tap,\n  debounceTime,\n  switchMap,\n  shareReplay,\n  map,\n  pluck\n} from 'rxjs/operators';\nimport { Observable, BehaviorSubject, combineLatest, from } from 'rxjs';\nimport { IResultList, IManagedObject } from '@c8y/client';\nimport { ModalService, gettext, Status, AlertService, memoize } from '@c8y/ngx-components';\nimport { RepositoryService } from '../repository.service';\nimport { RepositoryType } from '../repository.model';\nimport { AddFirmwareModalComponent } from './add-firmware-modal.component';\nimport { AddFirmwarePatchModalComponent } from './add-firmware-patch-modal.component';\nimport { property, get } from 'lodash-es';\n\n@Component({\n  selector: 'c8y-firmware-list',\n  templateUrl: 'firmware-list.component.html'\n})\nexport class FirmwareListComponent {\n  textFilter$: BehaviorSubject<string> = new BehaviorSubject('');\n  reload$: BehaviorSubject<void> = new BehaviorSubject(null);\n  reloading: boolean = false;\n  firmwares$: Observable<IResultList<IManagedObject>> = combineLatest(\n    this.textFilter$.pipe(\n      debounceTime(400),\n      distinctUntilChanged()\n    ),\n    this.reload$\n  ).pipe(\n    tap(() => {\n      this.reloading = true;\n    }),\n    switchMap(([text]) => this.getFirmwares(text)),\n    tap(() => {\n      this.reloading = false;\n    }),\n    shareReplay(1)\n  );\n  canAddFirmwarePatch$: Observable<boolean> = from(\n    this.repositoryService.listRepositoryEntries(RepositoryType.FIRMWARE, { skipLegacy: true })\n  ).pipe(map(({ data }) => data.length > 0));\n  isLegacy = this.repositoryService.isLegacyEntry.bind(this.repositoryService);\n  readonly DEVICE_TYPE_NOT_AVAILABLE: string = gettext('No device type available');\n\n  constructor(\n    private repositoryService: RepositoryService,\n    private modalService: ModalService,\n    private bsModalService: BsModalService,\n    private translateService: TranslateService,\n    private alertService: AlertService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute\n  ) {}\n\n  getFirmwares(partialText?: string) {\n    const properties: string[] = ['name', 'description', 'c8y_Filter.type'];\n    const partialTextFilter = { partialText, properties };\n    return this.repositoryService.listRepositoryEntries(RepositoryType.FIRMWARE, {\n      partialTextFilter\n    });\n  }\n\n  addFirmware() {\n    const config: ModalOptions<AddFirmwareModalComponent> = { class: 'modal-sm', ignoreBackdropClick: true };\n    const modalRef = this.bsModalService.show(AddFirmwareModalComponent, config);\n    modalRef.content.saved.subscribe(savedFirmware => this.editFirmware(savedFirmware));\n  }\n\n  addFirmwarePatch() {\n    const config: ModalOptions<AddFirmwarePatchModalComponent> = { class: 'modal-sm', ignoreBackdropClick: true };\n    const modalRef = this.bsModalService.show(AddFirmwarePatchModalComponent, config);\n    modalRef.content.saved.subscribe(savedFirmware => this.editFirmware(savedFirmware));\n  }\n\n  editFirmware(firmware: Partial<IManagedObject>) {\n    this.router.navigate([firmware.id], { relativeTo: this.activatedRoute });\n  }\n\n  async deleteFirmware(firmware: IManagedObject) {\n    try {\n      const title = gettext('Delete firmware');\n      const body = `\n        ${this.translateService.instant(\n          gettext(\n            'You are about to delete firmware \"{{ name }}\" with all its versions and patches.'\n          ),\n          { name: firmware.name }\n        )}\n        ${this.translateService.instant(gettext('This operation is irreversible.'))}\n        ${this.translateService.instant(gettext('Do you want to proceed?'))}\n      `;\n      const labels = {\n        ok: gettext('Delete')\n      };\n      await this.modalService.confirm(title, body, Status.DANGER, labels);\n      await this.repositoryService.delete(firmware);\n      this.alertService.success(gettext('Firmware deleted.'));\n      this.reload$.next();\n    } catch (ex) {\n      // only if not cancel from modal\n      if (ex) {\n        this.alertService.addServerFailure(ex);\n      }\n    }\n  }\n\n  @memoize(property('id'))\n  getBaseVersionsCount$(firmware: IManagedObject): Observable<number | string> {\n    return this.firmwares$.pipe(\n      switchMap(() => this.repositoryService.getBaseVersionsCount$(firmware)),\n      shareReplay(1)\n    );\n  }\n\n  getDeviceTypeTitle(firmware: IManagedObject): string {\n    return get(\n      firmware,\n      'c8y_Filter.type',\n      this.translateService.instant(this.DEVICE_TYPE_NOT_AVAILABLE)\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { gettext, NavigatorNode, NavigatorNodeFactory } from '@c8y/ngx-components';\n\n@Injectable()\nexport class RepositoryNavigationFactory implements NavigatorNodeFactory {\n  navs: NavigatorNode[] = [];\n\n  async get() {\n    if (this.navs.length === 0) {\n      this.navs.push(\n        new NavigatorNode({\n          label: gettext('Firmware repository'),\n          path: 'firmware',\n          icon: 'c8y-firmware',\n          parent: gettext('Management'),\n          priority: 1000\n        })\n      );\n      this.navs.push(\n        new NavigatorNode({\n          label: gettext('Software repository'),\n          path: 'software',\n          icon: 'c8y-tools',\n          parent: gettext('Management'),\n          priority: 900\n        })\n      );\n      this.navs.push(\n        new NavigatorNode({\n          label: gettext('Configuration repository'),\n          path: 'configuration',\n          icon: 'gears',\n          parent: gettext('Management'),\n          priority: 800\n        })\n      );\n    }\n    return this.navs;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ApplicationService, FetchClient, IManagedObject, IResultList, Service } from '@c8y/client';\n\n@Injectable()\nexport class AdvancedSoftwareService extends Service<IManagedObject> {\n  private static readonly applicationName = 'advanced-software-mgmt';\n\n  protected baseUrl: string = 'service/advanced-software';\n  protected listUrl: string = 'software';\n  protected propertyName = 'softwareList';\n\n  private isAvailable: Promise<boolean>;\n\n  constructor(client: FetchClient, private applicationService: ApplicationService) {\n    super(client);\n  }\n\n  list(filter: object = {}): Promise<IResultList<IManagedObject>> {\n    return super.list(filter);\n  }\n\n  isASMAvailable(): Promise<boolean> {\n    if (this.isAvailable === undefined) {\n      this.isAvailable = this.applicationService\n        .isAvailable(AdvancedSoftwareService.applicationName)\n        .then(result => !!result?.data);\n    }\n\n    return this.isAvailable;\n  }\n}\n","import { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { DeviceSoftwareChange } from '../repository.model';\n\n@Component({\n  selector: 'c8y-device-software-changes',\n  templateUrl: 'device-software-changes.component.html'\n})\nexport class DeviceSoftwareChangesComponent implements OnChanges {\n  @Input() changes: DeviceSoftwareChange[];\n  @Input() changesInProgress: boolean;\n  @Output() clear: EventEmitter<void> = new EventEmitter();\n  @Output() drop: EventEmitter<DeviceSoftwareChange> = new EventEmitter();\n  @Output() apply: EventEmitter<void> = new EventEmitter();\n  @Output() hideSoftwareChanges = new EventEmitter<void>();\n\n  changes$ = new BehaviorSubject<DeviceSoftwareChange[]>([]);\n  installations$ = this.changes$.pipe(\n    map(changes => {\n      return changes.filter(change => change.action === 'install');\n    })\n  );\n\n  removals$ = this.changes$.pipe(\n    map(changes => {\n      return changes.filter(change => change.action === 'delete');\n    })\n  );\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.changes) {\n      this.changes$.next(changes.changes.currentValue);\n    }\n  }\n}\n","import { AfterContentInit, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { IManagedObject, IResultList, Paging } from '@c8y/client';\nimport { filter, get, set } from 'lodash-es';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, map, switchMap, tap } from 'rxjs/operators';\nimport { DeviceSoftware, DeviceSoftwareChange, SoftwareFilterCriteria } from '../repository.model';\nimport { AdvancedSoftwareService } from './advanced-software.service';\n\n@Component({\n  selector: 'c8y-device-software-list',\n  templateUrl: 'device-software-list.component.html'\n})\nexport class DeviceSoftwareListComponent implements OnInit, AfterContentInit {\n  @Input() set softwareList(softwareList: DeviceSoftware[]) {\n    if (softwareList !== null) {\n      this.legacySoftwareList$.next(softwareList);\n    }\n  }\n  @Input() device: IManagedObject;\n  @Input() deviceSoftwareChanges: DeviceSoftwareChange[];\n  @Input() filterCriteria$: Observable<SoftwareFilterCriteria> = of(null);\n  @Output() update = new EventEmitter<DeviceSoftware>();\n  @Output() remove = new EventEmitter<DeviceSoftware>();\n  @Output() onListEmpty: EventEmitter<boolean> = new EventEmitter();\n  softwareItems$: Observable<IResultList<DeviceSoftware>>;\n  showUpdate: boolean;\n  showRemove: boolean;\n  emptyList: boolean;\n  noSearchResults: boolean;\n  supportsSoftwareOperations: boolean = false;\n\n  private readonly operationTypes = ['c8y_SoftwareUpdate', 'c8y_SoftwareList', 'c8y_Software'];\n\n  private legacySoftwareList$: BehaviorSubject<DeviceSoftware[]> = new BehaviorSubject([]);\n\n  constructor(private advancedSoftwareService: AdvancedSoftwareService) {}\n\n  ngOnInit(): void {\n    this.softwareItems$ = combineLatest(this.filterCriteria$, this.legacySoftwareList$).pipe(\n      debounceTime(300),\n      distinctUntilChanged(),\n      switchMap(([filterCriteria, legacySoftwareList]) => {\n        if (legacySoftwareList) {\n          return of(this.getLegacySoftwareList(filterCriteria)).pipe(\n            map(resultList => ({ resultList, filterCriteria }))\n          );\n        } else {\n          return this.getAdvancedSoftwareList(filterCriteria).then(resultList => ({\n            resultList,\n            filterCriteria\n          }));\n        }\n      }),\n      tap(({ resultList, filterCriteria }) => {\n        this.notifyListEmpty(!resultList?.paging?.totalPages && !filterCriteria);\n        this.noSearchResults = !resultList?.paging?.totalPages && !!filterCriteria;\n      }),\n      map(({ resultList }) => resultList)\n    );\n    const supportedOperations = get(this.device, 'c8y_SupportedOperations', []);\n    this.supportsSoftwareOperations = this.operationTypes.some(\n      operationType => supportedOperations.indexOf(operationType) > -1\n    );\n  }\n\n  ngAfterContentInit() {\n    this.showUpdate = this.update.observers.length > 0;\n    this.showRemove = this.remove.observers.length > 0;\n  }\n\n  isSoftwareGoingToBeChanged(software: DeviceSoftware): boolean {\n    const relevantChanges = filter(this.deviceSoftwareChanges, software);\n    return relevantChanges.length > 0;\n  }\n\n  private getAdvancedSoftwareList(\n    filterCriteria: SoftwareFilterCriteria\n  ): Promise<IResultList<DeviceSoftware>> {\n    const queryFilter = { deviceId: this.device.id };\n    if (filterCriteria?.name) {\n      set(queryFilter, 'name', `*${filterCriteria.name}*`);\n    }\n    if (filterCriteria?.softwareType) {\n      set(queryFilter, 'type', `${filterCriteria.softwareType}`);\n    }\n    return this.advancedSoftwareService.list(queryFilter) as unknown as Promise<\n      IResultList<DeviceSoftware>\n    >;\n  }\n\n  private getLegacySoftwareList(\n    filterCriteria: SoftwareFilterCriteria\n  ): IResultList<DeviceSoftware> {\n    const data = filterCriteria\n      ? this.legacySoftwareList$.value.filter(item => {\n          let match = true;\n          if (filterCriteria?.name) {\n            match = match && item.name?.includes(filterCriteria.name);\n          }\n          if (filterCriteria?.softwareType) {\n            match = match && item.softwareType === filterCriteria.softwareType;\n          }\n\n          return match;\n        })\n      : this.legacySoftwareList$.value;\n    return {\n      data,\n      res: null,\n      paging: {\n        totalPages: data.length\n      } as Paging<DeviceSoftware>\n    };\n  }\n\n  private notifyListEmpty(isEmpty: boolean): void {\n    this.emptyList = isEmpty;\n    this.onListEmpty.emit(isEmpty);\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { IManagedObject, IOperation } from '@c8y/client';\nimport { gettext, ModalSelectionMode } from '@c8y/ngx-components';\nimport { get } from 'lodash-es';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BehaviorSubject, combineLatest, from, Observable, of } from 'rxjs';\nimport { distinctUntilChanged, map, shareReplay, switchMap } from 'rxjs/operators';\nimport { RepositoryService } from '../repository.service';\nimport { RepositorySelectModalComponent } from '../select-modal/repository-select-modal.component';\nimport {\n  DeviceSoftware,\n  DeviceSoftwareChange,\n  RepositoryType,\n  SoftwareFilterCriteria\n} from './../repository.model';\n\n@Component({\n  selector: 'c8y-installed-software',\n  templateUrl: 'installed-software.component.html'\n})\nexport class InstalledSoftwareComponent implements OnInit {\n  @Input() device: IManagedObject;\n  @Input() softwareList: DeviceSoftware[];\n  @Input() deviceSoftwareChanges: DeviceSoftwareChange[];\n  @Input() deviceSoftwareChangesOperation: IOperation;\n  @Input() deviceSoftwareChangesInProgress: boolean;\n  @Input() deviceTypeQuery: object;\n  @Output() changes = new EventEmitter<DeviceSoftwareChange[]>();\n  @Output() showSoftwareChanges = new EventEmitter<void>();\n\n  showFilter: boolean = false;\n  supportsSoftwareOperations: boolean = false;\n  textFilter$: BehaviorSubject<string> = new BehaviorSubject('');\n  softwareTypeFilter$: BehaviorSubject<string> = new BehaviorSubject('');\n  filterCriteria$: Observable<SoftwareFilterCriteria>;\n\n  private readonly operationTypes = ['c8y_SoftwareUpdate', 'c8y_SoftwareList', 'c8y_Software'];\n\n  constructor(private repository: RepositoryService, private bsModal: BsModalService) {\n    this.filterCriteria$ = combineLatest(this.textFilter$, this.softwareTypeFilter$).pipe(\n      map(([textFilter, softwareTypeFilter]) => ({\n        name: textFilter,\n        softwareType: softwareTypeFilter\n      })),\n      map(filterCriteria =>\n        !filterCriteria.name && !filterCriteria.softwareType ? null : filterCriteria\n      )\n    );\n  }\n\n  ngOnInit(): void {\n    const supportedOperations = get(this.device, 'c8y_SupportedOperations', []);\n    this.supportsSoftwareOperations = this.operationTypes.some(\n      operationType => supportedOperations.indexOf(operationType) > -1\n    );\n  }\n\n  installSoftware() {\n    this.displaySoftwareSelectModal({\n      title: gettext('Install software'),\n      labels: { ok: gettext('Install') },\n      repositoryEntriesWithVersions$: of([]),\n      repositoryEntriesWithVersionsFn$: modal =>\n        this.getInstallableSoftwareListWithVersions$(modal.content.searchTerm)\n    }).subscribe(softwareToInstall => {\n      this.emitSoftwareInstall(softwareToInstall);\n      this.showSoftwareChanges.emit();\n    });\n  }\n\n  updateSoftware(softwareToRemove) {\n    this.displaySoftwareSelectModal({\n      title: gettext('Update software'),\n      labels: { ok: gettext('Update') },\n      showFilter: false,\n      repositoryEntriesWithVersions$: this.getSingleSoftwareWithVersions$(softwareToRemove)\n    }).subscribe(softwareToInstall => {\n      this.emitSoftwareInstall(softwareToInstall);\n      this.showSoftwareChanges.emit();\n    });\n  }\n\n  removeSoftware(softwareToRemove) {\n    this.emitSoftwareRemoval([softwareToRemove]);\n  }\n\n  getInstallableSoftwareListWithVersions$(searchTerm$: BehaviorSubject<string>) {\n    const installedSoftwareNames = (this.softwareList || []).map(s => s.name);\n    return searchTerm$.pipe(\n      distinctUntilChanged(),\n      switchMap(searchTerm =>\n        this.repository.listRepositoryEntries(RepositoryType.SOFTWARE, {\n          query: this.deviceTypeQuery,\n          partialName: searchTerm,\n          params: { pageSize: 100 }\n        })\n      ),\n      map(({ data }) => data),\n      map(softwareList => {\n        return softwareList.filter(software => {\n          return !installedSoftwareNames.includes(software.name);\n        });\n      }),\n      map(softwareList => this.attachVersions(softwareList)),\n      shareReplay(1)\n    );\n  }\n\n  getSingleSoftwareWithVersions$(software: DeviceSoftware) {\n    return from(\n      this.repository.listRepositoryEntries(RepositoryType.SOFTWARE, {\n        query: { name: software.name }\n      })\n    ).pipe(\n      map(({ data }) => data),\n      map(softwareList => this.attachVersions(softwareList)),\n      shareReplay(1)\n    );\n  }\n\n  attachVersions(softwareList: IManagedObject[]) {\n    softwareList.forEach(software => {\n      software.versions = this.repository.listBaseVersions(software);\n    });\n    return softwareList;\n  }\n\n  displaySoftwareSelectModal(initialStateOverrides) {\n    const initialState = {\n      repositoryType: RepositoryType.SOFTWARE,\n      subTitle: gettext('Available softwares matching the device type'),\n      mode: ModalSelectionMode.MULTI,\n      icon: 'c8y-tools',\n      disableSelected: false,\n      selected: this.softwareList,\n      ...initialStateOverrides\n    };\n    const modal = this.bsModal.show(RepositorySelectModalComponent, {\n      ignoreBackdropClick: true,\n      class: 'modal-sm',\n      initialState\n    });\n\n    if (initialStateOverrides.repositoryEntriesWithVersionsFn$) {\n      modal.content.repositoryEntriesWithVersions$ =\n        initialStateOverrides.repositoryEntriesWithVersionsFn$(modal);\n    }\n\n    modal.content.load.next();\n    return modal.content.resultEmitter;\n  }\n\n  emitSoftwareInstall(items: DeviceSoftware[]) {\n    this.changes.emit(\n      items.map(item => {\n        return { ...item, action: 'install' };\n      })\n    );\n  }\n\n  emitSoftwareRemoval(items: DeviceSoftware[]) {\n    this.changes.emit(\n      items.map(item => {\n        return { ...item, action: 'delete' };\n      })\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport { IManagedObject, InventoryService, OperationStatus, IOperation } from '@c8y/client';\nimport { DeviceSoftware, DeviceSoftwareChange, RepositoryType } from '../repository.model';\nimport { RepositoryService } from '../repository.service';\nimport { AdvancedSoftwareService } from './advanced-software.service';\n\n@Component({\n  selector: 'c8y-software-device-tab',\n  templateUrl: 'software-device-tab.component.html'\n})\nexport class SoftwareDeviceTabComponent implements OnInit {\n  deviceId: string | number = this.route.snapshot.parent.data.contextData.id;\n  device$ = new BehaviorSubject<IManagedObject>(this.route.snapshot.parent.data.contextData);\n  deviceTypeQuery$: Observable<object> = this.device$.pipe(\n    map(device => this.repository.getDeviceTypeQuery(RepositoryType.SOFTWARE, device))\n  );\n  list$: Observable<DeviceSoftware[]> = this.device$.pipe(\n    switchMap(device =>\n      this.advancedSoftwareService\n        .isASMAvailable()\n        .then(isASMAvailable => ({ isASMAvailable, device }))\n    ),\n    map(({ isASMAvailable, device }) =>\n      // with ASM available software items will be retrieved directly in the\n      // device-software-list component\n      isASMAvailable ? undefined : this.repository.getDeviceSoftwareList(device)\n    )\n  );\n  changes$ = new BehaviorSubject<DeviceSoftwareChange[]>([]);\n  changesOperation$ = new BehaviorSubject<IOperation>(null);\n  changesInProgress$: Observable<boolean> = this.changesOperation$.pipe(\n    map(operation => this.isInProgress(operation))\n  );\n  reloading: boolean = false;\n  showSoftwareChanges: boolean = false;\n\n  constructor(\n    private route: ActivatedRoute,\n    private repository: RepositoryService,\n    private inventory: InventoryService,\n    private advancedSoftwareService: AdvancedSoftwareService\n  ) {}\n\n  async ngOnInit() {\n    await this.loadDevice();\n    await this.loadOperation();\n  }\n\n  addChanges(requestedChanges: DeviceSoftwareChange[]) {\n    let stagedChanges = [...this.changes$.value];\n    requestedChanges.forEach(requestedChange => {\n      const alreadyStaged = stagedChanges.some(stagedChange =>\n        this.areSameChanges(stagedChange, requestedChange));\n      if (!alreadyStaged) {\n        stagedChanges = [...stagedChanges, requestedChange];\n      }\n    });\n    this.changes$.next(stagedChanges);\n  }\n\n  dropChange(changeToBeDropped: DeviceSoftwareChange) {\n    let stagedChanges = [...this.changes$.value];\n    stagedChanges = stagedChanges.filter(stagedChange => !this.areSameChanges(stagedChange, changeToBeDropped));\n    this.changes$.next(stagedChanges);\n  }\n\n  areSameChanges(change1: DeviceSoftwareChange, change2: DeviceSoftwareChange) {\n    return change1.name === change2.name &&\n      change1.version === change2.version &&\n      change1.action === change2.action;\n  }\n\n  clearChanges() {\n    this.changes$.next([]);\n  }\n\n  async loadDevice() {\n    this.reloading = true;\n    const device = (await this.inventory.detail(this.deviceId, { withChildren: false })).data;\n    this.device$.next(device);\n    this.reloading = false;\n  }\n\n  async applyChanges() {\n    const operation = await this.repository.createSoftwareUpdateOperation(\n      this.device$.value,\n      this.changes$.value\n    );\n    this.trackOperation(operation);\n  }\n\n  private async loadOperation() {\n    const operation = await this.repository.getLastSoftwareUpdateOperation(this.deviceId);\n    this.trackOperation(operation);\n  }\n\n  private trackOperation(operation: IOperation) {\n    this.changesOperation$.next(operation);\n\n    if (this.isInProgress(operation)) {\n      this.displayChangesFromOperation(operation);\n      this.repository.observeOperation(operation).subscribe(\n        operationUpdate => {\n          this.changesOperation$.next(operationUpdate);\n          if (operationUpdate.status === OperationStatus.SUCCESSFUL) {\n            this.clearChanges();\n            this.loadDevice();\n          }\n        },\n        operationUpdate => {\n          this.changesOperation$.next(operationUpdate);\n        }\n      );\n    }\n  }\n\n  private displayChangesFromOperation(operation: IOperation) {\n    const changes = this.repository.getDeviceSoftwareChangesFromOperation(\n      operation,\n      this.device$.value\n    );\n    this.changes$.next(changes);\n  }\n\n  private isInProgress(operation: IOperation) {\n    return (\n      operation && [OperationStatus.PENDING, OperationStatus.EXECUTING].includes(operation.status)\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate } from '@angular/router';\nimport { IManagedObject } from '@c8y/client';\nimport { get, has } from 'lodash-es';\n\n@Injectable()\nexport class SoftwareDeviceTabGuard implements CanActivate {\n  private readonly operations = ['c8y_SoftwareUpdate', 'c8y_SoftwareList', 'c8y_Software'];\n\n  canActivate(route: ActivatedRouteSnapshot) {\n    const device = get(route, 'data.contextData') || get(route, 'parent.data.contextData');\n    return (\n      this.isAnyOperationSupported(device) ||\n      has(device, 'c8y_Software') ||\n      has(device, 'c8y_SoftwareList') ||\n      has(device, 'c8y_SupportedSoftwareTypes')\n    );\n  }\n\n  private isAnyOperationSupported(device: IManagedObject) {\n    const supportedOperations = device?.c8y_SupportedOperations || [];\n    return this.operations.some(operation => supportedOperations.indexOf(operation) >= 0);\n  }\n}\n","import { Component, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { RepositoryService } from '../repository.service';\nimport { RepositoryType, ModalModel, RepositoryCategory } from '../repository.model';\nimport { AlertService, gettext } from '@c8y/ngx-components';\nimport { isUndefined, get, assign } from 'lodash-es';\nimport { BehaviorSubject, Subscription, from } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, tap, switchMap } from 'rxjs/operators';\nimport { PickedFiles } from '@c8y/ngx-components';\nimport { IManagedObject } from '@c8y/client';\n\n@Component({\n  selector: 'c8y-add-software-software-modal',\n  templateUrl: 'add-software-modal.component.html'\n})\nexport class AddSoftwareModalComponent {\n  @ViewChild('softwareForm', { static: false }) form: NgForm;\n  @Output() saved: EventEmitter<RepositoryCategory> = new EventEmitter<RepositoryCategory>();\n  onInput: BehaviorSubject<string> = new BehaviorSubject<string>('');\n  model: ModalModel = {\n    selected: undefined,\n    version: undefined,\n    description: undefined,\n    deviceType: undefined,\n    softwareType: undefined,\n    binary: {\n      file: undefined,\n      url: undefined\n    }\n  };\n\n  softwaresResult;\n  saving = false;\n  softwarePreselected: boolean = false;\n  textForSoftwareUrlPopover: string =\n    gettext(`Path for binaries can vary depending on device agent implementation, e.g.:\n    /software/binaries/software1.bin\n    https://software/binary/123\n    ftp://software/binary/123.tar.gz\n  `);\n  private inputSubscription$: Subscription;\n\n  constructor(\n    private modal: BsModalRef,\n    private repositoryService: RepositoryService,\n    private alert: AlertService\n  ) {}\n\n  ngOnInit() {\n    this.setInitialState();\n    this.loadSoftwares();\n  }\n\n  setInitialState() {\n    if (this.model.selected) {\n      this.softwarePreselected = true;\n    }\n  }\n\n  loadSoftwares() {\n    this.inputSubscription$ = this.onInput\n      .pipe(\n        tap(() => {\n          if (!this.softwarePreselected) {\n            this.model.description = null;\n            if (this.form) {\n              this.form.form.get('description').reset();\n            }\n          }\n        }),\n        debounceTime(300),\n        distinctUntilChanged(),\n        switchMap(searchStr => this.getSoftwareResult(searchStr))\n      )\n      .subscribe(result => {\n        this.softwaresResult = result;\n      });\n  }\n\n  getSoftwareResult(searchStr: string) {\n    return from(\n      this.repositoryService.listRepositoryEntries(RepositoryType.SOFTWARE, {\n        partialName: searchStr,\n        skipLegacy: true\n      })\n    );\n  }\n\n  async save() {\n    this.saving = true;\n    this.repositoryService\n      .create(this.model, RepositoryType.SOFTWARE)\n      .then(savedSoftware => {\n        this.successMsg();\n        this.saving = false;\n        this.saved.next(savedSoftware);\n        this.cancel();\n      })\n      .catch(e => {\n        this.saving = false;\n        this.saved.error(e);\n        this.cancel();\n      });\n  }\n\n  successMsg() {\n    const msg = gettext('Software added.');\n    this.alert.success(msg);\n  }\n\n  cancel() {\n    this.modal.hide();\n    this.saved.complete();\n  }\n\n  ngOnDestroy() {\n    this.inputSubscription$.unsubscribe();\n  }\n\n  onFile(dropped: PickedFiles) {\n    if (!isUndefined(dropped.url)) {\n      this.model.binary = {\n        url: dropped.url\n      };\n      return;\n    } else if (!isUndefined(dropped.droppedFiles)) {\n      this.model.binary = {\n        file: dropped.droppedFiles[0].file\n      };\n      return;\n    } else {\n      this.model.binary = {\n        file: undefined,\n        url: undefined\n      };\n    }\n  }\n\n  onSoftwareSelect(software: IManagedObject) {\n    assign(this.model, {\n      selected: software,\n      description: software.description,\n      deviceType: get(software, 'c8y_Filter.type'),\n      softwareType: software\n    });\n  }\n}\n","import { Component } from '@angular/core';\nimport { CellRendererContext } from '@c8y/ngx-components';\n\n@Component({\n  templateUrl: './device-type.cell-renderer.component.html'\n})\nexport class DeviceTypeCellRendererComponent {\n  constructor(public context: CellRendererContext) {}\n}\n","import { Component } from '@angular/core';\nimport { CellRendererContext } from '@c8y/ngx-components';\n\n@Component({\n  template: `\n    <a [routerLink]=\"[context.item.id]\" [title]=\"context.item.name\" class=\"interact\">\n      {{ context.item.name }}\n    </a>\n  `\n})\nexport class NameCellRendererComponent {\n  constructor(public context: CellRendererContext) {}\n}\n","import { Component } from '@angular/core';\nimport { CellRendererContext } from '@c8y/ngx-components';\n\n@Component({\n  templateUrl: './software-type.cell-renderer.component.html'\n})\nexport class SoftwareTypeCellRendererComponent {\n  constructor(public context: CellRendererContext) {}\n}\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  HostListener,\n  OnInit,\n  ViewChild\n} from '@angular/core';\nimport { IManagedObject, IResultList, QueriesUtil } from '@c8y/client';\nimport { FilteringFormRendererContext, gettext, TypeaheadComponent } from '@c8y/ngx-components';\nimport { DeviceGridColumn } from '@c8y/ngx-components/device-grid';\nimport { cloneDeep, uniqBy } from 'lodash-es';\nimport { BehaviorSubject, NEVER, Observable, pipe, UnaryFunction } from 'rxjs';\nimport { debounceTime, map, switchMap, tap } from 'rxjs/operators';\nimport { RepositoryType } from '../../repository.model';\nimport { RepositoryService } from '../../repository.service';\n\n@Component({\n  templateUrl: './software-type.filtering-form-renderer.component.html',\n  changeDetection: ChangeDetectionStrategy.Default\n})\nexport class SoftwareTypeFilteringFormRendererComponent implements OnInit, AfterViewInit {\n  selectedType: IManagedObject;\n  softwareWithType$: Observable<IResultList<IManagedObject>> = NEVER;\n  search$: BehaviorSubject<string> = new BehaviorSubject(null);\n  filterPipe: UnaryFunction<unknown, unknown> = pipe(tap());\n  typeaheadPlaceholder = gettext('Start typing to search, e.g. {{ example }}');\n  @ViewChild(TypeaheadComponent, { static: false }) typeahead: TypeaheadComponent;\n  private queriesUtil: QueriesUtil = new QueriesUtil();\n  private softwareTypes: Set<string> = new Set();\n\n  constructor(\n    public context: FilteringFormRendererContext,\n    public changeDetectorRef: ChangeDetectorRef,\n    private repositoryService: RepositoryService,\n    private elementRef: ElementRef\n  ) {\n    this.softwareWithType$ = this.search$.pipe(\n      debounceTime(300),\n      tap(() => this.softwareTypes.clear()),\n      switchMap((searchString: string) => {\n        let query = this.queriesUtil.prependOrderbys({}, [{ softwareType: 1 }]);\n        const filter = !!searchString\n          ? {\n              softwareType: {\n                __eq: `*${searchString}*`\n              }\n            }\n          : {\n              __has: 'softwareType'\n            };\n        query = this.queriesUtil.addAndFilter(query, filter);\n\n        return this.repositoryService.listRepositoryEntries(RepositoryType.SOFTWARE, {\n          skipDefaultOrder: true,\n          query,\n          params: {\n            pageSize: 200\n          }\n        });\n      })\n    );\n\n    this.filterPipe = pipe(\n      map(this.removeDuplicatesBySoftwareType.bind(this)),\n      tap(() => this.changeDetectorRef.detectChanges())\n    );\n  }\n\n  @HostListener('keydown.enter', ['$event']) onEnterKeyDown(event: KeyboardEvent) {\n    event.stopPropagation();\n    this.applyFilter();\n  }\n  @HostListener('keydown.escape', ['$event']) onEscapeKeyDown(event: KeyboardEvent) {\n    event.stopPropagation();\n    this.context.resetFilter();\n  }\n\n  ngOnInit(): void {\n    const column: DeviceGridColumn = this.context.property;\n    this.selectedType = cloneDeep(column.externalFilterQuery || {});\n  }\n\n  ngAfterViewInit(): void {\n    this.typeahead?.searchControl?.nativeElement?.focus();\n    try {\n      this.elementRef.nativeElement.parentElement.parentElement.style.overflow = 'visible';\n    } catch (ex) {\n      // intentionally empty\n    }\n  }\n\n  applyFilter() {\n    this.context.applyFilter({\n      externalFilterQuery: this.selectedType\n    });\n  }\n\n  private removeDuplicatesBySoftwareType(list: IManagedObject[]): IManagedObject[] {\n    const uniqueBySoftwareType: IManagedObject[] = uniqBy(list, 'softwareType').filter(\n      (sw: IManagedObject) => !this.softwareTypes.has(sw.softwareType)\n    );\n    uniqueBySoftwareType.forEach((sw: IManagedObject) => this.softwareTypes.add(sw.softwareType));\n    return uniqueBySoftwareType;\n  }\n}\n","import { Component } from '@angular/core';\nimport { IManagedObject } from '@c8y/client';\nimport { CellRendererContext, memoize } from '@c8y/ngx-components';\nimport { property } from 'lodash-es';\nimport { Observable } from 'rxjs';\nimport { shareReplay } from 'rxjs/operators';\nimport { RepositoryService } from '../../repository.service';\n\n@Component({\n  templateUrl: './versions.cell-renderer.component.html'\n})\nexport class VersionsCellRendererComponent {\n  isLegacy = this.repositoryService.isLegacyEntry.bind(this.repositoryService);\n  software;\n  constructor(public context: CellRendererContext, private repositoryService: RepositoryService) {\n    this.software = context.item;\n  }\n\n  @memoize(property('id'))\n  getBaseVersionsCount$(software: IManagedObject): Observable<number | string> {\n    return this.repositoryService.getBaseVersionsCount$(software).pipe(shareReplay(1));\n  }\n}\n","import {\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  TemplateRef,\n  ViewChild\n} from '@angular/core';\nimport { IManagedObject, IResultList, QueriesUtil } from '@c8y/client';\nimport { gettext, TypeaheadComponent } from '@c8y/ngx-components';\nimport { uniqBy } from 'lodash-es';\nimport { TranslateService } from '@ngx-translate/core';\nimport { BehaviorSubject, Observable, pipe, UnaryFunction } from 'rxjs';\nimport { debounceTime, map, switchMap, tap } from 'rxjs/operators';\nimport { RepositoryType } from '../repository.model';\nimport { RepositoryService } from '../repository.service';\n\n@Component({\n  selector: 'c8y-software-type',\n  templateUrl: 'software-type.component.html'\n})\nexport class SoftwareTypeComponent implements OnInit {\n  @Input() softwareTypeMO: IManagedObject;\n\n  @Input() disabled: boolean;\n\n  @Input() style;\n\n  @Input()\n  required: boolean = true;\n\n  @Input()\n  placeholder: string = this.translateService.instant(\n    gettext('e.g. {{ example }}'), { example: 'yum' }\n  );\n\n  @Input()\n  emitResultsOnly: boolean = false;\n\n  @Input()\n  showBtnInNotFoundMessage: boolean = true;\n\n  @Input()\n  allowFreeEntries: boolean = true;\n\n  @ViewChild('deviceSoftwareTypeModel') deviceSoftwareTypeModel: TypeaheadComponent;\n\n  @ViewChild('notFoundTypeAddNewTemplate', { static: true })\n  notFoundTypeAddNewTemplate: TemplateRef<unknown>;\n\n  @ViewChild('notFoundTypeTemplate', { static: true })\n  notFoundTypeTemplate: TemplateRef<unknown>;\n\n  @Output() onSelectSoftware: EventEmitter<IManagedObject> = new EventEmitter<IManagedObject>();\n\n  notFoundTemplateToUse: TemplateRef<unknown>;\n\n  filterPipe: UnaryFunction<unknown, unknown> = pipe(tap());\n  softwaresResult$: Observable<IResultList<IManagedObject>>;\n  search$: BehaviorSubject<string> = new BehaviorSubject(null);\n  softwaresResult: IResultList<IManagedObject>;\n\n  private queriesUtil: QueriesUtil = new QueriesUtil();\n  private softwareTypes: Set<string> = new Set();\n\n  constructor(\n    private repositoryService: RepositoryService,\n    public changeDetectorRef: ChangeDetectorRef,\n    private translateService: TranslateService\n  ) {\n    this.softwaresResult$ = this.search$.pipe(\n      debounceTime(300),\n      tap(() => this.softwareTypes.clear()),\n      switchMap((searchString: string) => {\n        if (!this.emitResultsOnly || !searchString) {\n          this.onSelectSoftware.emit(this.softwareTypeMO);\n        }\n        return this.getSoftwareByTypeResult(searchString);\n      })\n    );\n\n    this.filterPipe = pipe(map(this.removeDuplicatesBySoftwareType.bind(this)));\n  }\n\n  ngOnInit(): void {\n    this.notFoundTemplateToUse = this.showBtnInNotFoundMessage\n      ? this.notFoundTypeAddNewTemplate\n      : this.notFoundTypeTemplate;\n  }\n\n  getSoftwareByTypeResult(searchString: string) {\n    let query = this.queriesUtil.prependOrderbys({}, [{ softwareType: 1 }]);\n    const filter = !!searchString\n      ? {\n          softwareType: {\n            __eq: `*${searchString}*`\n          }\n        }\n      : {\n          __has: 'softwareType'\n        };\n    query = this.queriesUtil.addAndFilter(query, filter);\n\n    return this.repositoryService.listRepositoryEntries(RepositoryType.SOFTWARE, {\n      query,\n      params: {\n        pageSize: 200\n      }\n    });\n  }\n\n  selectSoftware(software) {\n    this.softwareTypeMO = software;\n    this.onSelectSoftware.emit(software);\n    this.deviceSoftwareTypeModel.searchControlModel.control.markAsDirty();\n  }\n\n  resetInput() {\n    this.deviceSoftwareTypeModel.reset();\n  }\n\n  private removeDuplicatesBySoftwareType(list: IManagedObject[]): IManagedObject[] {\n    const uniqueBySoftwareType: IManagedObject[] = uniqBy(list, 'softwareType').filter(\n      (sw: IManagedObject) => !this.softwareTypes.has(sw.softwareType)\n    );\n    uniqueBySoftwareType.forEach((sw: IManagedObject) => this.softwareTypes.add(sw.softwareType));\n    return uniqueBySoftwareType;\n  }\n}\n","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { IManagedObject, InventoryService, IResultList } from '@c8y/client';\nimport { AlertService, gettext, memoize, ModalService, Status } from '@c8y/ngx-components';\nimport { TranslateService } from '@ngx-translate/core';\nimport { BsModalService, ModalOptions } from 'ngx-bootstrap/modal';\nimport { BehaviorSubject, from, merge, Observable, Subject } from 'rxjs';\nimport {\n  distinctUntilKeyChanged,\n  map,\n  shareReplay,\n  switchMap,\n  take,\n  takeUntil,\n  tap,\n  withLatestFrom\n} from 'rxjs/operators';\nimport { RepositoryService } from '../repository.service';\nimport { AddSoftwareModalComponent } from './add-software-modal.component';\nimport { SoftwareTypeComponent } from './software-type.component';\n\n@Component({\n  selector: 'c8y-software-details',\n  templateUrl: './software-details.component.html'\n})\nexport class SoftwareDetailsComponent implements OnInit, OnDestroy {\n  @ViewChild(SoftwareTypeComponent, { static: true })\n  softwareType: SoftwareTypeComponent;\n\n  reload$: Subject<void> = new Subject();\n  reloading$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n  softwareTypeObject: IManagedObject;\n  isSoftwareTypeChanged: boolean = false;\n\n  updateSoftware$: Subject<Partial<IManagedObject>> = new Subject();\n  softwareUpdated$: Subject<IManagedObject> = new Subject();\n  baseVersionsUpdated$: Subject<void> = new Subject();\n\n  software$: Observable<IManagedObject> = merge(\n    this.activatedRoute.params.pipe(\n      map(params => params.id),\n      switchMap(id => from(this.inventoryService.detail(id).then(result => result.data)))\n    ),\n    this.reload$.pipe(\n      tap(() => this.reloading$.next(true)),\n      switchMap(() => this.activatedRoute.params),\n      map(params => params.id),\n      switchMap(id => from(this.inventoryService.detail(id).then(result => result.data))),\n      tap(() => this.reloading$.next(false))\n    ),\n    this.softwareUpdated$\n  ).pipe(shareReplay(1));\n\n  baseVersions$: Observable<IResultList<IManagedObject>> = merge(\n    this.software$.pipe(distinctUntilKeyChanged('id')),\n    this.baseVersionsUpdated$,\n    this.reload$\n  ).pipe(\n    switchMap(() => this.software$),\n    switchMap(software => this.repositoryService.listBaseVersions(software)),\n    shareReplay(1)\n  );\n\n  isLegacy$: Observable<boolean> = this.software$.pipe(\n    map(software => this.repositoryService.isLegacyEntry(software)),\n    shareReplay(1)\n  );\n\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private inventoryService: InventoryService,\n    private repositoryService: RepositoryService,\n    private alertService: AlertService,\n    private translateService: TranslateService,\n    private modalService: ModalService,\n    private bsModalService: BsModalService\n  ) {}\n\n  ngOnInit() {\n    this.updateSoftware$\n      .pipe(\n        withLatestFrom(this.software$),\n        switchMap(([softwarePartial, software]) =>\n          this.inventoryService.update({\n            id: software.id,\n            ...softwarePartial\n          })\n        ),\n        map(({ data }) => data),\n        tap(software => this.softwareUpdated$.next(software)),\n        tap(() => this.alertService.success(gettext('Saved.'))),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n\n    this.software$.subscribe(software => {\n      this.softwareTypeObject = software;\n    });\n  }\n\n  @memoize()\n  getBinaryName$(binaryUrl) {\n    return this.repositoryService.getBinaryName$(binaryUrl);\n  }\n\n  addBaseVersion() {\n    this.software$\n      .pipe(\n        take(1),\n        switchMap(software => {\n          const initialState = {\n            model: {\n              selected: software,\n              description: software.description\n            }\n          };\n          const config: ModalOptions<AddSoftwareModalComponent> = {\n            class: 'modal-sm',\n            ignoreBackdropClick: true,\n            initialState\n          };\n          const modalRef = this.bsModalService.show(AddSoftwareModalComponent, config);\n          return modalRef.content.saved;\n        })\n      )\n      .subscribe(() => this.baseVersionsUpdated$.next());\n  }\n\n  async deleteBaseVersion(baseVersion: IManagedObject) {\n    try {\n      const title = gettext('Delete software');\n      const body = `\n        ${this.translateService.instant(\n          gettext('You are about to delete software {{ version }}.'),\n          { version: baseVersion.c8y_Software.version }\n        )}\n        ${this.translateService.instant(gettext('This operation is irreversible.'))}\n        ${this.translateService.instant(gettext('Do you want to proceed?'))}\n      `;\n      const labels = {\n        ok: gettext('Delete')\n      };\n      await this.modalService.confirm(title, body, Status.DANGER, labels);\n      await this.repositoryService.delete(baseVersion);\n      this.alertService.success(gettext('Software deleted.'));\n      this.baseVersionsUpdated$.next();\n    } catch (ex) {\n      // only if not cancel from modal\n      if (ex) {\n        this.alertService.addServerFailure(ex);\n      }\n    }\n  }\n\n  onSelectSoftwareType(software) {\n    this.isSoftwareTypeChanged = !(\n      this.softwareTypeObject?.softwareType === software?.softwareType\n    );\n    this.softwareTypeObject = software;\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.unsubscribe();\n  }\n}\n","import { ColumnConfig, ColumnDataRecordClassName, gettext } from '@c8y/ngx-components';\nimport { BaseDeviceGridColumn } from '@c8y/ngx-components/device-grid';\n\nexport class DescriptionGridColumn extends BaseDeviceGridColumn {\n  constructor(initialColumnConfig?: ColumnConfig) {\n    super(initialColumnConfig);\n    this.name = 'description';\n    this.path = 'description';\n    this.header = gettext('Description');\n\n    this.filterable = true;\n    this.filteringConfig = {\n      schema: {\n        type: 'object',\n        properties: {\n          descriptions: {\n            type: 'array',\n            items: {\n              type: 'string'\n            }\n          }\n        }\n      },\n      form: [\n        {\n          type: 'template',\n          template: this.getLabelTemplate(gettext('Filter software by description'), {\n            showWildcardTooltip: true\n          })\n        },\n        {\n          key: 'descriptions',\n          notitle: true,\n          add: gettext('Or'),\n          items: [\n            {\n              key: 'descriptions[]',\n              notitle: true,\n              placeholder: gettext('e.g. Cloud connectivity')\n            }\n          ]\n        }\n      ],\n      getFilter(model: any): any {\n        const filter: any = {};\n        if (model.descriptions.length) {\n          filter.description = { __in: model.descriptions };\n        }\n        return filter;\n      }\n    };\n\n    this.sortable = true;\n    this.sortingConfig = {\n      pathSortingConfigs: [{ path: this.path }]\n    };\n  }\n}\n","import { ColumnConfig, gettext } from '@c8y/ngx-components';\nimport { BaseDeviceGridColumn } from '@c8y/ngx-components/device-grid';\nimport { DeviceTypeCellRendererComponent } from './device-type.cell-renderer.component';\n\nexport class DeviceTypeGridColumn extends BaseDeviceGridColumn {\n  constructor(initialColumnConfig?: ColumnConfig) {\n    super(initialColumnConfig);\n    this.name = 'deviceType';\n    this.path = 'c8yFilter.type';\n    this.header = gettext('Device type');\n    this.cellRendererComponent = DeviceTypeCellRendererComponent;\n\n    this.filterable = true;\n    this.filteringConfig = {\n      schema: {\n        type: 'object',\n        properties: {\n          types: {\n            type: 'array',\n            items: {\n              type: 'string'\n            }\n          }\n        }\n      },\n      form: [\n        {\n          type: 'template',\n          template: this.getLabelTemplate(gettext('Filter software by device type'), {\n            showWildcardTooltip: true\n          })\n        },\n        {\n          key: 'types',\n          notitle: true,\n          add: gettext('Or'),\n          items: [\n            {\n              key: 'types[]',\n              notitle: true,\n              placeholder: gettext('e.g. c8y_Linux')\n            }\n          ]\n        }\n      ],\n      getFilter(model: any): any {\n        const filter: any = {};\n        if (model.types.length) {\n          filter['c8y_Filter.type'] = { __in: model.types };\n        }\n        return filter;\n      }\n    };\n\n    this.sortable = true;\n    this.sortingConfig = {\n      pathSortingConfigs: [{ path: this.path }]\n    };\n  }\n}\n","import { ColumnConfig, gettext } from '@c8y/ngx-components';\nimport { BaseDeviceGridColumn } from '@c8y/ngx-components/device-grid';\nimport { NameCellRendererComponent } from './name.cell-renderer.component';\n\nexport class SoftwareNameGridColumn extends BaseDeviceGridColumn {\n  constructor(initialColumnConfig?: ColumnConfig) {\n    super(initialColumnConfig);\n    this.name = 'name';\n    this.path = 'name';\n    this.header = gettext('Name');\n    this.cellRendererComponent = NameCellRendererComponent;\n\n    this.filterable = true;\n    this.filteringConfig = {\n      schema: {\n        type: 'object',\n        properties: {\n          names: {\n            type: 'array',\n            items: {\n              type: 'string'\n            }\n          }\n        }\n      },\n      form: [\n        {\n          type: 'template',\n          template: this.getLabelTemplate(gettext('Filter software by name'), {\n            showWildcardTooltip: true\n          })\n        },\n        {\n          key: 'names',\n          notitle: true,\n          add: gettext('Or'),\n          items: [\n            {\n              key: 'names[]',\n              notitle: true,\n              placeholder: gettext('e.g. Cloud connectivity')\n            }\n          ]\n        }\n      ],\n      getFilter(model: any): any {\n        const filter: any = {};\n        if (model.names.length) {\n          filter.name = { __in: model.names };\n        }\n        return filter;\n      }\n    };\n\n    this.sortable = true;\n    this.sortingConfig = {\n      pathSortingConfigs: [{ path: this.path }]\n    };\n  }\n}\n","import { ColumnConfig, gettext } from '@c8y/ngx-components';\nimport { BaseDeviceGridColumn } from '@c8y/ngx-components/device-grid';\nimport { SoftwareTypeCellRendererComponent } from './software-type.cell-renderer.component';\nimport { SoftwareTypeFilteringFormRendererComponent } from './software-type.filtering-form-renderer.component';\n\nexport class SoftwareTypeGridColumn extends BaseDeviceGridColumn {\n  constructor(initialColumnConfig?: ColumnConfig) {\n    super(initialColumnConfig);\n    this.name = 'type';\n    this.path = 'softwareType';\n    this.header = gettext('Software type');\n    this.cellRendererComponent = SoftwareTypeCellRendererComponent;\n\n    this.filterable = true;\n    this.filteringFormRendererComponent = SoftwareTypeFilteringFormRendererComponent;\n    this.filteringConfig = {\n      getFilter(model) {\n        const filter: any = {};\n        if (model.softwareType) {\n          filter.softwareType = { __eq: model.softwareType };\n        }\n        return filter;\n      }\n    };\n\n    this.sortable = true;\n    this.sortingConfig = {\n      pathSortingConfigs: [{ path: this.path }]\n    };\n  }\n}\n","import { ColumnConfig, gettext } from '@c8y/ngx-components';\nimport { BaseDeviceGridColumn } from '@c8y/ngx-components/device-grid';\nimport { VersionsCellRendererComponent } from './versions.cell-renderer.component';\n\nexport class VersionsGridColumn extends BaseDeviceGridColumn {\n  constructor(initialColumnConfig?: ColumnConfig) {\n    super(initialColumnConfig);\n    this.name = 'versions';\n    this.header = gettext('Versions');\n    this.cellRendererComponent = VersionsCellRendererComponent;\n    this.sortable = false;\n  }\n}\n","import { Component, EventEmitter, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { IManagedObject, IResultList } from '@c8y/client';\nimport {\n  ActionControl,\n  AlertService,\n  BuiltInActionType,\n  DataSourceModifier,\n  gettext,\n  ModalService,\n  ServerSideDataResult,\n  Status\n} from '@c8y/ngx-components';\nimport { DeviceGridColumn, DeviceGridService } from '@c8y/ngx-components/device-grid';\nimport { TranslateService } from '@ngx-translate/core';\nimport { BsModalService, ModalOptions } from 'ngx-bootstrap/modal';\nimport { RepositoryType } from '../repository.model';\nimport { RepositoryService } from '../repository.service';\nimport { AddSoftwareModalComponent } from './add-software-modal.component';\nimport { DescriptionGridColumn } from './columns/description.grid-column';\nimport { DeviceTypeGridColumn } from './columns/device-type.grid-column';\nimport { SoftwareNameGridColumn } from './columns/name.grid-column';\nimport { SoftwareTypeGridColumn } from './columns/software-type.grid-column';\nimport { VersionsGridColumn } from './columns/versions.grid-column';\n\n@Component({\n  selector: 'c8y-software-list',\n  templateUrl: 'software-list.component.html'\n})\nexport class SoftwareListComponent implements OnInit {\n  sizeRequest: Promise<number>;\n  sizeRequestDone = false;\n  refresh$: EventEmitter<void> = new EventEmitter();\n\n  columns: DeviceGridColumn[] = [\n    new SoftwareNameGridColumn(),\n    new DescriptionGridColumn(),\n    new DeviceTypeGridColumn(),\n    new SoftwareTypeGridColumn(),\n    new VersionsGridColumn()\n  ];\n  actionControls: ActionControl[] = [];\n  serverSideDataCallback: any;\n  pagination = {\n    pageSize: 50,\n    currentPage: 1\n  };\n\n  constructor(\n    private repositoryService: RepositoryService,\n    private gridService: DeviceGridService,\n    private modalService: ModalService,\n    private bsModalService: BsModalService,\n    private translateService: TranslateService,\n    private alertService: AlertService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute\n  ) {\n    this.serverSideDataCallback = this.onDataSourceModifier.bind(this);\n    this.sizeRequest = this.repositoryService\n      .listRepositoryEntries(RepositoryType.SOFTWARE, {\n        skipDefaultOrder: true,\n        params: { pageSize: 1 }\n      })\n      .then(response => {\n        this.sizeRequestDone = true;\n        return response?.paging?.totalPages;\n      });\n  }\n\n  ngOnInit(): void {\n    this.actionControls.push({\n      type: BuiltInActionType.Edit,\n      callback: this.editSoftware.bind(this)\n    });\n    this.actionControls.push({\n      type: BuiltInActionType.Delete,\n      callback: this.deleteSoftware.bind(this)\n    });\n  }\n\n  async onDataSourceModifier(\n    dataSourceModifier: DataSourceModifier\n  ): Promise<ServerSideDataResult> {\n    let serverSideDataResult: ServerSideDataResult;\n\n    const dataRequest: Promise<IResultList<IManagedObject>> =\n      this.repositoryService.listRepositoryEntries(RepositoryType.SOFTWARE, {\n        query: this.gridService.getQueryObj(dataSourceModifier.columns),\n        skipDefaultOrder: true,\n        params: {\n          pageSize: dataSourceModifier.pagination.pageSize,\n          currentPage: dataSourceModifier.pagination.currentPage\n        }\n      });\n\n    const filtererdSizeRequest: Promise<number> = this.repositoryService\n      .listRepositoryEntries(RepositoryType.SOFTWARE, {\n        skipDefaultOrder: true,\n        query: this.gridService.getQueryObj(dataSourceModifier.columns),\n        params: { pageSize: 1 }\n      })\n      .then(response => response?.paging?.totalPages);\n\n    const [dataResponse, size, filteredSize] = await Promise.all([\n      dataRequest,\n      this.sizeRequest,\n      filtererdSizeRequest\n    ]);\n\n    const { res, data, paging } = dataResponse;\n\n    serverSideDataResult = {\n      res,\n      data,\n      paging,\n      filteredSize,\n      size\n    };\n\n    return serverSideDataResult;\n  }\n\n  addSoftware() {\n    const config: ModalOptions<AddSoftwareModalComponent> = {\n      class: 'modal-sm',\n      ignoreBackdropClick: true\n    };\n    const modalRef = this.bsModalService.show(AddSoftwareModalComponent, config);\n    modalRef.content.saved.subscribe(savedSoftware => this.editSoftware(savedSoftware));\n  }\n\n  editSoftware(software: Partial<IManagedObject>) {\n    this.router.navigate([software.id], { relativeTo: this.activatedRoute });\n  }\n\n  async deleteSoftware(software: IManagedObject) {\n    try {\n      const title = gettext('Delete software');\n      const body = `\n        ${this.translateService.instant(\n          gettext('You are about to delete software \"{{ name }}\" with all its versions.'),\n          { name: software.name }\n        )}\n        ${this.translateService.instant(gettext('This operation is irreversible.'))}\n        ${this.translateService.instant(gettext('Do you want to proceed?'))}\n      `;\n      const labels = {\n        ok: gettext('Delete')\n      };\n      await this.modalService.confirm(title, body, Status.DANGER, labels);\n      await this.repositoryService.delete(software);\n      this.alertService.success(gettext('Software deleted.'));\n      this.refresh$.next();\n    } catch (ex) {\n      // only if not cancel from modal\n      if (ex) {\n        this.alertService.addServerFailure(ex);\n      }\n    }\n  }\n\n  trackByName(_index, column: DeviceGridColumn): string {\n    return column.name;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CoreModule,\n  FormsModule,\n  gettext,\n  HOOK_NAVIGATOR_NODES,\n  HOOK_ROUTE,\n  OperationRealtimeService,\n  Route,\n  ViewContext\n} from '@c8y/ngx-components';\nimport { SingleOperationDetailsModule } from '@c8y/ngx-components/operations/single-operation-details';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { PopoverModule } from 'ngx-bootstrap/popover';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { ConfigurationFilterPipe } from './configuration-device-tab/configuration-filter.pipe';\nimport { ConfigurationPreviewComponent } from './configuration-device-tab/configuration-preview.component';\nimport { DeviceConfigurationListComponent } from './configuration-device-tab/device-configuration-list.component';\nimport { DeviceConfigurationComponent } from './configuration-device-tab/device-configuration.component';\nimport { DeviceConfigurationGuard } from './configuration-device-tab/device-configuration.guard';\nimport { DeviceConfigurationService } from './configuration-device-tab/device-configuration.service';\nimport { SaveToRepositoryComponent } from './configuration-device-tab/save-to-repository.component';\nimport { SourceCodePreviewComponent } from './configuration-device-tab/source-code-preview.component';\nimport { TextBasedConfigurationComponent } from './configuration-device-tab/text-based-configuration.component';\nimport { ConfigurationDetailComponent } from './configuration/configuration-detail.component';\nimport { ConfigurationListComponent } from './configuration/configuration-list.component';\nimport { FileDownloadComponent } from './file-download/file-download.component';\nimport { FirmwareDeviceTabComponent } from './firmware-device-tab/firmware-device-tab.component';\nimport { FirmwareDeviceTabGuard } from './firmware-device-tab/firmware-device-tab.guard';\nimport { AddFirmwareModalComponent } from './firmware/add-firmware-modal.component';\nimport { AddFirmwarePatchModalComponent } from './firmware/add-firmware-patch-modal.component';\nimport { FirmwareDetailsComponent } from './firmware/firmware-details.component';\nimport { FirmwareListComponent } from './firmware/firmware-list.component';\nimport { RepositoryNavigationFactory } from './repository-navigation-factory';\nimport { RepositoryService } from './repository.service';\nimport { RepositorySelectModalComponent } from './select-modal/repository-select-modal.component';\nimport { AdvancedSoftwareService } from './software-device-tab/advanced-software.service';\nimport { DeviceSoftwareChangesComponent } from './software-device-tab/device-software-changes.component';\nimport { DeviceSoftwareListComponent } from './software-device-tab/device-software-list.component';\nimport { InstalledSoftwareComponent } from './software-device-tab/installed-software.component';\nimport { SoftwareDeviceTabComponent } from './software-device-tab/software-device-tab.component';\nimport { SoftwareDeviceTabGuard } from './software-device-tab/software-device-tab.guard';\nimport { AddSoftwareModalComponent } from './software/add-software-modal.component';\nimport { DeviceTypeCellRendererComponent } from './software/columns/device-type.cell-renderer.component';\nimport { NameCellRendererComponent } from './software/columns/name.cell-renderer.component';\nimport { SoftwareTypeCellRendererComponent } from './software/columns/software-type.cell-renderer.component';\nimport { SoftwareTypeFilteringFormRendererComponent } from './software/columns/software-type.filtering-form-renderer.component';\nimport { VersionsCellRendererComponent } from './software/columns/versions.cell-renderer.component';\nimport { SoftwareDetailsComponent } from './software/software-details.component';\nimport { SoftwareListComponent } from './software/software-list.component';\nimport { SoftwareTypeComponent } from './software/software-type.component';\n\n@NgModule({\n  imports: [\n    CoreModule,\n    FormsModule,\n    RouterModule,\n    SingleOperationDetailsModule,\n    BsDropdownModule.forRoot(),\n    TooltipModule,\n    PopoverModule,\n    TabsModule.forRoot()\n  ],\n  exports: [SoftwareTypeComponent, FileDownloadComponent],\n  declarations: [\n    FirmwareListComponent,\n    FirmwareDetailsComponent,\n    AddFirmwareModalComponent,\n    AddFirmwarePatchModalComponent,\n    SoftwareListComponent,\n    SoftwareDetailsComponent,\n    AddSoftwareModalComponent,\n    SoftwareTypeComponent,\n    FirmwareDeviceTabComponent,\n    SoftwareDeviceTabComponent,\n    InstalledSoftwareComponent,\n    RepositorySelectModalComponent,\n    DeviceSoftwareListComponent,\n    DeviceSoftwareChangesComponent,\n    ConfigurationListComponent,\n    ConfigurationDetailComponent,\n    DeviceConfigurationComponent,\n    DeviceConfigurationListComponent,\n    SourceCodePreviewComponent,\n    ConfigurationPreviewComponent,\n    ConfigurationFilterPipe,\n    SaveToRepositoryComponent,\n    TextBasedConfigurationComponent,\n    FileDownloadComponent,\n    NameCellRendererComponent,\n    SoftwareTypeCellRendererComponent,\n    SoftwareTypeFilteringFormRendererComponent,\n    DeviceTypeCellRendererComponent,\n    VersionsCellRendererComponent\n  ],\n  entryComponents: [\n    FirmwareListComponent,\n    FirmwareDetailsComponent,\n    AddFirmwareModalComponent,\n    AddFirmwarePatchModalComponent,\n    SoftwareListComponent,\n    SoftwareDetailsComponent,\n    AddSoftwareModalComponent,\n    FirmwareDeviceTabComponent,\n    SoftwareDeviceTabComponent,\n    DeviceSoftwareListComponent,\n    RepositorySelectModalComponent,\n    DeviceSoftwareChangesComponent,\n    ConfigurationListComponent,\n    ConfigurationDetailComponent,\n    DeviceConfigurationComponent,\n    SaveToRepositoryComponent,\n    TextBasedConfigurationComponent\n  ],\n  providers: [\n    RepositoryService,\n    OperationRealtimeService,\n    DeviceConfigurationService,\n    FirmwareDeviceTabGuard,\n    SoftwareDeviceTabGuard,\n    DeviceConfigurationGuard,\n    AdvancedSoftwareService,\n    {\n      provide: HOOK_NAVIGATOR_NODES,\n      useClass: RepositoryNavigationFactory,\n      multi: true\n    },\n    {\n      provide: HOOK_ROUTE,\n      useValue: [\n        {\n          path: 'firmware',\n          component: FirmwareListComponent\n        },\n        {\n          path: 'firmware/:id',\n          component: FirmwareDetailsComponent\n        },\n        {\n          context: ViewContext.Device,\n          path: 'firmware',\n          component: FirmwareDeviceTabComponent,\n          label: gettext('Firmware'),\n          icon: 'c8y-firmware',\n          priority: 500,\n          canActivate: [FirmwareDeviceTabGuard]\n        },\n        {\n          path: 'software',\n          component: SoftwareListComponent\n        },\n        {\n          path: 'software/:id',\n          component: SoftwareDetailsComponent\n        },\n        {\n          context: ViewContext.Device,\n          path: 'software',\n          component: SoftwareDeviceTabComponent,\n          label: gettext('Software'),\n          icon: 'c8y-tools',\n          priority: 499,\n          canActivate: [SoftwareDeviceTabGuard]\n        },\n        {\n          path: 'configuration',\n          component: ConfigurationListComponent\n        },\n        {\n          context: ViewContext.Device,\n          path: 'device-configuration',\n          component: DeviceConfigurationComponent,\n          label: gettext('Configuration'),\n          icon: 'gears',\n          priority: 600,\n          canActivate: [DeviceConfigurationGuard]\n        }\n      ] as Route[],\n      multi: true\n    }\n  ]\n})\nexport class RepositoryModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {FileDownloadComponent as ɵb} from './file-download/file-download.component';\nexport {AdvancedSoftwareService as ɵc} from './software-device-tab/advanced-software.service';\nexport {DeviceTypeCellRendererComponent as ɵg} from './software/columns/device-type.cell-renderer.component';\nexport {NameCellRendererComponent as ɵd} from './software/columns/name.cell-renderer.component';\nexport {SoftwareTypeCellRendererComponent as ɵe} from './software/columns/software-type.cell-renderer.component';\nexport {SoftwareTypeFilteringFormRendererComponent as ɵf} from './software/columns/software-type.filtering-form-renderer.component';\nexport {VersionsCellRendererComponent as ɵh} from './software/columns/versions.cell-renderer.component';\nexport {SoftwareTypeComponent as ɵa} from './software/software-type.component';"],"names":["_map","filter"],"mappings":"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"}