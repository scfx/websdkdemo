{"version":3,"file":"c8y-ngx-components-operations-stepper-bulk-type-software.js","sources":["../../operations/stepper-bulk-type-software/select-software-step.component.ts","../../operations/stepper-bulk-type-software/confirm-software-selection-step.component.ts","../../operations/stepper-bulk-type-software/stepper-bulk-type-software.component.ts","../../operations/stepper-bulk-type-software/stepper-bulk-type-software.module.ts","../../operations/stepper-bulk-type-software/c8y-ngx-components-operations-stepper-bulk-type-software.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, EventEmitter, Output, QueryList, ViewChildren } from '@angular/core';\nimport { IManagedObject, IResultList } from '@c8y/client';\nimport { gettext, ListItemRadioComponent, memoize } from '@c8y/ngx-components';\nimport { RepositoryService, RepositoryType } from '@c8y/ngx-components/repository';\nimport { TranslateService } from '@ngx-translate/core';\nimport { get, isEqual, property, uniqWith } from 'lodash-es';\nimport { BehaviorSubject, combineLatest, from, Observable, Subscription } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, shareReplay, switchMap } from 'rxjs/operators';\nimport { ISelectedSoftware } from './select-software.model';\n\n@Component({\n  selector: 'c8y-select-software-step',\n  templateUrl: 'select-software-step.component.html'\n})\nexport class SelectSoftwareStepComponent {\n  @Output() software: EventEmitter<ISelectedSoftware> = new EventEmitter<ISelectedSoftware>();\n  textFilter$: BehaviorSubject<string> = new BehaviorSubject('');\n  deviceType$: BehaviorSubject<string> = new BehaviorSubject('');\n  deviceTypes = [];\n  selectedDeviceType = { name: '' };\n  isLegacy = this.repositoryService.isLegacyEntry.bind(this.repositoryService);\n  software$: Observable<IResultList<IManagedObject>> = combineLatest(\n    this.textFilter$,\n    this.deviceType$\n  ).pipe(\n    switchMap(([name, deviceType]) => this.getSoftware(name, deviceType)),\n    shareReplay(1)\n  );\n  readonly NO_DEVICE_TYPE_AVAILABLE = gettext('No device type available');\n  @ViewChildren(ListItemRadioComponent) radioButtons: QueryList<ListItemRadioComponent>;\n\n  private deviceTypeSubscription: Subscription;\n\n  constructor(\n    private repositoryService: RepositoryService,\n    private translate: TranslateService\n  ) {\n    this.loadDeviceTypes();\n  }\n\n  @memoize(property('id'))\n  getBaseVersionsCount$(software: IManagedObject): Observable<number> {\n    return this.repositoryService.getBaseVersionsCount$(software).pipe(shareReplay(1));\n  }\n\n  @memoize(property('id'))\n  getVersions(software: IManagedObject) {\n    return this.repositoryService.listAllVersions(software);\n  }\n\n  getDeviceTypeTitle(software: IManagedObject): string {\n    return get(\n      software,\n      'c8y_Filter.type',\n      this.translate.instant(this.NO_DEVICE_TYPE_AVAILABLE));\n  }\n\n  loadDeviceTypes() {\n    this.deviceTypeSubscription = this.deviceType$\n      .pipe(\n        debounceTime(300),\n        distinctUntilChanged(),\n        switchMap(searchStr => {\n          const query = { 'c8y_Filter.type': `*${searchStr}*` };\n          return from(\n            this.repositoryService.listRepositoryEntries(RepositoryType.SOFTWARE, { query })\n          );\n        })\n      )\n      .subscribe(result => {\n        const { data } = result;\n        this.deviceTypes = uniqWith(data.map(val => ({ name: val.c8y_Filter.type })), isEqual);\n      });\n  }\n\n  ngOnDestroy() {\n    this.deviceTypeSubscription.unsubscribe();\n  }\n\n  resetSelection() {\n    this.radioButtons.map(radio => radio.reset());\n  }\n\n  selectSoftware({ option, software }) {\n    software.selectedId = option.id;\n    option.action = 'install';\n    this.emitSoftware({ option, software });\n  }\n\n  emitSoftware({ option, software }) {\n    const emitData = Object.assign(\n      {},\n      { software },\n      { version: option },\n      { action: option.action }\n    );\n    this.software.emit(emitData);\n  }\n\n  private getSoftware(name?: string, deviceType?: string) {\n    const query: any = name ? { name: `*${name}*` } : {};\n    if (deviceType) {\n      query.__or = [{ 'c8y_Filter.type': deviceType }, { __not: { __has: `c8y_Filter.type` } }];\n    }\n    return this.repositoryService.listRepositoryEntries(RepositoryType.SOFTWARE, { query });\n  }\n}\n","import { Component, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { gettext } from '@c8y/ngx-components';\nimport { has, uniq } from 'lodash-es';\nimport { ISelectedSoftware } from './select-software.model';\n\n@Component({\n  selector: 'c8y-confirm-software-selection-step',\n  templateUrl: 'confirm-software-selection-step.component.html'\n})\nexport class ConfirmSoftwareSelectionStepComponent implements OnChanges {\n  @Input() selectedItems: ISelectedSoftware[];\n  title: string;\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.selectedItems) {\n      const deviceTypes: string[] = this.deviceTypes;\n      this.title = deviceTypes && deviceTypes.length ? deviceTypes.join(', ') : gettext('Undefined`device type`');\n    }\n  }\n\n  get selectedToInstall() {\n    return this.selectedItems.filter(software => software.action === 'install');\n  }\n\n  get selectedToDelete() {\n    return this.selectedItems.filter(software => software.action === 'delete');\n  }\n\n  get deviceTypes() {\n    return uniq(\n      this.selectedItems\n        .filter(val => has(val, ['software', 'c8y_Filter', 'type']))\n        .map(val => val.software.c8y_Filter.type)\n    );\n  }\n}\n","import { CdkStep } from '@angular/cdk/stepper';\nimport { Component, ViewChild } from '@angular/core';\nimport { IOperation } from '@c8y/client';\nimport { C8yStepper, gettext, ModalService, Status } from '@c8y/ngx-components';\nimport { TranslateService } from '@ngx-translate/core';\nimport { uniq } from 'lodash-es';\nimport { BaseStepperComponent } from '@c8y/ngx-components/operations/bulk-operation-stepper';\nimport { OperationDetails } from '@c8y/ngx-components/operations/bulk-operations-service';\nimport { SelectSoftwareStepComponent } from './select-software-step.component';\nimport { ISelectedSoftware, ISoftwareUpdateOperationPrototype } from './select-software.model';\n\n@Component({\n  selector: 'c8y-stepper-bulk-type-software',\n  templateUrl: 'stepper-bulk-type-software.component.html'\n})\nexport class StepperBulkTypeSoftwareComponent extends BaseStepperComponent {\n  readonly descriptionTemplateSingle: string = gettext(\n    'Update software to: {{ name }} (version {{ version }})'\n  );\n  readonly descriptionTemplateOneOther: string = gettext(\n    'Update software to: {{ name }} (version {{ version }}) and one other'\n  );\n  readonly descriptionTemplateMultiple: string = gettext(\n    'Update software to: {{ name }} (version {{ version }}) and {{ count }} others'\n  );\n\n  selectedSoftware: ISelectedSoftware[] = [];\n  @ViewChild(SelectSoftwareStepComponent, { static: false })\n  selectSoftware: SelectSoftwareStepComponent;\n\n  constructor(private modal: ModalService, private translate: TranslateService) {\n    super();\n  }\n\n  onSoftwareSelected(selectedItem) {\n    this.selectedSoftware = this.selectedSoftware.filter(\n      item => item.software.id !== selectedItem.software.id\n    );\n    this.selectedSoftware.push(selectedItem);\n  }\n\n  async confirmSoftwareSelection($event: { stepper: C8yStepper; step: CdkStep }) {\n    const deviceTypes: string[] = this.getUniqueDeviceTypes();\n    this.deviceTypes = deviceTypes;\n    if (deviceTypes.length > 1) {\n      try {\n        await this.modal.confirm(\n          gettext('Selected software for various device types'),\n          gettext('Operation may fail due to unsupported software. Do you want to proceed?'),\n          Status.WARNING,\n          { ok: gettext('Confirm'), cancel: gettext('Cancel') }\n        );\n        $event.stepper.next();\n      } catch (ex) {\n        this.selectedSoftware = [];\n        this.selectSoftware.resetSelection();\n      }\n    } else {\n      $event.stepper.next();\n    }\n  }\n\n  protected retrieveOperationPrototype(): OperationDetails {\n    const softwareList: ISoftwareUpdateOperationPrototype[] = this.selectedSoftware.map(item => ({\n      name: item.software.name,\n      version: item.version.c8y_Software.version,\n      url: item.version.c8y_Software.url,\n      action: item.action\n    }));\n\n    const interpolationParams: object = {\n      name: softwareList[0].name,\n      version: softwareList[0].version,\n      count: softwareList.length - 1\n    };\n    let description: string;\n    switch (softwareList.length) {\n      case 1:\n        description = this.translate.instant(this.descriptionTemplateSingle, interpolationParams);\n        break;\n      case 2:\n        description = this.translate.instant(this.descriptionTemplateOneOther, interpolationParams);\n        break;\n      default:\n        description = this.translate.instant(this.descriptionTemplateMultiple, interpolationParams);\n    }\n\n    return {\n      name: gettext('Software update'),\n      prototype: ({\n        description,\n        c8y_SoftwareUpdate: softwareList\n      } as unknown) as IOperation\n    };\n  }\n\n  private getUniqueDeviceTypes(): string[] {\n    return uniq(\n      this.selectedSoftware\n        .map(item => item.software.c8y_Filter && item.software.c8y_Filter.type)\n        .filter(type => !!type)\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { CoreModule, FormsModule, gettext } from '@c8y/ngx-components';\nimport { RepositoryModule } from '@c8y/ngx-components/repository';\nimport { BulkOperationStepperModule } from '@c8y/ngx-components/operations/bulk-operation-stepper';\nimport {\n  HOOK_LIST_BULK_TYPE,\n  baseUrl,\n  BulkOperationType\n} from '@c8y/ngx-components/operations/bulk-operations-service';\n\nimport { ConfirmSoftwareSelectionStepComponent } from './confirm-software-selection-step.component';\nimport { SelectSoftwareStepComponent } from './select-software-step.component';\nimport { StepperBulkTypeSoftwareComponent } from './stepper-bulk-type-software.component';\n\n/** Module for the 'Software update' operation type stepper */\n@NgModule({\n  declarations: [\n    StepperBulkTypeSoftwareComponent,\n    ConfirmSoftwareSelectionStepComponent,\n    SelectSoftwareStepComponent\n  ],\n  imports: [\n    CoreModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BulkOperationStepperModule,\n    RepositoryModule\n  ],\n  providers: [\n    {\n      provide: HOOK_LIST_BULK_TYPE,\n      useValue: {\n        type: BulkOperationType.SOFTWARE,\n        c8yIcon: 'c8y-tools',\n        name: gettext('Software update'),\n        path: `${baseUrl}software`,\n        component: StepperBulkTypeSoftwareComponent,\n        fragments: ['c8y_SoftwareList', 'c8y_SoftwareUpdate'],\n        selected: false\n      },\n      multi: true\n    }\n  ],\n  entryComponents: [StepperBulkTypeSoftwareComponent],\n  exports: [StepperBulkTypeSoftwareComponent]\n})\nexport class StepperBulkTypeSoftwareModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}