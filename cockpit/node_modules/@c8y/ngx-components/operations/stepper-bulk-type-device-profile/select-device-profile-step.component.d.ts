import { EventEmitter } from '@angular/core';
import { Observable, BehaviorSubject } from 'rxjs';
import { IResultList, IManagedObject } from '@c8y/client';
import { TranslateService } from '@ngx-translate/core';
import { DeviceProfileService } from '@c8y/ngx-components/device-profile';
import * as ɵngcc0 from '@angular/core';
export declare class SelectDeviceProfileStepComponent {
    private deviceProfileService;
    private translate;
    deviceProfile: EventEmitter<IManagedObject>;
    textFilter$: BehaviorSubject<string>;
    deviceType$: BehaviorSubject<string>;
    readonly DEVICE_TYPE_NOT_DEFINED: any;
    deviceTypes: any[];
    selectedDeviceType: {
        name: string;
    };
    deviceProfile$: Observable<IResultList<IManagedObject>>;
    private deviceTypeSubscription;
    constructor(deviceProfileService: DeviceProfileService, translate: TranslateService);
    loadDeviceTypes(): void;
    ngOnDestroy(): void;
    selectDeviceProfile(deviceProfile: IManagedObject): void;
    getDeviceTypeTitle(deviceProfile: IManagedObject): string;
    private getDeviceProfiles;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<SelectDeviceProfileStepComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<SelectDeviceProfileStepComponent, "c8y-select-device-profile-step", never, {}, { "deviceProfile": "deviceProfile"; }, never, never>;
}

//# sourceMappingURL=select-device-profile-step.component.d.ts.map