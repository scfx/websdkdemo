{"__symbolic":"module","version":4,"metadata":{"ISelectedSoftware":{"__symbolic":"interface"},"ISoftwareUpdateOperationPrototype":{"__symbolic":"interface"},"SelectSoftwareStepComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":10,"character":1},"arguments":[{"selector":"c8y-select-software-step","template":"<div class=\"card-block p-t-0 overflow-visible flex-no-shrink separator-bottom col-xs-12\">\n  <div class=\"row p-b-16\">\n    <div class=\"col-md-8 col-md-offset-2 col-lg-6 col-lg-offset-3\">\n      <h4 class=\"text-center m-b-16\">{{ 'Select software' | translate }}</h4>\n      <div class=\"row\">\n        <div class=\"col-md-6\">\n          <div class=\"input-group input-group-search\">\n            <input\n              type=\"search\"\n              class=\"form-control\"\n              title=\"{{ 'Filter software…' | translate }}\"\n              placeholder=\"{{ 'Filter software…' | translate }}\"\n              [ngModel]=\"textFilter$ | async\"\n              (ngModelChange)=\"textFilter$.next($event)\"\n            />\n            <span class=\"input-group-addon\">\n              <i c8yIcon=\"filter\" *ngIf=\"(textFilter$ | async).length === 0\"></i>\n              <i\n                c8yIcon=\"times\"\n                class=\"text-muted\"\n                *ngIf=\"(textFilter$ | async).length > 0\"\n                (click)=\"textFilter$.next('')\"\n              ></i>\n            </span>\n          </div>\n        </div>\n        <div class=\"col-xs-12 p-b-8 visible-xs visible-sm\"></div>\n        <div class=\"col-md-6\">\n          <c8y-form-group class=\"m-0\">\n            <c8y-typeahead\n              name=\"deviceType\"\n              [(ngModel)]=\"selectedDeviceType\"\n              placeholder=\"{{ 'Type to filter device types…' | translate }}\"\n              (onSearch)=\"deviceType$.next($event)\"\n              [allowFreeEntries]=\"false\"\n            >\n              <c8y-li\n                class=\"p-l-8 p-r-8 c8y-list__item--link\"\n                (click)=\"selectedDeviceType = {name: ''}; deviceType$.next('')\"\n              >\n                <span>{{'All device types' | translate }}</span>\n              </c8y-li>\n              <c8y-li\n              *ngFor=\"let deviceType of deviceTypes\"\n              class=\"p-l-8 p-r-8 c8y-list__item--link\"\n              (click)=\"selectedDeviceType = deviceType; deviceType$.next(deviceType.name)\"\n              [active]=\"selectedDeviceType === deviceType\"\n              >\n              <c8y-highlight\n              [text]=\"deviceType.name\"\n              [pattern]=\"deviceType$ | async\"\n              ></c8y-highlight>\n              </c8y-li>\n            </c8y-typeahead>\n            <c8y-messages\n            ><c8y-message\n              name=\"notExisting\"\n              [text]=\"'Select one of the existing device types.' | translate\"\n            ></c8y-message>\n            </c8y-messages>\n          </c8y-form-group>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<div class=\"col-xs-12 flex-grow no-gutter\">\n  <div class=\"card-inner-scroll fit-h\">\n    <div class=\"card-block p-t-0 p-b-0\">\n      <c8y-list-group [ngClass]=\"{ 'dd-low': (software$ | async)?.data.length < 10 }\">\n        <c8y-li *c8yFor=\"let software of software$ | async; loadMore: 'auto'\">\n          <c8y-li-icon>\n            <i c8yIcon=\"c8y-tools\"></i>\n          </c8y-li-icon>\n          <c8y-li-body class=\"content-flex-60\">\n            <div class=\"col-5\">\n              <div class=\"text-truncate\" title=\"{{ software.name }}\">\n                {{ software.name }}\n              </div>\n            </div>\n            <div class=\"col-3\">\n              <div class=\"text-truncate\" title=\"{{ 'Device type' | translate }}: {{ getDeviceTypeTitle(software) }}\">\n                <span class=\"text-label-small m-r-8\" translate>\n                  Device type\n                </span>\n                <span *ngIf=\"software.c8y_Filter?.type; else noType\">\n                  {{ software.c8y_Filter?.type }}\n                </span>\n                <ng-template #noType>\n                  <small><em class=\"text-muted\" translate>Undefined`device type`</em></small>\n                </ng-template>\n              </div>\n            </div>\n            <div class=\"col-2\">\n              <span *ngIf=\"isLegacy(software)\" class=\"label label-warning flex-item-right-sm\">\n                <span translate>Legacy</span>\n              </span>\n              <span *ngIf=\"!isLegacy(software)\">\n                <span *ngIf=\"(getBaseVersionsCount$(software) | async) === null\">\n                  <span class=\"label label-info\">\n                    <i c8yIcon=\"circle-o-notch\" class=\"icon-spin\"></i>\n                  </span>\n                </span>\n                <span *ngIf=\"(getBaseVersionsCount$(software) | async) !== null\">\n                  <span [ngPlural]=\"getBaseVersionsCount$(software) | async\">\n                    <ng-template ngPluralCase=\"=0\">\n                      <span class=\"label label-default flex-item-right-sm\">\n                        <span translate>No versions</span>\n                      </span>\n                    </ng-template>\n                    <ng-template ngPluralCase=\"=1\">\n                      <span class=\"label label-info\"><span translate>1 version</span></span>\n                    </ng-template>\n                    <ng-template ngPluralCase=\"other\">\n                      <span class=\"label label-info\">\n                        <span\n                          ngNonBindable\n                          translate\n                          [translateParams]=\"{\n                            count: (getBaseVersionsCount$(software) | async) || ''\n                          }\"\n                          >{{ count }} versions</span\n                        >\n                      </span>\n                    </ng-template>\n                  </span>\n                </span>\n              </span>\n            </div>\n          </c8y-li-body>\n          <c8y-li-collapse>\n            <c8y-list-group>\n              <c8y-li *c8yFor=\"let option of getVersions(software) | async\">\n                <c8y-li-radio\n                  [name]=\"software.id\"\n                  (onSelect)=\"selectSoftware({ option: option, software: software })\"\n                ></c8y-li-radio>\n                <c8y-li-body class=\"content-flex-40 p-r-16\">\n                  <div class=\"col-4\">\n                    {{ option.c8y_Software.version }}\n                  </div>\n                  <div class=\"col-5\">\n                    <div class=\"text-truncate\" title=\"{{ option.c8y_Software.url }}\">\n                      <span class=\"text-label-small m-r-4\" translate> File </span>\n                      <span>{{ option.c8y_Software.url }}</span>\n                    </div>\n                  </div>\n                  <div class=\"col-3\" *ngIf=\"option.id === software.selectedId\">\n                    <div class=\"c8y-select-wrapper d-inline-block\" style=\"margin: -4px 0;\">\n                      <select\n                        id=\"action\"\n                        class=\"form-control input-sm\"\n                        [(ngModel)]=\"option.action\"\n                        (change)=\"emitSoftware({ option: option, software: software })\"\n                      >\n                        <option [ngValue]=\"'install'\">{{ 'Install/update`software`' | translate }}</option>\n                        <option [ngValue]=\"'delete'\">{{ 'Remove`software`' | translate }}</option>\n                      </select>\n                      <span></span>\n                    </div>\n                  </div>\n                </c8y-li-body>\n              </c8y-li>\n            </c8y-list-group>\n          </c8y-li-collapse>\n        </c8y-li>\n      </c8y-list-group>\n    </div>\n  </div>\n</div>\n"}]}],"members":{"software":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":15,"character":3}}]}],"radioButtons":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChildren","line":29,"character":3},"arguments":[{"__symbolic":"reference","module":"@c8y/ngx-components","name":"ListItemRadioComponent","line":29,"character":16}]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@c8y/ngx-components/repository","name":"RepositoryService","line":34,"character":31},{"__symbolic":"reference","module":"@ngx-translate/core","name":"TranslateService","line":35,"character":23}]}],"getBaseVersionsCount$":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@c8y/ngx-components","name":"memoize","line":40,"character":3},"arguments":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"lodash-es","name":"property","line":40,"character":11},"arguments":["id"]}]}]}],"getVersions":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@c8y/ngx-components","name":"memoize","line":45,"character":3},"arguments":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"lodash-es","name":"property","line":45,"character":11},"arguments":["id"]}]}]}],"getDeviceTypeTitle":[{"__symbolic":"method"}],"loadDeviceTypes":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"resetSelection":[{"__symbolic":"method"}],"selectSoftware":[{"__symbolic":"method"}],"emitSoftware":[{"__symbolic":"method"}],"getSoftware":[{"__symbolic":"method"}]}},"ConfirmSoftwareSelectionStepComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"c8y-confirm-software-selection-step","template":"<div class=\"card-block p-t-0 flex-no-shrink separator-bottom col-xs-12\">\n  <div class=\"row p-b-16\">\n    <div class=\"col-md-6 col-md-offset-3 col-lg-4 col-lg-offset-4\">\n      <h4 class=\"text-center text-gray\">{{ 'Confirm selection' | translate }}</h4>\n    </div>\n  </div>\n</div>\n<div class=\"col-xs-12 flex-grow no-gutter\">\n  <div class=\"card-inner-scroll fit-h\">\n    <div class=\"card-block\">\n      <div class=\"row p-b-16\">\n        <div class=\"col-md-6 col-md-offset-3 col-lg-4 col-lg-offset-4\">\n          <div class=\"text-truncate\" title=\"{{ this.title }}\">\n            <span class=\"legend form-block\" translate>Device type</span>\n            <ng-container *ngIf=\"deviceTypes.length > 0; else noType\">\n              <span *ngFor=\"let deviceType of deviceTypes; let last = last\">{{ deviceType }}{{ last ? '' : ', ' }}</span>\n            </ng-container>\n            <ng-template #noType>\n              <em class=\"text-muted\" translate>Undefined`device type`</em>\n            </ng-template>\n          </div>\n        </div>\n      </div>\n      <div class=\"row p-b-16\" *ngIf=\"selectedToInstall.length\">\n        <div class=\"col-md-6 col-md-offset-3 col-lg-4 col-lg-offset-4\">\n          <span class=\"legend form-block\" translate>Installations/updates`software`</span>\n          <c8y-list-group>\n            <c8y-li *ngFor=\"let selectedItem of selectedToInstall\">\n              <c8y-li-icon>\n                <i c8yIcon=\"c8y-tools\"></i>\n              </c8y-li-icon>\n              <c8y-li-body class=\"content-flex-10\">\n                <div class=\"col-6 text-truncate\" title=\"{{ selectedItem.software.name }}\">\n                  {{ selectedItem.software.name }}\n                </div>\n                <div class=\"col-6 text-right\">\n                  <span class=\"text-label-small m-r-4\" translate>\n                    Version\n                  </span>\n                  <span>\n                    {{ selectedItem.version.c8y_Software.version }}\n                  </span>\n                </div>\n              </c8y-li-body>\n            </c8y-li>\n          </c8y-list-group>\n        </div>\n      </div>\n      <div class=\"row p-b-16\" *ngIf=\"selectedToDelete.length\">\n        <div class=\"col-md-6 col-md-offset-3 col-lg-4 col-lg-offset-4\">\n          <span class=\"legend form-block\" translate>Removals`software`</span>\n          <c8y-list-group>\n            <c8y-li *ngFor=\"let selectedItem of selectedToDelete\">\n              <c8y-li-icon>\n                <i c8yIcon=\"c8y-tools\"></i>\n              </c8y-li-icon>\n              <c8y-li-body class=\"content-flex-10\">\n                <div class=\"col-6\">\n                  {{ selectedItem.software.name }}\n                </div>\n                <div class=\"col-6 text-right\">\n                  <span class=\"text-label-small m-r-8\" translate>\n                    Version\n                  </span>\n                  <span>\n                    {{ selectedItem.version.c8y_Software.version }}\n                  </span>\n                </div>\n              </c8y-li-body>\n            </c8y-li>\n          </c8y-list-group>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n"}]}],"members":{"selectedItems":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":10,"character":3}}]}],"ngOnChanges":[{"__symbolic":"method"}]}},"StepperBulkTypeSoftwareModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":17,"character":1},"arguments":[{"declarations":[{"__symbolic":"reference","name":"StepperBulkTypeSoftwareComponent"},{"__symbolic":"reference","name":"ConfirmSoftwareSelectionStepComponent"},{"__symbolic":"reference","name":"SelectSoftwareStepComponent"}],"imports":[{"__symbolic":"reference","module":"@c8y/ngx-components","name":"CoreModule","line":24,"character":4},{"__symbolic":"reference","module":"@c8y/ngx-components","name":"FormsModule","line":25,"character":4},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule","line":26,"character":4},{"__symbolic":"reference","module":"@c8y/ngx-components/operations/bulk-operation-stepper","name":"BulkOperationStepperModule","line":27,"character":4},{"__symbolic":"reference","module":"@c8y/ngx-components/repository","name":"RepositoryModule","line":28,"character":4}],"providers":[{"provide":{"__symbolic":"reference","module":"@c8y/ngx-components/operations/bulk-operations-service","name":"HOOK_LIST_BULK_TYPE","line":32,"character":15},"useValue":{"type":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@c8y/ngx-components/operations/bulk-operations-service","name":"BulkOperationType","line":34,"character":14},"member":"SOFTWARE"},"c8yIcon":"c8y-tools","name":{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@c8y/ngx-components","name":"gettext","line":36,"character":14},"arguments":["Software update"]},"path":{"__symbolic":"binop","operator":"+","left":{"__symbolic":"reference","module":"@c8y/ngx-components/operations/bulk-operations-service","name":"baseUrl","line":37,"character":17},"right":"software"},"component":{"__symbolic":"reference","name":"StepperBulkTypeSoftwareComponent"},"fragments":["c8y_SoftwareList","c8y_SoftwareUpdate"],"selected":false},"multi":true}],"entryComponents":[{"__symbolic":"reference","name":"StepperBulkTypeSoftwareComponent"}],"exports":[{"__symbolic":"reference","name":"StepperBulkTypeSoftwareComponent"}]}]}],"members":{}},"StepperBulkTypeSoftwareComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"@c8y/ngx-components/operations/bulk-operation-stepper","name":"BaseStepperComponent","line":15,"character":54},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":11,"character":1},"arguments":[{"selector":"c8y-stepper-bulk-type-software","template":"<c8y-bulk-operation-stepper>\n  <ng-container\n    *customStep=\"\n      'Select software' | translate; \n      completed: !!selectedSoftware.length;\n      buttonsDisabled: !selectedSoftware.length; \n      onNext: confirmSoftwareSelection.bind(this)\"\n  >\n    <c8y-select-software-step\n      (software)=\"onSoftwareSelected($event)\"\n      class=\"d-contents\"\n    ></c8y-select-software-step>\n  </ng-container>\n  <ng-container *customStep=\"'Confirm selected software' | translate\">\n    <c8y-confirm-software-selection-step\n      class=\"d-contents\"\n      [selectedItems]=\"selectedSoftware\"\n    ></c8y-confirm-software-selection-step>\n  </ng-container>\n</c8y-bulk-operation-stepper>\n"}]}],"members":{"selectSoftware":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":27,"character":3},"arguments":[{"__symbolic":"reference","name":"SelectSoftwareStepComponent"},{"static":false}]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@c8y/ngx-components","name":"ModalService","line":30,"character":29},{"__symbolic":"reference","module":"@ngx-translate/core","name":"TranslateService","line":30,"character":62}]}],"onSoftwareSelected":[{"__symbolic":"method"}],"confirmSoftwareSelection":[{"__symbolic":"method"}],"retrieveOperationPrototype":[{"__symbolic":"method"}],"getUniqueDeviceTypes":[{"__symbolic":"method"}]}}},"origins":{"ISelectedSoftware":"./select-software.model","ISoftwareUpdateOperationPrototype":"./select-software.model","SelectSoftwareStepComponent":"./select-software-step.component","ConfirmSoftwareSelectionStepComponent":"./confirm-software-selection-step.component","StepperBulkTypeSoftwareModule":"./stepper-bulk-type-software.module","StepperBulkTypeSoftwareComponent":"./stepper-bulk-type-software.component"},"importAs":"@c8y/ngx-components/operations/stepper-bulk-type-software"}