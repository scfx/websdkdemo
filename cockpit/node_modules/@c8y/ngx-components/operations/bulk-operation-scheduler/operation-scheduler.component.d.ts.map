{"version":3,"file":"operation-scheduler.component.d.ts","sources":["operation-scheduler.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnDestroy, OnInit } from '@angular/core';\nimport { ControlValueAccessor, FormBuilder, FormGroup, ValidationErrors, Validator } from '@angular/forms';\nimport { OperationSchedule } from './operation-schedule.interface';\nexport declare class OperationSchedulerComponent implements ControlValueAccessor, Validator, OnInit, OnDestroy {\n    private formBuilder;\n    set _minutesAhead(minutes: number);\n    set _delayConfig(config: {\n        seconds: number;\n        milliseconds: number;\n    });\n    placeholder: string;\n    fgOperationScheduler: FormGroup;\n    minDate: Date;\n    minDelay: number;\n    delayErrors: ValidationErrors;\n    pickerErrors: ValidationErrors;\n    private readonly DELAY_SECONDS_DEFAULT;\n    private readonly DELAY_MILLISECONDS_DEFAULT;\n    private readonly MINUTES_AHEAD_DEFAULT;\n    private delaySeconds;\n    private delayMilliseconds;\n    private minutesAhead;\n    private currentUnit;\n    private delayInSeconds;\n    private initialDate;\n    private subscription;\n    private onChange;\n    private onTouched;\n    private onValidatorChanged;\n    constructor(formBuilder: FormBuilder);\n    ngOnInit(): void;\n    ngOnDestroy(): void;\n    writeValue(value: OperationSchedule): void;\n    registerOnChange(fn: any): void;\n    registerOnTouched(fn: any): void;\n    setDisabledState?(isDisabled: boolean): void;\n    validate(): ValidationErrors;\n    registerOnValidatorChange(fn: any): void;\n    markAsTouched(): void;\n    convertDelayHandler(unit: string): void;\n    emitData(data: {\n        delayInSeconds: number;\n        picker: Date;\n        time?: Date;\n        delay?: number;\n    }): void;\n    private convertDelay;\n    private combineDateAndTime;\n    private dateValidation;\n    private timeValidation;\n}\n"]}