{"version":3,"file":"version-or-patch.component.d.ts","sources":["version-or-patch.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter } from '@angular/core';\nimport { IManagedObject, InventoryService, IResultList } from '@c8y/client';\nimport { BulkOperationsService } from '@c8y/ngx-components/operations/bulk-operations-service';\nimport { FirmwareBinary, RepositoryService } from '@c8y/ngx-components/repository';\nimport { Observable } from 'rxjs';\nexport declare class VersionOrPatchComponent {\n    private repositoryService;\n    private inventoryService;\n    private bulkOpsService;\n    selected: IManagedObject;\n    versionOrPatch: EventEmitter<IManagedObject>;\n    elementCount: number;\n    DD_LOW_COUNT: number;\n    firmware$: Observable<IManagedObject>;\n    baseVersions$: Observable<IResultList<IManagedObject>>;\n    isLegacy$: Observable<boolean>;\n    expanded: {\n        [id: string]: boolean;\n    };\n    constructor(repositoryService: RepositoryService, inventoryService: InventoryService, bulkOpsService: BulkOperationsService);\n    getBinaryName$(binaryUrl: any): Observable<string>;\n    getBaseVersionAndPatches$(baseVersion: any): Observable<IResultList<IManagedObject> | {\n        data: ({\n            c8y_Firmware: {\n                version: any;\n                url: any;\n            };\n        } & IManagedObject)[];\n    }>;\n    getPatchVersionsCount$(baseVersion: FirmwareBinary): Observable<number>;\n    selectVersionOrPatch(selected: boolean, versionOrPatch: IManagedObject): void;\n}\n"]}