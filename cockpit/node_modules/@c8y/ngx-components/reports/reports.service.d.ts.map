{"version":3,"file":"reports.service.d.ts","sources":["reports.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { Export, Schedule } from './export-schedules.interface';\nimport { AlertService } from '@c8y/ngx-components';\nimport { InventoryService, IdReference, IFetchResponse, IIdentified, FetchClient } from '@c8y/client';\nimport { TranslateService } from '@ngx-translate/core';\nexport declare class ReportsService {\n    private alertService;\n    private inventoryService;\n    private client;\n    private translateService;\n    microserviceUrl: string;\n    headers: any;\n    isReportAgentSubscribed: boolean;\n    REPORT_AGENT_NOT_SUBSCRIBED_EXPECTED_ERROR_LOWER_CASE: string;\n    constructor(alertService: AlertService, inventoryService: InventoryService, client: FetchClient, translateService: TranslateService);\n    getExport(exportId: IdReference): Promise<Export>;\n    getScheduleList(exportId: IdReference): Promise<any>;\n    extractScheduleListFromExport(exp: Export): any;\n    addSchedule(schedule: Schedule, exportId: IdReference): Promise<boolean>;\n    updateSchedule(oldSchedule: Schedule, schedule: Schedule, exportId: IdReference): Promise<boolean>;\n    updateSchedules(exportId: IdReference, schedulesToRemove?: Schedule[], schedulesToAdd?: Schedule[]): Promise<boolean>;\n    reschedule(exportId: IdReference): Promise<boolean>;\n    deleteSchedule(schedule: Schedule, exportId: IdReference): Promise<boolean>;\n    /**\n     * Removes report configuration.\n     *\n     * Note: fallback strategy is based on error code returned by backend\n     * in case of missing subscription for report-agent microservice.\n     * @param config entity of report configuration\n     * @returns Response wrapped in [[IFetchResponse]]\n     */\n    removeConfiguration(config: IIdentified): Promise<IFetchResponse>;\n    normalConfigurationRemoval(config: IIdentified): Promise<IFetchResponse>;\n    fallbackConfigurationRemoval(config: IIdentified): Promise<IFetchResponse>;\n}\n"]}