import { OnInit, EventEmitter } from '@angular/core';
import { BsModalRef } from 'ngx-bootstrap/modal';
import { Schedule, ActionType } from './export-schedules.interface';
import { EmittedCron, EmitterPayload } from './export-schedules.interface';
import { CronService } from './cron.service';
import { ReportsService } from './reports.service';
import * as ɵngcc0 from '@angular/core';
export declare class ScheduleModalComponent implements OnInit {
    reportsService: ReportsService;
    modalRef: BsModalRef;
    private cronService;
    schedule: Schedule;
    oldSchedule: Schedule;
    emitter: EventEmitter<EmitterPayload>;
    exportId: number;
    actionType: ActionType;
    ActionType: typeof ActionType;
    cronExpression: string;
    validCron: boolean;
    emitterPayload: EmitterPayload;
    emailTo: string;
    emailCc: string;
    emailBcc: string;
    emailReplyTo: string;
    emailSubject: string;
    emailText: string;
    placeholdersInfo: any;
    constructor(reportsService: ReportsService, modalRef: BsModalRef, cronService: CronService);
    ngOnInit(): void;
    populateEmailFieldsFromSchedule(schedule: Schedule): void;
    save(): void;
    cancel(): void;
    getCron(cron: EmittedCron): void;
    populateScheduleFromCronExpression(): void;
    convertStringOfEmailsToArray(stringOfEmails: string): any[];
    populateScheduleFromEmailFields(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScheduleModalComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScheduleModalComponent, "schedule-modal", never, {}, { "emitter": "emitter"; }, never, never>;
}

//# sourceMappingURL=schedule-modal.component.d.ts.map