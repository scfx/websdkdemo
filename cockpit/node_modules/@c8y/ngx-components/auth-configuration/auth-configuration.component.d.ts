import { OnInit, EventEmitter } from '@angular/core';
import { AuthConfigurationService } from './auth-configuration.service';
import { AlertService, LoginService, ModalService } from '@c8y/ngx-components';
import { TenantLoginOptionsService } from '@c8y/client';
import { BehaviorSubject } from 'rxjs';
import { AuthConfiguration } from './auth-configuration.model';
import * as ɵngcc0 from '@angular/core';
export declare class AuthConfigurationComponent implements OnInit {
    private authConfigurationService;
    private tenantLoginOptionsService;
    private modalService;
    private loginService;
    private alertService;
    reloading$: BehaviorSubject<boolean>;
    reload: EventEmitter<void>;
    authConfiguration: AuthConfiguration;
    private authConfiguration$;
    private previousAuthConfiguration;
    private authConfigurationSubscription;
    constructor(authConfigurationService: AuthConfigurationService, tenantLoginOptionsService: TenantLoginOptionsService, modalService: ModalService, loginService: LoginService, alertService: AlertService);
    ngOnInit(): void;
    loadAuthConfig(): void;
    ngOnDestroy(): void;
    save(): Promise<void>;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<AuthConfigurationComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<AuthConfigurationComponent, "c8y-auth-configuration", never, {}, {}, never, never>;
}

//# sourceMappingURL=auth-configuration.component.d.ts.map