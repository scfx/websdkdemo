import { NgZone } from '@angular/core';
import { Router } from '@angular/router';
import { ActionBarService } from '@c8y/ngx-components';
import { ContextDashboardService, ContextWidgetConfig } from '@c8y/ngx-components/context-dashboard';
import * as ɵngcc0 from '@angular/core';
export declare class DashboardBridgeService {
    private ng1Injector;
    private zone;
    private router;
    private contextDashboardService;
    private actionBarService;
    dashboardSvc: any;
    compile: any;
    dashboardClipboard: any;
    constructor(ng1Injector: any, zone: NgZone, router: Router, contextDashboardService: ContextDashboardService, actionBarService: ActionBarService);
    get ng1Components(): any;
    instantiateComponent(widget: any, element: any): Promise<any>;
    editDashboard(dashboard: any): Promise<any>;
    copyDashboard(): any;
    pasteDashboard(): Promise<void>;
    instantiateDeviceSelector(element: any, widgetConfig: ContextWidgetConfig): any;
    private loadTemplate;
    private navigateToDashboard;
    private getDashboard;
    private loadConfigTemplate;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<DashboardBridgeService, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDeclaration<DashboardBridgeService>;
}

//# sourceMappingURL=dashboard-bridge.service.d.ts.map