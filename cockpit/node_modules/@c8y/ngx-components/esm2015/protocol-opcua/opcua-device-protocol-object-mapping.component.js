import { Directive, ElementRef, Injector, Input } from '@angular/core';
import { UpgradeComponent } from '@angular/upgrade/static';
import * as ɵngcc0 from '@angular/core';
export class OpcuaDeviceProtocolObjectMapping extends UpgradeComponent {
    constructor(elementRef, injector) {
        super('c8yObjectMapping', elementRef, injector);
    }
}
OpcuaDeviceProtocolObjectMapping.ɵfac = function OpcuaDeviceProtocolObjectMapping_Factory(t) { return new (t || OpcuaDeviceProtocolObjectMapping)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector)); };
OpcuaDeviceProtocolObjectMapping.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: OpcuaDeviceProtocolObjectMapping, selectors: [["c8y-object-mapping"]], inputs: { mapping: "mapping", customActions: "customActions", autoObserveParams: "autoObserveParams", hideAutoObserve: "hideAutoObserve" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });
OpcuaDeviceProtocolObjectMapping.ctorParameters = () => [
    { type: ElementRef },
    { type: Injector }
];
OpcuaDeviceProtocolObjectMapping.propDecorators = {
    mapping: [{ type: Input }],
    customActions: [{ type: Input }],
    autoObserveParams: [{ type: Input }],
    hideAutoObserve: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(OpcuaDeviceProtocolObjectMapping, [{
        type: Directive,
        args: [{
                selector: 'c8y-object-mapping'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Injector }]; }, { mapping: [{
            type: Input
        }], customActions: [{
            type: Input
        }], autoObserveParams: [{
            type: Input
        }], hideAutoObserve: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3BjdWEtZGV2aWNlLXByb3RvY29sLW9iamVjdC1tYXBwaW5nLmNvbXBvbmVudC5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vcHJvdG9jb2wtb3BjdWEvb3BjdWEtZGV2aWNlLXByb3RvY29sLW9iamVjdC1tYXBwaW5nLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxRQUFRLEVBQWEsS0FBSyxFQUFVLE1BQU0sZUFBZSxDQUFDO0FBRTFGLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHlCQUF5QixDQUFDOztBQUszRCxNQUFNLE9BQU8sZ0NBQWlDLFNBQVEsZ0JBQWdCO0FBQ3RFLElBSUUsWUFBWSxVQUFzQixFQUFFLFFBQWtCO0FBQ3hELFFBQUksS0FBSyxDQUFDLGtCQUFrQixFQUFFLFVBQVUsRUFBRSxRQUFRLENBQUMsQ0FBQztBQUNwRCxJQUFFLENBQUM7QUFDSDs0REFYQyxTQUFTLFNBQUMsa0JBQ1QsUUFBUSxFQUFFLG9CQUFvQixjQUMvQjsyVkFDSTtBQUFDO0FBQTBELFlBUDVDLFVBQVU7QUFBSSxZQUFGLFFBQVE7QUFBRztBQUFHO0FBQ3ZDLHNCQU9KLEtBQUs7QUFBSyw0QkFDVixLQUFLO0FBQUssZ0NBQ1YsS0FBSztBQUFLLDhCQUNWLEtBQUs7QUFBSTs7Ozs7Ozs7Ozs7Ozs7b0JBQUU7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgRWxlbWVudFJlZiwgSW5qZWN0b3IsIFZpZXdDaGlsZCwgSW5wdXQsIE91dHB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTmdGb3JtIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgVXBncmFkZUNvbXBvbmVudCB9IGZyb20gJ0Bhbmd1bGFyL3VwZ3JhZGUvc3RhdGljJztcblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnYzh5LW9iamVjdC1tYXBwaW5nJ1xufSlcbmV4cG9ydCBjbGFzcyBPcGN1YURldmljZVByb3RvY29sT2JqZWN0TWFwcGluZyBleHRlbmRzIFVwZ3JhZGVDb21wb25lbnQge1xuICBASW5wdXQoKSBtYXBwaW5nOiBhbnk7XG4gIEBJbnB1dCgpIGN1c3RvbUFjdGlvbnM6IGFueTtcbiAgQElucHV0KCkgYXV0b09ic2VydmVQYXJhbXM6IGFueTtcbiAgQElucHV0KCkgaGlkZUF1dG9PYnNlcnZlOiBhbnk7XG4gIGNvbnN0cnVjdG9yKGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYsIGluamVjdG9yOiBJbmplY3Rvcikge1xuICAgIHN1cGVyKCdjOHlPYmplY3RNYXBwaW5nJywgZWxlbWVudFJlZiwgaW5qZWN0b3IpO1xuICB9XG59XG4iXX0=