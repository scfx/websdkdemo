import { Component, Input } from '@angular/core';
import { NgForm, ControlContainer } from '@angular/forms';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@c8y/ngx-components';
import * as ɵngcc2 from '@angular/common';
import * as ɵngcc3 from '@angular/forms';
import * as ɵngcc4 from 'ngx-bootstrap/buttons';

function OpcuaDeviceProtocolDescription_span_16_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r2._model.description, " ");
} }
function OpcuaDeviceProtocolDescription_span_20_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵelement(1, "i", 21);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(3, 1, "Active`auto scanning`"), " ");
} }
function OpcuaDeviceProtocolDescription_span_21_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵelement(1, "i", 22);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(3, 1, "Inactive`auto scanning`"), " ");
} }
const _c0 = function (a0) { return { updated: a0 }; };
export class OpcuaDeviceProtocolDescription {
    constructor() {
        this.moId = '';
    }
    set model(_model) {
        this.moId = _model.referencedServerId;
        this._model = _model;
        this.autoScan = _model.enabled ? '1' : '0';
    }
    setAutoScanOption(data) {
        this._model.enabled = data !== '0' ? true : false;
    }
}
OpcuaDeviceProtocolDescription.ɵfac = function OpcuaDeviceProtocolDescription_Factory(t) { return new (t || OpcuaDeviceProtocolDescription)(); };
OpcuaDeviceProtocolDescription.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: OpcuaDeviceProtocolDescription, selectors: [["opcua-device-protocol-description"]], inputs: { model: "model" }, features: [ɵngcc0.ɵɵProvidersFeature([], [{ provide: ControlContainer, useExisting: NgForm }])], decls: 55, vars: 24, consts: [[1, "card", "m-b-4"], [1, "card-block"], [1, "row"], [1, "col-md-7"], [1, "form-group"], ["translate", ""], [1, "editable", 3, "ngClass"], ["type", "text", "name", "name", 1, "form-control", 3, "ngModel", "ngModelChange"], ["ctrlName", "ngModel"], ["rows", "1", "name", "description", 1, "form-control", 3, "ngModel", "ngModelChange"], ["ctrlDescription", "ngModel"], [4, "ngIf"], [1, "flex-row"], [2, "min-width", "120px"], ["type", "button", "name", "autoScanAddressSpace", "btnCheckbox", "", "btnCheckboxTrue", "1", "btnCheckboxFalse", "0", "ngDefaultControl", "", 1, "btn", "m-t-4", 3, "ngModel", "ngModelChange"], [1, "m-l-16", "text-muted"], [1, "col-md-5"], [1, "dl-horizontal", "m-b-0"], [1, "label", "label-info", "m-r-8", "text-capitalize"], ["translate", "", 1, "small"], [2, "font-size", "1.5em"], ["c8yIcon", "check", 1, "text-success"], ["c8yIcon", "ban", 1, "text-danger"]], template: function OpcuaDeviceProtocolDescription_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵelementStart(2, "div", 2);
        ɵngcc0.ɵɵelementStart(3, "div", 3);
        ɵngcc0.ɵɵelementStart(4, "div", 4);
        ɵngcc0.ɵɵelementStart(5, "label", 5);
        ɵngcc0.ɵɵtext(6, "Name");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(7, "label", 6);
        ɵngcc0.ɵɵelementStart(8, "input", 7, 8);
        ɵngcc0.ɵɵlistener("ngModelChange", function OpcuaDeviceProtocolDescription_Template_input_ngModelChange_8_listener($event) { return ctx._model.name = $event; });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(10, "div", 4);
        ɵngcc0.ɵɵelementStart(11, "label", 5);
        ɵngcc0.ɵɵtext(12, "Description");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(13, "label", 6);
        ɵngcc0.ɵɵelementStart(14, "textarea", 9, 10);
        ɵngcc0.ɵɵlistener("ngModelChange", function OpcuaDeviceProtocolDescription_Template_textarea_ngModelChange_14_listener($event) { return ctx._model.description = $event; });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(16, OpcuaDeviceProtocolDescription_span_16_Template, 2, 1, "span", 11);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(17, "div", 12);
        ɵngcc0.ɵɵelementStart(18, "div", 13);
        ɵngcc0.ɵɵelementStart(19, "button", 14);
        ɵngcc0.ɵɵlistener("ngModelChange", function OpcuaDeviceProtocolDescription_Template_button_ngModelChange_19_listener($event) { return ctx.autoScan = $event; })("ngModelChange", function OpcuaDeviceProtocolDescription_Template_button_ngModelChange_19_listener($event) { return ctx.setAutoScanOption($event); });
        ɵngcc0.ɵɵtemplate(20, OpcuaDeviceProtocolDescription_span_20_Template, 4, 3, "span", 11);
        ɵngcc0.ɵɵtemplate(21, OpcuaDeviceProtocolDescription_span_21_Template, 4, 3, "span", 11);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(22, "small", 15);
        ɵngcc0.ɵɵtext(23);
        ɵngcc0.ɵɵpipe(24, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(25, "div", 16);
        ɵngcc0.ɵɵelementStart(26, "dl", 17);
        ɵngcc0.ɵɵelementStart(27, "dt");
        ɵngcc0.ɵɵelementStart(28, "label", 5);
        ɵngcc0.ɵɵtext(29, "Device protocol type");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(30, "dd");
        ɵngcc0.ɵɵelementStart(31, "span", 18);
        ɵngcc0.ɵɵtext(32);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(33, "dt");
        ɵngcc0.ɵɵelementStart(34, "label", 19);
        ɵngcc0.ɵɵtext(35, "ID");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(36, "dd", 20);
        ɵngcc0.ɵɵtext(37);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(38, "dt");
        ɵngcc0.ɵɵelementStart(39, "label", 19);
        ɵngcc0.ɵɵtext(40, "Date created");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(41, "dd");
        ɵngcc0.ɵɵtext(42);
        ɵngcc0.ɵɵpipe(43, "c8yDate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(44, "dt");
        ɵngcc0.ɵɵelementStart(45, "label", 19);
        ɵngcc0.ɵɵtext(46, "Last update");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(47, "dd");
        ɵngcc0.ɵɵtext(48);
        ɵngcc0.ɵɵpipe(49, "c8yDate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(50, "dt");
        ɵngcc0.ɵɵelementStart(51, "label", 19);
        ɵngcc0.ɵɵtext(52, "Fieldbus version");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(53, "dd");
        ɵngcc0.ɵɵtext(54);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        const _r0 = ɵngcc0.ɵɵreference(9);
        const _r1 = ɵngcc0.ɵɵreference(15);
        ɵngcc0.ɵɵadvance(7);
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(20, _c0, _r0.dirty));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngModel", ctx._model.name);
        ɵngcc0.ɵɵadvance(5);
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(22, _c0, _r1.dirty));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngModel", ctx._model.description);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx._model.description);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngModel", ctx.autoScan);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.autoScan === "1");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.autoScan === "0");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(24, 14, "When active, the gateway scans the address space of all servers and automatically applies this device protocol to all nodes matching the criteria."), " ");
        ɵngcc0.ɵɵadvance(9);
        ɵngcc0.ɵɵtextInterpolate1(" ", ctx._model.fieldbusType, " ");
        ɵngcc0.ɵɵadvance(5);
        ɵngcc0.ɵɵtextInterpolate(ctx._model.id);
        ɵngcc0.ɵɵadvance(5);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(43, 16, ctx._model.creationTime));
        ɵngcc0.ɵɵadvance(6);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(49, 18, ctx._model.lastUpdated));
        ɵngcc0.ɵɵadvance(6);
        ɵngcc0.ɵɵtextInterpolate(ctx._model.fieldbusVersion);
    } }, directives: [ɵngcc1.C8yTranslateDirective, ɵngcc2.NgClass, ɵngcc3.DefaultValueAccessor, ɵngcc3.NgControlStatus, ɵngcc3.NgModel, ɵngcc2.NgIf, ɵngcc4.ButtonCheckboxDirective, ɵngcc1.IconDirective], pipes: [ɵngcc1.C8yTranslatePipe, ɵngcc1.DatePipe], encapsulation: 2 });
OpcuaDeviceProtocolDescription.propDecorators = {
    model: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(OpcuaDeviceProtocolDescription, [{
        type: Component,
        args: [{
                selector: 'opcua-device-protocol-description',
                template: "<div class=\"card m-b-4\">\n  <div class=\"card-block\">\n    <div class=\"row\">\n      <div class=\"col-md-7\">\n        <div class=\"form-group\">\n          <label translate>Name</label>\n          <label class=\"editable\" [ngClass]=\"{ updated: ctrlName.dirty }\">\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              name=\"name\"\n              #ctrlName=\"ngModel\"\n              [(ngModel)]=\"_model.name\"\n            />\n          </label>\n        </div>\n        <div class=\"form-group\">\n          <label translate>Description</label>\n          <label class=\"editable\" [ngClass]=\"{ updated: ctrlDescription.dirty }\">\n            <textarea\n              class=\"form-control\"\n              rows=\"1\"\n              name=\"description\"\n              #ctrlDescription=\"ngModel\"\n              [(ngModel)]=\"_model.description\"\n            ></textarea>\n            <span *ngIf=\"_model.description\">\n              {{ _model.description }}\n            </span>\n          </label>\n        </div>\n        <div class=\"flex-row\">\n          <div style=\"min-width: 120px;\">\n            <button\n              type=\"button\"\n              class=\"btn m-t-4\"\n              name=\"autoScanAddressSpace\"\n              [(ngModel)]=\"autoScan\"\n              (ngModelChange)=\"setAutoScanOption($event)\"\n              btnCheckbox\n              btnCheckboxTrue=\"1\"\n              btnCheckboxFalse=\"0\"\n              ngDefaultControl\n            >\n              <span *ngIf=\"autoScan === '1'\">\n                <i c8yIcon=\"check\" class=\"text-success\"></i>\n                {{ 'Active`auto scanning`' | translate }}\n              </span>\n              <span *ngIf=\"autoScan === '0'\">\n                <i c8yIcon=\"ban\" class=\"text-danger\"></i>\n                {{ 'Inactive`auto scanning`' | translate }}\n              </span>\n            </button>\n          </div>\n          <small class=\"m-l-16 text-muted\">\n            {{ 'When active, the gateway scans the address space of all servers and automatically applies this device protocol to all nodes matching the criteria.' | translate }}\n          </small>\n        </div>\n      </div>\n      <div class=\"col-md-5\">\n        <dl class=\"dl-horizontal m-b-0\">\n          <dt><label translate>Device protocol type</label></dt>\n          <dd>\n            <span class=\"label label-info m-r-8 text-capitalize\">\n              {{ _model.fieldbusType }}\n            </span>\n          </dd>\n          <dt><label class=\"small\" translate>ID</label></dt>\n          <dd style=\"font-size:1.5em\">{{ _model.id }}</dd>\n          <dt><label class=\"small\" translate>Date created</label></dt>\n          <dd>{{ _model.creationTime | c8yDate }}</dd>\n          <dt><label class=\"small\" translate>Last update</label></dt>\n          <dd>{{ _model.lastUpdated | c8yDate }}</dd>\n          <dt><label class=\"small\" translate>Fieldbus version</label></dt>\n          <dd>{{ _model.fieldbusVersion }}</dd>\n        </dl>\n      </div>\n    </div>\n  </div>\n</div>\n",
                viewProviders: [{ provide: ControlContainer, useExisting: NgForm }]
            }]
    }], function () { return []; }, { model: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3BjdWEtZGV2aWNlLXByb3RvY29sLWRlc2NyaXB0aW9uLmNvbXBvbmVudC5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vcHJvdG9jb2wtb3BjdWEvb3BjdWEtZGV2aWNlLXByb3RvY29sLWRlc2NyaXB0aW9uLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNqRCxPQUFPLEVBQUMsTUFBTSxFQUFFLGdCQUFnQixFQUFDLE1BQU0sZ0JBQWdCLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFReEQsTUFBTSxPQUFPLDhCQUE4QjtBQUFHLElBTjlDO0FBQ0UsUUFjUSxTQUFJLEdBQVcsRUFBRSxDQUFDO0FBQUMsSUFLN0IsQ0FBQztBQUFDLElBWEEsSUFBYSxLQUFLLENBQUMsTUFBTTtBQUFJLFFBQzNCLElBQUksQ0FBQyxJQUFJLEdBQUcsTUFBTSxDQUFDLGtCQUFrQixDQUFDO0FBQUMsUUFDdkMsSUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7QUFBQyxRQUN0QixJQUFJLENBQUMsUUFBUSxHQUFHLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDO0FBQUMsSUFDOUMsQ0FBQztBQUFDLElBSUYsaUJBQWlCLENBQUMsSUFBWTtBQUFJLFFBQ2hDLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxHQUFHLElBQUksS0FBSyxHQUFHLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDO0FBQUMsSUFDckQsQ0FBQztBQUFDOzBEQW5CSCxTQUFTLFNBQUMsa0JBQ1QsUUFBUSxFQUFFLG1DQUFtQztXQUM3Qzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2tFQUF1RCxrQkFDdkQsYUFBYTtDQUFFLENBQUMsRUFBQyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsV0FBVyxFQUFFLE1BQU0sRUFBQyxDQUFDLGNBQ2xFOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O29SQUVDO0FBQUM7QUFDRyxvQkFFSCxLQUFLO0FBQUk7Ozs7Ozs7Ozs7b0JBQUU7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHtOZ0Zvcm0sIENvbnRyb2xDb250YWluZXJ9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnb3BjdWEtZGV2aWNlLXByb3RvY29sLWRlc2NyaXB0aW9uJyxcclxuICB0ZW1wbGF0ZVVybDogJy4vb3BjdWEtZGV2aWNlLXByb3RvY29sLWRlc2NyaXB0aW9uLmh0bWwnLFxyXG4gIHZpZXdQcm92aWRlcnM6IFt7cHJvdmlkZTogQ29udHJvbENvbnRhaW5lciwgdXNlRXhpc3Rpbmc6IE5nRm9ybX1dXHJcbn0pXHJcblxyXG5leHBvcnQgY2xhc3MgT3BjdWFEZXZpY2VQcm90b2NvbERlc2NyaXB0aW9uIHtcclxuICBfbW9kZWw6IGFueTtcclxuICBhdXRvU2Nhbjogc3RyaW5nO1xyXG4gIEBJbnB1dCgpIHNldCBtb2RlbChfbW9kZWwpIHtcclxuICAgIHRoaXMubW9JZCA9IF9tb2RlbC5yZWZlcmVuY2VkU2VydmVySWQ7XHJcbiAgICB0aGlzLl9tb2RlbCA9IF9tb2RlbDtcclxuICAgIHRoaXMuYXV0b1NjYW4gPSBfbW9kZWwuZW5hYmxlZCA/ICcxJyA6ICcwJztcclxuICB9XHJcblxyXG4gIHByaXZhdGUgbW9JZDogc3RyaW5nID0gJyc7XHJcblxyXG4gIHNldEF1dG9TY2FuT3B0aW9uKGRhdGE6IHN0cmluZykge1xyXG4gICAgdGhpcy5fbW9kZWwuZW5hYmxlZCA9IGRhdGEgIT09ICcwJyA/IHRydWUgOiBmYWxzZTtcclxuICB9XHJcbn1cclxuIl19