import { CdkTreeModule } from '@angular/cdk/tree';
import { RouterModule } from '@angular/router';
import { NgModule } from '@angular/core';
import { CoreModule, DeviceStatusModule, DropAreaModule, FormsModule, gettext, HOOK_ROUTE, ViewContext } from '@c8y/ngx-components';
import { ButtonsModule } from 'ngx-bootstrap/buttons';
import { AddressSpaceService } from './address-space.service';
import { OpcuaAddressSpaceDetailComponent } from './opcua-address-space-detail.component';
import { OpcuaDeviceProtocolDetailComponent } from './opcua-device-protocol-detail.component';
import { OpcuaDeviceProtocolDataReportingComponent } from './opcua-device-protocol-data-reporting.component';
import { OpcuaDeviceProtocolMapping } from './opcua-device-protocol-mapping.component';
import { ReactiveFormsModule } from '@angular/forms';
import { OpcuaDeviceProtocolObjectMapping } from './opcua-device-protocol-object-mapping.component';
import { OpcuaDeviceProtocolMappingCustomAction } from './opcua-device-protocol-mapping-customaction.component';
import { OpcuaDeviceProtocolObjectMappingStatus } from './opcua-device-protocol-object-mapping-status-icon.component';
import { OpcuaAddressSpaceComponent } from './opcua-address-space.component';
import { OpcuaAgentGuard } from './opcua-agent.guard';
import { OpcuaMicroserviceGuard } from './opcua-microservice.guard';
import { OpcuaServerConfigComponent } from './opcua-server-config.component';
import { OpcuaServerListComponent } from './opcua-server-list.component';
import { OpcuaServerGuard } from './opcua-server.guard';
import { OpcuaServersComponent } from './opcua-servers.component';
import { OpcuaService } from './opcuaService';
import { CollapseModule } from 'ngx-bootstrap/collapse';
import { BsDropdownModule } from 'ngx-bootstrap/dropdown';
import { TooltipModule } from 'ngx-bootstrap/tooltip';
import { PopoverModule } from 'ngx-bootstrap/popover';
import { OpcuaDeviceProtocolDescription } from './opcua-device-protocol-description.component';
import { OpcuaAddressSpaceTreeComponent } from './opcua-address-space-tree.component';
import { OpcuaAutoApplySettingsComponent } from './opcua-auto-apply-settings.component';
import { BrowserAnimationsModule } from '@angular/platform-browser/animations';
import { OpcuaDeviceProtocolBrowsePathValidation } from './opcua-device-protocol-browse-path-validation.directive';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/router';
import * as ɵngcc2 from 'ngx-bootstrap/tooltip';
import * as ɵngcc3 from 'ngx-bootstrap/popover';
import * as ɵngcc4 from 'ngx-bootstrap/collapse';
import * as ɵngcc5 from 'ngx-bootstrap/dropdown';
const routes = [
    {
        context: ViewContext.Device,
        path: 'opcua-servers',
        component: OpcuaServersComponent,
        label: gettext('OPC UA server'),
        icon: 'server',
        canActivate: [OpcuaAgentGuard, OpcuaMicroserviceGuard]
    },
    {
        context: ViewContext.Device,
        path: 'address-space',
        component: OpcuaAddressSpaceComponent,
        label: gettext('Address space'),
        icon: 'cloud-network',
        canActivate: [OpcuaServerGuard, OpcuaMicroserviceGuard]
    }
];
const deviceProtocolRoutes = [
    {
        path: 'deviceprotocols/opcuaV2/:id',
        component: OpcuaDeviceProtocolDetailComponent
    }
];
const ɵ0 = routes;
export class OpcuaProtocolModule {
}
OpcuaProtocolModule.ɵfac = function OpcuaProtocolModule_Factory(t) { return new (t || OpcuaProtocolModule)(); };
OpcuaProtocolModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: OpcuaProtocolModule });
OpcuaProtocolModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [
        OpcuaAgentGuard,
        OpcuaServerGuard,
        OpcuaMicroserviceGuard,
        OpcuaService,
        AddressSpaceService,
        {
            provide: HOOK_ROUTE,
            useValue: ɵ0,
            multi: true
        }
    ], imports: [[
            CoreModule,
            FormsModule,
            ReactiveFormsModule,
            DropAreaModule,
            ButtonsModule,
            CdkTreeModule,
            RouterModule.forRoot(deviceProtocolRoutes, { useHash: true }),
            TooltipModule.forRoot(),
            PopoverModule.forRoot(),
            DeviceStatusModule,
            BrowserAnimationsModule,
            CollapseModule.forRoot(),
            BsDropdownModule.forRoot()
        ]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(OpcuaProtocolModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    OpcuaServersComponent,
                    OpcuaServerListComponent,
                    OpcuaServerConfigComponent,
                    OpcuaAddressSpaceComponent,
                    OpcuaAddressSpaceTreeComponent,
                    OpcuaAddressSpaceDetailComponent,
                    OpcuaDeviceProtocolDescription,
                    OpcuaDeviceProtocolDetailComponent,
                    OpcuaDeviceProtocolDataReportingComponent,
                    OpcuaDeviceProtocolMapping,
                    OpcuaDeviceProtocolObjectMapping,
                    OpcuaDeviceProtocolMappingCustomAction,
                    OpcuaDeviceProtocolObjectMappingStatus,
                    OpcuaAutoApplySettingsComponent,
                    OpcuaDeviceProtocolBrowsePathValidation
                ],
                imports: [
                    CoreModule,
                    FormsModule,
                    ReactiveFormsModule,
                    DropAreaModule,
                    ButtonsModule,
                    CdkTreeModule,
                    RouterModule.forRoot(deviceProtocolRoutes, { useHash: true }),
                    TooltipModule.forRoot(),
                    PopoverModule.forRoot(),
                    DeviceStatusModule,
                    BrowserAnimationsModule,
                    CollapseModule.forRoot(),
                    BsDropdownModule.forRoot()
                ],
                entryComponents: [
                    OpcuaAddressSpaceTreeComponent,
                    OpcuaAddressSpaceComponent,
                    OpcuaServersComponent
                ],
                providers: [
                    OpcuaAgentGuard,
                    OpcuaServerGuard,
                    OpcuaMicroserviceGuard,
                    OpcuaService,
                    AddressSpaceService,
                    {
                        provide: HOOK_ROUTE,
                        useValue: ɵ0,
                        multi: true
                    }
                ]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(OpcuaProtocolModule, { declarations: function () { return [OpcuaServersComponent,
        OpcuaServerListComponent,
        OpcuaServerConfigComponent,
        OpcuaAddressSpaceComponent,
        OpcuaAddressSpaceTreeComponent,
        OpcuaAddressSpaceDetailComponent,
        OpcuaDeviceProtocolDescription,
        OpcuaDeviceProtocolDetailComponent,
        OpcuaDeviceProtocolDataReportingComponent,
        OpcuaDeviceProtocolMapping,
        OpcuaDeviceProtocolObjectMapping,
        OpcuaDeviceProtocolMappingCustomAction,
        OpcuaDeviceProtocolObjectMappingStatus,
        OpcuaAutoApplySettingsComponent,
        OpcuaDeviceProtocolBrowsePathValidation]; }, imports: function () { return [CoreModule,
        FormsModule,
        ReactiveFormsModule,
        DropAreaModule,
        ButtonsModule,
        CdkTreeModule, ɵngcc1.RouterModule, ɵngcc2.TooltipModule, ɵngcc3.PopoverModule, DeviceStatusModule,
        BrowserAnimationsModule, ɵngcc4.CollapseModule, ɵngcc5.BsDropdownModule]; } }); })();
export { ɵ0 };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,