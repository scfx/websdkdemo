import { Component, Input } from '@angular/core';
import { TenantLoginOptionsService, TenantLoginOptionType } from '@c8y/client';
import { defaults, isEmpty, omitBy } from 'lodash-es';
import { TenantUiService } from '@c8y/ngx-components';
import { ControlContainer, NgForm } from '@angular/forms';
export class BasicAuthSettingsComponent {
    constructor(tenantLoginOptionsService, tenantUiService) {
        this.tenantLoginOptionsService = tenantLoginOptionsService;
        this.tenantUiService = tenantUiService;
        this.preferredLoginOptionType = TenantLoginOptionType.BASIC;
        this.tenantLoginOptionTypeEnum = TenantLoginOptionType;
    }
    ngOnChanges(changes) {
        if (changes.authConfiguration && changes.authConfiguration.currentValue) {
            const { loginOptions } = changes.authConfiguration.currentValue;
            const basic = loginOptions.find(this.tenantUiService.isBasic) || {};
            basic.authenticationRestrictions = defaults({}, omitBy(basic.authenticationRestrictions, isEmpty), {
                forbiddenUserAgents: [''],
                trustedUserAgents: [''],
                forbiddenClients: []
            });
            this.forbiddenUserAgents = basic.authenticationRestrictions.forbiddenUserAgents.map(val => ({ value: val }));
            this.trustedUserAgents = basic.authenticationRestrictions.trustedUserAgents.map(val => ({ value: val }));
            this.preferredLoginOptionType = changes.authConfiguration.currentValue.preferredLoginOptionType;
        }
    }
    ngDoCheck() {
        if (this.preferredLoginOptionType !== this.authConfiguration.preferredLoginOptionType) {
            this.preferredLoginOptionType = this.authConfiguration.preferredLoginOptionType;
        }
    }
    get forbiddenWebBrowsers() {
        return this.authenticationRestrictions.forbiddenClients.includes('WEB_BROWSERS');
    }
    set forbiddenWebBrowsers(value) {
        this.authenticationRestrictions.forbiddenClients = value ? ['WEB_BROWSERS'] : [];
    }
    forbiddenUserAgentsChanged({ event, index }) {
        this.forbiddenUserAgents[index].value = event;
        this.authenticationRestrictions.forbiddenUserAgents[index] = event;
    }
    forbiddenUserAgentsRemove(index) {
        this.authenticationRestrictions.forbiddenUserAgents.splice(index, 1);
        this.remove(this.forbiddenUserAgents, index);
    }
    trustedUserAgentsChanged({ event, index }) {
        this.trustedUserAgents[index].value = event;
        this.authenticationRestrictions.trustedUserAgents[index] = event;
    }
    trustedUserAgentsRemove(index) {
        this.authenticationRestrictions.trustedUserAgents.splice(index, 1);
        this.remove(this.trustedUserAgents, index);
    }
    get authenticationRestrictions() {
        return this.authConfiguration.loginOptions.find(this.tenantUiService.isBasic)
            .authenticationRestrictions;
    }
    add(collection) {
        collection.push({ value: '' });
    }
    remove(collection, index) {
        collection.splice(index, 1);
        if (!collection.length) {
            collection.push({ value: '' });
        }
    }
}
BasicAuthSettingsComponent.decorators = [
    { type: Component, args: [{
                selector: 'c8y-basic-auth-settings',
                template: "<div class=\"card-block separator-top\" *ngIf=\"authConfiguration\">\n  <div class=\"col-sm-2\">\n    <h4 class=\"text-right\">{{ 'Basic Auth restrictions' | translate }}</h4>\n  </div>\n\n  <div class=\"col-sm-9\">\n    <div class=\"row\">\n      <div class=\"col-sm-6\">\n        <c8y-form-group>\n          <label class=\"c8y-switch\" title=\"{{ 'Forbidden for web browsers' | translate }}\">\n            <input\n              type=\"checkbox\"\n              name=\"forbiddenWebBrowsers\"\n              [(ngModel)]=\"forbiddenWebBrowsers\"\n            />\n            <span></span>\n            <span>{{ 'Forbidden for web browsers' | translate }}</span>\n          </label>\n          <div class=\"alert alert-warning\" *ngIf=\"preferredLoginOptionType === tenantLoginOptionTypeEnum.BASIC && forbiddenWebBrowsers\">\n            {{ 'You are about to forbid browsers from using Basic authentication. This will prevent users from using web applications on your tenant because you are going to set Basic authentication as the preferred login mode.' | translate }}\n          </div>\n        </c8y-form-group>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-sm-6\">\n        <label title=\"{{ 'Forbidden user agents' | translate }}\">{{ 'Forbidden user agents' | translate }}</label>\n        <div\n          class=\"input-group m-t-8\"\n          *ngFor=\"\n            let forbiddenUserAgent of forbiddenUserAgents;\n            index as i;\n            last as isLast\n          \"\n        >\n          <input\n            type=\"text\"\n            [name]=\"'forbiddenUserAgent' + i\"\n            [ngModel]=\"forbiddenUserAgent.value\"\n            (ngModelChange)=\"forbiddenUserAgentsChanged({event: $event, index: i})\"\n            class=\"form-control\"\n            placeholder=\"{{ 'e.g.' | translate }} forbidden-agent\"\n          />\n          <div class=\"input-group-btn col-sm-2\">\n            <button\n              title=\"{{ 'Remove' | translate }}\"\n              type=\"button\"\n              (click)=\"forbiddenUserAgentsRemove(i)\"\n              class=\"btn btn-clean text-primary\"\n            >\n              <i class=\"dlt-c8y-icon-minus-circle text-danger\"></i>\n            </button>\n            <button\n              title=\"{{ 'Add' | translate }}\"\n              type=\"button\"\n              class=\"btn btn-clean text-primary\"\n              (click)=\"add(forbiddenUserAgents)\"\n              *ngIf=\"isLast\"\n            >\n              <i class=\"dlt-c8y-icon-plus-circle\"></i>\n            </button>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-sm-6\">\n        <label title=\"{{ 'Trusted user agents' | translate }}\">{{ 'Trusted user agents' | translate }}</label>\n        <div\n          class=\"input-group m-t-8\"\n          *ngFor=\"\n            let trustedUserAgent of trustedUserAgents;\n            index as i;\n            last as isLast\n          \"\n        >\n          <input\n            type=\"text\"\n            [name]=\"'trustedUserAgent' + i\"\n            class=\"form-control\"\n            placeholder=\"{{ 'e.g.' | translate }} trusted-agent\"\n            [ngModel]=\"trustedUserAgent.value\"\n            (ngModelChange)=\"trustedUserAgentsChanged({event: $event, index: i})\"\n          />\n          <div class=\"input-group-btn col-sm-2\">\n            <button\n              title=\"{{ 'Remove' | translate }}\"\n              type=\"button\"\n              (click)=\"trustedUserAgentsRemove(i)\"\n              class=\"btn btn-clean text-primary\"\n            >\n              <i class=\"dlt-c8y-icon-minus-circle text-danger\"></i>\n            </button>\n            <button\n              title=\"{{ 'Add' | translate }}\"\n              type=\"button\"\n              class=\"btn btn-clean text-primary\"\n              (click)=\"add(trustedUserAgents)\"\n              *ngIf=\"isLast\"\n            >\n              <i class=\"dlt-c8y-icon-plus-circle\"></i>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n",
                viewProviders: [{ provide: ControlContainer, useExisting: NgForm }]
            },] }
];
BasicAuthSettingsComponent.ctorParameters = () => [
    { type: TenantLoginOptionsService },
    { type: TenantUiService }
];
BasicAuthSettingsComponent.propDecorators = {
    authConfiguration: [{ type: Input }]
};
//# sourceMappingURL=data:application/json;base64,