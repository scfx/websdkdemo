import { __awaiter } from "tslib";
import { Injectable } from '@angular/core';
import { gettext, NavigatorNode, Permissions } from '@c8y/ngx-components';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@c8y/ngx-components';
export class NavigationFactory {
    constructor(permissions) {
        this.permissions = permissions;
        this.navs = [];
    }
    get() {
        return __awaiter(this, void 0, void 0, function* () {
            const userHasPermission = this.permissions.hasAnyRole([
                'ROLE_TENANT_ADMIN',
                'ROLE_TENANT_MANAGEMENT_ADMIN'
            ]);
            if (this.navs.length === 0 && userHasPermission) {
                this.navs.push(new NavigatorNode({
                    label: gettext('Authentication'),
                    icon: 'c8y-shield',
                    path: '/auth-configuration',
                    parent: gettext('Settings'),
                    priority: 2000
                }));
            }
            return this.navs;
        });
    }
}
NavigationFactory.ɵfac = function NavigationFactory_Factory(t) { return new (t || NavigationFactory)(ɵngcc0.ɵɵinject(ɵngcc1.Permissions)); };
NavigationFactory.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: NavigationFactory, factory: NavigationFactory.ɵfac });
NavigationFactory.ctorParameters = () => [
    { type: Permissions }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NavigationFactory, [{
        type: Injectable
    }], function () { return [{ type: ɵngcc1.Permissions }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmF2aWdhdGlvbi5mYWN0b3J5LmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9hdXRoLWNvbmZpZ3VyYXRpb24vZmFjdG9yaWVzL25hdmlnYXRpb24uZmFjdG9yeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsT0FBTyxFQUFFLGFBQWEsRUFBd0IsV0FBVyxFQUFFLE1BQU0scUJBQXFCLENBQUM7OztBQUdoRyxNQUFNLE9BQU8saUJBQWlCO0FBQUcsSUFHL0IsWUFBb0IsV0FBd0I7QUFBSSxRQUE1QixnQkFBVyxHQUFYLFdBQVcsQ0FBYTtBQUFDLFFBRjdDLFNBQUksR0FBb0IsRUFBRSxDQUFDO0FBQzdCLElBQ2lELENBQUM7QUFDbEQsSUFDUSxHQUFHO0FBQ1g7QUFDQyxZQURHLE1BQU0saUJBQWlCLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxVQUFVLENBQUU7QUFDM0QsZ0JBQU0sbUJBQW1CO0FBQ3pCLGdCQUFNLDhCQUE4QjtBQUNwQyxhQUFLLENBQUMsQ0FBQztBQUNQLFlBQUksSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sS0FBSyxDQUFDLElBQUksaUJBQWlCLEVBQUU7QUFDckQsZ0JBQU0sSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQ1osSUFBSSxhQUFhLENBQUM7QUFDMUIsb0JBQVUsS0FBSyxFQUFFLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQztBQUMxQyxvQkFBVSxJQUFJLEVBQUUsWUFBWTtBQUM1QixvQkFBVSxJQUFJLEVBQUUscUJBQXFCO0FBQ3JDLG9CQUFVLE1BQU0sRUFBRSxPQUFPLENBQUMsVUFBVSxDQUFDO0FBQ3JDLG9CQUFVLFFBQVEsRUFBRSxJQUFJO0FBQ3hCLGlCQUFTLENBQUMsQ0FDSCxDQUFDO0FBQ1IsYUFBSztBQUNMLFlBQUksT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDO0FBQ3JCLFFBQUUsQ0FBQztBQUVILEtBRkc7QUFDSDs2Q0F4QkMsVUFBVTtpSUFDVDtBQUFDO0FBQTJDLFlBSFMsV0FBVztBQUFHOzs7NEVBQUU7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGdldHRleHQsIE5hdmlnYXRvck5vZGUsIE5hdmlnYXRvck5vZGVGYWN0b3J5LCBQZXJtaXNzaW9ucyB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMnO1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgTmF2aWdhdGlvbkZhY3RvcnkgaW1wbGVtZW50cyBOYXZpZ2F0b3JOb2RlRmFjdG9yeSB7XG4gIG5hdnM6IE5hdmlnYXRvck5vZGVbXSA9IFtdO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgcGVybWlzc2lvbnM6IFBlcm1pc3Npb25zKSB7fVxuXG4gIGFzeW5jIGdldCgpIHtcbiAgICBjb25zdCB1c2VySGFzUGVybWlzc2lvbiA9IHRoaXMucGVybWlzc2lvbnMuaGFzQW55Um9sZSggW1xuICAgICAgJ1JPTEVfVEVOQU5UX0FETUlOJyxcbiAgICAgICdST0xFX1RFTkFOVF9NQU5BR0VNRU5UX0FETUlOJ1xuICAgIF0pO1xuICAgIGlmICh0aGlzLm5hdnMubGVuZ3RoID09PSAwICYmIHVzZXJIYXNQZXJtaXNzaW9uKSB7XG4gICAgICB0aGlzLm5hdnMucHVzaChcbiAgICAgICAgbmV3IE5hdmlnYXRvck5vZGUoe1xuICAgICAgICAgIGxhYmVsOiBnZXR0ZXh0KCdBdXRoZW50aWNhdGlvbicpLFxuICAgICAgICAgIGljb246ICdjOHktc2hpZWxkJyxcbiAgICAgICAgICBwYXRoOiAnL2F1dGgtY29uZmlndXJhdGlvbicsXG4gICAgICAgICAgcGFyZW50OiBnZXR0ZXh0KCdTZXR0aW5ncycpLFxuICAgICAgICAgIHByaW9yaXR5OiAyMDAwXG4gICAgICAgIH0pXG4gICAgICApO1xuICAgIH1cbiAgICByZXR1cm4gdGhpcy5uYXZzO1xuICB9XG59XG4iXX0=