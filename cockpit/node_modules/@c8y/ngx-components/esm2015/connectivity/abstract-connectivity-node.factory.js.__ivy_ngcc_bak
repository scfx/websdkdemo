import { Injectable } from '@angular/core';
import { gettext, NavigatorNode, toObservable } from '@c8y/ngx-components';
import { map } from 'rxjs/operators';
import { AbstractConnectivityTabFactory } from './abstract-connectivity-tab.factory';
export class AbstractConnectivityNodeFactory {
    constructor(tabFactory) {
        this.tabFactory = tabFactory;
        this.connectivityNode = new NavigatorNode({
            parent: gettext('Settings'),
            label: gettext('Connectivity'),
            path: 'connectivitySettings',
            icon: 'plug',
            preventDuplicates: true
        });
    }
    get() {
        return toObservable(this.tabFactory.tab()).pipe(map(tab => {
            return !!tab ? [this.connectivityNode] : [];
        }));
    }
}
AbstractConnectivityNodeFactory.decorators = [
    { type: Injectable }
];
AbstractConnectivityNodeFactory.ctorParameters = () => [
    { type: AbstractConnectivityTabFactory }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWJzdHJhY3QtY29ubmVjdGl2aXR5LW5vZGUuZmFjdG9yeS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2Nvbm5lY3Rpdml0eS9hYnN0cmFjdC1jb25uZWN0aXZpdHktbm9kZS5mYWN0b3J5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLE9BQU8sRUFBRSxhQUFhLEVBQXdCLFlBQVksRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ2pHLE9BQU8sRUFBRSxHQUFHLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUNyQyxPQUFPLEVBQUUsOEJBQThCLEVBQUUsTUFBTSxxQ0FBcUMsQ0FBQztBQUdyRixNQUFNLE9BQWdCLCtCQUErQjtJQVNuRCxZQUFzQixVQUEwQztRQUExQyxlQUFVLEdBQVYsVUFBVSxDQUFnQztRQVI3QyxxQkFBZ0IsR0FBa0IsSUFBSSxhQUFhLENBQUM7WUFDckUsTUFBTSxFQUFFLE9BQU8sQ0FBQyxVQUFVLENBQUM7WUFDM0IsS0FBSyxFQUFFLE9BQU8sQ0FBQyxjQUFjLENBQUM7WUFDOUIsSUFBSSxFQUFFLHNCQUFzQjtZQUM1QixJQUFJLEVBQUUsTUFBTTtZQUNaLGlCQUFpQixFQUFFLElBQUk7U0FDeEIsQ0FBQyxDQUFDO0lBRWdFLENBQUM7SUFFcEUsR0FBRztRQUNELE9BQU8sWUFBWSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsR0FBRyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQzdDLEdBQUcsQ0FBQyxHQUFHLENBQUMsRUFBRTtZQUNSLE9BQU8sQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO1FBQzlDLENBQUMsQ0FBQyxDQUNILENBQUM7SUFDSixDQUFDOzs7WUFsQkYsVUFBVTs7O1lBRkYsOEJBQThCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgZ2V0dGV4dCwgTmF2aWdhdG9yTm9kZSwgTmF2aWdhdG9yTm9kZUZhY3RvcnksIHRvT2JzZXJ2YWJsZSB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMnO1xuaW1wb3J0IHsgbWFwIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuaW1wb3J0IHsgQWJzdHJhY3RDb25uZWN0aXZpdHlUYWJGYWN0b3J5IH0gZnJvbSAnLi9hYnN0cmFjdC1jb25uZWN0aXZpdHktdGFiLmZhY3RvcnknO1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgQWJzdHJhY3RDb25uZWN0aXZpdHlOb2RlRmFjdG9yeSBpbXBsZW1lbnRzIE5hdmlnYXRvck5vZGVGYWN0b3J5IHtcbiAgcHJvdGVjdGVkIHJlYWRvbmx5IGNvbm5lY3Rpdml0eU5vZGU6IE5hdmlnYXRvck5vZGUgPSBuZXcgTmF2aWdhdG9yTm9kZSh7XG4gICAgcGFyZW50OiBnZXR0ZXh0KCdTZXR0aW5ncycpLFxuICAgIGxhYmVsOiBnZXR0ZXh0KCdDb25uZWN0aXZpdHknKSxcbiAgICBwYXRoOiAnY29ubmVjdGl2aXR5U2V0dGluZ3MnLFxuICAgIGljb246ICdwbHVnJyxcbiAgICBwcmV2ZW50RHVwbGljYXRlczogdHJ1ZVxuICB9KTtcblxuICBjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgdGFiRmFjdG9yeTogQWJzdHJhY3RDb25uZWN0aXZpdHlUYWJGYWN0b3J5KSB7fVxuXG4gIGdldCgpIHtcbiAgICByZXR1cm4gdG9PYnNlcnZhYmxlKHRoaXMudGFiRmFjdG9yeS50YWIoKSkucGlwZShcbiAgICAgIG1hcCh0YWIgPT4ge1xuICAgICAgICByZXR1cm4gISF0YWIgPyBbdGhpcy5jb25uZWN0aXZpdHlOb2RlXSA6IFtdO1xuICAgICAgfSlcbiAgICApO1xuICB9XG59XG4iXX0=