import { NgModule } from '@angular/core';
import { ReactiveFormsModule } from '@angular/forms';
import { RouterModule } from '@angular/router';
import { CommonModule, CoreModule, FormsModule, HOOK_NAVIGATOR_NODES, HOOK_TABS } from '@c8y/ngx-components';
import { PopoverModule } from 'ngx-bootstrap/popover';
import { ImpactConnectivityService } from './impact-connectivity.service';
import { ImpactNodeFactory } from './impact-node.factory';
import { ImpactProviderSettingsComponent } from './impact-provider-settings.component';
import { ImpactTabFactory } from './impact-tab.factory';
import { ImpactGuard } from './impact.guard';
import { StatusDisplayComponent } from './status-display.component';
const impactRoutes = [
    {
        path: 'connectivitySettings/impact_provider_settings',
        component: ImpactProviderSettingsComponent,
        canActivate: [ImpactGuard]
    }
];
export class ImpactModule {
}
ImpactModule.decorators = [
    { type: NgModule, args: [{
                declarations: [ImpactProviderSettingsComponent, StatusDisplayComponent],
                exports: [ImpactProviderSettingsComponent],
                imports: [
                    CoreModule,
                    CommonModule,
                    FormsModule,
                    RouterModule.forChild(impactRoutes),
                    PopoverModule,
                    ReactiveFormsModule
                ],
                entryComponents: [ImpactProviderSettingsComponent],
                providers: [
                    ImpactConnectivityService,
                    ImpactGuard,
                    ImpactTabFactory,
                    {
                        provide: HOOK_NAVIGATOR_NODES,
                        useClass: ImpactNodeFactory,
                        multi: true
                    },
                    {
                        provide: HOOK_TABS,
                        useClass: ImpactTabFactory,
                        multi: true
                    }
                ]
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW1wYWN0Lm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2Nvbm5lY3Rpdml0eS9pbXBhY3QvaW1wYWN0Lm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQ0wsWUFBWSxFQUNaLFVBQVUsRUFDVixXQUFXLEVBQ1gsb0JBQW9CLEVBQ3BCLFNBQVMsRUFFVixNQUFNLHFCQUFxQixDQUFDO0FBQzdCLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUN0RCxPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUMxRSxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUMxRCxPQUFPLEVBQUUsK0JBQStCLEVBQUUsTUFBTSxzQ0FBc0MsQ0FBQztBQUN2RixPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUN4RCxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDN0MsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFFcEUsTUFBTSxZQUFZLEdBQVk7SUFDNUI7UUFDRSxJQUFJLEVBQUUsK0NBQStDO1FBQ3JELFNBQVMsRUFBRSwrQkFBK0I7UUFDMUMsV0FBVyxFQUFFLENBQUMsV0FBVyxDQUFDO0tBQzNCO0NBQ0YsQ0FBQztBQThCRixNQUFNLE9BQU8sWUFBWTs7O1lBNUJ4QixRQUFRLFNBQUM7Z0JBQ1IsWUFBWSxFQUFFLENBQUMsK0JBQStCLEVBQUUsc0JBQXNCLENBQUM7Z0JBQ3ZFLE9BQU8sRUFBRSxDQUFDLCtCQUErQixDQUFDO2dCQUMxQyxPQUFPLEVBQUU7b0JBQ1AsVUFBVTtvQkFDVixZQUFZO29CQUNaLFdBQVc7b0JBQ1gsWUFBWSxDQUFDLFFBQVEsQ0FBQyxZQUFZLENBQUM7b0JBQ25DLGFBQWE7b0JBQ2IsbUJBQW1CO2lCQUNwQjtnQkFDRCxlQUFlLEVBQUUsQ0FBQywrQkFBK0IsQ0FBQztnQkFDbEQsU0FBUyxFQUFFO29CQUNULHlCQUF5QjtvQkFDekIsV0FBVztvQkFDWCxnQkFBZ0I7b0JBQ2hCO3dCQUNFLE9BQU8sRUFBRSxvQkFBb0I7d0JBQzdCLFFBQVEsRUFBRSxpQkFBaUI7d0JBQzNCLEtBQUssRUFBRSxJQUFJO3FCQUNaO29CQUNEO3dCQUNFLE9BQU8sRUFBRSxTQUFTO3dCQUNsQixRQUFRLEVBQUUsZ0JBQWdCO3dCQUMxQixLQUFLLEVBQUUsSUFBSTtxQkFDWjtpQkFDRjthQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFJlYWN0aXZlRm9ybXNNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBSb3V0ZXJNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xuaW1wb3J0IHtcbiAgQ29tbW9uTW9kdWxlLFxuICBDb3JlTW9kdWxlLFxuICBGb3Jtc01vZHVsZSxcbiAgSE9PS19OQVZJR0FUT1JfTk9ERVMsXG4gIEhPT0tfVEFCUyxcbiAgUm91dGVcbn0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cyc7XG5pbXBvcnQgeyBQb3BvdmVyTW9kdWxlIH0gZnJvbSAnbmd4LWJvb3RzdHJhcC9wb3BvdmVyJztcbmltcG9ydCB7IEltcGFjdENvbm5lY3Rpdml0eVNlcnZpY2UgfSBmcm9tICcuL2ltcGFjdC1jb25uZWN0aXZpdHkuc2VydmljZSc7XG5pbXBvcnQgeyBJbXBhY3ROb2RlRmFjdG9yeSB9IGZyb20gJy4vaW1wYWN0LW5vZGUuZmFjdG9yeSc7XG5pbXBvcnQgeyBJbXBhY3RQcm92aWRlclNldHRpbmdzQ29tcG9uZW50IH0gZnJvbSAnLi9pbXBhY3QtcHJvdmlkZXItc2V0dGluZ3MuY29tcG9uZW50JztcbmltcG9ydCB7IEltcGFjdFRhYkZhY3RvcnkgfSBmcm9tICcuL2ltcGFjdC10YWIuZmFjdG9yeSc7XG5pbXBvcnQgeyBJbXBhY3RHdWFyZCB9IGZyb20gJy4vaW1wYWN0Lmd1YXJkJztcbmltcG9ydCB7IFN0YXR1c0Rpc3BsYXlDb21wb25lbnQgfSBmcm9tICcuL3N0YXR1cy1kaXNwbGF5LmNvbXBvbmVudCc7XG5cbmNvbnN0IGltcGFjdFJvdXRlczogUm91dGVbXSA9IFtcbiAge1xuICAgIHBhdGg6ICdjb25uZWN0aXZpdHlTZXR0aW5ncy9pbXBhY3RfcHJvdmlkZXJfc2V0dGluZ3MnLFxuICAgIGNvbXBvbmVudDogSW1wYWN0UHJvdmlkZXJTZXR0aW5nc0NvbXBvbmVudCxcbiAgICBjYW5BY3RpdmF0ZTogW0ltcGFjdEd1YXJkXVxuICB9XG5dO1xuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtJbXBhY3RQcm92aWRlclNldHRpbmdzQ29tcG9uZW50LCBTdGF0dXNEaXNwbGF5Q29tcG9uZW50XSxcbiAgZXhwb3J0czogW0ltcGFjdFByb3ZpZGVyU2V0dGluZ3NDb21wb25lbnRdLFxuICBpbXBvcnRzOiBbXG4gICAgQ29yZU1vZHVsZSxcbiAgICBDb21tb25Nb2R1bGUsXG4gICAgRm9ybXNNb2R1bGUsXG4gICAgUm91dGVyTW9kdWxlLmZvckNoaWxkKGltcGFjdFJvdXRlcyksXG4gICAgUG9wb3Zlck1vZHVsZSxcbiAgICBSZWFjdGl2ZUZvcm1zTW9kdWxlXG4gIF0sXG4gIGVudHJ5Q29tcG9uZW50czogW0ltcGFjdFByb3ZpZGVyU2V0dGluZ3NDb21wb25lbnRdLFxuICBwcm92aWRlcnM6IFtcbiAgICBJbXBhY3RDb25uZWN0aXZpdHlTZXJ2aWNlLFxuICAgIEltcGFjdEd1YXJkLFxuICAgIEltcGFjdFRhYkZhY3RvcnksXG4gICAge1xuICAgICAgcHJvdmlkZTogSE9PS19OQVZJR0FUT1JfTk9ERVMsXG4gICAgICB1c2VDbGFzczogSW1wYWN0Tm9kZUZhY3RvcnksXG4gICAgICBtdWx0aTogdHJ1ZVxuICAgIH0sXG4gICAge1xuICAgICAgcHJvdmlkZTogSE9PS19UQUJTLFxuICAgICAgdXNlQ2xhc3M6IEltcGFjdFRhYkZhY3RvcnksXG4gICAgICBtdWx0aTogdHJ1ZVxuICAgIH1cbiAgXVxufSlcbmV4cG9ydCBjbGFzcyBJbXBhY3RNb2R1bGUge31cbiJdfQ==