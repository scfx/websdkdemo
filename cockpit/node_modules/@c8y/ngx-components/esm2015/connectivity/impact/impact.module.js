import { NgModule } from '@angular/core';
import { ReactiveFormsModule } from '@angular/forms';
import { RouterModule } from '@angular/router';
import { CommonModule, CoreModule, FormsModule, HOOK_NAVIGATOR_NODES, HOOK_TABS } from '@c8y/ngx-components';
import { PopoverModule } from 'ngx-bootstrap/popover';
import { ImpactConnectivityService } from './impact-connectivity.service';
import { ImpactNodeFactory } from './impact-node.factory';
import { ImpactProviderSettingsComponent } from './impact-provider-settings.component';
import { ImpactTabFactory } from './impact-tab.factory';
import { ImpactGuard } from './impact.guard';
import { StatusDisplayComponent } from './status-display.component';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/router';
const impactRoutes = [
    {
        path: 'connectivitySettings/impact_provider_settings',
        component: ImpactProviderSettingsComponent,
        canActivate: [ImpactGuard]
    }
];
export class ImpactModule {
}
ImpactModule.ɵfac = function ImpactModule_Factory(t) { return new (t || ImpactModule)(); };
ImpactModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: ImpactModule });
ImpactModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [
        ImpactConnectivityService,
        ImpactGuard,
        ImpactTabFactory,
        {
            provide: HOOK_NAVIGATOR_NODES,
            useClass: ImpactNodeFactory,
            multi: true
        },
        {
            provide: HOOK_TABS,
            useClass: ImpactTabFactory,
            multi: true
        }
    ], imports: [[
            CoreModule,
            CommonModule,
            FormsModule,
            RouterModule.forChild(impactRoutes),
            PopoverModule,
            ReactiveFormsModule
        ]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ImpactModule, [{
        type: NgModule,
        args: [{
                declarations: [ImpactProviderSettingsComponent, StatusDisplayComponent],
                exports: [ImpactProviderSettingsComponent],
                imports: [
                    CoreModule,
                    CommonModule,
                    FormsModule,
                    RouterModule.forChild(impactRoutes),
                    PopoverModule,
                    ReactiveFormsModule
                ],
                entryComponents: [ImpactProviderSettingsComponent],
                providers: [
                    ImpactConnectivityService,
                    ImpactGuard,
                    ImpactTabFactory,
                    {
                        provide: HOOK_NAVIGATOR_NODES,
                        useClass: ImpactNodeFactory,
                        multi: true
                    },
                    {
                        provide: HOOK_TABS,
                        useClass: ImpactTabFactory,
                        multi: true
                    }
                ]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ImpactModule, { declarations: function () { return [ImpactProviderSettingsComponent, StatusDisplayComponent]; }, imports: function () { return [CoreModule,
        CommonModule,
        FormsModule, ɵngcc1.RouterModule, PopoverModule,
        ReactiveFormsModule]; }, exports: function () { return [ImpactProviderSettingsComponent]; } }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW1wYWN0Lm1vZHVsZS5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vY29ubmVjdGl2aXR5L2ltcGFjdC9pbXBhY3QubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDckQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFDTCxZQUFZLEVBQ1osVUFBVSxFQUNWLFdBQVcsRUFDWCxvQkFBb0IsRUFDcEIsU0FBUyxFQUVWLE1BQU0scUJBQXFCLENBQUM7QUFDN0IsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQ3RELE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBQzFFLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQzFELE9BQU8sRUFBRSwrQkFBK0IsRUFBRSxNQUFNLHNDQUFzQyxDQUFDO0FBQ3ZGLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ3hELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUM3QyxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQzs7O0FBRXBFLE1BQU0sWUFBWSxHQUFZO0FBQzlCLElBQUU7QUFDRixRQUFJLElBQUksRUFBRSwrQ0FBK0M7QUFDekQsUUFBSSxTQUFTLEVBQUUsK0JBQStCO0FBQzlDLFFBQUksV0FBVyxFQUFFLENBQUMsV0FBVyxDQUFDO0FBQzlCLEtBQUc7QUFDSCxDQUFDLENBQUM7QUE4QkYsTUFBTSxPQUFPLFlBQVk7QUFBRzt3Q0E1QjNCLFFBQVEsU0FBQyxrQkFDUixZQUFZLEVBQUUsQ0FBQzs2QkFBK0IsRUFBRSxzQkFBc0IsQ0FBQyxrQkFDdkUsT0FBTyxFQUFFLENBQUM7OEJBQStCLENBQUMsa0JBQzFDLE9BQU8sRUFBRTtPQUNQLFVBQVU7SUFDVixZQUFZO2lCQUNaO0VBQVc7Y0FDWCxZQUFZLENBQUMsUUFBUSxDQUFDO0tBQVksQ0FBQyxzQkFDbkM7QUFBYSxzQkFDYjs7TUFBbUI7Y0FDcEI7QUFDRCxlQUFlLEVBQUUsQ0FBQztTQUErQixDQUFDO0lBQ2xEO0dBQVMsRUFBRTtRQUNUO1NBQXlCO0tBQ3pCLFdBQVc7YUFDWCxnQkFBZ0I7RUFDaEI7Q0FDRSxPQUFPLEVBQUUsb0JBQW9COztTQUM3QixRQUFRLEVBQUUsaUJBQWlCLDBCQUMzQixLQUFLLEVBQUUsSUFBSSxzQkFDWjtTQUNEO1dBQ0U7Q0FBTyxFQUFFLFNBQVMsMEJBQ2xCLFFBQVEsRUFBRSxnQkFBZ0I7Q0FDMUIsS0FBSyxFQUFFLElBQUksc0JBQ1osa0JBQ0Y7TUFDRjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7NkdBQ0k7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBSZWFjdGl2ZUZvcm1zTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgUm91dGVyTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcbmltcG9ydCB7XG4gIENvbW1vbk1vZHVsZSxcbiAgQ29yZU1vZHVsZSxcbiAgRm9ybXNNb2R1bGUsXG4gIEhPT0tfTkFWSUdBVE9SX05PREVTLFxuICBIT09LX1RBQlMsXG4gIFJvdXRlXG59IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMnO1xuaW1wb3J0IHsgUG9wb3Zlck1vZHVsZSB9IGZyb20gJ25neC1ib290c3RyYXAvcG9wb3Zlcic7XG5pbXBvcnQgeyBJbXBhY3RDb25uZWN0aXZpdHlTZXJ2aWNlIH0gZnJvbSAnLi9pbXBhY3QtY29ubmVjdGl2aXR5LnNlcnZpY2UnO1xuaW1wb3J0IHsgSW1wYWN0Tm9kZUZhY3RvcnkgfSBmcm9tICcuL2ltcGFjdC1ub2RlLmZhY3RvcnknO1xuaW1wb3J0IHsgSW1wYWN0UHJvdmlkZXJTZXR0aW5nc0NvbXBvbmVudCB9IGZyb20gJy4vaW1wYWN0LXByb3ZpZGVyLXNldHRpbmdzLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBJbXBhY3RUYWJGYWN0b3J5IH0gZnJvbSAnLi9pbXBhY3QtdGFiLmZhY3RvcnknO1xuaW1wb3J0IHsgSW1wYWN0R3VhcmQgfSBmcm9tICcuL2ltcGFjdC5ndWFyZCc7XG5pbXBvcnQgeyBTdGF0dXNEaXNwbGF5Q29tcG9uZW50IH0gZnJvbSAnLi9zdGF0dXMtZGlzcGxheS5jb21wb25lbnQnO1xuXG5jb25zdCBpbXBhY3RSb3V0ZXM6IFJvdXRlW10gPSBbXG4gIHtcbiAgICBwYXRoOiAnY29ubmVjdGl2aXR5U2V0dGluZ3MvaW1wYWN0X3Byb3ZpZGVyX3NldHRpbmdzJyxcbiAgICBjb21wb25lbnQ6IEltcGFjdFByb3ZpZGVyU2V0dGluZ3NDb21wb25lbnQsXG4gICAgY2FuQWN0aXZhdGU6IFtJbXBhY3RHdWFyZF1cbiAgfVxuXTtcblxuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbSW1wYWN0UHJvdmlkZXJTZXR0aW5nc0NvbXBvbmVudCwgU3RhdHVzRGlzcGxheUNvbXBvbmVudF0sXG4gIGV4cG9ydHM6IFtJbXBhY3RQcm92aWRlclNldHRpbmdzQ29tcG9uZW50XSxcbiAgaW1wb3J0czogW1xuICAgIENvcmVNb2R1bGUsXG4gICAgQ29tbW9uTW9kdWxlLFxuICAgIEZvcm1zTW9kdWxlLFxuICAgIFJvdXRlck1vZHVsZS5mb3JDaGlsZChpbXBhY3RSb3V0ZXMpLFxuICAgIFBvcG92ZXJNb2R1bGUsXG4gICAgUmVhY3RpdmVGb3Jtc01vZHVsZVxuICBdLFxuICBlbnRyeUNvbXBvbmVudHM6IFtJbXBhY3RQcm92aWRlclNldHRpbmdzQ29tcG9uZW50XSxcbiAgcHJvdmlkZXJzOiBbXG4gICAgSW1wYWN0Q29ubmVjdGl2aXR5U2VydmljZSxcbiAgICBJbXBhY3RHdWFyZCxcbiAgICBJbXBhY3RUYWJGYWN0b3J5LFxuICAgIHtcbiAgICAgIHByb3ZpZGU6IEhPT0tfTkFWSUdBVE9SX05PREVTLFxuICAgICAgdXNlQ2xhc3M6IEltcGFjdE5vZGVGYWN0b3J5LFxuICAgICAgbXVsdGk6IHRydWVcbiAgICB9LFxuICAgIHtcbiAgICAgIHByb3ZpZGU6IEhPT0tfVEFCUyxcbiAgICAgIHVzZUNsYXNzOiBJbXBhY3RUYWJGYWN0b3J5LFxuICAgICAgbXVsdGk6IHRydWVcbiAgICB9XG4gIF1cbn0pXG5leHBvcnQgY2xhc3MgSW1wYWN0TW9kdWxlIHt9XG4iXX0=