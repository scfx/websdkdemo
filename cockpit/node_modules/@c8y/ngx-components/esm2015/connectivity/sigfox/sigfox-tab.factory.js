import { Injectable } from '@angular/core';
import { Router } from '@angular/router';
import { gettext } from '@c8y/ngx-components';
import { AbstractConnectivityTabFactory } from '../abstract-connectivity-tab.factory';
import { SigfoxGuard } from './sigfox.guard';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/router';
import * as ɵngcc2 from './sigfox.guard';
export class SigfoxTabFactory extends AbstractConnectivityTabFactory {
    constructor(router, guard) {
        super(router, guard);
        this.router = router;
        this.guard = guard;
        this.tabConfig = {
            label: gettext('Sigfox provider settings'),
            path: '/connectivitySettings/sigfox_provider_settings',
            icon: 'c8y-device'
        };
    }
    config() {
        return this.tabConfig;
    }
}
SigfoxTabFactory.ɵfac = function SigfoxTabFactory_Factory(t) { return new (t || SigfoxTabFactory)(ɵngcc0.ɵɵinject(ɵngcc1.Router), ɵngcc0.ɵɵinject(ɵngcc2.SigfoxGuard)); };
SigfoxTabFactory.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: SigfoxTabFactory, factory: SigfoxTabFactory.ɵfac });
SigfoxTabFactory.ctorParameters = () => [
    { type: Router },
    { type: SigfoxGuard }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SigfoxTabFactory, [{
        type: Injectable
    }], function () { return [{ type: ɵngcc1.Router }, { type: ɵngcc2.SigfoxGuard }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2lnZm94LXRhYi5mYWN0b3J5LmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9jb25uZWN0aXZpdHkvc2lnZm94L3NpZ2ZveC10YWIuZmFjdG9yeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUN6QyxPQUFPLEVBQUUsT0FBTyxFQUFPLE1BQU0scUJBQXFCLENBQUM7QUFDbkQsT0FBTyxFQUFFLDhCQUE4QixFQUFFLE1BQU0sc0NBQXNDLENBQUM7QUFDdEYsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDOzs7O0FBRzdDLE1BQU0sT0FBTyxnQkFBaUIsU0FBUSw4QkFBOEI7QUFDcEUsSUFNRSxZQUFzQixNQUFjLEVBQVksS0FBa0I7QUFDcEUsUUFBSSxLQUFLLENBQUMsTUFBTSxFQUFFLEtBQUssQ0FBQyxDQUFDO0FBQ3pCLFFBRndCLFdBQU0sR0FBTixNQUFNLENBQVE7QUFBQyxRQUFXLFVBQUssR0FBTCxLQUFLLENBQWE7QUFBQyxRQU4zRCxjQUFTLEdBQVE7QUFDM0IsWUFBSSxLQUFLLEVBQUUsT0FBTyxDQUFDLDBCQUEwQixDQUFDO0FBQzlDLFlBQUksSUFBSSxFQUFFLGdEQUFnRDtBQUMxRCxZQUFJLElBQUksRUFBRSxZQUFZO0FBQ3RCLFNBQUcsQ0FBQztBQUNKLElBR0UsQ0FBQztBQUNILElBQ1ksTUFBTTtBQUFLLFFBQ25CLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQztBQUMxQixJQUFFLENBQUM7QUFDSDs0Q0FmQyxVQUFVOzhIQUNUO0FBQUM7QUFBMEMsWUFOcEMsTUFBTTtBQUFJLFlBR1YsV0FBVztBQUFHOzs7cUdBQUU7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFJvdXRlciB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XG5pbXBvcnQgeyBnZXR0ZXh0LCBUYWIgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzJztcbmltcG9ydCB7IEFic3RyYWN0Q29ubmVjdGl2aXR5VGFiRmFjdG9yeSB9IGZyb20gJy4uL2Fic3RyYWN0LWNvbm5lY3Rpdml0eS10YWIuZmFjdG9yeSc7XG5pbXBvcnQgeyBTaWdmb3hHdWFyZCB9IGZyb20gJy4vc2lnZm94Lmd1YXJkJztcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFNpZ2ZveFRhYkZhY3RvcnkgZXh0ZW5kcyBBYnN0cmFjdENvbm5lY3Rpdml0eVRhYkZhY3Rvcnkge1xuICBwcml2YXRlIHRhYkNvbmZpZzogVGFiID0ge1xuICAgIGxhYmVsOiBnZXR0ZXh0KCdTaWdmb3ggcHJvdmlkZXIgc2V0dGluZ3MnKSxcbiAgICBwYXRoOiAnL2Nvbm5lY3Rpdml0eVNldHRpbmdzL3NpZ2ZveF9wcm92aWRlcl9zZXR0aW5ncycsXG4gICAgaWNvbjogJ2M4eS1kZXZpY2UnXG4gIH07XG5cbiAgY29uc3RydWN0b3IocHJvdGVjdGVkIHJvdXRlcjogUm91dGVyLCBwcm90ZWN0ZWQgZ3VhcmQ6IFNpZ2ZveEd1YXJkKSB7XG4gICAgc3VwZXIocm91dGVyLCBndWFyZCk7XG4gIH1cblxuICBwcm90ZWN0ZWQgY29uZmlnKCk6IFRhYiB7XG4gICAgcmV0dXJuIHRoaXMudGFiQ29uZmlnO1xuICB9XG59XG4iXX0=