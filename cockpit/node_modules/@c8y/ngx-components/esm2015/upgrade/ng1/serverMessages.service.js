import { Injectable, Inject } from '@angular/core';
import { TranslateService } from '@ngx-translate/core';
import { HOOK_PATTERN_MESSAGES } from '@c8y/ngx-components';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@ngx-translate/core';
export class ServerMessagesService {
    constructor(translateService, patterns) {
        this.translateService = translateService;
        this.MESSAGE_PATTERNS = patterns;
    }
    translate(s) {
        return this.translateService.instant(s);
    }
}
ServerMessagesService.ɵfac = function ServerMessagesService_Factory(t) { return new (t || ServerMessagesService)(ɵngcc0.ɵɵinject(ɵngcc1.TranslateService), ɵngcc0.ɵɵinject(HOOK_PATTERN_MESSAGES)); };
ServerMessagesService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: ServerMessagesService, factory: ServerMessagesService.ɵfac });
ServerMessagesService.ctorParameters = () => [
    { type: TranslateService },
    { type: undefined, decorators: [{ type: Inject, args: [HOOK_PATTERN_MESSAGES,] }] }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ServerMessagesService, [{
        type: Injectable
    }], function () { return [{ type: ɵngcc1.TranslateService }, { type: undefined, decorators: [{
                type: Inject,
                args: [HOOK_PATTERN_MESSAGES]
            }] }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VydmVyTWVzc2FnZXMuc2VydmljZS5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vdXBncmFkZS9uZzEvc2VydmVyTWVzc2FnZXMuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNuRCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUN2RCxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQzs7O0FBRzVELE1BQU0sT0FBTyxxQkFBcUI7QUFDbEMsSUFFRSxZQUNVLGdCQUFrQyxFQUNYLFFBQVE7QUFDeEMsUUFGUyxxQkFBZ0IsR0FBaEIsZ0JBQWdCLENBQWtCO0FBQUMsUUFHM0MsSUFBSSxDQUFDLGdCQUFnQixHQUFHLFFBQVEsQ0FBQztBQUNyQyxJQUFFLENBQUM7QUFDSCxJQUNFLFNBQVMsQ0FBQyxDQUFTO0FBQ3JCLFFBQUksT0FBTyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQzVDLElBQUUsQ0FBQztBQUNIO2lEQWRDLFVBQVU7NklBQ1Q7QUFBQztBQUVTLFlBTkgsZ0JBQWdCO0FBQUksNENBU3hCLE1BQU0sU0FBQyxxQkFBcUI7QUFBUTs7Ozs7O2tDQUFFO0FBQzNDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSwgSW5qZWN0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBUcmFuc2xhdGVTZXJ2aWNlIH0gZnJvbSAnQG5neC10cmFuc2xhdGUvY29yZSc7XG5pbXBvcnQgeyBIT09LX1BBVFRFUk5fTUVTU0FHRVMgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzJztcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFNlcnZlck1lc3NhZ2VzU2VydmljZSB7XG5cbiAgTUVTU0FHRV9QQVRURVJOUzogYW55O1xuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIHRyYW5zbGF0ZVNlcnZpY2U6IFRyYW5zbGF0ZVNlcnZpY2UsXG4gICAgQEluamVjdChIT09LX1BBVFRFUk5fTUVTU0FHRVMpIHBhdHRlcm5zXG4gICkge1xuICAgIHRoaXMuTUVTU0FHRV9QQVRURVJOUyA9IHBhdHRlcm5zO1xuICB9XG5cbiAgdHJhbnNsYXRlKHM6IHN0cmluZykge1xuICAgIHJldHVybiB0aGlzLnRyYW5zbGF0ZVNlcnZpY2UuaW5zdGFudChzKTtcbiAgfVxufVxuIl19