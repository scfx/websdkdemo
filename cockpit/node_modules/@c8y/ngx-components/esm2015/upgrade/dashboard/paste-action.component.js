import { Component, TemplateRef, ViewChild, ViewContainerRef } from '@angular/core';
import { DashboardBridgeService } from './dashboard-bridge.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './dashboard-bridge.service';
import * as ɵngcc2 from '@c8y/ngx-components';

const _c0 = ["templatePaste"];
function PasteActionComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {
    const _r3 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "li");
    ɵngcc0.ɵɵelementStart(1, "button", 1);
    ɵngcc0.ɵɵlistener("click", function PasteActionComponent_ng_template_0_Template_button_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r2 = ɵngcc0.ɵɵnextContext(); return ctx_r2.pasteDashboard(); });
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelement(3, "i", 2);
    ɵngcc0.ɵɵelementStart(4, "span", 3);
    ɵngcc0.ɵɵtext(5, "Paste dashboard");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(6, "\u00A0");
    ɵngcc0.ɵɵelementStart(7, "span");
    ɵngcc0.ɵɵtext(8);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(2, 2, "Paste dashboard"));
    ɵngcc0.ɵɵadvance(7);
    ɵngcc0.ɵɵtextInterpolate1("\"", ctx_r1.dashboardName, "\"");
} }
export class PasteActionComponent {
    constructor(vcRef, dashboardBridgeService) {
        this.vcRef = vcRef;
        this.dashboardBridgeService = dashboardBridgeService;
        this.dashboardName = '';
    }
    ngOnInit() {
        this.vcRef.createEmbeddedView(this.templatePaste);
        this.dashboardName = this.dashboardBridgeService.dashboardClipboard.c8y_Dashboard.name;
    }
    pasteDashboard() {
        this.dashboardBridgeService.pasteDashboard();
    }
}
PasteActionComponent.ɵfac = function PasteActionComponent_Factory(t) { return new (t || PasteActionComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DashboardBridgeService)); };
PasteActionComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: PasteActionComponent, selectors: [["c8y-paste-action-legacy"]], viewQuery: function PasteActionComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c0, 7, TemplateRef);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templatePaste = _t.first);
    } }, decls: 2, vars: 0, consts: [["templatePaste", ""], [3, "title", "click"], ["c8yIcon", "clipboard", 1, "m-r-4"], ["translate", ""]], template: function PasteActionComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, PasteActionComponent_ng_template_0_Template, 9, 4, "ng-template", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);
    } }, directives: [ɵngcc2.C8yTranslateDirective], pipes: [ɵngcc2.C8yTranslatePipe], encapsulation: 2 });
PasteActionComponent.ctorParameters = () => [
    { type: ViewContainerRef },
    { type: DashboardBridgeService }
];
PasteActionComponent.propDecorators = {
    templatePaste: [{ type: ViewChild, args: ['templatePaste', { read: TemplateRef, static: true },] }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PasteActionComponent, [{
        type: Component,
        args: [{
                selector: 'c8y-paste-action-legacy',
                template: `
    <ng-template #templatePaste>
      <li>
        <button title="{{'Paste dashboard' | translate}}" (click)="pasteDashboard()">
          <i class="m-r-4" c8yIcon="clipboard"></i><span translate>Paste dashboard</span>&nbsp;<span
            >"{{ dashboardName }}"</span
          >
        </button>
      </li>
    </ng-template>
  `
            }]
    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc1.DashboardBridgeService }]; }, { templatePaste: [{
            type: ViewChild,
            args: ['templatePaste', { read: TemplateRef, static: true }]
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFzdGUtYWN0aW9uLmNvbXBvbmVudC5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vdXBncmFkZS9kYXNoYm9hcmQvcGFzdGUtYWN0aW9uLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFVLFdBQVcsRUFBRSxTQUFTLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDNUYsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sNEJBQTRCLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBZ0JwRSxNQUFNLE9BQU8sb0JBQW9CO0FBQUcsSUFJbEMsWUFDVSxLQUF1QixFQUN2QixzQkFBOEM7QUFDdkQsUUFGUyxVQUFLLEdBQUwsS0FBSyxDQUFrQjtBQUFDLFFBQ3hCLDJCQUFzQixHQUF0QixzQkFBc0IsQ0FBd0I7QUFDMUQsUUFMRSxrQkFBYSxHQUFHLEVBQUUsQ0FBQztBQUNyQixJQUlLLENBQUM7QUFDTixJQUNFLFFBQVE7QUFDVixRQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsa0JBQWtCLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDO0FBQ3RELFFBQUksSUFBSSxDQUFDLGFBQWEsR0FBRyxJQUFJLENBQUMsc0JBQXNCLENBQUMsa0JBQWtCLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQztBQUMzRixJQUFFLENBQUM7QUFDSCxJQUNFLGNBQWM7QUFDaEIsUUFBSSxJQUFJLENBQUMsc0JBQXNCLENBQUMsY0FBYyxFQUFFLENBQUM7QUFDakQsSUFBRSxDQUFDO0FBQ0g7Z0RBL0JDLFNBQVMsU0FBQyxrQkFDVCxRQUFRLEVBQUUseUJBQXlCLGtCQUNuQyxRQUFRLEVBQUU7OztHQVVULGNBQ0Y7Ozs7OzJHQUNJO0FBQUM7QUFBOEMsWUFqQkEsZ0JBQWdCO0FBQUksWUFDL0Qsc0JBQXNCO0FBQUc7QUFBRztBQUU5Qiw0QkFlSixTQUFTLFNBQUMsZUFBZSxFQUFFLEVBQUUsSUFBSSxFQUFFLFdBQVcsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFO0FBQU07Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O29CQUFFO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgVGVtcGxhdGVSZWYsIFZpZXdDaGlsZCwgVmlld0NvbnRhaW5lclJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRGFzaGJvYXJkQnJpZGdlU2VydmljZSB9IGZyb20gJy4vZGFzaGJvYXJkLWJyaWRnZS5zZXJ2aWNlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYzh5LXBhc3RlLWFjdGlvbi1sZWdhY3knLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxuZy10ZW1wbGF0ZSAjdGVtcGxhdGVQYXN0ZT5cbiAgICAgIDxsaT5cbiAgICAgICAgPGJ1dHRvbiB0aXRsZT1cInt7J1Bhc3RlIGRhc2hib2FyZCcgfCB0cmFuc2xhdGV9fVwiIChjbGljayk9XCJwYXN0ZURhc2hib2FyZCgpXCI+XG4gICAgICAgICAgPGkgY2xhc3M9XCJtLXItNFwiIGM4eUljb249XCJjbGlwYm9hcmRcIj48L2k+PHNwYW4gdHJhbnNsYXRlPlBhc3RlIGRhc2hib2FyZDwvc3Bhbj4mbmJzcDs8c3BhblxuICAgICAgICAgICAgPlwie3sgZGFzaGJvYXJkTmFtZSB9fVwiPC9zcGFuXG4gICAgICAgICAgPlxuICAgICAgICA8L2J1dHRvbj5cbiAgICAgIDwvbGk+XG4gICAgPC9uZy10ZW1wbGF0ZT5cbiAgYFxufSlcbmV4cG9ydCBjbGFzcyBQYXN0ZUFjdGlvbkNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIEBWaWV3Q2hpbGQoJ3RlbXBsYXRlUGFzdGUnLCB7IHJlYWQ6IFRlbXBsYXRlUmVmLCBzdGF0aWM6IHRydWUgfSkgdGVtcGxhdGVQYXN0ZTtcbiAgZGFzaGJvYXJkTmFtZSA9ICcnO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgdmNSZWY6IFZpZXdDb250YWluZXJSZWYsXG4gICAgcHJpdmF0ZSBkYXNoYm9hcmRCcmlkZ2VTZXJ2aWNlOiBEYXNoYm9hcmRCcmlkZ2VTZXJ2aWNlXG4gICkge31cblxuICBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLnZjUmVmLmNyZWF0ZUVtYmVkZGVkVmlldyh0aGlzLnRlbXBsYXRlUGFzdGUpO1xuICAgIHRoaXMuZGFzaGJvYXJkTmFtZSA9IHRoaXMuZGFzaGJvYXJkQnJpZGdlU2VydmljZS5kYXNoYm9hcmRDbGlwYm9hcmQuYzh5X0Rhc2hib2FyZC5uYW1lO1xuICB9XG5cbiAgcGFzdGVEYXNoYm9hcmQoKSB7XG4gICAgdGhpcy5kYXNoYm9hcmRCcmlkZ2VTZXJ2aWNlLnBhc3RlRGFzaGJvYXJkKCk7XG4gIH1cbn1cbiJdfQ==