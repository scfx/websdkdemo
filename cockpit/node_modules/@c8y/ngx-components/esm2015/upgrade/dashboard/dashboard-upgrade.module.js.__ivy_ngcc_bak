import { CommonModule } from '@angular/common';
import { NgModule, NgZone, Optional } from '@angular/core';
import { Router } from '@angular/router';
import { ActionBarService, HOOK_ACTION_BAR, HOOK_COMPONENTS } from '@c8y/ngx-components';
import { ContextDashboardService } from '@c8y/ngx-components/context-dashboard';
import { Ng1ComponentFactoryService } from './component.factory';
import { CopyActionComponent } from './copy-action.component';
import { Ng1DashboardActionFactoryService } from './dashboard-actions.factory';
import { DashboardBridgeService } from './dashboard-bridge.service';
import { PasteActionComponent } from './paste-action.component';
import { WidgetComponent } from './widget.component';
import { DeviceSelectorComponent } from './device-selector.component';
import { C8yTranslateModule } from '@c8y/ngx-components';
export class DashboardUpgradeModule {
}
DashboardUpgradeModule.decorators = [
    { type: NgModule, args: [{
                declarations: [DeviceSelectorComponent, WidgetComponent, CopyActionComponent, PasteActionComponent],
                entryComponents: [DeviceSelectorComponent, WidgetComponent, CopyActionComponent, PasteActionComponent],
                imports: [CommonModule, C8yTranslateModule],
                providers: [
                    {
                        provide: DashboardBridgeService,
                        useFactory: dashboardBridgeFactory,
                        deps: ['$injector', NgZone, Router, [new Optional(), ContextDashboardService], ActionBarService]
                    },
                    { provide: HOOK_COMPONENTS, useClass: Ng1ComponentFactoryService, multi: true },
                    { provide: HOOK_ACTION_BAR, useClass: Ng1DashboardActionFactoryService, multi: true }
                ]
            },] }
];
export function dashboardBridgeFactory(injector, ngZone, router, contextDashboardService, actionBarService) {
    return new DashboardBridgeService(injector, ngZone, router, contextDashboardService, actionBarService);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGFzaGJvYXJkLXVwZ3JhZGUubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vdXBncmFkZS9kYXNoYm9hcmQvZGFzaGJvYXJkLXVwZ3JhZGUubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0QsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ3pDLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxlQUFlLEVBQUUsZUFBZSxFQUFDLE1BQU0scUJBQXFCLENBQUM7QUFDeEYsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sdUNBQXVDLENBQUM7QUFDaEYsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDakUsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDOUQsT0FBTyxFQUFFLGdDQUFnQyxFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFDL0UsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDcEUsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDaEUsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ3JELE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBQ3RFLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBZ0J6RCxNQUFNLE9BQU8sc0JBQXNCOzs7WUFkbEMsUUFBUSxTQUFDO2dCQUNSLFlBQVksRUFBRSxDQUFDLHVCQUF1QixFQUFFLGVBQWUsRUFBRSxtQkFBbUIsRUFBRSxvQkFBb0IsQ0FBQztnQkFDbkcsZUFBZSxFQUFFLENBQUMsdUJBQXVCLEVBQUUsZUFBZSxFQUFFLG1CQUFtQixFQUFFLG9CQUFvQixDQUFDO2dCQUN0RyxPQUFPLEVBQUUsQ0FBQyxZQUFZLEVBQUUsa0JBQWtCLENBQUM7Z0JBQzNDLFNBQVMsRUFBRTtvQkFDVDt3QkFDRSxPQUFPLEVBQUUsc0JBQXNCO3dCQUMvQixVQUFVLEVBQUUsc0JBQXNCO3dCQUNsQyxJQUFJLEVBQUUsQ0FBQyxXQUFXLEVBQUUsTUFBTSxFQUFFLE1BQU0sRUFBRSxDQUFDLElBQUksUUFBUSxFQUFFLEVBQUUsdUJBQXVCLENBQUMsRUFBRSxnQkFBZ0IsQ0FBQztxQkFDakc7b0JBQ0QsRUFBRSxPQUFPLEVBQUUsZUFBZSxFQUFFLFFBQVEsRUFBRSwwQkFBMEIsRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFO29CQUMvRSxFQUFFLE9BQU8sRUFBRSxlQUFlLEVBQUUsUUFBUSxFQUFFLGdDQUFnQyxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUU7aUJBQ3RGO2FBQ0Y7O0FBR0QsTUFBTSxVQUFVLHNCQUFzQixDQUFDLFFBQVEsRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLHVCQUF1QixFQUFFLGdCQUFnQjtJQUN4RyxPQUFPLElBQUksc0JBQXNCLENBQUMsUUFBUSxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsdUJBQXVCLEVBQUUsZ0JBQWdCLENBQUMsQ0FBQztBQUN6RyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IE5nTW9kdWxlLCBOZ1pvbmUsIE9wdGlvbmFsIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBSb3V0ZXIgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xuaW1wb3J0IHsgQWN0aW9uQmFyU2VydmljZSwgSE9PS19BQ1RJT05fQkFSLCBIT09LX0NPTVBPTkVOVFN9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMnO1xuaW1wb3J0IHsgQ29udGV4dERhc2hib2FyZFNlcnZpY2UgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzL2NvbnRleHQtZGFzaGJvYXJkJztcbmltcG9ydCB7IE5nMUNvbXBvbmVudEZhY3RvcnlTZXJ2aWNlIH0gZnJvbSAnLi9jb21wb25lbnQuZmFjdG9yeSc7XG5pbXBvcnQgeyBDb3B5QWN0aW9uQ29tcG9uZW50IH0gZnJvbSAnLi9jb3B5LWFjdGlvbi5jb21wb25lbnQnO1xuaW1wb3J0IHsgTmcxRGFzaGJvYXJkQWN0aW9uRmFjdG9yeVNlcnZpY2UgfSBmcm9tICcuL2Rhc2hib2FyZC1hY3Rpb25zLmZhY3RvcnknO1xuaW1wb3J0IHsgRGFzaGJvYXJkQnJpZGdlU2VydmljZSB9IGZyb20gJy4vZGFzaGJvYXJkLWJyaWRnZS5zZXJ2aWNlJztcbmltcG9ydCB7IFBhc3RlQWN0aW9uQ29tcG9uZW50IH0gZnJvbSAnLi9wYXN0ZS1hY3Rpb24uY29tcG9uZW50JztcbmltcG9ydCB7IFdpZGdldENvbXBvbmVudCB9IGZyb20gJy4vd2lkZ2V0LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBEZXZpY2VTZWxlY3RvckNvbXBvbmVudCB9IGZyb20gJy4vZGV2aWNlLXNlbGVjdG9yLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBDOHlUcmFuc2xhdGVNb2R1bGUgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzJztcblxuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbRGV2aWNlU2VsZWN0b3JDb21wb25lbnQsIFdpZGdldENvbXBvbmVudCwgQ29weUFjdGlvbkNvbXBvbmVudCwgUGFzdGVBY3Rpb25Db21wb25lbnRdLFxuICBlbnRyeUNvbXBvbmVudHM6IFtEZXZpY2VTZWxlY3RvckNvbXBvbmVudCwgV2lkZ2V0Q29tcG9uZW50LCBDb3B5QWN0aW9uQ29tcG9uZW50LCBQYXN0ZUFjdGlvbkNvbXBvbmVudF0sXG4gIGltcG9ydHM6IFtDb21tb25Nb2R1bGUsIEM4eVRyYW5zbGF0ZU1vZHVsZV0sXG4gIHByb3ZpZGVyczogW1xuICAgIHtcbiAgICAgIHByb3ZpZGU6IERhc2hib2FyZEJyaWRnZVNlcnZpY2UsXG4gICAgICB1c2VGYWN0b3J5OiBkYXNoYm9hcmRCcmlkZ2VGYWN0b3J5LFxuICAgICAgZGVwczogWyckaW5qZWN0b3InLCBOZ1pvbmUsIFJvdXRlciwgW25ldyBPcHRpb25hbCgpLCBDb250ZXh0RGFzaGJvYXJkU2VydmljZV0sIEFjdGlvbkJhclNlcnZpY2VdXG4gICAgfSxcbiAgICB7IHByb3ZpZGU6IEhPT0tfQ09NUE9ORU5UUywgdXNlQ2xhc3M6IE5nMUNvbXBvbmVudEZhY3RvcnlTZXJ2aWNlLCBtdWx0aTogdHJ1ZSB9LFxuICAgIHsgcHJvdmlkZTogSE9PS19BQ1RJT05fQkFSLCB1c2VDbGFzczogTmcxRGFzaGJvYXJkQWN0aW9uRmFjdG9yeVNlcnZpY2UsIG11bHRpOiB0cnVlIH1cbiAgXVxufSlcbmV4cG9ydCBjbGFzcyBEYXNoYm9hcmRVcGdyYWRlTW9kdWxlIHt9XG5cbmV4cG9ydCBmdW5jdGlvbiBkYXNoYm9hcmRCcmlkZ2VGYWN0b3J5KGluamVjdG9yLCBuZ1pvbmUsIHJvdXRlciwgY29udGV4dERhc2hib2FyZFNlcnZpY2UsIGFjdGlvbkJhclNlcnZpY2UpIHtcbiAgcmV0dXJuIG5ldyBEYXNoYm9hcmRCcmlkZ2VTZXJ2aWNlKGluamVjdG9yLCBuZ1pvbmUsIHJvdXRlciwgY29udGV4dERhc2hib2FyZFNlcnZpY2UsIGFjdGlvbkJhclNlcnZpY2UpO1xufVxuIl19