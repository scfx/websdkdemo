import { Component, TemplateRef, ViewChild, ViewContainerRef } from '@angular/core';
import { DashboardBridgeService } from './dashboard-bridge.service';
export class CopyActionComponent {
    constructor(vcRef, dashboardBridgeService) {
        this.vcRef = vcRef;
        this.dashboardBridgeService = dashboardBridgeService;
    }
    ngOnInit() {
        this.vcRef.createEmbeddedView(this.templateCopy);
    }
    copyDashboard() {
        this.dashboardBridgeService.copyDashboard();
    }
}
CopyActionComponent.decorators = [
    { type: Component, args: [{
                selector: 'c8y-copy-action-legacy',
                template: `
    <ng-template #templateCopy>
      <li>
        <button title="{{'Copy dashboard' | translate}}" (click)="copyDashboard()">
          <i class="dlt-c8y-icon-copy m-r-4"></i><span translate>Copy dashboard</span>
        </button>
      </li>
    </ng-template>
  `
            },] }
];
CopyActionComponent.ctorParameters = () => [
    { type: ViewContainerRef },
    { type: DashboardBridgeService }
];
CopyActionComponent.propDecorators = {
    templateCopy: [{ type: ViewChild, args: ['templateCopy', { read: TemplateRef, static: true },] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29weS1hY3Rpb24uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vdXBncmFkZS9kYXNoYm9hcmQvY29weS1hY3Rpb24uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsV0FBVyxFQUFFLFNBQVMsRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM1RixPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQWNwRSxNQUFNLE9BQU8sbUJBQW1CO0lBRzlCLFlBQ1UsS0FBdUIsRUFDdkIsc0JBQThDO1FBRDlDLFVBQUssR0FBTCxLQUFLLENBQWtCO1FBQ3ZCLDJCQUFzQixHQUF0QixzQkFBc0IsQ0FBd0I7SUFDckQsQ0FBQztJQUVKLFFBQVE7UUFDTixJQUFJLENBQUMsS0FBSyxDQUFDLGtCQUFrQixDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztJQUNuRCxDQUFDO0lBRUQsYUFBYTtRQUNYLElBQUksQ0FBQyxzQkFBc0IsQ0FBQyxhQUFhLEVBQUUsQ0FBQztJQUM5QyxDQUFDOzs7WUExQkYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSx3QkFBd0I7Z0JBQ2xDLFFBQVEsRUFBRTs7Ozs7Ozs7R0FRVDthQUNGOzs7WUFkbUQsZ0JBQWdCO1lBQzNELHNCQUFzQjs7OzJCQWU1QixTQUFTLFNBQUMsY0FBYyxFQUFFLEVBQUUsSUFBSSxFQUFFLFdBQVcsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIFRlbXBsYXRlUmVmLCBWaWV3Q2hpbGQsIFZpZXdDb250YWluZXJSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IERhc2hib2FyZEJyaWRnZVNlcnZpY2UgfSBmcm9tICcuL2Rhc2hib2FyZC1icmlkZ2Uuc2VydmljZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2M4eS1jb3B5LWFjdGlvbi1sZWdhY3knLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxuZy10ZW1wbGF0ZSAjdGVtcGxhdGVDb3B5PlxuICAgICAgPGxpPlxuICAgICAgICA8YnV0dG9uIHRpdGxlPVwie3snQ29weSBkYXNoYm9hcmQnIHwgdHJhbnNsYXRlfX1cIiAoY2xpY2spPVwiY29weURhc2hib2FyZCgpXCI+XG4gICAgICAgICAgPGkgY2xhc3M9XCJkbHQtYzh5LWljb24tY29weSBtLXItNFwiPjwvaT48c3BhbiB0cmFuc2xhdGU+Q29weSBkYXNoYm9hcmQ8L3NwYW4+XG4gICAgICAgIDwvYnV0dG9uPlxuICAgICAgPC9saT5cbiAgICA8L25nLXRlbXBsYXRlPlxuICBgXG59KVxuZXhwb3J0IGNsYXNzIENvcHlBY3Rpb25Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICBAVmlld0NoaWxkKCd0ZW1wbGF0ZUNvcHknLCB7IHJlYWQ6IFRlbXBsYXRlUmVmLCBzdGF0aWM6IHRydWUgfSkgdGVtcGxhdGVDb3B5O1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgdmNSZWY6IFZpZXdDb250YWluZXJSZWYsXG4gICAgcHJpdmF0ZSBkYXNoYm9hcmRCcmlkZ2VTZXJ2aWNlOiBEYXNoYm9hcmRCcmlkZ2VTZXJ2aWNlXG4gICkge31cblxuICBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLnZjUmVmLmNyZWF0ZUVtYmVkZGVkVmlldyh0aGlzLnRlbXBsYXRlQ29weSk7XG4gIH1cblxuICBjb3B5RGFzaGJvYXJkKCkge1xuICAgIHRoaXMuZGFzaGJvYXJkQnJpZGdlU2VydmljZS5jb3B5RGFzaGJvYXJkKCk7XG4gIH1cbn1cbiJdfQ==