import { Component, EventEmitter } from '@angular/core';
import { gettext } from '@c8y/ngx-components';
import { QueriesUtil } from '@c8y/client';
import { Subject } from 'rxjs';
import { switchMap, map } from 'rxjs/operators';
import { RepositoryService, RepositoryType } from '@c8y/ngx-components/repository';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@c8y/ngx-components/repository';
import * as ɵngcc2 from '@c8y/ngx-components';
import * as ɵngcc3 from '@angular/common';
export class SelectConfigurationModalComponent {
    constructor(repositoryService) {
        this.repositoryService = repositoryService;
        this.title = gettext('Select configuration');
        this.load = new Subject();
        this.configurations = this.load.pipe(switchMap(() => this.getItems()), map(({ data }) => this.aggregate(data)));
        this.resultEmitter = new EventEmitter();
        this.deviceTypeQuery = {};
        this.searchQuery = {};
        this.labels = { ok: gettext('Save') };
        this.queriesUtil = new QueriesUtil();
    }
    search(searchTerm) {
        if (!searchTerm) {
            this.searchQuery = {};
        }
        else {
            this.searchQuery = this.queriesUtil.addOrFilter({ name: `*${searchTerm}*` }, { configurationType: `*${searchTerm}*` });
        }
        this.load.next();
    }
    result(selectedItems) {
        this.resultEmitter.emit(selectedItems);
    }
    getItems() {
        return this.repositoryService.listRepositoryEntries(RepositoryType.CONFIGURATION, {
            query: this.queriesUtil.addOrFilter(this.deviceTypeQuery, this.searchQuery),
            params: { pageSize: 100 }
        });
    }
    aggregate(mos) {
        const selectedItems = this.selected;
        return mos.reduce((acc, curr) => {
            curr.configurationType = curr.configurationType || curr.name;
            const selected = selectedItems && selectedItems.filter(val => val.url === curr.url).length > 0;
            const selectModalOption = {
                body: [{ value: curr.name }],
                obj: curr,
                selected
            };
            let selectModalObject = acc.find(val => val.body[0].value === curr.configurationType);
            if (selectModalObject) {
                selectModalObject.options.push(selectModalOption);
            }
            else {
                selectModalObject = {
                    groupId: curr.id,
                    body: [{ value: curr.configurationType }],
                    options: [selectModalOption]
                };
                acc.push(selectModalObject);
            }
            return acc;
        }, []);
    }
}
SelectConfigurationModalComponent.ɵfac = function SelectConfigurationModalComponent_Factory(t) { return new (t || SelectConfigurationModalComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.RepositoryService)); };
SelectConfigurationModalComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: SelectConfigurationModalComponent, selectors: [["c8y-select-configuration-modal"]], decls: 2, vars: 8, consts: [[3, "icon", "title", "items", "mode", "disableSelected", "labels", "result", "search"]], template: function SelectConfigurationModalComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "c8y-select-modal", 0);
        ɵngcc0.ɵɵlistener("result", function SelectConfigurationModalComponent_Template_c8y_select_modal_result_0_listener($event) { return ctx.result($event); })("search", function SelectConfigurationModalComponent_Template_c8y_select_modal_search_0_listener($event) { return ctx.search($event); });
        ɵngcc0.ɵɵpipe(1, "async");
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("icon", "gears")("title", ctx.title)("items", ɵngcc0.ɵɵpipeBind1(1, 6, ctx.configurations))("mode", "multi")("disableSelected", true)("labels", ctx.labels);
    } }, directives: [ɵngcc2.SelectModalComponent], pipes: [ɵngcc3.AsyncPipe], encapsulation: 2 });
SelectConfigurationModalComponent.ctorParameters = () => [
    { type: RepositoryService }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SelectConfigurationModalComponent, [{
        type: Component,
        args: [{
                selector: 'c8y-select-configuration-modal',
                template: "<c8y-select-modal\n  [icon]=\"'gears'\"\n  [title]=\"title\"\n  [items]=\"configurations | async\"\n  [mode]=\"'multi'\"\n  (result)=\"result($event)\"\n  (search)=\"search($event)\"\n  [disableSelected]=\"true\"\n  [labels]=\"labels\"\n>\n</c8y-select-modal>\n"
            }]
    }], function () { return [{ type: ɵngcc1.RepositoryService }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VsZWN0LWNvbmZpZ3VyYXRpb24tbW9kYWwuY29tcG9uZW50LmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi9kZXZpY2UtcHJvZmlsZS9zZWxlY3QtY29uZmlndXJhdGlvbi1tb2RhbC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDeEQsT0FBTyxFQUFFLE9BQU8sRUFBdUQsTUFBTSxxQkFBcUIsQ0FBQztBQUNuRyxPQUFPLEVBQWtCLFdBQVcsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUMxRCxPQUFPLEVBQUUsT0FBTyxFQUFjLE1BQU0sTUFBTSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxTQUFTLEVBQUUsR0FBRyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDaEQsT0FBTyxFQUFFLGlCQUFpQixFQUFFLGNBQWMsRUFBRSxNQUFNLGdDQUFnQyxDQUFDOzs7OztBQU1uRixNQUFNLE9BQU8saUNBQWlDO0FBQzlDLElBYUUsWUFBb0IsaUJBQW9DO0FBQzFELFFBRHNCLHNCQUFpQixHQUFqQixpQkFBaUIsQ0FBbUI7QUFBQyxRQWJ6RCxVQUFLLEdBQVcsT0FBTyxDQUFDLHNCQUFzQixDQUFDLENBQUM7QUFDbEQsUUFBRSxTQUFJLEdBQWtCLElBQUksT0FBTyxFQUFFLENBQUM7QUFDdEMsUUFBRSxtQkFBYyxHQUFzQixJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FDaEQsU0FBUyxDQUFDLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQyxFQUNoQyxHQUFHLENBQUMsQ0FBQyxFQUFFLElBQUksRUFBRSxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQ3hDLENBQUM7QUFDSixRQUFFLGtCQUFhLEdBQXdCLElBQUksWUFBWSxFQUFPLENBQUM7QUFDL0QsUUFDRSxvQkFBZSxHQUFRLEVBQUUsQ0FB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QUFTLENBQUM7QUFDVixnQkFBUSxHQUFHLENBQUMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLENBQUM7QUFDcEMsYUFBTztBQUNQLFlBQU0sT0FBTyxHQUFHLENBQUM7QUFDakIsUUFBSSxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUM7QUFDWCxJQUFFLENBQUM7QUFDSDs2REF4RUMsU0FBUyxTQUFDLGtCQUNULFFBQVEsRUFBRSxnQ0FBZ0Msa0JBQzFDO2lPQUEwRCxjQUMzRDs7Ozs7OzttR0FDSTtBQUFDO0FBQ1UsWUFQUCxpQkFBaUI7QUFBRzs7Ozs7OztrRkFBRTtBQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBFdmVudEVtaXR0ZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGdldHRleHQsIElTZWxlY3RNb2RhbE9iamVjdCwgSVNlbGVjdE1vZGFsT3B0aW9uLCBNb2RhbExhYmVscyB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMnO1xuaW1wb3J0IHsgSU1hbmFnZWRPYmplY3QsIFF1ZXJpZXNVdGlsIH0gZnJvbSAnQGM4eS9jbGllbnQnO1xuaW1wb3J0IHsgU3ViamVjdCwgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgc3dpdGNoTWFwLCBtYXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5pbXBvcnQgeyBSZXBvc2l0b3J5U2VydmljZSwgUmVwb3NpdG9yeVR5cGUgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzL3JlcG9zaXRvcnknO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjOHktc2VsZWN0LWNvbmZpZ3VyYXRpb24tbW9kYWwnLFxuICB0ZW1wbGF0ZVVybDogJy4vc2VsZWN0LWNvbmZpZ3VyYXRpb24tbW9kYWwuY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIFNlbGVjdENvbmZpZ3VyYXRpb25Nb2RhbENvbXBvbmVudCB7XG4gIHRpdGxlOiBzdHJpbmcgPSBnZXR0ZXh0KCdTZWxlY3QgY29uZmlndXJhdGlvbicpO1xuICBsb2FkOiBTdWJqZWN0PHZvaWQ+ID0gbmV3IFN1YmplY3QoKTtcbiAgY29uZmlndXJhdGlvbnM6IE9ic2VydmFibGU8YW55W10+ID0gdGhpcy5sb2FkLnBpcGUoXG4gICAgc3dpdGNoTWFwKCgpID0+IHRoaXMuZ2V0SXRlbXMoKSksXG4gICAgbWFwKCh7IGRhdGEgfSkgPT4gdGhpcy5hZ2dyZWdhdGUoZGF0YSkpXG4gICk7XG4gIHJlc3VsdEVtaXR0ZXI6IEV2ZW50RW1pdHRlcjxhbnlbXT4gPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcbiAgc2VsZWN0ZWQ6IGFueVtdO1xuICBkZXZpY2VUeXBlUXVlcnk6IGFueSA9IHt9O1xuICBzZWFyY2hRdWVyeTogYW55ID0ge307XG4gIGxhYmVsczogTW9kYWxMYWJlbHMgPSB7IG9rOiBnZXR0ZXh0KCdTYXZlJykgfTtcbiAgcHJpdmF0ZSBxdWVyaWVzVXRpbDogUXVlcmllc1V0aWw7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSByZXBvc2l0b3J5U2VydmljZTogUmVwb3NpdG9yeVNlcnZpY2UpIHtcbiAgICB0aGlzLnF1ZXJpZXNVdGlsID0gbmV3IFF1ZXJpZXNVdGlsKCk7XG4gIH1cblxuICBzZWFyY2goc2VhcmNoVGVybSkge1xuICAgIGlmICghc2VhcmNoVGVybSkge1xuICAgICAgdGhpcy5zZWFyY2hRdWVyeSA9IHt9O1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLnNlYXJjaFF1ZXJ5ID0gdGhpcy5xdWVyaWVzVXRpbC5hZGRPckZpbHRlcihcbiAgICAgICAgeyBuYW1lOiBgKiR7c2VhcmNoVGVybX0qYCB9LFxuICAgICAgICB7IGNvbmZpZ3VyYXRpb25UeXBlOiBgKiR7c2VhcmNoVGVybX0qYCB9XG4gICAgICApO1xuICAgIH1cbiAgICB0aGlzLmxvYWQubmV4dCgpO1xuICB9XG5cbiAgcmVzdWx0KHNlbGVjdGVkSXRlbXMpIHtcbiAgICB0aGlzLnJlc3VsdEVtaXR0ZXIuZW1pdChzZWxlY3RlZEl0ZW1zKTtcbiAgfVxuXG4gIGdldEl0ZW1zKCkge1xuICAgIHJldHVybiB0aGlzLnJlcG9zaXRvcnlTZXJ2aWNlLmxpc3RSZXBvc2l0b3J5RW50cmllcyhSZXBvc2l0b3J5VHlwZS5DT05GSUdVUkFUSU9OLCB7XG4gICAgICBxdWVyeTogdGhpcy5xdWVyaWVzVXRpbC5hZGRPckZpbHRlcih0aGlzLmRldmljZVR5cGVRdWVyeSwgdGhpcy5zZWFyY2hRdWVyeSksXG4gICAgICBwYXJhbXM6IHsgcGFnZVNpemU6IDEwMCB9XG4gICAgfSk7XG4gIH1cblxuICBhZ2dyZWdhdGUobW9zOiBJTWFuYWdlZE9iamVjdFtdKTogSVNlbGVjdE1vZGFsT2JqZWN0W10ge1xuICAgIGNvbnN0IHNlbGVjdGVkSXRlbXM6IGFueVtdID0gdGhpcy5zZWxlY3RlZDtcbiAgICByZXR1cm4gbW9zLnJlZHVjZSgoYWNjLCBjdXJyKSA9PiB7XG4gICAgICBjdXJyLmNvbmZpZ3VyYXRpb25UeXBlID0gY3Vyci5jb25maWd1cmF0aW9uVHlwZSB8fCBjdXJyLm5hbWU7XG4gICAgICBjb25zdCBzZWxlY3RlZCA9XG4gICAgICAgIHNlbGVjdGVkSXRlbXMgJiYgc2VsZWN0ZWRJdGVtcy5maWx0ZXIodmFsID0+IHZhbC51cmwgPT09IGN1cnIudXJsKS5sZW5ndGggPiAwO1xuICAgICAgY29uc3Qgc2VsZWN0TW9kYWxPcHRpb246IElTZWxlY3RNb2RhbE9wdGlvbiA9IHtcbiAgICAgICAgYm9keTogW3sgdmFsdWU6IGN1cnIubmFtZSB9XSxcbiAgICAgICAgb2JqOiBjdXJyLFxuICAgICAgICBzZWxlY3RlZFxuICAgICAgfTtcbiAgICAgIGxldCBzZWxlY3RNb2RhbE9iamVjdDogSVNlbGVjdE1vZGFsT2JqZWN0ID0gYWNjLmZpbmQoXG4gICAgICAgIHZhbCA9PiB2YWwuYm9keVswXS52YWx1ZSA9PT0gY3Vyci5jb25maWd1cmF0aW9uVHlwZVxuICAgICAgKSBhcyBJU2VsZWN0TW9kYWxPYmplY3Q7XG4gICAgICBpZiAoc2VsZWN0TW9kYWxPYmplY3QpIHtcbiAgICAgICAgc2VsZWN0TW9kYWxPYmplY3Qub3B0aW9ucy5wdXNoKHNlbGVjdE1vZGFsT3B0aW9uKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHNlbGVjdE1vZGFsT2JqZWN0ID0ge1xuICAgICAgICAgIGdyb3VwSWQ6IGN1cnIuaWQsXG4gICAgICAgICAgYm9keTogW3sgdmFsdWU6IGN1cnIuY29uZmlndXJhdGlvblR5cGUgfV0sXG4gICAgICAgICAgb3B0aW9uczogW3NlbGVjdE1vZGFsT3B0aW9uXVxuICAgICAgICB9O1xuICAgICAgICBhY2MucHVzaChzZWxlY3RNb2RhbE9iamVjdCk7XG4gICAgICB9XG4gICAgICByZXR1cm4gYWNjO1xuICAgIH0sIFtdKTtcbiAgfVxufVxuIl19