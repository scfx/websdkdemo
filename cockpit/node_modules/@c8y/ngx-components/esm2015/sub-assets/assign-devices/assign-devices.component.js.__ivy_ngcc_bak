import { __awaiter } from "tslib";
import { Component, Input, Output, EventEmitter, HostListener, ViewChild, TemplateRef } from '@angular/core';
import { AlertService, gettext } from '@c8y/ngx-components';
import { InventoryService } from '@c8y/client';
import { SubAssetsService } from '../sub-assets.service';
export class AssignDevicesComponent {
    constructor(alert, subAssetsService, inventoryService) {
        this.alert = alert;
        this.subAssetsService = subAssetsService;
        this.inventoryService = inventoryService;
        this.refresh = new EventEmitter();
        this.onCancel = new EventEmitter();
        this.onShowChildDevices = new EventEmitter();
        this.selectedDevice = new EventEmitter();
        this.pendingStatus = false;
        this.pagination = { pageSize: 20, currentPage: 1 };
        this.selected = [];
        this.canAssignDevice = false;
        this.actionControls = [];
        this.headerActionControls = [];
        this.showChildren = false;
        this.isSelectable = true;
    }
    onEnterKeyDown(event) {
        if (this.selected.length > 0) {
            this.assignDevices();
        }
    }
    onEscapeKeyDown(event) {
        this.onCancel.emit();
    }
    ngOnInit() {
        return __awaiter(this, void 0, void 0, function* () {
            this.setNotIncludedInGroupQuery();
            this.canAssignDevice = yield this.subAssetsService.canAssignDevice({
                id: this.currentGroupId
            });
            this.setHeaderActionControls();
        });
    }
    setNotIncludedInGroupQuery() {
        const notIncludedInGroupQuery = { __not: { __bygroupid: this.currentGroupId } };
        this.baseQuery = notIncludedInGroupQuery;
    }
    setHeaderActionControls() {
        const headerActionControls = [];
        const showChildDevices = {
            type: 'DISPLAY_CHILD_DEVICES_BUTTON',
            text: gettext('Display child devices button'),
            template: this.showDevicesToggle,
            callback: () => {
                this.showChildren = !this.showChildren;
                this.setActionControls(this.showChildren);
            }
        };
        headerActionControls.push(showChildDevices);
        this.headerActionControls = headerActionControls;
    }
    setActionControls(showChildren) {
        const actionControls = [];
        const selectChildrenAction = {
            type: 'SHOW_TARGET_CHILD_DEVICES',
            icon: 'enter-bottom',
            text: gettext('Show target child devices'),
            callback: (asset) => this.selectChildren(asset),
            showIf: (asset) => asset.childDevices.references.length > 0
        };
        if (showChildren) {
            actionControls.push(selectChildrenAction);
        }
        this.actionControls = actionControls;
        this.refresh.emit();
    }
    assignDevices() {
        return __awaiter(this, void 0, void 0, function* () {
            if (this.canAssignDevice === false) {
                return;
            }
            this.pendingStatus = true;
            try {
                yield this.inventoryService.childAssetsBulkAdd(this.selected, this.currentGroupId);
                this.refresh.emit();
                this.alert.success(gettext('Devices assigned to the group.'));
            }
            catch (error) {
                this.alert.danger(gettext('Could not assign devices to the group'), error);
            }
            this.pendingStatus = false;
            this.selected = [];
            this.onCancel.emit();
        });
    }
    onSelected(selectedDevicesIDs) {
        this.selected = selectedDevicesIDs;
    }
    selectChildren(asset) {
        this.onShowChildDevices.emit(true);
        this.selectedDevice.emit(asset);
    }
}
AssignDevicesComponent.decorators = [
    { type: Component, args: [{
                selector: 'c8y-assign-devices',
                template: "<div class=\"card-block flex-no-shrink separator-bottom col-xs-12 large-padding p-t-24 p-b-24\">\n  <div class=\"row\">\n    <div class=\"col-md-6 col-md-offset-3 col-lg-4 col-lg-offset-4\">\n      <h4 class=\"text-center text-medium\">\n        {{ 'Assign devices' | translate }}\n      </h4>\n    </div>\n  </div>\n</div>\n<c8y-device-grid\n  [title]=\"'Select devices' | translate\"\n  [actionControls]=\"actionControls\"\n  [infiniteScroll]=\"'auto'\"\n  [selectable]=\"isSelectable\"\n  [pagination]=\"pagination\"\n  (itemsSelect)=\"onSelected($event)\"\n  [refresh]=\"refresh\"\n  [baseQuery]=\"baseQuery\"\n  [headerActionControls]=\"headerActionControls\"\n  [withChildren]=\"true\"\n  class=\"flex-grow col-xs-12 no-gutter\"\n>\n  <div class=\"c8y-empty-state\">\n    <h1 c8yIcon=\"search\"></h1>\n    <div>\n      <p>\n        <strong>{{ 'No matching devices.' | translate }}</strong>\n      </p>\n      <small>{{ 'Refine your search terms' | translate }}</small>\n    </div>\n  </div>\n</c8y-device-grid>\n\n<div class=\"text-center card-footer p-24 separator\">\n  <button\n    (click)=\"onCancel.emit()\"\n    type=\"button\"\n    class=\"btn btn-default\"\n    title=\"{{ 'Cancel' | translate }}\"\n  >\n    <span>{{ 'Cancel' | translate }}</span>\n  </button>\n  <button\n    (click)=\"assignDevices()\"\n    type=\"button\"\n    class=\"btn btn-primary\"\n    [ngClass]=\"{ 'btn-pending': pendingStatus }\"\n    title=\"{{ 'Assign' | translate }}\"\n    [disabled]=\"selected.length === 0 || !canAssignDevice\"\n  >\n    <span>{{ 'Assign' | translate }}</span>\n  </button>\n</div>\n\n<ng-template #showDevicesToggle let-control=\"headerActionControl\">\n  <label class=\"c8y-switch\">\n    <input type=\"checkbox\" [(ngModel)]=\"showChildren\" (click)=\"control.callback()\" />\n    <span></span>\n    <span>{{ control.text | translate }}</span>\n  </label>\n  <button\n    class=\"btn-clean m-r-8\"\n    [popover]=\"childDevicesPop\"\n    placement=\"bottom\"\n    [outsideClick]=\"true\"\n  >\n    <i c8yIcon=\"question-circle-o\" class=\"text-primary\"></i>\n  </button>\n  <ng-template #childDevicesPop>\n    <span translate>\n      Displays the button\n      <button class=\"btn btn-xs btn-icon btn-default no-pointer\">\n        <i class=\"text-primary dlt-c8y-icon-enter-bottom\"></i>\n      </button>\n      next to target devices with children. Clicking it displays a list with all child devices of\n      the selected target device.\n    </span>\n  </ng-template>\n</ng-template>\n"
            },] }
];
AssignDevicesComponent.ctorParameters = () => [
    { type: AlertService },
    { type: SubAssetsService },
    { type: InventoryService }
];
AssignDevicesComponent.propDecorators = {
    currentGroupId: [{ type: Input }],
    refresh: [{ type: Input }],
    onCancel: [{ type: Output }],
    onShowChildDevices: [{ type: Output }],
    selectedDevice: [{ type: Output }],
    showDevicesToggle: [{ type: ViewChild, args: ['showDevicesToggle', { read: TemplateRef },] }],
    onEnterKeyDown: [{ type: HostListener, args: ['document:keydown.enter', ['$event'],] }],
    onEscapeKeyDown: [{ type: HostListener, args: ['document:keydown.escape', ['$event'],] }]
};
//# sourceMappingURL=data:application/json;base64,