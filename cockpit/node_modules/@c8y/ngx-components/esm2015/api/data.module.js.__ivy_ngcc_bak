import { NgModule } from '@angular/core';
import { BasicAuth, FetchClient, Realtime, CookieAuth } from '@c8y/client';
import { ApiService } from './api.service';
import * as services from './services';
function toProvider(provide) {
    let deps = [FetchClient, Realtime];
    if (provide === FetchClient) {
        deps = [CookieAuth];
    }
    if (provide === BasicAuth || provide === CookieAuth) {
        deps = [];
    }
    if (provide === Realtime) {
        deps = [FetchClient];
    }
    return { provide, useClass: provide, deps };
}
const ɵ0 = (k) => toProvider(services[k]);
const providers = Object.keys(services).map(ɵ0)
    .concat([
    { provide: ApiService, useClass: ApiService, deps: [FetchClient] }
]);
// @dynamic
export class DataModule {
    static providers() {
        return providers;
    }
    static forRoot() {
        return {
            ngModule: DataModule,
            providers
        };
    }
}
DataModule.decorators = [
    { type: NgModule, args: [{
                providers
            },] }
];
export { ɵ0 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YS5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9hcGkvZGF0YS5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsU0FBUyxFQUFFLFdBQVcsRUFBRSxRQUFRLEVBQUUsVUFBVSxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBQzNFLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxLQUFLLFFBQVEsTUFBTSxZQUFZLENBQUM7QUFFdkMsU0FBUyxVQUFVLENBQUMsT0FBTztJQUN6QixJQUFJLElBQUksR0FBVSxDQUFDLFdBQVcsRUFBRSxRQUFRLENBQUMsQ0FBQztJQUMxQyxJQUFJLE9BQU8sS0FBSyxXQUFXLEVBQUc7UUFDNUIsSUFBSSxHQUFHLENBQUMsVUFBVSxDQUFDLENBQUM7S0FDckI7SUFDRCxJQUFJLE9BQU8sS0FBSyxTQUFTLElBQUksT0FBTyxLQUFLLFVBQVUsRUFBRztRQUNwRCxJQUFJLEdBQUcsRUFBRSxDQUFDO0tBQ1g7SUFDRCxJQUFJLE9BQU8sS0FBSyxRQUFRLEVBQUU7UUFDeEIsSUFBSSxHQUFHLENBQUMsV0FBVyxDQUFDLENBQUM7S0FDdEI7SUFDRCxPQUFPLEVBQUMsT0FBTyxFQUFFLFFBQVEsRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFDLENBQUM7QUFDNUMsQ0FBQztXQUVtRCxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUFsRixNQUFNLFNBQVMsR0FBVyxNQUFNLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLEdBQUcsSUFBMEM7S0FDMUYsTUFBTSxDQUFDO0lBQ04sRUFBRSxPQUFPLEVBQUUsVUFBVSxFQUFFLFFBQVEsRUFBRSxVQUFVLEVBQUUsSUFBSSxFQUFFLENBQUMsV0FBVyxDQUFDLEVBQUU7Q0FDbkUsQ0FBQyxDQUFDO0FBQ0wsV0FBVztBQUlYLE1BQU0sT0FBTyxVQUFVO0lBQ3JCLE1BQU0sQ0FBQyxTQUFTO1FBQ2QsT0FBTyxTQUFTLENBQUM7SUFDbkIsQ0FBQztJQUNELE1BQU0sQ0FBQyxPQUFPO1FBQ1osT0FBTztZQUNMLFFBQVEsRUFBRSxVQUFVO1lBQ3BCLFNBQVM7U0FDVixDQUFDO0lBQ0osQ0FBQzs7O1lBWkYsUUFBUSxTQUFDO2dCQUNSLFNBQVM7YUFDViIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBCYXNpY0F1dGgsIEZldGNoQ2xpZW50LCBSZWFsdGltZSwgQ29va2llQXV0aCB9IGZyb20gJ0BjOHkvY2xpZW50JztcbmltcG9ydCB7IEFwaVNlcnZpY2UgfSBmcm9tICcuL2FwaS5zZXJ2aWNlJztcbmltcG9ydCAqIGFzIHNlcnZpY2VzIGZyb20gJy4vc2VydmljZXMnO1xuXG5mdW5jdGlvbiB0b1Byb3ZpZGVyKHByb3ZpZGUpIHtcbiAgbGV0IGRlcHM6IGFueVtdID0gW0ZldGNoQ2xpZW50LCBSZWFsdGltZV07XG4gIGlmIChwcm92aWRlID09PSBGZXRjaENsaWVudCkgIHtcbiAgICBkZXBzID0gW0Nvb2tpZUF1dGhdO1xuICB9XG4gIGlmIChwcm92aWRlID09PSBCYXNpY0F1dGggfHwgcHJvdmlkZSA9PT0gQ29va2llQXV0aCkgIHtcbiAgICBkZXBzID0gW107XG4gIH1cbiAgaWYgKHByb3ZpZGUgPT09IFJlYWx0aW1lKSB7XG4gICAgZGVwcyA9IFtGZXRjaENsaWVudF07XG4gIH1cbiAgcmV0dXJuIHtwcm92aWRlLCB1c2VDbGFzczogcHJvdmlkZSwgZGVwc307XG59XG5cbmNvbnN0IHByb3ZpZGVyczogYW55W10gPSAoT2JqZWN0LmtleXMoc2VydmljZXMpLm1hcCgoaykgPT4gdG9Qcm92aWRlcihzZXJ2aWNlc1trXSkpIGFzIGFueVtdKVxuICAuY29uY2F0KFtcbiAgICB7IHByb3ZpZGU6IEFwaVNlcnZpY2UsIHVzZUNsYXNzOiBBcGlTZXJ2aWNlLCBkZXBzOiBbRmV0Y2hDbGllbnRdIH1cbiAgXSk7XG4vLyBAZHluYW1pY1xuQE5nTW9kdWxlKHtcbiAgcHJvdmlkZXJzXG59KVxuZXhwb3J0IGNsYXNzIERhdGFNb2R1bGUge1xuICBzdGF0aWMgcHJvdmlkZXJzKCkge1xuICAgIHJldHVybiBwcm92aWRlcnM7XG4gIH1cbiAgc3RhdGljIGZvclJvb3QoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG5nTW9kdWxlOiBEYXRhTW9kdWxlLFxuICAgICAgcHJvdmlkZXJzXG4gICAgfTtcbiAgfVxufVxuIl19