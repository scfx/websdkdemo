import { Component } from '@angular/core';
import { FilteringFormRendererContext } from '@c8y/ngx-components';
export class CreationTimeFilteringFormRendererComponent {
    constructor(context) {
        this.context = context;
        this.model = (this.context.property.externalFilterQuery || {}).model || {};
    }
    applyFilter() {
        this.context.applyFilter({
            externalFilterQuery: {
                model: this.model
            },
            filterPredicate: (tenant) => {
                const creationTime = new Date(tenant.creationTime);
                let dateFrom;
                let dateTo;
                if (this.model.dateFrom) {
                    dateFrom = this.model.dateFrom;
                    dateFrom.setHours(0, 0, 0, 0);
                }
                if (this.model.dateTo) {
                    dateTo = this.model.dateTo;
                    dateTo.setHours(23, 59, 59, 999);
                }
                return Boolean((!dateFrom && !dateTo) ||
                    (dateFrom && !dateTo && dateFrom <= creationTime) ||
                    (!dateFrom && dateTo && creationTime <= dateTo) ||
                    (dateFrom && dateTo && dateFrom <= creationTime && creationTime <= dateTo));
            }
        });
    }
    resetFilter() {
        this.context.resetFilter();
    }
}
CreationTimeFilteringFormRendererComponent.decorators = [
    { type: Component, args: [{
                template: "<form #filterForm=\"ngForm\">\n  <div class=\"m-b-8 p-t-8\">\n    <label>{{ 'Filter by creation time' | translate }}</label>\n    <c8y-form-group class=\"datepicker d-block m-b-16\" style=\"max-height: 32px\">\n      <input\n        name=\"dateFrom\"\n        [(ngModel)]=\"model.dateFrom\"\n        class=\"form-control fit-w text-left\"\n        placeholder=\"{{ 'Created from`date`' | translate }}\"\n        bsDatepicker\n        [bsConfig]=\"{ customTodayClass: 'today', returnFocusToInput: true }\"\n        [maxDate]=\"model.dateTo\"\n      />\n    </c8y-form-group>\n    <c8y-form-group class=\"datepicker m-l-0 d-block\" style=\"max-height: 32px\">\n      <input\n        name=\"dateTo\"\n        [(ngModel)]=\"model.dateTo\"\n        class=\"form-control fit-w text-left\"\n        placeholder=\"{{ 'Created to`date`' | translate }}\"\n        bsDatepicker\n        [bsConfig]=\"{ customTodayClass: 'today', returnFocusToInput: true }\"\n        [minDate]=\"model.dateFrom\"\n      />\n    </c8y-form-group>\n  </div>\n</form>\n\n<div class=\"data-grid__dropdown__footer d-flex separator-top\">\n  <button\n    class=\"btn btn-default btn-sm m-r-8 flex-grow\"\n    (click)=\"resetFilter()\"\n    title=\"{{ 'Reset' | translate }}\"\n  >\n    {{ 'Reset' | translate }}\n  </button>\n  <button\n    class=\"btn btn-primary btn-sm flex-grow\"\n    [disabled]=\"filterForm.invalid\"\n    (click)=\"applyFilter()\"\n    title=\"{{ 'Apply' | translate }}\"\n  >\n    {{ 'Apply' | translate }}\n  </button>\n</div>\n"
            },] }
];
CreationTimeFilteringFormRendererComponent.ctorParameters = () => [
    { type: FilteringFormRendererContext }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3JlYXRpb24tdGltZS5maWx0ZXJpbmctZm9ybS1yZW5kZXJlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi90ZW5hbnRzL3RlbmFudC1saXN0L2NyZWF0aW9uLXRpbWUuZmlsdGVyaW5nLWZvcm0tcmVuZGVyZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFMUMsT0FBTyxFQUFFLDRCQUE0QixFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFLbkUsTUFBTSxPQUFPLDBDQUEwQztJQU1yRCxZQUFtQixPQUFxQztRQUFyQyxZQUFPLEdBQVAsT0FBTyxDQUE4QjtRQUN0RCxJQUFJLENBQUMsS0FBSyxHQUFHLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsbUJBQW1CLElBQUksRUFBRSxDQUFDLENBQUMsS0FBSyxJQUFJLEVBQUUsQ0FBQztJQUM3RSxDQUFDO0lBRUQsV0FBVztRQUNULElBQUksQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDO1lBQ3ZCLG1CQUFtQixFQUFFO2dCQUNuQixLQUFLLEVBQUUsSUFBSSxDQUFDLEtBQUs7YUFDbEI7WUFDRCxlQUFlLEVBQUUsQ0FBQyxNQUFlLEVBQUUsRUFBRTtnQkFDbkMsTUFBTSxZQUFZLEdBQUcsSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLFlBQVksQ0FBQyxDQUFDO2dCQUNuRCxJQUFJLFFBQVEsQ0FBQztnQkFDYixJQUFJLE1BQU0sQ0FBQztnQkFFWCxJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFFO29CQUN2QixRQUFRLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUM7b0JBQy9CLFFBQVEsQ0FBQyxRQUFRLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7aUJBQy9CO2dCQUVELElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLEVBQUU7b0JBQ3JCLE1BQU0sR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQztvQkFDM0IsTUFBTSxDQUFDLFFBQVEsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxHQUFHLENBQUMsQ0FBQztpQkFDbEM7Z0JBRUQsT0FBTyxPQUFPLENBQ1osQ0FBQyxDQUFDLFFBQVEsSUFBSSxDQUFDLE1BQU0sQ0FBQztvQkFDcEIsQ0FBQyxRQUFRLElBQUksQ0FBQyxNQUFNLElBQUksUUFBUSxJQUFJLFlBQVksQ0FBQztvQkFDakQsQ0FBQyxDQUFDLFFBQVEsSUFBSSxNQUFNLElBQUksWUFBWSxJQUFJLE1BQU0sQ0FBQztvQkFDL0MsQ0FBQyxRQUFRLElBQUksTUFBTSxJQUFJLFFBQVEsSUFBSSxZQUFZLElBQUksWUFBWSxJQUFJLE1BQU0sQ0FBQyxDQUM3RSxDQUFDO1lBQ0osQ0FBQztTQUNGLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFRCxXQUFXO1FBQ1QsSUFBSSxDQUFDLE9BQU8sQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQUM3QixDQUFDOzs7WUE3Q0YsU0FBUyxTQUFDO2dCQUNULDIvQ0FBcUU7YUFDdEU7OztZQUpRLDRCQUE0QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSVRlbmFudCB9IGZyb20gJ0BjOHkvY2xpZW50JztcbmltcG9ydCB7IEZpbHRlcmluZ0Zvcm1SZW5kZXJlckNvbnRleHQgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzJztcblxuQENvbXBvbmVudCh7XG4gIHRlbXBsYXRlVXJsOiAnLi9jcmVhdGlvbi10aW1lLmZpbHRlcmluZy1mb3JtLXJlbmRlcmVyLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBDcmVhdGlvblRpbWVGaWx0ZXJpbmdGb3JtUmVuZGVyZXJDb21wb25lbnQge1xuICBtb2RlbDoge1xuICAgIGRhdGVGcm9tOiBEYXRlO1xuICAgIGRhdGVUbzogRGF0ZTtcbiAgfTtcblxuICBjb25zdHJ1Y3RvcihwdWJsaWMgY29udGV4dDogRmlsdGVyaW5nRm9ybVJlbmRlcmVyQ29udGV4dCkge1xuICAgIHRoaXMubW9kZWwgPSAodGhpcy5jb250ZXh0LnByb3BlcnR5LmV4dGVybmFsRmlsdGVyUXVlcnkgfHwge30pLm1vZGVsIHx8IHt9O1xuICB9XG5cbiAgYXBwbHlGaWx0ZXIoKSB7XG4gICAgdGhpcy5jb250ZXh0LmFwcGx5RmlsdGVyKHtcbiAgICAgIGV4dGVybmFsRmlsdGVyUXVlcnk6IHtcbiAgICAgICAgbW9kZWw6IHRoaXMubW9kZWxcbiAgICAgIH0sXG4gICAgICBmaWx0ZXJQcmVkaWNhdGU6ICh0ZW5hbnQ6IElUZW5hbnQpID0+IHtcbiAgICAgICAgY29uc3QgY3JlYXRpb25UaW1lID0gbmV3IERhdGUodGVuYW50LmNyZWF0aW9uVGltZSk7XG4gICAgICAgIGxldCBkYXRlRnJvbTtcbiAgICAgICAgbGV0IGRhdGVUbztcblxuICAgICAgICBpZiAodGhpcy5tb2RlbC5kYXRlRnJvbSkge1xuICAgICAgICAgIGRhdGVGcm9tID0gdGhpcy5tb2RlbC5kYXRlRnJvbTtcbiAgICAgICAgICBkYXRlRnJvbS5zZXRIb3VycygwLCAwLCAwLCAwKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh0aGlzLm1vZGVsLmRhdGVUbykge1xuICAgICAgICAgIGRhdGVUbyA9IHRoaXMubW9kZWwuZGF0ZVRvO1xuICAgICAgICAgIGRhdGVUby5zZXRIb3VycygyMywgNTksIDU5LCA5OTkpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIEJvb2xlYW4oXG4gICAgICAgICAgKCFkYXRlRnJvbSAmJiAhZGF0ZVRvKSB8fFxuICAgICAgICAgICAgKGRhdGVGcm9tICYmICFkYXRlVG8gJiYgZGF0ZUZyb20gPD0gY3JlYXRpb25UaW1lKSB8fFxuICAgICAgICAgICAgKCFkYXRlRnJvbSAmJiBkYXRlVG8gJiYgY3JlYXRpb25UaW1lIDw9IGRhdGVUbykgfHxcbiAgICAgICAgICAgIChkYXRlRnJvbSAmJiBkYXRlVG8gJiYgZGF0ZUZyb20gPD0gY3JlYXRpb25UaW1lICYmIGNyZWF0aW9uVGltZSA8PSBkYXRlVG8pXG4gICAgICAgICk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICByZXNldEZpbHRlcigpIHtcbiAgICB0aGlzLmNvbnRleHQucmVzZXRGaWx0ZXIoKTtcbiAgfVxufVxuIl19