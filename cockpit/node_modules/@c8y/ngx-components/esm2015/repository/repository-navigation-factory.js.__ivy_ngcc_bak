import { __awaiter } from "tslib";
import { Injectable } from '@angular/core';
import { gettext, NavigatorNode } from '@c8y/ngx-components';
export class RepositoryNavigationFactory {
    constructor() {
        this.navs = [];
    }
    get() {
        return __awaiter(this, void 0, void 0, function* () {
            if (this.navs.length === 0) {
                this.navs.push(new NavigatorNode({
                    label: gettext('Firmware repository'),
                    path: 'firmware',
                    icon: 'c8y-firmware',
                    parent: gettext('Management'),
                    priority: 1000
                }));
                this.navs.push(new NavigatorNode({
                    label: gettext('Software repository'),
                    path: 'software',
                    icon: 'c8y-tools',
                    parent: gettext('Management'),
                    priority: 900
                }));
                this.navs.push(new NavigatorNode({
                    label: gettext('Configuration repository'),
                    path: 'configuration',
                    icon: 'gears',
                    parent: gettext('Management'),
                    priority: 800
                }));
            }
            return this.navs;
        });
    }
}
RepositoryNavigationFactory.decorators = [
    { type: Injectable }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVwb3NpdG9yeS1uYXZpZ2F0aW9uLWZhY3RvcnkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9yZXBvc2l0b3J5L3JlcG9zaXRvcnktbmF2aWdhdGlvbi1mYWN0b3J5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxPQUFPLEVBQUUsYUFBYSxFQUF3QixNQUFNLHFCQUFxQixDQUFDO0FBR25GLE1BQU0sT0FBTywyQkFBMkI7SUFEeEM7UUFFRSxTQUFJLEdBQW9CLEVBQUUsQ0FBQztJQWtDN0IsQ0FBQztJQWhDTyxHQUFHOztZQUNQLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFO2dCQUMxQixJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FDWixJQUFJLGFBQWEsQ0FBQztvQkFDaEIsS0FBSyxFQUFFLE9BQU8sQ0FBQyxxQkFBcUIsQ0FBQztvQkFDckMsSUFBSSxFQUFFLFVBQVU7b0JBQ2hCLElBQUksRUFBRSxjQUFjO29CQUNwQixNQUFNLEVBQUUsT0FBTyxDQUFDLFlBQVksQ0FBQztvQkFDN0IsUUFBUSxFQUFFLElBQUk7aUJBQ2YsQ0FBQyxDQUNILENBQUM7Z0JBQ0YsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQ1osSUFBSSxhQUFhLENBQUM7b0JBQ2hCLEtBQUssRUFBRSxPQUFPLENBQUMscUJBQXFCLENBQUM7b0JBQ3JDLElBQUksRUFBRSxVQUFVO29CQUNoQixJQUFJLEVBQUUsV0FBVztvQkFDakIsTUFBTSxFQUFFLE9BQU8sQ0FBQyxZQUFZLENBQUM7b0JBQzdCLFFBQVEsRUFBRSxHQUFHO2lCQUNkLENBQUMsQ0FDSCxDQUFDO2dCQUNGLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUNaLElBQUksYUFBYSxDQUFDO29CQUNoQixLQUFLLEVBQUUsT0FBTyxDQUFDLDBCQUEwQixDQUFDO29CQUMxQyxJQUFJLEVBQUUsZUFBZTtvQkFDckIsSUFBSSxFQUFFLE9BQU87b0JBQ2IsTUFBTSxFQUFFLE9BQU8sQ0FBQyxZQUFZLENBQUM7b0JBQzdCLFFBQVEsRUFBRSxHQUFHO2lCQUNkLENBQUMsQ0FDSCxDQUFDO2FBQ0g7WUFDRCxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUM7UUFDbkIsQ0FBQztLQUFBOzs7WUFuQ0YsVUFBVSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGdldHRleHQsIE5hdmlnYXRvck5vZGUsIE5hdmlnYXRvck5vZGVGYWN0b3J5IH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cyc7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBSZXBvc2l0b3J5TmF2aWdhdGlvbkZhY3RvcnkgaW1wbGVtZW50cyBOYXZpZ2F0b3JOb2RlRmFjdG9yeSB7XG4gIG5hdnM6IE5hdmlnYXRvck5vZGVbXSA9IFtdO1xuXG4gIGFzeW5jIGdldCgpIHtcbiAgICBpZiAodGhpcy5uYXZzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgdGhpcy5uYXZzLnB1c2goXG4gICAgICAgIG5ldyBOYXZpZ2F0b3JOb2RlKHtcbiAgICAgICAgICBsYWJlbDogZ2V0dGV4dCgnRmlybXdhcmUgcmVwb3NpdG9yeScpLFxuICAgICAgICAgIHBhdGg6ICdmaXJtd2FyZScsXG4gICAgICAgICAgaWNvbjogJ2M4eS1maXJtd2FyZScsXG4gICAgICAgICAgcGFyZW50OiBnZXR0ZXh0KCdNYW5hZ2VtZW50JyksXG4gICAgICAgICAgcHJpb3JpdHk6IDEwMDBcbiAgICAgICAgfSlcbiAgICAgICk7XG4gICAgICB0aGlzLm5hdnMucHVzaChcbiAgICAgICAgbmV3IE5hdmlnYXRvck5vZGUoe1xuICAgICAgICAgIGxhYmVsOiBnZXR0ZXh0KCdTb2Z0d2FyZSByZXBvc2l0b3J5JyksXG4gICAgICAgICAgcGF0aDogJ3NvZnR3YXJlJyxcbiAgICAgICAgICBpY29uOiAnYzh5LXRvb2xzJyxcbiAgICAgICAgICBwYXJlbnQ6IGdldHRleHQoJ01hbmFnZW1lbnQnKSxcbiAgICAgICAgICBwcmlvcml0eTogOTAwXG4gICAgICAgIH0pXG4gICAgICApO1xuICAgICAgdGhpcy5uYXZzLnB1c2goXG4gICAgICAgIG5ldyBOYXZpZ2F0b3JOb2RlKHtcbiAgICAgICAgICBsYWJlbDogZ2V0dGV4dCgnQ29uZmlndXJhdGlvbiByZXBvc2l0b3J5JyksXG4gICAgICAgICAgcGF0aDogJ2NvbmZpZ3VyYXRpb24nLFxuICAgICAgICAgIGljb246ICdnZWFycycsXG4gICAgICAgICAgcGFyZW50OiBnZXR0ZXh0KCdNYW5hZ2VtZW50JyksXG4gICAgICAgICAgcHJpb3JpdHk6IDgwMFxuICAgICAgICB9KVxuICAgICAgKTtcbiAgICB9XG4gICAgcmV0dXJuIHRoaXMubmF2cztcbiAgfVxufVxuIl19