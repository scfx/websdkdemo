import { __awaiter } from "tslib";
import { Component, ViewChild } from '@angular/core';
import { AlertService, gettext } from '@c8y/ngx-components';
import { uniqBy, isUndefined } from 'lodash-es';
import { BsModalRef } from 'ngx-bootstrap/modal';
import { pipe } from 'rxjs';
import { map } from 'rxjs/operators';
import { RepositoryType } from '../repository.model';
import { RepositoryService } from '../repository.service';
export class ConfigurationDetailComponent {
    constructor(repositoryService, bsModalRef, alert) {
        this.repositoryService = repositoryService;
        this.bsModalRef = bsModalRef;
        this.alert = alert;
        this.binary = {
            file: undefined,
            url: undefined
        };
        this.pattern = '';
        this.mo = {};
        this.saving = false;
        this.uploadChoice = 'uploadBinary';
        this.textForConfigurationUrlPopover = gettext(`Path for binaries can vary depending on device agent implementation, e.g.:
    /configuration/binaries/configuration1.bin
    https://configuration/binary/123
    ftp://configuration/binary/123.tar.gz
  `);
        this.result = new Promise((resolve, reject) => {
            this._save = resolve;
            this._cancel = reject;
        });
    }
    ngOnInit() {
        return __awaiter(this, void 0, void 0, function* () {
            this.configs = yield this.repositoryService.listRepositoryEntries(RepositoryType.CONFIGURATION);
            if (this.selected) {
                this.uploadChoice = this.binary.file ? 'uploadBinary' : 'uploadUrl';
                this.existingBinary = this.binary.file;
            }
            this.setPipe('');
            this.submitButtonTitle = this.mo.id
                ? gettext('Update configuration')
                : gettext('Add configuration');
        });
    }
    cancel() {
        this.bsModalRef.hide();
        this._cancel();
    }
    setPipe(filterStr) {
        this.pattern = filterStr;
        this.filterPipe = pipe(map((data) => uniqBy(data, 'configurationType')), map((data) => {
            return data.filter((mo) => mo.configurationType &&
                mo.configurationType.toLowerCase().indexOf(filterStr.toLowerCase()) > -1);
        }));
    }
    onFile(dropped) {
        this.configurationForm.form.markAsDirty();
        if (!isUndefined(dropped.url)) {
            this.binary = {
                url: dropped.url
            };
            return;
        }
        else if (!isUndefined(dropped.droppedFiles)) {
            this.binary = {
                file: dropped.droppedFiles[0].file
            };
            return;
        }
        else {
            this.binary = {
                file: undefined,
                url: undefined
            };
        }
    }
    save() {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                this.saving = true;
                const { selected, version, description, binary, deviceType } = this;
                if (this.existingBinary === this.binary.file) {
                    binary.file = undefined;
                }
                yield this.repositoryService.save({ selected, version, description, binary, deviceType }, RepositoryType.CONFIGURATION, this.mo);
                this.alert.success(this.mo.id ? gettext('Configuration updated.') : gettext('Configuration created.'));
                this.bsModalRef.hide();
                this._save();
            }
            catch (ex) {
                this.alert.addServerFailure(ex);
                this._cancel();
            }
            finally {
                this.saving = false;
            }
        });
    }
}
ConfigurationDetailComponent.decorators = [
    { type: Component, args: [{
                selector: 'c8y-configuration-detail',
                template: "<div class=\"viewport-modal\">\n  <div class=\"modal-header dialog-header\">\n    <i [c8yIcon]=\"'cogs'\"></i>\n    <h4 translate *ngIf=\"mo.id\">Update configuration</h4>\n    <h4 translate *ngIf=\"!mo.id\">Add configuration</h4>\n  </div>\n\n  <form\n    class=\"d-contents\"\n    #configurationForm=\"ngForm\"\n    (ngSubmit)=\"configurationForm.form.valid && save()\"\n  >\n    <div class=\"modal-inner-scroll\">\n      <div class=\"modal-body\">\n        <c8y-form-group>\n          <label translate>Name</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            placeholder=\"{{ 'e.g.' | translate }} hosts\"\n            autocomplete=\"off\"\n            required\n            maxlength=\"254\"\n            [(ngModel)]=\"version\"\n            name=\"version\"\n          />\n        </c8y-form-group>\n\n        <c8y-form-group>\n          <label translate>Device type</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            placeholder=\"{{ 'e.g.' | translate }} c8y_Linux\"\n            maxlength=\"254\"\n            autocomplete=\"off\"\n            [(ngModel)]=\"deviceType\"\n            name=\"deviceType\"\n          />\n        </c8y-form-group>\n\n        <c8y-form-group>\n          <label translate>Description</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            placeholder=\"{{ 'e.g. Host configuration' | translate }} c8y_Linux\"\n            maxlength=\"254\"\n            autocomplete=\"off\"\n            [(ngModel)]=\"description\"\n            name=\"description\"\n          />\n        </c8y-form-group>\n\n        <c8y-form-group>\n          <label translate>Configuration type</label>\n          <c8y-typeahead\n            [(ngModel)]=\"selected\"\n            name=\"confType\"\n            placeholder=\"{{ 'e.g.' | translate }} ssh\"\n            maxlength=\"254\"\n            (onSearch)=\"setPipe($event)\"\n            displayProperty=\"configurationType\"\n          >\n            <c8y-li\n              *c8yFor=\"let config of configs; pipe: filterPipe; notFound: notFoundTemplate\"\n              class=\"p-l-8 p-r-8 c8y-list__item--link\"\n              (click)=\"selected = config; setPipe('')\"\n              [active]=\"selected === config\"\n            >\n              <c8y-highlight\n                [text]=\"config.configurationType || '--'\"\n                [pattern]=\"pattern\"\n              ></c8y-highlight>\n            </c8y-li>\n            <ng-template #notFoundTemplate>\n              <c8y-li class=\"bg-gray-lighter p-8\" *ngIf=\"pattern.length > 0\">\n                <span translate>No match found.</span>\n                <button\n                  title=\"{{ 'Add new`configuration type`' | translate }}\"\n                  type=\"button\"\n                  class=\"btn btn-primary btn-xs m-l-16\"\n                  translate\n                >\n                  Add new`configuration type`\n                </button>\n              </c8y-li>\n            </ng-template>\n          </c8y-typeahead>\n        </c8y-form-group>\n\n        <c8y-form-group>\n          <div class=\"legend form-block m-t-40\" translate>Configuration file</div>\n          <c8y-file-picker\n            [maxAllowedFiles]=\"1\"\n            (onFilesPicked)=\"onFile($event)\"\n            [uploadChoice]=\"uploadChoice\"\n            [fileUrl]=\"binary.url\"\n            [fileBinary]=\"binary.file\"\n            [fileUrlPopover]=\"textForConfigurationUrlPopover\"\n          >\n          </c8y-file-picker>\n        </c8y-form-group>\n      </div>\n    </div>\n\n    <div class=\"modal-footer\">\n      <button\n        (click)=\"cancel()\"\n        type=\"button\"\n        class=\"btn btn-default\"\n        title=\"{{ 'Cancel' | translate }}\"\n        [disabled]=\"saving\"\n      >\n        <span translate>Cancel</span>\n      </button>\n      <button\n        class=\"btn btn-primary\"\n        type=\"submit\"\n        title=\"{{ submitButtonTitle | translate }}\"\n        [ngClass]=\"{ 'btn-pending': saving }\"\n        [disabled]=\"\n          !configurationForm.valid ||\n          configurationForm.pristine ||\n          (!binary?.url && !binary?.file) ||\n          saving\n        \"\n      >\n        {{ submitButtonTitle | translate }}\n      </button>\n    </div>\n  </form>\n</div>\n"
            },] }
];
ConfigurationDetailComponent.ctorParameters = () => [
    { type: RepositoryService },
    { type: BsModalRef },
    { type: AlertService }
];
ConfigurationDetailComponent.propDecorators = {
    configurationForm: [{ type: ViewChild, args: ['configurationForm', { static: true },] }]
};
//# sourceMappingURL=data:application/json;base64,