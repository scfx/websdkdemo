import { __awaiter } from "tslib";
import { Component, EventEmitter } from '@angular/core';
import { ActivatedRoute, Router } from '@angular/router';
import { AlertService, gettext, ModalService, Status } from '@c8y/ngx-components';
import { DeviceGridService } from '@c8y/ngx-components/device-grid';
import { TranslateService } from '@ngx-translate/core';
import { BsModalService } from 'ngx-bootstrap/modal';
import { RepositoryType } from '../repository.model';
import { RepositoryService } from '../repository.service';
import { AddSoftwareModalComponent } from './add-software-modal.component';
import { DescriptionGridColumn } from './columns/description.grid-column';
import { DeviceTypeGridColumn } from './columns/device-type.grid-column';
import { SoftwareNameGridColumn } from './columns/name.grid-column';
import { SoftwareTypeGridColumn } from './columns/software-type.grid-column';
import { VersionsGridColumn } from './columns/versions.grid-column';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../repository.service';
import * as ɵngcc2 from '@c8y/ngx-components/device-grid';
import * as ɵngcc3 from '@c8y/ngx-components';
import * as ɵngcc4 from 'ngx-bootstrap/modal';
import * as ɵngcc5 from '@ngx-translate/core';
import * as ɵngcc6 from '@angular/router';
import * as ɵngcc7 from '@angular/common';

function SoftwareListComponent_ng_container_13_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelement(1, "c8y-loading");
    ɵngcc0.ɵɵelementContainerEnd();
} }
function SoftwareListComponent_ng_container_14_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    const _r7 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "div", 10);
    ɵngcc0.ɵɵelement(2, "h1", 11);
    ɵngcc0.ɵɵelementStart(3, "h3", 12);
    ɵngcc0.ɵɵtext(4, "No software to display.");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(5, "p", 12);
    ɵngcc0.ɵɵtext(6, "Add a new software by clicking below.");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(7, "p");
    ɵngcc0.ɵɵelementStart(8, "button", 13);
    ɵngcc0.ɵɵlistener("click", function SoftwareListComponent_ng_container_14_ng_container_1_Template_button_click_8_listener() { ɵngcc0.ɵɵrestoreView(_r7); const ctx_r6 = ɵngcc0.ɵɵnextContext(2); return ctx_r6.addSoftware(); });
    ɵngcc0.ɵɵpipe(9, "translate");
    ɵngcc0.ɵɵtext(10, " Add software ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(8);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(9, 1, "Add software"));
} }
function SoftwareListComponent_ng_container_14_ng_template_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "h1", 14);
    ɵngcc0.ɵɵelementStart(1, "div");
    ɵngcc0.ɵɵelementStart(2, "p");
    ɵngcc0.ɵɵelementStart(3, "strong");
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵpipe(5, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(6, "small");
    ɵngcc0.ɵɵtext(7);
    ɵngcc0.ɵɵpipe(8, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(5, 2, "No results to display."));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(8, 4, "Refine your search terms or check your spelling."));
} }
function SoftwareListComponent_ng_container_14_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, SoftwareListComponent_ng_container_14_ng_container_1_Template, 11, 3, "ng-container", 8);
    ɵngcc0.ɵɵpipe(2, "async");
    ɵngcc0.ɵɵtemplate(3, SoftwareListComponent_ng_container_14_ng_template_3_Template, 9, 6, "ng-template", null, 9, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const _r4 = ɵngcc0.ɵɵreference(4);
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind1(2, 2, ctx_r1.sizeRequest) === 0)("ngIfElse", _r4);
} }
function SoftwareListComponent_ng_container_15_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelement(1, "c8y-column", 15);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const column_r8 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("name", column_r8.name);
} }
const _c0 = function () { return []; };
export class SoftwareListComponent {
    constructor(repositoryService, gridService, modalService, bsModalService, translateService, alertService, router, activatedRoute) {
        this.repositoryService = repositoryService;
        this.gridService = gridService;
        this.modalService = modalService;
        this.bsModalService = bsModalService;
        this.translateService = translateService;
        this.alertService = alertService;
        this.router = router;
        this.activatedRoute = activatedRoute;
        this.sizeRequestDone = false;
        this.refresh$ = new EventEmitter();
        this.columns = [
            new SoftwareNameGridColumn(),
            new DescriptionGridColumn(),
            new DeviceTypeGridColumn(),
            new SoftwareTypeGridColumn(),
            new VersionsGridColumn()
        ];
        this.actionControls = [];
        this.pagination = {
            pageSize: 50,
            currentPage: 1
        };
        this.serverSideDataCallback = this.onDataSourceModifier.bind(this);
        this.sizeRequest = this.repositoryService
            .listRepositoryEntries(RepositoryType.SOFTWARE, {
            skipDefaultOrder: true,
            params: { pageSize: 1 }
        })
            .then(response => {
            var _a;
            this.sizeRequestDone = true;
            return (_a = response === null || response === void 0 ? void 0 : response.paging) === null || _a === void 0 ? void 0 : _a.totalPages;
        });
    }
    ngOnInit() {
        this.actionControls.push({
            type: "EDIT" /* Edit */,
            callback: this.editSoftware.bind(this)
        });
        this.actionControls.push({
            type: "DELETE" /* Delete */,
            callback: this.deleteSoftware.bind(this)
        });
    }
    onDataSourceModifier(dataSourceModifier) {
        return __awaiter(this, void 0, void 0, function* () {
            let serverSideDataResult;
            const dataRequest = this.repositoryService.listRepositoryEntries(RepositoryType.SOFTWARE, {
                query: this.gridService.getQueryObj(dataSourceModifier.columns),
                skipDefaultOrder: true,
                params: {
                    pageSize: dataSourceModifier.pagination.pageSize,
                    currentPage: dataSourceModifier.pagination.currentPage
                }
            });
            const filtererdSizeRequest = this.repositoryService
                .listRepositoryEntries(RepositoryType.SOFTWARE, {
                skipDefaultOrder: true,
                query: this.gridService.getQueryObj(dataSourceModifier.columns),
                params: { pageSize: 1 }
            })
                .then(response => { var _a; return (_a = response === null || response === void 0 ? void 0 : response.paging) === null || _a === void 0 ? void 0 : _a.totalPages; });
            const [dataResponse, size, filteredSize] = yield Promise.all([
                dataRequest,
                this.sizeRequest,
                filtererdSizeRequest
            ]);
            const { res, data, paging } = dataResponse;
            serverSideDataResult = {
                res,
                data,
                paging,
                filteredSize,
                size
            };
            return serverSideDataResult;
        });
    }
    addSoftware() {
        const config = {
            class: 'modal-sm',
            ignoreBackdropClick: true
        };
        const modalRef = this.bsModalService.show(AddSoftwareModalComponent, config);
        modalRef.content.saved.subscribe(savedSoftware => this.editSoftware(savedSoftware));
    }
    editSoftware(software) {
        this.router.navigate([software.id], { relativeTo: this.activatedRoute });
    }
    deleteSoftware(software) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                const title = gettext('Delete software');
                const body = `
        ${this.translateService.instant(gettext('You are about to delete software "{{ name }}" with all its versions.'), { name: software.name })}
        ${this.translateService.instant(gettext('This operation is irreversible.'))}
        ${this.translateService.instant(gettext('Do you want to proceed?'))}
      `;
                const labels = {
                    ok: gettext('Delete')
                };
                yield this.modalService.confirm(title, body, Status.DANGER, labels);
                yield this.repositoryService.delete(software);
                this.alertService.success(gettext('Software deleted.'));
                this.refresh$.next();
            }
            catch (ex) {
                // only if not cancel from modal
                if (ex) {
                    this.alertService.addServerFailure(ex);
                }
            }
        });
    }
    trackByName(_index, column) {
        return column.name;
    }
}
SoftwareListComponent.ɵfac = function SoftwareListComponent_Factory(t) { return new (t || SoftwareListComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.RepositoryService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DeviceGridService), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.ModalService), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.BsModalService), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.TranslateService), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.AlertService), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.Router), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ActivatedRoute)); };
SoftwareListComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: SoftwareListComponent, selectors: [["c8y-software-list"]], decls: 16, vars: 25, consts: [[3, "placement"], [1, "btn", "btn-link", 3, "title", "click"], ["c8yIcon", "plus-circle"], [1, "content-fullpage"], [3, "title", "refresh", "actionControls", "pagination", "columns", "infiniteScroll", "serverSideDataCallback"], [1, "c8y-empty-state"], [4, "ngIf"], [4, "ngFor", "ngForOf", "ngForTrackBy"], [4, "ngIf", "ngIfElse"], ["noResults", ""], [1, "text-center"], ["c8yIcon", "c8y-tools", 1, "c8y-icon-duocolor"], ["translate", ""], ["translate", "", 1, "btn", "btn-primary", 3, "title", "click"], ["c8yIcon", "search"], [3, "name"]], template: function SoftwareListComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "c8y-title");
        ɵngcc0.ɵɵtext(1);
        ɵngcc0.ɵɵpipe(2, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(3, "c8y-action-bar-item", 0);
        ɵngcc0.ɵɵelementStart(4, "button", 1);
        ɵngcc0.ɵɵlistener("click", function SoftwareListComponent_Template_button_click_4_listener() { return ctx.addSoftware(); });
        ɵngcc0.ɵɵpipe(5, "translate");
        ɵngcc0.ɵɵelement(6, "i", 2);
        ɵngcc0.ɵɵtext(7);
        ɵngcc0.ɵɵpipe(8, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(9, "div", 3);
        ɵngcc0.ɵɵelementStart(10, "c8y-data-grid", 4);
        ɵngcc0.ɵɵpipe(11, "translate");
        ɵngcc0.ɵɵelementStart(12, "div", 5);
        ɵngcc0.ɵɵtemplate(13, SoftwareListComponent_ng_container_13_Template, 2, 0, "ng-container", 6);
        ɵngcc0.ɵɵtemplate(14, SoftwareListComponent_ng_container_14_Template, 5, 4, "ng-container", 6);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(15, SoftwareListComponent_ng_container_15_Template, 2, 1, "ng-container", 7);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 16, "Software repository"), "\n");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("placement", "right");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(5, 18, "Add software"));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(8, 20, "Add software"), " ");
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("title", ɵngcc0.ɵɵpipeBind1(11, 22, "Software"))("refresh", ctx.refresh$)("actionControls", ɵngcc0.ɵɵpureFunction0(24, _c0))("pagination", ctx.pagination)("columns", ctx.columns)("actionControls", ctx.actionControls)("infiniteScroll", "auto")("serverSideDataCallback", ctx.serverSideDataCallback);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.sizeRequestDone);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.sizeRequestDone);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.columns)("ngForTrackBy", ctx.trackByName);
    } }, directives: [ɵngcc3.TitleComponent, ɵngcc3.ActionBarItemComponent, ɵngcc3.IconDirective, ɵngcc3.DataGridComponent, ɵngcc7.NgIf, ɵngcc7.NgForOf, ɵngcc3.LoadingComponent, ɵngcc3.C8yTranslateDirective, ɵngcc3.ColumnDirective], pipes: [ɵngcc3.C8yTranslatePipe, ɵngcc7.AsyncPipe], encapsulation: 2 });
SoftwareListComponent.ctorParameters = () => [
    { type: RepositoryService },
    { type: DeviceGridService },
    { type: ModalService },
    { type: BsModalService },
    { type: TranslateService },
    { type: AlertService },
    { type: Router },
    { type: ActivatedRoute }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SoftwareListComponent, [{
        type: Component,
        args: [{
                selector: 'c8y-software-list',
                template: "<c8y-title>\n  {{ 'Software repository' | translate }}\n</c8y-title>\n\n<c8y-action-bar-item [placement]=\"'right'\">\n  <button class=\"btn btn-link\" title=\"{{ 'Add software' | translate }}\" (click)=\"addSoftware()\">\n    <i c8yIcon=\"plus-circle\"></i>\n    {{ 'Add software' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<div class=\"content-fullpage\">\n  <c8y-data-grid\n    [title]=\"'Software' | translate\"\n    [refresh]=\"refresh$\"\n    [actionControls]=\"[]\"\n    [pagination]=\"pagination\"\n    [columns]=\"columns\"\n    [actionControls]=\"actionControls\"\n    [infiniteScroll]=\"'auto'\"\n    [serverSideDataCallback]=\"serverSideDataCallback\"\n  >\n    <div class=\"c8y-empty-state\">\n      <ng-container *ngIf=\"!sizeRequestDone\">\n        <c8y-loading></c8y-loading>\n      </ng-container>\n      <ng-container *ngIf=\"sizeRequestDone\">\n        <ng-container *ngIf=\"(sizeRequest | async) === 0; else noResults\">\n          <div class=\"text-center\">\n            <h1 class=\"c8y-icon-duocolor\" c8yIcon=\"c8y-tools\"></h1>\n            <h3 translate>No software to display.</h3>\n            <p translate>Add a new software by clicking below.</p>\n            <p>\n              <button\n                class=\"btn btn-primary\"\n                title=\"{{ 'Add software' | translate }}\"\n                (click)=\"addSoftware()\"\n                translate\n              >\n                Add software\n              </button>\n            </p>\n          </div>\n        </ng-container>\n        <ng-template #noResults>\n          <h1 c8yIcon=\"search\"></h1>\n          <div>\n            <p>\n              <strong>{{ 'No results to display.' | translate }}</strong>\n            </p>\n            <small>{{ 'Refine your search terms or check your spelling.' | translate }}</small>\n          </div>\n        </ng-template>\n      </ng-container>\n    </div>\n    <ng-container *ngFor=\"let column of columns; trackBy: trackByName\">\n      <c8y-column [name]=\"column.name\"></c8y-column>\n    </ng-container>\n  </c8y-data-grid>\n</div>\n"
            }]
    }], function () { return [{ type: ɵngcc1.RepositoryService }, { type: ɵngcc2.DeviceGridService }, { type: ɵngcc3.ModalService }, { type: ɵngcc4.BsModalService }, { type: ɵngcc5.TranslateService }, { type: ɵngcc3.AlertService }, { type: ɵngcc6.Router }, { type: ɵngcc6.ActivatedRoute }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,