import { ChangeDetectorRef, Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';
import { QueriesUtil } from '@c8y/client';
import { gettext } from '@c8y/ngx-components';
import { uniqBy } from 'lodash-es';
import { TranslateService } from '@ngx-translate/core';
import { BehaviorSubject, pipe } from 'rxjs';
import { debounceTime, map, switchMap, tap } from 'rxjs/operators';
import { RepositoryType } from '../repository.model';
import { RepositoryService } from '../repository.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../repository.service';
import * as ɵngcc2 from '@ngx-translate/core';
import * as ɵngcc3 from '@c8y/ngx-components';
import * as ɵngcc4 from '@angular/forms';
import * as ɵngcc5 from '@angular/common';

const _c0 = ["deviceSoftwareTypeModel"];
const _c1 = ["notFoundTypeAddNewTemplate"];
const _c2 = ["notFoundTypeTemplate"];
function SoftwareTypeComponent_c8y_li_2_Template(rf, ctx) { if (rf & 1) {
    const _r8 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "c8y-li", 5);
    ɵngcc0.ɵɵlistener("click", function SoftwareTypeComponent_c8y_li_2_Template_c8y_li_click_0_listener() { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r8); const software_r6 = restoredCtx.$implicit; const ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7.selectSoftware(software_r6); });
    ɵngcc0.ɵɵelement(1, "c8y-highlight", 6);
    ɵngcc0.ɵɵpipe(2, "async");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const software_r6 = ctx.$implicit;
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("active", (ctx_r1.softwareTypeMO == null ? null : ctx_r1.softwareTypeMO.softwareType) === software_r6.softwareType);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("text", software_r6.softwareType || "--")("pattern", ɵngcc0.ɵɵpipeBind1(2, 3, ctx_r1.search$));
} }
function SoftwareTypeComponent_ng_template_3_c8y_li_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "c8y-li", 8);
    ɵngcc0.ɵɵelementStart(1, "span", 9);
    ɵngcc0.ɵɵtext(2, "No match found.");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "button", 10);
    ɵngcc0.ɵɵpipe(4, "translate");
    ɵngcc0.ɵɵtext(5, " Add new`software type` ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(4, 1, "Add new`software type`"));
} }
function SoftwareTypeComponent_ng_template_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, SoftwareTypeComponent_ng_template_3_c8y_li_0_Template, 6, 3, "c8y-li", 7);
    ɵngcc0.ɵɵpipe(1, "async");
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    let tmp_0_0;
    ɵngcc0.ɵɵproperty("ngIf", ((tmp_0_0 = ɵngcc0.ɵɵpipeBind1(1, 1, ctx_r3.search$)) == null ? null : tmp_0_0.length) > 0);
} }
function SoftwareTypeComponent_ng_template_5_c8y_li_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "c8y-li", 8);
    ɵngcc0.ɵɵelementStart(1, "span", 9);
    ɵngcc0.ɵɵtext(2, "No match found. Refine your search terms or check your spelling.");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} }
function SoftwareTypeComponent_ng_template_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, SoftwareTypeComponent_ng_template_5_c8y_li_0_Template, 3, 0, "c8y-li", 7);
    ɵngcc0.ɵɵpipe(1, "async");
    ɵngcc0.ɵɵpipe(2, "async");
} if (rf & 2) {
    const ctx_r5 = ɵngcc0.ɵɵnextContext();
    let tmp_0_0;
    ɵngcc0.ɵɵproperty("ngIf", ((tmp_0_0 = ɵngcc0.ɵɵpipeBind1(1, 1, ctx_r5.search$)) == null ? null : tmp_0_0.length) > 0 && ((tmp_0_0 = ɵngcc0.ɵɵpipeBind1(2, 3, ctx_r5.softwaresResult$)) == null ? null : tmp_0_0.data == null ? null : tmp_0_0.data.length) === 0);
} }
export class SoftwareTypeComponent {
    constructor(repositoryService, changeDetectorRef, translateService) {
        this.repositoryService = repositoryService;
        this.changeDetectorRef = changeDetectorRef;
        this.translateService = translateService;
        this.required = true;
        this.placeholder = this.translateService.instant(gettext('e.g. {{ example }}'), { example: 'yum' });
        this.emitResultsOnly = false;
        this.showBtnInNotFoundMessage = true;
        this.allowFreeEntries = true;
        this.onSelectSoftware = new EventEmitter();
        this.filterPipe = pipe(tap());
        this.search$ = new BehaviorSubject(null);
        this.queriesUtil = new QueriesUtil();
        this.softwareTypes = new Set();
        this.softwaresResult$ = this.search$.pipe(debounceTime(300), tap(() => this.softwareTypes.clear()), switchMap((searchString) => {
            if (!this.emitResultsOnly || !searchString) {
                this.onSelectSoftware.emit(this.softwareTypeMO);
            }
            return this.getSoftwareByTypeResult(searchString);
        }));
        this.filterPipe = pipe(map(this.removeDuplicatesBySoftwareType.bind(this)));
    }
    ngOnInit() {
        this.notFoundTemplateToUse = this.showBtnInNotFoundMessage
            ? this.notFoundTypeAddNewTemplate
            : this.notFoundTypeTemplate;
    }
    getSoftwareByTypeResult(searchString) {
        let query = this.queriesUtil.prependOrderbys({}, [{ softwareType: 1 }]);
        const filter = !!searchString
            ? {
                softwareType: {
                    __eq: `*${searchString}*`
                }
            }
            : {
                __has: 'softwareType'
            };
        query = this.queriesUtil.addAndFilter(query, filter);
        return this.repositoryService.listRepositoryEntries(RepositoryType.SOFTWARE, {
            query,
            params: {
                pageSize: 200
            }
        });
    }
    selectSoftware(software) {
        this.softwareTypeMO = software;
        this.onSelectSoftware.emit(software);
        this.deviceSoftwareTypeModel.searchControlModel.control.markAsDirty();
    }
    resetInput() {
        this.deviceSoftwareTypeModel.reset();
    }
    removeDuplicatesBySoftwareType(list) {
        const uniqueBySoftwareType = uniqBy(list, 'softwareType').filter((sw) => !this.softwareTypes.has(sw.softwareType));
        uniqueBySoftwareType.forEach((sw) => this.softwareTypes.add(sw.softwareType));
        return uniqueBySoftwareType;
    }
}
SoftwareTypeComponent.ɵfac = function SoftwareTypeComponent_Factory(t) { return new (t || SoftwareTypeComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.RepositoryService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.TranslateService)); };
SoftwareTypeComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: SoftwareTypeComponent, selectors: [["c8y-software-type"]], viewQuery: function SoftwareTypeComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c0, 5);
        ɵngcc0.ɵɵviewQuery(_c1, 7);
        ɵngcc0.ɵɵviewQuery(_c2, 7);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.deviceSoftwareTypeModel = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.notFoundTypeAddNewTemplate = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.notFoundTypeTemplate = _t.first);
    } }, inputs: { required: "required", placeholder: "placeholder", emitResultsOnly: "emitResultsOnly", showBtnInNotFoundMessage: "showBtnInNotFoundMessage", allowFreeEntries: "allowFreeEntries", softwareTypeMO: "softwareTypeMO", disabled: "disabled", style: "style" }, outputs: { onSelectSoftware: "onSelectSoftware" }, decls: 7, vars: 10, consts: [["name", "softwareType", "displayProperty", "softwareType", 3, "ngModel", "required", "disabled", "placeholder", "allowFreeEntries", "ngStyle", "ngModelChange", "onSearch"], ["deviceSoftwareTypeModel", ""], ["class", "p-l-8 p-r-8 c8y-list__item--link", 3, "active", "click", 4, "c8yFor", "c8yForOf", "c8yForPipe", "c8yForLoadMore", "c8yForNotFound"], ["notFoundTypeAddNewTemplate", ""], ["notFoundTypeTemplate", ""], [1, "p-l-8", "p-r-8", "c8y-list__item--link", 3, "active", "click"], [3, "text", "pattern"], ["class", "bg-gray-lighter p-8", 4, "ngIf"], [1, "bg-gray-lighter", "p-8"], ["translate", ""], ["type", "button", "translate", "", 1, "btn", "btn-primary", "btn-xs", "m-l-16", 3, "title"]], template: function SoftwareTypeComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "c8y-typeahead", 0, 1);
        ɵngcc0.ɵɵlistener("ngModelChange", function SoftwareTypeComponent_Template_c8y_typeahead_ngModelChange_0_listener($event) { return ctx.softwareTypeMO = $event; })("onSearch", function SoftwareTypeComponent_Template_c8y_typeahead_onSearch_0_listener($event) { return ctx.search$.next($event); });
        ɵngcc0.ɵɵtemplate(2, SoftwareTypeComponent_c8y_li_2_Template, 3, 5, "c8y-li", 2);
        ɵngcc0.ɵɵtemplate(3, SoftwareTypeComponent_ng_template_3_Template, 2, 3, "ng-template", null, 3, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(5, SoftwareTypeComponent_ng_template_5_Template, 3, 5, "ng-template", null, 4, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngModel", ctx.softwareTypeMO)("required", ctx.required)("disabled", ctx.disabled)("placeholder", ctx.placeholder)("allowFreeEntries", ctx.allowFreeEntries)("ngStyle", ctx.style);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("c8yForOf", ctx.softwaresResult$)("c8yForPipe", ctx.filterPipe)("c8yForLoadMore", "auto")("c8yForNotFound", ctx.notFoundTemplateToUse);
    } }, directives: [ɵngcc3.TypeaheadComponent, ɵngcc4.NgControlStatus, ɵngcc4.NgModel, ɵngcc4.RequiredValidator, ɵngcc5.NgStyle, ɵngcc3.ForOfDirective, ɵngcc3.ListItemComponent, ɵngcc3.HighlightComponent, ɵngcc5.NgIf, ɵngcc3.C8yTranslateDirective], pipes: [ɵngcc5.AsyncPipe, ɵngcc3.C8yTranslatePipe], encapsulation: 2 });
SoftwareTypeComponent.ctorParameters = () => [
    { type: RepositoryService },
    { type: ChangeDetectorRef },
    { type: TranslateService }
];
SoftwareTypeComponent.propDecorators = {
    softwareTypeMO: [{ type: Input }],
    disabled: [{ type: Input }],
    style: [{ type: Input }],
    required: [{ type: Input }],
    placeholder: [{ type: Input }],
    emitResultsOnly: [{ type: Input }],
    showBtnInNotFoundMessage: [{ type: Input }],
    allowFreeEntries: [{ type: Input }],
    deviceSoftwareTypeModel: [{ type: ViewChild, args: ['deviceSoftwareTypeModel',] }],
    notFoundTypeAddNewTemplate: [{ type: ViewChild, args: ['notFoundTypeAddNewTemplate', { static: true },] }],
    notFoundTypeTemplate: [{ type: ViewChild, args: ['notFoundTypeTemplate', { static: true },] }],
    onSelectSoftware: [{ type: Output }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SoftwareTypeComponent, [{
        type: Component,
        args: [{
                selector: 'c8y-software-type',
                template: "<c8y-typeahead\n  [(ngModel)]=\"softwareTypeMO\"\n  [required]=\"required\"\n  [disabled]=\"disabled\"\n  name=\"softwareType\"\n  [placeholder]=\"placeholder\"\n  [allowFreeEntries]=\"allowFreeEntries\"\n  #deviceSoftwareTypeModel\n  (onSearch)=\"search$.next($event)\"\n  displayProperty=\"softwareType\"\n  [ngStyle]=\"style\"\n>\n  <c8y-li\n    *c8yFor=\"\n      let software of softwaresResult$;\n      pipe: filterPipe;\n      loadMore: 'auto';\n      notFound: notFoundTemplateToUse\n    \"\n    class=\"p-l-8 p-r-8 c8y-list__item--link\"\n    (click)=\"selectSoftware(software)\"\n    [active]=\"softwareTypeMO?.softwareType === software.softwareType\"\n  >\n    <c8y-highlight\n      [text]=\"software.softwareType || '--'\"\n      [pattern]=\"search$ | async\"\n    ></c8y-highlight>\n  </c8y-li>\n  <ng-template #notFoundTypeAddNewTemplate>\n    <c8y-li class=\"bg-gray-lighter p-8\" *ngIf=\"(search$ | async)?.length > 0\">\n      <span translate>No match found.</span>\n      <button\n        title=\"{{ 'Add new`software type`' | translate }}\"\n        type=\"button\"\n        class=\"btn btn-primary btn-xs m-l-16\"\n        translate\n      >\n        Add new`software type`\n      </button>\n    </c8y-li>\n  </ng-template>\n  <ng-template #notFoundTypeTemplate>\n    <c8y-li\n      class=\"bg-gray-lighter p-8\"\n      *ngIf=\"(search$ | async)?.length > 0 && (softwaresResult$ | async)?.data?.length === 0\"\n    >\n      <span translate>No match found. Refine your search terms or check your spelling.</span>\n    </c8y-li>\n  </ng-template>\n</c8y-typeahead>\n"
            }]
    }], function () { return [{ type: ɵngcc1.RepositoryService }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc2.TranslateService }]; }, { required: [{
            type: Input
        }], placeholder: [{
            type: Input
        }], emitResultsOnly: [{
            type: Input
        }], showBtnInNotFoundMessage: [{
            type: Input
        }], allowFreeEntries: [{
            type: Input
        }], onSelectSoftware: [{
            type: Output
        }], softwareTypeMO: [{
            type: Input
        }], disabled: [{
            type: Input
        }], style: [{
            type: Input
        }], deviceSoftwareTypeModel: [{
            type: ViewChild,
            args: ['deviceSoftwareTypeModel']
        }], notFoundTypeAddNewTemplate: [{
            type: ViewChild,
            args: ['notFoundTypeAddNewTemplate', { static: true }]
        }], notFoundTypeTemplate: [{
            type: ViewChild,
            args: ['notFoundTypeTemplate', { static: true }]
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,