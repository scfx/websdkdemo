import { Component, EventEmitter, Input, Output } from '@angular/core';
import { filter, get, set } from 'lodash-es';
import { BehaviorSubject, combineLatest, of } from 'rxjs';
import { debounceTime, distinctUntilChanged, map, switchMap, tap } from 'rxjs/operators';
import { AdvancedSoftwareService } from './advanced-software.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './advanced-software.service';
import * as ɵngcc2 from '@c8y/ngx-components';
import * as ɵngcc3 from '@angular/common';

function DeviceSoftwareListComponent_c8y_li_1_div_14_button_1_Template(rf, ctx) { if (rf & 1) {
    const _r8 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 15);
    ɵngcc0.ɵɵlistener("click", function DeviceSoftwareListComponent_c8y_li_1_div_14_button_1_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r8); const software_r2 = ɵngcc0.ɵɵnextContext(2).$implicit; const ctx_r6 = ɵngcc0.ɵɵnextContext(); return ctx_r6.update.emit(software_r2); });
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵtext(2, " Update ");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(1, 1, "Update`software,verb`"));
} }
function DeviceSoftwareListComponent_c8y_li_1_div_14_button_2_Template(rf, ctx) { if (rf & 1) {
    const _r11 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 16);
    ɵngcc0.ɵɵlistener("click", function DeviceSoftwareListComponent_c8y_li_1_div_14_button_2_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r11); const software_r2 = ɵngcc0.ɵɵnextContext(2).$implicit; const ctx_r9 = ɵngcc0.ɵɵnextContext(); return ctx_r9.remove.emit(software_r2); });
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵelement(2, "i", 17);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(1, 1, "Remove`software`"));
} }
function DeviceSoftwareListComponent_c8y_li_1_div_14_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 12);
    ɵngcc0.ɵɵtemplate(1, DeviceSoftwareListComponent_c8y_li_1_div_14_button_1_Template, 3, 3, "button", 13);
    ɵngcc0.ɵɵtemplate(2, DeviceSoftwareListComponent_c8y_li_1_div_14_button_2_Template, 3, 3, "button", 14);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const software_r2 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r3.showUpdate && !ctx_r3.isSoftwareGoingToBeChanged(software_r2));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r3.showRemove && !ctx_r3.isSoftwareGoingToBeChanged(software_r2));
} }
const _c0 = function (a0) { return { disabled: a0 }; };
function DeviceSoftwareListComponent_c8y_li_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "c8y-li", 3);
    ɵngcc0.ɵɵelementStart(1, "c8y-li-icon");
    ɵngcc0.ɵɵelement(2, "i", 4);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "c8y-li-body", 5);
    ɵngcc0.ɵɵelementStart(4, "div", 6);
    ɵngcc0.ɵɵelementStart(5, "p", 7);
    ɵngcc0.ɵɵtext(6);
    ɵngcc0.ɵɵelementStart(7, "span", 8);
    ɵngcc0.ɵɵtext(8);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(9, "p", 7);
    ɵngcc0.ɵɵelementStart(10, "span", 9);
    ɵngcc0.ɵɵtext(11, " Version ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(12, "span", 10);
    ɵngcc0.ɵɵtext(13);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(14, DeviceSoftwareListComponent_c8y_li_1_div_14_Template, 3, 2, "div", 11);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const software_r2 = ctx.$implicit;
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(7, _c0, ctx_r0.isSoftwareGoingToBeChanged(software_r2)));
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵpropertyInterpolate("title", software_r2.name);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", software_r2.name, " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(software_r2.softwareType);
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵpropertyInterpolate("title", software_r2.version);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", software_r2.version, " ");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.supportsSoftwareOperations && (ctx_r0.showUpdate || ctx_r0.showRemove));
} }
function DeviceSoftwareListComponent_div_2_ng_content_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵprojection(0, 0, ["*ngIf", "emptyList"]);
} }
function DeviceSoftwareListComponent_div_2_ng_content_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵprojection(0, 1, ["*ngIf", "noSearchResults"]);
} }
function DeviceSoftwareListComponent_div_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 18);
    ɵngcc0.ɵɵtemplate(1, DeviceSoftwareListComponent_div_2_ng_content_1_Template, 1, 0, "ng-content", 19);
    ɵngcc0.ɵɵtemplate(2, DeviceSoftwareListComponent_div_2_ng_content_2_Template, 1, 0, "ng-content", 19);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.emptyList);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.noSearchResults);
} }
const _c1 = [[["", 8, "c8y-empty-state", 9, "c8y-no-results-state"]], [["", 8, "c8y-no-results-state"]]];
const _c2 = [".c8y-empty-state:not(.c8y-no-results-state)", ".c8y-no-results-state"];
export class DeviceSoftwareListComponent {
    constructor(advancedSoftwareService) {
        this.advancedSoftwareService = advancedSoftwareService;
        this.filterCriteria$ = of(null);
        this.update = new EventEmitter();
        this.remove = new EventEmitter();
        this.onListEmpty = new EventEmitter();
        this.supportsSoftwareOperations = false;
        this.operationTypes = ['c8y_SoftwareUpdate', 'c8y_SoftwareList', 'c8y_Software'];
        this.legacySoftwareList$ = new BehaviorSubject([]);
    }
    set softwareList(softwareList) {
        if (softwareList !== null) {
            this.legacySoftwareList$.next(softwareList);
        }
    }
    ngOnInit() {
        this.softwareItems$ = combineLatest(this.filterCriteria$, this.legacySoftwareList$).pipe(debounceTime(300), distinctUntilChanged(), switchMap(([filterCriteria, legacySoftwareList]) => {
            if (legacySoftwareList) {
                return of(this.getLegacySoftwareList(filterCriteria)).pipe(map(resultList => ({ resultList, filterCriteria })));
            }
            else {
                return this.getAdvancedSoftwareList(filterCriteria).then(resultList => ({
                    resultList,
                    filterCriteria
                }));
            }
        }), tap(({ resultList, filterCriteria }) => {
            var _a, _b;
            this.notifyListEmpty(!((_a = resultList === null || resultList === void 0 ? void 0 : resultList.paging) === null || _a === void 0 ? void 0 : _a.totalPages) && !filterCriteria);
            this.noSearchResults = !((_b = resultList === null || resultList === void 0 ? void 0 : resultList.paging) === null || _b === void 0 ? void 0 : _b.totalPages) && !!filterCriteria;
        }), map(({ resultList }) => resultList));
        const supportedOperations = get(this.device, 'c8y_SupportedOperations', []);
        this.supportsSoftwareOperations = this.operationTypes.some(operationType => supportedOperations.indexOf(operationType) > -1);
    }
    ngAfterContentInit() {
        this.showUpdate = this.update.observers.length > 0;
        this.showRemove = this.remove.observers.length > 0;
    }
    isSoftwareGoingToBeChanged(software) {
        const relevantChanges = filter(this.deviceSoftwareChanges, software);
        return relevantChanges.length > 0;
    }
    getAdvancedSoftwareList(filterCriteria) {
        const queryFilter = { deviceId: this.device.id };
        if (filterCriteria === null || filterCriteria === void 0 ? void 0 : filterCriteria.name) {
            set(queryFilter, 'name', `*${filterCriteria.name}*`);
        }
        if (filterCriteria === null || filterCriteria === void 0 ? void 0 : filterCriteria.softwareType) {
            set(queryFilter, 'type', `${filterCriteria.softwareType}`);
        }
        return this.advancedSoftwareService.list(queryFilter);
    }
    getLegacySoftwareList(filterCriteria) {
        const data = filterCriteria
            ? this.legacySoftwareList$.value.filter(item => {
                var _a;
                let match = true;
                if (filterCriteria === null || filterCriteria === void 0 ? void 0 : filterCriteria.name) {
                    match = match && ((_a = item.name) === null || _a === void 0 ? void 0 : _a.includes(filterCriteria.name));
                }
                if (filterCriteria === null || filterCriteria === void 0 ? void 0 : filterCriteria.softwareType) {
                    match = match && item.softwareType === filterCriteria.softwareType;
                }
                return match;
            })
            : this.legacySoftwareList$.value;
        return {
            data,
            res: null,
            paging: {
                totalPages: data.length
            }
        };
    }
    notifyListEmpty(isEmpty) {
        this.emptyList = isEmpty;
        this.onListEmpty.emit(isEmpty);
    }
}
DeviceSoftwareListComponent.ɵfac = function DeviceSoftwareListComponent_Factory(t) { return new (t || DeviceSoftwareListComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.AdvancedSoftwareService)); };
DeviceSoftwareListComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: DeviceSoftwareListComponent, selectors: [["c8y-device-software-list"]], inputs: { filterCriteria$: "filterCriteria$", softwareList: "softwareList", device: "device", deviceSoftwareChanges: "deviceSoftwareChanges" }, outputs: { update: "update", remove: "remove", onListEmpty: "onListEmpty" }, ngContentSelectors: _c2, decls: 3, vars: 2, consts: [[1, "no-border-last"], [3, "ngClass", 4, "c8yFor", "c8yForOf"], ["class", "card-block", 4, "ngIf"], [3, "ngClass"], ["c8yIcon", "c8y-tools"], [1, "content-flex-20"], [1, "col-8", 3, "title"], [1, "text-truncate"], [1, "label", "label-primary", "m-l-8"], ["translate", "", 1, "text-label-small", "m-r-4"], [3, "title"], ["class", "col-4 text-right", 4, "ngIf"], [1, "col-4", "text-right"], ["class", "btn btn-default btn-xs showOnHover", "translate", "", 3, "title", "click", 4, "ngIf"], ["class", "showOnHover btn btn-dot pull-right", 3, "title", "click", 4, "ngIf"], ["translate", "", 1, "btn", "btn-default", "btn-xs", "showOnHover", 3, "title", "click"], [1, "showOnHover", "btn", "btn-dot", "pull-right", 3, "title", "click"], ["c8yIcon", "minus-circle", 1, "text-danger"], [1, "card-block"], [4, "ngIf"]], template: function DeviceSoftwareListComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c1);
        ɵngcc0.ɵɵelementStart(0, "c8y-list-group", 0);
        ɵngcc0.ɵɵtemplate(1, DeviceSoftwareListComponent_c8y_li_1_Template, 15, 9, "c8y-li", 1);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(2, DeviceSoftwareListComponent_div_2_Template, 3, 2, "div", 2);
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("c8yForOf", ctx.softwareItems$);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.noSearchResults || ctx.emptyList);
    } }, directives: [ɵngcc2.ListGroupComponent, ɵngcc2.ForOfDirective, ɵngcc3.NgIf, ɵngcc2.ListItemComponent, ɵngcc3.NgClass, ɵngcc2.ListItemIconComponent, ɵngcc2.IconDirective, ɵngcc2.ListItemBodyComponent, ɵngcc2.C8yTranslateDirective], pipes: [ɵngcc2.C8yTranslatePipe], encapsulation: 2 });
DeviceSoftwareListComponent.ctorParameters = () => [
    { type: AdvancedSoftwareService }
];
DeviceSoftwareListComponent.propDecorators = {
    softwareList: [{ type: Input }],
    device: [{ type: Input }],
    deviceSoftwareChanges: [{ type: Input }],
    filterCriteria$: [{ type: Input }],
    update: [{ type: Output }],
    remove: [{ type: Output }],
    onListEmpty: [{ type: Output }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DeviceSoftwareListComponent, [{
        type: Component,
        args: [{
                selector: 'c8y-device-software-list',
                template: "<c8y-list-group class=\"no-border-last\">\n  <c8y-li\n    [ngClass]=\"{ disabled: isSoftwareGoingToBeChanged(software) }\"\n    *c8yFor=\"let software of softwareItems$\"\n  >\n    <!-- SOFTWARE ICON -->\n    <c8y-li-icon>\n      <i c8yIcon=\"c8y-tools\"></i>\n    </c8y-li-icon>\n\n    <c8y-li-body class=\"content-flex-20\">\n      <div title=\"{{ software.name }}\" class=\"col-8\">\n        <!-- SOFTWARE NAME -->\n        <p class=\"text-truncate\">\n          {{ software.name }}\n          <!-- SOFTWARE TYPE-->\n          <span class=\"label label-primary m-l-8\">{{ software.softwareType }}</span>\n        </p>\n        <!-- SOFTWARE VERSION -->\n        <p class=\"text-truncate\">\n          <span class=\"text-label-small m-r-4\" translate> Version </span>\n          <span title=\"{{ software.version }}\">\n            {{ software.version }}\n          </span>\n        </p>\n      </div>\n\n      <div\n        *ngIf=\"supportsSoftwareOperations && (showUpdate || showRemove)\"\n        class=\"col-4 text-right\"\n      >\n        <!-- UPDATE SOFTWARE -->\n        <button\n          *ngIf=\"showUpdate && !isSoftwareGoingToBeChanged(software)\"\n          class=\"btn btn-default btn-xs showOnHover\"\n          (click)=\"update.emit(software)\"\n          title=\"{{ 'Update`software,verb`' | translate }}\"\n          translate\n        >\n          Update\n        </button>\n\n        <!-- REMOVE SOFTWARE -->\n        <button\n          *ngIf=\"showRemove && !isSoftwareGoingToBeChanged(software)\"\n          title=\"{{ 'Remove`software`' | translate }}\"\n          class=\"showOnHover btn btn-dot pull-right\"\n          (click)=\"remove.emit(software)\"\n        >\n          <i c8yIcon=\"minus-circle\" class=\"text-danger\"></i>\n        </button>\n      </div>\n    </c8y-li-body>\n  </c8y-li>\n</c8y-list-group>\n<!-- NO SEARCH RESULTS STATE -->\n<div class=\"card-block\" *ngIf=\"noSearchResults || emptyList\">\n  <ng-content *ngIf=\"emptyList\" select=\".c8y-empty-state:not(.c8y-no-results-state)\"></ng-content>\n  <ng-content *ngIf=\"noSearchResults\" select=\".c8y-no-results-state\"></ng-content>\n</div>\n"
            }]
    }], function () { return [{ type: ɵngcc1.AdvancedSoftwareService }]; }, { filterCriteria$: [{
            type: Input
        }], update: [{
            type: Output
        }], remove: [{
            type: Output
        }], onListEmpty: [{
            type: Output
        }], softwareList: [{
            type: Input
        }], device: [{
            type: Input
        }], deviceSoftwareChanges: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,