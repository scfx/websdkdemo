import { Injectable } from '@angular/core';
import { FetchClient } from '@c8y/client';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@c8y/client';
export class ImpactSubscriptionService {
    constructor(client) {
        this.client = client;
        this.microserviceUrl = '/service/impact';
        this.header = { 'Content-Type': 'application/json' };
    }
    refreshDeviceResources(deviceId) {
        const options = {
            method: 'PUT',
            headers: this.header
        };
        return this.client.fetch(`${this.microserviceUrl}/refresh/${deviceId}`, options);
    }
}
ImpactSubscriptionService.ɵfac = function ImpactSubscriptionService_Factory(t) { return new (t || ImpactSubscriptionService)(ɵngcc0.ɵɵinject(ɵngcc1.FetchClient)); };
ImpactSubscriptionService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: ImpactSubscriptionService, factory: ImpactSubscriptionService.ɵfac });
ImpactSubscriptionService.ctorParameters = () => [
    { type: FetchClient }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ImpactSubscriptionService, [{
        type: Injectable
    }], function () { return [{ type: ɵngcc1.FetchClient }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW1wYWN0LXN1YnNjcmlwdGlvbi5zZXJ2aWNlLmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi9wcm90b2NvbC1pbXBhY3QvaW1wYWN0LXN1YnNjcmlwdGlvbi5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLFdBQVcsRUFBaUMsTUFBTSxhQUFhLENBQUM7OztBQUd6RSxNQUFNLE9BQU8seUJBQXlCO0FBQ3RDLElBR0UsWUFBb0IsTUFBbUI7QUFBSSxRQUF2QixXQUFNLEdBQU4sTUFBTSxDQUFhO0FBQUMsUUFIdkIsb0JBQWUsR0FBVyxpQkFBaUIsQ0FBQztBQUMvRCxRQUFtQixXQUFNLEdBQVEsRUFBRSxjQUFjLEVBQUUsa0JBQWtCLEVBQUUsQ0FBQztBQUN4RSxJQUM0QyxDQUFDO0FBQzdDLElBQ0Usc0JBQXNCLENBQUMsUUFBeUI7QUFBSSxRQUNsRCxNQUFNLE9BQU8sR0FBa0I7QUFDbkMsWUFBTSxNQUFNLEVBQUUsS0FBSztBQUNuQixZQUFNLE9BQU8sRUFBRSxJQUFJLENBQUMsTUFBTTtBQUMxQixTQUFLLENBQUM7QUFDTixRQUFJLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsR0FBRyxJQUFJLENBQUMsZUFBZSxZQUFZLFFBQVEsRUFBRSxFQUFFLE9BQU8sQ0FBQyxDQUFDO0FBQ3JGLElBQUUsQ0FBQztBQUNIO3FEQWRDLFVBQVU7eUpBQ1Q7QUFBQztBQUNVLFlBSkosV0FBVztBQUFHOzs7NEVBQUU7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEZldGNoQ2xpZW50LCBJRmV0Y2hPcHRpb25zLCBJRmV0Y2hSZXNwb25zZSB9IGZyb20gJ0BjOHkvY2xpZW50JztcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIEltcGFjdFN1YnNjcmlwdGlvblNlcnZpY2Uge1xuICBwcml2YXRlIHJlYWRvbmx5IG1pY3Jvc2VydmljZVVybDogc3RyaW5nID0gJy9zZXJ2aWNlL2ltcGFjdCc7XG4gIHByaXZhdGUgcmVhZG9ubHkgaGVhZGVyOiBhbnkgPSB7ICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicgfTtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGNsaWVudDogRmV0Y2hDbGllbnQpIHt9XG5cbiAgcmVmcmVzaERldmljZVJlc291cmNlcyhkZXZpY2VJZDogc3RyaW5nIHwgbnVtYmVyKTogUHJvbWlzZTxJRmV0Y2hSZXNwb25zZT4ge1xuICAgIGNvbnN0IG9wdGlvbnM6IElGZXRjaE9wdGlvbnMgPSB7XG4gICAgICBtZXRob2Q6ICdQVVQnLFxuICAgICAgaGVhZGVyczogdGhpcy5oZWFkZXJcbiAgICB9O1xuICAgIHJldHVybiB0aGlzLmNsaWVudC5mZXRjaChgJHt0aGlzLm1pY3Jvc2VydmljZVVybH0vcmVmcmVzaC8ke2RldmljZUlkfWAsIG9wdGlvbnMpO1xuICB9XG59XG4iXX0=