import { Component } from '@angular/core';
import { CellRendererContext } from '@c8y/ngx-components';
import { ColumnUtilService } from './column-util.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@c8y/ngx-components';
import * as ɵngcc2 from './column-util.service';
export class SerialNumberCellRendererComponent {
    constructor(context, columnUtilService) {
        this.context = context;
        this.columnUtilService = columnUtilService;
    }
}
SerialNumberCellRendererComponent.ɵfac = function SerialNumberCellRendererComponent_Factory(t) { return new (t || SerialNumberCellRendererComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CellRendererContext), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ColumnUtilService)); };
SerialNumberCellRendererComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: SerialNumberCellRendererComponent, selectors: [["ng-component"]], decls: 1, vars: 1, template: function SerialNumberCellRendererComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtext(0);
    } if (rf & 2) {
        ɵngcc0.ɵɵtextInterpolate1(" ", ctx.columnUtilService.getSerialNumber(ctx.context.item), " ");
    } }, encapsulation: 2 });
SerialNumberCellRendererComponent.ctorParameters = () => [
    { type: CellRendererContext },
    { type: ColumnUtilService }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SerialNumberCellRendererComponent, [{
        type: Component,
        args: [{
                template: `
    {{ columnUtilService.getSerialNumber(context.item) }}
  `
            }]
    }], function () { return [{ type: ɵngcc1.CellRendererContext }, { type: ɵngcc2.ColumnUtilService }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VyaWFsLW51bWJlci5jZWxsLXJlbmRlcmVyLmNvbXBvbmVudC5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vZGV2aWNlLWdyaWQvY29sdW1ucy9zZXJpYWwtbnVtYmVyLmNlbGwtcmVuZGVyZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDMUMsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDMUQsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7Ozs7QUFPMUQsTUFBTSxPQUFPLGlDQUFpQztBQUM5QyxJQUFFLFlBQW1CLE9BQTRCLEVBQVMsaUJBQW9DO0FBQUksUUFBN0UsWUFBTyxHQUFQLE9BQU8sQ0FBcUI7QUFBQyxRQUFRLHNCQUFpQixHQUFqQixpQkFBaUIsQ0FBbUI7QUFBQyxJQUFFLENBQUM7QUFDbEc7NkRBUEMsU0FBUyxTQUFDLGtCQUNULFFBQVEsRUFBRSwrREFFVCxjQUNGOzs7Ozs2QkFDSTtBQUFDO0FBQ1UsWUFUUCxtQkFBbUI7QUFBSSxZQUN2QixpQkFBaUI7QUFBRzs7Ozs7Ozs7d0hBQUU7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ2VsbFJlbmRlcmVyQ29udGV4dCB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMnO1xuaW1wb3J0IHsgQ29sdW1uVXRpbFNlcnZpY2UgfSBmcm9tICcuL2NvbHVtbi11dGlsLnNlcnZpY2UnO1xuXG5AQ29tcG9uZW50KHtcbiAgdGVtcGxhdGU6IGBcbiAgICB7eyBjb2x1bW5VdGlsU2VydmljZS5nZXRTZXJpYWxOdW1iZXIoY29udGV4dC5pdGVtKSB9fVxuICBgXG59KVxuZXhwb3J0IGNsYXNzIFNlcmlhbE51bWJlckNlbGxSZW5kZXJlckNvbXBvbmVudCB7XG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBjb250ZXh0OiBDZWxsUmVuZGVyZXJDb250ZXh0LCBwdWJsaWMgY29sdW1uVXRpbFNlcnZpY2U6IENvbHVtblV0aWxTZXJ2aWNlKSB7fVxufVxuIl19