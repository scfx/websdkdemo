import { Injectable } from '@angular/core';
import { GroupFragment } from './group-fragment.model';
import * as i0 from "@angular/core";
export class DeviceGroupService {
    constructor() {
        this.icons = {
            brokerSourceInactive: {
                icon: 'c8y-group-remote-inactive'
            },
            brokerSource: {
                icon: 'c8y-group-remote',
                iconOpen: 'c8y-group-remote-open'
            },
            group: {
                icon: 'c8y-group',
                iconOpen: 'c8y-group-open'
            },
            dynamicGroup: {
                icon: 'c8y-group-smart',
                iconOpen: 'c8y-group-smart-open'
            },
            other: {
                icon: 'circle',
                iconClass: 'statusUnknown'
            }
        };
        this.dataBrokerSourceFragmentInactive = `_${GroupFragment.dataBrokerSourceFragment}`;
    }
    isGroup(mo) {
        return (!!mo[GroupFragment.groupFragmentType] ||
            mo.type === GroupFragment.groupType ||
            mo.type === GroupFragment.subGroupType);
    }
    isDynamicGroup(mo) {
        return !!mo[GroupFragment.dynamicGroupFragment] || mo.type === GroupFragment.dynamicGroupType;
    }
    isDataBroker(mo) {
        return (!!mo[GroupFragment.dataBrokerSourceFragment] || !!mo[this.dataBrokerSourceFragmentInactive]);
    }
    isDataBrokerActive(mo) {
        return (!!mo[GroupFragment.dataBrokerSourceFragment] && !mo[this.dataBrokerSourceFragmentInactive]);
    }
    isDevice(mo) {
        return !!mo.c8y_IsDevice;
    }
    icon(mo, open = false) {
        let type = 'other';
        if (this.isDynamicGroup(mo)) {
            type = 'dynamicGroup';
        }
        else if (this.isDataBrokerActive(mo)) {
            type = 'brokerSource';
        }
        else if (this.isDataBroker(mo)) {
            type = 'brokerSourceInactive';
        }
        else if (this.isGroup(mo)) {
            type = 'group';
        }
        const icon = this.icons[type];
        return (open && icon.iconOpen) || icon.icon;
    }
    isAnyGroup(mo) {
        return (this.isGroup(mo) ||
            this.isDynamicGroup(mo) ||
            this.isDataBroker(mo) ||
            this.isDataBrokerActive(mo));
    }
}
DeviceGroupService.ɵprov = i0.ɵɵdefineInjectable({ factory: function DeviceGroupService_Factory() { return new DeviceGroupService(); }, token: DeviceGroupService, providedIn: "root" });
DeviceGroupService.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root'
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JvdXAuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2Fzc2V0cy1uYXZpZ2F0b3IvZ3JvdXAuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQzs7QUFNdkQsTUFBTSxPQUFPLGtCQUFrQjtJQUgvQjtRQUlFLFVBQUssR0FBRztZQUNOLG9CQUFvQixFQUFFO2dCQUNwQixJQUFJLEVBQUUsMkJBQTJCO2FBQ2xDO1lBQ0QsWUFBWSxFQUFFO2dCQUNaLElBQUksRUFBRSxrQkFBa0I7Z0JBQ3hCLFFBQVEsRUFBRSx1QkFBdUI7YUFDbEM7WUFDRCxLQUFLLEVBQUU7Z0JBQ0wsSUFBSSxFQUFFLFdBQVc7Z0JBQ2pCLFFBQVEsRUFBRSxnQkFBZ0I7YUFDM0I7WUFDRCxZQUFZLEVBQUU7Z0JBQ1osSUFBSSxFQUFFLGlCQUFpQjtnQkFDdkIsUUFBUSxFQUFFLHNCQUFzQjthQUNqQztZQUNELEtBQUssRUFBRTtnQkFDTCxJQUFJLEVBQUUsUUFBUTtnQkFDZCxTQUFTLEVBQUUsZUFBZTthQUMzQjtTQUNGLENBQUM7UUFDRixxQ0FBZ0MsR0FBRyxJQUFJLGFBQWEsQ0FBQyx3QkFBd0IsRUFBRSxDQUFDO0tBcURqRjtJQW5EQyxPQUFPLENBQUMsRUFBRTtRQUNSLE9BQU8sQ0FDTCxDQUFDLENBQUMsRUFBRSxDQUFDLGFBQWEsQ0FBQyxpQkFBaUIsQ0FBQztZQUNyQyxFQUFFLENBQUMsSUFBSSxLQUFLLGFBQWEsQ0FBQyxTQUFTO1lBQ25DLEVBQUUsQ0FBQyxJQUFJLEtBQUssYUFBYSxDQUFDLFlBQVksQ0FDdkMsQ0FBQztJQUNKLENBQUM7SUFFRCxjQUFjLENBQUMsRUFBRTtRQUNmLE9BQU8sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxhQUFhLENBQUMsb0JBQW9CLENBQUMsSUFBSSxFQUFFLENBQUMsSUFBSSxLQUFLLGFBQWEsQ0FBQyxnQkFBZ0IsQ0FBQztJQUNoRyxDQUFDO0lBRUQsWUFBWSxDQUFDLEVBQUU7UUFDYixPQUFPLENBQ0wsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxhQUFhLENBQUMsd0JBQXdCLENBQUMsSUFBSSxDQUFDLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxnQ0FBZ0MsQ0FBQyxDQUM1RixDQUFDO0lBQ0osQ0FBQztJQUVELGtCQUFrQixDQUFDLEVBQUU7UUFDbkIsT0FBTyxDQUNMLENBQUMsQ0FBQyxFQUFFLENBQUMsYUFBYSxDQUFDLHdCQUF3QixDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLGdDQUFnQyxDQUFDLENBQzNGLENBQUM7SUFDSixDQUFDO0lBRUQsUUFBUSxDQUFDLEVBQUU7UUFDVCxPQUFPLENBQUMsQ0FBQyxFQUFFLENBQUMsWUFBWSxDQUFDO0lBQzNCLENBQUM7SUFFRCxJQUFJLENBQUMsRUFBRSxFQUFFLElBQUksR0FBRyxLQUFLO1FBQ25CLElBQUksSUFBSSxHQUFHLE9BQU8sQ0FBQztRQUNuQixJQUFJLElBQUksQ0FBQyxjQUFjLENBQUMsRUFBRSxDQUFDLEVBQUU7WUFDM0IsSUFBSSxHQUFHLGNBQWMsQ0FBQztTQUN2QjthQUFNLElBQUksSUFBSSxDQUFDLGtCQUFrQixDQUFDLEVBQUUsQ0FBQyxFQUFFO1lBQ3RDLElBQUksR0FBRyxjQUFjLENBQUM7U0FDdkI7YUFBTSxJQUFJLElBQUksQ0FBQyxZQUFZLENBQUMsRUFBRSxDQUFDLEVBQUU7WUFDaEMsSUFBSSxHQUFHLHNCQUFzQixDQUFDO1NBQy9CO2FBQU0sSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyxFQUFFO1lBQzNCLElBQUksR0FBRyxPQUFPLENBQUM7U0FDaEI7UUFDRCxNQUFNLElBQUksR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzlCLE9BQU8sQ0FBQyxJQUFJLElBQUksSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUM7SUFDOUMsQ0FBQztJQUVELFVBQVUsQ0FBQyxFQUFrQjtRQUMzQixPQUFPLENBQ0wsSUFBSSxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUM7WUFDaEIsSUFBSSxDQUFDLGNBQWMsQ0FBQyxFQUFFLENBQUM7WUFDdkIsSUFBSSxDQUFDLFlBQVksQ0FBQyxFQUFFLENBQUM7WUFDckIsSUFBSSxDQUFDLGtCQUFrQixDQUFDLEVBQUUsQ0FBQyxDQUM1QixDQUFDO0lBQ0osQ0FBQzs7OztZQTdFRixVQUFVLFNBQUM7Z0JBQ1YsVUFBVSxFQUFFLE1BQU07YUFDbkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBHcm91cEZyYWdtZW50IH0gZnJvbSAnLi9ncm91cC1mcmFnbWVudC5tb2RlbCc7XG5pbXBvcnQgeyBJTWFuYWdlZE9iamVjdCB9IGZyb20gJ0BjOHkvY2xpZW50JztcblxuQEluamVjdGFibGUoe1xuICBwcm92aWRlZEluOiAncm9vdCdcbn0pXG5leHBvcnQgY2xhc3MgRGV2aWNlR3JvdXBTZXJ2aWNlIHtcbiAgaWNvbnMgPSB7XG4gICAgYnJva2VyU291cmNlSW5hY3RpdmU6IHtcbiAgICAgIGljb246ICdjOHktZ3JvdXAtcmVtb3RlLWluYWN0aXZlJ1xuICAgIH0sXG4gICAgYnJva2VyU291cmNlOiB7XG4gICAgICBpY29uOiAnYzh5LWdyb3VwLXJlbW90ZScsXG4gICAgICBpY29uT3BlbjogJ2M4eS1ncm91cC1yZW1vdGUtb3BlbidcbiAgICB9LFxuICAgIGdyb3VwOiB7XG4gICAgICBpY29uOiAnYzh5LWdyb3VwJyxcbiAgICAgIGljb25PcGVuOiAnYzh5LWdyb3VwLW9wZW4nXG4gICAgfSxcbiAgICBkeW5hbWljR3JvdXA6IHtcbiAgICAgIGljb246ICdjOHktZ3JvdXAtc21hcnQnLFxuICAgICAgaWNvbk9wZW46ICdjOHktZ3JvdXAtc21hcnQtb3BlbidcbiAgICB9LFxuICAgIG90aGVyOiB7XG4gICAgICBpY29uOiAnY2lyY2xlJyxcbiAgICAgIGljb25DbGFzczogJ3N0YXR1c1Vua25vd24nXG4gICAgfVxuICB9O1xuICBkYXRhQnJva2VyU291cmNlRnJhZ21lbnRJbmFjdGl2ZSA9IGBfJHtHcm91cEZyYWdtZW50LmRhdGFCcm9rZXJTb3VyY2VGcmFnbWVudH1gO1xuXG4gIGlzR3JvdXAobW8pIHtcbiAgICByZXR1cm4gKFxuICAgICAgISFtb1tHcm91cEZyYWdtZW50Lmdyb3VwRnJhZ21lbnRUeXBlXSB8fFxuICAgICAgbW8udHlwZSA9PT0gR3JvdXBGcmFnbWVudC5ncm91cFR5cGUgfHxcbiAgICAgIG1vLnR5cGUgPT09IEdyb3VwRnJhZ21lbnQuc3ViR3JvdXBUeXBlXG4gICAgKTtcbiAgfVxuXG4gIGlzRHluYW1pY0dyb3VwKG1vKSB7XG4gICAgcmV0dXJuICEhbW9bR3JvdXBGcmFnbWVudC5keW5hbWljR3JvdXBGcmFnbWVudF0gfHwgbW8udHlwZSA9PT0gR3JvdXBGcmFnbWVudC5keW5hbWljR3JvdXBUeXBlO1xuICB9XG5cbiAgaXNEYXRhQnJva2VyKG1vKSB7XG4gICAgcmV0dXJuIChcbiAgICAgICEhbW9bR3JvdXBGcmFnbWVudC5kYXRhQnJva2VyU291cmNlRnJhZ21lbnRdIHx8ICEhbW9bdGhpcy5kYXRhQnJva2VyU291cmNlRnJhZ21lbnRJbmFjdGl2ZV1cbiAgICApO1xuICB9XG5cbiAgaXNEYXRhQnJva2VyQWN0aXZlKG1vKSB7XG4gICAgcmV0dXJuIChcbiAgICAgICEhbW9bR3JvdXBGcmFnbWVudC5kYXRhQnJva2VyU291cmNlRnJhZ21lbnRdICYmICFtb1t0aGlzLmRhdGFCcm9rZXJTb3VyY2VGcmFnbWVudEluYWN0aXZlXVxuICAgICk7XG4gIH1cblxuICBpc0RldmljZShtbykge1xuICAgIHJldHVybiAhIW1vLmM4eV9Jc0RldmljZTtcbiAgfVxuXG4gIGljb24obW8sIG9wZW4gPSBmYWxzZSkge1xuICAgIGxldCB0eXBlID0gJ290aGVyJztcbiAgICBpZiAodGhpcy5pc0R5bmFtaWNHcm91cChtbykpIHtcbiAgICAgIHR5cGUgPSAnZHluYW1pY0dyb3VwJztcbiAgICB9IGVsc2UgaWYgKHRoaXMuaXNEYXRhQnJva2VyQWN0aXZlKG1vKSkge1xuICAgICAgdHlwZSA9ICdicm9rZXJTb3VyY2UnO1xuICAgIH0gZWxzZSBpZiAodGhpcy5pc0RhdGFCcm9rZXIobW8pKSB7XG4gICAgICB0eXBlID0gJ2Jyb2tlclNvdXJjZUluYWN0aXZlJztcbiAgICB9IGVsc2UgaWYgKHRoaXMuaXNHcm91cChtbykpIHtcbiAgICAgIHR5cGUgPSAnZ3JvdXAnO1xuICAgIH1cbiAgICBjb25zdCBpY29uID0gdGhpcy5pY29uc1t0eXBlXTtcbiAgICByZXR1cm4gKG9wZW4gJiYgaWNvbi5pY29uT3BlbikgfHwgaWNvbi5pY29uO1xuICB9XG5cbiAgaXNBbnlHcm91cChtbzogSU1hbmFnZWRPYmplY3QpIHtcbiAgICByZXR1cm4gKFxuICAgICAgdGhpcy5pc0dyb3VwKG1vKSB8fFxuICAgICAgdGhpcy5pc0R5bmFtaWNHcm91cChtbykgfHxcbiAgICAgIHRoaXMuaXNEYXRhQnJva2VyKG1vKSB8fFxuICAgICAgdGhpcy5pc0RhdGFCcm9rZXJBY3RpdmUobW8pXG4gICAgKTtcbiAgfVxufVxuIl19