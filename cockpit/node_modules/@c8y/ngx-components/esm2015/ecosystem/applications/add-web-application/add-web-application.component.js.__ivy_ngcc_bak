import { __awaiter } from "tslib";
import { Component } from '@angular/core';
import { ApplicationType } from '@c8y/client';
import { gettext } from '@c8y/ngx-components';
import { EcosystemService } from '../../ecosystem.service';
export class AddWebApplicationComponent {
    constructor(ecosystemService) {
        this.ecosystemService = ecosystemService;
        this.headerText = gettext('Upload web application');
        this.successText = gettext('Application created');
        this.createApplicationHandler = (f) => this.createApplication(f);
        this.uploadApplicationHandler = (f, app) => this.uploadApplication(f, app);
    }
    createApplication(file) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.ecosystemService.isValidAppType(file, ApplicationType.HOSTED);
            return this.ecosystemService.createAppForArchive(file);
        });
    }
    uploadApplication(file, app) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.ecosystemService.uploadArchiveToApp(file, app);
        });
    }
}
AddWebApplicationComponent.decorators = [
    { type: Component, args: [{
                selector: 'c8y-add-web-application',
                template: `<c8y-add-application
    [headerText]="headerText"
    [headerIcon]="'upload'"
    [successText]="successText"
    [createApplicationHandler]="createApplicationHandler"
    [uploadApplicationHandler]="uploadApplicationHandler"
    [canGoBack]="true"
  ></c8y-add-application>`
            },] }
];
AddWebApplicationComponent.ctorParameters = () => [
    { type: EcosystemService }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWRkLXdlYi1hcHBsaWNhdGlvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9lY29zeXN0ZW0vYXBwbGljYXRpb25zL2FkZC13ZWItYXBwbGljYXRpb24vYWRkLXdlYi1hcHBsaWNhdGlvbi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDMUMsT0FBTyxFQUFFLGVBQWUsRUFBZ0IsTUFBTSxhQUFhLENBQUM7QUFDNUQsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQzlDLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBYTNELE1BQU0sT0FBTywwQkFBMEI7SUFJckMsWUFBb0IsZ0JBQWtDO1FBQWxDLHFCQUFnQixHQUFoQixnQkFBZ0IsQ0FBa0I7UUFIdEQsZUFBVSxHQUFXLE9BQU8sQ0FBQyx3QkFBd0IsQ0FBQyxDQUFDO1FBQ3ZELGdCQUFXLEdBQVcsT0FBTyxDQUFDLHFCQUFxQixDQUFDLENBQUM7UUFJckQsNkJBQXdCLEdBQUcsQ0FBQyxDQUFPLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNsRSw2QkFBd0IsR0FBRyxDQUFDLENBQU8sRUFBRSxHQUFpQixFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsaUJBQWlCLENBQUMsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxDQUFDO0lBSGpDLENBQUM7SUFLcEQsaUJBQWlCLENBQUMsSUFBVTs7WUFDaEMsTUFBTSxJQUFJLENBQUMsZ0JBQWdCLENBQUMsY0FBYyxDQUFDLElBQUksRUFBRSxlQUFlLENBQUMsTUFBTSxDQUFDLENBQUM7WUFDekUsT0FBTyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsbUJBQW1CLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDekQsQ0FBQztLQUFBO0lBRUssaUJBQWlCLENBQUMsSUFBVSxFQUFFLEdBQWlCOztZQUNuRCxPQUFPLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLEVBQUUsR0FBRyxDQUFDLENBQUM7UUFDN0QsQ0FBQztLQUFBOzs7WUEzQkYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSx5QkFBeUI7Z0JBQ25DLFFBQVEsRUFBRTs7Ozs7OzswQkFPYzthQUN6Qjs7O1lBWlEsZ0JBQWdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBBcHBsaWNhdGlvblR5cGUsIElBcHBsaWNhdGlvbiB9IGZyb20gJ0BjOHkvY2xpZW50JztcbmltcG9ydCB7IGdldHRleHQgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzJztcbmltcG9ydCB7IEVjb3N5c3RlbVNlcnZpY2UgfSBmcm9tICcuLi8uLi9lY29zeXN0ZW0uc2VydmljZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2M4eS1hZGQtd2ViLWFwcGxpY2F0aW9uJyxcbiAgdGVtcGxhdGU6IGA8Yzh5LWFkZC1hcHBsaWNhdGlvblxuICAgIFtoZWFkZXJUZXh0XT1cImhlYWRlclRleHRcIlxuICAgIFtoZWFkZXJJY29uXT1cIid1cGxvYWQnXCJcbiAgICBbc3VjY2Vzc1RleHRdPVwic3VjY2Vzc1RleHRcIlxuICAgIFtjcmVhdGVBcHBsaWNhdGlvbkhhbmRsZXJdPVwiY3JlYXRlQXBwbGljYXRpb25IYW5kbGVyXCJcbiAgICBbdXBsb2FkQXBwbGljYXRpb25IYW5kbGVyXT1cInVwbG9hZEFwcGxpY2F0aW9uSGFuZGxlclwiXG4gICAgW2NhbkdvQmFja109XCJ0cnVlXCJcbiAgPjwvYzh5LWFkZC1hcHBsaWNhdGlvbj5gXG59KVxuZXhwb3J0IGNsYXNzIEFkZFdlYkFwcGxpY2F0aW9uQ29tcG9uZW50IHtcbiAgaGVhZGVyVGV4dDogc3RyaW5nID0gZ2V0dGV4dCgnVXBsb2FkIHdlYiBhcHBsaWNhdGlvbicpO1xuICBzdWNjZXNzVGV4dDogc3RyaW5nID0gZ2V0dGV4dCgnQXBwbGljYXRpb24gY3JlYXRlZCcpO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgZWNvc3lzdGVtU2VydmljZTogRWNvc3lzdGVtU2VydmljZSkge31cblxuICBjcmVhdGVBcHBsaWNhdGlvbkhhbmRsZXIgPSAoZjogRmlsZSkgPT4gdGhpcy5jcmVhdGVBcHBsaWNhdGlvbihmKTtcbiAgdXBsb2FkQXBwbGljYXRpb25IYW5kbGVyID0gKGY6IEZpbGUsIGFwcDogSUFwcGxpY2F0aW9uKSA9PiB0aGlzLnVwbG9hZEFwcGxpY2F0aW9uKGYsIGFwcCk7XG5cbiAgYXN5bmMgY3JlYXRlQXBwbGljYXRpb24oZmlsZTogRmlsZSk6IFByb21pc2U8SUFwcGxpY2F0aW9uPiB7XG4gICAgYXdhaXQgdGhpcy5lY29zeXN0ZW1TZXJ2aWNlLmlzVmFsaWRBcHBUeXBlKGZpbGUsIEFwcGxpY2F0aW9uVHlwZS5IT1NURUQpO1xuICAgIHJldHVybiB0aGlzLmVjb3N5c3RlbVNlcnZpY2UuY3JlYXRlQXBwRm9yQXJjaGl2ZShmaWxlKTtcbiAgfVxuXG4gIGFzeW5jIHVwbG9hZEFwcGxpY2F0aW9uKGZpbGU6IEZpbGUsIGFwcDogSUFwcGxpY2F0aW9uKTogUHJvbWlzZTxJQXBwbGljYXRpb24+IHtcbiAgICByZXR1cm4gdGhpcy5lY29zeXN0ZW1TZXJ2aWNlLnVwbG9hZEFyY2hpdmVUb0FwcChmaWxlLCBhcHApO1xuICB9XG59XG4iXX0=