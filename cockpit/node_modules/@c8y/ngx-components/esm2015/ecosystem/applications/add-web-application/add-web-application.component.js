import { __awaiter } from "tslib";
import { Component } from '@angular/core';
import { ApplicationType } from '@c8y/client';
import { gettext } from '@c8y/ngx-components';
import { EcosystemService } from '../../ecosystem.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../../ecosystem.service';
import * as ɵngcc2 from '../../shared/add-application.component';
export class AddWebApplicationComponent {
    constructor(ecosystemService) {
        this.ecosystemService = ecosystemService;
        this.headerText = gettext('Upload web application');
        this.successText = gettext('Application created');
        this.createApplicationHandler = (f) => this.createApplication(f);
        this.uploadApplicationHandler = (f, app) => this.uploadApplication(f, app);
    }
    createApplication(file) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.ecosystemService.isValidAppType(file, ApplicationType.HOSTED);
            return this.ecosystemService.createAppForArchive(file);
        });
    }
    uploadApplication(file, app) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.ecosystemService.uploadArchiveToApp(file, app);
        });
    }
}
AddWebApplicationComponent.ɵfac = function AddWebApplicationComponent_Factory(t) { return new (t || AddWebApplicationComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.EcosystemService)); };
AddWebApplicationComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: AddWebApplicationComponent, selectors: [["c8y-add-web-application"]], decls: 1, vars: 6, consts: [[3, "headerText", "headerIcon", "successText", "createApplicationHandler", "uploadApplicationHandler", "canGoBack"]], template: function AddWebApplicationComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelement(0, "c8y-add-application", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("headerText", ctx.headerText)("headerIcon", "upload")("successText", ctx.successText)("createApplicationHandler", ctx.createApplicationHandler)("uploadApplicationHandler", ctx.uploadApplicationHandler)("canGoBack", true);
    } }, directives: [ɵngcc2.AddApplicationComponent], encapsulation: 2 });
AddWebApplicationComponent.ctorParameters = () => [
    { type: EcosystemService }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AddWebApplicationComponent, [{
        type: Component,
        args: [{
                selector: 'c8y-add-web-application',
                template: `<c8y-add-application
    [headerText]="headerText"
    [headerIcon]="'upload'"
    [successText]="successText"
    [createApplicationHandler]="createApplicationHandler"
    [uploadApplicationHandler]="uploadApplicationHandler"
    [canGoBack]="true"
  ></c8y-add-application>`
            }]
    }], function () { return [{ type: ɵngcc1.EcosystemService }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWRkLXdlYi1hcHBsaWNhdGlvbi5jb21wb25lbnQuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL2Vjb3N5c3RlbS9hcHBsaWNhdGlvbnMvYWRkLXdlYi1hcHBsaWNhdGlvbi9hZGQtd2ViLWFwcGxpY2F0aW9uLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMxQyxPQUFPLEVBQUUsZUFBZSxFQUFnQixNQUFNLGFBQWEsQ0FBQztBQUM1RCxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDOUMsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0seUJBQXlCLENBQUM7Ozs7QUFhM0QsTUFBTSxPQUFPLDBCQUEwQjtBQUN2QyxJQUdFLFlBQW9CLGdCQUFrQztBQUFJLFFBQXRDLHFCQUFnQixHQUFoQixnQkFBZ0IsQ0FBa0I7QUFBQyxRQUh2RCxlQUFVLEdBQVcsT0FBTyxDQUFDLHdCQUF3QixDQUFDLENBQUM7QUFDekQsUUFBRSxnQkFBVyxHQUFXLE9BQU8sQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDO0FBQ3ZELFFBR0UsNkJBQXdCLEdBQUcsQ0FBQyxDQUFPLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNwRSxRQUFFLDZCQUF3QixHQUFHLENBQUMsQ0FBTyxFQUFFLEdBQWlCLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUM7QUFDNUYsSUFKMkQsQ0FBQztBQUM1RCxJQUlRLGlCQUFpQixDQUFDLElBQVU7QUFBSTtBQUNELFlBQW5DLE1BQU0sSUFBSSxDQUFDLGdCQUFnQixDQUFDLGNBQWMsQ0FBQyxJQUFJLEVBQUUsZUFBZSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0FBQzdFLFlBQUksT0FBTyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsbUJBQW1CLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDM0QsUUFBRSxDQUFDO0FBRUYsS0FGRTtBQUNILElBQ1EsaUJBQWlCLENBQUMsSUFBVSxFQUFFLEdBQWlCO0FBQUk7QUFDcEIsWUFBbkMsT0FBTyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsa0JBQWtCLENBQUMsSUFBSSxFQUFFLEdBQUcsQ0FBQyxDQUFDO0FBQy9ELFFBQUUsQ0FBQztBQUVILEtBRkc7QUFDSDtzREE1QkMsU0FBUyxTQUFDLGtCQUNULFFBQVEsRUFBRSx5QkFBeUIsa0JBQ25DLFFBQVEsRUFBRTt1UEFPYyxjQUN6Qjs7OzsyRUFDSTtBQUFDO0FBQ1UsWUFkUCxnQkFBZ0I7QUFBRzs7Ozs7Ozs7Ozs7Ozs7aUZBQUU7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQXBwbGljYXRpb25UeXBlLCBJQXBwbGljYXRpb24gfSBmcm9tICdAYzh5L2NsaWVudCc7XG5pbXBvcnQgeyBnZXR0ZXh0IH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cyc7XG5pbXBvcnQgeyBFY29zeXN0ZW1TZXJ2aWNlIH0gZnJvbSAnLi4vLi4vZWNvc3lzdGVtLnNlcnZpY2UnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjOHktYWRkLXdlYi1hcHBsaWNhdGlvbicsXG4gIHRlbXBsYXRlOiBgPGM4eS1hZGQtYXBwbGljYXRpb25cbiAgICBbaGVhZGVyVGV4dF09XCJoZWFkZXJUZXh0XCJcbiAgICBbaGVhZGVySWNvbl09XCIndXBsb2FkJ1wiXG4gICAgW3N1Y2Nlc3NUZXh0XT1cInN1Y2Nlc3NUZXh0XCJcbiAgICBbY3JlYXRlQXBwbGljYXRpb25IYW5kbGVyXT1cImNyZWF0ZUFwcGxpY2F0aW9uSGFuZGxlclwiXG4gICAgW3VwbG9hZEFwcGxpY2F0aW9uSGFuZGxlcl09XCJ1cGxvYWRBcHBsaWNhdGlvbkhhbmRsZXJcIlxuICAgIFtjYW5Hb0JhY2tdPVwidHJ1ZVwiXG4gID48L2M4eS1hZGQtYXBwbGljYXRpb24+YFxufSlcbmV4cG9ydCBjbGFzcyBBZGRXZWJBcHBsaWNhdGlvbkNvbXBvbmVudCB7XG4gIGhlYWRlclRleHQ6IHN0cmluZyA9IGdldHRleHQoJ1VwbG9hZCB3ZWIgYXBwbGljYXRpb24nKTtcbiAgc3VjY2Vzc1RleHQ6IHN0cmluZyA9IGdldHRleHQoJ0FwcGxpY2F0aW9uIGNyZWF0ZWQnKTtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGVjb3N5c3RlbVNlcnZpY2U6IEVjb3N5c3RlbVNlcnZpY2UpIHt9XG5cbiAgY3JlYXRlQXBwbGljYXRpb25IYW5kbGVyID0gKGY6IEZpbGUpID0+IHRoaXMuY3JlYXRlQXBwbGljYXRpb24oZik7XG4gIHVwbG9hZEFwcGxpY2F0aW9uSGFuZGxlciA9IChmOiBGaWxlLCBhcHA6IElBcHBsaWNhdGlvbikgPT4gdGhpcy51cGxvYWRBcHBsaWNhdGlvbihmLCBhcHApO1xuXG4gIGFzeW5jIGNyZWF0ZUFwcGxpY2F0aW9uKGZpbGU6IEZpbGUpOiBQcm9taXNlPElBcHBsaWNhdGlvbj4ge1xuICAgIGF3YWl0IHRoaXMuZWNvc3lzdGVtU2VydmljZS5pc1ZhbGlkQXBwVHlwZShmaWxlLCBBcHBsaWNhdGlvblR5cGUuSE9TVEVEKTtcbiAgICByZXR1cm4gdGhpcy5lY29zeXN0ZW1TZXJ2aWNlLmNyZWF0ZUFwcEZvckFyY2hpdmUoZmlsZSk7XG4gIH1cblxuICBhc3luYyB1cGxvYWRBcHBsaWNhdGlvbihmaWxlOiBGaWxlLCBhcHA6IElBcHBsaWNhdGlvbik6IFByb21pc2U8SUFwcGxpY2F0aW9uPiB7XG4gICAgcmV0dXJuIHRoaXMuZWNvc3lzdGVtU2VydmljZS51cGxvYWRBcmNoaXZlVG9BcHAoZmlsZSwgYXBwKTtcbiAgfVxufVxuIl19