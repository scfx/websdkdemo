import { Component } from '@angular/core';
import { WizardService } from '@c8y/ngx-components';
import { BehaviorSubject } from 'rxjs';
import { shareReplay, switchMap, tap } from 'rxjs/operators';
import { EcosystemService } from '../ecosystem.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../ecosystem.service';
import * as ɵngcc2 from '@c8y/ngx-components';
import * as ɵngcc3 from '@angular/common';
import * as ɵngcc4 from '../shared/application-card.component';

function MicroserviceListComponent_c8y_action_bar_item_8_Template(rf, ctx) { if (rf & 1) {
    const _r5 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "c8y-action-bar-item", 12);
    ɵngcc0.ɵɵelementStart(1, "button", 4);
    ɵngcc0.ɵɵlistener("click", function MicroserviceListComponent_c8y_action_bar_item_8_Template_button_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4.addMicroservice(); });
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelement(3, "i", 13);
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵpipe(5, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵproperty("placement", "right")("priority", 100);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(2, 4, "Add microservice"));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(5, 6, "Add microservice"), " ");
} }
function MicroserviceListComponent_div_19_Template(rf, ctx) { if (rf & 1) {
    const _r7 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 14);
    ɵngcc0.ɵɵelement(1, "h1", 15);
    ɵngcc0.ɵɵelementStart(2, "h3", 16);
    ɵngcc0.ɵɵtext(3, "No microservices to display.");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(4, "p", 16);
    ɵngcc0.ɵɵtext(5, "Add your first microservice by clicking below.");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(6, "p");
    ɵngcc0.ɵɵelementStart(7, "button", 17);
    ɵngcc0.ɵɵlistener("click", function MicroserviceListComponent_div_19_Template_button_click_7_listener() { ɵngcc0.ɵɵrestoreView(_r7); const ctx_r6 = ɵngcc0.ɵɵnextContext(); return ctx_r6.addMicroservice(); });
    ɵngcc0.ɵɵpipe(8, "translate");
    ɵngcc0.ɵɵtext(9);
    ɵngcc0.ɵɵpipe(10, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(7);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(8, 2, "Add microservice"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(10, 4, "Add microservice"), " ");
} }
function MicroserviceListComponent_div_22_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 18);
    ɵngcc0.ɵɵelementStart(1, "div", 19);
    ɵngcc0.ɵɵelement(2, "div", 20);
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵpipe(4, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(5, "div", 21);
    ɵngcc0.ɵɵelementStart(6, "div", 22);
    ɵngcc0.ɵɵtext(7);
    ɵngcc0.ɵɵpipe(8, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(9, "div", 23);
    ɵngcc0.ɵɵtext(10);
    ɵngcc0.ɵɵpipe(11, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(12, "div", 23);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(4, 3, "Microservice"), " ");
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(8, 5, "Description"));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(11, 7, "Type"));
} }
function MicroserviceListComponent_div_24_Template(rf, ctx) { if (rf & 1) {
    const _r10 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 24);
    ɵngcc0.ɵɵelementStart(1, "c8y-application-card", 25);
    ɵngcc0.ɵɵlistener("onAppDeleted", function MicroserviceListComponent_div_24_Template_c8y_application_card_onAppDeleted_1_listener() { ɵngcc0.ɵɵrestoreView(_r10); const ctx_r9 = ɵngcc0.ɵɵnextContext(); return ctx_r9.loadMicroservices(); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const microservice_r8 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("app", microservice_r8);
} }
const _c0 = function (a0) { return { "icon-spin": a0 }; };
export class MicroserviceListComponent {
    constructor(ecosystemService, wizardService) {
        this.ecosystemService = ecosystemService;
        this.wizardService = wizardService;
        this.reloading = false;
        this.reload$ = new BehaviorSubject(null);
        this.microservices$ = this.reload$.pipe(tap(() => (this.reloading = true)), switchMap(() => this.ecosystemService.getMicroservices()), tap(() => (this.reloading = false)), shareReplay());
        this.isMicroserviceHostingAllowed$ = this.reload$.pipe(switchMap(() => this.ecosystemService.isMicroserviceHostingAllowed()), shareReplay());
    }
    ngOnInit() {
        this.loadMicroservices();
    }
    loadMicroservices() {
        this.reload$.next();
    }
    addMicroservice() {
        const initialState = {
            id: 'uploadMicroservice'
        };
        const modalOptions = { initialState };
        const modalRef = this.wizardService.show(modalOptions);
        modalRef.content.onClose.subscribe(() => {
            this.loadMicroservices();
        });
    }
}
MicroserviceListComponent.ɵfac = function MicroserviceListComponent_Factory(t) { return new (t || MicroserviceListComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.EcosystemService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.WizardService)); };
MicroserviceListComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MicroserviceListComponent, selectors: [["c8y-microservice-list"]], decls: 26, vars: 39, consts: [[3, "icon", "label"], [3, "icon", "label", "path"], [3, "placement", "priority", 4, "ngIf"], [3, "placement"], [1, "btn", "btn-link", 3, "title", "click"], ["c8yIcon", "refresh", 3, "ngClass"], ["itemClass", "navbar-form hidden-xs", 3, "placement"], [3, "listLength", "onListClassChange"], ["class", "c8y-empty-state text-center", 4, "ngIf"], [1, "card-group", 3, "ngClass"], ["class", "page-sticky-header hidden-xs flex-row", 4, "ngIf"], ["class", "col-xs-12 col-sm-4 col-md-3", 4, "ngFor", "ngForOf"], [3, "placement", "priority"], ["c8yIcon", "plus-circle"], [1, "c8y-empty-state", "text-center"], [1, "c8y-icon", "c8y-icon-modules", "c8y-icon-duocolor"], ["translate", ""], [1, "btn", "btn-primary", 3, "title", "click"], [1, "page-sticky-header", "hidden-xs", "flex-row"], [1, "card-block", "card-column-40"], [1, "card-appicon", "p-l-32", "p-r-16", "m-r-0", "m-l-4"], [1, "card-block", "p-0", "card-column-80"], [1, "card-block", "card-column-80"], [1, "card-block", "card-column-20"], [1, "col-xs-12", "col-sm-4", "col-md-3"], [1, "d-contents", 3, "app", "onAppDeleted"]], template: function MicroserviceListComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "c8y-title");
        ɵngcc0.ɵɵtext(1);
        ɵngcc0.ɵɵpipe(2, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(3, "c8y-breadcrumb");
        ɵngcc0.ɵɵelement(4, "c8y-breadcrumb-item", 0);
        ɵngcc0.ɵɵpipe(5, "translate");
        ɵngcc0.ɵɵelement(6, "c8y-breadcrumb-item", 1);
        ɵngcc0.ɵɵpipe(7, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(8, MicroserviceListComponent_c8y_action_bar_item_8_Template, 6, 8, "c8y-action-bar-item", 2);
        ɵngcc0.ɵɵpipe(9, "async");
        ɵngcc0.ɵɵelementStart(10, "c8y-action-bar-item", 3);
        ɵngcc0.ɵɵelementStart(11, "button", 4);
        ɵngcc0.ɵɵlistener("click", function MicroserviceListComponent_Template_button_click_11_listener() { return ctx.reload$.next(); });
        ɵngcc0.ɵɵpipe(12, "translate");
        ɵngcc0.ɵɵelement(13, "i", 5);
        ɵngcc0.ɵɵtext(14);
        ɵngcc0.ɵɵpipe(15, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(16, "c8y-action-bar-item", 6);
        ɵngcc0.ɵɵelementStart(17, "c8y-list-display-switch", 7);
        ɵngcc0.ɵɵlistener("onListClassChange", function MicroserviceListComponent_Template_c8y_list_display_switch_onListClassChange_17_listener($event) { return ctx.listClass = $event; });
        ɵngcc0.ɵɵpipe(18, "async");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(19, MicroserviceListComponent_div_19_Template, 11, 6, "div", 8);
        ɵngcc0.ɵɵpipe(20, "async");
        ɵngcc0.ɵɵelementStart(21, "div", 9);
        ɵngcc0.ɵɵtemplate(22, MicroserviceListComponent_div_22_Template, 13, 9, "div", 10);
        ɵngcc0.ɵɵpipe(23, "async");
        ɵngcc0.ɵɵtemplate(24, MicroserviceListComponent_div_24_Template, 2, 1, "div", 11);
        ɵngcc0.ɵɵpipe(25, "async");
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        let tmp_12_0;
        let tmp_13_0;
        let tmp_15_0;
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(2, 17, "Microservices"));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("icon", "c8y-atom")("label", ɵngcc0.ɵɵpipeBind1(5, 19, "Ecosystem"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("icon", "microchip")("label", ɵngcc0.ɵɵpipeBind1(7, 21, "Microservices"))("path", "microservices");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind1(9, 23, ctx.isMicroserviceHostingAllowed$));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("placement", "right");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(12, 25, "Reload"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(37, _c0, ctx.reloading));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(15, 27, "Reload"), " ");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("placement", "left");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("listLength", (tmp_12_0 = ɵngcc0.ɵɵpipeBind1(18, 29, ctx.microservices$)) == null ? null : tmp_12_0.length);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ((tmp_13_0 = ɵngcc0.ɵɵpipeBind1(20, 31, ctx.microservices$)) == null ? null : tmp_13_0.length) === 0);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngClass", ctx.listClass);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ((tmp_15_0 = ɵngcc0.ɵɵpipeBind1(23, 33, ctx.microservices$)) == null ? null : tmp_15_0.length) > 0);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngForOf", ɵngcc0.ɵɵpipeBind1(25, 35, ctx.microservices$));
    } }, directives: [ɵngcc2.TitleComponent, ɵngcc2.BreadcrumbComponent, ɵngcc2.BreadcrumbItemComponent, ɵngcc3.NgIf, ɵngcc2.ActionBarItemComponent, ɵngcc2.IconDirective, ɵngcc3.NgClass, ɵngcc2.ɵbh, ɵngcc3.NgForOf, ɵngcc2.C8yTranslateDirective, ɵngcc4.ApplicationCardComponent], pipes: [ɵngcc2.C8yTranslatePipe, ɵngcc3.AsyncPipe], encapsulation: 2 });
MicroserviceListComponent.ctorParameters = () => [
    { type: EcosystemService },
    { type: WizardService }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MicroserviceListComponent, [{
        type: Component,
        args: [{
                selector: 'c8y-microservice-list',
                template: "<c8y-title>{{ 'Microservices' | translate }}</c8y-title>\n\n<c8y-breadcrumb>\n  <c8y-breadcrumb-item [icon]=\"'c8y-atom'\" [label]=\"'Ecosystem' | translate\"></c8y-breadcrumb-item>\n  <c8y-breadcrumb-item\n    [icon]=\"'microchip'\"\n    [label]=\"'Microservices' | translate\"\n    [path]=\"'microservices'\"\n  ></c8y-breadcrumb-item>\n</c8y-breadcrumb>\n\n<c8y-action-bar-item\n  [placement]=\"'right'\"\n  [priority]=\"100\"\n  *ngIf=\"isMicroserviceHostingAllowed$ | async\"\n>\n  <button\n    (click)=\"addMicroservice()\"\n    class=\"btn btn-link\"\n    title=\"{{ 'Add microservice' | translate }}\"\n  >\n    <i c8yIcon=\"plus-circle\"></i>\n    {{ 'Add microservice' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<c8y-action-bar-item [placement]=\"'right'\">\n  <button (click)=\"reload$.next()\" class=\"btn btn-link\" title=\"{{ 'Reload' | translate }}\">\n    <i [ngClass]=\"{ 'icon-spin': reloading }\" c8yIcon=\"refresh\"></i>\n    {{ 'Reload' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<c8y-action-bar-item [placement]=\"'left'\" itemClass=\"navbar-form hidden-xs\">\n  <c8y-list-display-switch\n    (onListClassChange)=\"listClass = $event\"\n    [listLength]=\"(microservices$ | async)?.length\"\n  ></c8y-list-display-switch>\n</c8y-action-bar-item>\n\n<div *ngIf=\"(microservices$ | async)?.length === 0\" class=\"c8y-empty-state text-center\">\n  <h1 class=\"c8y-icon c8y-icon-modules c8y-icon-duocolor\"></h1>\n  <h3 translate>No microservices to display.</h3>\n  <p translate>Add your first microservice by clicking below.</p>\n  <p>\n    <button\n      (click)=\"addMicroservice()\"\n      class=\"btn btn-primary\"\n      title=\"{{ 'Add microservice' | translate }}\"\n    >\n      {{ 'Add microservice' | translate }}\n    </button>\n  </p>\n</div>\n\n<div [ngClass]=\"listClass\" class=\"card-group\">\n  <div\n    class=\"page-sticky-header hidden-xs flex-row\"\n    *ngIf=\"(microservices$ | async)?.length > 0\"\n  >\n    <div class=\"card-block card-column-40\">\n      <div class=\"card-appicon p-l-32 p-r-16 m-r-0 m-l-4\"></div>\n      {{ 'Microservice' | translate }}\n    </div>\n    <div class=\"card-block p-0 card-column-80\">\n      <div class=\"card-block card-column-80\">{{ 'Description' | translate }}</div>\n      <div class=\"card-block card-column-20\">{{ 'Type' | translate }}</div>\n      <div class=\"card-block card-column-20\"></div>\n    </div>\n  </div>\n  <div\n    *ngFor=\"let microservice of microservices$ | async\"\n    class=\"col-xs-12 col-sm-4 col-md-3\"\n  >\n    <c8y-application-card\n      (onAppDeleted)=\"loadMicroservices()\"\n      [app]=\"microservice\"\n      class=\"d-contents\"\n    ></c8y-application-card>\n  </div>\n</div>\n"
            }]
    }], function () { return [{ type: ɵngcc1.EcosystemService }, { type: ɵngcc2.WizardService }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWljcm9zZXJ2aWNlLWxpc3QuY29tcG9uZW50LmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9lY29zeXN0ZW0vbWljcm9zZXJ2aWNlcy9taWNyb3NlcnZpY2UtbGlzdC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSxNQUFNLGVBQWUsQ0FBQztBQUVsRCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFFcEQsT0FBTyxFQUFFLGVBQWUsRUFBYyxNQUFNLE1BQU0sQ0FBQztBQUNuRCxPQUFPLEVBQUUsV0FBVyxFQUFFLFNBQVMsRUFBRSxHQUFHLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUM3RCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBTXhELE1BQU0sT0FBTyx5QkFBeUI7QUFBRyxJQWV2QyxZQUNVLGdCQUFrQyxFQUNsQyxhQUE0QjtBQUNyQyxRQUZTLHFCQUFnQixHQUFoQixnQkFBZ0IsQ0FBa0I7QUFBQyxRQUNuQyxrQkFBYSxHQUFiLGFBQWEsQ0FBZTtBQUN4QyxRQWpCRSxjQUFTLEdBQVksS0FBSyxDQUFDO0FBQzdCLFFBQUUsWUFBTyxHQUEwQixJQUFJLGVBQWUsQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUM3RCxRQUFFLG1CQUFjLEdBQTZCLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUMxRCxHQUFHLENBQUMsR0FBRyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxDQUFDLEVBQ2xDLFNBQVMsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQyxFQUN6RCxHQUFHLENBQUMsR0FBRyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsU0FBUyxHQUFHLEtBQUssQ0FBQyxDQUFDLEVBQ25DLFdBQVcsRUFBRSxDQUNkLENBQUM7QUFDSixRQUFFLGtDQUE2QixHQUF3QixJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FDcEUsU0FBUyxDQUFDLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyw0QkFBNEIsRUFBRSxDQUFDLEVBQ3JFLFdBQVcsRUFBRSxDQUNkLENBQUM7QUFDSixJQUtLLENBQUM7QUFDTixJQUNFLFFBQVE7QUFDVixRQUFJLElBQUksQ0FBQyxpQkFBaUIsRUFBRSxDQUFDO0FBQzdCLElBQUUsQ0FBQztBQUNILElBQ0UsaUJBQWlCO0FBQ25CLFFBQUksSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsQ0FBQztBQUN4QixJQUFFLENBQUM7QUFDSCxJQUNFLGVBQWU7QUFDakIsUUFBSSxNQUFNLFlBQVksR0FBUTtBQUM5QixZQUFNLEVBQUUsRUFBRSxvQkFBb0I7QUFDOUIsU0FBSyxDQUFDO0FBQ04sUUFBSSxNQUFNLFlBQVksR0FBaUIsRUFBRSxZQUFZLEVBQUUsQ0FBQztBQUN4RCxRQUNJLE1BQU0sUUFBUSxHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDO0FBQzNELFFBQUksUUFBUSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLEdBQUcsRUFBRTtBQUM1QyxZQUFNLElBQUksQ0FBQyxpQkFBaUIsRUFBRSxDQUFDO0FBQy9CLFFBQUksQ0FBQyxDQUFDLENBQUM7QUFDUCxJQUFFLENBQUM7QUFDSDtxREEzQ0MsU0FBUyxTQUFDLGtCQUNULFFBQVEsRUFBRSx1QkFBdUIsa0JBQ2pDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O29LQUFpRCxjQUNsRDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7K1ZBQ0k7QUFBQztBQUFtRCxZQU5oRCxnQkFBZ0I7QUFBSSxZQUpwQixhQUFhO0FBQUc7Ozs7Ozs7aUhBQUU7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBJQXBwbGljYXRpb24sIElSZXN1bHRMaXN0IH0gZnJvbSAnQGM4eS9jbGllbnQnO1xuaW1wb3J0IHsgV2l6YXJkU2VydmljZSB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMnO1xuaW1wb3J0IHsgTW9kYWxPcHRpb25zIH0gZnJvbSAnbmd4LWJvb3RzdHJhcC9tb2RhbCc7XG5pbXBvcnQgeyBCZWhhdmlvclN1YmplY3QsIE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IHNoYXJlUmVwbGF5LCBzd2l0Y2hNYXAsIHRhcCB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcbmltcG9ydCB7IEVjb3N5c3RlbVNlcnZpY2UgfSBmcm9tICcuLi9lY29zeXN0ZW0uc2VydmljZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2M4eS1taWNyb3NlcnZpY2UtbGlzdCcsXG4gIHRlbXBsYXRlVXJsOiAnLi9taWNyb3NlcnZpY2UtbGlzdC5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgTWljcm9zZXJ2aWNlTGlzdENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIHJlbG9hZGluZzogYm9vbGVhbiA9IGZhbHNlO1xuICByZWxvYWQkOiBCZWhhdmlvclN1YmplY3Q8dm9pZD4gPSBuZXcgQmVoYXZpb3JTdWJqZWN0KG51bGwpO1xuICBtaWNyb3NlcnZpY2VzJDogT2JzZXJ2YWJsZTxJQXBwbGljYXRpb24+ID0gdGhpcy5yZWxvYWQkLnBpcGUoXG4gICAgdGFwKCgpID0+ICh0aGlzLnJlbG9hZGluZyA9IHRydWUpKSxcbiAgICBzd2l0Y2hNYXAoKCkgPT4gdGhpcy5lY29zeXN0ZW1TZXJ2aWNlLmdldE1pY3Jvc2VydmljZXMoKSksXG4gICAgdGFwKCgpID0+ICh0aGlzLnJlbG9hZGluZyA9IGZhbHNlKSksXG4gICAgc2hhcmVSZXBsYXkoKVxuICApO1xuICBpc01pY3Jvc2VydmljZUhvc3RpbmdBbGxvd2VkJDogT2JzZXJ2YWJsZTxib29sZWFuPiA9IHRoaXMucmVsb2FkJC5waXBlKFxuICAgIHN3aXRjaE1hcCgoKSA9PiB0aGlzLmVjb3N5c3RlbVNlcnZpY2UuaXNNaWNyb3NlcnZpY2VIb3N0aW5nQWxsb3dlZCgpKSxcbiAgICBzaGFyZVJlcGxheSgpXG4gICk7XG4gIGxpc3RDbGFzczogc3RyaW5nO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgZWNvc3lzdGVtU2VydmljZTogRWNvc3lzdGVtU2VydmljZSxcbiAgICBwcml2YXRlIHdpemFyZFNlcnZpY2U6IFdpemFyZFNlcnZpY2VcbiAgKSB7fVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMubG9hZE1pY3Jvc2VydmljZXMoKTtcbiAgfVxuXG4gIGxvYWRNaWNyb3NlcnZpY2VzKCkge1xuICAgIHRoaXMucmVsb2FkJC5uZXh0KCk7XG4gIH1cblxuICBhZGRNaWNyb3NlcnZpY2UoKSB7XG4gICAgY29uc3QgaW5pdGlhbFN0YXRlOiBhbnkgPSB7XG4gICAgICBpZDogJ3VwbG9hZE1pY3Jvc2VydmljZSdcbiAgICB9O1xuICAgIGNvbnN0IG1vZGFsT3B0aW9uczogTW9kYWxPcHRpb25zID0geyBpbml0aWFsU3RhdGUgfTtcblxuICAgIGNvbnN0IG1vZGFsUmVmID0gdGhpcy53aXphcmRTZXJ2aWNlLnNob3cobW9kYWxPcHRpb25zKTtcbiAgICBtb2RhbFJlZi5jb250ZW50Lm9uQ2xvc2Uuc3Vic2NyaWJlKCgpID0+IHtcbiAgICAgIHRoaXMubG9hZE1pY3Jvc2VydmljZXMoKTtcbiAgICB9KTtcbiAgfVxufVxuIl19