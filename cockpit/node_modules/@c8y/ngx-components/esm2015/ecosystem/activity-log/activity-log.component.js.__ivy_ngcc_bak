import { __awaiter } from "tslib";
import { Component, Input } from '@angular/core';
import { AlertService } from '@c8y/ngx-components';
import { EcosystemService } from '../ecosystem.service';
export class ActivityLogComponent {
    constructor(ecosystemService, alertService) {
        this.ecosystemService = ecosystemService;
        this.alertService = alertService;
        this.archives = [];
        this.canReactivate = false;
    }
    get uploadProgress() {
        return this.ecosystemService.progress;
    }
    ngOnInit() {
        return __awaiter(this, void 0, void 0, function* () {
            this.canReactivate = this.showReactivate();
            this.refresh();
        });
    }
    isActive(archive) {
        return this.application.activeVersionId === archive.id;
    }
    toActivate(archive) {
        return this.toActivateVersionId === archive.id;
    }
    checkIfLast(archive) {
        return archive.id === this.last.id;
    }
    showReactivate() {
        return this.ecosystemService.isApplication(this.application);
    }
    setActive(archive) {
        return __awaiter(this, void 0, void 0, function* () {
            const id = archive.id || archive;
            this.toActivateVersionId = id;
            this.isLoading = true;
            try {
                this.application = (yield this.ecosystemService.setAppActiveVersion(this.application, id)).data;
            }
            catch (ex) {
                this.alertService.addServerFailure(ex);
            }
            this.isLoading = false;
            this.refresh();
        });
    }
    deleteArchive(archive) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.ecosystemService.deleteArchive(archive, this.application);
            this.refresh();
        });
    }
    downloadArchive(archive) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.ecosystemService.downloadArchive(this.application, archive);
        });
    }
    reactivateArchive() {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.ecosystemService.reactivateArchive(this.application);
        });
    }
    onRefresh() {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.refresh();
        });
    }
    refresh() {
        return __awaiter(this, void 0, void 0, function* () {
            this.isLoading = true;
            this.archives = yield this.ecosystemService.listArchives(this.application.id);
            this.archives.sort((a, b) => {
                return new Date(b.created) - new Date(a.created);
            });
            this.last = this.archives[this.archives.length - 1];
            this.isLoading = false;
        });
    }
}
ActivityLogComponent.decorators = [
    { type: Component, args: [{
                selector: 'c8y-activity-log',
                template: "<div class=\"inner-scroll bg-gray-white flex-grow\">\n  <div class=\"card-block overflow-visible\">\n    <c8y-list-group>\n      <c8y-li-timeline *ngFor=\"let archive of archives\" [ngClass]=\"{ active: isActive(archive) }\">\n        {{ archive.created | date: 'd MMM YYYY' }}\n        {{ archive.created | date: 'shortTime' }}\n        <c8y-li>\n          <c8y-li-icon\n            [icon]=\"checkIfLast(archive) ? 'flag-checkered' : 'file-zip-o'\"\n          ></c8y-li-icon>\n          <c8y-li-body>\n            <div class=\"d-flex a-i-start\">\n              <div style=\"min-width: 0; flex: 1\">\n                <span class=\"text-truncate-wrap\" title=\" {{ archive.description || archive.name }}\">\n                  {{ archive.description || archive.name }}\n                </span>\n                <small *ngIf=\"archive.description\" class=\"text-muted\">{{\n                  archive.description\n                }}</small>\n              </div>\n              <i\n                *ngIf=\"isLoading && toActivate(archive)\"\n                [c8yIcon]=\"'circle-o-notch'\"\n                class=\"icon-spin\"\n                title=\"{{ 'Activating' | translate }}\"\n              ></i>\n\n              <span *ngIf=\"isActive(archive)\" class=\"label label-primary m-l-auto m-t-4\">{{\n                'Active' | translate\n              }}</span>\n            </div>\n          </c8y-li-body>\n          <c8y-li-action\n            (click)=\"setActive(archive)\"\n            *ngIf=\"!isLoading && !isActive(archive)\"\n            icon=\"check-square-o\"\n          >\n            {{ 'Set as active`archive`' | translate }}\n          </c8y-li-action>\n          <c8y-li-action (click)=\"downloadArchive(archive)\" icon=\"download\">\n            {{ 'Download`archive`' | translate }}\n          </c8y-li-action>\n          <c8y-li-action\n            (click)=\"deleteArchive(archive)\"\n            *ngIf=\"archives.length > 1 && !checkIfLast(archive) && !isActive(archive)\"\n            icon=\"trash\"\n          >\n            {{ 'Delete`archive`' | translate }}\n          </c8y-li-action>\n          <c8y-li-action\n            (click)=\"reactivateArchive()\"\n            *ngIf=\"canReactivate && isActive(archive)\"\n            icon=\"undo\"\n          >\n            {{ 'Reactivate archive' | translate }}\n          </c8y-li-action>\n        </c8y-li>\n      </c8y-li-timeline>\n    </c8y-list-group>\n  </div>\n</div>\n<div class=\"card-footer\">\n  <c8y-form-group *ngIf=\"!isLoading\" class=\"m-auto\">\n    <c8y-upload-archive [(application)]=\"application\" (refresh)=\"onRefresh()\"></c8y-upload-archive>\n  </c8y-form-group>\n</div>\n"
            },] }
];
ActivityLogComponent.ctorParameters = () => [
    { type: EcosystemService },
    { type: AlertService }
];
ActivityLogComponent.propDecorators = {
    application: [{ type: Input }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWN0aXZpdHktbG9nLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2Vjb3N5c3RlbS9hY3Rpdml0eS1sb2cvYWN0aXZpdHktbG9nLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQVUsTUFBTSxlQUFlLENBQUM7QUFFekQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBRW5ELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBTXhELE1BQU0sT0FBTyxvQkFBb0I7SUFRL0IsWUFBb0IsZ0JBQWtDLEVBQVUsWUFBMEI7UUFBdEUscUJBQWdCLEdBQWhCLGdCQUFnQixDQUFrQjtRQUFVLGlCQUFZLEdBQVosWUFBWSxDQUFjO1FBTjFGLGFBQVEsR0FBeUIsRUFBRSxDQUFDO1FBSXBDLGtCQUFhLEdBQVksS0FBSyxDQUFDO0lBRThELENBQUM7SUFFOUYsSUFBSSxjQUFjO1FBQ2hCLE9BQU8sSUFBSSxDQUFDLGdCQUFnQixDQUFDLFFBQVEsQ0FBQztJQUN4QyxDQUFDO0lBRUssUUFBUTs7WUFDWixJQUFJLENBQUMsYUFBYSxHQUFHLElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQztZQUMzQyxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7UUFDakIsQ0FBQztLQUFBO0lBRUQsUUFBUSxDQUFDLE9BQTJCO1FBQ2xDLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQyxlQUFlLEtBQUssT0FBTyxDQUFDLEVBQUUsQ0FBQztJQUN6RCxDQUFDO0lBRUQsVUFBVSxDQUFDLE9BQTJCO1FBQ3BDLE9BQU8sSUFBSSxDQUFDLG1CQUFtQixLQUFLLE9BQU8sQ0FBQyxFQUFFLENBQUM7SUFDakQsQ0FBQztJQUVELFdBQVcsQ0FBQyxPQUEyQjtRQUNyQyxPQUFPLE9BQU8sQ0FBQyxFQUFFLEtBQUssSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUM7SUFDckMsQ0FBQztJQUVELGNBQWM7UUFDWixPQUFPLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBQy9ELENBQUM7SUFFSyxTQUFTLENBQUMsT0FBTzs7WUFDckIsTUFBTSxFQUFFLEdBQUcsT0FBTyxDQUFDLEVBQUUsSUFBSSxPQUFPLENBQUM7WUFDakMsSUFBSSxDQUFDLG1CQUFtQixHQUFHLEVBQUUsQ0FBQztZQUM5QixJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQztZQUN0QixJQUFJO2dCQUNGLElBQUksQ0FBQyxXQUFXLEdBQUcsQ0FDakIsTUFBTSxJQUFJLENBQUMsZ0JBQWdCLENBQUMsbUJBQW1CLENBQUMsSUFBSSxDQUFDLFdBQVcsRUFBRSxFQUFFLENBQUMsQ0FDdEUsQ0FBQyxJQUFJLENBQUM7YUFDUjtZQUFDLE9BQU8sRUFBRSxFQUFFO2dCQUNYLElBQUksQ0FBQyxZQUFZLENBQUMsZ0JBQWdCLENBQUMsRUFBRSxDQUFDLENBQUM7YUFDeEM7WUFDRCxJQUFJLENBQUMsU0FBUyxHQUFHLEtBQUssQ0FBQztZQUN2QixJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7UUFDakIsQ0FBQztLQUFBO0lBRUssYUFBYSxDQUFDLE9BQTJCOztZQUM3QyxNQUFNLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxhQUFhLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztZQUNyRSxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7UUFDakIsQ0FBQztLQUFBO0lBRUssZUFBZSxDQUFDLE9BQTJCOztZQUMvQyxNQUFNLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLFdBQVcsRUFBRSxPQUFPLENBQUMsQ0FBQztRQUN6RSxDQUFDO0tBQUE7SUFFSyxpQkFBaUI7O1lBQ3JCLE1BQU0sSUFBSSxDQUFDLGdCQUFnQixDQUFDLGlCQUFpQixDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUNsRSxDQUFDO0tBQUE7SUFFSyxTQUFTOztZQUNiLE1BQU0sSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO1FBQ3ZCLENBQUM7S0FBQTtJQUVhLE9BQU87O1lBQ25CLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDO1lBQ3RCLElBQUksQ0FBQyxRQUFRLEdBQUcsTUFBTSxJQUFJLENBQUMsZ0JBQWdCLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsRUFBRSxDQUFDLENBQUM7WUFDOUUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUU7Z0JBQzFCLE9BQVEsSUFBSSxJQUFJLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBUyxHQUFJLElBQUksSUFBSSxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQVMsQ0FBQztZQUNyRSxDQUFDLENBQUMsQ0FBQztZQUNILElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQztZQUNwRCxJQUFJLENBQUMsU0FBUyxHQUFHLEtBQUssQ0FBQztRQUN6QixDQUFDO0tBQUE7OztZQS9FRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLGtCQUFrQjtnQkFDNUIsMG5GQUE0QzthQUM3Qzs7O1lBTFEsZ0JBQWdCO1lBRmhCLFlBQVk7OzswQkFTbEIsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSUFwcGxpY2F0aW9uLCBJQXBwbGljYXRpb25CaW5hcnkgfSBmcm9tICdAYzh5L2NsaWVudCc7XG5pbXBvcnQgeyBBbGVydFNlcnZpY2UgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzJztcbmltcG9ydCB7IEJlaGF2aW9yU3ViamVjdCB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgRWNvc3lzdGVtU2VydmljZSB9IGZyb20gJy4uL2Vjb3N5c3RlbS5zZXJ2aWNlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYzh5LWFjdGl2aXR5LWxvZycsXG4gIHRlbXBsYXRlVXJsOiAnLi9hY3Rpdml0eS1sb2cuY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIEFjdGl2aXR5TG9nQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgQElucHV0KCkgYXBwbGljYXRpb246IElBcHBsaWNhdGlvbjtcbiAgYXJjaGl2ZXM6IElBcHBsaWNhdGlvbkJpbmFyeVtdID0gW107XG4gIHRvQWN0aXZhdGVWZXJzaW9uSWQ6IHN0cmluZztcbiAgbGFzdDogSUFwcGxpY2F0aW9uQmluYXJ5O1xuICBpc0xvYWRpbmc6IGJvb2xlYW47XG4gIGNhblJlYWN0aXZhdGU6IGJvb2xlYW4gPSBmYWxzZTtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGVjb3N5c3RlbVNlcnZpY2U6IEVjb3N5c3RlbVNlcnZpY2UsIHByaXZhdGUgYWxlcnRTZXJ2aWNlOiBBbGVydFNlcnZpY2UpIHt9XG5cbiAgZ2V0IHVwbG9hZFByb2dyZXNzKCk6IEJlaGF2aW9yU3ViamVjdDxudW1iZXI+IHtcbiAgICByZXR1cm4gdGhpcy5lY29zeXN0ZW1TZXJ2aWNlLnByb2dyZXNzO1xuICB9XG5cbiAgYXN5bmMgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5jYW5SZWFjdGl2YXRlID0gdGhpcy5zaG93UmVhY3RpdmF0ZSgpO1xuICAgIHRoaXMucmVmcmVzaCgpO1xuICB9XG5cbiAgaXNBY3RpdmUoYXJjaGl2ZTogSUFwcGxpY2F0aW9uQmluYXJ5KTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuYXBwbGljYXRpb24uYWN0aXZlVmVyc2lvbklkID09PSBhcmNoaXZlLmlkO1xuICB9XG5cbiAgdG9BY3RpdmF0ZShhcmNoaXZlOiBJQXBwbGljYXRpb25CaW5hcnkpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy50b0FjdGl2YXRlVmVyc2lvbklkID09PSBhcmNoaXZlLmlkO1xuICB9XG5cbiAgY2hlY2tJZkxhc3QoYXJjaGl2ZTogSUFwcGxpY2F0aW9uQmluYXJ5KTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIGFyY2hpdmUuaWQgPT09IHRoaXMubGFzdC5pZDtcbiAgfVxuXG4gIHNob3dSZWFjdGl2YXRlKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLmVjb3N5c3RlbVNlcnZpY2UuaXNBcHBsaWNhdGlvbih0aGlzLmFwcGxpY2F0aW9uKTtcbiAgfVxuXG4gIGFzeW5jIHNldEFjdGl2ZShhcmNoaXZlKTogUHJvbWlzZTx2b2lkPiB7XG4gICAgY29uc3QgaWQgPSBhcmNoaXZlLmlkIHx8IGFyY2hpdmU7XG4gICAgdGhpcy50b0FjdGl2YXRlVmVyc2lvbklkID0gaWQ7XG4gICAgdGhpcy5pc0xvYWRpbmcgPSB0cnVlO1xuICAgIHRyeSB7XG4gICAgICB0aGlzLmFwcGxpY2F0aW9uID0gKFxuICAgICAgICBhd2FpdCB0aGlzLmVjb3N5c3RlbVNlcnZpY2Uuc2V0QXBwQWN0aXZlVmVyc2lvbih0aGlzLmFwcGxpY2F0aW9uLCBpZClcbiAgICAgICkuZGF0YTtcbiAgICB9IGNhdGNoIChleCkge1xuICAgICAgdGhpcy5hbGVydFNlcnZpY2UuYWRkU2VydmVyRmFpbHVyZShleCk7XG4gICAgfVxuICAgIHRoaXMuaXNMb2FkaW5nID0gZmFsc2U7XG4gICAgdGhpcy5yZWZyZXNoKCk7XG4gIH1cblxuICBhc3luYyBkZWxldGVBcmNoaXZlKGFyY2hpdmU6IElBcHBsaWNhdGlvbkJpbmFyeSk6IFByb21pc2U8dm9pZD4ge1xuICAgIGF3YWl0IHRoaXMuZWNvc3lzdGVtU2VydmljZS5kZWxldGVBcmNoaXZlKGFyY2hpdmUsIHRoaXMuYXBwbGljYXRpb24pO1xuICAgIHRoaXMucmVmcmVzaCgpO1xuICB9XG5cbiAgYXN5bmMgZG93bmxvYWRBcmNoaXZlKGFyY2hpdmU6IElBcHBsaWNhdGlvbkJpbmFyeSk6IFByb21pc2U8dm9pZD4ge1xuICAgIGF3YWl0IHRoaXMuZWNvc3lzdGVtU2VydmljZS5kb3dubG9hZEFyY2hpdmUodGhpcy5hcHBsaWNhdGlvbiwgYXJjaGl2ZSk7XG4gIH1cblxuICBhc3luYyByZWFjdGl2YXRlQXJjaGl2ZSgpOiBQcm9taXNlPHZvaWQ+IHtcbiAgICBhd2FpdCB0aGlzLmVjb3N5c3RlbVNlcnZpY2UucmVhY3RpdmF0ZUFyY2hpdmUodGhpcy5hcHBsaWNhdGlvbik7XG4gIH1cblxuICBhc3luYyBvblJlZnJlc2goKSB7XG4gICAgYXdhaXQgdGhpcy5yZWZyZXNoKCk7XG4gIH1cblxuICBwcml2YXRlIGFzeW5jIHJlZnJlc2goKTogUHJvbWlzZTx2b2lkPiB7XG4gICAgdGhpcy5pc0xvYWRpbmcgPSB0cnVlO1xuICAgIHRoaXMuYXJjaGl2ZXMgPSBhd2FpdCB0aGlzLmVjb3N5c3RlbVNlcnZpY2UubGlzdEFyY2hpdmVzKHRoaXMuYXBwbGljYXRpb24uaWQpO1xuICAgIHRoaXMuYXJjaGl2ZXMuc29ydCgoYSwgYikgPT4ge1xuICAgICAgcmV0dXJuIChuZXcgRGF0ZShiLmNyZWF0ZWQpIGFzIGFueSkgLSAobmV3IERhdGUoYS5jcmVhdGVkKSBhcyBhbnkpO1xuICAgIH0pO1xuICAgIHRoaXMubGFzdCA9IHRoaXMuYXJjaGl2ZXNbdGhpcy5hcmNoaXZlcy5sZW5ndGggLSAxXTtcbiAgICB0aGlzLmlzTG9hZGluZyA9IGZhbHNlO1xuICB9XG59XG4iXX0=