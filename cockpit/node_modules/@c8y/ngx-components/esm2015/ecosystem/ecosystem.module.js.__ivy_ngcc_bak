import { NgModule } from '@angular/core';
import { ReactiveFormsModule } from '@angular/forms';
import { RouterModule } from '@angular/router';
import { CoreModule, FormsModule, gettext, HOOK_NAVIGATOR_NODES, HOOK_ROUTE, HOOK_TABS, HOOK_WIZARD, ViewContext } from '@c8y/ngx-components';
import { BsDropdownModule } from 'ngx-bootstrap/dropdown';
import { PopoverModule } from 'ngx-bootstrap/popover';
import { TooltipModule } from 'ngx-bootstrap/tooltip';
import { AddWebApplicationComponent } from './applications/add-web-application/add-web-application.component';
import { InstallFromPackageComponent } from './applications/install-from-package/install-from-package.component';
import { DuplicateApplicationListComponent } from './applications/duplicate-application/duplicate-application-list/duplicate-application-list.component';
import { DuplicateApplicationPropertiesComponent } from './applications/duplicate-application/duplicate-application-properties/duplicate-application-properties.component';
import { DuplicateApplicationComponent } from './applications/duplicate-application/duplicate-application.component';
import { AddExternalApplicationComponent } from './applications/add-external-applicaiton/add-external-application.component';
import { AddMicroserviceComponent } from './microservices/add-microservice.component';
import { ApplicationListComponent } from './applications/application-list/application-list.component';
import { ApplicationPluginsComponent } from './applications/application-plugins/application-plugins.component';
import { ApplicationPluginsGuard } from './applications/application-plugins/application-plugins.guard';
import { InstallPluginComponent } from './applications/application-plugins/install-plugin.component';
import { PluginListItemComponent } from './applications/application-plugins/plugin-list-item.component';
import { PluginListComponent } from './applications/application-plugins/plugin-list.component';
import { ActivityLogComponent } from './activity-log/activity-log.component';
import { ApplicationPropertiesComponent } from './application-properties/application-properties.component';
import { EcosystemNavigationFactory } from './ecosystem-navigation.factory';
import { EcosystemTabs } from './ecosystem-tabs.factory';
import { EcosystemGuard } from './ecosystem.guard';
import { EcosystemService } from './ecosystem.service';
import { MicroserviceListComponent } from './microservices/microservice-list.component';
import { PackagesListComponent } from './packages/package-list/packages-list.component';
import { AddPackageComponent } from './packages/add-package.component';
import { PackageDetailsComponent } from './packages/package-details/package-details.component';
import { DeployApplicationComponent } from './packages/deploy-application/deploy-application.component';
import { AddApplicationComponent } from './shared/add-application.component';
import { PackageGuard } from './packages/package.guard';
import { ApplicationCardComponent } from './shared/application-card.component';
import { ApplicationPropertiesFormComponent } from './shared/application-properties-form.component';
import { ApplicationPropertiesGuard } from './application-properties/application-properties.guard';
import { FeatureListComponent } from './features/feature-list.component';
import { PackageArchivesComponent } from './packages/package-archives/package-archives.component';
import { EcosystemWizardFactory } from './ecosystem-wizard.factory';
import { UploadArchiveComponent } from './shared/upload-archive.component';
const ecosystemMainRoutes = [
    {
        path: 'ecosystem/applications',
        component: ApplicationListComponent
    },
    {
        path: 'ecosystem/package-list',
        component: PackagesListComponent,
        canActivate: [EcosystemGuard]
    },
    {
        path: 'ecosystem/features',
        component: FeatureListComponent
    },
    {
        path: 'ecosystem',
        redirectTo: 'ecosystem/applications'
    },
    {
        path: 'microservices',
        component: MicroserviceListComponent
    }
];
const applicationDetailsRoutes = [
    {
        path: 'properties',
        component: ApplicationPropertiesComponent,
        icon: 'list',
        label: gettext('Properties'),
        context: ViewContext.Application,
        priority: 5,
        canActivate: [ApplicationPropertiesGuard]
    },
    {
        path: 'plugins',
        component: ApplicationPluginsComponent,
        icon: 'plugin',
        label: gettext('Plugins'),
        context: ViewContext.Application,
        priority: 3,
        canActivate: [ApplicationPluginsGuard, EcosystemGuard]
    },
    {
        path: 'package-details',
        component: PackageDetailsComponent,
        icon: 'big-parcel',
        label: gettext('Info'),
        context: ViewContext.Application,
        priority: 10,
        canActivate: [PackageGuard, EcosystemGuard]
    },
    {
        path: 'package-archives',
        component: PackageArchivesComponent,
        icon: 'c8y-archive',
        label: gettext('Archives'),
        context: ViewContext.Application,
        priority: 5,
        canActivate: [PackageGuard, EcosystemGuard]
    },
    {
        path: 'properties',
        component: ApplicationPropertiesComponent,
        icon: 'list',
        label: gettext('Properties'),
        context: ViewContext.Microservice,
        priority: 5,
        canActivate: [ApplicationPropertiesGuard]
    }
];
const ɵ0 = applicationDetailsRoutes, ɵ1 = {
    wizardId: 'uploadApplication',
    component: AddWebApplicationComponent,
    name: 'Upload web application',
    c8yIcon: 'upload'
}, ɵ2 = {
    wizardId: 'uploadPackage',
    component: AddPackageComponent
}, ɵ3 = {
    wizardId: 'uploadApplication',
    component: AddExternalApplicationComponent,
    name: 'External application',
    c8yIcon: 'cloud-link'
}, ɵ4 = {
    wizardId: 'deployPackage',
    component: DeployApplicationComponent,
    name: 'Deploy package',
    c8yIcon: 'big-parcel'
}, ɵ5 = {
    wizardId: 'uploadApplication',
    component: DuplicateApplicationComponent,
    name: 'Duplicate existing application',
    c8yIcon: 'copy'
}, ɵ6 = {
    wizardId: 'uploadMicroservice',
    component: AddMicroserviceComponent
};
export class EcosystemModule {
}
EcosystemModule.decorators = [
    { type: NgModule, args: [{
                declarations: [
                    ApplicationListComponent,
                    MicroserviceListComponent,
                    ApplicationCardComponent,
                    ApplicationPropertiesComponent,
                    AddMicroserviceComponent,
                    ActivityLogComponent,
                    ApplicationPluginsComponent,
                    PluginListItemComponent,
                    InstallPluginComponent,
                    PluginListComponent,
                    AddWebApplicationComponent,
                    AddExternalApplicationComponent,
                    DuplicateApplicationComponent,
                    DuplicateApplicationListComponent,
                    DuplicateApplicationPropertiesComponent,
                    ApplicationPropertiesComponent,
                    InstallFromPackageComponent,
                    AddMicroserviceComponent,
                    ApplicationPropertiesComponent,
                    PackagesListComponent,
                    PackageDetailsComponent,
                    DeployApplicationComponent,
                    AddPackageComponent,
                    AddApplicationComponent,
                    ApplicationPropertiesFormComponent,
                    FeatureListComponent,
                    PackageArchivesComponent,
                    UploadArchiveComponent
                ],
                entryComponents: [
                    AddMicroserviceComponent,
                    AddWebApplicationComponent,
                    AddExternalApplicationComponent,
                    DuplicateApplicationComponent,
                    DuplicateApplicationListComponent,
                    DuplicateApplicationPropertiesComponent,
                    ApplicationPropertiesComponent,
                    ActivityLogComponent,
                    ApplicationPluginsComponent,
                    InstallPluginComponent,
                    PackagesListComponent,
                    InstallFromPackageComponent,
                    PackageDetailsComponent,
                    DeployApplicationComponent,
                    AddPackageComponent,
                    FeatureListComponent,
                    PackageArchivesComponent
                ],
                imports: [
                    CoreModule,
                    BsDropdownModule,
                    TooltipModule,
                    FormsModule,
                    ReactiveFormsModule,
                    RouterModule.forChild(ecosystemMainRoutes),
                    PopoverModule
                ],
                exports: [ApplicationPropertiesComponent],
                providers: [
                    {
                        provide: HOOK_TABS,
                        useClass: EcosystemTabs,
                        multi: true
                    },
                    {
                        provide: HOOK_NAVIGATOR_NODES,
                        useClass: EcosystemNavigationFactory,
                        multi: true
                    },
                    {
                        provide: HOOK_ROUTE,
                        useValue: ɵ0,
                        multi: true
                    },
                    EcosystemGuard,
                    EcosystemService,
                    ApplicationPluginsGuard,
                    PackageGuard,
                    ApplicationPropertiesGuard,
                    {
                        provide: HOOK_WIZARD,
                        useValue: ɵ1,
                        multi: true
                    },
                    {
                        provide: HOOK_WIZARD,
                        useValue: ɵ2,
                        multi: true
                    },
                    {
                        provide: HOOK_WIZARD,
                        useValue: ɵ3,
                        multi: true
                    },
                    {
                        provide: HOOK_WIZARD,
                        useValue: ɵ4,
                        multi: true
                    },
                    {
                        provide: HOOK_WIZARD,
                        useClass: EcosystemWizardFactory,
                        multi: true
                    },
                    {
                        provide: HOOK_WIZARD,
                        useValue: ɵ5,
                        multi: true
                    },
                    {
                        provide: HOOK_WIZARD,
                        useValue: ɵ6,
                        multi: true
                    }
                ]
            },] }
];
export { ɵ0, ɵ1, ɵ2, ɵ3, ɵ4, ɵ5, ɵ6 };
//# sourceMappingURL=data:application/json;base64,