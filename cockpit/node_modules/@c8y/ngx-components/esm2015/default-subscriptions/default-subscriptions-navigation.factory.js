import { __awaiter } from "tslib";
import { Injectable } from '@angular/core';
import { gettext, NavigatorNode } from '@c8y/ngx-components';
import { DefaultSubscriptionsGuard } from './default-subscriptions.guard';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './default-subscriptions.guard';
export class DefaultSubscriptionsNavigationFactory {
    constructor(defaultSubscriptionsGuard) {
        this.defaultSubscriptionsGuard = defaultSubscriptionsGuard;
        this.navNode = new NavigatorNode({
            label: gettext('Default subscriptions'),
            path: '/default-subscriptions',
            icon: 'c8y-c8y-data',
            parent: gettext('Ecosystem'),
            priority: 100
        });
    }
    /** Returns the navigation node if the feature is active. */
    get() {
        return __awaiter(this, void 0, void 0, function* () {
            if (yield this.defaultSubscriptionsGuard.canActivate()) {
                return this.navNode;
            }
        });
    }
}
DefaultSubscriptionsNavigationFactory.ɵfac = function DefaultSubscriptionsNavigationFactory_Factory(t) { return new (t || DefaultSubscriptionsNavigationFactory)(ɵngcc0.ɵɵinject(ɵngcc1.DefaultSubscriptionsGuard)); };
DefaultSubscriptionsNavigationFactory.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: DefaultSubscriptionsNavigationFactory, factory: DefaultSubscriptionsNavigationFactory.ɵfac });
DefaultSubscriptionsNavigationFactory.ctorParameters = () => [
    { type: DefaultSubscriptionsGuard }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DefaultSubscriptionsNavigationFactory, [{
        type: Injectable
    }], function () { return [{ type: ɵngcc1.DefaultSubscriptionsGuard }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVmYXVsdC1zdWJzY3JpcHRpb25zLW5hdmlnYXRpb24uZmFjdG9yeS5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vZGVmYXVsdC1zdWJzY3JpcHRpb25zL2RlZmF1bHQtc3Vic2NyaXB0aW9ucy1uYXZpZ2F0aW9uLmZhY3RvcnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLE9BQU8sRUFBRSxhQUFhLEVBQXdCLE1BQU0scUJBQXFCLENBQUM7QUFDbkYsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sK0JBQStCLENBQUM7OztBQUcxRSxNQUFNLE9BQU8scUNBQXFDO0FBQUcsSUFTbkQsWUFBb0IseUJBQW9EO0FBQUksUUFBeEQsOEJBQXlCLEdBQXpCLHlCQUF5QixDQUEyQjtBQUFDLFFBUmpFLFlBQU8sR0FBRyxJQUFJLGFBQWEsQ0FBQztBQUN0QyxZQUFJLEtBQUssRUFBRSxPQUFPLENBQUMsdUJBQXVCLENBQUM7QUFDM0MsWUFBSSxJQUFJLEVBQUUsd0JBQXdCO0FBQ2xDLFlBQUksSUFBSSxFQUFFLGNBQWM7QUFDeEIsWUFBSSxNQUFNLEVBQUUsT0FBTyxDQUFDLFdBQVcsQ0FBQztBQUNoQyxZQUFJLFFBQVEsRUFBRSxHQUFHO0FBQ2pCLFNBQUcsQ0FBQyxDQUFDO0FBQ0wsSUFDNkUsQ0FBQztBQUM5RSxJQUNFLDREQUE0RDtBQUM5RCxJQUFRLEdBQUc7QUFBSztBQUNzQixZQUFsQyxJQUFJLE1BQU0sSUFBSSxDQUFDLHlCQUF5QixDQUFDLFdBQVcsRUFBRSxFQUFFO0FBQzVELGdCQUFNLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQztBQUMxQixhQUFLO0FBQ0wsUUFBRSxDQUFDO0FBRUgsS0FGRztBQUNIO2lFQWxCQyxVQUFVOzZMQUNUO0FBQUM7QUFBK0QsWUFIekQseUJBQXlCO0FBQUc7OzswRkFBRTtBQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgZ2V0dGV4dCwgTmF2aWdhdG9yTm9kZSwgTmF2aWdhdG9yTm9kZUZhY3RvcnkgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzJztcbmltcG9ydCB7IERlZmF1bHRTdWJzY3JpcHRpb25zR3VhcmQgfSBmcm9tICcuL2RlZmF1bHQtc3Vic2NyaXB0aW9ucy5ndWFyZCc7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBEZWZhdWx0U3Vic2NyaXB0aW9uc05hdmlnYXRpb25GYWN0b3J5IGltcGxlbWVudHMgTmF2aWdhdG9yTm9kZUZhY3Rvcnkge1xuICBwcml2YXRlIG5hdk5vZGUgPSBuZXcgTmF2aWdhdG9yTm9kZSh7XG4gICAgbGFiZWw6IGdldHRleHQoJ0RlZmF1bHQgc3Vic2NyaXB0aW9ucycpLFxuICAgIHBhdGg6ICcvZGVmYXVsdC1zdWJzY3JpcHRpb25zJyxcbiAgICBpY29uOiAnYzh5LWM4eS1kYXRhJyxcbiAgICBwYXJlbnQ6IGdldHRleHQoJ0Vjb3N5c3RlbScpLFxuICAgIHByaW9yaXR5OiAxMDBcbiAgfSk7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBkZWZhdWx0U3Vic2NyaXB0aW9uc0d1YXJkOiBEZWZhdWx0U3Vic2NyaXB0aW9uc0d1YXJkKSB7fVxuXG4gIC8qKiBSZXR1cm5zIHRoZSBuYXZpZ2F0aW9uIG5vZGUgaWYgdGhlIGZlYXR1cmUgaXMgYWN0aXZlLiAqL1xuICBhc3luYyBnZXQoKTogUHJvbWlzZTxOYXZpZ2F0b3JOb2RlPiB7XG4gICAgaWYgKGF3YWl0IHRoaXMuZGVmYXVsdFN1YnNjcmlwdGlvbnNHdWFyZC5jYW5BY3RpdmF0ZSgpKSB7XG4gICAgICByZXR1cm4gdGhpcy5uYXZOb2RlO1xuICAgIH1cbiAgfVxufVxuIl19