import { __awaiter } from "tslib";
import { Injectable } from '@angular/core';
import { InventoryService } from '@c8y/client';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@c8y/client';
export class ChildDevicesTabGuard {
    constructor(inventory) {
        this.inventory = inventory;
    }
    canActivate(route) {
        return __awaiter(this, void 0, void 0, function* () {
            const contextData = route.data.contextData;
            const filter = {
                pageSize: 1
            };
            if (!contextData) {
                return true;
            }
            const device = yield this.inventory.childDevicesList(contextData.id, filter);
            const hasChildren = device.data.length;
            const isVendme = route.data.contextData.type === 'com_nsn_startups_vendme_VendingMachine';
            return hasChildren && !isVendme;
        });
    }
}
ChildDevicesTabGuard.ɵfac = function ChildDevicesTabGuard_Factory(t) { return new (t || ChildDevicesTabGuard)(ɵngcc0.ɵɵinject(ɵngcc1.InventoryService)); };
ChildDevicesTabGuard.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: ChildDevicesTabGuard, factory: ChildDevicesTabGuard.ɵfac });
ChildDevicesTabGuard.ctorParameters = () => [
    { type: InventoryService }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ChildDevicesTabGuard, [{
        type: Injectable
    }], function () { return [{ type: ɵngcc1.InventoryService }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hpbGQtZGV2aWNlcy5ndWFyZC5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vY2hpbGQtZGV2aWNlcy9jaGlsZC1kZXZpY2VzLmd1YXJkLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTNDLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGFBQWEsQ0FBQzs7O0FBRy9DLE1BQU0sT0FBTyxvQkFBb0I7QUFBRyxJQUNsQyxZQUFvQixTQUEyQjtBQUFJLFFBQS9CLGNBQVMsR0FBVCxTQUFTLENBQWtCO0FBQUMsSUFBRSxDQUFDO0FBQ3JELElBQ1EsV0FBVyxDQUFDLEtBQTZCO0FBQUk7QUFDVCxZQUF4QyxNQUFNLFdBQVcsR0FBRyxLQUFLLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQztBQUMvQyxZQUFJLE1BQU0sTUFBTSxHQUFXO0FBQzNCLGdCQUFNLFFBQVEsRUFBRSxDQUFDO0FBQ2pCLGFBQUssQ0FBQztBQUNOLFlBQUksSUFBSSxDQUFDLFdBQVcsRUFBRTtBQUN0QixnQkFBTSxPQUFPLElBQUksQ0FBQztBQUNsQixhQUFLO0FBQ0wsWUFBSSxNQUFNLE1BQU0sR0FBRyxNQUFNLElBQUksQ0FBQyxTQUFTLENBQUMsZ0JBQWdCLENBQUMsV0FBVyxDQUFDLEVBQUUsRUFBRSxNQUFNLENBQUMsQ0FBQztBQUNqRixZQUFJLE1BQU0sV0FBVyxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDO0FBQzNDLFlBQUksTUFBTSxRQUFRLEdBQUcsS0FBSyxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxLQUFLLHdDQUF3QyxDQUFDO0FBQzlGLFlBQUksT0FBTyxXQUFXLElBQUksQ0FBQyxRQUFRLENBQUM7QUFDcEMsUUFBRSxDQUFDO0FBRUgsS0FGRztBQUNIO2dEQWpCQyxVQUFVOzBJQUNUO0FBQUM7QUFBOEMsWUFIeEMsZ0JBQWdCO0FBQUc7OztpRkFBRTtBQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQWN0aXZhdGVkUm91dGVTbmFwc2hvdCwgQ2FuQWN0aXZhdGUgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xuaW1wb3J0IHsgSW52ZW50b3J5U2VydmljZSB9IGZyb20gJ0BjOHkvY2xpZW50JztcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIENoaWxkRGV2aWNlc1RhYkd1YXJkIGltcGxlbWVudHMgQ2FuQWN0aXZhdGUge1xuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGludmVudG9yeTogSW52ZW50b3J5U2VydmljZSkge31cblxuICBhc3luYyBjYW5BY3RpdmF0ZShyb3V0ZTogQWN0aXZhdGVkUm91dGVTbmFwc2hvdCk6IFByb21pc2U8Ym9vbGVhbj4ge1xuICAgIGNvbnN0IGNvbnRleHREYXRhID0gcm91dGUuZGF0YS5jb250ZXh0RGF0YTtcbiAgICBjb25zdCBmaWx0ZXI6IG9iamVjdCA9IHtcbiAgICAgIHBhZ2VTaXplOiAxXG4gICAgfTtcbiAgICBpZiAoIWNvbnRleHREYXRhKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgY29uc3QgZGV2aWNlID0gYXdhaXQgdGhpcy5pbnZlbnRvcnkuY2hpbGREZXZpY2VzTGlzdChjb250ZXh0RGF0YS5pZCwgZmlsdGVyKTtcbiAgICBjb25zdCBoYXNDaGlsZHJlbiA9IGRldmljZS5kYXRhLmxlbmd0aDtcbiAgICBjb25zdCBpc1ZlbmRtZSA9IHJvdXRlLmRhdGEuY29udGV4dERhdGEudHlwZSA9PT0gJ2NvbV9uc25fc3RhcnR1cHNfdmVuZG1lX1ZlbmRpbmdNYWNoaW5lJztcbiAgICByZXR1cm4gaGFzQ2hpbGRyZW4gJiYgIWlzVmVuZG1lO1xuICB9XG59XG4iXX0=