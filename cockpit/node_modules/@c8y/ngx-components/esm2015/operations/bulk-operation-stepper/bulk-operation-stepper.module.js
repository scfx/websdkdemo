import { NgModule } from '@angular/core';
import { CoreModule } from '@c8y/ngx-components';
import { OperationDetailsModule } from '@c8y/ngx-components/operations/details';
import { DeviceSelectorModule } from '@c8y/ngx-components/operations/device-selector';
import { OperationSummaryModule } from '@c8y/ngx-components/operations/operation-summary';
import { BulkOperationStepper } from './bulk-operation-stepper.component';
import { CustomStep } from './custom-step.directive';
/**
 * This module provides base stepper class and stepper wrapper component.
 */
import * as ɵngcc0 from '@angular/core';
export class BulkOperationStepperModule {
}
BulkOperationStepperModule.ɵfac = function BulkOperationStepperModule_Factory(t) { return new (t || BulkOperationStepperModule)(); };
BulkOperationStepperModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: BulkOperationStepperModule });
BulkOperationStepperModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CoreModule, DeviceSelectorModule, OperationDetailsModule, OperationSummaryModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BulkOperationStepperModule, [{
        type: NgModule,
        args: [{
                imports: [CoreModule, DeviceSelectorModule, OperationDetailsModule, OperationSummaryModule],
                declarations: [BulkOperationStepper, CustomStep],
                exports: [BulkOperationStepper, CustomStep]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(BulkOperationStepperModule, { declarations: function () { return [BulkOperationStepper, CustomStep]; }, imports: function () { return [CoreModule, DeviceSelectorModule, OperationDetailsModule, OperationSummaryModule]; }, exports: function () { return [BulkOperationStepper, CustomStep]; } }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVsay1vcGVyYXRpb24tc3RlcHBlci5tb2R1bGUuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL29wZXJhdGlvbnMvYnVsay1vcGVyYXRpb24tc3RlcHBlci9idWxrLW9wZXJhdGlvbi1zdGVwcGVyLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUNqRCxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSx3Q0FBd0MsQ0FBQztBQUNoRixPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxnREFBZ0QsQ0FBQztBQUN0RixPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSxrREFBa0QsQ0FBQztBQUMxRixPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQztBQUMxRSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFFckQ7QUFDQTtBQUNBLEdBQUc7O0FBTUgsTUFBTSxPQUFPLDBCQUEwQjtBQUFHO3NEQUx6QyxRQUFRLFNBQUMsa0JBQ1IsT0FBTyxFQUFFLENBQUMsVUFBVSxFQUFFLG9CQUFvQixFQUFFO3FCQUFzQixFQUFFLHNCQUFzQixDQUFDLGtCQUMzRixZQUFZLEVBQUUsQ0FBQyxvQkFBb0IsRUFBRTtBQUFVLENBQUMsa0JBQ2hELE9BQU8sRUFBRSxDQUFDLG9CQUFvQixFQUFFLFVBQVUsQ0FBQyxjQUM1Qzs7Ozs7Ozs7O3NZQUNJO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29yZU1vZHVsZSB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMnO1xuaW1wb3J0IHsgT3BlcmF0aW9uRGV0YWlsc01vZHVsZSB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMvb3BlcmF0aW9ucy9kZXRhaWxzJztcbmltcG9ydCB7IERldmljZVNlbGVjdG9yTW9kdWxlIH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cy9vcGVyYXRpb25zL2RldmljZS1zZWxlY3Rvcic7XG5pbXBvcnQgeyBPcGVyYXRpb25TdW1tYXJ5TW9kdWxlIH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cy9vcGVyYXRpb25zL29wZXJhdGlvbi1zdW1tYXJ5JztcbmltcG9ydCB7IEJ1bGtPcGVyYXRpb25TdGVwcGVyIH0gZnJvbSAnLi9idWxrLW9wZXJhdGlvbi1zdGVwcGVyLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBDdXN0b21TdGVwIH0gZnJvbSAnLi9jdXN0b20tc3RlcC5kaXJlY3RpdmUnO1xuXG4vKipcbiAqIFRoaXMgbW9kdWxlIHByb3ZpZGVzIGJhc2Ugc3RlcHBlciBjbGFzcyBhbmQgc3RlcHBlciB3cmFwcGVyIGNvbXBvbmVudC5cbiAqL1xuQE5nTW9kdWxlKHtcbiAgaW1wb3J0czogW0NvcmVNb2R1bGUsIERldmljZVNlbGVjdG9yTW9kdWxlLCBPcGVyYXRpb25EZXRhaWxzTW9kdWxlLCBPcGVyYXRpb25TdW1tYXJ5TW9kdWxlXSxcbiAgZGVjbGFyYXRpb25zOiBbQnVsa09wZXJhdGlvblN0ZXBwZXIsIEN1c3RvbVN0ZXBdLFxuICBleHBvcnRzOiBbQnVsa09wZXJhdGlvblN0ZXBwZXIsIEN1c3RvbVN0ZXBdXG59KVxuZXhwb3J0IGNsYXNzIEJ1bGtPcGVyYXRpb25TdGVwcGVyTW9kdWxlIHt9XG4iXX0=