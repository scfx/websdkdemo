import { Injectable } from '@angular/core';
import { Router } from '@angular/router';
import { gettext } from '@c8y/ngx-components';
export class TabsFactory {
    constructor(router) {
        this.router = router;
    }
    get() {
        const tabs = [];
        if (this.router.url.match(/devicecontrol/g)) {
            tabs.push({
                path: 'devicecontrol/single',
                label: gettext('Single operations'),
                icon: 'c8y-icon c8y-icon-device-control',
                priority: 1100,
                orientation: 'horizontal'
            });
            tabs.push({
                path: 'devicecontrol/bulk',
                label: gettext('Bulk operations'),
                icon: 'c8y-icon c8y-icon-energy',
                priority: 1050,
                orientation: 'horizontal'
            });
        }
        return tabs;
    }
}
TabsFactory.decorators = [
    { type: Injectable }
];
TabsFactory.ctorParameters = () => [
    { type: Router }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFicy5mYWN0b3J5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vb3BlcmF0aW9ucy9mYWN0b3JpZXMvdGFicy5mYWN0b3J5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ3pDLE9BQU8sRUFBRSxPQUFPLEVBQW1CLE1BQU0scUJBQXFCLENBQUM7QUFHL0QsTUFBTSxPQUFPLFdBQVc7SUFDdEIsWUFBbUIsTUFBYztRQUFkLFdBQU0sR0FBTixNQUFNLENBQVE7SUFBRyxDQUFDO0lBQ3JDLEdBQUc7UUFDRCxNQUFNLElBQUksR0FBVSxFQUFFLENBQUM7UUFDdkIsSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsZ0JBQWdCLENBQUMsRUFBRTtZQUMzQyxJQUFJLENBQUMsSUFBSSxDQUFDO2dCQUNSLElBQUksRUFBRSxzQkFBc0I7Z0JBQzVCLEtBQUssRUFBRSxPQUFPLENBQUMsbUJBQW1CLENBQUM7Z0JBQ25DLElBQUksRUFBRSxrQ0FBa0M7Z0JBQ3hDLFFBQVEsRUFBRSxJQUFJO2dCQUNkLFdBQVcsRUFBRSxZQUFZO2FBQ25CLENBQUMsQ0FBQztZQUNWLElBQUksQ0FBQyxJQUFJLENBQUM7Z0JBQ1IsSUFBSSxFQUFFLG9CQUFvQjtnQkFDMUIsS0FBSyxFQUFFLE9BQU8sQ0FBQyxpQkFBaUIsQ0FBQztnQkFDakMsSUFBSSxFQUFFLDBCQUEwQjtnQkFDaEMsUUFBUSxFQUFFLElBQUk7Z0JBQ2QsV0FBVyxFQUFFLFlBQVk7YUFDbkIsQ0FBQyxDQUFDO1NBQ1g7UUFFRCxPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7OztZQXZCRixVQUFVOzs7WUFIRixNQUFNIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBSb3V0ZXIgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xyXG5pbXBvcnQgeyBnZXR0ZXh0LCBUYWIsIFRhYkZhY3RvcnkgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzJztcclxuXHJcbkBJbmplY3RhYmxlKClcclxuZXhwb3J0IGNsYXNzIFRhYnNGYWN0b3J5IGltcGxlbWVudHMgVGFiRmFjdG9yeSB7XHJcbiAgY29uc3RydWN0b3IocHVibGljIHJvdXRlcjogUm91dGVyKSB7fVxyXG4gIGdldCgpIHtcclxuICAgIGNvbnN0IHRhYnM6IFRhYltdID0gW107XHJcbiAgICBpZiAodGhpcy5yb3V0ZXIudXJsLm1hdGNoKC9kZXZpY2Vjb250cm9sL2cpKSB7XHJcbiAgICAgIHRhYnMucHVzaCh7XHJcbiAgICAgICAgcGF0aDogJ2RldmljZWNvbnRyb2wvc2luZ2xlJyxcclxuICAgICAgICBsYWJlbDogZ2V0dGV4dCgnU2luZ2xlIG9wZXJhdGlvbnMnKSxcclxuICAgICAgICBpY29uOiAnYzh5LWljb24gYzh5LWljb24tZGV2aWNlLWNvbnRyb2wnLFxyXG4gICAgICAgIHByaW9yaXR5OiAxMTAwLFxyXG4gICAgICAgIG9yaWVudGF0aW9uOiAnaG9yaXpvbnRhbCdcclxuICAgICAgfSBhcyBUYWIpO1xyXG4gICAgICB0YWJzLnB1c2goe1xyXG4gICAgICAgIHBhdGg6ICdkZXZpY2Vjb250cm9sL2J1bGsnLFxyXG4gICAgICAgIGxhYmVsOiBnZXR0ZXh0KCdCdWxrIG9wZXJhdGlvbnMnKSxcclxuICAgICAgICBpY29uOiAnYzh5LWljb24gYzh5LWljb24tZW5lcmd5JyxcclxuICAgICAgICBwcmlvcml0eTogMTA1MCxcclxuICAgICAgICBvcmllbnRhdGlvbjogJ2hvcml6b250YWwnXHJcbiAgICAgIH0gYXMgVGFiKTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gdGFicztcclxuICB9XHJcbn1cclxuIl19