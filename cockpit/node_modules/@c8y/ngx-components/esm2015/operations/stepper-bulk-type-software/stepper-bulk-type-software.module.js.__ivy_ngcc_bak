import { NgModule } from '@angular/core';
import { ReactiveFormsModule } from '@angular/forms';
import { CoreModule, FormsModule, gettext } from '@c8y/ngx-components';
import { RepositoryModule } from '@c8y/ngx-components/repository';
import { BulkOperationStepperModule } from '@c8y/ngx-components/operations/bulk-operation-stepper';
import { HOOK_LIST_BULK_TYPE, baseUrl, BulkOperationType } from '@c8y/ngx-components/operations/bulk-operations-service';
import { ConfirmSoftwareSelectionStepComponent } from './confirm-software-selection-step.component';
import { SelectSoftwareStepComponent } from './select-software-step.component';
import { StepperBulkTypeSoftwareComponent } from './stepper-bulk-type-software.component';
const ɵ0 = {
    type: BulkOperationType.SOFTWARE,
    c8yIcon: 'c8y-tools',
    name: gettext('Software update'),
    path: `${baseUrl}software`,
    component: StepperBulkTypeSoftwareComponent,
    fragments: ['c8y_SoftwareList', 'c8y_SoftwareUpdate'],
    selected: false
};
/** Module for the 'Software update' operation type stepper */
export class StepperBulkTypeSoftwareModule {
}
StepperBulkTypeSoftwareModule.decorators = [
    { type: NgModule, args: [{
                declarations: [
                    StepperBulkTypeSoftwareComponent,
                    ConfirmSoftwareSelectionStepComponent,
                    SelectSoftwareStepComponent
                ],
                imports: [
                    CoreModule,
                    FormsModule,
                    ReactiveFormsModule,
                    BulkOperationStepperModule,
                    RepositoryModule
                ],
                providers: [
                    {
                        provide: HOOK_LIST_BULK_TYPE,
                        useValue: ɵ0,
                        multi: true
                    }
                ],
                entryComponents: [StepperBulkTypeSoftwareComponent],
                exports: [StepperBulkTypeSoftwareComponent]
            },] }
];
export { ɵ0 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RlcHBlci1idWxrLXR5cGUtc29mdHdhcmUubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vb3BlcmF0aW9ucy9zdGVwcGVyLWJ1bGstdHlwZS1zb2Z0d2FyZS9zdGVwcGVyLWJ1bGstdHlwZS1zb2Z0d2FyZS5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUVyRCxPQUFPLEVBQUUsVUFBVSxFQUFFLFdBQVcsRUFBRSxPQUFPLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUN2RSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUNsRSxPQUFPLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSx1REFBdUQsQ0FBQztBQUNuRyxPQUFPLEVBQ0wsbUJBQW1CLEVBQ25CLE9BQU8sRUFDUCxpQkFBaUIsRUFDbEIsTUFBTSx3REFBd0QsQ0FBQztBQUVoRSxPQUFPLEVBQUUscUNBQXFDLEVBQUUsTUFBTSw2Q0FBNkMsQ0FBQztBQUNwRyxPQUFPLEVBQUUsMkJBQTJCLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUMvRSxPQUFPLEVBQUUsZ0NBQWdDLEVBQUUsTUFBTSx3Q0FBd0MsQ0FBQztXQW1CMUU7SUFDUixJQUFJLEVBQUUsaUJBQWlCLENBQUMsUUFBUTtJQUNoQyxPQUFPLEVBQUUsV0FBVztJQUNwQixJQUFJLEVBQUUsT0FBTyxDQUFDLGlCQUFpQixDQUFDO0lBQ2hDLElBQUksRUFBRSxHQUFHLE9BQU8sVUFBVTtJQUMxQixTQUFTLEVBQUUsZ0NBQWdDO0lBQzNDLFNBQVMsRUFBRSxDQUFDLGtCQUFrQixFQUFFLG9CQUFvQixDQUFDO0lBQ3JELFFBQVEsRUFBRSxLQUFLO0NBQ2hCO0FBekJQLDhEQUE4RDtBQWdDOUQsTUFBTSxPQUFPLDZCQUE2Qjs7O1lBL0J6QyxRQUFRLFNBQUM7Z0JBQ1IsWUFBWSxFQUFFO29CQUNaLGdDQUFnQztvQkFDaEMscUNBQXFDO29CQUNyQywyQkFBMkI7aUJBQzVCO2dCQUNELE9BQU8sRUFBRTtvQkFDUCxVQUFVO29CQUNWLFdBQVc7b0JBQ1gsbUJBQW1CO29CQUNuQiwwQkFBMEI7b0JBQzFCLGdCQUFnQjtpQkFDakI7Z0JBQ0QsU0FBUyxFQUFFO29CQUNUO3dCQUNFLE9BQU8sRUFBRSxtQkFBbUI7d0JBQzVCLFFBQVEsSUFRUDt3QkFDRCxLQUFLLEVBQUUsSUFBSTtxQkFDWjtpQkFDRjtnQkFDRCxlQUFlLEVBQUUsQ0FBQyxnQ0FBZ0MsQ0FBQztnQkFDbkQsT0FBTyxFQUFFLENBQUMsZ0NBQWdDLENBQUM7YUFDNUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUmVhY3RpdmVGb3Jtc01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcblxuaW1wb3J0IHsgQ29yZU1vZHVsZSwgRm9ybXNNb2R1bGUsIGdldHRleHQgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzJztcbmltcG9ydCB7IFJlcG9zaXRvcnlNb2R1bGUgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzL3JlcG9zaXRvcnknO1xuaW1wb3J0IHsgQnVsa09wZXJhdGlvblN0ZXBwZXJNb2R1bGUgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzL29wZXJhdGlvbnMvYnVsay1vcGVyYXRpb24tc3RlcHBlcic7XG5pbXBvcnQge1xuICBIT09LX0xJU1RfQlVMS19UWVBFLFxuICBiYXNlVXJsLFxuICBCdWxrT3BlcmF0aW9uVHlwZVxufSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzL29wZXJhdGlvbnMvYnVsay1vcGVyYXRpb25zLXNlcnZpY2UnO1xuXG5pbXBvcnQgeyBDb25maXJtU29mdHdhcmVTZWxlY3Rpb25TdGVwQ29tcG9uZW50IH0gZnJvbSAnLi9jb25maXJtLXNvZnR3YXJlLXNlbGVjdGlvbi1zdGVwLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBTZWxlY3RTb2Z0d2FyZVN0ZXBDb21wb25lbnQgfSBmcm9tICcuL3NlbGVjdC1zb2Z0d2FyZS1zdGVwLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBTdGVwcGVyQnVsa1R5cGVTb2Z0d2FyZUNvbXBvbmVudCB9IGZyb20gJy4vc3RlcHBlci1idWxrLXR5cGUtc29mdHdhcmUuY29tcG9uZW50JztcblxuLyoqIE1vZHVsZSBmb3IgdGhlICdTb2Z0d2FyZSB1cGRhdGUnIG9wZXJhdGlvbiB0eXBlIHN0ZXBwZXIgKi9cbkBOZ01vZHVsZSh7XG4gIGRlY2xhcmF0aW9uczogW1xuICAgIFN0ZXBwZXJCdWxrVHlwZVNvZnR3YXJlQ29tcG9uZW50LFxuICAgIENvbmZpcm1Tb2Z0d2FyZVNlbGVjdGlvblN0ZXBDb21wb25lbnQsXG4gICAgU2VsZWN0U29mdHdhcmVTdGVwQ29tcG9uZW50XG4gIF0sXG4gIGltcG9ydHM6IFtcbiAgICBDb3JlTW9kdWxlLFxuICAgIEZvcm1zTW9kdWxlLFxuICAgIFJlYWN0aXZlRm9ybXNNb2R1bGUsXG4gICAgQnVsa09wZXJhdGlvblN0ZXBwZXJNb2R1bGUsXG4gICAgUmVwb3NpdG9yeU1vZHVsZVxuICBdLFxuICBwcm92aWRlcnM6IFtcbiAgICB7XG4gICAgICBwcm92aWRlOiBIT09LX0xJU1RfQlVMS19UWVBFLFxuICAgICAgdXNlVmFsdWU6IHtcbiAgICAgICAgdHlwZTogQnVsa09wZXJhdGlvblR5cGUuU09GVFdBUkUsXG4gICAgICAgIGM4eUljb246ICdjOHktdG9vbHMnLFxuICAgICAgICBuYW1lOiBnZXR0ZXh0KCdTb2Z0d2FyZSB1cGRhdGUnKSxcbiAgICAgICAgcGF0aDogYCR7YmFzZVVybH1zb2Z0d2FyZWAsXG4gICAgICAgIGNvbXBvbmVudDogU3RlcHBlckJ1bGtUeXBlU29mdHdhcmVDb21wb25lbnQsXG4gICAgICAgIGZyYWdtZW50czogWydjOHlfU29mdHdhcmVMaXN0JywgJ2M4eV9Tb2Z0d2FyZVVwZGF0ZSddLFxuICAgICAgICBzZWxlY3RlZDogZmFsc2VcbiAgICAgIH0sXG4gICAgICBtdWx0aTogdHJ1ZVxuICAgIH1cbiAgXSxcbiAgZW50cnlDb21wb25lbnRzOiBbU3RlcHBlckJ1bGtUeXBlU29mdHdhcmVDb21wb25lbnRdLFxuICBleHBvcnRzOiBbU3RlcHBlckJ1bGtUeXBlU29mdHdhcmVDb21wb25lbnRdXG59KVxuZXhwb3J0IGNsYXNzIFN0ZXBwZXJCdWxrVHlwZVNvZnR3YXJlTW9kdWxlIHt9XG4iXX0=