import { __awaiter } from "tslib";
import { Component, Input, ViewChild } from '@angular/core';
import { Router } from '@angular/router';
import { assign, get } from 'lodash-es';
import { OperationService, OperationStatus } from '@c8y/client';
import { AlertService, gettext, operationStatusClasses, operationStatusIcons } from '@c8y/ngx-components';
export class SingleOperationListItemComponent {
    constructor(router, operationService, alertService) {
        this.router = router;
        this.operationService = operationService;
        this.alertService = alertService;
        this.collapsed = true;
        this.readOnly = false;
        this.tabs = [];
        this.statusIcons = operationStatusIcons;
        this.statusClasses = operationStatusClasses;
        this.OperationStatus = OperationStatus;
    }
    get displayedDescription() {
        const commandText = get(this.operation, 'c8y_Command.text');
        const opDescription = get(this.operation, 'description');
        return commandText || opDescription || gettext('(no command text or description available)');
    }
    ngOnInit() {
        this.statusIcons = operationStatusIcons;
        this.statusClasses = operationStatusClasses;
        this.tabs = [
            {
                label: gettext('Details'),
                icon: 'asterisk',
                template: this.detailsTabTemplate
            },
            {
                label: gettext('History of changes'),
                icon: 'archive',
                template: this.historyOfChangesTabTemplate
            }
        ];
        this.selectedTab = this.tabs[0];
    }
    scheduleAsBulkOperation() {
        this.router.navigateByUrl(`/devicecontrol/single/create-bulk/${this.operation.id}`);
    }
    cancel() {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                const operationAfterUpdate = (yield this.operationService.update({
                    id: this.operation.id,
                    status: OperationStatus.FAILED,
                    failureReason: gettext('Operation cancelled by user.')
                })).data;
                assign(this.operation, operationAfterUpdate);
                this.alertService.success(gettext('Operation cancelled.'));
            }
            catch (ex) {
                this.alertService.addServerFailure(ex);
            }
        });
    }
}
SingleOperationListItemComponent.decorators = [
    { type: Component, args: [{
                selector: 'c8y-single-operation-list-item',
                template: "<c8y-li\n  class=\"c8y-list__item--double-actions\"\n  [ngClass]=\"{ 'c8y-list__item--no-expand': !collapsed }\"\n  [collapsed]=\"collapsed\"\n  #listItem\n  id=\"single-operation-{{ operation.id }}\"\n>\n  <c8y-li-icon>\n    <i [c8yIcon]=\"statusIcons[operation.status]\" [ngClass]=\"statusClasses[operation.status]\"></i>\n  </c8y-li-icon>\n  <div [ngClass]=\"{ 'content-flex-80': !readOnly, 'content-flex-50': readOnly }\">\n    <div class=\"col-6\">\n      <span class=\"text-truncate\" title=\"{{ displayedDescription | translate }}\">\n        {{ displayedDescription | translate }}\n      </span>\n    </div>\n    <div class=\"flex-grow\"></div>\n    <div class=\"col-3\">\n      <div class=\"m-r-16\">\n        <small class=\"icon-flex\">\n          <i c8yIcon=\"calendar\" class=\"m-r-4\"></i>\n          <span>\n            {{ operation.creationTime | c8yDate }}\n          </span>\n        </small>\n      </div>\n    </div>\n  </div>\n  <div class=\"c8y-list__item__footer\">\n    <div class=\"m-r-16\">\n      <small class=\"icon-flex\">\n        <i c8yIcon=\"exchange\" class=\"m-r-4\"></i>\n        <span>\n          <a href=\"#/device/{{ operation.deviceId }}\">{{ operation.deviceName }}</a>\n        </span>\n      </small>\n    </div>\n  </div>\n  <ng-container>\n    <c8y-li-action\n      label=\"{{ 'Schedule as bulk operation' | translate }}\"\n      (click)=\"scheduleAsBulkOperation()\"\n      icon=\"c8y-energy\"\n    >\n    </c8y-li-action>\n    <c8y-li-action\n      *ngIf=\"!readOnly && operation.status === OperationStatus.PENDING\"\n      label=\"{{ 'Cancel`operation`' | translate }}\"\n      (click)=\"cancel()\"\n      icon=\"times\"\n    >\n    </c8y-li-action>\n  </ng-container>\n  <c8y-li-collapse class=\"m-b-16\">\n    <div class=\"tabContainer\">\n      <ul class=\"nav nav-tabs nav-tabsc8y\">\n        <li [ngClass]=\"{ active: selectedTab === tab }\" *ngFor=\"let tab of tabs\">\n          <button [title]=\"tab.label | translate\" (click)=\"selectedTab = tab\" class=\"btn-clean\">\n            <i [c8yIcon]=\"tab.icon\"></i>\n            <span class=\"txt\">{{ tab.label | translate }}</span>\n          </button>\n        </li>\n      </ul>\n    </div>\n\n    <ng-container *ngTemplateOutlet=\"selectedTab.template\"></ng-container>\n\n    <ng-template #details>\n      <c8y-single-operation-details [operation]=\"operation\" [readOnly]=\"readOnly\">\n      </c8y-single-operation-details>\n    </ng-template>\n\n    <ng-template #historyOfChanges>\n      <c8y-audit-log [source]=\"operation.id\"></c8y-audit-log>\n    </ng-template>\n  </c8y-li-collapse>\n</c8y-li>\n"
            },] }
];
SingleOperationListItemComponent.ctorParameters = () => [
    { type: Router },
    { type: OperationService },
    { type: AlertService }
];
SingleOperationListItemComponent.propDecorators = {
    operation: [{ type: Input }],
    collapsed: [{ type: Input }],
    readOnly: [{ type: Input }],
    listItem: [{ type: ViewChild, args: ['listItem', { static: true },] }],
    detailsTabTemplate: [{ type: ViewChild, args: ['details', { static: true },] }],
    historyOfChangesTabTemplate: [{ type: ViewChild, args: ['historyOfChanges', { static: true },] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2luZ2xlLW9wZXJhdGlvbi1saXN0LWl0ZW0uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vb3BlcmF0aW9ucy9zaW5nbGUtb3BlcmF0aW9uLWRldGFpbHMvc2luZ2xlLW9wZXJhdGlvbi1saXN0LWl0ZW0uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBVSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDcEUsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ3pDLE9BQU8sRUFBRSxNQUFNLEVBQUUsR0FBRyxFQUFFLE1BQU0sV0FBVyxDQUFDO0FBQ3hDLE9BQU8sRUFBYyxnQkFBZ0IsRUFBRSxlQUFlLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDNUUsT0FBTyxFQUNMLFlBQVksRUFHWixPQUFPLEVBQ1Asc0JBQXNCLEVBQ3RCLG9CQUFvQixFQUNyQixNQUFNLHFCQUFxQixDQUFDO0FBTTdCLE1BQU0sT0FBTyxnQ0FBZ0M7SUFxQjNDLFlBQ1UsTUFBYyxFQUNkLGdCQUFrQyxFQUNsQyxZQUEwQjtRQUYxQixXQUFNLEdBQU4sTUFBTSxDQUFRO1FBQ2QscUJBQWdCLEdBQWhCLGdCQUFnQixDQUFrQjtRQUNsQyxpQkFBWSxHQUFaLFlBQVksQ0FBYztRQXRCM0IsY0FBUyxHQUFZLElBQUksQ0FBQztRQUMxQixhQUFRLEdBQVksS0FBSyxDQUFDO1FBTW5DLFNBQUksR0FBVSxFQUFFLENBQUM7UUFFakIsZ0JBQVcsR0FBRyxvQkFBb0IsQ0FBQztRQUNuQyxrQkFBYSxHQUFHLHNCQUFzQixDQUFDO1FBQ3ZDLG9CQUFlLEdBQUcsZUFBZSxDQUFDO0lBWS9CLENBQUM7SUFWSixJQUFJLG9CQUFvQjtRQUN0QixNQUFNLFdBQVcsR0FBRyxHQUFHLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBRSxrQkFBa0IsQ0FBQyxDQUFDO1FBQzVELE1BQU0sYUFBYSxHQUFHLEdBQUcsQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFLGFBQWEsQ0FBQyxDQUFDO1FBQ3pELE9BQU8sV0FBVyxJQUFJLGFBQWEsSUFBSSxPQUFPLENBQUMsNENBQTRDLENBQUMsQ0FBQztJQUMvRixDQUFDO0lBUUQsUUFBUTtRQUNOLElBQUksQ0FBQyxXQUFXLEdBQUcsb0JBQW9CLENBQUM7UUFDeEMsSUFBSSxDQUFDLGFBQWEsR0FBRyxzQkFBc0IsQ0FBQztRQUU1QyxJQUFJLENBQUMsSUFBSSxHQUFHO1lBQ1Y7Z0JBQ0UsS0FBSyxFQUFFLE9BQU8sQ0FBQyxTQUFTLENBQUM7Z0JBQ3pCLElBQUksRUFBRSxVQUFVO2dCQUNoQixRQUFRLEVBQUUsSUFBSSxDQUFDLGtCQUFrQjthQUMzQjtZQUNSO2dCQUNFLEtBQUssRUFBRSxPQUFPLENBQUMsb0JBQW9CLENBQUM7Z0JBQ3BDLElBQUksRUFBRSxTQUFTO2dCQUNmLFFBQVEsRUFBRSxJQUFJLENBQUMsMkJBQTJCO2FBQ3BDO1NBQ1QsQ0FBQztRQUNGLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNsQyxDQUFDO0lBRUQsdUJBQXVCO1FBQ3JCLElBQUksQ0FBQyxNQUFNLENBQUMsYUFBYSxDQUFDLHFDQUFxQyxJQUFJLENBQUMsU0FBUyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFDdEYsQ0FBQztJQUVLLE1BQU07O1lBQ1YsSUFBSTtnQkFDRixNQUFNLG9CQUFvQixHQUFHLENBQUMsTUFBTSxJQUFJLENBQUMsZ0JBQWdCLENBQUMsTUFBTSxDQUFDO29CQUMvRCxFQUFFLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxFQUFFO29CQUNyQixNQUFNLEVBQUUsZUFBZSxDQUFDLE1BQU07b0JBQzlCLGFBQWEsRUFBRSxPQUFPLENBQUMsOEJBQThCLENBQUM7aUJBQ3ZELENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQztnQkFDVCxNQUFNLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBRSxvQkFBb0IsQ0FBQyxDQUFDO2dCQUM3QyxJQUFJLENBQUMsWUFBWSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsc0JBQXNCLENBQUMsQ0FBQyxDQUFDO2FBQzVEO1lBQUMsT0FBTyxFQUFFLEVBQUU7Z0JBQ1gsSUFBSSxDQUFDLFlBQVksQ0FBQyxnQkFBZ0IsQ0FBQyxFQUFFLENBQUMsQ0FBQzthQUN4QztRQUNILENBQUM7S0FBQTs7O1lBbEVGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsZ0NBQWdDO2dCQUMxQyxpa0ZBQTBEO2FBQzNEOzs7WUFmUSxNQUFNO1lBRU0sZ0JBQWdCO1lBRW5DLFlBQVk7Ozt3QkFhWCxLQUFLO3dCQUNMLEtBQUs7dUJBQ0wsS0FBSzt1QkFFTCxTQUFTLFNBQUMsVUFBVSxFQUFFLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRTtpQ0FDdEMsU0FBUyxTQUFDLFNBQVMsRUFBRSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUU7MENBQ3JDLFNBQVMsU0FBQyxrQkFBa0IsRUFBRSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPbkluaXQsIFZpZXdDaGlsZCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUm91dGVyIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcbmltcG9ydCB7IGFzc2lnbiwgZ2V0IH0gZnJvbSAnbG9kYXNoLWVzJztcbmltcG9ydCB7IElPcGVyYXRpb24sIE9wZXJhdGlvblNlcnZpY2UsIE9wZXJhdGlvblN0YXR1cyB9IGZyb20gJ0BjOHkvY2xpZW50JztcbmltcG9ydCB7XG4gIEFsZXJ0U2VydmljZSxcbiAgTGlzdEl0ZW1Db21wb25lbnQsXG4gIFRhYixcbiAgZ2V0dGV4dCxcbiAgb3BlcmF0aW9uU3RhdHVzQ2xhc3NlcyxcbiAgb3BlcmF0aW9uU3RhdHVzSWNvbnNcbn0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cyc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2M4eS1zaW5nbGUtb3BlcmF0aW9uLWxpc3QtaXRlbScsXG4gIHRlbXBsYXRlVXJsOiAnLi9zaW5nbGUtb3BlcmF0aW9uLWxpc3QtaXRlbS5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgU2luZ2xlT3BlcmF0aW9uTGlzdEl0ZW1Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICBASW5wdXQoKSBvcGVyYXRpb246IFBhcnRpYWw8SU9wZXJhdGlvbj47XG4gIEBJbnB1dCgpIGNvbGxhcHNlZDogYm9vbGVhbiA9IHRydWU7XG4gIEBJbnB1dCgpIHJlYWRPbmx5OiBib29sZWFuID0gZmFsc2U7XG5cbiAgQFZpZXdDaGlsZCgnbGlzdEl0ZW0nLCB7IHN0YXRpYzogdHJ1ZSB9KSBsaXN0SXRlbTogTGlzdEl0ZW1Db21wb25lbnQ7XG4gIEBWaWV3Q2hpbGQoJ2RldGFpbHMnLCB7IHN0YXRpYzogdHJ1ZSB9KSBkZXRhaWxzVGFiVGVtcGxhdGU6IGFueTtcbiAgQFZpZXdDaGlsZCgnaGlzdG9yeU9mQ2hhbmdlcycsIHsgc3RhdGljOiB0cnVlIH0pIGhpc3RvcnlPZkNoYW5nZXNUYWJUZW1wbGF0ZTogYW55O1xuXG4gIHRhYnM6IFRhYltdID0gW107XG4gIHNlbGVjdGVkVGFiOiBUYWI7XG4gIHN0YXR1c0ljb25zID0gb3BlcmF0aW9uU3RhdHVzSWNvbnM7XG4gIHN0YXR1c0NsYXNzZXMgPSBvcGVyYXRpb25TdGF0dXNDbGFzc2VzO1xuICBPcGVyYXRpb25TdGF0dXMgPSBPcGVyYXRpb25TdGF0dXM7XG5cbiAgZ2V0IGRpc3BsYXllZERlc2NyaXB0aW9uKCkge1xuICAgIGNvbnN0IGNvbW1hbmRUZXh0ID0gZ2V0KHRoaXMub3BlcmF0aW9uLCAnYzh5X0NvbW1hbmQudGV4dCcpO1xuICAgIGNvbnN0IG9wRGVzY3JpcHRpb24gPSBnZXQodGhpcy5vcGVyYXRpb24sICdkZXNjcmlwdGlvbicpO1xuICAgIHJldHVybiBjb21tYW5kVGV4dCB8fCBvcERlc2NyaXB0aW9uIHx8IGdldHRleHQoJyhubyBjb21tYW5kIHRleHQgb3IgZGVzY3JpcHRpb24gYXZhaWxhYmxlKScpO1xuICB9XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSByb3V0ZXI6IFJvdXRlcixcbiAgICBwcml2YXRlIG9wZXJhdGlvblNlcnZpY2U6IE9wZXJhdGlvblNlcnZpY2UsXG4gICAgcHJpdmF0ZSBhbGVydFNlcnZpY2U6IEFsZXJ0U2VydmljZVxuICApIHt9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5zdGF0dXNJY29ucyA9IG9wZXJhdGlvblN0YXR1c0ljb25zO1xuICAgIHRoaXMuc3RhdHVzQ2xhc3NlcyA9IG9wZXJhdGlvblN0YXR1c0NsYXNzZXM7XG5cbiAgICB0aGlzLnRhYnMgPSBbXG4gICAgICB7XG4gICAgICAgIGxhYmVsOiBnZXR0ZXh0KCdEZXRhaWxzJyksXG4gICAgICAgIGljb246ICdhc3RlcmlzaycsXG4gICAgICAgIHRlbXBsYXRlOiB0aGlzLmRldGFpbHNUYWJUZW1wbGF0ZVxuICAgICAgfSBhcyBUYWIsXG4gICAgICB7XG4gICAgICAgIGxhYmVsOiBnZXR0ZXh0KCdIaXN0b3J5IG9mIGNoYW5nZXMnKSxcbiAgICAgICAgaWNvbjogJ2FyY2hpdmUnLFxuICAgICAgICB0ZW1wbGF0ZTogdGhpcy5oaXN0b3J5T2ZDaGFuZ2VzVGFiVGVtcGxhdGVcbiAgICAgIH0gYXMgVGFiXG4gICAgXTtcbiAgICB0aGlzLnNlbGVjdGVkVGFiID0gdGhpcy50YWJzWzBdO1xuICB9XG5cbiAgc2NoZWR1bGVBc0J1bGtPcGVyYXRpb24oKSB7XG4gICAgdGhpcy5yb3V0ZXIubmF2aWdhdGVCeVVybChgL2RldmljZWNvbnRyb2wvc2luZ2xlL2NyZWF0ZS1idWxrLyR7dGhpcy5vcGVyYXRpb24uaWR9YCk7XG4gIH1cblxuICBhc3luYyBjYW5jZWwoKSB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IG9wZXJhdGlvbkFmdGVyVXBkYXRlID0gKGF3YWl0IHRoaXMub3BlcmF0aW9uU2VydmljZS51cGRhdGUoe1xuICAgICAgICBpZDogdGhpcy5vcGVyYXRpb24uaWQsXG4gICAgICAgIHN0YXR1czogT3BlcmF0aW9uU3RhdHVzLkZBSUxFRCxcbiAgICAgICAgZmFpbHVyZVJlYXNvbjogZ2V0dGV4dCgnT3BlcmF0aW9uIGNhbmNlbGxlZCBieSB1c2VyLicpXG4gICAgICB9KSkuZGF0YTtcbiAgICAgIGFzc2lnbih0aGlzLm9wZXJhdGlvbiwgb3BlcmF0aW9uQWZ0ZXJVcGRhdGUpO1xuICAgICAgdGhpcy5hbGVydFNlcnZpY2Uuc3VjY2VzcyhnZXR0ZXh0KCdPcGVyYXRpb24gY2FuY2VsbGVkLicpKTtcbiAgICB9IGNhdGNoIChleCkge1xuICAgICAgdGhpcy5hbGVydFNlcnZpY2UuYWRkU2VydmVyRmFpbHVyZShleCk7XG4gICAgfVxuICB9XG59XG4iXX0=