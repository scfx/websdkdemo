import { NgModule } from '@angular/core';
import { CollapseModule } from 'ngx-bootstrap/collapse';
import { PopoverModule } from 'ngx-bootstrap/popover';
import { TooltipModule } from 'ngx-bootstrap/tooltip';
import { CoreModule } from '@c8y/ngx-components';
import { BulkOperationsListModule } from '@c8y/ngx-components/operations/bulk-operations-list';
import { BulkOperationsServiceModule } from '@c8y/ngx-components/operations/bulk-operations-service';
import { SingleOperationDetailsService } from './single-operation-details.service';
import { SingleOperationComponent } from './single-operation.component';
import { SingleOperationModalComponent } from './single-operation-modal.component';
import { SingleOperationListItemComponent } from './single-operation-list-item.component';
import { SingleOperationDetailsComponent } from './single-operation-details.component';
/**
 * This module allows to display details of a single operation in a modal.
 */
import * as ɵngcc0 from '@angular/core';
export class SingleOperationDetailsModule {
}
SingleOperationDetailsModule.ɵfac = function SingleOperationDetailsModule_Factory(t) { return new (t || SingleOperationDetailsModule)(); };
SingleOperationDetailsModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: SingleOperationDetailsModule });
SingleOperationDetailsModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [SingleOperationDetailsService], imports: [[
            CoreModule,
            PopoverModule,
            TooltipModule,
            CollapseModule,
            BulkOperationsListModule,
            BulkOperationsServiceModule
        ]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SingleOperationDetailsModule, [{
        type: NgModule,
        args: [{
                imports: [
                    CoreModule,
                    PopoverModule,
                    TooltipModule,
                    CollapseModule,
                    BulkOperationsListModule,
                    BulkOperationsServiceModule
                ],
                providers: [SingleOperationDetailsService],
                declarations: [
                    SingleOperationComponent,
                    SingleOperationModalComponent,
                    SingleOperationListItemComponent,
                    SingleOperationDetailsComponent
                ],
                entryComponents: [
                    SingleOperationComponent,
                    SingleOperationModalComponent,
                    SingleOperationListItemComponent,
                    SingleOperationDetailsComponent
                ],
                exports: [SingleOperationComponent]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SingleOperationDetailsModule, { declarations: function () { return [SingleOperationComponent,
        SingleOperationModalComponent,
        SingleOperationListItemComponent,
        SingleOperationDetailsComponent]; }, imports: function () { return [CoreModule,
        PopoverModule,
        TooltipModule,
        CollapseModule,
        BulkOperationsListModule,
        BulkOperationsServiceModule]; }, exports: function () { return [SingleOperationComponent]; } }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2luZ2xlLW9wZXJhdGlvbi1kZXRhaWxzLm1vZHVsZS5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vb3BlcmF0aW9ucy9zaW5nbGUtb3BlcmF0aW9uLWRldGFpbHMvc2luZ2xlLW9wZXJhdGlvbi1kZXRhaWxzLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUN4RCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDdEQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBRXRELE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUNqRCxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSxxREFBcUQsQ0FBQztBQUMvRixPQUFPLEVBQUUsMkJBQTJCLEVBQUUsTUFBTSx3REFBd0QsQ0FBQztBQUVyRyxPQUFPLEVBQUUsNkJBQTZCLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQztBQUNuRixPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUN4RSxPQUFPLEVBQUUsNkJBQTZCLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQztBQUNuRixPQUFPLEVBQUUsZ0NBQWdDLEVBQUUsTUFBTSx3Q0FBd0MsQ0FBQztBQUMxRixPQUFPLEVBQUUsK0JBQStCLEVBQUUsTUFBTSxzQ0FBc0MsQ0FBQztBQUV2RjtBQUNBO0FBQ0EsR0FBRzs7QUF5QkgsTUFBTSxPQUFPLDRCQUE0QjtBQUFHO3dEQXhCM0MsUUFBUSxTQUFDLGtCQUNSLE9BQU8sRUFBRSxzQkFDUCxVQUFVO2NBQ1YsYUFBYSxzQkFDYixhQUFhLHNCQUNiLGNBQWM7S0FDZCx3QkFBd0Isc0JBQ3hCLDJCQUEyQixrQkFDNUIsa0JBQ0QsU0FBUyxFQUFFLENBQUM7dUJBQTZCO0FBQUMsa0JBQzFDO0dBQVksRUFBRTtBQUNaLHdCQUF3QjtrQkFDeEI7U0FBNkIsc0JBQzdCOztRQUFnQyxzQkFDaEMsK0JBQStCLGtCQUNoQyxrQkFDRCxlQUFlLEVBQUU7WUFDZjtZQUF3QjtpQkFDeEI7bUJBQTZCO1NBQzdCO01BQWdDLHNCQUNoQzt3QkFBK0I7TUFDaEMsa0JBQ0QsT0FBTyxFQUFFLENBQUM7WUFBd0IsQ0FBQyxjQUNwQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OEdBQ0k7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb2xsYXBzZU1vZHVsZSB9IGZyb20gJ25neC1ib290c3RyYXAvY29sbGFwc2UnO1xuaW1wb3J0IHsgUG9wb3Zlck1vZHVsZSB9IGZyb20gJ25neC1ib290c3RyYXAvcG9wb3Zlcic7XG5pbXBvcnQgeyBUb29sdGlwTW9kdWxlIH0gZnJvbSAnbmd4LWJvb3RzdHJhcC90b29sdGlwJztcblxuaW1wb3J0IHsgQ29yZU1vZHVsZSB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMnO1xuaW1wb3J0IHsgQnVsa09wZXJhdGlvbnNMaXN0TW9kdWxlIH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cy9vcGVyYXRpb25zL2J1bGstb3BlcmF0aW9ucy1saXN0JztcbmltcG9ydCB7IEJ1bGtPcGVyYXRpb25zU2VydmljZU1vZHVsZSB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMvb3BlcmF0aW9ucy9idWxrLW9wZXJhdGlvbnMtc2VydmljZSc7XG5cbmltcG9ydCB7IFNpbmdsZU9wZXJhdGlvbkRldGFpbHNTZXJ2aWNlIH0gZnJvbSAnLi9zaW5nbGUtb3BlcmF0aW9uLWRldGFpbHMuc2VydmljZSc7XG5pbXBvcnQgeyBTaW5nbGVPcGVyYXRpb25Db21wb25lbnQgfSBmcm9tICcuL3NpbmdsZS1vcGVyYXRpb24uY29tcG9uZW50JztcbmltcG9ydCB7IFNpbmdsZU9wZXJhdGlvbk1vZGFsQ29tcG9uZW50IH0gZnJvbSAnLi9zaW5nbGUtb3BlcmF0aW9uLW1vZGFsLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBTaW5nbGVPcGVyYXRpb25MaXN0SXRlbUNvbXBvbmVudCB9IGZyb20gJy4vc2luZ2xlLW9wZXJhdGlvbi1saXN0LWl0ZW0uY29tcG9uZW50JztcbmltcG9ydCB7IFNpbmdsZU9wZXJhdGlvbkRldGFpbHNDb21wb25lbnQgfSBmcm9tICcuL3NpbmdsZS1vcGVyYXRpb24tZGV0YWlscy5jb21wb25lbnQnO1xuXG4vKipcbiAqIFRoaXMgbW9kdWxlIGFsbG93cyB0byBkaXNwbGF5IGRldGFpbHMgb2YgYSBzaW5nbGUgb3BlcmF0aW9uIGluIGEgbW9kYWwuXG4gKi9cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtcbiAgICBDb3JlTW9kdWxlLFxuICAgIFBvcG92ZXJNb2R1bGUsXG4gICAgVG9vbHRpcE1vZHVsZSxcbiAgICBDb2xsYXBzZU1vZHVsZSxcbiAgICBCdWxrT3BlcmF0aW9uc0xpc3RNb2R1bGUsXG4gICAgQnVsa09wZXJhdGlvbnNTZXJ2aWNlTW9kdWxlXG4gIF0sXG4gIHByb3ZpZGVyczogW1NpbmdsZU9wZXJhdGlvbkRldGFpbHNTZXJ2aWNlXSxcbiAgZGVjbGFyYXRpb25zOiBbXG4gICAgU2luZ2xlT3BlcmF0aW9uQ29tcG9uZW50LFxuICAgIFNpbmdsZU9wZXJhdGlvbk1vZGFsQ29tcG9uZW50LFxuICAgIFNpbmdsZU9wZXJhdGlvbkxpc3RJdGVtQ29tcG9uZW50LFxuICAgIFNpbmdsZU9wZXJhdGlvbkRldGFpbHNDb21wb25lbnRcbiAgXSxcbiAgZW50cnlDb21wb25lbnRzOiBbXG4gICAgU2luZ2xlT3BlcmF0aW9uQ29tcG9uZW50LFxuICAgIFNpbmdsZU9wZXJhdGlvbk1vZGFsQ29tcG9uZW50LFxuICAgIFNpbmdsZU9wZXJhdGlvbkxpc3RJdGVtQ29tcG9uZW50LFxuICAgIFNpbmdsZU9wZXJhdGlvbkRldGFpbHNDb21wb25lbnRcbiAgXSxcbiAgZXhwb3J0czogW1NpbmdsZU9wZXJhdGlvbkNvbXBvbmVudF1cbn0pXG5leHBvcnQgY2xhc3MgU2luZ2xlT3BlcmF0aW9uRGV0YWlsc01vZHVsZSB7fVxuIl19