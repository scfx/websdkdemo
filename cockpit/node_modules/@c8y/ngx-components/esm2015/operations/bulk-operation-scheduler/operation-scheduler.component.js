import { Component, forwardRef, Input } from '@angular/core';
import { FormBuilder, NG_VALIDATORS, NG_VALUE_ACCESSOR, Validators } from '@angular/forms';
import { gettext } from '@c8y/ngx-components';
import { isEmpty } from 'lodash-es';
import { throttleTime } from 'rxjs/operators';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/forms';
import * as ɵngcc2 from '@c8y/ngx-components';
import * as ɵngcc3 from 'ngx-bootstrap/datepicker';
import * as ɵngcc4 from '@angular/common';
import * as ɵngcc5 from 'ngx-bootstrap/timepicker';

function OperationSchedulerComponent_c8y_messages_8_c8y_message_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "c8y-message", 2);
    ɵngcc0.ɵɵtext(1, " This field is required. ");
    ɵngcc0.ɵɵelementEnd();
} }
function OperationSchedulerComponent_c8y_messages_8_c8y_message_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "c8y-message", 2);
    ɵngcc0.ɵɵtext(1, " Select time in the future. ");
    ɵngcc0.ɵɵelementEnd();
} }
function OperationSchedulerComponent_c8y_messages_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "c8y-messages");
    ɵngcc0.ɵɵtemplate(1, OperationSchedulerComponent_c8y_messages_8_c8y_message_1_Template, 2, 0, "c8y-message", 16);
    ɵngcc0.ɵɵtemplate(2, OperationSchedulerComponent_c8y_messages_8_c8y_message_2_Template, 2, 0, "c8y-message", 16);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.pickerErrors.required);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.pickerErrors.dateValidation && !ctx_r0.pickerErrors.required);
} }
function OperationSchedulerComponent_c8y_messages_25_c8y_message_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "c8y-message", 2);
    ɵngcc0.ɵɵtext(1, " This field is required. ");
    ɵngcc0.ɵɵelementEnd();
} }
const _c0 = function (a0) { return { delay: a0 }; };
function OperationSchedulerComponent_c8y_messages_25_c8y_message_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "c8y-message", 18);
    ɵngcc0.ɵɵdisableBindings();
    ɵngcc0.ɵɵtext(1, " Minimum value is {{ delay }}. ");
    ɵngcc0.ɵɵenableBindings();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("translateParams", ɵngcc0.ɵɵpureFunction1(1, _c0, ctx_r5.minDelay));
} }
function OperationSchedulerComponent_c8y_messages_25_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "c8y-messages");
    ɵngcc0.ɵɵtemplate(1, OperationSchedulerComponent_c8y_messages_25_c8y_message_1_Template, 2, 0, "c8y-message", 16);
    ɵngcc0.ɵɵtemplate(2, OperationSchedulerComponent_c8y_messages_25_c8y_message_2_Template, 2, 3, "c8y-message", 17);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.delayErrors.required);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.delayErrors.min && !ctx_r1.delayErrors.required);
} }
const _c1 = function () { return { customTodayClass: "today" }; };
export class OperationSchedulerComponent {
    constructor(formBuilder) {
        this.formBuilder = formBuilder;
        this.placeholder = gettext('Start date');
        this.delayErrors = null;
        this.pickerErrors = null;
        this.DELAY_SECONDS_DEFAULT = 1;
        this.DELAY_MILLISECONDS_DEFAULT = 1;
        this.MINUTES_AHEAD_DEFAULT = 5;
        this.delaySeconds = this.DELAY_SECONDS_DEFAULT;
        this.delayMilliseconds = this.DELAY_MILLISECONDS_DEFAULT;
        this.minutesAhead = this.MINUTES_AHEAD_DEFAULT;
        this.currentUnit = 'seconds';
    }
    set _minutesAhead(minutes) {
        if (minutes && minutes > this.MINUTES_AHEAD_DEFAULT) {
            this.minutesAhead = minutes;
        }
    }
    set _delayConfig(config) {
        if (config) {
            if (config.seconds > this.DELAY_SECONDS_DEFAULT) {
                this.delaySeconds = config.seconds;
            }
            if (config.milliseconds > this.DELAY_MILLISECONDS_DEFAULT) {
                this.delayMilliseconds = config.milliseconds;
            }
        }
    }
    ngOnInit() {
        this.minDate = new Date();
        this.initialDate = new Date(this.minDate.setMinutes(this.minDate.getMinutes() + this.minutesAhead));
        this.minDelay = this.delaySeconds;
        this.fgOperationScheduler = this.formBuilder.group({
            picker: ['', [Validators.required, this.dateValidation]],
            time: ['', [Validators.required, this.timeValidation]],
            delay: ['', [Validators.required, Validators.min(this.minDelay)]],
            unit: ['seconds']
        });
        this.fgOperationScheduler.patchValue({
            picker: this.initialDate,
            time: this.initialDate,
            delay: this.minDelay
        });
        // Due to the validation of picker and time it could be possible that value changes
        // are emitted more than once. Therefore we throttle the emits.
        const valueChanges$ = this.fgOperationScheduler.valueChanges.pipe(throttleTime(100));
        this.subscription = valueChanges$.subscribe(data => {
            this.delayErrors = this.fgOperationScheduler.controls.delay.errors;
            this.pickerErrors = this.fgOperationScheduler.controls.picker.errors;
            this.convertDelayHandler(data.unit);
            this.emitData(data);
        });
    }
    ngOnDestroy() {
        if (this.subscription && !this.subscription.closed) {
            this.subscription.unsubscribe();
        }
    }
    writeValue(value) {
        if (value) {
            this.fgOperationScheduler.patchValue({
                picker: value.scheduledDate,
                time: value.scheduledDate,
                delay: value.delayInSeconds > 1 ? value.delayInSeconds : value.delayInSeconds * 1000,
                unit: value.delayInSeconds > 1 ? 'seconds' : 'milliseconds'
            });
        }
    }
    registerOnChange(fn) {
        this.onChange = fn;
    }
    registerOnTouched(fn) {
        this.onTouched = fn;
    }
    setDisabledState(isDisabled) {
        isDisabled ? this.fgOperationScheduler.disable() : this.fgOperationScheduler.enable();
    }
    validate() {
        if (this.fgOperationScheduler.invalid) {
            return Object.assign(Object.assign(Object.assign({}, this.fgOperationScheduler.controls.picker.errors), this.fgOperationScheduler.controls.time.errors), this.fgOperationScheduler.controls.delay.errors);
        }
    }
    registerOnValidatorChange(fn) {
        this.onValidatorChanged = fn;
    }
    markAsTouched() {
        if (this.onTouched) {
            this.onTouched();
        }
    }
    convertDelayHandler(unit) {
        if (this.currentUnit === unit) {
            return;
        }
        this.currentUnit = unit;
        this.convertDelay(this.currentUnit);
        // update validator on delay control to make sure that
        // switching from minutes to seconds or vice versa does not harm validation.
        this.fgOperationScheduler.controls.delay.setValidators([Validators.required]);
        this.fgOperationScheduler.controls.delay.updateValueAndValidity();
    }
    emitData(data) {
        if (this.onValidatorChanged) {
            this.onValidatorChanged();
        }
        if (data.picker && data.time) {
            data.picker = this.combineDateAndTime(data.picker, data.time);
        }
        this.convertDelay(this.currentUnit);
        data.delayInSeconds = this.delayInSeconds;
        if (this.onChange) {
            this.onChange({
                delayInSeconds: data.delayInSeconds,
                scheduledDate: data.picker
            });
        }
    }
    convertDelay(unit) {
        if (unit && this.fgOperationScheduler.controls.delay.value) {
            this.delayMilliseconds = this.fgOperationScheduler.controls.delay.value;
            if (unit === 'milliseconds') {
                this.minDelay =
                    this.delayMilliseconds > this.DELAY_MILLISECONDS_DEFAULT
                        ? this.delayMilliseconds
                        : this.DELAY_MILLISECONDS_DEFAULT;
                this.delayInSeconds = this.fgOperationScheduler.controls.delay.value / 1000;
            }
            else {
                this.delaySeconds = this.fgOperationScheduler.controls.delay.value;
                this.minDelay =
                    this.delaySeconds > this.DELAY_SECONDS_DEFAULT
                        ? this.delaySeconds
                        : this.DELAY_SECONDS_DEFAULT;
                this.delayInSeconds = this.fgOperationScheduler.controls.delay.value;
            }
        }
    }
    combineDateAndTime(date, time) {
        return new Date(date.getFullYear(), date.getMonth(), date.getDate(), time.getHours(), time.getMinutes());
    }
    dateValidation(fControl) {
        if (fControl.value) {
            const date = fControl.value;
            fControl.parent.get('time').setValue(date);
            return date >= new Date()
                ? null
                : {
                    dateValidation: true
                };
        }
        return { dateValidation: true };
    }
    timeValidation(fControl) {
        if (fControl.value) {
            const date = fControl.value;
            const result = date >= new Date()
                ? null
                : {
                    dateValidation: true
                };
            const picker = fControl.parent.get('picker');
            if (result) {
                picker.setErrors(result);
                picker.markAsTouched();
                return result;
            }
            if (picker && picker.errors && picker.errors.dateValidation) {
                delete picker.errors.dateValidation;
                if (isEmpty(picker.errors)) {
                    picker.setErrors(null);
                    return result;
                }
                picker.setErrors(picker.errors);
            }
            return result;
        }
        return { dateValidation: true };
    }
}
OperationSchedulerComponent.ɵfac = function OperationSchedulerComponent_Factory(t) { return new (t || OperationSchedulerComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FormBuilder)); };
OperationSchedulerComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: OperationSchedulerComponent, selectors: [["c8y-operation-scheduler"]], inputs: { _minutesAhead: ["minutesAhead", "_minutesAhead"], _delayConfig: ["delayConfig", "_delayConfig"] }, features: [ɵngcc0.ɵɵProvidersFeature([
            {
                provide: NG_VALUE_ACCESSOR,
                multi: true,
                useExisting: forwardRef(() => OperationSchedulerComponent)
            },
            {
                provide: NG_VALIDATORS,
                multi: true,
                useExisting: forwardRef(() => OperationSchedulerComponent)
            }
        ])], decls: 26, vars: 15, consts: [[3, "formGroup"], [1, "form-group", "m-0"], ["translate", ""], [1, "datetime-picker"], [1, "datepicker"], ["formControlName", "picker", "bsDatepicker", "", "required", "", 1, "form-control", 3, "placeholder", "bsConfig", "minDate", "blur"], [4, "ngIf"], ["formControlName", "time", 1, "form-group", 3, "showSpinners", "showMeridian", "blur"], [3, "hasError"], [1, "input-group"], ["formControlName", "delay", "type", "number", "required", "", 1, "form-control", 3, "placeholder", "blur"], [1, "input-group-btn"], [1, "c8y-select-wrapper"], ["formControlName", "unit", 1, "form-control", 3, "blur"], ["value", "seconds", "translate", ""], ["value", "milliseconds", "translate", ""], ["translate", "", 4, "ngIf"], ["translate", "", "ngNonBindable", "", 3, "translateParams", 4, "ngIf"], ["translate", "", 3, "translateParams"]], template: function OperationSchedulerComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵelementStart(2, "label", 2);
        ɵngcc0.ɵɵtext(3, "Start date");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(4, "div", 3);
        ɵngcc0.ɵɵelementStart(5, "c8y-form-group", 4);
        ɵngcc0.ɵɵelementStart(6, "input", 5);
        ɵngcc0.ɵɵlistener("blur", function OperationSchedulerComponent_Template_input_blur_6_listener() { return ctx.markAsTouched(); });
        ɵngcc0.ɵɵpipe(7, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(8, OperationSchedulerComponent_c8y_messages_8_Template, 3, 2, "c8y-messages", 6);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(9, "timepicker", 7);
        ɵngcc0.ɵɵlistener("blur", function OperationSchedulerComponent_Template_timepicker_blur_9_listener() { return ctx.markAsTouched(); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(10, "div", 1);
        ɵngcc0.ɵɵelementStart(11, "c8y-form-group", 8);
        ɵngcc0.ɵɵelementStart(12, "label", 2);
        ɵngcc0.ɵɵtext(13, "Delay");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(14, "div", 9);
        ɵngcc0.ɵɵelementStart(15, "input", 10);
        ɵngcc0.ɵɵlistener("blur", function OperationSchedulerComponent_Template_input_blur_15_listener() { return ctx.markAsTouched(); });
        ɵngcc0.ɵɵpipe(16, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(17, "div", 11);
        ɵngcc0.ɵɵelementStart(18, "div", 12);
        ɵngcc0.ɵɵelementStart(19, "select", 13);
        ɵngcc0.ɵɵlistener("blur", function OperationSchedulerComponent_Template_select_blur_19_listener() { return ctx.markAsTouched(); });
        ɵngcc0.ɵɵelementStart(20, "option", 14);
        ɵngcc0.ɵɵtext(21, "Seconds");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(22, "option", 15);
        ɵngcc0.ɵɵtext(23, "Milliseconds");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(24, "span");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(25, OperationSchedulerComponent_c8y_messages_25_Template, 3, 2, "c8y-messages", 6);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("formGroup", ctx.fgOperationScheduler);
        ɵngcc0.ɵɵadvance(6);
        ɵngcc0.ɵɵpropertyInterpolate("placeholder", ɵngcc0.ɵɵpipeBind1(7, 10, ctx.placeholder));
        ɵngcc0.ɵɵproperty("bsConfig", ɵngcc0.ɵɵpureFunction0(14, _c1))("minDate", ctx.minDate);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.pickerErrors);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("showSpinners", false)("showMeridian", false);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("hasError", ctx.delayErrors);
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵpropertyInterpolate1("placeholder", "", ɵngcc0.ɵɵpipeBind1(16, 12, "e.g."), " 15");
        ɵngcc0.ɵɵadvance(10);
        ɵngcc0.ɵɵproperty("ngIf", ctx.delayErrors);
    } }, directives: [ɵngcc1.NgControlStatusGroup, ɵngcc1.FormGroupDirective, ɵngcc2.C8yTranslateDirective, ɵngcc2.FormGroupComponent, ɵngcc1.DefaultValueAccessor, ɵngcc3.BsDatepickerInputDirective, ɵngcc2.RequiredInputPlaceholderDirective, ɵngcc1.NgControlStatus, ɵngcc1.FormControlName, ɵngcc3.BsDatepickerDirective, ɵngcc1.RequiredValidator, ɵngcc4.NgIf, ɵngcc5.TimepickerComponent, ɵngcc1.NumberValueAccessor, ɵngcc1.SelectControlValueAccessor, ɵngcc1.NgSelectOption, ɵngcc1.ɵNgSelectMultipleOption, ɵngcc2.MessagesComponent, ɵngcc2.MessageDirective], pipes: [ɵngcc2.C8yTranslatePipe], encapsulation: 2 });
OperationSchedulerComponent.ctorParameters = () => [
    { type: FormBuilder }
];
OperationSchedulerComponent.propDecorators = {
    _minutesAhead: [{ type: Input, args: ['minutesAhead',] }],
    _delayConfig: [{ type: Input, args: ['delayConfig',] }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(OperationSchedulerComponent, [{
        type: Component,
        args: [{
                selector: 'c8y-operation-scheduler',
                template: "<div [formGroup]=\"fgOperationScheduler\">\n  <div class=\"form-group m-0\">\n    <label translate>Start date</label>\n    <div class=\"datetime-picker\">\n      <c8y-form-group class=\"datepicker\">\n        <input\n          formControlName=\"picker\"\n          class=\"form-control\"\n          placeholder=\"{{ placeholder | translate }}\"\n          [bsConfig]=\"{ customTodayClass: 'today' }\"\n          [minDate]=\"minDate\"\n          bsDatepicker\n          required\n          (blur)=\"markAsTouched()\"\n        />\n        <c8y-messages *ngIf=\"pickerErrors\">\n          <c8y-message *ngIf=\"pickerErrors.required\" translate>\n            This field is required.\n          </c8y-message>\n          <c8y-message *ngIf=\"pickerErrors.dateValidation && !pickerErrors.required\" translate>\n            Select time in the future.\n          </c8y-message>\n        </c8y-messages>\n      </c8y-form-group>\n      <timepicker\n        class=\"form-group\"\n        [showSpinners]=\"false\"\n        [showMeridian]=\"false\"\n        formControlName=\"time\"\n        (blur)=\"markAsTouched()\"\n      ></timepicker>\n    </div>\n  </div>\n  <div class=\"form-group m-0\">\n    <c8y-form-group [hasError]=\"delayErrors\">\n      <label translate>Delay</label>\n      <div class=\"input-group\">\n        <input\n          formControlName=\"delay\"\n          type=\"number\"\n          class=\"form-control\"\n          placeholder=\"{{ 'e.g.' | translate }} 15\"\n          required\n          (blur)=\"markAsTouched()\"\n        />\n        <div class=\"input-group-btn\">\n          <div class=\"c8y-select-wrapper\">\n            <select formControlName=\"unit\" class=\"form-control\" (blur)=\"markAsTouched()\">\n              <option value=\"seconds\" translate>Seconds</option>\n              <option value=\"milliseconds\" translate>Milliseconds</option>\n            </select>\n            <span></span>\n          </div>\n        </div>\n      </div>\n      <c8y-messages *ngIf=\"delayErrors\">\n        <c8y-message *ngIf=\"delayErrors.required\" translate>\n          This field is required.\n        </c8y-message>\n        <c8y-message\n          *ngIf=\"delayErrors.min && !delayErrors.required\"\n          translate\n          ngNonBindable\n          [translateParams]=\"{ delay: minDelay }\"\n        >\n          Minimum value is {{ delay }}.\n        </c8y-message>\n      </c8y-messages>\n    </c8y-form-group>\n  </div>\n</div>\n",
                providers: [
                    {
                        provide: NG_VALUE_ACCESSOR,
                        multi: true,
                        useExisting: forwardRef(() => OperationSchedulerComponent)
                    },
                    {
                        provide: NG_VALIDATORS,
                        multi: true,
                        useExisting: forwardRef(() => OperationSchedulerComponent)
                    }
                ]
            }]
    }], function () { return [{ type: ɵngcc1.FormBuilder }]; }, { _minutesAhead: [{
            type: Input,
            args: ['minutesAhead']
        }], _delayConfig: [{
            type: Input,
            args: ['delayConfig']
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,