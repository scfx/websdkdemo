import { __awaiter } from "tslib";
import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';
import { StatusFilterComponent } from '@c8y/ngx-components/operations/status-filter';
import { BulkOperationsService } from '@c8y/ngx-components/operations/bulk-operations-service';
import { SINGLE_OP_STATUS_NAMES, SINGLE_OP_STATUS_PROPERTIES } from './single-operation-item.model';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@c8y/ngx-components/operations/bulk-operations-service';
import * as ɵngcc2 from '@angular/common';
import * as ɵngcc3 from '@c8y/ngx-components';
import * as ɵngcc4 from '@c8y/ngx-components/operations/status-filter';
import * as ɵngcc5 from './single-operation-item.component';

function SingleOperationsListComponent_ng_container_0_div_8_Template(rf, ctx) { if (rf & 1) {
    const _r5 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 9);
    ɵngcc0.ɵɵelementStart(1, "button", 10);
    ɵngcc0.ɵɵlistener("click", function SingleOperationsListComponent_ng_container_0_div_8_Template_button_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r4 = ɵngcc0.ɵɵnextContext(2); return ctx_r4.retryBulkOperation(); });
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelement(3, "i", 11);
    ɵngcc0.ɵɵelementStart(4, "span", 12);
    ɵngcc0.ɵɵtext(5, "Retry failed operations");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(2, 1, "Retry failed operations"));
} }
function SingleOperationsListComponent_ng_container_0_div_11_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 13);
    ɵngcc0.ɵɵelement(1, "c8y-single-operation-item", 14);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const operation_r6 = ctx.$implicit;
    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("operation", operation_r6)("readOnly", ctx_r2.readOnly);
} }
function SingleOperationsListComponent_ng_container_0_c8y_li_12_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "c8y-li");
    ɵngcc0.ɵɵelementStart(1, "c8y-li-body");
    ɵngcc0.ɵɵelementStart(2, "div", 15);
    ɵngcc0.ɵɵelement(3, "h2", 16);
    ɵngcc0.ɵɵelementStart(4, "div");
    ɵngcc0.ɵɵelementStart(5, "h3", 12);
    ɵngcc0.ɵɵtext(6, "No single operations of the selected status to display.");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(7, "p", 17);
    ɵngcc0.ɵɵtext(8, "Single operations will be displayed here");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} }
function SingleOperationsListComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    const _r8 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "div", 1);
    ɵngcc0.ɵɵtext(2, " Operations ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "div", 2);
    ɵngcc0.ɵɵelementStart(4, "div", 3);
    ɵngcc0.ɵɵelementStart(5, "span", 4);
    ɵngcc0.ɵɵtext(6, "Filter by status");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(7, "c8y-status-filter", 5);
    ɵngcc0.ɵɵlistener("onFilterChanged", function SingleOperationsListComponent_ng_container_0_Template_c8y_status_filter_onFilterChanged_7_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7.getOperationsByStatus($event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(8, SingleOperationsListComponent_ng_container_0_div_8_Template, 6, 3, "div", 6);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(9, "div", 7);
    ɵngcc0.ɵɵelementStart(10, "c8y-list-group");
    ɵngcc0.ɵɵtemplate(11, SingleOperationsListComponent_ng_container_0_div_11_Template, 2, 2, "div", 8);
    ɵngcc0.ɵɵtemplate(12, SingleOperationsListComponent_ng_container_0_c8y_li_12_Template, 9, 0, "c8y-li", 0);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(7);
    ɵngcc0.ɵɵproperty("options", ctx_r0.singleOperationStatusProperties);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r0.readOnly && ctx_r0.bulkOperation.progress.failed > 0);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("c8yForOf", ctx_r0.singleOperations)("c8yForLoadMore", "auto");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.singleOperations && ctx_r0.singleOperations.data.length === 0);
} }
export class SingleOperationsListComponent {
    constructor(bulkOperationsService) {
        this.bulkOperationsService = bulkOperationsService;
        this.readOnly = false;
        this.onRetryFailedOperations = new EventEmitter();
        this.singleOperationStatusProperties = SINGLE_OP_STATUS_PROPERTIES;
        this.singleOperationStatusNames = SINGLE_OP_STATUS_NAMES;
    }
    ngAfterViewInit() {
        return __awaiter(this, void 0, void 0, function* () {
            if (this.statusFilter) {
                this.filterOperationsByType();
            }
        });
    }
    ngOnChanges(changes) {
        if (changes.bulkOperation && !changes.bulkOperation.firstChange) {
            this.filterOperationsByType();
        }
    }
    filterOperationsByType() {
        if (this.statusFilter) {
            const typeFilter = this.getFilterTypeOfSingleOperations();
            this.statusFilter.preset(typeFilter === this.singleOperationStatusNames.ALL
                ? []
                : [{ label: typeFilter }]);
        }
        else {
            setTimeout(this.filterOperationsByType.bind(this));
        }
    }
    getFilterTypeOfSingleOperations() {
        const progress = this.bulkOperation.progress;
        if (progress.failed > 0) {
            return this.singleOperationStatusNames.FAILED;
        }
        else if (progress.failed === 0 && progress.successful === 0 && progress.pending === 0) {
            return this.singleOperationStatusNames.EXECUTING;
        }
        else if (progress.failed === 0 && progress.successful === 0 && progress.executing === 0) {
            return this.singleOperationStatusNames.PENDING;
        }
        else if (progress.failed === 0 && progress.pending === 0 && progress.executing === 0) {
            return this.singleOperationStatusNames.SUCCESSFUL;
        }
        return this.singleOperationStatusNames.ALL;
    }
    getOperationsByStatus(filter) {
        return __awaiter(this, void 0, void 0, function* () {
            this.singleOperations = yield this.bulkOperationsService.getSingleOperationsByStatus(filter[0] && filter[0].label, this.bulkOperation.id);
        });
    }
    retryBulkOperation() {
        this.onRetryFailedOperations.emit(this.bulkOperation);
    }
}
SingleOperationsListComponent.ɵfac = function SingleOperationsListComponent_Factory(t) { return new (t || SingleOperationsListComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.BulkOperationsService)); };
SingleOperationsListComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: SingleOperationsListComponent, selectors: [["c8y-single-operations-list"]], viewQuery: function SingleOperationsListComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(StatusFilterComponent, 5);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.statusFilter = _t.first);
    } }, inputs: { readOnly: "readOnly", bulkOperation: "bulkOperation" }, outputs: { onRetryFailedOperations: "onRetryFailedOperations" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 1, vars: 1, consts: [[4, "ngIf"], ["translate", "", 1, "legend", "form-block", "p-t-16", "m-b-0"], [1, "d-flex", "a-i-center"], [1, "d-flex", "a-i-center", "p-b-8"], ["translate", "", 1, "m-r-4", "text-medium"], ["small", "", 3, "options", "onFilterChanged"], ["class", "m-l-auto p-b-8", 4, "ngIf"], [1, "inner-scroll"], ["class", "d-contents", 4, "c8yFor", "c8yForOf", "c8yForLoadMore"], [1, "m-l-auto", "p-b-8"], [1, "btn", "btn-navbar", 3, "title", "click"], ["c8yIcon", "repeat", 1, "m-r-4"], ["translate", ""], [1, "d-contents"], [1, "d-contents", 3, "operation", "readOnly"], [1, "c8y-empty-state", "text-center"], [1, "c8y-icon", "c8y-icon-energy", "c8y-icon-duocolor", "m-b-16"], ["translate", "", 1, "m-b-16"]], template: function SingleOperationsListComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, SingleOperationsListComponent_ng_container_0_Template, 13, 5, "ng-container", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.bulkOperation.progress.failed || ctx.bulkOperation.progress.executing || ctx.bulkOperation.progress.pending || ctx.bulkOperation.progress.successful);
    } }, directives: [ɵngcc2.NgIf, ɵngcc3.C8yTranslateDirective, ɵngcc4.StatusFilterComponent, ɵngcc3.ListGroupComponent, ɵngcc3.ForOfDirective, ɵngcc3.IconDirective, ɵngcc5.SingleOperationItemComponent, ɵngcc3.ListItemComponent, ɵngcc3.ListItemBodyComponent], pipes: [ɵngcc3.C8yTranslatePipe], encapsulation: 2 });
SingleOperationsListComponent.ctorParameters = () => [
    { type: BulkOperationsService }
];
SingleOperationsListComponent.propDecorators = {
    bulkOperation: [{ type: Input }],
    readOnly: [{ type: Input }],
    onRetryFailedOperations: [{ type: Output }],
    statusFilter: [{ type: ViewChild, args: [StatusFilterComponent, { static: false },] }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SingleOperationsListComponent, [{
        type: Component,
        args: [{
                selector: 'c8y-single-operations-list',
                template: "<ng-container\n  *ngIf=\"\n    bulkOperation.progress.failed ||\n    bulkOperation.progress.executing ||\n    bulkOperation.progress.pending ||\n    bulkOperation.progress.successful\n  \"\n>\n  <div class=\"legend form-block p-t-16 m-b-0\" translate>\n    Operations\n  </div>\n  <div class=\"d-flex a-i-center\">\n    <div class=\" d-flex a-i-center p-b-8\">\n      <span class=\"m-r-4 text-medium\" translate>Filter by status</span>\n      <c8y-status-filter\n        small\n        [options]=\"singleOperationStatusProperties\"\n        (onFilterChanged)=\"getOperationsByStatus($event)\"\n      ></c8y-status-filter>\n    </div>\n    <div class=\"m-l-auto p-b-8\" *ngIf=\"!readOnly && bulkOperation.progress.failed > 0\">\n      <button\n        class=\"btn btn-navbar\"\n        (click)=\"retryBulkOperation()\"\n        title=\"{{ 'Retry failed operations' | translate }}\"\n      >\n        <i c8yIcon=\"repeat\" class=\"m-r-4\"></i> <span translate>Retry failed operations</span>\n      </button>\n    </div>\n  </div>\n  <div class=\"inner-scroll\">\n    <c8y-list-group>\n      <div class=\"d-contents\" *c8yFor=\"let operation of singleOperations; loadMore: 'auto'\">\n        <c8y-single-operation-item [operation]=\"operation\" [readOnly]=\"readOnly\" class=\"d-contents\">\n        </c8y-single-operation-item>\n      </div>\n\n      <c8y-li *ngIf=\"singleOperations && singleOperations.data.length === 0\">\n        <c8y-li-body>\n          <div class=\"c8y-empty-state text-center\">\n            <h2 class=\"c8y-icon c8y-icon-energy c8y-icon-duocolor m-b-16\"></h2>\n            <div>\n              <h3 translate>No single operations of the selected status to display.</h3>\n              <p class=\"m-b-16\" translate>Single operations will be displayed here</p>\n            </div>\n          </div>\n        </c8y-li-body>\n      </c8y-li>\n    </c8y-list-group>\n  </div>\n</ng-container>\n"
            }]
    }], function () { return [{ type: ɵngcc1.BulkOperationsService }]; }, { readOnly: [{
            type: Input
        }], onRetryFailedOperations: [{
            type: Output
        }], bulkOperation: [{
            type: Input
        }], statusFilter: [{
            type: ViewChild,
            args: [StatusFilterComponent, { static: false }]
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2luZ2xlLW9wZXJhdGlvbnMtbGlzdC5jb21wb25lbnQuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL29wZXJhdGlvbnMvYnVsay1vcGVyYXRpb25zLWxpc3Qvc2luZ2xlLW9wZXJhdGlvbnMtbGlzdC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFFTCxTQUFTLEVBQ1QsWUFBWSxFQUNaLEtBQUssRUFFTCxNQUFNLEVBRU4sU0FBUyxFQUNWLE1BQU0sZUFBZSxDQUFDO0FBRXZCLE9BQU8sRUFBRSxxQkFBcUIsRUFBaUIsTUFBTSw4Q0FBOEMsQ0FBQztBQUNwRyxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSx3REFBd0QsQ0FBQztBQUMvRixPQUFPLEVBQUUsc0JBQXNCLEVBQUUsMkJBQTJCLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFNcEcsTUFBTSxPQUFPLDZCQUE2QjtBQUFHLElBYzNDLFlBQW9CLHFCQUE0QztBQUFJLFFBQWhELDBCQUFxQixHQUFyQixxQkFBcUIsQ0FBdUI7QUFBQyxRQVZqRSxhQUFRLEdBQVksS0FBSyxDQUFDO0FBQzVCLFFBQVksNEJBQXVCLEdBQTBDLElBQUksWUFBWSxFQUFFLENBQUM7QUFDaEcsUUFJRSxvQ0FBK0IsR0FBRywyQkFBMkIsQ0FBQztBQUNoRSxRQUFFLCtCQUEwQixHQUFHLHNCQUFzQixDQUFDO0FBQ3RELElBRXFFLENBQUM7QUFDdEUsSUFDUSxlQUFlO0FBQ3ZCO0FBQ2lDLFlBRDdCLElBQUksSUFBSSxDQUFDLFlBQVksRUFBRTtBQUMzQixnQkFBTSxJQUFJLENBQUMsc0JBQXNCLEVBQUUsQ0FBQztBQUNwQyxhQUFLO0FBQ0wsUUFBRSxDQUFDO0FBRUYsS0FGRTtBQUNILElBQ0UsV0FBVyxDQUFDLE9BQXNCO0FBQ3BD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QUFFLEtBQUssRUFBRTtBQUNqRDs7Ozs7Ozs7Ozs7Ozs7OztvQkFBRTtBQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQWZ0ZXJWaWV3SW5pdCxcbiAgQ29tcG9uZW50LFxuICBFdmVudEVtaXR0ZXIsXG4gIElucHV0LFxuICBPbkNoYW5nZXMsXG4gIE91dHB1dCxcbiAgU2ltcGxlQ2hhbmdlcyxcbiAgVmlld0NoaWxkXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSU9wZXJhdGlvbiwgSU9wZXJhdGlvbkJ1bGssIElSZXN1bHRMaXN0IH0gZnJvbSAnQGM4eS9jbGllbnQnO1xuaW1wb3J0IHsgU3RhdHVzRmlsdGVyQ29tcG9uZW50LCBJU3RhdHVzT3B0aW9uIH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cy9vcGVyYXRpb25zL3N0YXR1cy1maWx0ZXInO1xuaW1wb3J0IHsgQnVsa09wZXJhdGlvbnNTZXJ2aWNlIH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cy9vcGVyYXRpb25zL2J1bGstb3BlcmF0aW9ucy1zZXJ2aWNlJztcbmltcG9ydCB7IFNJTkdMRV9PUF9TVEFUVVNfTkFNRVMsIFNJTkdMRV9PUF9TVEFUVVNfUFJPUEVSVElFUyB9IGZyb20gJy4vc2luZ2xlLW9wZXJhdGlvbi1pdGVtLm1vZGVsJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYzh5LXNpbmdsZS1vcGVyYXRpb25zLWxpc3QnLFxuICB0ZW1wbGF0ZVVybDogJy4vc2luZ2xlLW9wZXJhdGlvbnMtbGlzdC5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgU2luZ2xlT3BlcmF0aW9uc0xpc3RDb21wb25lbnQgaW1wbGVtZW50cyBBZnRlclZpZXdJbml0LCBPbkNoYW5nZXMge1xuICBASW5wdXQoKVxuICBidWxrT3BlcmF0aW9uOiBQYXJ0aWFsPElPcGVyYXRpb25CdWxrPjtcbiAgQElucHV0KClcbiAgcmVhZE9ubHk6IGJvb2xlYW4gPSBmYWxzZTtcbiAgQE91dHB1dCgpIG9uUmV0cnlGYWlsZWRPcGVyYXRpb25zOiBFdmVudEVtaXR0ZXI8UGFydGlhbDxJT3BlcmF0aW9uQnVsaz4+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuXG4gIEBWaWV3Q2hpbGQoU3RhdHVzRmlsdGVyQ29tcG9uZW50LCB7IHN0YXRpYzogZmFsc2UgfSlcbiAgc3RhdHVzRmlsdGVyOiBTdGF0dXNGaWx0ZXJDb21wb25lbnQ7XG5cbiAgc2luZ2xlT3BlcmF0aW9uU3RhdHVzUHJvcGVydGllcyA9IFNJTkdMRV9PUF9TVEFUVVNfUFJPUEVSVElFUztcbiAgc2luZ2xlT3BlcmF0aW9uU3RhdHVzTmFtZXMgPSBTSU5HTEVfT1BfU1RBVFVTX05BTUVTO1xuICBzaW5nbGVPcGVyYXRpb25zOiBJUmVzdWx0TGlzdDxJT3BlcmF0aW9uPjtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGJ1bGtPcGVyYXRpb25zU2VydmljZTogQnVsa09wZXJhdGlvbnNTZXJ2aWNlKSB7fVxuXG4gIGFzeW5jIG5nQWZ0ZXJWaWV3SW5pdCgpIHtcbiAgICBpZiAodGhpcy5zdGF0dXNGaWx0ZXIpIHtcbiAgICAgIHRoaXMuZmlsdGVyT3BlcmF0aW9uc0J5VHlwZSgpO1xuICAgIH1cbiAgfVxuXG4gIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpIHtcbiAgICBpZiAoY2hhbmdlcy5idWxrT3BlcmF0aW9uICYmICFjaGFuZ2VzLmJ1bGtPcGVyYXRpb24uZmlyc3RDaGFuZ2UpIHtcbiAgICAgIHRoaXMuZmlsdGVyT3BlcmF0aW9uc0J5VHlwZSgpO1xuICAgIH1cbiAgfVxuXG4gIGZpbHRlck9wZXJhdGlvbnNCeVR5cGUoKSB7XG4gICAgaWYgKHRoaXMuc3RhdHVzRmlsdGVyKSB7XG4gICAgICBjb25zdCB0eXBlRmlsdGVyID0gdGhpcy5nZXRGaWx0ZXJUeXBlT2ZTaW5nbGVPcGVyYXRpb25zKCk7XG5cbiAgICAgIHRoaXMuc3RhdHVzRmlsdGVyLnByZXNldChcbiAgICAgICAgdHlwZUZpbHRlciA9PT0gdGhpcy5zaW5nbGVPcGVyYXRpb25TdGF0dXNOYW1lcy5BTExcbiAgICAgICAgICA/IFtdXG4gICAgICAgICAgOiBbeyBsYWJlbDogdHlwZUZpbHRlciB9IGFzIElTdGF0dXNPcHRpb25dXG4gICAgICApO1xuICAgIH0gZWxzZSB7XG4gICAgICBzZXRUaW1lb3V0KHRoaXMuZmlsdGVyT3BlcmF0aW9uc0J5VHlwZS5iaW5kKHRoaXMpKTtcbiAgICB9XG4gIH1cblxuICBnZXRGaWx0ZXJUeXBlT2ZTaW5nbGVPcGVyYXRpb25zKCkge1xuICAgIGNvbnN0IHByb2dyZXNzID0gdGhpcy5idWxrT3BlcmF0aW9uLnByb2dyZXNzO1xuXG4gICAgaWYgKHByb2dyZXNzLmZhaWxlZCA+IDApIHtcbiAgICAgIHJldHVybiB0aGlzLnNpbmdsZU9wZXJhdGlvblN0YXR1c05hbWVzLkZBSUxFRDtcbiAgICB9IGVsc2UgaWYgKHByb2dyZXNzLmZhaWxlZCA9PT0gMCAmJiBwcm9ncmVzcy5zdWNjZXNzZnVsID09PSAwICYmIHByb2dyZXNzLnBlbmRpbmcgPT09IDApIHtcbiAgICAgIHJldHVybiB0aGlzLnNpbmdsZU9wZXJhdGlvblN0YXR1c05hbWVzLkVYRUNVVElORztcbiAgICB9IGVsc2UgaWYgKHByb2dyZXNzLmZhaWxlZCA9PT0gMCAmJiBwcm9ncmVzcy5zdWNjZXNzZnVsID09PSAwICYmIHByb2dyZXNzLmV4ZWN1dGluZyA9PT0gMCkge1xuICAgICAgcmV0dXJuIHRoaXMuc2luZ2xlT3BlcmF0aW9uU3RhdHVzTmFtZXMuUEVORElORztcbiAgICB9IGVsc2UgaWYgKHByb2dyZXNzLmZhaWxlZCA9PT0gMCAmJiBwcm9ncmVzcy5wZW5kaW5nID09PSAwICYmIHByb2dyZXNzLmV4ZWN1dGluZyA9PT0gMCkge1xuICAgICAgcmV0dXJuIHRoaXMuc2luZ2xlT3BlcmF0aW9uU3RhdHVzTmFtZXMuU1VDQ0VTU0ZVTDtcbiAgICB9XG5cbiAgICByZXR1cm4gdGhpcy5zaW5nbGVPcGVyYXRpb25TdGF0dXNOYW1lcy5BTEw7XG4gIH1cblxuICBhc3luYyBnZXRPcGVyYXRpb25zQnlTdGF0dXMoZmlsdGVyOiBJU3RhdHVzT3B0aW9uW10pIHtcbiAgICB0aGlzLnNpbmdsZU9wZXJhdGlvbnMgPSBhd2FpdCB0aGlzLmJ1bGtPcGVyYXRpb25zU2VydmljZS5nZXRTaW5nbGVPcGVyYXRpb25zQnlTdGF0dXMoXG4gICAgICBmaWx0ZXJbMF0gJiYgZmlsdGVyWzBdLmxhYmVsLFxuICAgICAgdGhpcy5idWxrT3BlcmF0aW9uLmlkXG4gICAgKTtcbiAgfVxuXG4gIHJldHJ5QnVsa09wZXJhdGlvbigpIHtcbiAgICB0aGlzLm9uUmV0cnlGYWlsZWRPcGVyYXRpb25zLmVtaXQodGhpcy5idWxrT3BlcmF0aW9uKTtcbiAgfVxufVxuIl19