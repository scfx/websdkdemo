import { __awaiter } from "tslib";
import { Component, Input } from '@angular/core';
import { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';
import { BulkOperationsService } from '@c8y/ngx-components/operations/bulk-operations-service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@c8y/ngx-components/operations/bulk-operations-service';
import * as ɵngcc2 from 'ngx-bootstrap/modal';
import * as ɵngcc3 from './bulk-operation-list-item.component';
import * as ɵngcc4 from '@c8y/ngx-components';
export class BulkOperationWrapperComponent {
    constructor(bulkOperationsService, modalRef, modalService) {
        this.bulkOperationsService = bulkOperationsService;
        this.modalRef = modalRef;
        this.modalService = modalService;
    }
    // openDetails function needs to be defined in the both places (component and the service) to avoid circular dependency.
    // BulkOperationsService is a downgraded service, thus we can't just use other approach where we could pass
    // BulkOperationWrapperComponent as a second argument in the bulkOperationsService.openDetails(bulkOperationId, BulkOperationWrapperComponent).
    openDetails(bulkOperationId) {
        return __awaiter(this, void 0, void 0, function* () {
            const bulkOperation = (yield this.bulkOperationsService.getBulkOperationById(bulkOperationId)).data;
            const initialState = { bulkOperation };
            this.modalService.show(BulkOperationWrapperComponent, {
                initialState,
                class: 'modal-lg'
            });
        });
    }
}
BulkOperationWrapperComponent.ɵfac = function BulkOperationWrapperComponent_Factory(t) { return new (t || BulkOperationWrapperComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.BulkOperationsService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.BsModalRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.BsModalService)); };
BulkOperationWrapperComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: BulkOperationWrapperComponent, selectors: [["c8y-bulk-operations-wrapper"]], inputs: { bulkOperation: "bulkOperation" }, decls: 12, vars: 12, consts: [[1, "viewport-modal"], [1, "modal-header"], [1, "modal-inner-scroll"], [3, "bulkOperation", "detailsCollapsed", "readOnly", "showFailedOperation"], [1, "modal-footer"], [1, "btn", "btn-default", 3, "title", "click"]], template: function BulkOperationWrapperComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵelementStart(2, "h3");
        ɵngcc0.ɵɵtext(3);
        ɵngcc0.ɵɵpipe(4, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(5, "div", 2);
        ɵngcc0.ɵɵelementStart(6, "c8y-bulk-operation-list-item", 3);
        ɵngcc0.ɵɵlistener("showFailedOperation", function BulkOperationWrapperComponent_Template_c8y_bulk_operation_list_item_showFailedOperation_6_listener($event) { return ctx.openDetails($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(7, "div", 4);
        ɵngcc0.ɵɵelementStart(8, "button", 5);
        ɵngcc0.ɵɵlistener("click", function BulkOperationWrapperComponent_Template_button_click_8_listener() { return ctx.modalRef.hide(); });
        ɵngcc0.ɵɵpipe(9, "translate");
        ɵngcc0.ɵɵtext(10);
        ɵngcc0.ɵɵpipe(11, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(4, 6, "Bulk operation details"));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("bulkOperation", ctx.bulkOperation)("detailsCollapsed", false)("readOnly", true);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(9, 8, "Close"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(11, 10, "Close"), " ");
    } }, directives: [ɵngcc3.BulkOperationListItemComponent], pipes: [ɵngcc4.C8yTranslatePipe], encapsulation: 2 });
BulkOperationWrapperComponent.ctorParameters = () => [
    { type: BulkOperationsService },
    { type: BsModalRef },
    { type: BsModalService }
];
BulkOperationWrapperComponent.propDecorators = {
    bulkOperation: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BulkOperationWrapperComponent, [{
        type: Component,
        args: [{
                selector: 'c8y-bulk-operations-wrapper',
                template: "<div class=\"viewport-modal\">\n  <div class=\"modal-header\">\n    <h3>{{ 'Bulk operation details' | translate }}</h3>\n  </div>\n\n  <div class=\"modal-inner-scroll\">\n    <c8y-bulk-operation-list-item\n      [bulkOperation]=\"bulkOperation\"\n      [detailsCollapsed]=\"false\"\n      [readOnly]=\"true\"\n      (showFailedOperation)=\"openDetails($event)\"\n    ></c8y-bulk-operation-list-item>\n  </div>\n\n  <div class=\"modal-footer\">\n    <button title=\"{{ 'Close' | translate }}\" class=\"btn btn-default\" (click)=\"modalRef.hide()\">\n      {{ 'Close' | translate }}\n    </button>\n  </div>\n</div>\n"
            }]
    }], function () { return [{ type: ɵngcc1.BulkOperationsService }, { type: ɵngcc2.BsModalRef }, { type: ɵngcc2.BsModalService }]; }, { bulkOperation: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVsay1vcGVyYXRpb24td3JhcHBlci5jb21wb25lbnQuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL29wZXJhdGlvbnMvYnVsay1vcGVyYXRpb25zLWxpc3QvYnVsay1vcGVyYXRpb24td3JhcHBlci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRWpELE9BQU8sRUFBRSxVQUFVLEVBQUUsY0FBYyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDakUsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sd0RBQXdELENBQUM7Ozs7OztBQU0vRixNQUFNLE9BQU8sNkJBQTZCO0FBQzFDLElBRUUsWUFDUyxxQkFBNEMsRUFDNUMsUUFBb0IsRUFDbkIsWUFBNEI7QUFDckMsUUFIUSwwQkFBcUIsR0FBckIscUJBQXFCLENBQXVCO0FBQUMsUUFDN0MsYUFBUSxHQUFSLFFBQVEsQ0FBWTtBQUFDLFFBQ3BCLGlCQUFZLEdBQVosWUFBWSxDQUFnQjtBQUN4QyxJQUFLLENBQUM7QUFDTixJQUNFLHdIQUF3SDtBQUMxSCxJQUFFLDJHQUEyRztBQUM3RyxJQUFFLCtJQUErSTtBQUNqSixJQUFRLFdBQVcsQ0FBQyxlQUFnQztBQUNwRDtBQUE4RCxZQUExRCxNQUFNLGFBQWEsR0FBbUIsQ0FBQyxNQUFNLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxvQkFBb0IsQ0FDMUYsZUFBZSxDQUNoQixDQUFDLENBQUMsSUFBSSxDQUFDO0FBQ1osWUFBSSxNQUFNLFlBQVksR0FBRyxFQUFFLGFBQWEsRUFBRSxDQUFDO0FBQzNDLFlBQUksSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsNkJBQTZCLEVBQUU7QUFDMUQsZ0JBQU0sWUFBWTtBQUNsQixnQkFBTSxLQUFLLEVBQUUsVUFBVTtBQUN2QixhQUFLLENBQUMsQ0FBQztBQUNQLFFBQUUsQ0FBQztBQUVILEtBRkc7QUFDSDt5REExQkMsU0FBUyxTQUFDLGtCQUNULFFBQVEsRUFBRSw2QkFBNkIsa0JBQ3ZDO3NlQUFzRCxjQUN2RDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztvSEFDSTtBQUFDO0FBQ1UsWUFQUCxxQkFBcUI7QUFBSSxZQUR6QixVQUFVO0FBQUksWUFBRixjQUFjO0FBQUc7QUFBRztBQUNqQiw0QkFPckIsS0FBSztBQUFJOzs7Ozs7Ozs7b0JBQUU7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IElPcGVyYXRpb25CdWxrIH0gZnJvbSAnQGM4eS9jbGllbnQnO1xuaW1wb3J0IHsgQnNNb2RhbFJlZiwgQnNNb2RhbFNlcnZpY2UgfSBmcm9tICduZ3gtYm9vdHN0cmFwL21vZGFsJztcbmltcG9ydCB7IEJ1bGtPcGVyYXRpb25zU2VydmljZSB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMvb3BlcmF0aW9ucy9idWxrLW9wZXJhdGlvbnMtc2VydmljZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2M4eS1idWxrLW9wZXJhdGlvbnMtd3JhcHBlcicsXG4gIHRlbXBsYXRlVXJsOiAnLi9idWxrLW9wZXJhdGlvbi13cmFwcGVyLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBCdWxrT3BlcmF0aW9uV3JhcHBlckNvbXBvbmVudCB7XG4gIEBJbnB1dCgpIGJ1bGtPcGVyYXRpb246IFBhcnRpYWw8SU9wZXJhdGlvbkJ1bGs+O1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHB1YmxpYyBidWxrT3BlcmF0aW9uc1NlcnZpY2U6IEJ1bGtPcGVyYXRpb25zU2VydmljZSxcbiAgICBwdWJsaWMgbW9kYWxSZWY6IEJzTW9kYWxSZWYsXG4gICAgcHJpdmF0ZSBtb2RhbFNlcnZpY2U6IEJzTW9kYWxTZXJ2aWNlXG4gICkge31cblxuICAvLyBvcGVuRGV0YWlscyBmdW5jdGlvbiBuZWVkcyB0byBiZSBkZWZpbmVkIGluIHRoZSBib3RoIHBsYWNlcyAoY29tcG9uZW50IGFuZCB0aGUgc2VydmljZSkgdG8gYXZvaWQgY2lyY3VsYXIgZGVwZW5kZW5jeS5cbiAgLy8gQnVsa09wZXJhdGlvbnNTZXJ2aWNlIGlzIGEgZG93bmdyYWRlZCBzZXJ2aWNlLCB0aHVzIHdlIGNhbid0IGp1c3QgdXNlIG90aGVyIGFwcHJvYWNoIHdoZXJlIHdlIGNvdWxkIHBhc3NcbiAgLy8gQnVsa09wZXJhdGlvbldyYXBwZXJDb21wb25lbnQgYXMgYSBzZWNvbmQgYXJndW1lbnQgaW4gdGhlIGJ1bGtPcGVyYXRpb25zU2VydmljZS5vcGVuRGV0YWlscyhidWxrT3BlcmF0aW9uSWQsIEJ1bGtPcGVyYXRpb25XcmFwcGVyQ29tcG9uZW50KS5cbiAgYXN5bmMgb3BlbkRldGFpbHMoYnVsa09wZXJhdGlvbklkOiBzdHJpbmcgfCBudW1iZXIpIHtcbiAgICBjb25zdCBidWxrT3BlcmF0aW9uOiBJT3BlcmF0aW9uQnVsayA9IChhd2FpdCB0aGlzLmJ1bGtPcGVyYXRpb25zU2VydmljZS5nZXRCdWxrT3BlcmF0aW9uQnlJZChcbiAgICAgIGJ1bGtPcGVyYXRpb25JZFxuICAgICkpLmRhdGE7XG4gICAgY29uc3QgaW5pdGlhbFN0YXRlID0geyBidWxrT3BlcmF0aW9uIH07XG4gICAgdGhpcy5tb2RhbFNlcnZpY2Uuc2hvdyhCdWxrT3BlcmF0aW9uV3JhcHBlckNvbXBvbmVudCwge1xuICAgICAgaW5pdGlhbFN0YXRlLFxuICAgICAgY2xhc3M6ICdtb2RhbC1sZydcbiAgICB9KTtcbiAgfVxufVxuIl19