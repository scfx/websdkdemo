import { __awaiter } from "tslib";
import { Component } from '@angular/core';
import { AlertService, gettext } from '@c8y/ngx-components';
import { BsModalRef } from 'ngx-bootstrap/modal';
import { Subject } from 'rxjs';
import { BulkOperationsService } from '@c8y/ngx-components/operations/bulk-operations-service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from 'ngx-bootstrap/modal';
import * as ɵngcc2 from '@c8y/ngx-components/operations/bulk-operations-service';
import * as ɵngcc3 from '@c8y/ngx-components';
import * as ɵngcc4 from '@c8y/ngx-components/operations/operation-summary';
import * as ɵngcc5 from '@c8y/ngx-components/operations/bulk-operation-scheduler';
import * as ɵngcc6 from '@angular/forms';
export class BulkOperationsRescheduleModalComponent {
    constructor(bsModalRef, bulkOperationsService, alert) {
        this.bsModalRef = bsModalRef;
        this.bulkOperationsService = bulkOperationsService;
        this.alert = alert;
        this.closeSubject = new Subject();
    }
    ngOnInit() {
        this.modalTitle = this.getTitle();
    }
    onDateAndDelaySelect($event) {
        this.dateAndDelay = $event;
    }
    getTitle() {
        return this.isRetryOperation ? gettext('Retry operation') : gettext('Edit schedule');
    }
    onCancel() {
        this.bsModalRef.hide();
    }
    onSave() {
        return __awaiter(this, void 0, void 0, function* () {
            let newBulkOperation;
            this.bulkOperation.startDate = this.dateAndDelay.scheduledDate.toISOString();
            this.bulkOperation.creationRamp = this.dateAndDelay.delayInSeconds;
            if (this.isRetryOperation) {
                try {
                    newBulkOperation = yield this.bulkOperationsService.createBulkOperation(this.bulkOperation);
                    this.alert.success(gettext('Successfully rescheduled for a retry.'));
                }
                catch (er) {
                    this.alert.addServerFailure(er);
                }
            }
            else {
                try {
                    newBulkOperation = yield this.bulkOperationsService.updateBulkOperation(this.bulkOperation);
                    this.alert.success(gettext('Successfully rescheduled.'));
                }
                catch (er) {
                    this.alert.addServerFailure(er);
                }
            }
            // send back to component from which modal was called
            this.closeSubject.next(newBulkOperation.data);
            this.bsModalRef.hide();
        });
    }
}
BulkOperationsRescheduleModalComponent.ɵfac = function BulkOperationsRescheduleModalComponent_Factory(t) { return new (t || BulkOperationsRescheduleModalComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.BsModalRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.BulkOperationsService), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.AlertService)); };
BulkOperationsRescheduleModalComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: BulkOperationsRescheduleModalComponent, selectors: [["c8y-bulk-operations-reschedule-modal"]], decls: 22, vars: 12, consts: [[1, "viewport-modal"], [1, "modal-header", "dialog-header"], [1, "c8y-icon", "c8y-icon-energy"], [1, "modal-inner-scroll"], [1, "modal-body"], [1, "text-center"], [3, "description"], [1, "p-t-16", "center-block", 2, "max-width", "300px"], [3, "ngModel", "ngModelChange"], ["scheduler", "ngModel"], [1, "modal-footer"], ["type", "button", 1, "btn", "btn-default", 3, "title", "click"], ["translate", ""], ["id", "save-btn", "type", "button", 1, "btn", "btn-primary", 3, "title", "disabled", "click"]], template: function BulkOperationsRescheduleModalComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵelement(2, "h1", 2);
        ɵngcc0.ɵɵelementStart(3, "h4");
        ɵngcc0.ɵɵtext(4);
        ɵngcc0.ɵɵpipe(5, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(6, "div", 3);
        ɵngcc0.ɵɵelementStart(7, "div", 4);
        ɵngcc0.ɵɵelementStart(8, "div", 5);
        ɵngcc0.ɵɵelement(9, "c8y-operation-summary", 6);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(10, "div", 7);
        ɵngcc0.ɵɵelementStart(11, "c8y-operation-scheduler", 8, 9);
        ɵngcc0.ɵɵlistener("ngModelChange", function BulkOperationsRescheduleModalComponent_Template_c8y_operation_scheduler_ngModelChange_11_listener($event) { return ctx.dateAndDelay = $event; });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(13, "div", 10);
        ɵngcc0.ɵɵelementStart(14, "button", 11);
        ɵngcc0.ɵɵlistener("click", function BulkOperationsRescheduleModalComponent_Template_button_click_14_listener() { return ctx.onCancel(); });
        ɵngcc0.ɵɵpipe(15, "translate");
        ɵngcc0.ɵɵelementStart(16, "span", 12);
        ɵngcc0.ɵɵtext(17, "Cancel");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(18, "button", 13);
        ɵngcc0.ɵɵlistener("click", function BulkOperationsRescheduleModalComponent_Template_button_click_18_listener() { return ctx.onSave(); });
        ɵngcc0.ɵɵpipe(19, "translate");
        ɵngcc0.ɵɵelementStart(20, "span", 12);
        ɵngcc0.ɵɵtext(21, "Save");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        const _r0 = ɵngcc0.ɵɵreference(12);
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(5, 6, ctx.modalTitle));
        ɵngcc0.ɵɵadvance(5);
        ɵngcc0.ɵɵproperty("description", ctx.bulkOperation.operationPrototype.description);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngModel", ctx.dateAndDelay);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(15, 8, "Cancel"));
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(19, 10, "Save"));
        ɵngcc0.ɵɵproperty("disabled", _r0 == null ? null : _r0.control == null ? null : _r0.control.errors);
    } }, directives: [ɵngcc4.OperationSummaryComponent, ɵngcc5.OperationSchedulerComponent, ɵngcc6.NgControlStatus, ɵngcc6.NgModel, ɵngcc3.C8yTranslateDirective], pipes: [ɵngcc3.C8yTranslatePipe], encapsulation: 2 });
BulkOperationsRescheduleModalComponent.ctorParameters = () => [
    { type: BsModalRef },
    { type: BulkOperationsService },
    { type: AlertService }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BulkOperationsRescheduleModalComponent, [{
        type: Component,
        args: [{
                selector: 'c8y-bulk-operations-reschedule-modal',
                template: "<div class=\"viewport-modal\">\n  <div class=\"modal-header dialog-header\">\n    <h1 class=\"c8y-icon c8y-icon-energy\"></h1>\n    <h4>{{ modalTitle | translate }}</h4>\n  </div>\n  <div class=\"modal-inner-scroll\">\n    <div class=\"modal-body\">\n      <div class=\"text-center\">\n        <c8y-operation-summary\n          [description]=\"bulkOperation.operationPrototype.description\"\n        ></c8y-operation-summary>\n      </div>\n      <div class=\"p-t-16 center-block\" style=\"max-width: 300px;\">\n        <c8y-operation-scheduler\n          [(ngModel)]=\"dateAndDelay\"\n          #scheduler=\"ngModel\"\n        ></c8y-operation-scheduler>\n      </div>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n    <button\n      (click)=\"onCancel()\"\n      type=\"button\"\n      class=\"btn btn-default\"\n      title=\"{{ 'Cancel' | translate }}\"\n    >\n      <span translate>Cancel</span>\n    </button>\n    <button\n      id=\"save-btn\"\n      (click)=\"onSave()\"\n      type=\"button\"\n      class=\"btn btn-primary\"\n      title=\"{{ 'Save' | translate }}\"\n      [disabled]=\"scheduler?.control?.errors\"\n    >\n      <span translate>Save</span>\n    </button>\n  </div>\n</div>\n"
            }]
    }], function () { return [{ type: ɵngcc1.BsModalRef }, { type: ɵngcc2.BulkOperationsService }, { type: ɵngcc3.AlertService }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVsay1vcGVyYXRpb25zLXJlc2NoZWR1bGUtbW9kYWwuY29tcG9uZW50LmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9vcGVyYXRpb25zL2J1bGstb3BlcmF0aW9ucy1saXN0L21vZGFscy9idWxrLW9wZXJhdGlvbnMtcmVzY2hlZHVsZS1tb2RhbC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsTUFBTSxlQUFlLENBQUM7QUFFbEQsT0FBTyxFQUFFLFlBQVksRUFBRSxPQUFPLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUM1RCxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDakQsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUUvQixPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSx3REFBd0QsQ0FBQzs7Ozs7Ozs7QUFNL0YsTUFBTSxPQUFPLHNDQUFzQztBQUFHLElBT3BELFlBQ1MsVUFBc0IsRUFDckIscUJBQTRDLEVBQzVDLEtBQW1CO0FBQzVCLFFBSFEsZUFBVSxHQUFWLFVBQVUsQ0FBWTtBQUFDLFFBQ3RCLDBCQUFxQixHQUFyQixxQkFBcUIsQ0FBdUI7QUFBQyxRQUM3QyxVQUFLLEdBQUwsS0FBSyxDQUFjO0FBQy9CLFFBVkUsaUJBQVksR0FBNEIsSUFBSSxPQUFPLEVBQUUsQ0FBQztBQUN4RCxJQVNLLENBQUM7QUFDTixJQUNFLFFBQVE7QUFDVixRQUFJLElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDO0FBQ3RDLElBQUUsQ0FBQztBQUNILElBQ0Usb0JBQW9CLENBQUMsTUFBTTtBQUM3QixRQUFJLElBQUksQ0FBQyxZQUFZLEdBQUcsTUFBTSxDQUFDO0FBQy9CLElBQUUsQ0FBQztBQUNILElBQ0UsUUFBUTtBQUNWLFFBQUksT0FBTyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsZUFBZSxDQUFDLENBQUM7QUFDekYsSUFBRSxDQUFDO0FBQ0gsSUFDRSxRQUFRO0FBQ1YsUUFBSSxJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksRUFBRSxDQUFDO0FBQzNCLElBQUUsQ0FBQztBQUNILElBQ1EsTUFBTTtBQUNkO0FBQ29DLFlBRGhDLElBQUksZ0JBQWdCLENBQUM7QUFDekIsWUFBSSxJQUFJLENBQUMsYUFBYSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDLGFBQWEsQ0FBQyxXQUFXLEVBQUUsQ0FBQztBQUNqRixZQUFJLElBQUksQ0FBQyxhQUFhLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsY0FBYyxDQUFDO0FBQ3ZFLFlBQ0ksSUFBSSxJQUFJLENBQUMsZ0JBQWdCLEVBQUU7QUFDL0IsZ0JBQU0sSUFBSTtBQUNWLG9CQUFRLGdCQUFnQixHQUFHLE1BQU0sSUFBSSxDQUFDLHFCQUFxQixDQUFDLG1CQUFtQixDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQztBQUNwRyxvQkFBUSxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsdUNBQXVDLENBQUMsQ0FBQyxDQUFDO0FBQzdFLGlCQUFPO0FBQUMsZ0JBQUEsT0FBTyxFQUFFLEVBQUU7QUFDbkIsb0JBQVEsSUFBSSxDQUFDLEtBQUssQ0FBQyxnQkFBZ0IsQ0FBQyxFQUFFLENBQUMsQ0FBQztBQUN4QyxpQkFBTztBQUNQLGFBQUs7QUFBQyxpQkFBSztBQUNYLGdCQUFNLElBQUk7QUFDVixvQkFBUSxnQkFBZ0IsR0FBRyxNQUFNLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxtQkFBbUIsQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUM7QUFDcEcsb0JBQVEsSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLDJCQUEyQixDQUFDLENBQUMsQ0FBQztBQUNqRSxpQkFBTztBQUFDLGdCQUFBLE9BQU8sRUFBRSxFQUFFO0FBQ25CLG9CQUFRLElBQUksQ0FBQyxLQUFLLENBQUMsZ0JBQWdCLENBQUMsRUFBRSxDQUFDLENBQUM7QUFDeEMsaUJBQU87QUFDUCxhQUFLO0FBQ0wsWUFDSSxxREFBcUQ7QUFDekQsWUFBSSxJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUNsRCxZQUFJLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxFQUFFLENBQUM7QUFDM0IsUUFBRSxDQUFDO0FBRUgsS0FGRztBQUNIO2tFQTFEQyxTQUFTLFNBQUMsa0JBQ1QsUUFBUSxFQUFFLHNDQUFzQyxrQkFDaEQ7Ozs7Ozs7OztJQUE4RCxjQUMvRDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozt5TkFDSTtBQUFDO0FBQWdFLFlBVDdELFVBQVU7QUFBSSxZQUdkLHFCQUFxQjtBQUFJLFlBSnpCLFlBQVk7QUFBRzs7Ozs7OztrSkFBRTtBQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IElPcGVyYXRpb25CdWxrIH0gZnJvbSAnQGM4eS9jbGllbnQnO1xuaW1wb3J0IHsgQWxlcnRTZXJ2aWNlLCBnZXR0ZXh0IH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cyc7XG5pbXBvcnQgeyBCc01vZGFsUmVmIH0gZnJvbSAnbmd4LWJvb3RzdHJhcC9tb2RhbCc7XG5pbXBvcnQgeyBTdWJqZWN0IH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBPcGVyYXRpb25TY2hlZHVsZSB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMvb3BlcmF0aW9ucy9idWxrLW9wZXJhdGlvbi1zY2hlZHVsZXInO1xuaW1wb3J0IHsgQnVsa09wZXJhdGlvbnNTZXJ2aWNlIH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cy9vcGVyYXRpb25zL2J1bGstb3BlcmF0aW9ucy1zZXJ2aWNlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYzh5LWJ1bGstb3BlcmF0aW9ucy1yZXNjaGVkdWxlLW1vZGFsJyxcbiAgdGVtcGxhdGVVcmw6ICdidWxrLW9wZXJhdGlvbnMtcmVzY2hlZHVsZS1tb2RhbC5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgQnVsa09wZXJhdGlvbnNSZXNjaGVkdWxlTW9kYWxDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICBjbG9zZVN1YmplY3Q6IFN1YmplY3Q8SU9wZXJhdGlvbkJ1bGs+ID0gbmV3IFN1YmplY3QoKTtcbiAgZGF0ZUFuZERlbGF5OiBPcGVyYXRpb25TY2hlZHVsZTtcbiAgYnVsa09wZXJhdGlvbjogUGFydGlhbDxJT3BlcmF0aW9uQnVsaz47XG4gIGlzUmV0cnlPcGVyYXRpb246IGJvb2xlYW47XG4gIG1vZGFsVGl0bGU6IHN0cmluZztcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwdWJsaWMgYnNNb2RhbFJlZjogQnNNb2RhbFJlZixcbiAgICBwcml2YXRlIGJ1bGtPcGVyYXRpb25zU2VydmljZTogQnVsa09wZXJhdGlvbnNTZXJ2aWNlLFxuICAgIHByaXZhdGUgYWxlcnQ6IEFsZXJ0U2VydmljZVxuICApIHt9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5tb2RhbFRpdGxlID0gdGhpcy5nZXRUaXRsZSgpO1xuICB9XG5cbiAgb25EYXRlQW5kRGVsYXlTZWxlY3QoJGV2ZW50KSB7XG4gICAgdGhpcy5kYXRlQW5kRGVsYXkgPSAkZXZlbnQ7XG4gIH1cblxuICBnZXRUaXRsZSgpIHtcbiAgICByZXR1cm4gdGhpcy5pc1JldHJ5T3BlcmF0aW9uID8gZ2V0dGV4dCgnUmV0cnkgb3BlcmF0aW9uJykgOiBnZXR0ZXh0KCdFZGl0IHNjaGVkdWxlJyk7XG4gIH1cblxuICBvbkNhbmNlbCgpIHtcbiAgICB0aGlzLmJzTW9kYWxSZWYuaGlkZSgpO1xuICB9XG5cbiAgYXN5bmMgb25TYXZlKCkge1xuICAgIGxldCBuZXdCdWxrT3BlcmF0aW9uO1xuICAgIHRoaXMuYnVsa09wZXJhdGlvbi5zdGFydERhdGUgPSB0aGlzLmRhdGVBbmREZWxheS5zY2hlZHVsZWREYXRlLnRvSVNPU3RyaW5nKCk7XG4gICAgdGhpcy5idWxrT3BlcmF0aW9uLmNyZWF0aW9uUmFtcCA9IHRoaXMuZGF0ZUFuZERlbGF5LmRlbGF5SW5TZWNvbmRzO1xuXG4gICAgaWYgKHRoaXMuaXNSZXRyeU9wZXJhdGlvbikge1xuICAgICAgdHJ5IHtcbiAgICAgICAgbmV3QnVsa09wZXJhdGlvbiA9IGF3YWl0IHRoaXMuYnVsa09wZXJhdGlvbnNTZXJ2aWNlLmNyZWF0ZUJ1bGtPcGVyYXRpb24odGhpcy5idWxrT3BlcmF0aW9uKTtcbiAgICAgICAgdGhpcy5hbGVydC5zdWNjZXNzKGdldHRleHQoJ1N1Y2Nlc3NmdWxseSByZXNjaGVkdWxlZCBmb3IgYSByZXRyeS4nKSk7XG4gICAgICB9IGNhdGNoIChlcikge1xuICAgICAgICB0aGlzLmFsZXJ0LmFkZFNlcnZlckZhaWx1cmUoZXIpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICB0cnkge1xuICAgICAgICBuZXdCdWxrT3BlcmF0aW9uID0gYXdhaXQgdGhpcy5idWxrT3BlcmF0aW9uc1NlcnZpY2UudXBkYXRlQnVsa09wZXJhdGlvbih0aGlzLmJ1bGtPcGVyYXRpb24pO1xuICAgICAgICB0aGlzLmFsZXJ0LnN1Y2Nlc3MoZ2V0dGV4dCgnU3VjY2Vzc2Z1bGx5IHJlc2NoZWR1bGVkLicpKTtcbiAgICAgIH0gY2F0Y2ggKGVyKSB7XG4gICAgICAgIHRoaXMuYWxlcnQuYWRkU2VydmVyRmFpbHVyZShlcik7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gc2VuZCBiYWNrIHRvIGNvbXBvbmVudCBmcm9tIHdoaWNoIG1vZGFsIHdhcyBjYWxsZWRcbiAgICB0aGlzLmNsb3NlU3ViamVjdC5uZXh0KG5ld0J1bGtPcGVyYXRpb24uZGF0YSk7XG4gICAgdGhpcy5ic01vZGFsUmVmLmhpZGUoKTtcbiAgfVxufVxuIl19