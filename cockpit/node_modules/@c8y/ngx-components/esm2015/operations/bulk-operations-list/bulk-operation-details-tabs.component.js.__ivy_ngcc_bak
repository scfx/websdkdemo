import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';
import { gettext } from '@c8y/ngx-components';
export class BulkOperationDetailsTabsComponent {
    constructor() {
        this.readOnly = false;
        this.onRetryFailedOperations = new EventEmitter();
        this.showFailedOperation = new EventEmitter();
        this.tabs = [];
    }
    ngOnInit() {
        this.template = this.detailsTemplate;
        this.tabs = [
            {
                label: gettext('Details'),
                path: null,
                icon: 'asterisk',
                template: this.detailsTemplate
            },
            {
                label: gettext('History of changes'),
                path: null,
                icon: 'archive',
                template: this.auditTemplate
            }
        ];
    }
}
BulkOperationDetailsTabsComponent.decorators = [
    { type: Component, args: [{
                selector: 'c8y-bulk-operation-details-tabs',
                template: "<div #container class=\"tabContainer\">\n  <ul class=\"nav nav-tabs nav-tabsc8y\">\n    <li [ngClass]=\"{ active: tab.template === template }\" *ngFor=\"let tab of tabs\">\n      <button [title]=\"tab.label | translate\" class=\"btn-clean\" (click)=\"template = tab.template\">\n        <i [c8yIcon]=\"tab.icon\"></i>\n        <span class=\"txt\">{{ tab.label | translate }}</span>\n      </button>\n    </li>\n  </ul>\n</div>\n\n<ng-container *ngTemplateOutlet=\"template\"></ng-container>\n\n<ng-template #details>\n  <c8y-bulk-operation-details\n    [bulkOperation]=\"bulkOperation\"\n    [readOnly]=\"readOnly\"\n    (showFailedOperation)=\"showFailedOperation.emit($event)\"\n  >\n  </c8y-bulk-operation-details>\n</ng-template>\n\n<ng-template #audit>\n  <c8y-audit-log [source]=\"bulkOperation.id\"></c8y-audit-log>\n</ng-template>\n\n<c8y-single-operations-list\n  [bulkOperation]=\"bulkOperation\"\n  [readOnly]=\"readOnly\"\n  (onRetryFailedOperations)=\"onRetryFailedOperations.emit($event)\"\n  class=\"d-flex d-col\"\n></c8y-single-operations-list>\n"
            },] }
];
BulkOperationDetailsTabsComponent.propDecorators = {
    bulkOperation: [{ type: Input }],
    readOnly: [{ type: Input }],
    onRetryFailedOperations: [{ type: Output }],
    showFailedOperation: [{ type: Output }],
    detailsTemplate: [{ type: ViewChild, args: ['details', { static: true },] }],
    auditTemplate: [{ type: ViewChild, args: ['audit', { static: true },] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVsay1vcGVyYXRpb24tZGV0YWlscy10YWJzLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL29wZXJhdGlvbnMvYnVsay1vcGVyYXRpb25zLWxpc3QvYnVsay1vcGVyYXRpb24tZGV0YWlscy10YWJzLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ0wsU0FBUyxFQUNULFlBQVksRUFDWixLQUFLLEVBRUwsTUFBTSxFQUNOLFNBQVMsRUFFVixNQUFNLGVBQWUsQ0FBQztBQUV2QixPQUFPLEVBQUUsT0FBTyxFQUFPLE1BQU0scUJBQXFCLENBQUM7QUFNbkQsTUFBTSxPQUFPLGlDQUFpQztJQUo5QztRQVFFLGFBQVEsR0FBWSxLQUFLLENBQUM7UUFDaEIsNEJBQXVCLEdBQTBDLElBQUksWUFBWSxFQUFFLENBQUM7UUFDcEYsd0JBQW1CLEdBQXlCLElBQUksWUFBWSxFQUFFLENBQUM7UUFLekUsU0FBSSxHQUFVLEVBQUUsQ0FBQztJQXFCbkIsQ0FBQztJQWxCQyxRQUFRO1FBQ04sSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsZUFBZSxDQUFDO1FBRXJDLElBQUksQ0FBQyxJQUFJLEdBQUc7WUFDVjtnQkFDRSxLQUFLLEVBQUUsT0FBTyxDQUFDLFNBQVMsQ0FBQztnQkFDekIsSUFBSSxFQUFFLElBQUk7Z0JBQ1YsSUFBSSxFQUFFLFVBQVU7Z0JBQ2hCLFFBQVEsRUFBRSxJQUFJLENBQUMsZUFBZTthQUMvQjtZQUNEO2dCQUNFLEtBQUssRUFBRSxPQUFPLENBQUMsb0JBQW9CLENBQUM7Z0JBQ3BDLElBQUksRUFBRSxJQUFJO2dCQUNWLElBQUksRUFBRSxTQUFTO2dCQUNmLFFBQVEsRUFBRSxJQUFJLENBQUMsYUFBYTthQUM3QjtTQUNGLENBQUM7SUFDSixDQUFDOzs7WUFuQ0YsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxpQ0FBaUM7Z0JBQzNDLG1qQ0FBMkQ7YUFDNUQ7Ozs0QkFFRSxLQUFLO3VCQUVMLEtBQUs7c0NBRUwsTUFBTTtrQ0FDTixNQUFNOzhCQUVOLFNBQVMsU0FBQyxTQUFTLEVBQUUsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFOzRCQUNyQyxTQUFTLFNBQUMsT0FBTyxFQUFFLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIENvbXBvbmVudCxcbiAgRXZlbnRFbWl0dGVyLFxuICBJbnB1dCxcbiAgT25Jbml0LFxuICBPdXRwdXQsXG4gIFZpZXdDaGlsZCxcbiAgVmlld0NvbnRhaW5lclJlZlxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IElPcGVyYXRpb25CdWxrIH0gZnJvbSAnQGM4eS9jbGllbnQnO1xuaW1wb3J0IHsgZ2V0dGV4dCwgVGFiIH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cyc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2M4eS1idWxrLW9wZXJhdGlvbi1kZXRhaWxzLXRhYnMnLFxuICB0ZW1wbGF0ZVVybDogJy4vYnVsay1vcGVyYXRpb24tZGV0YWlscy10YWJzLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBCdWxrT3BlcmF0aW9uRGV0YWlsc1RhYnNDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICBASW5wdXQoKVxuICBidWxrT3BlcmF0aW9uOiBQYXJ0aWFsPElPcGVyYXRpb25CdWxrPjtcbiAgQElucHV0KClcbiAgcmVhZE9ubHk6IGJvb2xlYW4gPSBmYWxzZTtcbiAgQE91dHB1dCgpIG9uUmV0cnlGYWlsZWRPcGVyYXRpb25zOiBFdmVudEVtaXR0ZXI8UGFydGlhbDxJT3BlcmF0aW9uQnVsaz4+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICBAT3V0cHV0KCkgc2hvd0ZhaWxlZE9wZXJhdGlvbjogRXZlbnRFbWl0dGVyPG51bWJlcj4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgQFZpZXdDaGlsZCgnZGV0YWlscycsIHsgc3RhdGljOiB0cnVlIH0pIGRldGFpbHNUZW1wbGF0ZTogYW55O1xuICBAVmlld0NoaWxkKCdhdWRpdCcsIHsgc3RhdGljOiB0cnVlIH0pIGF1ZGl0VGVtcGxhdGU6IGFueTtcblxuICB0YWJzOiBUYWJbXSA9IFtdO1xuICB0ZW1wbGF0ZTogVmlld0NvbnRhaW5lclJlZjtcblxuICBuZ09uSW5pdCgpOiB2b2lkIHtcbiAgICB0aGlzLnRlbXBsYXRlID0gdGhpcy5kZXRhaWxzVGVtcGxhdGU7XG5cbiAgICB0aGlzLnRhYnMgPSBbXG4gICAgICB7XG4gICAgICAgIGxhYmVsOiBnZXR0ZXh0KCdEZXRhaWxzJyksXG4gICAgICAgIHBhdGg6IG51bGwsXG4gICAgICAgIGljb246ICdhc3RlcmlzaycsXG4gICAgICAgIHRlbXBsYXRlOiB0aGlzLmRldGFpbHNUZW1wbGF0ZVxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgbGFiZWw6IGdldHRleHQoJ0hpc3Rvcnkgb2YgY2hhbmdlcycpLFxuICAgICAgICBwYXRoOiBudWxsLFxuICAgICAgICBpY29uOiAnYXJjaGl2ZScsXG4gICAgICAgIHRlbXBsYXRlOiB0aGlzLmF1ZGl0VGVtcGxhdGVcbiAgICAgIH1cbiAgICBdO1xuICB9XG59XG4iXX0=