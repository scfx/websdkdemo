import { Component, ViewChild, Input } from '@angular/core';
import { NavigatorNode } from './navigator-node';
import { NavigatorService } from './navigator.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './navigator.service';

const _c0 = ["iconTpl"];
function NavigatorItemComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵprojection(0);
} }
const _c1 = ["*"];
export class NavigatorItemComponent {
    constructor(service) {
        this.service = service;
        this.priority = 0;
        this.nodeData = new NavigatorNode();
    }
    ngOnInit() {
        this.ngOnChanges();
        setTimeout(() => this.service.add(this.nodeData));
    }
    ngOnChanges() {
        this.nodeData.icon = this.icon;
        this.nodeData.label = this.label;
        this.nodeData.path = this.path;
        this.nodeData.priority = this.priority;
        this.nodeData.iconTemplate = !this.icon ? this.template : undefined;
        this.nodeData.icon = this.icon;
    }
    ngOnDestroy() {
        this.service.remove(this.nodeData);
    }
}
NavigatorItemComponent.ɵfac = function NavigatorItemComponent_Factory(t) { return new (t || NavigatorItemComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NavigatorService)); };
NavigatorItemComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: NavigatorItemComponent, selectors: [["c8y-navigator-item"]], viewQuery: function NavigatorItemComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c0, 7);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.template = _t.first);
    } }, inputs: { priority: "priority", label: "label", icon: "icon", path: "path" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c1, decls: 2, vars: 0, consts: [["iconTpl", ""]], template: function NavigatorItemComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵtemplate(0, NavigatorItemComponent_ng_template_0_Template, 1, 0, "ng-template", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);
    } }, encapsulation: 2 });
NavigatorItemComponent.ctorParameters = () => [
    { type: NavigatorService }
];
NavigatorItemComponent.propDecorators = {
    template: [{ type: ViewChild, args: ['iconTpl', { static: true },] }],
    label: [{ type: Input }],
    icon: [{ type: Input }],
    path: [{ type: Input }],
    priority: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NavigatorItemComponent, [{
        type: Component,
        args: [{
                selector: 'c8y-navigator-item',
                template: '<ng-template #iconTpl><ng-content></ng-content></ng-template>'
            }]
    }], function () { return [{ type: ɵngcc1.NavigatorService }]; }, { priority: [{
            type: Input
        }], template: [{
            type: ViewChild,
            args: ['iconTpl', { static: true }]
        }], label: [{
            type: Input
        }], icon: [{
            type: Input
        }], path: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmF2aWdhdG9yLWVudHJ5LmNvbXBvbmVudC5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vY29yZS9uYXZpZ2F0b3IvbmF2aWdhdG9yLWVudHJ5LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFlLFNBQVMsRUFBRSxLQUFLLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDeEUsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQ2pELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHFCQUFxQixDQUFDOzs7Ozs7Ozs7QUFNdkQsTUFBTSxPQUFPLHNCQUFzQjtBQUFHLElBT3BDLFlBQ1UsT0FBeUI7QUFDbEMsUUFEUyxZQUFPLEdBQVAsT0FBTyxDQUFrQjtBQUNyQyxRQUpXLGFBQVEsR0FBRyxDQUFDLENBQUM7QUFDeEIsUUFJSSxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksYUFBYSxFQUFFLENBQUM7QUFDeEMsSUFBRSxDQUFDO0FBQ0gsSUFDRSxRQUFRO0FBQUssUUFDWCxJQUFJLENBQUMsV0FBVyxFQUFFLENBQUM7QUFDdkIsUUFBSSxVQUFVLENBQUMsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7QUFDdEQsSUFBRSxDQUFDO0FBQ0gsSUFDRSxXQUFXO0FBQUssUUFDZCxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDO0FBQ25DLFFBQUksSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQztBQUNyQyxRQUFJLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUM7QUFDbkMsUUFBSSxJQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDO0FBQzNDLFFBQUksSUFBSSxDQUFDLFFBQVEsQ0FBQyxZQUFZLEdBQUcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUM7QUFDeEUsUUFBSSxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDO0FBQ25DLElBQUUsQ0FBQztBQUNILElBQ0UsV0FBVztBQUFLLFFBQ2QsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0FBQ3ZDLElBQUUsQ0FBQztBQUNIO2tEQWxDQyxTQUFTLFNBQUMsa0JBQ1QsUUFBUSxFQUFFLG9CQUFvQixrQkFDOUIsUUFBUSxFQUFFO29DQUErRCxjQUMxRTs7Ozs7Ozs7NkJBQ0k7QUFBQztBQUNTLFlBUE4sZ0JBQWdCO0FBQUc7QUFBRztBQUc1Qix1QkFJQSxTQUFTLFNBQUMsU0FBUyxFQUFFLEVBQUMsTUFBTSxFQUFFLElBQUksRUFBQztBQUFPLG9CQUMxQyxLQUFLO0FBQUssbUJBQ1YsS0FBSztBQUFLLG1CQUNWLEtBQUs7QUFBSyx1QkFDVixLQUFLO0FBQUk7Ozs7Ozs7Ozs7Ozs7Ozs7OztvQkFBRTtBQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBUZW1wbGF0ZVJlZiwgVmlld0NoaWxkLCBJbnB1dH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBOYXZpZ2F0b3JOb2RlIH0gZnJvbSAnLi9uYXZpZ2F0b3Itbm9kZSc7XG5pbXBvcnQgeyBOYXZpZ2F0b3JTZXJ2aWNlIH0gZnJvbSAnLi9uYXZpZ2F0b3Iuc2VydmljZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2M4eS1uYXZpZ2F0b3ItaXRlbScsXG4gIHRlbXBsYXRlOiAnPG5nLXRlbXBsYXRlICNpY29uVHBsPjxuZy1jb250ZW50PjwvbmctY29udGVudD48L25nLXRlbXBsYXRlPicsXG59KVxuZXhwb3J0IGNsYXNzIE5hdmlnYXRvckl0ZW1Db21wb25lbnQgIHtcbiAgQFZpZXdDaGlsZCgnaWNvblRwbCcsIHtzdGF0aWM6IHRydWV9KSB0ZW1wbGF0ZTogVGVtcGxhdGVSZWY8YW55PjtcbiAgQElucHV0KCkgbGFiZWw6IHN0cmluZztcbiAgQElucHV0KCkgaWNvbjogc3RyaW5nO1xuICBASW5wdXQoKSBwYXRoOiBzdHJpbmc7XG4gIEBJbnB1dCgpIHByaW9yaXR5ID0gMDtcbiAgbm9kZURhdGE6IE5hdmlnYXRvck5vZGU7XG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgc2VydmljZTogTmF2aWdhdG9yU2VydmljZVxuICApIHtcbiAgICB0aGlzLm5vZGVEYXRhID0gbmV3IE5hdmlnYXRvck5vZGUoKTtcbiAgfVxuXG4gIG5nT25Jbml0KCk6IHZvaWQge1xuICAgIHRoaXMubmdPbkNoYW5nZXMoKTtcbiAgICBzZXRUaW1lb3V0KCgpID0+IHRoaXMuc2VydmljZS5hZGQodGhpcy5ub2RlRGF0YSkpO1xuICB9XG5cbiAgbmdPbkNoYW5nZXMoKTogdm9pZCB7XG4gICAgdGhpcy5ub2RlRGF0YS5pY29uID0gdGhpcy5pY29uO1xuICAgIHRoaXMubm9kZURhdGEubGFiZWwgPSB0aGlzLmxhYmVsO1xuICAgIHRoaXMubm9kZURhdGEucGF0aCA9IHRoaXMucGF0aDtcbiAgICB0aGlzLm5vZGVEYXRhLnByaW9yaXR5ID0gdGhpcy5wcmlvcml0eTtcbiAgICB0aGlzLm5vZGVEYXRhLmljb25UZW1wbGF0ZSA9ICF0aGlzLmljb24gPyB0aGlzLnRlbXBsYXRlIDogdW5kZWZpbmVkO1xuICAgIHRoaXMubm9kZURhdGEuaWNvbiA9IHRoaXMuaWNvbjtcbiAgfVxuXG4gIG5nT25EZXN0cm95KCk6IHZvaWQge1xuICAgIHRoaXMuc2VydmljZS5yZW1vdmUodGhpcy5ub2RlRGF0YSk7XG4gIH1cbn1cbiJdfQ==