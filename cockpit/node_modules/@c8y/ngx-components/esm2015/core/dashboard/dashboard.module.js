import { DragDropModule } from '@angular/cdk/drag-drop';
import { NgModule } from '@angular/core';
import { BsDropdownModule } from 'ngx-bootstrap/dropdown';
import { ActionBarModule } from '../action-bar/action-bar.module';
import { CommonModule } from '../common/common.module';
import { DynamicComponentModule } from '../dynamic-component/dynamic-component.module';
import { DashboardChildActionComponent } from './dashboard-child-action.component';
import { DashboardChildTitleComponent } from './dashboard-child-title.component';
import { DashboardChildComponent } from './dashboard-child.component';
import { DashboardComponent } from './dashboard.component';
import { WidgetsDashboardComponent } from './widgets-dashboard.component';
import { HeaderModule } from '../header/header.module';
import { DocsModule } from '../docs/docs.module';
import { BreadcrumbModule } from '../breadcrumb/breadcrumb.module';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from 'ngx-bootstrap/dropdown';
export class DashboardModule {
}
DashboardModule.ɵfac = function DashboardModule_Factory(t) { return new (t || DashboardModule)(); };
DashboardModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: DashboardModule });
DashboardModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[
            CommonModule,
            ActionBarModule,
            DynamicComponentModule,
            DragDropModule,
            BsDropdownModule.forRoot(),
            HeaderModule,
            DocsModule,
            BreadcrumbModule
        ]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DashboardModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    DashboardChildComponent,
                    DashboardComponent,
                    DashboardChildTitleComponent,
                    DashboardChildActionComponent,
                    WidgetsDashboardComponent
                ],
                imports: [
                    CommonModule,
                    ActionBarModule,
                    DynamicComponentModule,
                    DragDropModule,
                    BsDropdownModule.forRoot(),
                    HeaderModule,
                    DocsModule,
                    BreadcrumbModule
                ],
                exports: [
                    DashboardComponent,
                    DashboardChildComponent,
                    DashboardChildTitleComponent,
                    DashboardChildActionComponent,
                    WidgetsDashboardComponent
                ]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DashboardModule, { declarations: function () { return [DashboardChildComponent,
        DashboardComponent,
        DashboardChildTitleComponent,
        DashboardChildActionComponent,
        WidgetsDashboardComponent]; }, imports: function () { return [CommonModule,
        ActionBarModule,
        DynamicComponentModule,
        DragDropModule, ɵngcc1.BsDropdownModule, HeaderModule,
        DocsModule,
        BreadcrumbModule]; }, exports: function () { return [DashboardComponent,
        DashboardChildComponent,
        DashboardChildTitleComponent,
        DashboardChildActionComponent,
        WidgetsDashboardComponent]; } }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGFzaGJvYXJkLm1vZHVsZS5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vY29yZS9kYXNoYm9hcmQvZGFzaGJvYXJkLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDeEQsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUMxRCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFDbEUsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQ3ZELE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLCtDQUErQyxDQUFDO0FBQ3ZGLE9BQU8sRUFBRSw2QkFBNkIsRUFBRSxNQUFNLG9DQUFvQyxDQUFDO0FBQ25GLE9BQU8sRUFBRSw0QkFBNEIsRUFBRSxNQUFNLG1DQUFtQyxDQUFDO0FBQ2pGLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBQ3RFLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQzNELE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBQzFFLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUN2RCxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDakQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0saUNBQWlDLENBQUM7OztBQTRCbkUsTUFBTSxPQUFPLGVBQWU7QUFBRzsyQ0ExQjlCLFFBQVEsU0FBQyxrQkFDUixZQUFZLEVBQUU7YUFDWix1QkFBdUIsc0JBQ3ZCLGtCQUFrQjtTQUNsQiw0QkFBNEIsc0JBQzVCO2FBQTZCO1NBQzdCO0tBQXlCLGtCQUMxQjtLQUNELE9BQU8sRUFBRTtRQUNQLFlBQVk7RUFDWixlQUFlO2FBQ2Y7V0FBc0I7SUFDdEI7R0FBYyxzQkFDZCxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUUsc0JBQzFCLFlBQVksc0JBQ1o7TUFBVTtJQUNWO0dBQWdCLGtCQUNqQjtPQUNELE9BQU8sRUFBRSxzQkFDUDtXQUFrQixzQkFDbEI7Z0JBQXVCLHNCQUN2QjtnQkFBNEIsc0JBQzVCO2dCQUE2QixzQkFDN0I7aUJBQXlCO2dCQUMxQjtJQUNGOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OytDQUNJO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEcmFnRHJvcE1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9kcmFnLWRyb3AnO1xuaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEJzRHJvcGRvd25Nb2R1bGUgfSBmcm9tICduZ3gtYm9vdHN0cmFwL2Ryb3Bkb3duJztcbmltcG9ydCB7IEFjdGlvbkJhck1vZHVsZSB9IGZyb20gJy4uL2FjdGlvbi1iYXIvYWN0aW9uLWJhci5tb2R1bGUnO1xuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnLi4vY29tbW9uL2NvbW1vbi5tb2R1bGUnO1xuaW1wb3J0IHsgRHluYW1pY0NvbXBvbmVudE1vZHVsZSB9IGZyb20gJy4uL2R5bmFtaWMtY29tcG9uZW50L2R5bmFtaWMtY29tcG9uZW50Lm1vZHVsZSc7XG5pbXBvcnQgeyBEYXNoYm9hcmRDaGlsZEFjdGlvbkNvbXBvbmVudCB9IGZyb20gJy4vZGFzaGJvYXJkLWNoaWxkLWFjdGlvbi5jb21wb25lbnQnO1xuaW1wb3J0IHsgRGFzaGJvYXJkQ2hpbGRUaXRsZUNvbXBvbmVudCB9IGZyb20gJy4vZGFzaGJvYXJkLWNoaWxkLXRpdGxlLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBEYXNoYm9hcmRDaGlsZENvbXBvbmVudCB9IGZyb20gJy4vZGFzaGJvYXJkLWNoaWxkLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBEYXNoYm9hcmRDb21wb25lbnQgfSBmcm9tICcuL2Rhc2hib2FyZC5jb21wb25lbnQnO1xuaW1wb3J0IHsgV2lkZ2V0c0Rhc2hib2FyZENvbXBvbmVudCB9IGZyb20gJy4vd2lkZ2V0cy1kYXNoYm9hcmQuY29tcG9uZW50JztcbmltcG9ydCB7IEhlYWRlck1vZHVsZSB9IGZyb20gJy4uL2hlYWRlci9oZWFkZXIubW9kdWxlJztcbmltcG9ydCB7IERvY3NNb2R1bGUgfSBmcm9tICcuLi9kb2NzL2RvY3MubW9kdWxlJztcbmltcG9ydCB7IEJyZWFkY3J1bWJNb2R1bGUgfSBmcm9tICcuLi9icmVhZGNydW1iL2JyZWFkY3J1bWIubW9kdWxlJztcblxuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbXG4gICAgRGFzaGJvYXJkQ2hpbGRDb21wb25lbnQsXG4gICAgRGFzaGJvYXJkQ29tcG9uZW50LFxuICAgIERhc2hib2FyZENoaWxkVGl0bGVDb21wb25lbnQsXG4gICAgRGFzaGJvYXJkQ2hpbGRBY3Rpb25Db21wb25lbnQsXG4gICAgV2lkZ2V0c0Rhc2hib2FyZENvbXBvbmVudFxuICBdLFxuICBpbXBvcnRzOiBbXG4gICAgQ29tbW9uTW9kdWxlLFxuICAgIEFjdGlvbkJhck1vZHVsZSxcbiAgICBEeW5hbWljQ29tcG9uZW50TW9kdWxlLFxuICAgIERyYWdEcm9wTW9kdWxlLFxuICAgIEJzRHJvcGRvd25Nb2R1bGUuZm9yUm9vdCgpLFxuICAgIEhlYWRlck1vZHVsZSxcbiAgICBEb2NzTW9kdWxlLFxuICAgIEJyZWFkY3J1bWJNb2R1bGVcbiAgXSxcbiAgZXhwb3J0czogW1xuICAgIERhc2hib2FyZENvbXBvbmVudCxcbiAgICBEYXNoYm9hcmRDaGlsZENvbXBvbmVudCxcbiAgICBEYXNoYm9hcmRDaGlsZFRpdGxlQ29tcG9uZW50LFxuICAgIERhc2hib2FyZENoaWxkQWN0aW9uQ29tcG9uZW50LFxuICAgIFdpZGdldHNEYXNoYm9hcmRDb21wb25lbnRcbiAgXSxcbn0pXG5leHBvcnQgY2xhc3MgRGFzaGJvYXJkTW9kdWxlIHt9XG4iXX0=