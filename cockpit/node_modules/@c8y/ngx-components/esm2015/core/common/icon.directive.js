import { Directive, Renderer2, Input, ElementRef } from '@angular/core';
/**
 * Allows to set a icon. Switches between c8y default icons
 * and font awesome icons
 * @example <i [c8yIcon]="'clock'">
 */
import * as ɵngcc0 from '@angular/core';
export class IconDirective {
    constructor(el, renderer) {
        this.el = el;
        this.renderer = renderer;
        this.c8yMatch = /^c8y-/;
        this.klasses = [];
        this.currentClasses = '';
    }
    set c8yIcon(icon) {
        this.updateIcon(icon);
    }
    isC8y(icon) {
        return this.c8yMatch.test(icon);
    }
    getClasses(icon = '') {
        let classes = '';
        if (icon) {
            const _icon = icon.trim();
            const isC8y = this.isC8y(_icon);
            const iconClass = isC8y ? _icon.replace(this.c8yMatch, 'c8y-icon-') : `dlt-c8y-icon-${_icon}`;
            classes = `${isC8y ? 'c8y-icon' : ''} ${iconClass}`;
        }
        return classes;
    }
    updateIcon(icon) {
        const newClasses = this.getClasses(icon);
        if (newClasses !== this.currentClasses) {
            this.currentClasses.split(/\s/).filter((c) => c).forEach((klass) => {
                this.renderer.removeClass(this.el.nativeElement, klass);
            });
            newClasses.split(/\s/).filter((c) => c).forEach((klass) => {
                this.renderer.addClass(this.el.nativeElement, klass);
            });
            this.currentClasses = newClasses;
        }
    }
}
IconDirective.ɵfac = function IconDirective_Factory(t) { return new (t || IconDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };
IconDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: IconDirective, selectors: [["", "c8yIcon", ""]], inputs: { c8yIcon: "c8yIcon" } });
IconDirective.ctorParameters = () => [
    { type: ElementRef },
    { type: Renderer2 }
];
IconDirective.propDecorators = {
    c8yIcon: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(IconDirective, [{
        type: Directive,
        args: [{
                selector: '[c8yIcon]'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }]; }, { c8yIcon: [{
            type: Input
        }] }); })();
export const ICONS = [
    'home',
    'th',
    'bar-chart-o',
    'tasks',
    'tachometer',
    'bell',
    'puzzle-piece',
    'map-marker',
    'location-arrow',
    'globe',
    'power-off',
    'desktop',
    'laptop',
    'mobile',
    'signal',
    'qrcode',
    'file',
    'file-text',
    'folder',
    'folder-open',
    'archive',
    'ssd',
    'book',
    'bookmark',
    'tag',
    'flag',
    'search',
    'heart',
    'star',
    'bolt',
    'cog',
    'cogs',
    'wrench',
    'ban',
    'user',
    'users',
    'sign-in',
    'sign-out',
    'upload',
    'download',
    'cloud-upload',
    'cloud-download',
    'cloud',
    'hourglass',
    'refresh',
    'repeat',
    'undo',
    'lock',
    'unlock',
    'info',
    'question-circle',
    'exclamation-circle',
    'bug',
    'calendar',
    'random',
    'asterisk',
    'key',
    'link',
    'chain-broken',
    'external-link',
    'picture-o',
    'comment',
    'bullhorn',
    'phone',
    'lightbulb-o',
    'flask',
    'cloud-network',
    'exchange',
    'code-fork',
    'keyboard-o',
    'terminal',
    'code',
    'clipboard',
    'pencil',
    'envelope',
    'inbox',
    'reply',
    'share',
    'thumbs-up',
    'thumbs-down',
    'check',
    'plus',
    'expand',
    'compress',
    'arrows',
    'arrow-up',
    'arrow-down',
    'arrow-left',
    'arrow-right',
    'th-list',
    'bars',
    'table',
    'columns',
    'filter',
    'sort',
    'sort-up',
    'sort-down',
    'ellipsis-h',
    'ellipsis-v',
    'rss'
];

//# sourceMappingURL=data:application/json;charset=utf-8;base64,