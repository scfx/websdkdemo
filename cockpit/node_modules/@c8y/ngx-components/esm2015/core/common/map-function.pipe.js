/*
 * Implementation of pure "Mapping" pipe based on
 * https://codeburst.io/angular-bad-practices-eab0e594ce92#389b
 */
import { Pipe } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
export class MapFunctionPipe {
    /*
     * This will be a universal pipe for array mappings. You may add more
     * type checkings and runtime checkings to make sure it works correctly everywhere.
     */
    transform(value, mappingFunction, thisArg) {
        return mappingFunction.apply(thisArg || this, Array.isArray(value) ? value : [value]);
    }
}
MapFunctionPipe.ɵfac = function MapFunctionPipe_Factory(t) { return new (t || MapFunctionPipe)(); };
MapFunctionPipe.ɵpipe = /*@__PURE__*/ ɵngcc0.ɵɵdefinePipe({ name: "map", type: MapFunctionPipe, pure: true });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MapFunctionPipe, [{
        type: Pipe,
        args: [{
                name: 'map'
            }]
    }], null, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFwLWZ1bmN0aW9uLnBpcGUuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2NvcmUvY29tbW9uL21hcC1mdW5jdGlvbi5waXBlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFFSCxPQUFPLEVBQUUsSUFBSSxFQUFpQixNQUFNLGVBQWUsQ0FBQzs7QUFLcEQsTUFBTSxPQUFPLGVBQWU7QUFBRyxJQUM3QjtBQUNGO0FBQ0U7QUFDRSxPQUFDO0FBQ0wsSUFBRSxTQUFTLENBQUMsS0FBSyxFQUFFLGVBQWtDLEVBQUUsT0FBYTtBQUNwRSxRQUFJLE9BQU8sZUFBZSxDQUFDLEtBQUssQ0FBQyxPQUFPLElBQUksSUFBSSxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO0FBQzFGLElBQUUsQ0FBQztBQUNIOzJDQVhDLElBQUksU0FBQyxrQkFDSixJQUFJLEVBQUUsS0FBSyxjQUNaOzs7Ozs7OzBCQUNJO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogSW1wbGVtZW50YXRpb24gb2YgcHVyZSBcIk1hcHBpbmdcIiBwaXBlIGJhc2VkIG9uXG4gKiBodHRwczovL2NvZGVidXJzdC5pby9hbmd1bGFyLWJhZC1wcmFjdGljZXMtZWFiMGU1OTRjZTkyIzM4OWJcbiAqL1xuXG5pbXBvcnQgeyBQaXBlLCBQaXBlVHJhbnNmb3JtIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBQaXBlKHtcbiAgbmFtZTogJ21hcCdcbn0pXG5leHBvcnQgY2xhc3MgTWFwRnVuY3Rpb25QaXBlIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XG4gIC8qXG4gICAqIFRoaXMgd2lsbCBiZSBhIHVuaXZlcnNhbCBwaXBlIGZvciBhcnJheSBtYXBwaW5ncy4gWW91IG1heSBhZGQgbW9yZVxuICAgKiB0eXBlIGNoZWNraW5ncyBhbmQgcnVudGltZSBjaGVja2luZ3MgdG8gbWFrZSBzdXJlIGl0IHdvcmtzIGNvcnJlY3RseSBldmVyeXdoZXJlLlxuICAgKi9cbiAgdHJhbnNmb3JtKHZhbHVlLCBtYXBwaW5nRnVuY3Rpb246IChhcmc6IGFueSkgPT4gYW55LCB0aGlzQXJnPzogYW55KSB7XG4gICAgcmV0dXJuIG1hcHBpbmdGdW5jdGlvbi5hcHBseSh0aGlzQXJnIHx8IHRoaXMsIEFycmF5LmlzQXJyYXkodmFsdWUpID8gdmFsdWUgOiBbdmFsdWVdKTtcbiAgfVxufVxuIl19