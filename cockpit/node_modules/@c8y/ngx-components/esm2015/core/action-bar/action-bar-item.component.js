import { Component, Input, ViewChild } from '@angular/core';
import { ActionBarService } from './action-bar.service';
/**
 * A <c8y-action-bar-item> can be added with content projection.
 * It allows to show items in three positions (left, right
 * or more).
 *
 * @example
 * ```html
 * <c8y-action-bar-item [placement]="'right'">
 *   <button class="btn btn-link" (click)="addRandom()"><i c8yIcon="plus-circle"></i> Add random</button>
 * </c8y-action-bar-item>
 * ```
 */
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './action-bar.service';

const _c0 = ["template"];
function ActionBarItemComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "li");
    ɵngcc0.ɵɵprojection(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMap(ctx_r1.itemClass);
} }
const _c1 = ["*"];
export class ActionBarItemComponent {
    /**
     * @ignore
     */
    constructor(actionBarService) {
        this.actionBarService = actionBarService;
        /**
         * Where the item should be shown. Use "more" to place
         * it in a dropdown on the right.
         */
        this.placement = 'left';
        /**
         * Priority for sorting the list. Higher priority means
         * an earlier position in the list.
         */
        this.priority = 0;
        /**
         * Adds additional classes to the item.
         */
        this.itemClass = '';
    }
    /**
     * @ignore
     */
    ngAfterViewInit() {
        this.viewInitTimeout = setTimeout(() => this.actionBarService.add(this));
    }
    /**
     * @ignore
     */
    ngOnDestroy() {
        clearTimeout(this.viewInitTimeout);
        this.actionBarService.remove(this);
    }
}
ActionBarItemComponent.ɵfac = function ActionBarItemComponent_Factory(t) { return new (t || ActionBarItemComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ActionBarService)); };
ActionBarItemComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ActionBarItemComponent, selectors: [["c8y-action-bar-item"]], viewQuery: function ActionBarItemComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c0, 5);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.template = _t.first);
    } }, inputs: { placement: "placement", priority: "priority", itemClass: "itemClass" }, ngContentSelectors: _c1, decls: 2, vars: 0, consts: [["template", ""]], template: function ActionBarItemComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵtemplate(0, ActionBarItemComponent_ng_template_0_Template, 2, 3, "ng-template", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);
    } }, encapsulation: 2 });
ActionBarItemComponent.ctorParameters = () => [
    { type: ActionBarService }
];
ActionBarItemComponent.propDecorators = {
    placement: [{ type: Input }],
    priority: [{ type: Input }],
    itemClass: [{ type: Input }],
    template: [{ type: ViewChild, args: ['template', { static: false },] }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ActionBarItemComponent, [{
        type: Component,
        args: [{
                selector: 'c8y-action-bar-item',
                template: "<ng-template #template>\n  <li class=\"{{itemClass}}\">\n    <ng-content></ng-content>\n  </li>\n</ng-template>"
            }]
    }], function () { return [{ type: ɵngcc1.ActionBarService }]; }, { placement: [{
            type: Input
        }], priority: [{
            type: Input
        }], itemClass: [{
            type: Input
        }], template: [{
            type: ViewChild,
            args: ['template', { static: false }]
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWN0aW9uLWJhci1pdGVtLmNvbXBvbmVudC5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vY29yZS9hY3Rpb24tYmFyL2FjdGlvbi1iYXItaXRlbS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTVELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBRXhEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOzs7Ozs7Ozs7Ozs7OztBQUtILE1BQU0sT0FBTyxzQkFBc0I7QUFBRyxJQXlCcEM7QUFDRjtBQUNFLE9BQUc7QUFDTCxJQUFFLFlBQW9CLGdCQUFrQztBQUFJLFFBQXRDLHFCQUFnQixHQUFoQixnQkFBZ0IsQ0FBa0I7QUFBQyxRQTNCdkQ7QUFDRjtBQUNNO0FBRUEsV0FERDtBQUNMLFFBQVcsY0FBUyxHQUE4QixNQUFNLENBQUM7QUFDekQsUUFDRTtBQUNGO0FBQ007QUFFQSxXQUREO0FBQ0wsUUFBVyxhQUFRLEdBQVcsQ0FBQyxDQUFDO0FBQ2hDLFFBQ0U7QUFDRjtBQUVBLFdBREs7QUFDTCxRQUFXLGNBQVMsR0FBRyxFQUFFLENBQUM7QUFDMUIsSUFXMkQsQ0FBQztBQUM1RCxJQUNFO0FBQ0Y7QUFDRSxPQUFHO0FBQ0wsSUFBRSxlQUFlO0FBQ2pCLFFBQUksSUFBSSxDQUFDLGVBQWUsR0FBRyxVQUFVLENBQUMsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLEdBQUcsQ0FBQyxJQUFxQixDQUFDLENBQUMsQ0FBQztBQUM5RixJQUFFLENBQUM7QUFDSCxJQUNFO0FBQ0Y7QUFDRSxPQUFHO0FBQ0wsSUFBRSxXQUFXO0FBQ2IsUUFBSSxZQUFZLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxDQUFDO0FBQ3ZDLFFBQUksSUFBSSxDQUFDLGdCQUFnQixDQUFDLE1BQU0sQ0FBQyxJQUFxQixDQUFDLENBQUM7QUFDeEQsSUFBRSxDQUFDO0FBQ0g7a0RBaERDLFNBQVMsU0FBQyxrQkFDVCxRQUFRLEVBQUUscUJBQXFCLGtCQUMvQjt1RkFBK0MsY0FDaEQ7Ozs7Ozs7OzZCQUNJO0FBQUM7QUFBZ0QsWUFsQjdDLGdCQUFnQjtBQUFHO0FBQUc7QUFHcEIsd0JBb0JSLEtBQUs7QUFBSyx1QkFNVixLQUFLO0FBQUssd0JBS1YsS0FBSztBQUFLLHVCQUtWLFNBQVMsU0FBQyxVQUFVLEVBQUUsRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFO0FBQU07Ozs7Ozs7Ozs7Ozs7Ozs7b0JBQUU7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIFZpZXdDaGlsZCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQWN0aW9uQmFySXRlbSB9IGZyb20gJy4vYWN0aW9uLWJhci5tb2RlbCc7XG5pbXBvcnQgeyBBY3Rpb25CYXJTZXJ2aWNlIH0gZnJvbSAnLi9hY3Rpb24tYmFyLnNlcnZpY2UnO1xuXG4vKipcbiAqIEEgPGM4eS1hY3Rpb24tYmFyLWl0ZW0+IGNhbiBiZSBhZGRlZCB3aXRoIGNvbnRlbnQgcHJvamVjdGlvbi5cbiAqIEl0IGFsbG93cyB0byBzaG93IGl0ZW1zIGluIHRocmVlIHBvc2l0aW9ucyAobGVmdCwgcmlnaHRcbiAqIG9yIG1vcmUpLlxuICpcbiAqIEBleGFtcGxlXG4gKiBgYGBodG1sXG4gKiA8Yzh5LWFjdGlvbi1iYXItaXRlbSBbcGxhY2VtZW50XT1cIidyaWdodCdcIj5cbiAqICAgPGJ1dHRvbiBjbGFzcz1cImJ0biBidG4tbGlua1wiIChjbGljayk9XCJhZGRSYW5kb20oKVwiPjxpIGM4eUljb249XCJwbHVzLWNpcmNsZVwiPjwvaT4gQWRkIHJhbmRvbTwvYnV0dG9uPlxuICogPC9jOHktYWN0aW9uLWJhci1pdGVtPlxuICogYGBgXG4gKi9cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2M4eS1hY3Rpb24tYmFyLWl0ZW0nLFxuICB0ZW1wbGF0ZVVybDogJy4vYWN0aW9uLWJhci1pdGVtLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBBY3Rpb25CYXJJdGVtQ29tcG9uZW50IGltcGxlbWVudHMgQWN0aW9uQmFySXRlbSB7XG4gIC8qKlxuICAgKiBXaGVyZSB0aGUgaXRlbSBzaG91bGQgYmUgc2hvd24uIFVzZSBcIm1vcmVcIiB0byBwbGFjZVxuICAgKiBpdCBpbiBhIGRyb3Bkb3duIG9uIHRoZSByaWdodC5cbiAgICovXG4gIEBJbnB1dCgpIHBsYWNlbWVudDogJ2xlZnQnIHwgJ3JpZ2h0JyB8ICdtb3JlJyA9ICdsZWZ0JztcblxuICAvKipcbiAgICogUHJpb3JpdHkgZm9yIHNvcnRpbmcgdGhlIGxpc3QuIEhpZ2hlciBwcmlvcml0eSBtZWFuc1xuICAgKiBhbiBlYXJsaWVyIHBvc2l0aW9uIGluIHRoZSBsaXN0LlxuICAgKi9cbiAgQElucHV0KCkgcHJpb3JpdHk6IG51bWJlciA9IDA7XG5cbiAgLyoqXG4gICAqIEFkZHMgYWRkaXRpb25hbCBjbGFzc2VzIHRvIHRoZSBpdGVtLlxuICAgKi9cbiAgQElucHV0KCkgaXRlbUNsYXNzID0gJyc7XG5cbiAgLyoqXG4gICAqIEBpZ25vcmVcbiAgICovXG4gIEBWaWV3Q2hpbGQoJ3RlbXBsYXRlJywgeyBzdGF0aWM6IGZhbHNlIH0pIHRlbXBsYXRlOiBhbnk7XG5cbiAgcHJpdmF0ZSB2aWV3SW5pdFRpbWVvdXQ7XG5cbiAgLyoqXG4gICAqIEBpZ25vcmVcbiAgICovXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgYWN0aW9uQmFyU2VydmljZTogQWN0aW9uQmFyU2VydmljZSkge31cblxuICAvKipcbiAgICogQGlnbm9yZVxuICAgKi9cbiAgbmdBZnRlclZpZXdJbml0KCkge1xuICAgIHRoaXMudmlld0luaXRUaW1lb3V0ID0gc2V0VGltZW91dCgoKSA9PiB0aGlzLmFjdGlvbkJhclNlcnZpY2UuYWRkKHRoaXMgYXMgQWN0aW9uQmFySXRlbSkpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBpZ25vcmVcbiAgICovXG4gIG5nT25EZXN0cm95KCkge1xuICAgIGNsZWFyVGltZW91dCh0aGlzLnZpZXdJbml0VGltZW91dCk7XG4gICAgdGhpcy5hY3Rpb25CYXJTZXJ2aWNlLnJlbW92ZSh0aGlzIGFzIEFjdGlvbkJhckl0ZW0pO1xuICB9XG59XG4iXX0=