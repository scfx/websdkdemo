import { NgModule } from '@angular/core';
import { CdkStepperModule, CdkStep, STEPPER_GLOBAL_OPTIONS } from '@angular/cdk/stepper';
import { C8yStepper } from './stepper.component';
import { CommonModule } from '../common/common.module';
import { C8yStepperIcon } from './stepper-icon.directive';
import { C8yStepperProgress } from './stepper-progress.component';
import { TooltipModule } from 'ngx-bootstrap/tooltip';
import { C8yStepperButtons } from './stepper-buttons.component';
const ɵ0 = { displayDefaultIndicatorType: false };
/**
 * The angular module definition for c8y-stepper (Wizard).
 * @exports C8yStepper
 * @exports C8yStepperIcon
 * @exports C8yStepperButtons
 * @exports CdkStep
 */
export class StepperModule {
}
StepperModule.decorators = [
    { type: NgModule, args: [{
                imports: [CommonModule, CdkStepperModule, TooltipModule],
                declarations: [C8yStepper, C8yStepperIcon, C8yStepperProgress, C8yStepperButtons],
                exports: [C8yStepper, CdkStep, C8yStepperIcon, C8yStepperButtons],
                providers: [
                    {
                        /**
                         * This emables additional states, like: edit, done and error
                         * These states are used to display custom icons, if needed.
                         * Any change in here will most probably result in not showing custom icons anymore
                         */
                        provide: STEPPER_GLOBAL_OPTIONS,
                        useValue: ɵ0
                    }
                ]
            },] }
];
export { ɵ0 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RlcHBlci5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9jb3JlL3N0ZXBwZXIvc3RlcHBlci5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDekYsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ2pELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUN2RCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDMUQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFDbEUsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQ3RELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLDZCQUE2QixDQUFDO1dBcUJoRCxFQUFFLDJCQUEyQixFQUFFLEtBQUssRUFBRTtBQW5CdEQ7Ozs7OztHQU1HO0FBaUJILE1BQU0sT0FBTyxhQUFhOzs7WUFoQnpCLFFBQVEsU0FBQztnQkFDUixPQUFPLEVBQUUsQ0FBQyxZQUFZLEVBQUUsZ0JBQWdCLEVBQUUsYUFBYSxDQUFDO2dCQUN4RCxZQUFZLEVBQUUsQ0FBQyxVQUFVLEVBQUUsY0FBYyxFQUFFLGtCQUFrQixFQUFFLGlCQUFpQixDQUFDO2dCQUNqRixPQUFPLEVBQUUsQ0FBQyxVQUFVLEVBQUUsT0FBTyxFQUFFLGNBQWMsRUFBRSxpQkFBaUIsQ0FBQztnQkFDakUsU0FBUyxFQUFFO29CQUNUO3dCQUNFOzs7OzJCQUlHO3dCQUNILE9BQU8sRUFBRSxzQkFBc0I7d0JBQy9CLFFBQVEsSUFBd0M7cUJBQ2pEO2lCQUNGO2FBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ2RrU3RlcHBlck1vZHVsZSwgQ2RrU3RlcCwgU1RFUFBFUl9HTE9CQUxfT1BUSU9OUyB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9zdGVwcGVyJztcbmltcG9ydCB7IEM4eVN0ZXBwZXIgfSBmcm9tICcuL3N0ZXBwZXIuY29tcG9uZW50JztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJy4uL2NvbW1vbi9jb21tb24ubW9kdWxlJztcbmltcG9ydCB7IEM4eVN0ZXBwZXJJY29uIH0gZnJvbSAnLi9zdGVwcGVyLWljb24uZGlyZWN0aXZlJztcbmltcG9ydCB7IEM4eVN0ZXBwZXJQcm9ncmVzcyB9IGZyb20gJy4vc3RlcHBlci1wcm9ncmVzcy5jb21wb25lbnQnO1xuaW1wb3J0IHsgVG9vbHRpcE1vZHVsZSB9IGZyb20gJ25neC1ib290c3RyYXAvdG9vbHRpcCc7XG5pbXBvcnQgeyBDOHlTdGVwcGVyQnV0dG9ucyB9IGZyb20gJy4vc3RlcHBlci1idXR0b25zLmNvbXBvbmVudCc7XG5cbi8qKlxuICogVGhlIGFuZ3VsYXIgbW9kdWxlIGRlZmluaXRpb24gZm9yIGM4eS1zdGVwcGVyIChXaXphcmQpLlxuICogQGV4cG9ydHMgQzh5U3RlcHBlclxuICogQGV4cG9ydHMgQzh5U3RlcHBlckljb25cbiAqIEBleHBvcnRzIEM4eVN0ZXBwZXJCdXR0b25zXG4gKiBAZXhwb3J0cyBDZGtTdGVwXG4gKi9cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtDb21tb25Nb2R1bGUsIENka1N0ZXBwZXJNb2R1bGUsIFRvb2x0aXBNb2R1bGVdLFxuICBkZWNsYXJhdGlvbnM6IFtDOHlTdGVwcGVyLCBDOHlTdGVwcGVySWNvbiwgQzh5U3RlcHBlclByb2dyZXNzLCBDOHlTdGVwcGVyQnV0dG9uc10sXG4gIGV4cG9ydHM6IFtDOHlTdGVwcGVyLCBDZGtTdGVwLCBDOHlTdGVwcGVySWNvbiwgQzh5U3RlcHBlckJ1dHRvbnNdLFxuICBwcm92aWRlcnM6IFtcbiAgICB7XG4gICAgICAvKipcbiAgICAgICAqIFRoaXMgZW1hYmxlcyBhZGRpdGlvbmFsIHN0YXRlcywgbGlrZTogZWRpdCwgZG9uZSBhbmQgZXJyb3JcbiAgICAgICAqIFRoZXNlIHN0YXRlcyBhcmUgdXNlZCB0byBkaXNwbGF5IGN1c3RvbSBpY29ucywgaWYgbmVlZGVkLlxuICAgICAgICogQW55IGNoYW5nZSBpbiBoZXJlIHdpbGwgbW9zdCBwcm9iYWJseSByZXN1bHQgaW4gbm90IHNob3dpbmcgY3VzdG9tIGljb25zIGFueW1vcmVcbiAgICAgICAqL1xuICAgICAgcHJvdmlkZTogU1RFUFBFUl9HTE9CQUxfT1BUSU9OUyxcbiAgICAgIHVzZVZhbHVlOiB7IGRpc3BsYXlEZWZhdWx0SW5kaWNhdG9yVHlwZTogZmFsc2UgfVxuICAgIH1cbiAgXVxufSlcbmV4cG9ydCBjbGFzcyBTdGVwcGVyTW9kdWxlIHt9XG4iXX0=