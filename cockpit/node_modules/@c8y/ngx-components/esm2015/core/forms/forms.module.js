import { NgModule } from '@angular/core';
import { PhoneValidationDirective } from './phone-validation.directive';
import { DefaultValidationDirective } from './default-validation.directive';
import { MinValidationDirective } from './min-validation.directive';
import { MaxValidationDirective } from './max-validation.directive';
import { CommonModule } from '../common/common.module';
import { FormsModule as NgFormsModule } from '@angular/forms';
import { FormGroupComponent } from './form-group.component';
import { MessageDirective } from './message.directive';
import { MessagesComponent } from './messages.component';
import { InputGroupListComponent } from './input-group-list.component';
import { InputGroupListContainerDirective } from './input-group-list-container.directive';
import { JsonValidationPrettifierDirective } from './json-validation-prettifier.directive';
import { TextAreaRowHeightDirective } from './text-area-row-height.directive';
import { RequiredInputPlaceholderDirective } from './required-input-placeholder.directive';
import { IpRangeInputListComponent } from './ip-range-input-list.component';
import { FilterInputComponent } from './filter-input.component';
import { EmailsValidatorDirective } from './emails-validator.directive';
import { RangeComponent } from './range.component';
import { RangeDirective } from './range.directive';
/**
 * @exports FormGroupComponent A component that allows to group an input and can display warnings and errors.
 * @exports PhoneValidationDirective Allows to validate international phone numbers.
 * @exports NewsletterDirective Allows to subscribe to the newsletter.
 * @exports DefaultValidationDirective Allows to validate some predefined patterns.
 * @exports MessageDirective A directive that allows to define messages.
 * @exports MessagesComponent Allows to display error messages.
 * @exports RangeComponent A component that allows to display a styled range slider.
 */
import * as ɵngcc0 from '@angular/core';
export class FormsModule {
}
FormsModule.ɵfac = function FormsModule_Factory(t) { return new (t || FormsModule)(); };
FormsModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: FormsModule });
FormsModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule, NgFormsModule], NgFormsModule] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FormsModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, NgFormsModule],
                exports: [
                    PhoneValidationDirective,
                    DefaultValidationDirective,
                    MinValidationDirective,
                    MaxValidationDirective,
                    NgFormsModule,
                    FormGroupComponent,
                    MessageDirective,
                    MessagesComponent,
                    InputGroupListComponent,
                    InputGroupListContainerDirective,
                    JsonValidationPrettifierDirective,
                    TextAreaRowHeightDirective,
                    RequiredInputPlaceholderDirective,
                    IpRangeInputListComponent,
                    FilterInputComponent,
                    EmailsValidatorDirective,
                    RangeDirective,
                    RangeComponent
                ],
                declarations: [
                    PhoneValidationDirective,
                    DefaultValidationDirective,
                    MinValidationDirective,
                    MaxValidationDirective,
                    FormGroupComponent,
                    MessageDirective,
                    MessagesComponent,
                    InputGroupListComponent,
                    InputGroupListContainerDirective,
                    JsonValidationPrettifierDirective,
                    TextAreaRowHeightDirective,
                    RequiredInputPlaceholderDirective,
                    IpRangeInputListComponent,
                    FilterInputComponent,
                    EmailsValidatorDirective,
                    RangeDirective,
                    RangeComponent
                ]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(FormsModule, { declarations: function () { return [PhoneValidationDirective,
        DefaultValidationDirective,
        MinValidationDirective,
        MaxValidationDirective,
        FormGroupComponent,
        MessageDirective,
        MessagesComponent,
        InputGroupListComponent,
        InputGroupListContainerDirective,
        JsonValidationPrettifierDirective,
        TextAreaRowHeightDirective,
        RequiredInputPlaceholderDirective,
        IpRangeInputListComponent,
        FilterInputComponent,
        EmailsValidatorDirective,
        RangeDirective,
        RangeComponent]; }, imports: function () { return [CommonModule, NgFormsModule]; }, exports: function () { return [PhoneValidationDirective,
        DefaultValidationDirective,
        MinValidationDirective,
        MaxValidationDirective,
        NgFormsModule,
        FormGroupComponent,
        MessageDirective,
        MessagesComponent,
        InputGroupListComponent,
        InputGroupListContainerDirective,
        JsonValidationPrettifierDirective,
        TextAreaRowHeightDirective,
        RequiredInputPlaceholderDirective,
        IpRangeInputListComponent,
        FilterInputComponent,
        EmailsValidatorDirective,
        RangeDirective,
        RangeComponent]; } }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybXMubW9kdWxlLmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9jb3JlL2Zvcm1zL2Zvcm1zLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBQ3hFLE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBQzVFLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQ3BFLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQ3BFLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUN2RCxPQUFPLEVBQUUsV0FBVyxJQUFJLGFBQWEsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzlELE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQzVELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3ZELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ3pELE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBQ3ZFLE9BQU8sRUFBRSxnQ0FBZ0MsRUFBRSxNQUFNLHdDQUF3QyxDQUFDO0FBQzFGLE9BQU8sRUFBRSxpQ0FBaUMsRUFBRSxNQUFNLHdDQUF3QyxDQUFDO0FBQzNGLE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBQzlFLE9BQU8sRUFBRSxpQ0FBaUMsRUFBRSxNQUFNLHdDQUF3QyxDQUFDO0FBQzNGLE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBQzVFLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQ2hFLE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBQ3hFLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNuRCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFFbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBMkNILE1BQU0sT0FBTyxXQUFXO0FBQUc7dUNBMUMxQixRQUFRLFNBQUMsa0JBQ1IsT0FBTyxFQUFFLENBQUM7T0FBWSxFQUFFLGFBQWEsQ0FBQyxrQkFDdEMsT0FBTyxFQUFFLHNCQUNQO2VBQXdCLHNCQUN4QiwwQkFBMEIsc0JBQzFCLHNCQUFzQjtVQUN0QixzQkFBc0Isc0JBQ3RCLGFBQWEsc0JBQ2I7QUFBa0Isc0JBQ2xCO2NBQWdCO21CQUNoQixpQkFBaUI7RUFDakIsdUJBQXVCO29CQUN2QjtNQUFnQyxzQkFDaEM7YUFBaUMsc0JBQ2pDO2lCQUEwQixzQkFDMUI7NEJBQWlDO2VBQ2pDO0FBQXlCLHNCQUN6QjtJQUFvQixzQkFDcEI7V0FBd0Isc0JBQ3hCO0VBQWMsc0JBQ2QsY0FBYztFQUNmLGtCQUNELFlBQVksRUFBRTtDQUNaLHdCQUF3QixzQkFDeEI7eUJBQTBCLHNCQUMxQjtjQUFzQixzQkFDdEI7V0FBc0Isc0JBQ3RCO1NBQWtCLHNCQUNsQjtDQUFnQixzQkFDaEI7SUFBaUIsc0JBQ2pCO2NBQXVCO2lCQUN2QjtpQkFBZ0Msc0JBQ2hDOzBCQUFpQztBQUNqQywwQkFBMEI7SUFDMUIsaUNBQWlDO2VBQ2pDO0FBQXlCLHNCQUN6QjtJQUFvQixzQkFDcEI7V0FBd0Isc0JBQ3hCO0VBQWMsc0JBQ2QsY0FBYztFQUNmLGNBQ0Y7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O29DQUNJO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUGhvbmVWYWxpZGF0aW9uRGlyZWN0aXZlIH0gZnJvbSAnLi9waG9uZS12YWxpZGF0aW9uLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBEZWZhdWx0VmFsaWRhdGlvbkRpcmVjdGl2ZSB9IGZyb20gJy4vZGVmYXVsdC12YWxpZGF0aW9uLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBNaW5WYWxpZGF0aW9uRGlyZWN0aXZlIH0gZnJvbSAnLi9taW4tdmFsaWRhdGlvbi5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgTWF4VmFsaWRhdGlvbkRpcmVjdGl2ZSB9IGZyb20gJy4vbWF4LXZhbGlkYXRpb24uZGlyZWN0aXZlJztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJy4uL2NvbW1vbi9jb21tb24ubW9kdWxlJztcbmltcG9ydCB7IEZvcm1zTW9kdWxlIGFzIE5nRm9ybXNNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBGb3JtR3JvdXBDb21wb25lbnQgfSBmcm9tICcuL2Zvcm0tZ3JvdXAuY29tcG9uZW50JztcbmltcG9ydCB7IE1lc3NhZ2VEaXJlY3RpdmUgfSBmcm9tICcuL21lc3NhZ2UuZGlyZWN0aXZlJztcbmltcG9ydCB7IE1lc3NhZ2VzQ29tcG9uZW50IH0gZnJvbSAnLi9tZXNzYWdlcy5jb21wb25lbnQnO1xuaW1wb3J0IHsgSW5wdXRHcm91cExpc3RDb21wb25lbnQgfSBmcm9tICcuL2lucHV0LWdyb3VwLWxpc3QuY29tcG9uZW50JztcbmltcG9ydCB7IElucHV0R3JvdXBMaXN0Q29udGFpbmVyRGlyZWN0aXZlIH0gZnJvbSAnLi9pbnB1dC1ncm91cC1saXN0LWNvbnRhaW5lci5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgSnNvblZhbGlkYXRpb25QcmV0dGlmaWVyRGlyZWN0aXZlIH0gZnJvbSAnLi9qc29uLXZhbGlkYXRpb24tcHJldHRpZmllci5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgVGV4dEFyZWFSb3dIZWlnaHREaXJlY3RpdmUgfSBmcm9tICcuL3RleHQtYXJlYS1yb3ctaGVpZ2h0LmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBSZXF1aXJlZElucHV0UGxhY2Vob2xkZXJEaXJlY3RpdmUgfSBmcm9tICcuL3JlcXVpcmVkLWlucHV0LXBsYWNlaG9sZGVyLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBJcFJhbmdlSW5wdXRMaXN0Q29tcG9uZW50IH0gZnJvbSAnLi9pcC1yYW5nZS1pbnB1dC1saXN0LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBGaWx0ZXJJbnB1dENvbXBvbmVudCB9IGZyb20gJy4vZmlsdGVyLWlucHV0LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBFbWFpbHNWYWxpZGF0b3JEaXJlY3RpdmUgfSBmcm9tICcuL2VtYWlscy12YWxpZGF0b3IuZGlyZWN0aXZlJztcbmltcG9ydCB7IFJhbmdlQ29tcG9uZW50IH0gZnJvbSAnLi9yYW5nZS5jb21wb25lbnQnO1xuaW1wb3J0IHsgUmFuZ2VEaXJlY3RpdmUgfSBmcm9tICcuL3JhbmdlLmRpcmVjdGl2ZSc7XG5cbi8qKlxuICogQGV4cG9ydHMgRm9ybUdyb3VwQ29tcG9uZW50IEEgY29tcG9uZW50IHRoYXQgYWxsb3dzIHRvIGdyb3VwIGFuIGlucHV0IGFuZCBjYW4gZGlzcGxheSB3YXJuaW5ncyBhbmQgZXJyb3JzLlxuICogQGV4cG9ydHMgUGhvbmVWYWxpZGF0aW9uRGlyZWN0aXZlIEFsbG93cyB0byB2YWxpZGF0ZSBpbnRlcm5hdGlvbmFsIHBob25lIG51bWJlcnMuXG4gKiBAZXhwb3J0cyBOZXdzbGV0dGVyRGlyZWN0aXZlIEFsbG93cyB0byBzdWJzY3JpYmUgdG8gdGhlIG5ld3NsZXR0ZXIuXG4gKiBAZXhwb3J0cyBEZWZhdWx0VmFsaWRhdGlvbkRpcmVjdGl2ZSBBbGxvd3MgdG8gdmFsaWRhdGUgc29tZSBwcmVkZWZpbmVkIHBhdHRlcm5zLlxuICogQGV4cG9ydHMgTWVzc2FnZURpcmVjdGl2ZSBBIGRpcmVjdGl2ZSB0aGF0IGFsbG93cyB0byBkZWZpbmUgbWVzc2FnZXMuXG4gKiBAZXhwb3J0cyBNZXNzYWdlc0NvbXBvbmVudCBBbGxvd3MgdG8gZGlzcGxheSBlcnJvciBtZXNzYWdlcy5cbiAqIEBleHBvcnRzIFJhbmdlQ29tcG9uZW50IEEgY29tcG9uZW50IHRoYXQgYWxsb3dzIHRvIGRpc3BsYXkgYSBzdHlsZWQgcmFuZ2Ugc2xpZGVyLlxuICovXG5ATmdNb2R1bGUoe1xuICBpbXBvcnRzOiBbQ29tbW9uTW9kdWxlLCBOZ0Zvcm1zTW9kdWxlXSxcbiAgZXhwb3J0czogW1xuICAgIFBob25lVmFsaWRhdGlvbkRpcmVjdGl2ZSxcbiAgICBEZWZhdWx0VmFsaWRhdGlvbkRpcmVjdGl2ZSxcbiAgICBNaW5WYWxpZGF0aW9uRGlyZWN0aXZlLFxuICAgIE1heFZhbGlkYXRpb25EaXJlY3RpdmUsXG4gICAgTmdGb3Jtc01vZHVsZSxcbiAgICBGb3JtR3JvdXBDb21wb25lbnQsXG4gICAgTWVzc2FnZURpcmVjdGl2ZSxcbiAgICBNZXNzYWdlc0NvbXBvbmVudCxcbiAgICBJbnB1dEdyb3VwTGlzdENvbXBvbmVudCxcbiAgICBJbnB1dEdyb3VwTGlzdENvbnRhaW5lckRpcmVjdGl2ZSxcbiAgICBKc29uVmFsaWRhdGlvblByZXR0aWZpZXJEaXJlY3RpdmUsXG4gICAgVGV4dEFyZWFSb3dIZWlnaHREaXJlY3RpdmUsXG4gICAgUmVxdWlyZWRJbnB1dFBsYWNlaG9sZGVyRGlyZWN0aXZlLFxuICAgIElwUmFuZ2VJbnB1dExpc3RDb21wb25lbnQsXG4gICAgRmlsdGVySW5wdXRDb21wb25lbnQsXG4gICAgRW1haWxzVmFsaWRhdG9yRGlyZWN0aXZlLFxuICAgIFJhbmdlRGlyZWN0aXZlLFxuICAgIFJhbmdlQ29tcG9uZW50XG4gIF0sXG4gIGRlY2xhcmF0aW9uczogW1xuICAgIFBob25lVmFsaWRhdGlvbkRpcmVjdGl2ZSxcbiAgICBEZWZhdWx0VmFsaWRhdGlvbkRpcmVjdGl2ZSxcbiAgICBNaW5WYWxpZGF0aW9uRGlyZWN0aXZlLFxuICAgIE1heFZhbGlkYXRpb25EaXJlY3RpdmUsXG4gICAgRm9ybUdyb3VwQ29tcG9uZW50LFxuICAgIE1lc3NhZ2VEaXJlY3RpdmUsXG4gICAgTWVzc2FnZXNDb21wb25lbnQsXG4gICAgSW5wdXRHcm91cExpc3RDb21wb25lbnQsXG4gICAgSW5wdXRHcm91cExpc3RDb250YWluZXJEaXJlY3RpdmUsXG4gICAgSnNvblZhbGlkYXRpb25QcmV0dGlmaWVyRGlyZWN0aXZlLFxuICAgIFRleHRBcmVhUm93SGVpZ2h0RGlyZWN0aXZlLFxuICAgIFJlcXVpcmVkSW5wdXRQbGFjZWhvbGRlckRpcmVjdGl2ZSxcbiAgICBJcFJhbmdlSW5wdXRMaXN0Q29tcG9uZW50LFxuICAgIEZpbHRlcklucHV0Q29tcG9uZW50LFxuICAgIEVtYWlsc1ZhbGlkYXRvckRpcmVjdGl2ZSxcbiAgICBSYW5nZURpcmVjdGl2ZSxcbiAgICBSYW5nZUNvbXBvbmVudFxuICBdXG59KVxuZXhwb3J0IGNsYXNzIEZvcm1zTW9kdWxlIHt9XG4iXX0=