import { Component, Input } from '@angular/core';
export class IpRangeInputListComponent {
    set data(list) {
        this.ipRangeList = list;
        if (this.ipRangeList.length === 0) {
            this.add();
        }
    }
    get data() {
        return this.ipRangeList;
    }
    add() {
        this.ipRangeList.push({ ip: '', cidr: undefined });
    }
    remove(index) {
        this.ipRangeList.splice(index, 1);
    }
}
IpRangeInputListComponent.decorators = [
    { type: Component, args: [{
                selector: 'c8y-ip-range-input-list',
                template: "<c8y-form-group class=\"m-t-8 m-b-8\">\n  <ul c8yInputGroupListContainer class=\"list-unstyled\">\n    <li class=\"m-b-8\" *ngFor=\"let item of data; let i = index\">\n      <c8y-input-group-list [index]=\"i\" (onAdd)=\"add()\" (onRemove)=\"remove($event)\">\n        <input\n          type=\"text\"\n          name=\"ipAddress\"\n          class=\"form-control m-r-4\"\n          placeholder=\"{{ 'IP range start, e.g.' | translate }} 192.168.0.1\"\n          style=\"flex-grow: 2;\"\n          [(ngModel)]=\"item.ip\"\n          [required]=\"true\"\n          #ipAddress\n        />\n        <input\n          type=\"number\"\n          name=\"cidr\"\n          [min]=\"0\"\n          class=\"form-control\"\n          placeholder=\"{{ 'e.g.' | translate }} 20\"\n          [(ngModel)]=\"item.cidr\"\n          [required]=\"true\"\n          #cidr\n        />\n      </c8y-input-group-list>\n    </li>\n  </ul>\n</c8y-form-group>\n"
            },] }
];
IpRangeInputListComponent.propDecorators = {
    data: [{ type: Input }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXAtcmFuZ2UtaW5wdXQtbGlzdC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9jb3JlL2Zvcm1zL2lwLXJhbmdlLWlucHV0LWxpc3QuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFhLE1BQU0sZUFBZSxDQUFDO0FBUTVELE1BQU0sT0FBTyx5QkFBeUI7SUFDcEMsSUFDSSxJQUFJLENBQUMsSUFBSTtRQUNYLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDO1FBQ3hCLElBQUksSUFBSSxDQUFDLFdBQVcsQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFO1lBQ2pDLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQztTQUNaO0lBQ0gsQ0FBQztJQUVELElBQUksSUFBSTtRQUNOLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQztJQUMxQixDQUFDO0lBSUQsR0FBRztRQUNELElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLENBQUMsQ0FBQztJQUNyRCxDQUFDO0lBRUQsTUFBTSxDQUFDLEtBQUs7UUFDVixJQUFJLENBQUMsV0FBVyxDQUFDLE1BQU0sQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDcEMsQ0FBQzs7O1lBekJGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUseUJBQXlCO2dCQUNuQyxpN0JBQW1EO2FBQ3BEOzs7bUJBRUUsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE9uQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgY2xvbmVEZWVwIH0gZnJvbSAnbG9kYXNoLWVzJztcbmltcG9ydCB7IE9ic2VydmFibGUsIG9mIH0gZnJvbSAncnhqcyc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2M4eS1pcC1yYW5nZS1pbnB1dC1saXN0JyxcbiAgdGVtcGxhdGVVcmw6ICcuL2lwLXJhbmdlLWlucHV0LWxpc3QuY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIElwUmFuZ2VJbnB1dExpc3RDb21wb25lbnQge1xuICBASW5wdXQoKVxuICBzZXQgZGF0YShsaXN0KSB7XG4gICAgdGhpcy5pcFJhbmdlTGlzdCA9IGxpc3Q7XG4gICAgaWYgKHRoaXMuaXBSYW5nZUxpc3QubGVuZ3RoID09PSAwKSB7XG4gICAgICB0aGlzLmFkZCgpO1xuICAgIH1cbiAgfVxuXG4gIGdldCBkYXRhKCkge1xuICAgIHJldHVybiB0aGlzLmlwUmFuZ2VMaXN0O1xuICB9XG5cbiAgaXBSYW5nZUxpc3Q6IEFycmF5PHsgaXA6IHN0cmluZzsgY2lkcjogbnVtYmVyIH0+O1xuXG4gIGFkZCgpIHtcbiAgICB0aGlzLmlwUmFuZ2VMaXN0LnB1c2goeyBpcDogJycsIGNpZHI6IHVuZGVmaW5lZCB9KTtcbiAgfVxuXG4gIHJlbW92ZShpbmRleCkge1xuICAgIHRoaXMuaXBSYW5nZUxpc3Quc3BsaWNlKGluZGV4LCAxKTtcbiAgfVxufVxuIl19