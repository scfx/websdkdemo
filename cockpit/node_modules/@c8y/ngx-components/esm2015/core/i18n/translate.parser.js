import { Injectable } from '@angular/core';
import { TranslateDefaultParser } from '@ngx-translate/core';
import { get } from 'lodash-es';
import { trimTranslationKey } from './translate.loader';
import * as ɵngcc0 from '@angular/core';
export class TranslateParserCustom extends TranslateDefaultParser {
    getValue(target, key) {
        const trimmedKey = trimTranslationKey(key);
        let translated = get(target, [trimmedKey]);
        if (!translated) {
            const keys = key.split('.');
            if (keys.length > 1) {
                translated = get(target, key);
            }
        }
        return translated;
    }
}
TranslateParserCustom.ɵfac = /*@__PURE__*/ function () { let ɵTranslateParserCustom_BaseFactory; return function TranslateParserCustom_Factory(t) { return (ɵTranslateParserCustom_BaseFactory || (ɵTranslateParserCustom_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(TranslateParserCustom)))(t || TranslateParserCustom); }; }();
TranslateParserCustom.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: TranslateParserCustom, factory: TranslateParserCustom.ɵfac });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TranslateParserCustom, [{
        type: Injectable
    }], null, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhbnNsYXRlLnBhcnNlci5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vY29yZS9pMThuL3RyYW5zbGF0ZS5wYXJzZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUM3RCxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sV0FBVyxDQUFDO0FBQ2hDLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLG9CQUFvQixDQUFDOztBQUd4RCxNQUFNLE9BQU8scUJBQXNCLFNBQVEsc0JBQXNCO0FBQ2pFLElBQUUsUUFBUSxDQUFDLE1BQVcsRUFBRSxHQUFXO0FBQUksUUFDbkMsTUFBTSxVQUFVLEdBQUksa0JBQWtCLENBQUMsR0FBRyxDQUFDLENBQUM7QUFDaEQsUUFBSSxJQUFJLFVBQVUsR0FBRyxHQUFHLENBQUMsTUFBTSxFQUFFLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQztBQUMvQyxRQUFJLElBQUksQ0FBQyxVQUFVLEVBQUU7QUFDckIsWUFBTSxNQUFNLElBQUksR0FBRyxHQUFHLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0FBQ2xDLFlBQU0sSUFBSSxJQUFJLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRTtBQUMzQixnQkFBUSxVQUFVLEdBQUcsR0FBRyxDQUFDLE1BQU0sRUFBRSxHQUFHLENBQUMsQ0FBQztBQUN0QyxhQUFPO0FBQ1AsU0FBSztBQUNMLFFBQUksT0FBTyxVQUFVLENBQUM7QUFDdEIsSUFBRSxDQUFDO0FBQ0g7aURBYkMsVUFBVTs7OzswQkFDVDtBQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgVHJhbnNsYXRlRGVmYXVsdFBhcnNlciB9IGZyb20gJ0BuZ3gtdHJhbnNsYXRlL2NvcmUnO1xuaW1wb3J0IHsgZ2V0IH0gZnJvbSAnbG9kYXNoLWVzJztcbmltcG9ydCB7IHRyaW1UcmFuc2xhdGlvbktleSB9IGZyb20gJy4vdHJhbnNsYXRlLmxvYWRlcic7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBUcmFuc2xhdGVQYXJzZXJDdXN0b20gZXh0ZW5kcyBUcmFuc2xhdGVEZWZhdWx0UGFyc2VyIHtcbiAgZ2V0VmFsdWUodGFyZ2V0OiBhbnksIGtleTogc3RyaW5nKTogYW55IHtcbiAgICBjb25zdCB0cmltbWVkS2V5ID0gIHRyaW1UcmFuc2xhdGlvbktleShrZXkpO1xuICAgIGxldCB0cmFuc2xhdGVkID0gZ2V0KHRhcmdldCwgW3RyaW1tZWRLZXldKTtcbiAgICBpZiAoIXRyYW5zbGF0ZWQpIHtcbiAgICAgIGNvbnN0IGtleXMgPSBrZXkuc3BsaXQoJy4nKTtcbiAgICAgIGlmIChrZXlzLmxlbmd0aCA+IDEpIHtcbiAgICAgICAgdHJhbnNsYXRlZCA9IGdldCh0YXJnZXQsIGtleSk7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiB0cmFuc2xhdGVkO1xuICB9XG59XG4iXX0=