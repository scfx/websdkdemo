import { __awaiter } from "tslib";
import { Component, Input } from '@angular/core';
import { AuditService } from '@c8y/client';
/**
 * Audit log component allows to show audits list. Component fetches audit records for the source object given as input.
 *
 * **Example**
 *
 * ```html
 *  <c8y-audit-log [source]="sourceId"></c8y-audit-log>
 * ```
 */
export class AuditLogComponent {
    /**
     * @ignore
     */
    constructor(audit) {
        this.audit = audit;
    }
    /**
     * After page view is initialized, component gets audit records from auditRecords endpoint.
     */
    ngOnInit() {
        return __awaiter(this, void 0, void 0, function* () {
            if (this.source) {
                this.records = yield this.audit.list({
                    withTotalPages: true,
                    source: this.source
                });
            }
        });
    }
}
AuditLogComponent.decorators = [
    { type: Component, args: [{
                selector: 'c8y-audit-log',
                template: "<div class=\"inner-scroll\">\n  <ul class=\"timeline-list list-condensed m-t-16\">\n    <li class=\"timeline-list-item flex-row\" *c8yFor=\"let record of records\">\n      <small class=\"timeline-item-date text-right\">\n        <span>{{ record.time | c8yDate }}</span>\n      </small>\n      <div class=\"timeline-item-content flex-row\">\n        <div class=\"list-item-body\">\n          <div class=\"row text-break-word\">\n            <div class=\"col-md-5\">\n              <span class=\"text-truncate\">{{ record.activity | translate }}</span>\n              <small class=\"text-muted\">{{ record.user }}</small>\n            </div>\n            <div class=\"col-md-7\">\n              <div class=\"small text-truncate-wrap\">{{ record.text | translate }}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </li>\n  </ul>\n</div>\n"
            },] }
];
AuditLogComponent.ctorParameters = () => [
    { type: AuditService }
];
AuditLogComponent.propDecorators = {
    source: [{ type: Input }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXVkaXQtbG9nLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2NvcmUvYXVkaXQtbG9nL2F1ZGl0LWxvZy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFVLE1BQU0sZUFBZSxDQUFDO0FBQ3pELE9BQU8sRUFBRSxZQUFZLEVBQTZCLE1BQU0sYUFBYSxDQUFDO0FBRXRFOzs7Ozs7OztHQVFHO0FBS0gsTUFBTSxPQUFPLGlCQUFpQjtJQWE1Qjs7T0FFRztJQUNILFlBQW9CLEtBQW1CO1FBQW5CLFVBQUssR0FBTCxLQUFLLENBQWM7SUFBRyxDQUFDO0lBRTNDOztPQUVHO0lBQ0csUUFBUTs7WUFDWixJQUFJLElBQUksQ0FBQyxNQUFNLEVBQUU7Z0JBQ2YsSUFBSSxDQUFDLE9BQU8sR0FBRyxNQUFNLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDO29CQUNuQyxjQUFjLEVBQUUsSUFBSTtvQkFDcEIsTUFBTSxFQUFFLElBQUksQ0FBQyxNQUFNO2lCQUNwQixDQUFDLENBQUM7YUFDSjtRQUNILENBQUM7S0FBQTs7O1lBaENGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsZUFBZTtnQkFDekIsODJCQUF5QzthQUMxQzs7O1lBZFEsWUFBWTs7O3FCQW9CbEIsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQXVkaXRTZXJ2aWNlLCBJQXVkaXRSZWNvcmQsIElSZXN1bHRMaXN0IH0gZnJvbSAnQGM4eS9jbGllbnQnO1xuXG4vKipcbiAqIEF1ZGl0IGxvZyBjb21wb25lbnQgYWxsb3dzIHRvIHNob3cgYXVkaXRzIGxpc3QuIENvbXBvbmVudCBmZXRjaGVzIGF1ZGl0IHJlY29yZHMgZm9yIHRoZSBzb3VyY2Ugb2JqZWN0IGdpdmVuIGFzIGlucHV0LlxuICpcbiAqICoqRXhhbXBsZSoqXG4gKlxuICogYGBgaHRtbFxuICogIDxjOHktYXVkaXQtbG9nIFtzb3VyY2VdPVwic291cmNlSWRcIj48L2M4eS1hdWRpdC1sb2c+XG4gKiBgYGBcbiAqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYzh5LWF1ZGl0LWxvZycsXG4gIHRlbXBsYXRlVXJsOiAnLi9hdWRpdC1sb2cuY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIEF1ZGl0TG9nQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcblxuICAvKipcbiAgICogVGhlIHNvdXJjZSBJRCBmb3Igd2hpY2ggYXVkaXRzIHdpbGwgYmUgc2hvd24gaW4gdGhlIGxpc3QuXG4gICAqL1xuICBASW5wdXQoKVxuICBzb3VyY2U6IHN0cmluZyB8IG51bWJlcjtcblxuICAvKipcbiAgICogQXVkaXQgcmVjb3JkcyByZXRyaWV2ZWQgZnJvbSBhdWRpdFJlY29yZHMgZW5kcG9pbnQuXG4gICAqL1xuICByZWNvcmRzOiBJUmVzdWx0TGlzdDxJQXVkaXRSZWNvcmQ+O1xuXG4gIC8qKlxuICAgKiBAaWdub3JlXG4gICAqL1xuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGF1ZGl0OiBBdWRpdFNlcnZpY2UpIHt9XG5cbiAgLyoqXG4gICAqIEFmdGVyIHBhZ2UgdmlldyBpcyBpbml0aWFsaXplZCwgY29tcG9uZW50IGdldHMgYXVkaXQgcmVjb3JkcyBmcm9tIGF1ZGl0UmVjb3JkcyBlbmRwb2ludC5cbiAgICovXG4gIGFzeW5jIG5nT25Jbml0KCkge1xuICAgIGlmICh0aGlzLnNvdXJjZSkge1xuICAgICAgdGhpcy5yZWNvcmRzID0gYXdhaXQgdGhpcy5hdWRpdC5saXN0KHtcbiAgICAgICAgd2l0aFRvdGFsUGFnZXM6IHRydWUsXG4gICAgICAgIHNvdXJjZTogdGhpcy5zb3VyY2VcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxufVxuIl19