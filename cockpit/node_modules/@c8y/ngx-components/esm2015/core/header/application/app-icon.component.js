import { Component, Input } from '@angular/core';
import { find, keys, get, assign, isEmpty } from 'lodash-es';
import { OptionsService } from '../../common/options.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../../common/options.service';
import * as ɵngcc2 from '@angular/common';

function AppIconComponent_i_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "i", 2);
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ctx_r0.model.iconClass)("ngStyle", ctx_r0.model.iconStyle);
} }
function AppIconComponent_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 3);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r1.model.appNameAbbr, "");
} }
export class AppIconComponent {
    constructor(options) {
        this.options = options;
        this.name = '';
        this.model = {
            appIcon: '',
            showIcon: true,
            iconClass: ['c8y-icon'],
            appNameAbbr: '',
            iconStyle: {}
        };
        this.c8yAppIconsList = {
            analyticsbuilder: 'analytics-builder',
            'analytics-builder': 'analytics-builder',
            cockpit: 'cockpit',
            devicemanagement: 'device-management',
            administration: 'administration',
            apamaepl: 'apama-epl'
        };
        this.white = false;
        this.defaultIconStyle = {
            'background-repeat': 'no-repeat',
            'background-size': 'contain',
            height: '36px',
            width: '36px'
        };
    }
    ngOnInit() {
        this.model.appIcon = this.iconFromAppDefinition() || this.findStaticIcon();
        const iconUrl = this.iconUrlFromAppDefinition();
        if (iconUrl) {
            this.model.iconStyle = assign(this.defaultIconStyle, {
                'background-image': iconUrl
            });
        }
        this.model.showIcon = !!this.model.appIcon || !isEmpty(this.model.iconStyle);
        this.model.iconClass = [
            'c8y-icon',
            this.mapFontAwesomeToDelightIcons(this.model.appIcon),
            this.white ? 'c8y-icon-white' : 'c8y-icon-duocolor'
        ].filter(c => !!c);
        this.model.appNameAbbr = this.name.substr(0, 2);
    }
    findStaticIcon() {
        const contextPath = this.contextPath || this.name;
        const appContextPathNormalized = find(keys(this.c8yAppIconsList), cp => {
            return contextPath.indexOf(cp) > -1;
        });
        const appIcon = this.c8yAppIconsList[appContextPathNormalized];
        return appIcon ? `c8y-icon-${appIcon}` : undefined;
    }
    iconFromAppDefinition() {
        const app = this.app || this.options;
        const iconClassProperty = ['icon', 'class'];
        const iconClass = get(app, ['manifest', ...iconClassProperty]) || get(app, iconClassProperty);
        return iconClass;
    }
    iconUrlFromAppDefinition() {
        const app = this.app || this.options;
        const iconUrlProperty = ['icon', 'url'];
        const iconUrl = get(app, ['manifest', ...iconUrlProperty]) || get(app, iconUrlProperty);
        return iconUrl;
    }
    mapFontAwesomeToDelightIcons(iconClasses) {
        if (!iconClasses) {
            return;
        }
        const regex = /fa-/gi;
        return iconClasses.replace(regex, 'dlt-c8y-icon-');
    }
}
AppIconComponent.ɵfac = function AppIconComponent_Factory(t) { return new (t || AppIconComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.OptionsService)); };
AppIconComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: AppIconComponent, selectors: [["c8y-app-icon"]], hostAttrs: [1, "c8y-app-icon"], inputs: { name: "name", contextPath: "contextPath", app: "app" }, decls: 2, vars: 2, consts: [[3, "ngClass", "ngStyle", 4, "ngIf"], ["class", "app-noicon", 4, "ngIf"], [3, "ngClass", "ngStyle"], [1, "app-noicon"]], template: function AppIconComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, AppIconComponent_i_0_Template, 1, 2, "i", 0);
        ɵngcc0.ɵɵtemplate(1, AppIconComponent_span_1_Template, 2, 1, "span", 1);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.model.showIcon);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.model.showIcon);
    } }, directives: [ɵngcc2.NgIf, ɵngcc2.NgClass, ɵngcc2.NgStyle], encapsulation: 2 });
AppIconComponent.ctorParameters = () => [
    { type: OptionsService }
];
AppIconComponent.propDecorators = {
    contextPath: [{ type: Input }],
    name: [{ type: Input }],
    app: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AppIconComponent, [{
        type: Component,
        args: [{
                selector: 'c8y-app-icon',
                template: "<i *ngIf=\"model.showIcon\" [ngClass]=\"model.iconClass\" [ngStyle]=\"model.iconStyle\"></i>\n<span *ngIf=\"!model.showIcon\" class=\"app-noicon\"> {{model.appNameAbbr}}</span>\n",
                host: { class: 'c8y-app-icon' }
            }]
    }], function () { return [{ type: ɵngcc1.OptionsService }]; }, { name: [{
            type: Input
        }], contextPath: [{
            type: Input
        }], app: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,