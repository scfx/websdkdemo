import { __awaiter } from "tslib";
import { Component, Output, EventEmitter, Input } from '@angular/core';
import { UserService } from '@c8y/client';
import { AlertService } from '../alert/alert.service';
import { LoginService } from './login.service';
import { LoginViews } from './login.model';
import { gettext } from '../i18n/gettext';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './login.service';
import * as ɵngcc2 from '@c8y/client';
import * as ɵngcc3 from '../alert/alert.service';
import * as ɵngcc4 from '../i18n/c8y-translate.directive';
import * as ɵngcc5 from '@angular/common';
import * as ɵngcc6 from '../authentication/totp-challenge.component';
import * as ɵngcc7 from '../authentication/totp-setup.component';
import * as ɵngcc8 from '../i18n/c8y-translate.pipe';

function TotpAuthComponent_c8y_totp_setup_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "c8y-totp-setup");
} }
export class TotpAuthComponent {
    constructor(loginService, userService, alert) {
        this.loginService = loginService;
        this.userService = userService;
        this.alert = alert;
        this.onCancel = new EventEmitter();
        this.LOGIN_VIEWS = LoginViews;
        this.loading = false;
        this.hasError = false;
        this.isSetup = false;
    }
    /**
     * In case of a setup we need the user to be authorized
     * first.
     */
    ngOnInit() {
        return __awaiter(this, void 0, void 0, function* () {
            if (this.view === this.LOGIN_VIEWS.TotpSetup) {
                yield this.loginService.switchLoginMode(this.credentials);
                this.isSetup = true;
            }
        });
    }
    onTotpSuccess(code) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                this.loading = true;
                this.hasError = false;
                this.credentials.tfa = code;
                if (this.isSetup) {
                    yield this.userService.activateTotp();
                }
                yield this.loginService.switchLoginMode(this.credentials);
                yield this.loginService.verifyAppAccess();
                yield this.loginService.authFulfilled();
            }
            catch (e) {
                this.alert.removeLastDanger();
                if (e.data && e.data.message === 'Access is denied') {
                    this.alert.addServerFailure(e);
                }
                if (e.data && e.data.message === 'Authentication failed! : User account is locked') {
                    this.alert.warning(gettext('Authentication failed due to: user account is locked.'));
                }
                else {
                    this.hasError = true;
                }
            }
            finally {
                this.loading = false;
            }
        });
    }
}
TotpAuthComponent.ɵfac = function TotpAuthComponent_Factory(t) { return new (t || TotpAuthComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LoginService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.UserService), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.AlertService)); };
TotpAuthComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: TotpAuthComponent, selectors: [["c8y-totp-auth"]], inputs: { credentials: "credentials", view: "view" }, outputs: { onCancel: "onCancel" }, decls: 8, vars: 7, consts: [["translate", "", 1, "legend", "form-block", "center"], [4, "ngIf"], [3, "loading", "hasError", "verify", "onSuccess"], [1, "text-center", "m-t-8"], ["translate", "", 1, "btn", "btn-link", "btn-sm", 3, "title", "click"]], template: function TotpAuthComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵtext(1, " Two-factor authentication\n");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(2, TotpAuthComponent_c8y_totp_setup_2_Template, 1, 0, "c8y-totp-setup", 1);
        ɵngcc0.ɵɵelementStart(3, "c8y-totp-challenge", 2);
        ɵngcc0.ɵɵlistener("onSuccess", function TotpAuthComponent_Template_c8y_totp_challenge_onSuccess_3_listener($event) { return ctx.onTotpSuccess($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(4, "div", 3);
        ɵngcc0.ɵɵelementStart(5, "a", 4);
        ɵngcc0.ɵɵlistener("click", function TotpAuthComponent_Template_a_click_5_listener() { return ctx.onCancel.emit(); });
        ɵngcc0.ɵɵpipe(6, "translate");
        ɵngcc0.ɵɵtext(7, " Cancel ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isSetup);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("loading", ctx.loading)("hasError", ctx.hasError)("verify", ctx.view === ctx.LOGIN_VIEWS.TotpSetup);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(6, 5, "Cancel"));
    } }, directives: [ɵngcc4.C8yTranslateDirective, ɵngcc5.NgIf, ɵngcc6.TotpChallengeComponent, ɵngcc7.TotpSetupComponent], pipes: [ɵngcc8.C8yTranslatePipe], encapsulation: 2 });
TotpAuthComponent.ctorParameters = () => [
    { type: LoginService },
    { type: UserService },
    { type: AlertService }
];
TotpAuthComponent.propDecorators = {
    credentials: [{ type: Input }],
    view: [{ type: Input }],
    onCancel: [{ type: Output }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TotpAuthComponent, [{
        type: Component,
        args: [{
                selector: 'c8y-totp-auth',
                template: "<div\n  class=\"legend form-block center\"\n  translate\n>\n  Two-factor authentication\n</div>\n\n<c8y-totp-setup *ngIf=\"isSetup\">\n</c8y-totp-setup>\n<c8y-totp-challenge\n  [loading]=\"loading\"\n  [hasError]=\"hasError\"\n  [verify]=\"view === LOGIN_VIEWS.TotpSetup\"\n  (onSuccess)=\"onTotpSuccess($event)\"\n></c8y-totp-challenge>\n\n<div class=\"text-center m-t-8\">\n  <a\n    title=\"{{ 'Cancel' | translate }}\"\n    class=\"btn btn-link btn-sm\"\n    (click)=\"onCancel.emit()\"\n    translate\n  >\n    Cancel\n  </a>\n</div>\n"
            }]
    }], function () { return [{ type: ɵngcc1.LoginService }, { type: ɵngcc2.UserService }, { type: ɵngcc3.AlertService }]; }, { onCancel: [{
            type: Output
        }], credentials: [{
            type: Input
        }], view: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG90cC1hdXRoLmNvbXBvbmVudC5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vY29yZS9sb2dpbi90b3RwLWF1dGguY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFVLE1BQU0sRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQy9FLE9BQU8sRUFBZ0IsV0FBVyxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBQ3hELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUN0RCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0saUJBQWlCLENBQUM7Ozs7Ozs7Ozs7Ozs7O0FBTTFDLE1BQU0sT0FBTyxpQkFBaUI7QUFBRyxJQVMvQixZQUNTLFlBQTBCLEVBQ3pCLFdBQXdCLEVBQ3hCLEtBQW1CO0FBQzVCLFFBSFEsaUJBQVksR0FBWixZQUFZLENBQWM7QUFBQyxRQUMxQixnQkFBVyxHQUFYLFdBQVcsQ0FBYTtBQUFDLFFBQ3pCLFVBQUssR0FBTCxLQUFLLENBQWM7QUFDL0IsUUFWWSxhQUFRLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQztBQUMxQyxRQUFFLGdCQUFXLEdBQUcsVUFBVSxDQUFDO0FBQzNCLFFBQUUsWUFBTyxHQUFHLEtBQUssQ0FBQztBQUNsQixRQUFFLGFBQVEsR0FBRyxLQUFLLENBQUM7QUFDbkIsUUFBRSxZQUFPLEdBQUcsS0FBSyxDQUFDO0FBQ2xCLElBS0ssQ0FBQztBQUNOLElBQ0U7QUFDRjtBQUNFO0FBQ0UsT0FBQztBQUNMLElBQVEsUUFBUTtBQUNoQjtBQUNVLFlBRE4sSUFBSSxJQUFJLENBQUMsSUFBSSxLQUFLLElBQUksQ0FBQyxXQUFXLENBQUMsU0FBUyxFQUFFO0FBQ2xELGdCQUFNLE1BQU0sSUFBSSxDQUFDLFlBQVksQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO0FBQ2hFLGdCQUFNLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDO0FBQzFCLGFBQUs7QUFDTCxRQUFFLENBQUM7QUFFRixLQUZFO0FBQ0gsSUFDUSxhQUFhLENBQUMsSUFBSTtBQUMxQjtBQUV5QixZQUZyQixJQUFJO0FBQ1IsZ0JBQU0sSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUM7QUFDMUIsZ0JBQU0sSUFBSSxDQUFDLFFBQVEsR0FBRyxLQUFLLENBQUM7QUFDNUIsZ0JBQU0sSUFBSSxDQUFDLFdBQVcsQ0FBQyxHQUFHLEdBQUcsSUFBSSxDQUFDO0FBQ2xDLGdCQUFNLElBQUksSUFBSSxDQUFDLE9BQU8sRUFBRTtBQUN4QixvQkFBUSxNQUFNLElBQUksQ0FBQyxXQUFXLENBQUMsWUFBWSxFQUFFLENBQUM7QUFDOUMsaUJBQU87QUFDUCxnQkFBTSxNQUFNLElBQUksQ0FBQyxZQUFZLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztBQUNoRSxnQkFBTSxNQUFNLElBQUksQ0FBQyxZQUFZLENBQUMsZUFBZSxFQUFFLENBQUM7QUFDaEQsZ0JBQU0sTUFBTSxJQUFJLENBQUMsWUFBWSxDQUFDLGFBQWEsRUFBRSxDQUFDO0FBQzlDLGFBQUs7QUFBQyxZQUFBLE9BQU8sQ0FBQyxFQUFFO0FBQ2hCLGdCQUFNLElBQUksQ0FBQyxLQUFLLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQztBQUNwQyxnQkFBTSxJQUFJLENBQUMsQ0FBQyxJQUFJLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxPQUFPLEtBQUssa0JBQWtCLEVBQUU7QUFDM0Qsb0JBQVEsSUFBSSxDQUFDLEtBQUssQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUN2QyxpQkFBTztBQUNQLGdCQUFNLElBQUksQ0FBQyxDQUFDLElBQUksSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLE9BQU8sS0FBSyxpREFBaUQsRUFBRTtBQUMxRixvQkFBUSxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsdURBQXVELENBQUMsQ0FBQyxDQUFDO0FBQzdGLGlCQUFPO0FBQUMscUJBQUs7QUFDYixvQkFBUSxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQztBQUM3QixpQkFBTztBQUNQLGFBQUs7QUFBQyxvQkFBUTtBQUNkLGdCQUFNLElBQUksQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDO0FBQzNCLGFBQUs7QUFDTCxRQUFFLENBQUM7QUFFSCxLQUZHO0FBQ0g7NkNBdkRDLFNBQVMsU0FBQyxrQkFDVCxRQUFRLEVBQUUsZUFBZSxrQkFDekI7K2FBQXlDLGNBQzFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2tMQUNJO0FBQUM7QUFBMkMsWUFSeEMsWUFBWTtBQUFJLFlBRkYsV0FBVztBQUFJLFlBQzdCLFlBQVk7QUFBRztBQUFHO0FBQ2xCLDBCQVNOLEtBQUs7QUFBSyxtQkFDVixLQUFLO0FBQUssdUJBQ1YsTUFBTTtBQUFJOzs7Ozs7Ozs7Ozs7O29CQUFFO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgT3V0cHV0LCBFdmVudEVtaXR0ZXIsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBJQ3JlZGVudGlhbHMsIFVzZXJTZXJ2aWNlIH0gZnJvbSAnQGM4eS9jbGllbnQnO1xuaW1wb3J0IHsgQWxlcnRTZXJ2aWNlIH0gZnJvbSAnLi4vYWxlcnQvYWxlcnQuc2VydmljZSc7XG5pbXBvcnQgeyBMb2dpblNlcnZpY2UgfSBmcm9tICcuL2xvZ2luLnNlcnZpY2UnO1xuaW1wb3J0IHsgTG9naW5WaWV3cyB9IGZyb20gJy4vbG9naW4ubW9kZWwnO1xuaW1wb3J0IHsgZ2V0dGV4dCB9IGZyb20gJy4uL2kxOG4vZ2V0dGV4dCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2M4eS10b3RwLWF1dGgnLFxuICB0ZW1wbGF0ZVVybDogJy4vdG90cC1hdXRoLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBUb3RwQXV0aENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIEBJbnB1dCgpIGNyZWRlbnRpYWxzOiBJQ3JlZGVudGlhbHM7XG4gIEBJbnB1dCgpIHZpZXc6IExvZ2luVmlld3M7XG4gIEBPdXRwdXQoKSBvbkNhbmNlbCA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgTE9HSU5fVklFV1MgPSBMb2dpblZpZXdzO1xuICBsb2FkaW5nID0gZmFsc2U7XG4gIGhhc0Vycm9yID0gZmFsc2U7XG4gIGlzU2V0dXAgPSBmYWxzZTtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwdWJsaWMgbG9naW5TZXJ2aWNlOiBMb2dpblNlcnZpY2UsXG4gICAgcHJpdmF0ZSB1c2VyU2VydmljZTogVXNlclNlcnZpY2UsXG4gICAgcHJpdmF0ZSBhbGVydDogQWxlcnRTZXJ2aWNlXG4gICkge31cblxuICAvKipcbiAgICogSW4gY2FzZSBvZiBhIHNldHVwIHdlIG5lZWQgdGhlIHVzZXIgdG8gYmUgYXV0aG9yaXplZFxuICAgKiBmaXJzdC5cbiAgICovXG4gIGFzeW5jIG5nT25Jbml0KCkge1xuICAgIGlmICh0aGlzLnZpZXcgPT09IHRoaXMuTE9HSU5fVklFV1MuVG90cFNldHVwKSB7XG4gICAgICBhd2FpdCB0aGlzLmxvZ2luU2VydmljZS5zd2l0Y2hMb2dpbk1vZGUodGhpcy5jcmVkZW50aWFscyk7XG4gICAgICB0aGlzLmlzU2V0dXAgPSB0cnVlO1xuICAgIH1cbiAgfVxuXG4gIGFzeW5jIG9uVG90cFN1Y2Nlc3MoY29kZSkge1xuICAgIHRyeSB7XG4gICAgICB0aGlzLmxvYWRpbmcgPSB0cnVlO1xuICAgICAgdGhpcy5oYXNFcnJvciA9IGZhbHNlO1xuICAgICAgdGhpcy5jcmVkZW50aWFscy50ZmEgPSBjb2RlO1xuICAgICAgaWYgKHRoaXMuaXNTZXR1cCkge1xuICAgICAgICBhd2FpdCB0aGlzLnVzZXJTZXJ2aWNlLmFjdGl2YXRlVG90cCgpO1xuICAgICAgfVxuICAgICAgYXdhaXQgdGhpcy5sb2dpblNlcnZpY2Uuc3dpdGNoTG9naW5Nb2RlKHRoaXMuY3JlZGVudGlhbHMpO1xuICAgICAgYXdhaXQgdGhpcy5sb2dpblNlcnZpY2UudmVyaWZ5QXBwQWNjZXNzKCk7XG4gICAgICBhd2FpdCB0aGlzLmxvZ2luU2VydmljZS5hdXRoRnVsZmlsbGVkKCk7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgdGhpcy5hbGVydC5yZW1vdmVMYXN0RGFuZ2VyKCk7XG4gICAgICBpZiAoZS5kYXRhICYmIGUuZGF0YS5tZXNzYWdlID09PSAnQWNjZXNzIGlzIGRlbmllZCcpIHtcbiAgICAgICAgdGhpcy5hbGVydC5hZGRTZXJ2ZXJGYWlsdXJlKGUpO1xuICAgICAgfVxuICAgICAgaWYgKGUuZGF0YSAmJiBlLmRhdGEubWVzc2FnZSA9PT0gJ0F1dGhlbnRpY2F0aW9uIGZhaWxlZCEgOiBVc2VyIGFjY291bnQgaXMgbG9ja2VkJykge1xuICAgICAgICB0aGlzLmFsZXJ0Lndhcm5pbmcoZ2V0dGV4dCgnQXV0aGVudGljYXRpb24gZmFpbGVkIGR1ZSB0bzogdXNlciBhY2NvdW50IGlzIGxvY2tlZC4nKSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLmhhc0Vycm9yID0gdHJ1ZTtcbiAgICAgIH1cbiAgICB9IGZpbmFsbHkge1xuICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2U7XG4gICAgfVxuICB9XG59XG4iXX0=