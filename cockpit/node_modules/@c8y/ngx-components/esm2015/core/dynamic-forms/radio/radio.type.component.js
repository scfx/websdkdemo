import { ChangeDetectionStrategy, Component } from '@angular/core';
import { FieldType } from '@ngx-formly/core';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from '@angular/forms';
import * as ɵngcc3 from '@ngx-formly/core';
import * as ɵngcc4 from '@ngx-formly/core/select';

function FieldRadio_label_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "label", 1);
    ɵngcc0.ɵɵelement(1, "input", 2);
    ɵngcc0.ɵɵelement(2, "span");
    ɵngcc0.ɵɵelementStart(3, "span");
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const option_r1 = ctx.$implicit;
    const i_r2 = ctx.index;
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("title", option_r1.label);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("id", ctx_r0.id + "_" + i_r2)("name", ctx_r0.field.name || ctx_r0.id)("value", option_r1.value)("formControl", ctx_r0.formControl)("formlyAttributes", ctx_r0.field);
    ɵngcc0.ɵɵattribute("value", option_r1.value)("disabled", option_r1.disabled || ctx_r0.formControl.disabled ? true : null);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(option_r1.label);
} }
export class FieldRadio extends FieldType {
    constructor() {
        super(...arguments);
        this.defaultOptions = {
            templateOptions: {
                options: [],
                formCheck: 'custom' // 'custom' | 'custom-inline' | 'stacked' | 'inline'
            }
        };
    }
}
FieldRadio.ɵfac = /*@__PURE__*/ function () { let ɵFieldRadio_BaseFactory; return function FieldRadio_Factory(t) { return (ɵFieldRadio_BaseFactory || (ɵFieldRadio_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(FieldRadio)))(t || FieldRadio); }; }();
FieldRadio.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: FieldRadio, selectors: [["c8y-field-radio"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 6, consts: [["class", "c8y-radio", 3, "title", 4, "ngFor", "ngForOf"], [1, "c8y-radio", 3, "title"], ["type", "radio", 3, "id", "name", "value", "formControl", "formlyAttributes"]], template: function FieldRadio_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, FieldRadio_label_0_Template, 5, 9, "label", 0);
        ɵngcc0.ɵɵpipe(1, "async");
        ɵngcc0.ɵɵpipe(2, "formlySelectOptions");
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngForOf", ɵngcc0.ɵɵpipeBind1(1, 1, ɵngcc0.ɵɵpipeBind2(2, 3, ctx.to.options, ctx.field)));
    } }, directives: [ɵngcc1.NgForOf, ɵngcc2.RadioControlValueAccessor, ɵngcc2.DefaultValueAccessor, ɵngcc2.NgControlStatus, ɵngcc2.FormControlDirective, ɵngcc3.FormlyAttributes], pipes: [ɵngcc1.AsyncPipe, ɵngcc4.ɵa], encapsulation: 2, changeDetection: 0 });
FieldRadio.CONFIG = {
    types: [
        {
            name: 'radio',
            component: FieldRadio,
            wrappers: ['c8y-form-field']
        }
    ]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FieldRadio, [{
        type: Component,
        args: [{
                selector: 'c8y-field-radio',
                template: "<label\n  *ngFor=\"let option of to.options | formlySelectOptions: field | async; let i = index\"\n  [title]=\"option.label\"\n  class=\"c8y-radio\"\n>\n  <input\n    type=\"radio\"\n    [id]=\"id + '_' + i\"\n    [name]=\"field.name || id\"\n    [attr.value]=\"option.value\"\n    [value]=\"option.value\"\n    [formControl]=\"formControl\"\n    [formlyAttributes]=\"field\"\n    [attr.disabled]=\"option.disabled || formControl.disabled ? true : null\"\n  />\n  <span></span>\n  <span>{{ option.label }}</span>\n</label>\n",
                changeDetection: ChangeDetectionStrategy.OnPush
            }]
    }], null, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmFkaW8udHlwZS5jb21wb25lbnQuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL2NvcmUvZHluYW1pYy1mb3Jtcy9yYWRpby9yYWRpby50eXBlLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ25FLE9BQU8sRUFBZ0IsU0FBUyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBTzNELE1BQU0sT0FBTyxVQUFXLFNBQVEsU0FBUztBQUN6QyxJQU5BO0FBQ0c7QUFDRixRQWNDLG1CQUFjLEdBQUc7QUFDbkIsWUFBSSxlQUFlLEVBQUU7QUFDckIsZ0JBQU0sT0FBTyxFQUFFLEVBQUU7QUFDakIsZ0JBQU0sU0FBUyxFQUFFLFFBQVEsQ0FBQyxvREFBb0Q7QUFDOUUsYUFBSztBQUNMLFNBQUcsQ0FBQztBQUNKLElBQUEsQ0FBQztBQUNEOzs7Ozs7OztrUUFBQztBQWpCaUIsaUJBQU0sR0FBaUI7QUFDekMsSUFBSSxLQUFLLEVBQUU7QUFDWCxRQUFNO0FBQ04sWUFBUSxJQUFJLEVBQUUsT0FBTztBQUNyQixZQUFRLFNBQVMsRUFBRSxVQUFVO0FBQzdCLFlBQVEsUUFBUSxFQUFFLENBQUMsZ0JBQWdCLENBQUM7QUFDcEMsU0FBTztBQUNQLEtBQUs7QUFDTCxDQUFHLENBQUM7c0NBZEgsU0FBUyxTQUFDLGtCQUNULFFBQVEsRUFBRSxpQkFBaUI7YUFDM0I7Ozs4Y0FBMEMsa0JBQzFDLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNLGNBQ2hEOzs7MEJBQ0k7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbmZpZ09wdGlvbiwgRmllbGRUeXBlIH0gZnJvbSAnQG5neC1mb3JtbHkvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2M4eS1maWVsZC1yYWRpbycsXG4gIHRlbXBsYXRlVXJsOiAnLi9yYWRpby50eXBlLmNvbXBvbmVudC5odG1sJyxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2hcbn0pXG5leHBvcnQgY2xhc3MgRmllbGRSYWRpbyBleHRlbmRzIEZpZWxkVHlwZSB7XG4gIHN0YXRpYyByZWFkb25seSBDT05GSUc6IENvbmZpZ09wdGlvbiA9IHtcbiAgICB0eXBlczogW1xuICAgICAge1xuICAgICAgICBuYW1lOiAncmFkaW8nLFxuICAgICAgICBjb21wb25lbnQ6IEZpZWxkUmFkaW8sXG4gICAgICAgIHdyYXBwZXJzOiBbJ2M4eS1mb3JtLWZpZWxkJ11cbiAgICAgIH1cbiAgICBdXG4gIH07XG5cbiAgZGVmYXVsdE9wdGlvbnMgPSB7XG4gICAgdGVtcGxhdGVPcHRpb25zOiB7XG4gICAgICBvcHRpb25zOiBbXSxcbiAgICAgIGZvcm1DaGVjazogJ2N1c3RvbScgLy8gJ2N1c3RvbScgfCAnY3VzdG9tLWlubGluZScgfCAnc3RhY2tlZCcgfCAnaW5saW5lJ1xuICAgIH1cbiAgfTtcbn1cbiJdfQ==