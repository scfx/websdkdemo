import { Component } from '@angular/core';
import { FieldArrayType } from '@ngx-formly/core';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from '../../common/icon.directive';
import * as ɵngcc3 from '../../i18n/c8y-translate.directive';
import * as ɵngcc4 from 'ngx-bootstrap/popover';
import * as ɵngcc5 from '@ngx-formly/core';
import * as ɵngcc6 from '../../i18n/c8y-translate.pipe';

function ArrayTypeComponent_div_1_button_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "button", 10);
    ɵngcc0.ɵɵelement(1, "i", 11);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("popover", ctx_r3.to.description);
} }
function ArrayTypeComponent_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 8);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵtemplate(2, ArrayTypeComponent_div_1_button_2_Template, 2, 1, "button", 9);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵpropertyInterpolate("id", ctx_r0.id + "-fieldset");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r0.to.label, " ");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.to.description);
} }
function ArrayTypeComponent_div_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 12);
    ɵngcc0.ɵɵelement(1, "formly-validation-message", 13);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("field", ctx_r1.field);
} }
function ArrayTypeComponent_div_3_Template(rf, ctx) { if (rf & 1) {
    const _r7 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 14);
    ɵngcc0.ɵɵelement(1, "formly-field", 13);
    ɵngcc0.ɵɵelementStart(2, "div", 15);
    ɵngcc0.ɵɵelementStart(3, "button", 16);
    ɵngcc0.ɵɵlistener("click", function ArrayTypeComponent_div_3_Template_button_click_3_listener() { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r7); const i_r5 = restoredCtx.index; const ctx_r6 = ɵngcc0.ɵɵnextContext(); return ctx_r6.remove(i_r5); });
    ɵngcc0.ɵɵpipe(4, "translate");
    ɵngcc0.ɵɵelement(5, "i", 17);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const field_r4 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("field", field_r4);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(4, 2, "Delete"));
} }
export class ArrayTypeComponent extends FieldArrayType {
    ngOnInit() {
        if (this.to.required && !this.field.fieldGroup.length) {
            this.add();
        }
    }
}
ArrayTypeComponent.ɵfac = /*@__PURE__*/ function () { let ɵArrayTypeComponent_BaseFactory; return function ArrayTypeComponent_Factory(t) { return (ɵArrayTypeComponent_BaseFactory || (ɵArrayTypeComponent_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(ArrayTypeComponent)))(t || ArrayTypeComponent); }; }();
ArrayTypeComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ArrayTypeComponent, selectors: [["c8y-array-type"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 10, vars: 9, consts: [["role", "group"], ["class", "legend form-block", 3, "id", 4, "ngIf"], ["class", "form-control-feedback-message has-error", "role", "alert", 4, "ngIf"], ["class", "input-group-array", 4, "ngFor", "ngForOf"], [1, "p-t-8"], ["type", "button", 1, "btn-add-block", 3, "title", "click"], ["c8yIcon", "plus-square"], ["translate", "", 3, "translateParams"], [1, "legend", "form-block", 3, "id"], ["class", "btn-clean text-14 m-l-4 flex-item-middle", "placement", "right", "outsideClick", "true", "type", "button", 3, "popover", 4, "ngIf"], ["placement", "right", "outsideClick", "true", "type", "button", 1, "btn-clean", "text-14", "m-l-4", "flex-item-middle", 3, "popover"], ["c8yIcon", "question-circle-o", 1, "text-primary"], ["role", "alert", 1, "form-control-feedback-message", "has-error"], [3, "field"], [1, "input-group-array"], [1, "input-group-btn"], ["type", "button", 1, "btn", "btn-clean", "flex-item-right", 3, "title", "click"], ["c8yIcon", "minus-circle", 1, "text-danger"]], template: function ArrayTypeComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵtemplate(1, ArrayTypeComponent_div_1_Template, 3, 3, "div", 1);
        ɵngcc0.ɵɵtemplate(2, ArrayTypeComponent_div_2_Template, 2, 1, "div", 2);
        ɵngcc0.ɵɵtemplate(3, ArrayTypeComponent_div_3_Template, 6, 4, "div", 3);
        ɵngcc0.ɵɵelementStart(4, "div", 4);
        ɵngcc0.ɵɵelementStart(5, "button", 5);
        ɵngcc0.ɵɵlistener("click", function ArrayTypeComponent_Template_button_click_5_listener() { return ctx.add(); });
        ɵngcc0.ɵɵpipe(6, "translate");
        ɵngcc0.ɵɵelement(7, "i", 6);
        ɵngcc0.ɵɵelementStart(8, "span", 7);
        ɵngcc0.ɵɵdisableBindings();
        ɵngcc0.ɵɵtext(9, "Add {{ label }}");
        ɵngcc0.ɵɵenableBindings();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵattribute("aria-labelledby", ctx.id + "-fieldset");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.to.label || ctx.to.description);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showError && ctx.formControl.errors);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.field.fieldGroup);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind2(6, 6, "Add {{ label }}", ctx.field == null ? null : ctx.field.fieldArray == null ? null : ctx.field.fieldArray.templateOptions));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("translateParams", ctx.field == null ? null : ctx.field.fieldArray == null ? null : ctx.field.fieldArray.templateOptions);
    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgForOf, ɵngcc2.IconDirective, ɵngcc3.C8yTranslateDirective, ɵngcc4.PopoverDirective, ɵngcc5.ɵc, ɵngcc5.FormlyField], pipes: [ɵngcc6.C8yTranslatePipe], encapsulation: 2 });
ArrayTypeComponent.CONFIG = {
    types: [{ name: 'array', component: ArrayTypeComponent }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ArrayTypeComponent, [{
        type: Component,
        args: [{
                selector: 'c8y-array-type',
                template: "<div role=\"group\" [attr.aria-labelledby]=\"id + '-fieldset'\">\n  <div id=\"{{ id + '-fieldset' }}\" class=\"legend form-block\" *ngIf=\"to.label || to.description\">\n    {{ to.label }}\n    <button\n      *ngIf=\"to.description\"\n      class=\"btn-clean text-14 m-l-4 flex-item-middle\"\n      [popover]=\"to.description\"\n      placement=\"right\"\n      outsideClick=\"true\"\n      type=\"button\"\n    >\n      <i c8yIcon=\"question-circle-o\" class=\"text-primary\"></i>\n    </button>\n  </div>\n\n  <div\n    class=\"form-control-feedback-message has-error\"\n    role=\"alert\"\n    *ngIf=\"showError && formControl.errors\"\n  >\n    <formly-validation-message [field]=\"field\"></formly-validation-message>\n  </div>\n\n  <div *ngFor=\"let field of field.fieldGroup; let i = index\" class=\"input-group-array\">\n    <formly-field [field]=\"field\"> </formly-field>\n    <div class=\"input-group-btn\">\n      <button\n        type=\"button\"\n        class=\"btn btn-clean flex-item-right\"\n        title=\"{{ 'Delete' | translate }}\"\n        (click)=\"remove(i)\"\n      >\n        <i c8yIcon=\"minus-circle\" class=\"text-danger\"></i>\n      </button>\n    </div>\n  </div>\n\n  <div class=\"p-t-8\">\n    <button\n      type=\"button\"\n      title=\"{{ 'Add \\{\\{ label \\}\\}' | translate: field?.fieldArray?.templateOptions }}\"\n      class=\"btn-add-block\"\n      (click)=\"add()\"\n    >\n      <i c8yIcon=\"plus-square\"></i>\n      <span ngNonBindable translate [translateParams]=\"field?.fieldArray?.templateOptions\"\n        >Add {{ label }}</span\n      >\n    </button>\n  </div>\n</div>\n"
            }]
    }], null, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXJyYXkudHlwZS5jb21wb25lbnQuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL2NvcmUvZHluYW1pYy1mb3Jtcy9hcnJheS9hcnJheS50eXBlLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFVLE1BQU0sZUFBZSxDQUFDO0FBQ2xELE9BQU8sRUFBZ0IsY0FBYyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFNaEUsTUFBTSxPQUFPLGtCQUFtQixTQUFRLGNBQWM7QUFBRyxJQUt2RCxRQUFRO0FBQUssUUFDWCxJQUFJLElBQUksQ0FBQyxFQUFFLENBQUMsUUFBUSxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxVQUFVLENBQUMsTUFBTSxFQUFFO0FBQzNELFlBQU0sSUFBSSxDQUFDLEdBQUcsRUFBRSxDQUFDO0FBQ2pCLFNBQUs7QUFDTCxJQUFFLENBQUM7QUFDSDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7c05BQUM7QUFUaUIseUJBQU0sR0FBaUI7QUFDekMsSUFBSSxLQUFLLEVBQUUsQ0FBQyxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsU0FBUyxFQUFFLGtCQUFrQixFQUFFLENBQUM7QUFDN0QsQ0FBRyxDQUFDOzhDQVBILFNBQVMsU0FBQyxrQkFDVCxRQUFRLEVBQUUsZ0JBQWdCO1lBQzFCOzs7OGhEQUEwQyxjQUMzQzs7MEJBQ0k7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb25maWdPcHRpb24sIEZpZWxkQXJyYXlUeXBlIH0gZnJvbSAnQG5neC1mb3JtbHkvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2M4eS1hcnJheS10eXBlJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2FycmF5LnR5cGUuY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIEFycmF5VHlwZUNvbXBvbmVudCBleHRlbmRzIEZpZWxkQXJyYXlUeXBlIGltcGxlbWVudHMgT25Jbml0IHtcbiAgc3RhdGljIHJlYWRvbmx5IENPTkZJRzogQ29uZmlnT3B0aW9uID0ge1xuICAgIHR5cGVzOiBbeyBuYW1lOiAnYXJyYXknLCBjb21wb25lbnQ6IEFycmF5VHlwZUNvbXBvbmVudCB9XVxuICB9O1xuXG4gIG5nT25Jbml0KCk6IHZvaWQge1xuICAgIGlmICh0aGlzLnRvLnJlcXVpcmVkICYmICF0aGlzLmZpZWxkLmZpZWxkR3JvdXAubGVuZ3RoKSB7XG4gICAgICB0aGlzLmFkZCgpO1xuICAgIH1cbiAgfVxufVxuIl19