import { NgModule } from '@angular/core';
import { RouterModule as NgRouterModule } from '@angular/router';
import { RouterService } from './router.service';
import { ContextRouteComponent } from './context-route.component';
import { HeaderModule } from '../header/header.module';
import { CommonModule } from '../common/common.module';
import { ContextRouteGuard } from './context-route.guard';
import { ViewContext } from './router.models';
import { RouterTabsResolver } from './router-tabs.resolver';
import { EmptyComponent } from './empty.component';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './router.service';
import * as ɵngcc2 from '@angular/router';
export const routes = [{
        path: 'users/new',
        component: EmptyComponent
    },
    {
        path: 'tenants/new',
        component: EmptyComponent
    }];
// tslint:disable-next-line: forin
for (const key in ViewContext) {
    const context = ViewContext[key];
    routes.push({
        path: context,
        component: ContextRouteComponent,
        canActivate: [ContextRouteGuard],
        data: { context, contextData: {} },
        resolve: {
            tabs: RouterTabsResolver,
        }
    });
}
export class RouterModule {
    constructor(routerService) {
        // Declared but never used is intended: to always have a instance of RouterService.
    }
    static providers() {
        return [
            ContextRouteGuard,
            RouterTabsResolver,
            RouterService
        ];
    }
    static forRoot() {
        return {
            ngModule: RouterModule,
            providers: RouterModule.providers()
        };
    }
}
RouterModule.ɵfac = function RouterModule_Factory(t) { return new (t || RouterModule)(ɵngcc0.ɵɵinject(ɵngcc1.RouterService)); };
RouterModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: RouterModule });
RouterModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[
            NgRouterModule.forRoot(routes),
            HeaderModule,
            CommonModule
        ]] });
RouterModule.ctorParameters = () => [
    { type: RouterService }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(RouterModule, [{
        type: NgModule,
        args: [{
                declarations: [ContextRouteComponent, EmptyComponent],
                imports: [
                    NgRouterModule.forRoot(routes),
                    HeaderModule,
                    CommonModule
                ],
                entryComponents: [ContextRouteComponent, EmptyComponent]
            }]
    }], function () { return [{ type: ɵngcc1.RouterService }]; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(RouterModule, { declarations: function () { return [ContextRouteComponent, EmptyComponent]; }, imports: function () { return [ɵngcc2.RouterModule, HeaderModule,
        CommonModule]; } }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91dGVyLm1vZHVsZS5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vY29yZS9yb3V0ZXIvcm91dGVyLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxZQUFZLElBQUksY0FBYyxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDakUsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQ2pELE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBQ2xFLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUN2RCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDdkQsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDMUQsT0FBTyxFQUFFLFdBQVcsRUFBUyxNQUFNLGlCQUFpQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQzVELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQzs7OztBQUVuRCxNQUFNLENBQUMsTUFBTSxNQUFNLEdBQVksQ0FBQztBQUNoQyxRQUFFLElBQUksRUFBRSxXQUFXO0FBQ25CLFFBQUUsU0FBUyxFQUFFLGNBQWM7QUFDM0IsS0FBQztBQUNELElBQUE7QUFDQSxRQUFFLElBQUksRUFBRSxhQUFhO0FBQ3JCLFFBQUUsU0FBUyxFQUFFLGNBQWM7QUFDM0IsS0FBQyxDQUFDLENBQUM7QUFDSCxrQ0FBa0M7QUFDbEMsS0FBSyxNQUFNLEdBQUcsSUFBSSxXQUFXLEVBQUU7QUFDL0IsSUFBRSxNQUFNLE9BQU8sR0FBRyxXQUFXLENBQUMsR0FBRyxDQUFDLENBQUM7QUFDbkMsSUFBRSxNQUFNLENBQUMsSUFBSSxDQUFDO0FBQ2QsUUFBSSxJQUFJLEVBQUUsT0FBTztBQUNqQixRQUFJLFNBQVMsRUFBRSxxQkFBcUI7QUFDcEMsUUFBSSxXQUFXLEVBQUUsQ0FBRSxpQkFBaUIsQ0FBRTtBQUN0QyxRQUFJLElBQUksRUFBRSxFQUFFLE9BQU8sRUFBRSxXQUFXLEVBQUUsRUFBRSxFQUFFO0FBQ3RDLFFBQUksT0FBTyxFQUFFO0FBQ2IsWUFBTSxJQUFJLEVBQUUsa0JBQWtCO0FBQzlCLFNBQUs7QUFDTCxLQUFHLENBQUMsQ0FBQztBQUNMLENBQUM7QUFXRCxNQUFNLE9BQU8sWUFBWTtBQUN6QixJQWVFLFlBQVksYUFBNEI7QUFDMUMsUUFBSSxtRkFBbUY7QUFDdkYsSUFBRSxDQUFDO0FBQ0gsSUFsQkUsTUFBTSxDQUFDLFNBQVM7QUFDbEIsUUFBSSxPQUFPO0FBQ1gsWUFBTSxpQkFBaUI7QUFDdkIsWUFBTSxrQkFBa0I7QUFDeEIsWUFBTSxhQUFhO0FBQ25CLFNBQUssQ0FBQztBQUNOLElBQUUsQ0FBQztBQUNILElBQ0UsTUFBTSxDQUFDLE9BQU87QUFDaEIsUUFBSSxPQUFPO0FBQ1gsWUFBTSxRQUFRLEVBQUUsWUFBWTtBQUM1QixZQUFNLFNBQVMsRUFBRSxZQUFZLENBQUMsU0FBUyxFQUFFO0FBQ3pDLFNBQUssQ0FBQztBQUNOLElBQUUsQ0FBQztBQUNIO3dDQXhCQyxRQUFRLFNBQUMsa0JBQ1IsWUFBWSxFQUFFLENBQUUscUJBQXFCLEVBQUUsY0FBYyxDQUFDO2lCQUN0RCxPQUFPLEVBQUUsc0JBQ1AsY0FBYyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUM7aUJBQzlCLFlBQVksc0JBQ1osWUFBWTtTQUNiLGtCQUNELGVBQWU7QUFBRSxDQUFDLHFCQUFxQixFQUFFO1lBQWMsQ0FBQztFQUN6RCxZQUNJO0FBQUM7QUFDVSxZQXpDUCxhQUFhO0FBQUc7Ozs7Ozs7Ozs7Ozs7O2tDQUFFO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUm91dGVyTW9kdWxlIGFzIE5nUm91dGVyTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcbmltcG9ydCB7IFJvdXRlclNlcnZpY2UgfSBmcm9tICcuL3JvdXRlci5zZXJ2aWNlJztcbmltcG9ydCB7IENvbnRleHRSb3V0ZUNvbXBvbmVudCB9IGZyb20gJy4vY29udGV4dC1yb3V0ZS5jb21wb25lbnQnO1xuaW1wb3J0IHsgSGVhZGVyTW9kdWxlIH0gZnJvbSAnLi4vaGVhZGVyL2hlYWRlci5tb2R1bGUnO1xuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnLi4vY29tbW9uL2NvbW1vbi5tb2R1bGUnO1xuaW1wb3J0IHsgQ29udGV4dFJvdXRlR3VhcmQgfSBmcm9tICcuL2NvbnRleHQtcm91dGUuZ3VhcmQnO1xuaW1wb3J0IHsgVmlld0NvbnRleHQsIFJvdXRlIH0gZnJvbSAnLi9yb3V0ZXIubW9kZWxzJztcbmltcG9ydCB7IFJvdXRlclRhYnNSZXNvbHZlciB9IGZyb20gJy4vcm91dGVyLXRhYnMucmVzb2x2ZXInO1xuaW1wb3J0IHsgRW1wdHlDb21wb25lbnQgfSBmcm9tICcuL2VtcHR5LmNvbXBvbmVudCc7XG5cbmV4cG9ydCBjb25zdCByb3V0ZXM6IFJvdXRlW10gPSBbe1xuICBwYXRoOiAndXNlcnMvbmV3JyxcbiAgY29tcG9uZW50OiBFbXB0eUNvbXBvbmVudFxufSxcbntcbiAgcGF0aDogJ3RlbmFudHMvbmV3JyxcbiAgY29tcG9uZW50OiBFbXB0eUNvbXBvbmVudFxufV07XG4vLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6IGZvcmluXG5mb3IgKGNvbnN0IGtleSBpbiBWaWV3Q29udGV4dCkge1xuICBjb25zdCBjb250ZXh0ID0gVmlld0NvbnRleHRba2V5XTtcbiAgcm91dGVzLnB1c2goe1xuICAgIHBhdGg6IGNvbnRleHQsXG4gICAgY29tcG9uZW50OiBDb250ZXh0Um91dGVDb21wb25lbnQsXG4gICAgY2FuQWN0aXZhdGU6IFsgQ29udGV4dFJvdXRlR3VhcmQgXSxcbiAgICBkYXRhOiB7IGNvbnRleHQsIGNvbnRleHREYXRhOiB7fSB9LFxuICAgIHJlc29sdmU6IHtcbiAgICAgIHRhYnM6IFJvdXRlclRhYnNSZXNvbHZlcixcbiAgICB9XG4gIH0pO1xufVxuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFsgQ29udGV4dFJvdXRlQ29tcG9uZW50LCBFbXB0eUNvbXBvbmVudF0sXG4gIGltcG9ydHM6IFtcbiAgICBOZ1JvdXRlck1vZHVsZS5mb3JSb290KHJvdXRlcyksXG4gICAgSGVhZGVyTW9kdWxlLFxuICAgIENvbW1vbk1vZHVsZVxuICBdLFxuICBlbnRyeUNvbXBvbmVudHM6IFtDb250ZXh0Um91dGVDb21wb25lbnQsIEVtcHR5Q29tcG9uZW50XVxufSlcbmV4cG9ydCBjbGFzcyBSb3V0ZXJNb2R1bGUge1xuICBzdGF0aWMgcHJvdmlkZXJzKCkge1xuICAgIHJldHVybiBbXG4gICAgICBDb250ZXh0Um91dGVHdWFyZCxcbiAgICAgIFJvdXRlclRhYnNSZXNvbHZlcixcbiAgICAgIFJvdXRlclNlcnZpY2VcbiAgICBdO1xuICB9XG5cbiAgc3RhdGljIGZvclJvb3QoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG5nTW9kdWxlOiBSb3V0ZXJNb2R1bGUsXG4gICAgICBwcm92aWRlcnM6IFJvdXRlck1vZHVsZS5wcm92aWRlcnMoKVxuICAgIH07XG4gIH1cblxuICBjb25zdHJ1Y3Rvcihyb3V0ZXJTZXJ2aWNlOiBSb3V0ZXJTZXJ2aWNlKSB7XG4gICAgLy8gRGVjbGFyZWQgYnV0IG5ldmVyIHVzZWQgaXMgaW50ZW5kZWQ6IHRvIGFsd2F5cyBoYXZlIGEgaW5zdGFuY2Ugb2YgUm91dGVyU2VydmljZS5cbiAgfVxufVxuIl19