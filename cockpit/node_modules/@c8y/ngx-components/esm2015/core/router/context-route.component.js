import { Component } from '@angular/core';
import { ActivatedRoute } from '@angular/router';
import { ContextRouteService } from './context-route.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/router';
import * as ɵngcc2 from './context-route.service';
export class ContextRouteComponent {
    constructor(route, contextRouteService) {
        this.route = route;
        this.contextRouteService = contextRouteService;
    }
    ngOnInit() {
        this.contextRouteService.init(this.route);
    }
    ngOnDestroy() {
        this.contextRouteService.destroy();
    }
    refreshTabs() {
        this.contextRouteService.refreshContext();
    }
}
ContextRouteComponent.ɵfac = function ContextRouteComponent_Factory(t) { return new (t || ContextRouteComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ActivatedRoute), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ContextRouteService)); };
ContextRouteComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ContextRouteComponent, selectors: [["c8y-context-route"]], decls: 1, vars: 0, template: function ContextRouteComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelement(0, "router-outlet");
    } }, directives: [ɵngcc1.RouterOutlet], encapsulation: 2 });
ContextRouteComponent.ctorParameters = () => [
    { type: ActivatedRoute },
    { type: ContextRouteService }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ContextRouteComponent, [{
        type: Component,
        args: [{
                selector: 'c8y-context-route',
                template: "<router-outlet></router-outlet>\n"
            }]
    }], function () { return [{ type: ɵngcc1.ActivatedRoute }, { type: ɵngcc2.ContextRouteService }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udGV4dC1yb3V0ZS5jb21wb25lbnQuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2NvcmUvcm91dGVyL2NvbnRleHQtcm91dGUuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDMUMsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ2pELE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHlCQUF5QixDQUFDOzs7O0FBTTlELE1BQU0sT0FBTyxxQkFBcUI7QUFDbEMsSUFBRSxZQUFvQixLQUFxQixFQUFVLG1CQUF3QztBQUFJLFFBQTNFLFVBQUssR0FBTCxLQUFLLENBQWdCO0FBQUMsUUFBUyx3QkFBbUIsR0FBbkIsbUJBQW1CLENBQXFCO0FBQUMsSUFBRSxDQUFDO0FBQ2pHLElBQ0UsUUFBUTtBQUFLLFFBQ1gsSUFBSSxDQUFDLG1CQUFtQixDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7QUFDOUMsSUFBRSxDQUFDO0FBQ0gsSUFDRSxXQUFXO0FBQUssUUFDZCxJQUFJLENBQUMsbUJBQW1CLENBQUMsT0FBTyxFQUFFLENBQUM7QUFDdkMsSUFBRSxDQUFDO0FBQ0gsSUFDRSxXQUFXO0FBQ2IsUUFBSSxJQUFJLENBQUMsbUJBQW1CLENBQUMsY0FBYyxFQUFFLENBQUM7QUFDOUMsSUFBRSxDQUFDO0FBQ0g7aURBbEJDLFNBQVMsU0FBQyxrQkFDVCxRQUFRLEVBQUUsbUJBQW1CLGtCQUM3Qiw2Q0FBNkMsY0FDOUM7OztnRUFDSTtBQUFDO0FBQ1UsWUFSUCxjQUFjO0FBQUksWUFDbEIsbUJBQW1CO0FBQUc7Ozs7Ozs7cUhBQUU7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQWN0aXZhdGVkUm91dGUgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xuaW1wb3J0IHsgQ29udGV4dFJvdXRlU2VydmljZSB9IGZyb20gJy4vY29udGV4dC1yb3V0ZS5zZXJ2aWNlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYzh5LWNvbnRleHQtcm91dGUnLFxuICB0ZW1wbGF0ZVVybDogJy4vY29udGV4dC1yb3V0ZS5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgQ29udGV4dFJvdXRlQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IocHJpdmF0ZSByb3V0ZTogQWN0aXZhdGVkUm91dGUsIHByaXZhdGUgY29udGV4dFJvdXRlU2VydmljZTogQ29udGV4dFJvdXRlU2VydmljZSkge31cblxuICBuZ09uSW5pdCgpOiB2b2lkIHtcbiAgICB0aGlzLmNvbnRleHRSb3V0ZVNlcnZpY2UuaW5pdCh0aGlzLnJvdXRlKTtcbiAgfVxuXG4gIG5nT25EZXN0cm95KCk6IHZvaWQge1xuICAgIHRoaXMuY29udGV4dFJvdXRlU2VydmljZS5kZXN0cm95KCk7XG4gIH1cblxuICByZWZyZXNoVGFicygpIHtcbiAgICB0aGlzLmNvbnRleHRSb3V0ZVNlcnZpY2UucmVmcmVzaENvbnRleHQoKTtcbiAgfVxufVxuIl19