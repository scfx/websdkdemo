import { Component, Input } from '@angular/core';
import { deviceAvailabilityIconMap, PushStatusLabels, SendStatusLabels, tooltips } from './device-availability';
import { TranslateService } from '@ngx-translate/core';
import { get } from 'lodash-es';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@ngx-translate/core';
import * as ɵngcc2 from '@angular/common';
import * as ɵngcc3 from '../common/icon.directive';
import * as ɵngcc4 from 'ngx-bootstrap/tooltip';
import * as ɵngcc5 from '../i18n/c8y-translate.pipe';

function DeviceStatusComponent_div_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "div", 4);
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("c8yIcon", ctx_r0.status().sendStatus.icon)("ngClass", ctx_r0.status().sendStatus.class);
} }
function DeviceStatusComponent_div_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "div", 5);
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("c8yIcon", ctx_r1.status().pushStatus.icon)("ngClass", ctx_r1.status().pushStatus.class);
} }
function DeviceStatusComponent_div_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "div", 6);
    ɵngcc0.ɵɵpipe(1, "translate");
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵpropertyInterpolate("tooltip", ɵngcc0.ɵɵpipeBind1(1, 3, ctx_r2.status().maintenanceStatus.tooltip));
    ɵngcc0.ɵɵproperty("c8yIcon", ctx_r2.status().maintenanceStatus.icon)("ngClass", ctx_r2.status().maintenanceStatus.class);
} }
export class DeviceStatusComponent {
    constructor(translateService) {
        this.translateService = translateService;
    }
    set node(value) {
        this._mo = value.mo || value;
    }
    get() {
        return this._mo;
    }
    ngOnChanges() {
        this.setStatusProperites();
    }
    ngAfterContentInit() {
        this.setStatusProperites();
    }
    setStatusProperites() {
        this.requiredAvailability = get(this._mo, 'c8y_RequiredAvailability');
        this.availabilityStatus = get(this._mo, 'c8y_Availability.status');
        this.pushStatus = get(this._mo, 'c8y_Connection.status') || 'UNKNOWN';
        this.sendStatus =
            this.availabilityStatus || (this.requiredAvailability ? 'UNKNOWN' : 'NOT_MONITORED');
    }
    status() {
        let statuses;
        if (this.availabilityStatus === 'MAINTENANCE' || this.pushStatus === 'MAINTENANCE') {
            statuses = this.getMaintenanceStatus();
        }
        else {
            statuses = this.getSendPushStatus();
        }
        return statuses;
    }
    getMaintenanceStatus() {
        return {
            sendStatus: false,
            pushStatus: false,
            maintenanceStatus: {
                icon: deviceAvailabilityIconMap.device.MAINTENANCE.icon,
                class: deviceAvailabilityIconMap.device.MAINTENANCE.class,
                tooltip: tooltips.maintenance
            }
        };
    }
    getSendPushStatus() {
        return {
            sendStatus: {
                icon: deviceAvailabilityIconMap.sendData[this.sendStatus].icon,
                class: deviceAvailabilityIconMap.sendData[this.sendStatus].class,
                status: this.sendStatus,
                label: SendStatusLabels[this.sendStatus],
                tooltip: this.getSendStatusTooltip(this._mo)
            },
            pushStatus: {
                icon: deviceAvailabilityIconMap.push[this.pushStatus].icon,
                class: deviceAvailabilityIconMap.push[this.pushStatus].class,
                status: this.pushStatus,
                label: PushStatusLabels[this.pushStatus],
                tooltip: this.getPushStatusTooltip(this.pushStatus === 'CONNECTED')
            },
            maintenanceStatus: false
        };
    }
    getSendStatusTooltip(device) {
        const availability = device && device.c8y_Availability;
        const lastMessage = availability && availability.lastMessage;
        if (lastMessage) {
            return tooltips.sendStatusConnected(lastMessage, this.translateService);
        }
        return tooltips.sendStatusDisconnected;
    }
    getPushStatusTooltip(isActive) {
        return isActive ? tooltips.pushStatusConnected : tooltips.pushStatusDisconnected;
    }
}
DeviceStatusComponent.ɵfac = function DeviceStatusComponent_Factory(t) { return new (t || DeviceStatusComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.TranslateService)); };
DeviceStatusComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: DeviceStatusComponent, selectors: [["device-status"]], inputs: { node: ["mo", "node"] }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 6, vars: 9, consts: [["placement", "left", 1, "statusContainer", 3, "title"], ["class", "sendStatus", 3, "c8yIcon", "ngClass", 4, "ngIf"], ["class", "pushStatus", 3, "c8yIcon", "ngClass", 4, "ngIf"], ["class", "maintenanceStatus", "container", "body", "placement", "auto", 3, "tooltip", "c8yIcon", "ngClass", 4, "ngIf"], [1, "sendStatus", 3, "c8yIcon", "ngClass"], [1, "pushStatus", 3, "c8yIcon", "ngClass"], ["container", "body", "placement", "auto", 1, "maintenanceStatus", 3, "tooltip", "c8yIcon", "ngClass"]], template: function DeviceStatusComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵpipe(1, "translate");
        ɵngcc0.ɵɵpipe(2, "translate");
        ɵngcc0.ɵɵtemplate(3, DeviceStatusComponent_div_3_Template, 1, 2, "div", 1);
        ɵngcc0.ɵɵtemplate(4, DeviceStatusComponent_div_4_Template, 1, 2, "div", 2);
        ɵngcc0.ɵɵtemplate(5, DeviceStatusComponent_div_5_Template, 2, 5, "div", 3);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵpropertyInterpolate2("title", "", ɵngcc0.ɵɵpipeBind1(1, 5, ctx.status().sendStatus.tooltip), "\n", ɵngcc0.ɵɵpipeBind1(2, 7, ctx.status().pushStatus.tooltip), "");
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", !!ctx.status().sendStatus);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !!ctx.status().pushStatus);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !!ctx.status().maintenanceStatus);
    } }, directives: [ɵngcc2.NgIf, ɵngcc3.IconDirective, ɵngcc2.NgClass, ɵngcc4.TooltipDirective], pipes: [ɵngcc5.C8yTranslatePipe], encapsulation: 2 });
DeviceStatusComponent.ctorParameters = () => [
    { type: TranslateService }
];
DeviceStatusComponent.propDecorators = {
    node: [{ type: Input, args: ['mo',] }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DeviceStatusComponent, [{
        type: Component,
        args: [{
                selector: 'device-status',
                template: "<!-- ATTENTION: keep text format in `tooltip` attribute -->\n<div class=\"statusContainer\"\n    title=\"{{status().sendStatus.tooltip | translate}}\n{{status().pushStatus.tooltip | translate}}\"\n    placement=\"left\"\n   >\n    <div\n    *ngIf=\"!!status().sendStatus\"\n    class=\"sendStatus\"\n    [c8yIcon]=\"status().sendStatus.icon\"\n    [ngClass]=\"status().sendStatus.class\"\n    ></div>\n    <div\n    *ngIf=\"!!status().pushStatus\"\n    class=\"pushStatus\"\n    [c8yIcon]=\"status().pushStatus.icon\"\n    [ngClass]=\"status().pushStatus.class\"\n    >\n    </div>\n\n  <div *ngIf=\"!!status().maintenanceStatus\"\n    class=\"maintenanceStatus\"\n    tooltip=\"{{status().maintenanceStatus.tooltip | translate}}\"\n    container=\"body\"\n    placement=\"auto\"\n    [c8yIcon]=\"status().maintenanceStatus.icon\"\n    [ngClass]=\"status().maintenanceStatus.class\"></div>\n</div>\n"
            }]
    }], function () { return [{ type: ɵngcc1.TranslateService }]; }, { node: [{
            type: Input,
            args: ['mo']
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,