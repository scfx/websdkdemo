import { Directive, HostListener, Input } from '@angular/core';
import { GainsightService } from './gainsight.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './gainsight.service';
export class ProductExperienceDirective {
    constructor(gainsightService) {
        this.gainsightService = gainsightService;
    }
    onClick() {
        if (this.actionName) {
            this.gainsightService.triggerEvent(this.actionName, this.actionData);
        }
    }
}
ProductExperienceDirective.ɵfac = function ProductExperienceDirective_Factory(t) { return new (t || ProductExperienceDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.GainsightService)); };
ProductExperienceDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: ProductExperienceDirective, selectors: [["", "c8yProductExperience", ""]], hostBindings: function ProductExperienceDirective_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("click", function ProductExperienceDirective_click_HostBindingHandler() { return ctx.onClick(); });
    } }, inputs: { actionName: "actionName", actionData: "actionData" } });
ProductExperienceDirective.ctorParameters = () => [
    { type: GainsightService }
];
ProductExperienceDirective.propDecorators = {
    actionName: [{ type: Input }],
    actionData: [{ type: Input }],
    onClick: [{ type: HostListener, args: ['click',] }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ProductExperienceDirective, [{
        type: Directive,
        args: [{
                selector: '[c8yProductExperience]'
            }]
    }], function () { return [{ type: ɵngcc1.GainsightService }]; }, { onClick: [{
            type: HostListener,
            args: ['click']
        }], actionName: [{
            type: Input
        }], actionData: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvZHVjdC1leHBlcmllbmNlLmRpcmVjdGl2ZS5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vY29yZS9wcm9kdWN0LWV4cGVyaWVuY2UvcHJvZHVjdC1leHBlcmllbmNlLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDL0QsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0scUJBQXFCLENBQUM7OztBQUt2RCxNQUFNLE9BQU8sMEJBQTBCO0FBQ3ZDLElBRUUsWUFBb0IsZ0JBQWtDO0FBQUksUUFBdEMscUJBQWdCLEdBQWhCLGdCQUFnQixDQUFrQjtBQUFDLElBQUUsQ0FBQztBQUM1RCxJQUVFLE9BQU87QUFDVCxRQUFJLElBQUksSUFBSSxDQUFDLFVBQVUsRUFBRTtBQUN6QixZQUFNLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLFVBQVUsRUFBRSxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7QUFDM0UsU0FBSztBQUNMLElBQUUsQ0FBQztBQUNIO3NEQWRDLFNBQVMsU0FBQyxrQkFDVCxRQUFRLEVBQUUsd0JBQXdCLGNBQ25DOzs7MkVBQ0k7QUFBQztBQUNVLFlBTlAsZ0JBQWdCO0FBQUc7QUFBRztBQUd4Qix5QkFHSixLQUFLO0FBQUsseUJBQ1YsS0FBSztBQUFLLHNCQUdWLFlBQVksU0FBQyxPQUFPO0FBQ25COzs7Ozs7Ozs7Ozs7O29CQUFFO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIEhvc3RMaXN0ZW5lciwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEdhaW5zaWdodFNlcnZpY2UgfSBmcm9tICcuL2dhaW5zaWdodC5zZXJ2aWNlJztcblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW2M4eVByb2R1Y3RFeHBlcmllbmNlXSdcbn0pXG5leHBvcnQgY2xhc3MgUHJvZHVjdEV4cGVyaWVuY2VEaXJlY3RpdmUge1xuICBASW5wdXQoKSBhY3Rpb25OYW1lOiBzdHJpbmc7XG4gIEBJbnB1dCgpIGFjdGlvbkRhdGE6IG9iamVjdDtcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBnYWluc2lnaHRTZXJ2aWNlOiBHYWluc2lnaHRTZXJ2aWNlKSB7fVxuXG4gIEBIb3N0TGlzdGVuZXIoJ2NsaWNrJylcbiAgb25DbGljaygpIHtcbiAgICBpZiAodGhpcy5hY3Rpb25OYW1lKSB7XG4gICAgICB0aGlzLmdhaW5zaWdodFNlcnZpY2UudHJpZ2dlckV2ZW50KHRoaXMuYWN0aW9uTmFtZSwgdGhpcy5hY3Rpb25EYXRhKTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==