import { __awaiter } from "tslib";
import { Component, Output, EventEmitter, Input } from '@angular/core';
import { LoginService } from '../login/login.service';
import { AlertService } from '../alert/alert.service';
import { LoginViews } from '../login/login.model';
import { UserService } from '@c8y/client';
export class ProvidePhoneNumberComponent {
    constructor(loginService, alert, userService) {
        this.loginService = loginService;
        this.alert = alert;
        this.userService = userService;
        this.onCancel = new EventEmitter();
        this.onChangeView = new EventEmitter();
        this.requestInProgress = false;
        this.sendTfa = '0';
    }
    save() {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                this.requestInProgress = true;
                yield this.userService.savePhoneNumber(this.phoneNumber);
                yield this.sendTFASms();
                this.onChangeView.emit({
                    view: LoginViews.SmsChallenge,
                    credentials: this.credentials
                });
            }
            catch (e) {
                this.alert.addServerFailure(e);
            }
            finally {
                this.requestInProgress = false;
            }
        });
    }
    sendTFASms() {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                yield this.userService.verifyTFACode(this.sendTfa);
            }
            catch (e) {
                if (e.res.status === 403) {
                    this.loginService.cleanMessages();
                    this.loginService.addSuccessMessage('send_sms');
                }
                else {
                    throw e;
                }
            }
        });
    }
}
ProvidePhoneNumberComponent.decorators = [
    { type: Component, args: [{
                selector: 'c8y-provide-phone-number',
                template: "<form #twoFactorForm=\"ngForm\" role=\"form\" class=\"loginForm\" (ngSubmit)=\"save()\" novalidate>\n  <div class=\"legend form-block center\" translate>\n    Two-factor authentication\n  </div>\n\n  <c8y-form-group [ngClass]=\"requestInProgress || twoFactorForm.invalid ? 'p-b-8' : ''\">\n    <label translate>Provide your phone number</label>\n\n    <input\n      class=\"form-control\"\n      [(ngModel)]=\"phoneNumber\"\n      #contactPhone=\"ngModel\"\n      type=\"text\"\n      name=\"phone\"\n      autocomplete=\"off\"\n      placeholder=\"{{ 'e.g. +49 9 876 543 210`LOCALIZE`' | translate }}\"\n      c8yPhoneValidation\n      c8yDefaultValidation=\"phoneNumber\"\n      required\n    />\n  </c8y-form-group>\n\n  <button\n    title=\"{{ 'Save and continue' | translate }}\"\n    type=\"submit\"\n    class=\"btn btn-primary btn-lg btn-block form-group\"\n    [disabled]=\"requestInProgress || twoFactorForm.invalid\"\n  >\n    {{ 'Save and continue' | translate }}\n  </button>\n\n  <div class=\"d-flex m-t-8\">\n    <a\n      title=\"{{ 'Login' | translate }}\"\n      class=\"small pointer m-l-auto\"\n      href=\"#\"\n      (click)=\"onCancel.emit()\"\n    >\n      {{ 'Login' | translate }}\n    </a>\n  </div>\n</form>\n"
            },] }
];
ProvidePhoneNumberComponent.ctorParameters = () => [
    { type: LoginService },
    { type: AlertService },
    { type: UserService }
];
ProvidePhoneNumberComponent.propDecorators = {
    credentials: [{ type: Input }],
    onCancel: [{ type: Output }],
    onChangeView: [{ type: Output }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvdmlkZS1waG9uZS1udW1iZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vY29yZS9hdXRoZW50aWNhdGlvbi9wcm92aWRlLXBob25lLW51bWJlci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDdkUsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQ3RELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUN0RCxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDbEQsT0FBTyxFQUFnQixXQUFXLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFNeEQsTUFBTSxPQUFPLDJCQUEyQjtJQVN0QyxZQUNTLFlBQTBCLEVBQzFCLEtBQW1CLEVBQ2xCLFdBQXdCO1FBRnpCLGlCQUFZLEdBQVosWUFBWSxDQUFjO1FBQzFCLFVBQUssR0FBTCxLQUFLLENBQWM7UUFDbEIsZ0JBQVcsR0FBWCxXQUFXLENBQWE7UUFWeEIsYUFBUSxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7UUFDOUIsaUJBQVksR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO1FBRzVDLHNCQUFpQixHQUFHLEtBQUssQ0FBQztRQUNULFlBQU8sR0FBVyxHQUFHLENBQUM7SUFNcEMsQ0FBQztJQUVFLElBQUk7O1lBQ1IsSUFBSTtnQkFDRixJQUFJLENBQUMsaUJBQWlCLEdBQUcsSUFBSSxDQUFDO2dCQUM5QixNQUFNLElBQUksQ0FBQyxXQUFXLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztnQkFDekQsTUFBTSxJQUFJLENBQUMsVUFBVSxFQUFFLENBQUM7Z0JBQ3hCLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDO29CQUNyQixJQUFJLEVBQUUsVUFBVSxDQUFDLFlBQVk7b0JBQzdCLFdBQVcsRUFBRSxJQUFJLENBQUMsV0FBVztpQkFDOUIsQ0FBQyxDQUFDO2FBQ0o7WUFBQyxPQUFPLENBQUMsRUFBRTtnQkFDVixJQUFJLENBQUMsS0FBSyxDQUFDLGdCQUFnQixDQUFDLENBQUMsQ0FBQyxDQUFDO2FBQ2hDO29CQUFTO2dCQUNSLElBQUksQ0FBQyxpQkFBaUIsR0FBRyxLQUFLLENBQUM7YUFDaEM7UUFDSCxDQUFDO0tBQUE7SUFFYSxVQUFVOztZQUN0QixJQUFJO2dCQUNGLE1BQU0sSUFBSSxDQUFDLFdBQVcsQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO2FBQ3BEO1lBQUMsT0FBTyxDQUFDLEVBQUU7Z0JBQ1YsSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLE1BQU0sS0FBSyxHQUFHLEVBQUU7b0JBQ3hCLElBQUksQ0FBQyxZQUFZLENBQUMsYUFBYSxFQUFFLENBQUM7b0JBQ2xDLElBQUksQ0FBQyxZQUFZLENBQUMsaUJBQWlCLENBQUMsVUFBVSxDQUFDLENBQUM7aUJBQ2pEO3FCQUFNO29CQUNMLE1BQU0sQ0FBQyxDQUFDO2lCQUNUO2FBQ0Y7UUFDSCxDQUFDO0tBQUE7OztZQTlDRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLDBCQUEwQjtnQkFDcEMsaXVDQUFvRDthQUNyRDs7O1lBUlEsWUFBWTtZQUNaLFlBQVk7WUFFRSxXQUFXOzs7MEJBTy9CLEtBQUs7dUJBQ0wsTUFBTTsyQkFDTixNQUFNIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPdXRwdXQsIEV2ZW50RW1pdHRlciwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IExvZ2luU2VydmljZSB9IGZyb20gJy4uL2xvZ2luL2xvZ2luLnNlcnZpY2UnO1xuaW1wb3J0IHsgQWxlcnRTZXJ2aWNlIH0gZnJvbSAnLi4vYWxlcnQvYWxlcnQuc2VydmljZSc7XG5pbXBvcnQgeyBMb2dpblZpZXdzIH0gZnJvbSAnLi4vbG9naW4vbG9naW4ubW9kZWwnO1xuaW1wb3J0IHsgSUNyZWRlbnRpYWxzLCBVc2VyU2VydmljZSB9IGZyb20gJ0BjOHkvY2xpZW50JztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYzh5LXByb3ZpZGUtcGhvbmUtbnVtYmVyJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3Byb3ZpZGUtcGhvbmUtbnVtYmVyLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBQcm92aWRlUGhvbmVOdW1iZXJDb21wb25lbnQge1xuICBASW5wdXQoKSBjcmVkZW50aWFsczogSUNyZWRlbnRpYWxzO1xuICBAT3V0cHV0KCkgb25DYW5jZWwgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gIEBPdXRwdXQoKSBvbkNoYW5nZVZpZXcgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgcGhvbmVOdW1iZXI6IHN0cmluZztcbiAgcmVxdWVzdEluUHJvZ3Jlc3MgPSBmYWxzZTtcbiAgcHJpdmF0ZSByZWFkb25seSBzZW5kVGZhOiBzdHJpbmcgPSAnMCc7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHVibGljIGxvZ2luU2VydmljZTogTG9naW5TZXJ2aWNlLFxuICAgIHB1YmxpYyBhbGVydDogQWxlcnRTZXJ2aWNlLFxuICAgIHByaXZhdGUgdXNlclNlcnZpY2U6IFVzZXJTZXJ2aWNlXG4gICkge31cblxuICBhc3luYyBzYXZlKCkge1xuICAgIHRyeSB7XG4gICAgICB0aGlzLnJlcXVlc3RJblByb2dyZXNzID0gdHJ1ZTtcbiAgICAgIGF3YWl0IHRoaXMudXNlclNlcnZpY2Uuc2F2ZVBob25lTnVtYmVyKHRoaXMucGhvbmVOdW1iZXIpO1xuICAgICAgYXdhaXQgdGhpcy5zZW5kVEZBU21zKCk7XG4gICAgICB0aGlzLm9uQ2hhbmdlVmlldy5lbWl0KHtcbiAgICAgICAgdmlldzogTG9naW5WaWV3cy5TbXNDaGFsbGVuZ2UsXG4gICAgICAgIGNyZWRlbnRpYWxzOiB0aGlzLmNyZWRlbnRpYWxzXG4gICAgICB9KTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICB0aGlzLmFsZXJ0LmFkZFNlcnZlckZhaWx1cmUoZSk7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIHRoaXMucmVxdWVzdEluUHJvZ3Jlc3MgPSBmYWxzZTtcbiAgICB9XG4gIH1cblxuICBwcml2YXRlIGFzeW5jIHNlbmRURkFTbXMoKSB7XG4gICAgdHJ5IHtcbiAgICAgIGF3YWl0IHRoaXMudXNlclNlcnZpY2UudmVyaWZ5VEZBQ29kZSh0aGlzLnNlbmRUZmEpO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIGlmIChlLnJlcy5zdGF0dXMgPT09IDQwMykge1xuICAgICAgICB0aGlzLmxvZ2luU2VydmljZS5jbGVhbk1lc3NhZ2VzKCk7XG4gICAgICAgIHRoaXMubG9naW5TZXJ2aWNlLmFkZFN1Y2Nlc3NNZXNzYWdlKCdzZW5kX3NtcycpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhyb3cgZTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbiJdfQ==