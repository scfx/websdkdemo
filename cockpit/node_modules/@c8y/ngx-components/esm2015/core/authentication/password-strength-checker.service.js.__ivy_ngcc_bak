import { Injectable } from '@angular/core';
import { PasswordStrength } from '@c8y/client';
import { filter } from 'lodash-es';
import { gettext } from '../i18n/gettext';
export class PasswordStrengthCheckerService {
    constructor() {
        this.GREEN = {
            colorName: 'green',
            color: 'rgb(0, 128, 0)',
            description: gettext('strong'),
            passwordStrength: PasswordStrength.GREEN
        };
        this.YELLOW = {
            colorName: 'yellow',
            color: 'rgb(255, 204, 51)',
            description: gettext('medium'),
            passwordStrength: PasswordStrength.YELLOW
        };
        this.RED = {
            colorName: 'red',
            color: 'rgb(170, 0, 51)',
            description: gettext('weak'),
            passwordStrength: PasswordStrength.RED
        };
    }
    hasLowerCase(password) {
        return (password.search(/[a-z]/) !== -1);
    }
    hasUpperCase(password) {
        return (password.search(/[A-Z]/) !== -1);
    }
    hasNumbers(password) {
        return (password.search(/[0-9]/) !== -1);
    }
    hasSpecialChars(password) {
        return (password.search(/[^0-9a-zA-Z]+/) !== -1);
    }
    getStrengthColor(password) {
        const passwordStrength = filter([
            this.hasLowerCase(password),
            this.hasUpperCase(password),
            this.hasNumbers(password),
            this.hasSpecialChars(password)
        ]).length;
        if (passwordStrength > 3) {
            return this.GREEN;
        }
        else if (passwordStrength >= 3) {
            return this.YELLOW;
        }
        else {
            return this.RED;
        }
    }
}
PasswordStrengthCheckerService.decorators = [
    { type: Injectable }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFzc3dvcmQtc3RyZW5ndGgtY2hlY2tlci5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vY29yZS9hdXRoZW50aWNhdGlvbi9wYXNzd29yZC1zdHJlbmd0aC1jaGVja2VyLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDL0MsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLFdBQVcsQ0FBQztBQUVuQyxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFHMUMsTUFBTSxPQUFPLDhCQUE4QjtJQUQzQztRQUdVLFVBQUssR0FBMEI7WUFDckMsU0FBUyxFQUFFLE9BQU87WUFDbEIsS0FBSyxFQUFFLGdCQUFnQjtZQUN2QixXQUFXLEVBQUUsT0FBTyxDQUFDLFFBQVEsQ0FBQztZQUM5QixnQkFBZ0IsRUFBRSxnQkFBZ0IsQ0FBQyxLQUFLO1NBQ3pDLENBQUM7UUFDTSxXQUFNLEdBQTBCO1lBQ3RDLFNBQVMsRUFBRSxRQUFRO1lBQ25CLEtBQUssRUFBRSxtQkFBbUI7WUFDMUIsV0FBVyxFQUFFLE9BQU8sQ0FBQyxRQUFRLENBQUM7WUFDOUIsZ0JBQWdCLEVBQUUsZ0JBQWdCLENBQUMsTUFBTTtTQUMxQyxDQUFDO1FBQ00sUUFBRyxHQUEwQjtZQUNuQyxTQUFTLEVBQUUsS0FBSztZQUNoQixLQUFLLEVBQUUsaUJBQWlCO1lBQ3hCLFdBQVcsRUFBRSxPQUFPLENBQUMsTUFBTSxDQUFDO1lBQzVCLGdCQUFnQixFQUFFLGdCQUFnQixDQUFDLEdBQUc7U0FDdkMsQ0FBQztJQWtDSixDQUFDO0lBaENDLFlBQVksQ0FBQyxRQUFnQjtRQUMzQixPQUFPLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzNDLENBQUM7SUFFRCxZQUFZLENBQUMsUUFBZ0I7UUFDM0IsT0FBTyxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUMzQyxDQUFDO0lBRUQsVUFBVSxDQUFDLFFBQWdCO1FBQ3pCLE9BQU8sQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDM0MsQ0FBQztJQUVELGVBQWUsQ0FBQyxRQUFnQjtRQUM5QixPQUFPLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxlQUFlLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ25ELENBQUM7SUFFRCxnQkFBZ0IsQ0FBQyxRQUFnQjtRQUMvQixNQUFNLGdCQUFnQixHQUFHLE1BQU0sQ0FBQztZQUM5QixJQUFJLENBQUMsWUFBWSxDQUFDLFFBQVEsQ0FBQztZQUMzQixJQUFJLENBQUMsWUFBWSxDQUFDLFFBQVEsQ0FBQztZQUMzQixJQUFJLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBQztZQUN6QixJQUFJLENBQUMsZUFBZSxDQUFDLFFBQVEsQ0FBQztTQUMvQixDQUFDLENBQUMsTUFBTSxDQUFDO1FBRVYsSUFBSSxnQkFBZ0IsR0FBRyxDQUFDLEVBQUU7WUFDeEIsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDO1NBQ25CO2FBQU0sSUFBSSxnQkFBZ0IsSUFBSSxDQUFDLEVBQUU7WUFDaEMsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDO1NBQ3BCO2FBQU07WUFDTCxPQUFPLElBQUksQ0FBQyxHQUFHLENBQUM7U0FDakI7SUFDSCxDQUFDOzs7WUFyREYsVUFBVSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFBhc3N3b3JkU3RyZW5ndGggfSBmcm9tICdAYzh5L2NsaWVudCc7XG5pbXBvcnQgeyBmaWx0ZXIgfSBmcm9tICdsb2Rhc2gtZXMnO1xuaW1wb3J0IHsgUGFzc3dvcmRTdHJlbmd0aENvbG9yIH0gZnJvbSAnLi9wYXNzd29yZC5tb2RlbCc7XG5pbXBvcnQgeyBnZXR0ZXh0IH0gZnJvbSAnLi4vaTE4bi9nZXR0ZXh0JztcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFBhc3N3b3JkU3RyZW5ndGhDaGVja2VyU2VydmljZSB7XG5cbiAgcHJpdmF0ZSBHUkVFTjogUGFzc3dvcmRTdHJlbmd0aENvbG9yID0ge1xuICAgIGNvbG9yTmFtZTogJ2dyZWVuJyxcbiAgICBjb2xvcjogJ3JnYigwLCAxMjgsIDApJyxcbiAgICBkZXNjcmlwdGlvbjogZ2V0dGV4dCgnc3Ryb25nJyksXG4gICAgcGFzc3dvcmRTdHJlbmd0aDogUGFzc3dvcmRTdHJlbmd0aC5HUkVFTlxuICB9O1xuICBwcml2YXRlIFlFTExPVzogUGFzc3dvcmRTdHJlbmd0aENvbG9yID0ge1xuICAgIGNvbG9yTmFtZTogJ3llbGxvdycsXG4gICAgY29sb3I6ICdyZ2IoMjU1LCAyMDQsIDUxKScsXG4gICAgZGVzY3JpcHRpb246IGdldHRleHQoJ21lZGl1bScpLFxuICAgIHBhc3N3b3JkU3RyZW5ndGg6IFBhc3N3b3JkU3RyZW5ndGguWUVMTE9XXG4gIH07XG4gIHByaXZhdGUgUkVEOiBQYXNzd29yZFN0cmVuZ3RoQ29sb3IgPSB7XG4gICAgY29sb3JOYW1lOiAncmVkJyxcbiAgICBjb2xvcjogJ3JnYigxNzAsIDAsIDUxKScsXG4gICAgZGVzY3JpcHRpb246IGdldHRleHQoJ3dlYWsnKSxcbiAgICBwYXNzd29yZFN0cmVuZ3RoOiBQYXNzd29yZFN0cmVuZ3RoLlJFRFxuICB9O1xuXG4gIGhhc0xvd2VyQ2FzZShwYXNzd29yZDogc3RyaW5nKSB7XG4gICAgcmV0dXJuIChwYXNzd29yZC5zZWFyY2goL1thLXpdLykgIT09IC0xKTtcbiAgfVxuXG4gIGhhc1VwcGVyQ2FzZShwYXNzd29yZDogc3RyaW5nKSB7XG4gICAgcmV0dXJuIChwYXNzd29yZC5zZWFyY2goL1tBLVpdLykgIT09IC0xKTtcbiAgfVxuXG4gIGhhc051bWJlcnMocGFzc3dvcmQ6IHN0cmluZykge1xuICAgIHJldHVybiAocGFzc3dvcmQuc2VhcmNoKC9bMC05XS8pICE9PSAtMSk7XG4gIH1cblxuICBoYXNTcGVjaWFsQ2hhcnMocGFzc3dvcmQ6IHN0cmluZykge1xuICAgIHJldHVybiAocGFzc3dvcmQuc2VhcmNoKC9bXjAtOWEtekEtWl0rLykgIT09IC0xKTtcbiAgfVxuXG4gIGdldFN0cmVuZ3RoQ29sb3IocGFzc3dvcmQ6IHN0cmluZyk6IFBhc3N3b3JkU3RyZW5ndGhDb2xvciB7XG4gICAgY29uc3QgcGFzc3dvcmRTdHJlbmd0aCA9IGZpbHRlcihbXG4gICAgICB0aGlzLmhhc0xvd2VyQ2FzZShwYXNzd29yZCksXG4gICAgICB0aGlzLmhhc1VwcGVyQ2FzZShwYXNzd29yZCksXG4gICAgICB0aGlzLmhhc051bWJlcnMocGFzc3dvcmQpLFxuICAgICAgdGhpcy5oYXNTcGVjaWFsQ2hhcnMocGFzc3dvcmQpXG4gICAgXSkubGVuZ3RoO1xuXG4gICAgaWYgKHBhc3N3b3JkU3RyZW5ndGggPiAzKSB7XG4gICAgICByZXR1cm4gdGhpcy5HUkVFTjtcbiAgICB9IGVsc2UgaWYgKHBhc3N3b3JkU3RyZW5ndGggPj0gMykge1xuICAgICAgcmV0dXJuIHRoaXMuWUVMTE9XO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gdGhpcy5SRUQ7XG4gICAgfVxuICB9XG59XG4iXX0=