import { __awaiter } from "tslib";
import { Component } from '@angular/core';
import { UserService } from '@c8y/client';
import { AlertService } from '../alert/alert.service';
import { gettext } from '../i18n';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@c8y/client';
import * as ɵngcc2 from '../alert/alert.service';
import * as ɵngcc3 from '../i18n/c8y-translate.directive';
import * as ɵngcc4 from '@angular/common';
import * as ɵngcc5 from 'angularx-qrcode';

function TotpSetupComponent_qrcode_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "qrcode", 4);
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("width", 300)("qrdata", ctx_r0.qrData)("cssClass", "m-b-16")("errorCorrectionLevel", "M");
} }
export class TotpSetupComponent {
    constructor(user, alert) {
        this.user = user;
        this.alert = alert;
    }
    get qrCodeImage() {
        return this.totpSecret ? this.totpSecret.secretQrUrl : '';
    }
    get secret() {
        return this.totpSecret ? this.totpSecret.rawSecret : '';
    }
    get qrData() {
        // TODO: waiting for BE:, now we need extract it from secretQrUrl
        // https://cumulocity.atlassian.net/browse/MTM-36387
        // return this.totpSecret ? this.totpSecret.qrData : '';
        const otpAuth = this.qrCodeImage.split('chl=')[1];
        if (!otpAuth) {
            this.alert.danger(gettext('Failed to generate a QR code.'));
            return '';
        }
        return decodeURIComponent(otpAuth);
    }
    ngOnInit() {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                const { data } = yield this.user.generateTotpSecret();
                this.totpSecret = data;
            }
            catch (ex) {
                this.alert.addServerFailure(ex);
            }
        });
    }
}
TotpSetupComponent.ɵfac = function TotpSetupComponent_Factory(t) { return new (t || TotpSetupComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.UserService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.AlertService)); };
TotpSetupComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: TotpSetupComponent, selectors: [["c8y-totp-setup"]], decls: 6, vars: 2, consts: [[1, "text-center"], ["translate", "", 1, "lead", "m-b-16"], [3, "width", "qrdata", "cssClass", "errorCorrectionLevel", 4, "ngIf"], [1, "text-center", "text-muted"], [3, "width", "qrdata", "cssClass", "errorCorrectionLevel"]], template: function TotpSetupComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "p", 1);
        ɵngcc0.ɵɵtext(2, " Scan this QR code with your smartphone using the Google Authenticator app. ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(3, TotpSetupComponent_qrcode_3_Template, 1, 4, "qrcode", 2);
        ɵngcc0.ɵɵelementStart(4, "p", 3);
        ɵngcc0.ɵɵtext(5);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", ctx.totpSecret);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate1(" ", ctx.secret, " ");
    } }, directives: [ɵngcc3.C8yTranslateDirective, ɵngcc4.NgIf, ɵngcc5.QRCodeComponent], encapsulation: 2 });
TotpSetupComponent.ctorParameters = () => [
    { type: UserService },
    { type: AlertService }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TotpSetupComponent, [{
        type: Component,
        args: [{
                selector: 'c8y-totp-setup',
                template: "<div class=\"text-center\">\n  <p\n    class=\"lead m-b-16\"\n    translate\n  >\n    Scan this QR code with your smartphone using the Google Authenticator app.\n  </p>\n\n\n  <qrcode\n    *ngIf=\"totpSecret\"\n    [width]=\"300\"\n    [qrdata]=\"qrData\"\n    [cssClass]=\"'m-b-16'\"\n    [errorCorrectionLevel]=\"'M'\"\n  ></qrcode>\n  <p class=\"text-center text-muted\">\n    {{secret}}\n  </p>\n</div>\n"
            }]
    }], function () { return [{ type: ɵngcc1.UserService }, { type: ɵngcc2.AlertService }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG90cC1zZXR1cC5jb21wb25lbnQuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2NvcmUvYXV0aGVudGljYXRpb24vdG90cC1zZXR1cC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsTUFBTSxlQUFlLENBQUM7QUFDbEQsT0FBTyxFQUFTLFdBQVcsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUNqRCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDdEQsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLFNBQVMsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7QUFNbEMsTUFBTSxPQUFPLGtCQUFrQjtBQUFHLElBdUJoQyxZQUFvQixJQUFpQixFQUFVLEtBQW1CO0FBQUksUUFBbEQsU0FBSSxHQUFKLElBQUksQ0FBYTtBQUFDLFFBQVMsVUFBSyxHQUFMLEtBQUssQ0FBYztBQUFDLElBQUUsQ0FBQztBQUN4RSxJQXJCRSxJQUFJLFdBQVc7QUFDakIsUUFBSSxPQUFPLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7QUFDOUQsSUFBRSxDQUFDO0FBQ0gsSUFDRSxJQUFJLE1BQU07QUFDWixRQUFJLE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztBQUM1RCxJQUFFLENBQUM7QUFDSCxJQUNFLElBQUksTUFBTTtBQUNaLFFBQUksaUVBQWlFO0FBQ3JFLFFBQUksb0RBQW9EO0FBQ3hELFFBQUksd0RBQXdEO0FBQzVELFFBQUksTUFBTSxPQUFPLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDdEQsUUFBSSxJQUFJLENBQUMsT0FBTyxFQUFFO0FBQ2xCLFlBQU0sSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLCtCQUErQixDQUFDLENBQUMsQ0FBQztBQUNsRSxZQUFNLE9BQU8sRUFBRSxDQUFDO0FBQ2hCLFNBQUs7QUFDTCxRQUFJLE9BQU8sa0JBQWtCLENBQUMsT0FBTyxDQUFDLENBQUM7QUFDdkMsSUFBRSxDQUFDO0FBQ0gsSUFHUSxRQUFRO0FBQ2hCO0FBQ29ELFlBRGhELElBQUk7QUFDUixnQkFBTSxNQUFNLEVBQUUsSUFBSSxFQUFFLEdBQUcsTUFBTSxJQUFJLENBQUMsSUFBSSxDQUFDLGtCQUFrQixFQUFFLENBQUM7QUFDNUQsZ0JBQU0sSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUM7QUFDN0IsYUFBSztBQUFDLFlBQUEsT0FBTyxFQUFFLEVBQUU7QUFDakIsZ0JBQU0sSUFBSSxDQUFDLEtBQUssQ0FBQyxnQkFBZ0IsQ0FBQyxFQUFFLENBQUMsQ0FBQztBQUN0QyxhQUFLO0FBQ0wsUUFBRSxDQUFDO0FBRUgsS0FGRztBQUNIOzhDQXJDQyxTQUFTLFNBQUMsa0JBQ1QsUUFBUSxFQUFFLGdCQUFnQixrQkFDMUI7eVZBQTBDLGNBQzNDOzs7Ozs7Ozs7Ozs7Ozs7OEdBQ0k7QUFBQztBQUE0QyxZQVJsQyxXQUFXO0FBQUksWUFDdEIsWUFBWTtBQUFHOzs7Ozs7OzJHQUFFO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSVRvdHAsIFVzZXJTZXJ2aWNlIH0gZnJvbSAnQGM4eS9jbGllbnQnO1xuaW1wb3J0IHsgQWxlcnRTZXJ2aWNlIH0gZnJvbSAnLi4vYWxlcnQvYWxlcnQuc2VydmljZSc7XG5pbXBvcnQgeyBnZXR0ZXh0IH0gZnJvbSAnLi4vaTE4bic7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2M4eS10b3RwLXNldHVwJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3RvdHAtc2V0dXAuY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIFRvdHBTZXR1cENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIHRvdHBTZWNyZXQ6IElUb3RwO1xuXG4gIGdldCBxckNvZGVJbWFnZSgpIHtcbiAgICByZXR1cm4gdGhpcy50b3RwU2VjcmV0ID8gdGhpcy50b3RwU2VjcmV0LnNlY3JldFFyVXJsIDogJyc7XG4gIH1cblxuICBnZXQgc2VjcmV0KCkge1xuICAgIHJldHVybiB0aGlzLnRvdHBTZWNyZXQgPyB0aGlzLnRvdHBTZWNyZXQucmF3U2VjcmV0IDogJyc7XG4gIH1cblxuICBnZXQgcXJEYXRhKCkge1xuICAgIC8vIFRPRE86IHdhaXRpbmcgZm9yIEJFOiwgbm93IHdlIG5lZWQgZXh0cmFjdCBpdCBmcm9tIHNlY3JldFFyVXJsXG4gICAgLy8gaHR0cHM6Ly9jdW11bG9jaXR5LmF0bGFzc2lhbi5uZXQvYnJvd3NlL01UTS0zNjM4N1xuICAgIC8vIHJldHVybiB0aGlzLnRvdHBTZWNyZXQgPyB0aGlzLnRvdHBTZWNyZXQucXJEYXRhIDogJyc7XG4gICAgY29uc3Qgb3RwQXV0aCA9IHRoaXMucXJDb2RlSW1hZ2Uuc3BsaXQoJ2NobD0nKVsxXTtcbiAgICBpZiAoIW90cEF1dGgpIHtcbiAgICAgIHRoaXMuYWxlcnQuZGFuZ2VyKGdldHRleHQoJ0ZhaWxlZCB0byBnZW5lcmF0ZSBhIFFSIGNvZGUuJykpO1xuICAgICAgcmV0dXJuICcnO1xuICAgIH1cbiAgICByZXR1cm4gZGVjb2RlVVJJQ29tcG9uZW50KG90cEF1dGgpO1xuICB9XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSB1c2VyOiBVc2VyU2VydmljZSwgcHJpdmF0ZSBhbGVydDogQWxlcnRTZXJ2aWNlKSB7fVxuXG4gIGFzeW5jIG5nT25Jbml0KCkge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCB7IGRhdGEgfSA9IGF3YWl0IHRoaXMudXNlci5nZW5lcmF0ZVRvdHBTZWNyZXQoKTtcbiAgICAgIHRoaXMudG90cFNlY3JldCA9IGRhdGE7XG4gICAgfSBjYXRjaCAoZXgpIHtcbiAgICAgIHRoaXMuYWxlcnQuYWRkU2VydmVyRmFpbHVyZShleCk7XG4gICAgfVxuICB9XG59XG4iXX0=