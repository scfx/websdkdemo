import { __awaiter } from "tslib";
import { Component } from '@angular/core';
import { gettext } from '@c8y/ngx-components';
import { WidgetService } from '../widget.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../widget.service';
import * as ɵngcc2 from '@c8y/ngx-components';

const _c0 = function () { return {}; };
const _c1 = function () { return { isDisabled: false, canDelete: false, translateWidgetTitle: true, allowFullscreen: false, title: false }; };
export class DeviceManagementHomeDashboardComponent {
    constructor(widgetService) {
        this.widgetService = widgetService;
        this.widgets = [];
        this.DEFAULT_HOME_WIDGETS = [
            {
                name: 'Asset Alarms',
                title: gettext('Active, critical alarms'),
                _x: 0,
                _y: 0,
                _height: 4,
                _width: 6
            },
            {
                name: 'Map',
                title: gettext('Map'),
                _x: 6,
                _y: 0,
                _height: 8,
                _width: 6
            }
        ];
    }
    ngOnInit() {
        this.DEFAULT_HOME_WIDGETS.map((widget) => __awaiter(this, void 0, void 0, function* () {
            yield this.widgetService
                .mapLegacy(widget)
                .then(transformedWidget => this.widgets.push(transformedWidget));
        }));
    }
}
DeviceManagementHomeDashboardComponent.ɵfac = function DeviceManagementHomeDashboardComponent_Factory(t) { return new (t || DeviceManagementHomeDashboardComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.WidgetService)); };
DeviceManagementHomeDashboardComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: DeviceManagementHomeDashboardComponent, selectors: [["c8y-device-management-home-dashboard"]], decls: 4, vars: 8, consts: [[3, "contextDashboard", "widgets", "settings"]], template: function DeviceManagementHomeDashboardComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "c8y-title");
        ɵngcc0.ɵɵtext(1);
        ɵngcc0.ɵɵpipe(2, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(3, "c8y-widgets-dashboard", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 4, "Home"), "\n");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("contextDashboard", ɵngcc0.ɵɵpureFunction0(6, _c0))("widgets", ctx.widgets)("settings", ɵngcc0.ɵɵpureFunction0(7, _c1));
    } }, directives: [ɵngcc2.TitleComponent, ɵngcc2.WidgetsDashboardComponent], pipes: [ɵngcc2.C8yTranslatePipe], encapsulation: 2 });
DeviceManagementHomeDashboardComponent.ctorParameters = () => [
    { type: WidgetService }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DeviceManagementHomeDashboardComponent, [{
        type: Component,
        args: [{
                selector: 'c8y-device-management-home-dashboard',
                template: "<c8y-title>\n  {{ 'Home' | translate }}\n</c8y-title>\n<c8y-widgets-dashboard\n  [contextDashboard]=\"{}\"\n  [widgets]=\"widgets\"\n  [settings]=\"{\n    isDisabled: false,\n    canDelete: false,\n    translateWidgetTitle: true,\n    allowFullscreen: false,\n    title: false\n  }\"\n>\n</c8y-widgets-dashboard>\n"
            }]
    }], function () { return [{ type: ɵngcc1.WidgetService }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGV2aWNlTWFuYWdlbWVudC1ob21lLWRhc2hib2FyZC5jb21wb25lbnQuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2NvbnRleHQtZGFzaGJvYXJkL2RldmljZU1hbmFnZW1lbnQtaG9tZS1kYXNoYm9hcmQvZGV2aWNlTWFuYWdlbWVudC1ob21lLWRhc2hib2FyZC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsTUFBTSxlQUFlLENBQUM7QUFDbEQsT0FBTyxFQUFFLE9BQU8sRUFBVSxNQUFNLHFCQUFxQixDQUFDO0FBQ3RELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQzs7Ozs7OztBQU1sRCxNQUFNLE9BQU8sc0NBQXNDO0FBQUcsSUFxQnBELFlBQW9CLGFBQTRCO0FBQUksUUFBaEMsa0JBQWEsR0FBYixhQUFhLENBQWU7QUFBQyxRQXBCakQsWUFBTyxHQUFHLEVBQUUsQ0FBQztBQUNmLFFBQUUseUJBQW9CLEdBQUc7QUFDekIsWUFBSTtBQUNKLGdCQUFNLElBQUksRUFBRSxjQUFjO0FBQzFCLGdCQUFNLEtBQUssRUFBRSxPQUFPLENBQUMseUJBQXlCLENBQUM7QUFDL0MsZ0JBQU0sRUFBRSxFQUFFLENBQUM7QUFDWCxnQkFBTSxFQUFFLEVBQUUsQ0FBQztBQUNYLGdCQUFNLE9BQU8sRUFBRSxDQUFDO0FBQ2hCLGdCQUFNLE1BQU0sRUFBRSxDQUFDO0FBQ2YsYUFBSztBQUNMLFlBQUk7QUFDSixnQkFBTSxJQUFJLEVBQUUsS0FBSztBQUNqQixnQkFBTSxLQUFLLEVBQUUsT0FBTyxDQUFDLEtBQUssQ0FBQztBQUMzQixnQkFBTSxFQUFFLEVBQUUsQ0FBQztBQUNYLGdCQUFNLEVBQUUsRUFBRSxDQUFDO0FBQ1gsZ0JBQU0sT0FBTyxFQUFFLENBQUM7QUFDaEIsZ0JBQU0sTUFBTSxFQUFFLENBQUM7QUFDZixhQUFLO0FBQ0wsU0FBZSxDQUFDO0FBQ2hCLElBQ3FELENBQUM7QUFDdEQsSUFDRSxRQUFRO0FBQ1YsUUFBSSxJQUFJLENBQUMsb0JBQW9CLENBQUMsR0FBRyxDQUFDLENBQU0sTUFBTSxFQUFDLEVBQUU7QUFFbkMsWUFEUixNQUFNLElBQUksQ0FBQyxhQUFhO0FBQzlCLGlCQUFTLFNBQVMsQ0FBQyxNQUFNLENBQUM7QUFDMUIsaUJBQVMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDLENBQUM7QUFDekUsUUFBSSxDQUFDLENBQUEsQ0FBQyxDQUFDO0FBQ1AsSUFBRSxDQUFDO0FBQ0g7a0VBbENDLFNBQVMsU0FBQyxrQkFDVCxRQUFRLEVBQUUsc0NBQXNDLGtCQUNoRDtzUkFBK0QsY0FDaEU7Ozs7Ozs7Ozs7O3NJQUNJO0FBQUM7QUFBZ0UsWUFON0QsYUFBYTtBQUFHOzs7Ozs7OzhFQUFFO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgZ2V0dGV4dCwgV2lkZ2V0IH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cyc7XG5pbXBvcnQgeyBXaWRnZXRTZXJ2aWNlIH0gZnJvbSAnLi4vd2lkZ2V0LnNlcnZpY2UnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjOHktZGV2aWNlLW1hbmFnZW1lbnQtaG9tZS1kYXNoYm9hcmQnLFxuICB0ZW1wbGF0ZVVybDogJy4vZGV2aWNlTWFuYWdlbWVudC1ob21lLWRhc2hib2FyZC5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgRGV2aWNlTWFuYWdlbWVudEhvbWVEYXNoYm9hcmRDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICB3aWRnZXRzID0gW107XG4gIERFRkFVTFRfSE9NRV9XSURHRVRTID0gW1xuICAgIHtcbiAgICAgIG5hbWU6ICdBc3NldCBBbGFybXMnLFxuICAgICAgdGl0bGU6IGdldHRleHQoJ0FjdGl2ZSwgY3JpdGljYWwgYWxhcm1zJyksXG4gICAgICBfeDogMCxcbiAgICAgIF95OiAwLFxuICAgICAgX2hlaWdodDogNCxcbiAgICAgIF93aWR0aDogNlxuICAgIH0sXG4gICAge1xuICAgICAgbmFtZTogJ01hcCcsXG4gICAgICB0aXRsZTogZ2V0dGV4dCgnTWFwJyksXG4gICAgICBfeDogNixcbiAgICAgIF95OiAwLFxuICAgICAgX2hlaWdodDogOCxcbiAgICAgIF93aWR0aDogNlxuICAgIH1cbiAgXSBhcyBXaWRnZXRbXTtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIHdpZGdldFNlcnZpY2U6IFdpZGdldFNlcnZpY2UpIHt9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5ERUZBVUxUX0hPTUVfV0lER0VUUy5tYXAoYXN5bmMgd2lkZ2V0ID0+IHtcbiAgICAgIGF3YWl0IHRoaXMud2lkZ2V0U2VydmljZVxuICAgICAgICAubWFwTGVnYWN5KHdpZGdldClcbiAgICAgICAgLnRoZW4odHJhbnNmb3JtZWRXaWRnZXQgPT4gdGhpcy53aWRnZXRzLnB1c2godHJhbnNmb3JtZWRXaWRnZXQpKTtcbiAgICB9KTtcbiAgfVxufVxuIl19