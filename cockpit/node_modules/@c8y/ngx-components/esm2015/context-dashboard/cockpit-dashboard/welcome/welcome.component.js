import { __awaiter } from "tslib";
import { Component, Input } from '@angular/core';
import { gettext, DocsService, NavigatorService } from '@c8y/ngx-components';
import { Router } from '@angular/router';
import { TenantService, ApplicationService } from '@c8y/client';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@c8y/client';
import * as ɵngcc2 from '@c8y/ngx-components';
import * as ɵngcc3 from '@angular/router';
import * as ɵngcc4 from '@angular/common';

const _c0 = function (a0) { return { link: a0 }; };
function WelcomeToCockpit_div_10_Template(rf, ctx) { if (rf & 1) {
    const _r3 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 7);
    ɵngcc0.ɵɵelementStart(1, "c8y-quick-link", 8);
    ɵngcc0.ɵɵlistener("click", function WelcomeToCockpit_div_10_Template_c8y_quick_link_click_1_listener() { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r3); const link_r1 = restoredCtx.$implicit; return link_r1.click ? link_r1.click() : false; });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const link_r1 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("icon", link_r1.icon)("label", link_r1.label)("actionName", "welcomeWidgetClicked")("actionData", ɵngcc0.ɵɵpureFunction1(4, _c0, link_r1.label));
} }
export class WelcomeToCockpit {
    constructor(tenantService, docs, router, navigator, applicationService) {
        this.tenantService = tenantService;
        this.docs = docs;
        this.router = router;
        this.navigator = navigator;
        this.applicationService = applicationService;
        this.quickLinks = [];
        this.CONFIGURATION_NODE = 'Configuration';
        this.TRIAL = 'TRIAL';
    }
    ngOnInit() {
        return __awaiter(this, void 0, void 0, function* () {
            this.tenantType = yield this.tenantService.currentTenantType();
            this.setMessage();
            this.navSubscription = this.navigator.items$.subscribe(nodes => {
                this.navNodes = nodes;
                this.configurationNode = nodes.find((node) => node.label === this.CONFIGURATION_NODE);
            });
            this.docsSubscription = this.docs.items$.subscribe(links => {
                this.links = links;
            });
            // <---TRIAL & REGULAR TENANT --->
            this.createConnectSmartphoneQuickLink();
            yield this.createQuicklinkRegisterDevice();
            // <--- TRIAL TENANT --->
            if (this.tenantType === this.TRIAL) {
                this.createQuicklinkUserGuide();
                return;
            }
            // <--- REGULAR TENANT --->
            this.createQuicklinkAddGroup();
            this.createQuickLinkReports();
            this.createQuickLinkExports();
            this.createQuicklinkSmartRules();
        });
    }
    ngOnDestroy() {
        if (this.docsSubscription && !this.docsSubscription.closed) {
            this.docsSubscription.unsubscribe();
        }
        if (this.navSubscription && !this.navSubscription.closed) {
            this.navSubscription.unsubscribe();
        }
    }
    setMessage() {
        if (this.tenantType === this.TRIAL) {
            this.welcomeMessage = gettext(`
        The Cockpit application allows you to build IoT applications in minutes.
        To get started, connect any device to the platform.
        If you do not have an IoT device to hand, you can start by connecting your smartphone.
        Click below to be guided through the process.
      `);
        }
        else {
            this.welcomeMessage = gettext(`
        The Cockpit application provides you with options to manage
        and monitor Internet of Things assets and data from business perspective.
      `);
        }
    }
    createQuicklinkAddGroup() {
        // comes from angularJS factory c8yQuickLinks
        const addGroup = this.links.find(link => link.label === 'Add group');
        if (addGroup) {
            this.quickLinks.push(addGroup);
        }
    }
    createConnectSmartphoneQuickLink() {
        // Provider in SensorPhoneModule defines the
        // 'Connect smartphone' quicklink.
        const connectSmartphone = this.links.find(link => link.label === 'Connect smartphone');
        if (connectSmartphone) {
            this.quickLinks.push(connectSmartphone);
        }
    }
    createQuickLinkReports() {
        const label = gettext('Reports');
        const reports = {
            icon: 'th',
            label,
            url: '/reports'
        };
        const reportsNode = this.findNavigatorNode(label, this.navNodes);
        if (reportsNode) {
            reports.click = () => {
                reportsNode.open = true;
                this.router.navigateByUrl(reports.url);
            };
            this.quickLinks.push(reports);
        }
    }
    createQuickLinkExports() {
        const label = gettext('Exports');
        const exports = {
            icon: 'c8y-reports',
            label,
            url: '/export'
        };
        if (this.isConfigChildNodeShown(label)) {
            exports.click = () => {
                this.configurationNode.open = true;
                this.router.navigateByUrl(exports.url);
            };
            this.quickLinks.push(exports);
        }
    }
    createQuicklinkSmartRules() {
        const label = gettext('Smart rules');
        const smartRules = {
            icon: 'c8y-smart-rules',
            label,
            url: '/rules'
        };
        if (this.isConfigChildNodeShown('Global smart rules')) {
            smartRules.click = () => {
                this.configurationNode.open = true;
                this.router.navigateByUrl(smartRules.url);
            };
            this.quickLinks.push(smartRules);
        }
    }
    createQuicklinkRegisterDevice() {
        return __awaiter(this, void 0, void 0, function* () {
            const { data } = yield this.applicationService.listByUser();
            if (data) {
                const deviceManagement = data.find(app => app.contextPath === 'devicemanagement');
                if (deviceManagement) {
                    const deviceMgmtUrl = this.applicationService.getHref(deviceManagement);
                    const registerDevice = {
                        icon: 'c8y-device-connect',
                        label: gettext('Register device'),
                        click: () => window.open(`${deviceMgmtUrl}/#/deviceregistration`, '_self')
                    };
                    this.quickLinks.push(registerDevice);
                }
            }
        });
    }
    createQuicklinkUserGuide() {
        const userGuide = {
            icon: 'c8y-user',
            label: gettext('User guide'),
            url: '/users-guide/getting-started',
            click: () => {
                const userGuideURL = this.docs.getUserGuideLink(userGuide.url);
                window.open(userGuideURL);
            }
        };
        this.quickLinks.push(userGuide);
    }
    isConfigChildNodeShown(nodeName) {
        if (this.configurationNode && this.configurationNode.show) {
            const navNode = this.findNavigatorNode(nodeName, this.configurationNode.children);
            return !!navNode && navNode.show;
        }
        return false;
    }
    findNavigatorNode(nodeName, navNodes) {
        if (navNodes && navNodes.length > 0) {
            return navNodes.find((node) => node.label === nodeName);
        }
        return undefined;
    }
}
WelcomeToCockpit.ɵfac = function WelcomeToCockpit_Factory(t) { return new (t || WelcomeToCockpit)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.TenantService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DocsService), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Router), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NavigatorService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ApplicationService)); };
WelcomeToCockpit.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: WelcomeToCockpit, selectors: [["c8y-welcome-to-cockpit"]], inputs: { config: "config" }, decls: 11, vars: 7, consts: [[1, "welcome-widget", "welcome-cockpit"], [1, "flex-row"], [1, "col-xs-12", "col-md-5", "flex-item-v-stretch", "p-24"], [1, "text-light"], [1, "text-16", "text-light", "p-t-16", "p-b-24"], [1, "card-group", "interact-grid", "tight-grid"], ["class", "col-sm-4 col-xs-6", 4, "ngFor", "ngForOf"], [1, "col-sm-4", "col-xs-6"], ["c8yProductExperience", "", 1, "card", 3, "icon", "label", "actionName", "actionData", "click"]], template: function WelcomeToCockpit_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵelementStart(2, "div", 2);
        ɵngcc0.ɵɵelementStart(3, "h2", 3);
        ɵngcc0.ɵɵtext(4);
        ɵngcc0.ɵɵpipe(5, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(6, "p", 4);
        ɵngcc0.ɵɵtext(7);
        ɵngcc0.ɵɵpipe(8, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(9, "div", 5);
        ɵngcc0.ɵɵtemplate(10, WelcomeToCockpit_div_10_Template, 2, 6, "div", 6);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(5, 3, "Welcome to Cockpit"));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(8, 5, ctx.welcomeMessage));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.quickLinks);
    } }, directives: [ɵngcc4.NgForOf, ɵngcc2.QuickLinkComponent, ɵngcc2.ProductExperienceDirective], pipes: [ɵngcc2.C8yTranslatePipe], encapsulation: 2 });
WelcomeToCockpit.ctorParameters = () => [
    { type: TenantService },
    { type: DocsService },
    { type: Router },
    { type: NavigatorService },
    { type: ApplicationService }
];
WelcomeToCockpit.propDecorators = {
    config: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(WelcomeToCockpit, [{
        type: Component,
        args: [{
                selector: 'c8y-welcome-to-cockpit',
                template: "<div class=\"welcome-widget welcome-cockpit\">\n  <div class=\"flex-row\">\n    <div class=\"col-xs-12 col-md-5 flex-item-v-stretch p-24\">\n      <h2 class=\"text-light\">{{ 'Welcome to Cockpit' | translate }}</h2>\n      <p class=\"text-16 text-light p-t-16 p-b-24\">{{ welcomeMessage | translate }}</p>\n      <div class=\"card-group interact-grid tight-grid\">\n        <div *ngFor=\"let link of quickLinks\" class=\"col-sm-4 col-xs-6\">\n          <c8y-quick-link\n            (click)=\"link.click ? link.click() : false\"\n            [icon]=\"link.icon\"\n            [label]=\"link.label\"\n            class=\"card\"\n            c8yProductExperience\n            [actionName]=\"'welcomeWidgetClicked'\"\n            [actionData]=\"{ link: link.label }\"\n          >\n          </c8y-quick-link>\n        </div>\n      </div>\n    </div>\n    <!-- <div class=\"col-sm-6 welcome-illustration flex-item-v-stretch\"></div> -->\n  </div>\n</div>\n"
            }]
    }], function () { return [{ type: ɵngcc1.TenantService }, { type: ɵngcc2.DocsService }, { type: ɵngcc3.Router }, { type: ɵngcc2.NavigatorService }, { type: ɵngcc1.ApplicationService }]; }, { config: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2VsY29tZS5jb21wb25lbnQuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL2NvbnRleHQtZGFzaGJvYXJkL2NvY2twaXQtZGFzaGJvYXJkL3dlbGNvbWUvd2VsY29tZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFxQixNQUFNLGVBQWUsQ0FBQztBQUNwRSxPQUFPLEVBQ0wsT0FBTyxFQUNQLFdBQVcsRUFFWCxnQkFBZ0IsRUFFakIsTUFBTSxxQkFBcUIsQ0FBQztBQUM3QixPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFFekMsT0FBTyxFQUFFLGFBQWEsRUFBRSxrQkFBa0IsRUFBZ0IsTUFBTSxhQUFhLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBTTlFLE1BQU0sT0FBTyxnQkFBZ0I7QUFBRyxJQWM5QixZQUNVLGFBQTRCLEVBQzVCLElBQWlCLEVBQ2pCLE1BQWMsRUFDZCxTQUEyQixFQUMzQixrQkFBc0M7QUFDL0MsUUFMUyxrQkFBYSxHQUFiLGFBQWEsQ0FBZTtBQUFDLFFBQzdCLFNBQUksR0FBSixJQUFJLENBQWE7QUFBQyxRQUNsQixXQUFNLEdBQU4sTUFBTSxDQUFRO0FBQUMsUUFDZixjQUFTLEdBQVQsU0FBUyxDQUFrQjtBQUFDLFFBQzVCLHVCQUFrQixHQUFsQixrQkFBa0IsQ0FBb0I7QUFDbEQsUUFqQkUsZUFBVSxHQUFHLEVBQUUsQ0FBQztBQUNsQixRQUNtQix1QkFBa0IsR0FBVyxlQUFlLENBQUM7QUFDaEUsUUFBbUIsVUFBSyxHQUFXLE9BQU8sQ0FBQztBQUMzQyxJQWFLLENBQUM7QUFDTixJQUNRLFFBQVE7QUFDaEI7QUFBOEQsWUFBMUQsSUFBSSxDQUFDLFVBQVUsR0FBRyxNQUFNLElBQUksQ0FBQyxhQUFhLENBQUMsaUJBQWlCLEVBQUUsQ0FBQztBQUNuRSxZQUFJLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQztBQUN0QixZ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QUksQ0FBQyxTQUFTLENBQUMsQ0FBQztBQUNwQyxJQUFFLENBQUM7QUFDSCxJQUNVLHNCQUFzQixDQUFDLFFBQVE7QUFDekMsUUFBSSxJQUFJLElBQUksQ0FBQyxpQkFBaUIsSUFBSSxJQUFJLENBQUMsaUJBQWlCLENBQUMsSUFBSSxFQUFFO0FBQy9ELFlBQU0sTUFBTSxPQUFPLEdBQUcsSUFBSSxDQUFDLGlCQUFpQixDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsaUJBQWlCLENBQUMsUUFBUSxDQUFDLENBQUM7QUFDeEYsWUFBTSxPQUFPLENBQUMsQ0FBQyxPQUFPLElBQUksT0FBTyxDQUFDLElBQUksQ0FBQztBQUN2QyxTQUFLO0FBQ0wsUUFBSSxPQUFPLEtBQUssQ0FBQztBQUNqQixJQUFFLENBQUM7QUFDSCxJQUNVLGlCQUFpQixDQUFDLFFBQWdCLEVBQUUsUUFBeUI7QUFDdkUsUUFBSSxJQUFJLFFBQVEsSUFBSSxRQUFRLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRTtBQUN6QyxZQUFNLE9BQU8sUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDLElBQVMsRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLEtBQUssS0FBSyxRQUFRLENBQVEsQ0FBQztBQUMxRSxTQUFLO0FBQ0wsUUFBSSxPQUFPLFNBQVMsQ0FBQztBQUNyQixJQUFFLENBQUM7QUFDSDs0Q0FoTUMsU0FBUyxTQUFDLGtCQUNULFFBQVEsRUFBRSx3QkFBd0Isa0JBQ2xDOzs7K0JBQXVDO0NBQ3hDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzJKQUNJO0FBQUM7QUFBMEMsWUFOdkMsYUFBYTtBQUFJLFlBUHhCLFdBQVc7QUFDWCxZQUlPLE1BQU07QUFBSSxZQUhqQixnQkFBZ0I7QUFDaEIsWUFJc0Isa0JBQWtCO0FBQUc7QUFBRztBQUU1QyxxQkFLRCxLQUFLO0FBQUk7Ozs7Ozs7OztvQkFBRTtBQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT25Jbml0LCBPbkRlc3Ryb3kgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7XG4gIGdldHRleHQsXG4gIERvY3NTZXJ2aWNlLFxuICBEb2NMaW5rLFxuICBOYXZpZ2F0b3JTZXJ2aWNlLFxuICBOYXZpZ2F0b3JOb2RlXG59IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMnO1xuaW1wb3J0IHsgUm91dGVyIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcbmltcG9ydCB7IFN1YnNjcmlwdGlvbiB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgVGVuYW50U2VydmljZSwgQXBwbGljYXRpb25TZXJ2aWNlLCBJQXBwbGljYXRpb24gfSBmcm9tICdAYzh5L2NsaWVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2M4eS13ZWxjb21lLXRvLWNvY2twaXQnLFxuICB0ZW1wbGF0ZVVybDogJy4vd2VsY29tZS5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgV2VsY29tZVRvQ29ja3BpdCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcbiAgQElucHV0KCkgY29uZmlnO1xuICB3ZWxjb21lTWVzc2FnZTtcbiAgcXVpY2tMaW5rcyA9IFtdO1xuXG4gIHByaXZhdGUgcmVhZG9ubHkgQ09ORklHVVJBVElPTl9OT0RFOiBzdHJpbmcgPSAnQ29uZmlndXJhdGlvbic7XG4gIHByaXZhdGUgcmVhZG9ubHkgVFJJQUw6IHN0cmluZyA9ICdUUklBTCc7XG4gIHByaXZhdGUgdGVuYW50VHlwZTogc3RyaW5nO1xuICBwcml2YXRlIG5hdk5vZGVzOiBOYXZpZ2F0b3JOb2RlW107XG4gIHByaXZhdGUgY29uZmlndXJhdGlvbk5vZGU6IGFueTtcbiAgcHJpdmF0ZSBsaW5rczogRG9jTGlua1tdO1xuICBwcml2YXRlIGRvY3NTdWJzY3JpcHRpb246IFN1YnNjcmlwdGlvbjtcbiAgcHJpdmF0ZSBuYXZTdWJzY3JpcHRpb246IFN1YnNjcmlwdGlvbjtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIHRlbmFudFNlcnZpY2U6IFRlbmFudFNlcnZpY2UsXG4gICAgcHJpdmF0ZSBkb2NzOiBEb2NzU2VydmljZSxcbiAgICBwcml2YXRlIHJvdXRlcjogUm91dGVyLFxuICAgIHByaXZhdGUgbmF2aWdhdG9yOiBOYXZpZ2F0b3JTZXJ2aWNlLFxuICAgIHByaXZhdGUgYXBwbGljYXRpb25TZXJ2aWNlOiBBcHBsaWNhdGlvblNlcnZpY2VcbiAgKSB7fVxuXG4gIGFzeW5jIG5nT25Jbml0KCkge1xuICAgIHRoaXMudGVuYW50VHlwZSA9IGF3YWl0IHRoaXMudGVuYW50U2VydmljZS5jdXJyZW50VGVuYW50VHlwZSgpO1xuICAgIHRoaXMuc2V0TWVzc2FnZSgpO1xuICAgIHRoaXMubmF2U3Vic2NyaXB0aW9uID0gdGhpcy5uYXZpZ2F0b3IuaXRlbXMkLnN1YnNjcmliZShub2RlcyA9PiB7XG4gICAgICB0aGlzLm5hdk5vZGVzID0gbm9kZXM7XG4gICAgICB0aGlzLmNvbmZpZ3VyYXRpb25Ob2RlID0gbm9kZXMuZmluZCgobm9kZTogYW55KSA9PiBub2RlLmxhYmVsID09PSB0aGlzLkNPTkZJR1VSQVRJT05fTk9ERSk7XG4gICAgfSk7XG4gICAgdGhpcy5kb2NzU3Vic2NyaXB0aW9uID0gdGhpcy5kb2NzLml0ZW1zJC5zdWJzY3JpYmUobGlua3MgPT4ge1xuICAgICAgdGhpcy5saW5rcyA9IGxpbmtzO1xuICAgIH0pO1xuXG4gICAgLy8gPC0tLVRSSUFMICYgUkVHVUxBUiBURU5BTlQgLS0tPlxuICAgIHRoaXMuY3JlYXRlQ29ubmVjdFNtYXJ0cGhvbmVRdWlja0xpbmsoKTtcbiAgICBhd2FpdCB0aGlzLmNyZWF0ZVF1aWNrbGlua1JlZ2lzdGVyRGV2aWNlKCk7XG5cbiAgICAvLyA8LS0tIFRSSUFMIFRFTkFOVCAtLS0+XG4gICAgaWYgKHRoaXMudGVuYW50VHlwZSA9PT0gdGhpcy5UUklBTCkge1xuICAgICAgdGhpcy5jcmVhdGVRdWlja2xpbmtVc2VyR3VpZGUoKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICAvLyA8LS0tIFJFR1VMQVIgVEVOQU5UIC0tLT5cbiAgICB0aGlzLmNyZWF0ZVF1aWNrbGlua0FkZEdyb3VwKCk7XG4gICAgdGhpcy5jcmVhdGVRdWlja0xpbmtSZXBvcnRzKCk7XG4gICAgdGhpcy5jcmVhdGVRdWlja0xpbmtFeHBvcnRzKCk7XG4gICAgdGhpcy5jcmVhdGVRdWlja2xpbmtTbWFydFJ1bGVzKCk7XG4gIH1cblxuICBuZ09uRGVzdHJveSgpIHtcbiAgICBpZiAodGhpcy5kb2NzU3Vic2NyaXB0aW9uICYmICF0aGlzLmRvY3NTdWJzY3JpcHRpb24uY2xvc2VkKSB7XG4gICAgICB0aGlzLmRvY3NTdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5uYXZTdWJzY3JpcHRpb24gJiYgIXRoaXMubmF2U3Vic2NyaXB0aW9uLmNsb3NlZCkge1xuICAgICAgdGhpcy5uYXZTdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKTtcbiAgICB9XG4gIH1cblxuICBwcml2YXRlIHNldE1lc3NhZ2UoKSB7XG4gICAgaWYgKHRoaXMudGVuYW50VHlwZSA9PT0gdGhpcy5UUklBTCkge1xuICAgICAgdGhpcy53ZWxjb21lTWVzc2FnZSA9IGdldHRleHQoYFxuICAgICAgICBUaGUgQ29ja3BpdCBhcHBsaWNhdGlvbiBhbGxvd3MgeW91IHRvIGJ1aWxkIElvVCBhcHBsaWNhdGlvbnMgaW4gbWludXRlcy5cbiAgICAgICAgVG8gZ2V0IHN0YXJ0ZWQsIGNvbm5lY3QgYW55IGRldmljZSB0byB0aGUgcGxhdGZvcm0uXG4gICAgICAgIElmIHlvdSBkbyBub3QgaGF2ZSBhbiBJb1QgZGV2aWNlIHRvIGhhbmQsIHlvdSBjYW4gc3RhcnQgYnkgY29ubmVjdGluZyB5b3VyIHNtYXJ0cGhvbmUuXG4gICAgICAgIENsaWNrIGJlbG93IHRvIGJlIGd1aWRlZCB0aHJvdWdoIHRoZSBwcm9jZXNzLlxuICAgICAgYCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMud2VsY29tZU1lc3NhZ2UgPSBnZXR0ZXh0KGBcbiAgICAgICAgVGhlIENvY2twaXQgYXBwbGljYXRpb24gcHJvdmlkZXMgeW91IHdpdGggb3B0aW9ucyB0byBtYW5hZ2VcbiAgICAgICAgYW5kIG1vbml0b3IgSW50ZXJuZXQgb2YgVGhpbmdzIGFzc2V0cyBhbmQgZGF0YSBmcm9tIGJ1c2luZXNzIHBlcnNwZWN0aXZlLlxuICAgICAgYCk7XG4gICAgfVxuICB9XG5cbiAgcHJpdmF0ZSBjcmVhdGVRdWlja2xpbmtBZGRHcm91cCgpIHtcbiAgICAvLyBjb21lcyBmcm9tIGFuZ3VsYXJKUyBmYWN0b3J5IGM4eVF1aWNrTGlua3NcbiAgICBjb25zdCBhZGRHcm91cDogUGFydGlhbDxEb2NMaW5rPiA9IHRoaXMubGlua3MuZmluZChsaW5rID0+IGxpbmsubGFiZWwgPT09ICdBZGQgZ3JvdXAnKTtcbiAgICBpZiAoYWRkR3JvdXApIHtcbiAgICAgIHRoaXMucXVpY2tMaW5rcy5wdXNoKGFkZEdyb3VwKTtcbiAgICB9XG4gIH1cblxuICBwcml2YXRlIGNyZWF0ZUNvbm5lY3RTbWFydHBob25lUXVpY2tMaW5rKCkge1xuICAgIC8vIFByb3ZpZGVyIGluIFNlbnNvclBob25lTW9kdWxlIGRlZmluZXMgdGhlXG4gICAgLy8gJ0Nvbm5lY3Qgc21hcnRwaG9uZScgcXVpY2tsaW5rLlxuICAgIGNvbnN0IGNvbm5lY3RTbWFydHBob25lID0gdGhpcy5saW5rcy5maW5kKGxpbmsgPT4gbGluay5sYWJlbCA9PT0gJ0Nvbm5lY3Qgc21hcnRwaG9uZScpO1xuICAgIGlmIChjb25uZWN0U21hcnRwaG9uZSkge1xuICAgICAgdGhpcy5xdWlja0xpbmtzLnB1c2goY29ubmVjdFNtYXJ0cGhvbmUpO1xuICAgIH1cbiAgfVxuXG4gIHByaXZhdGUgY3JlYXRlUXVpY2tMaW5rUmVwb3J0cygpIHtcbiAgICBjb25zdCBsYWJlbCA9IGdldHRleHQoJ1JlcG9ydHMnKTtcbiAgICBjb25zdCByZXBvcnRzOiBQYXJ0aWFsPERvY0xpbms+ID0ge1xuICAgICAgaWNvbjogJ3RoJyxcbiAgICAgIGxhYmVsLFxuICAgICAgdXJsOiAnL3JlcG9ydHMnXG4gICAgfTtcbiAgICBjb25zdCByZXBvcnRzTm9kZSA9IHRoaXMuZmluZE5hdmlnYXRvck5vZGUobGFiZWwsIHRoaXMubmF2Tm9kZXMpO1xuICAgIGlmIChyZXBvcnRzTm9kZSkge1xuICAgICAgcmVwb3J0cy5jbGljayA9ICgpID0+IHtcbiAgICAgICAgcmVwb3J0c05vZGUub3BlbiA9IHRydWU7XG4gICAgICAgIHRoaXMucm91dGVyLm5hdmlnYXRlQnlVcmwocmVwb3J0cy51cmwpO1xuICAgICAgfTtcbiAgICAgIHRoaXMucXVpY2tMaW5rcy5wdXNoKHJlcG9ydHMpO1xuICAgIH1cbiAgfVxuXG4gIHByaXZhdGUgY3JlYXRlUXVpY2tMaW5rRXhwb3J0cygpIHtcbiAgICBjb25zdCBsYWJlbCA9IGdldHRleHQoJ0V4cG9ydHMnKTtcbiAgICBjb25zdCBleHBvcnRzOiBQYXJ0aWFsPERvY0xpbms+ID0ge1xuICAgICAgaWNvbjogJ2M4eS1yZXBvcnRzJyxcbiAgICAgIGxhYmVsLFxuICAgICAgdXJsOiAnL2V4cG9ydCdcbiAgICB9O1xuXG4gICAgaWYgKHRoaXMuaXNDb25maWdDaGlsZE5vZGVTaG93bihsYWJlbCkpIHtcbiAgICAgIGV4cG9ydHMuY2xpY2sgPSAoKSA9PiB7XG4gICAgICAgIHRoaXMuY29uZmlndXJhdGlvbk5vZGUub3BlbiA9IHRydWU7XG4gICAgICAgIHRoaXMucm91dGVyLm5hdmlnYXRlQnlVcmwoZXhwb3J0cy51cmwpO1xuICAgICAgfTtcbiAgICAgIHRoaXMucXVpY2tMaW5rcy5wdXNoKGV4cG9ydHMpO1xuICAgIH1cbiAgfVxuXG4gIHByaXZhdGUgY3JlYXRlUXVpY2tsaW5rU21hcnRSdWxlcygpIHtcbiAgICBjb25zdCBsYWJlbCA9IGdldHRleHQoJ1NtYXJ0IHJ1bGVzJyk7XG4gICAgY29uc3Qgc21hcnRSdWxlczogUGFydGlhbDxEb2NMaW5rPiA9IHtcbiAgICAgIGljb246ICdjOHktc21hcnQtcnVsZXMnLFxuICAgICAgbGFiZWwsXG4gICAgICB1cmw6ICcvcnVsZXMnXG4gICAgfTtcbiAgICBpZiAodGhpcy5pc0NvbmZpZ0NoaWxkTm9kZVNob3duKCdHbG9iYWwgc21hcnQgcnVsZXMnKSkge1xuICAgICAgc21hcnRSdWxlcy5jbGljayA9ICgpID0+IHtcbiAgICAgICAgdGhpcy5jb25maWd1cmF0aW9uTm9kZS5vcGVuID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5yb3V0ZXIubmF2aWdhdGVCeVVybChzbWFydFJ1bGVzLnVybCk7XG4gICAgICB9O1xuICAgICAgdGhpcy5xdWlja0xpbmtzLnB1c2goc21hcnRSdWxlcyk7XG4gICAgfVxuICB9XG5cbiAgcHJpdmF0ZSBhc3luYyBjcmVhdGVRdWlja2xpbmtSZWdpc3RlckRldmljZSgpIHtcbiAgICBjb25zdCB7IGRhdGEgfSA9IGF3YWl0IHRoaXMuYXBwbGljYXRpb25TZXJ2aWNlLmxpc3RCeVVzZXIoKTtcbiAgICBpZiAoZGF0YSkge1xuICAgICAgY29uc3QgZGV2aWNlTWFuYWdlbWVudDogSUFwcGxpY2F0aW9uID0gZGF0YS5maW5kKFxuICAgICAgICBhcHAgPT4gYXBwLmNvbnRleHRQYXRoID09PSAnZGV2aWNlbWFuYWdlbWVudCdcbiAgICAgICk7XG4gICAgICBpZiAoZGV2aWNlTWFuYWdlbWVudCkge1xuICAgICAgICBjb25zdCBkZXZpY2VNZ210VXJsID0gdGhpcy5hcHBsaWNhdGlvblNlcnZpY2UuZ2V0SHJlZihkZXZpY2VNYW5hZ2VtZW50KTtcbiAgICAgICAgY29uc3QgcmVnaXN0ZXJEZXZpY2U6IFBhcnRpYWw8RG9jTGluaz4gPSB7XG4gICAgICAgICAgaWNvbjogJ2M4eS1kZXZpY2UtY29ubmVjdCcsXG4gICAgICAgICAgbGFiZWw6IGdldHRleHQoJ1JlZ2lzdGVyIGRldmljZScpLFxuICAgICAgICAgIGNsaWNrOiAoKSA9PiB3aW5kb3cub3BlbihgJHtkZXZpY2VNZ210VXJsfS8jL2RldmljZXJlZ2lzdHJhdGlvbmAsICdfc2VsZicpXG4gICAgICAgIH07XG4gICAgICAgIHRoaXMucXVpY2tMaW5rcy5wdXNoKHJlZ2lzdGVyRGV2aWNlKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBwcml2YXRlIGNyZWF0ZVF1aWNrbGlua1VzZXJHdWlkZSgpIHtcbiAgICBjb25zdCB1c2VyR3VpZGU6IFBhcnRpYWw8RG9jTGluaz4gPSB7XG4gICAgICBpY29uOiAnYzh5LXVzZXInLFxuICAgICAgbGFiZWw6IGdldHRleHQoJ1VzZXIgZ3VpZGUnKSxcbiAgICAgIHVybDogJy91c2Vycy1ndWlkZS9nZXR0aW5nLXN0YXJ0ZWQnLFxuICAgICAgY2xpY2s6ICgpID0+IHtcbiAgICAgICAgY29uc3QgdXNlckd1aWRlVVJMID0gdGhpcy5kb2NzLmdldFVzZXJHdWlkZUxpbmsodXNlckd1aWRlLnVybCkgYXMgc3RyaW5nO1xuICAgICAgICB3aW5kb3cub3Blbih1c2VyR3VpZGVVUkwpO1xuICAgICAgfVxuICAgIH07XG4gICAgdGhpcy5xdWlja0xpbmtzLnB1c2godXNlckd1aWRlKTtcbiAgfVxuXG4gIHByaXZhdGUgaXNDb25maWdDaGlsZE5vZGVTaG93bihub2RlTmFtZSkge1xuICAgIGlmICh0aGlzLmNvbmZpZ3VyYXRpb25Ob2RlICYmIHRoaXMuY29uZmlndXJhdGlvbk5vZGUuc2hvdykge1xuICAgICAgY29uc3QgbmF2Tm9kZSA9IHRoaXMuZmluZE5hdmlnYXRvck5vZGUobm9kZU5hbWUsIHRoaXMuY29uZmlndXJhdGlvbk5vZGUuY2hpbGRyZW4pO1xuICAgICAgcmV0dXJuICEhbmF2Tm9kZSAmJiBuYXZOb2RlLnNob3c7XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHByaXZhdGUgZmluZE5hdmlnYXRvck5vZGUobm9kZU5hbWU6IHN0cmluZywgbmF2Tm9kZXM6IE5hdmlnYXRvck5vZGVbXSkge1xuICAgIGlmIChuYXZOb2RlcyAmJiBuYXZOb2Rlcy5sZW5ndGggPiAwKSB7XG4gICAgICByZXR1cm4gbmF2Tm9kZXMuZmluZCgobm9kZTogYW55KSA9PiBub2RlLmxhYmVsID09PSBub2RlTmFtZSkgYXMgYW55O1xuICAgIH1cbiAgICByZXR1cm4gdW5kZWZpbmVkO1xuICB9XG59XG4iXX0=