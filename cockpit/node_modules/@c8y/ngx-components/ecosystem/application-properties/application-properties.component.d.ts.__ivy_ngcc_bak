import { OnInit } from '@angular/core';
import { ActivatedRoute, Router } from '@angular/router';
import { ApplicationService, IApplication, IManagedObject, InventoryService } from '@c8y/client';
import { EcosystemService } from '../ecosystem.service';
import { FormBuilder, FormGroup } from '@angular/forms';
import { AlertService, PropertiesListItem } from '@c8y/ngx-components';
import { ApplicationState } from '../ecosystem.model';
export declare class ApplicationPropertiesComponent implements OnInit {
    private activatedRoute;
    private ecosystemService;
    private router;
    private formBuilder;
    private applicationService;
    private alertService;
    private inventoryService;
    formGroup: FormGroup;
    application: IApplication;
    binaryMo: IManagedObject;
    singleTenant: boolean;
    subscription: boolean;
    canOpenInBrowser: boolean;
    disableOpenInBrowser: boolean;
    canDelete: boolean;
    isOwner: boolean;
    isSubscribed: boolean;
    isPackage: boolean;
    isMicroservice: boolean;
    isFeature: boolean;
    isExternal: boolean;
    isUnpacked: boolean;
    iconMap: {
        HOSTED: string;
        EXTERNAL: string;
        MICROSERVICE: string;
    };
    appState: ApplicationState;
    package: IApplication;
    isLoading: boolean;
    isActivityLogSupported: boolean;
    isCustomMicroservice: boolean;
    breadcrumbConfig: {
        icon: string;
        label: string;
        path: string;
    };
    packageProperties: PropertiesListItem[];
    constructor(activatedRoute: ActivatedRoute, ecosystemService: EcosystemService, router: Router, formBuilder: FormBuilder, applicationService: ApplicationService, alertService: AlertService, inventoryService: InventoryService);
    ngOnInit(): Promise<void>;
    load(): Promise<void>;
    onApplication(app: IApplication): void;
    cancel(): void;
    openApp(app: any): void;
    getPackage(entityOrId: string | number | IApplication): Promise<import("@c8y/client").IResult<IApplication>>;
    delete(): Promise<void>;
    subscribe(): Promise<void>;
    unsubscribe(): Promise<void>;
    loadApplication(): Promise<void>;
    save(app: IApplication): Promise<void>;
    onNewArchive(): void;
    private resolveSourcePackage;
    private initForm;
    private isActivityLogSupportedByApp;
    private setBreadcrumbConifg;
    private loadBinaryMo;
}
