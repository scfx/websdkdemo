import { OnInit } from '@angular/core';
import { IApplication, IApplicationBinary } from '@c8y/client';
import { AlertService } from '@c8y/ngx-components';
import { BehaviorSubject } from 'rxjs';
import { EcosystemService } from '../ecosystem.service';
import * as ɵngcc0 from '@angular/core';
export declare class ActivityLogComponent implements OnInit {
    private ecosystemService;
    private alertService;
    application: IApplication;
    archives: IApplicationBinary[];
    toActivateVersionId: string;
    last: IApplicationBinary;
    isLoading: boolean;
    canReactivate: boolean;
    constructor(ecosystemService: EcosystemService, alertService: AlertService);
    get uploadProgress(): BehaviorSubject<number>;
    ngOnInit(): Promise<void>;
    isActive(archive: IApplicationBinary): boolean;
    toActivate(archive: IApplicationBinary): boolean;
    checkIfLast(archive: IApplicationBinary): boolean;
    showReactivate(): boolean;
    setActive(archive: any): Promise<void>;
    deleteArchive(archive: IApplicationBinary): Promise<void>;
    downloadArchive(archive: IApplicationBinary): Promise<void>;
    reactivateArchive(): Promise<void>;
    onRefresh(): Promise<void>;
    private refresh;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ActivityLogComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ActivityLogComponent, "c8y-activity-log", never, { "application": "application"; }, {}, never, never>;
}

//# sourceMappingURL=activity-log.component.d.ts.map