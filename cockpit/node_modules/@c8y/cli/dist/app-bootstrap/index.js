var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
import { removeProgress } from './progress-bar';
import { loadOptions, applyOptions, loginOptions } from './options';
import 'regenerator-runtime/runtime';
bootstrap();
function bootstrap() {
    return __awaiter(this, void 0, void 0, function* () {
        const options = applyOptions(Object.assign(Object.assign({}, (yield loadOptions())), yield loginOptions()));
        /* Load the app entry point async, this is defined by webpack.DefinePlugin */
        const mod = yield import(/* webpackChunkName: "app" */ __ENTRY_APP__);
        const bootstrapApp = mod.bootstrap || window.bootstrap || (() => null);
        Promise.resolve(bootstrapApp(options)).then(removeProgress);
    });
}
//# sourceMappingURL=index.js.map