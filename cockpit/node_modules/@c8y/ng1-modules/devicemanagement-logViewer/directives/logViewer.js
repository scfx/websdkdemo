"use strict";!function(){function e(a,r,g,c,d){return{restrict:"E",replace:!0,template:'<div>\n                  <div ng-show="loading" style="min-width: 100%; text-align: center;"><c8y-loading></c8y-loading></div>\n                  <pre ng-show="textFile && !loading" style="max-height: 300px; overflow:auto;">{{logFileData}}</pre>\n                  <div ng-show="!textFile && !loading" class="alert alert-warning" role= "alert">\n                    <span translate>\n                      No preview available for log files with MIME type other than <code>text/*</code>.\n                    </span><br>\n                    <button class="btn btn-default btn-sm m-t-16" ng-click="download(logOp)" type="button" translate> Download </button>\n                  </div></div>',link:function(o){o.download=a.download,o.$watch("selectedLog",function(t){if(t&&t.c8y_LogfileRequest&&t.c8y_LogfileRequest.file){o.logOp=t,o.loading=!0;var e,n=t.c8y_LogfileRequest.file;if(c.isEventBinary(n)){var l=c.getEventIdFromUrl(n);e=c.getContentType(l)}else{var i=g.getIdFromUrl(n);e=g.getContentType(i)}e.then(function(e){e.match(/^text.*$/)?a.getLogfile(t).then(function(e){o.textFile=!0,o.logFileData=e.data}).catch(function(){r.danger(d("The file is no longer available."))}).finally(function(){o.loading=!1}):(o.textFile=!1,o.loading=!1)})}},!0)}}}e.$inject=["logViewer","c8yAlert","c8yBinary","c8yEvents","gettext"],angular.module("c8y.logViewer").directive("c8yLogViewer",e)}();