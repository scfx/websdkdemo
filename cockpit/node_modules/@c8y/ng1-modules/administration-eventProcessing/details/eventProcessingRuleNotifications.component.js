"use strict";!function(){function n(t,n){var s=this,e={connected:{text:n("Connected"),cls:"label-success"},pending:{text:n("Pending"),cls:"label-warning"},notdeployed:{text:n("Not deployed"),cls:"label-danger"}},c=null,o=[];function i(n){s.status=n}function r(n){if(!(c=n).connected)var e=n.$on("connected",function(){i("connected"),e()});i(n.connected?"connected":"pending"),n.$on("message",u)}function u(n,e){e.id=parseInt(e.id,10),s.msgs.push(e)}function l(){c&&c.unsubscribe()}function a(n){return e[n]||{}}function d(n){return o.indexOf(n)}function f(n){return-1<d(n)}_.assign(s,{$onChanges:function(n){n.rule&&s.rule&&function(n){if(l(),"DEPLOYED"===n.status){t.configure("debug");var e="/".concat(n.name,"/*");t.subscribe(e).then(r)}else i("notdeployed")}(s.rule)},$onDestroy:l,getStatementName:function(n){var e=_.get(n,"channel");return _.last(e.split("/"))},statusText:function(n){return a(n).text},statusClass:function(n){return a(n).cls},clearAll:function(){s.msgs.length=0},toggle:function(n){f(n)?o.splice(d(n),1):o.push(n)},isOpen:f,isError:function(n){return n.data&&n.data.message&&-1!==n.data.message.indexOf("ReferenceError")}}),s.msgs=[]}n.$inject=["c8yNotifications","gettext"],angular.module("c8y.eventProcessing").component("c8yEventProcessingRuleNotifications",{bindings:{rule:"<"},templateUrl:":::PLUGIN_PATH:::/details/eventProcessingRuleNotifications.html",controller:n,controllerAs:"vm"})}();