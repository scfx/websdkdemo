"use strict";angular.module("c8y.assets").factory("c8yComparisons",["$q","c8yBase","gettext",function(e,a,E){var l=a.createEnum([{name:"EQUAL",value:"EQUAL",label:E("Equal")},{name:"NOT_EQUAL",value:"NOT_EQUAL",label:E("Not equal")},{name:"GREATER_THAN_OR_EQUAL",value:"GREATER_THAN_OR_EQUAL",label:E("Greater than or equal")},{name:"GREATER_THAN",value:"GREATER_THAN",label:E("Greater than")},{name:"LESS_THAN_OR_EQUAL",value:"LESS_THAN_OR_EQUAL",label:E("Less than or equal")},{name:"LESS_THAN",value:"LESS_THAN",label:E("Less than")}]),A={Equal:l.EQUAL.value,"Not equal":l.NOT_EQUAL.value,"Greater then or equal":l.LESS_THAN_OR_EQUAL.value,"Greater than":l.LESS_THAN.value,"Less than or equal":l.GREATER_THAN_OR_EQUAL.value,"Less than":l.GREATER_THAN.value};return{Comparisons:l,compare:function(e,a,E){var A,r=_.find(l.values(),{value:e})||l.EQUAL;switch(isNaN(Number(a))||(a=Number(a)),isNaN(Number(E))||(E=Number(E)),r){case l.EQUAL:A=a===E;break;case l.NOT_EQUAL:A=a!==E;break;case l.GREATER_THAN_OR_EQUAL:A=E<=a;break;case l.GREATER_THAN:A=E<a;break;case l.LESS_THAN_OR_EQUAL:A=a<=E;break;case l.LESS_THAN:A=a<E}return A},convertDeprecatedComparisonType:function(e){return A[e]||e}}}]);