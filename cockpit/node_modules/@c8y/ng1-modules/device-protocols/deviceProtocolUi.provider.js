"use strict";!function(){function e(p,e,t){n.$inject=["$q","$injector"],r.$inject=["gettextCatalog","c8yWizardModal","$injector","$location","c8yAlert","c8yModal","c8yBase","$q"];var o="deviceprotocols",f={parent:{name:p("Device types"),icon:"c8y-device-protocols"},name:p("Device protocols"),path:o,icon:"c8y-device-protocols",template:"<c8y-device-protocol-view></c8y-device-protocol-view>",showIf:n},g=[];return{$get:r,register:h,initUi:function(){t.when(o,f),e.addNavigation(f)}};function n(e,t){var o=_.map(g,_.partial(m,t,e));return e.all(o).then(_.some)}function m(e,t,o){var n=e.get(o.service),r=!!_.isUndefined(n.showIf)||e.invoke(n.showIf);return t.resolve(r)}function r(i,e,t,o,a,l,n,r){var c=_.partial(m,t,r);return{register:h,listProtocols:function(){return s().then(_.partialRight(_.map,u)).then(r.all).then(_.compact).then(n.combineLists)},edit:function(e){var t=d(e).detailPath(e.data);o.path(t)},remove:function(e){var t=d(e),o=p("Delete protocol"),n={protocolType:e.name,protocolName:v(e)},r=i.getString('You are about to delete device protocol {{protocolType}} "{{protocolName}}". Do you want to proceed?',n),c={status:"warning",title:o,body:r,size:"sm",labels:{ok:p("Delete"),cancel:p("Cancel")}};return l(c).then(function(){return t.remove(e.data)}).then(function(){return a.success(p("Device protocol removed."))})},addWithWizard:function(){return e.open({component:"c8yAddDeviceProtocolWizard",backdrop:"static",keyboard:!1}).result},VIEW_CONFIG:f,getProtocols:s,getService:d,getProtocolName:v,getProtocolRowInfoComponent:function(e){var t;if(void 0!==e){var o=d(e);t=o.listRowInfoComponent||"c8yDeviceProtocolRow".concat(_.capitalize(e.id))}return t},getActionsForProtocol:function(e){var t=d(e);if(t.getListActions)return t.getListActions();return[]}};function u(o){var e=d(o),t=n.createListMapper(function(e){return _.assign({},o,{data:e})});return e.list().then(t).catch(function(e){var t=i.getString('Could not get device protocols of type "{{name}}".',o);a.danger(t,n.getResErrorMessage(e))})}function s(){var e=_.map(g,function(t){return c(t).then(function(e){return e?_.clone(t):void 0})});return r.all(e).then(_.filter)}function v(e){return d(e).getName(e.data)}function d(e){return t.get(e.service)}}function h(e){g.push(e)}}e.$inject=["gettext","c8yNavigatorProvider","c8yViewsProvider"],angular.module("c8y.deviceProtocols").provider("c8yDeviceProtocolUi",e)}();