"use strict";function _toConsumableArray(e){return _arrayWithoutHoles(e)||_iterableToArray(e)||_unsupportedIterableToArray(e)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(e,o){if(e){if("string"==typeof e)return _arrayLikeToArray(e,o);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?_arrayLikeToArray(e,o):void 0}}function _iterableToArray(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}function _arrayWithoutHoles(e){if(Array.isArray(e))return _arrayLikeToArray(e)}function _arrayLikeToArray(e,o){(null==o||o>e.length)&&(o=e.length);for(var t=0,r=new Array(o);t<o;t++)r[t]=e[t];return r}!function(){function e(o,t,n){var r=this;function e(){a(!(r.protocols=void 0)),t.listProtocols().then(i).finally(_.partial(a,!1))}function i(e){r.protocols||(r.protocols=[]),o.paging=e.paging||{refresh:!0},r.protocols=[].concat(_toConsumableArray(r.protocols),_toConsumableArray(e)),c(r.protocols)}function a(e){r.mainView&&(r.mainView.isLoading=e)}function c(e){r.mainView&&(r.mainView.isEmpty=0===_.get(e,"length"))}function l(e){return void 0!==e.data.c8y_LpwanCodecDetails}_.assign(r,{$onInit:function(){e(),r.mainView&&(r.mainView.refresh=e)},edit:t.edit,remove:function(e){return t.remove(e).then(function(){return _.pull(r.protocols,e)}).then(function(){return c(r.protocols)})},CONFIG:t.VIEW_CONFIG,getTitle:t.getProtocolName,getProtocolActionsMemoized:_.memoize(t.getActionsForProtocol,_.property("id")),getRowInfoComponent:t.getProtocolRowInfoComponent,isReadOnly:l,getDescription:function(e){if(!l(e))return e.data.description;var o=e.data.c8y_LpwanCodecDetails.supportedDevice,t=o.deviceModel,r=o.deviceManufacturer;return n.getString("Device protocol that supports device model {{deviceModel}} manufactured by {{deviceManufacturer}}",{deviceModel:t,deviceManufacturer:r})}}),o.paging={},o.loadNext=function(){o.paging.loading=!0,o.paging.next().then(i).finally(function(){o.paging.loading=!1})}}e.$inject=["$scope","c8yDeviceProtocolUi","gettextCatalog"],angular.module("c8y.deviceProtocols").component("c8yDeviceProtocolList",{templateUrl:":::PLUGIN_PATH:::/deviceProtocolList.html",controllerAs:"vm",require:{mainView:"?^c8yDeviceProtocolView"},controller:e,bindings:{filter:"<",onList:"&"}})}();