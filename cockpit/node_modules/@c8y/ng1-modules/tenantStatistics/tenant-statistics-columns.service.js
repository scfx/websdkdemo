"use strict";!function(){function e(i,o,e){return{getTenantIdColumn:function(){return i.getColumn({name:"tenantId",header:e("ID"),cell:{template:"{{item.tenantId}}"},filteringByPattern:{itemProperty:"tenantId"},sortingByPath:{itemProperty:"tenantId"},getCsvValues:function(e){return[e.tenantId]}})},getTenantNameUrlColumn:function(){var t=function(e){return"https://".concat(e.tenantDomain)};return i.getColumn({name:"tenantNameUrl",header:e("Name"),cell:{template:'<a ng-href="{{getTenantUrl(item)}}">{{item.tenantCompany}}</a>',scopeExtensions:{getTenantUrl:t}},filteringByPattern:{itemProperty:"tenantCompany"},sortingByPath:{itemProperty:"tenantCompany"},getCsvHeaders:function(){return[e("Name"),e("URL")]},getCsvValues:function(e){return[e.tenantCompany,t(e)]}})},getCustomPropertyColumn:function(t){var e=t.key,n=["tenantCustomProperties",e],r={name:e,priority:_.startsWith(e,"limit.")?-1e3:0,header:t.title,cell:{template:"<div\n            ng-bind=\"getValue(item, '".concat(e,"') |\n              formatBySchema:getSchema(tenantCustomProperties, '").concat(e,"')\">\n          </div>"),scopeExtensions:{getValue:function(e,t){return _.get(e,["tenantCustomProperties",t])},getSchema:function(e,t){return _.get(e,[t,"schema"])}}},getCsvHeaders:function(){return[t.title]},getCsvValues:function(e){return[function(e,t){var n=_.get(t,"schema.default");return _.get(e,["tenantCustomProperties",t.key],n)}(e,t)]}};return _.merge(r,function(e){var t=o.getType(e).filteringKey,n={itemProperty:["tenantCustomProperties",e.key]},r={};return _.set(r,t,n),_.set(r,"sortingByPath",n),r}(t)),_.set(r.cell.scopeExtensions,n,t),i.getColumn(r)},getApiRequestsColumn:function(){return i.getColumn({name:"requestCount",header:e("API requests"),cell:{template:"{{item.requestCount}}"},filteringByMinMax:{itemProperty:"requestCount"},sortingByPath:{itemProperty:"requestCount"},getCsvValues:function(e){return[e.requestCount]}})},getDeviceApiRequestsColumn:function(){return i.getColumn({name:"deviceRequestCount",header:e("Device API requests"),cell:{template:"{{item.deviceRequestCount}}"},filteringByMinMax:{itemProperty:"deviceRequestCount"},sortingByPath:{itemProperty:"deviceRequestCount"},getCsvValues:function(e){return[e.deviceRequestCount]}})},getStorageQuotaColumn:function(){return i.getColumn({name:"storageQuota",header:e("Storage quota (MB)"),cell:{template:'<span ng-if="item.storageLimitPerDevice">{{item.storageQuota}}</span>'},filteringByMinMax:{itemProperty:"storageQuota"},sortingByPath:{itemProperty:"storageQuota"},getCsvValues:function(e){return[e.storageQuota||""]}})},getStorageSizeColumn:function(){return i.getColumn({name:"storageSize",header:e("Storage (MB)"),cell:{template:"{{item.storageSize}}"},filteringByMinMax:{itemProperty:"storageSize"},getCsvValues:function(e){return[e.storageSize]}})},getPeakStorageSizeColumn:function(){return i.getColumn({name:"peakStorageSize",header:e("Peak storage (MB)"),cell:{template:"{{item.peakStorageSize}}"},filteringByMinMax:{itemProperty:"peakStorageSize"},getCsvValues:function(e){return[e.peakStorageSize]}})},getRootDevicesColumn:function(){return i.getColumn({name:"deviceCount",header:{text:e("Root devices"),tooltip:{icon:"question-circle-o",text:e("Number of root devices, excluding child devices")}},cell:{template:"{{item.deviceCount}}"},filteringByMinMax:{itemProperty:"deviceCount"},sortingByPath:{itemProperty:"deviceCount"},getCsvValues:function(e){return[e.deviceCount]}})},getPeakRootDevicesColumn:function(){return i.getColumn({name:"peakDeviceCount",header:{text:e("Peak root devices"),tooltip:{icon:"question-circle-o",text:e("Peak number of root devices, excluding child devices")}},cell:{template:"{{item.peakDeviceCount}}"},filteringByMinMax:{itemProperty:"peakDeviceCount"},sortingByPath:{itemProperty:"peakDeviceCount"},getCsvValues:function(e){return[e.peakDeviceCount]}})},getDevicesColumn:function(){return i.getColumn({name:"deviceWithChildrenCount",header:{text:e("Devices"),tooltip:{icon:"question-circle-o",text:e("Number of devices, including child devices")}},cell:{template:"{{item.deviceWithChildrenCount}}"},filteringByMinMax:{itemProperty:"deviceWithChildrenCount"},sortingByPath:{itemProperty:"deviceWithChildrenCount"},getCsvValues:function(e){return[e.deviceWithChildrenCount]}})},getPeakDevicesColumn:function(){return i.getColumn({name:"peakDeviceWithChildrenCount",header:{text:e("Peak devices"),tooltip:{icon:"question-circle-o",text:e("Peak number of devices, including child devices")}},cell:{template:"{{item.peakDeviceWithChildrenCount}}"},filteringByMinMax:{itemProperty:"peakDeviceWithChildrenCount"},sortingByPath:{itemProperty:"peakDeviceWithChildrenCount"},getCsvValues:function(e){return[e.peakDeviceWithChildrenCount]}})},getSubscribedApplicationsColumn:function(){return i.getColumn({name:"subscribedApplications",header:e("Subscribed applications"),cell:{template:"{{(item.subscribedApplications || []).length}}"},filteringByMinMax:{itemProperty:"subscribedApplications.length"},sortingByPath:{itemProperty:"subscribedApplications.length"},getCsvValues:function(e){return[_.join(e.subscribedApplications," ")]}})},getCreationTimeColumn:function(){return i.getColumn({name:"creationTime",header:e("Creation time"),cell:{template:"{{item.creationTime | absoluteDate}}"},filteringByMinMaxDate:{itemProperty:"creationTime"},sortingByPath:{itemProperty:"creationTime"},getCsvValues:function(e){return[e.creationTime&&moment(e.creationTime).format("L")]}})},getParentTenantIdColumn:function(){return i.getColumn({name:"parentTenantId",header:e("Parent tenant"),cell:{template:"{{item.parentTenantId}}"},filteringByPattern:{itemProperty:"parentTenantId"},sortingByPath:{itemProperty:"parentTenantId"},getCsvValues:function(e){return[e.parentTenantId]}})},getDeviceEndpointCountColumn:function(){return i.getColumn({name:"deviceEndpointCount",header:{text:e("Endpoint devices"),tooltip:{icon:"question-circle-o",text:e("Leaf machines (without gateways and edges)")}},cell:{template:"{{item.deviceEndpointCount}}"},filteringByPattern:{itemProperty:"deviceEndpointCount"},sortingByPath:{itemProperty:"deviceEndpointCount"},getCsvValues:function(e){return[e.deviceEndpointCount]}})},getAlarmsCreatedCountColumn:function(){return i.getColumn({name:"alarmsCreated",header:e("Alarms created"),cell:{template:"{{item.alarmsCreatedCount}}"},filteringByPattern:{itemProperty:"alarmsCreatedCount"},sortingByPath:{itemProperty:"alarmsCreatedCount"},getCsvValues:function(e){return[e.alarmsCreatedCount]}})},getAlarmsUpdatedCountColumn:function(){return i.getColumn({name:"alarmsUpdated",header:e("Alarms updated"),cell:{template:"{{item.alarmsUpdatedCount}}"},filteringByPattern:{itemProperty:"alarmsUpdatedCount"},sortingByPath:{itemProperty:"alarmsUpdatedCount"},getCsvValues:function(e){return[e.alarmsUpdatedCount]}})},getInventoriesCreatedCountColumn:function(){return i.getColumn({name:"inventoriesCreated",header:e("Inventories created"),cell:{template:"{{item.inventoriesCreatedCount}}"},filteringByPattern:{itemProperty:"inventoriesCreatedCount"},sortingByPath:{itemProperty:"inventoriesCreatedCount"},getCsvValues:function(e){return[e.inventoriesCreatedCount]}})},getInventoriesUpdatedCountColumn:function(){return i.getColumn({name:"inventoriesUpdated",header:e("Inventories updated"),cell:{template:"{{item.inventoriesUpdatedCount}}"},filteringByPattern:{itemProperty:"inventoriesUpdatedCount"},sortingByPath:{itemProperty:"inventoriesUpdatedCount"},getCsvValues:function(e){return[e.inventoriesUpdatedCount]}})},getEventsCreatedCountColumn:function(){return i.getColumn({name:"eventsCreated",header:e("Events created"),cell:{template:"{{item.eventsCreatedCount}}"},filteringByPattern:{itemProperty:"eventsCreatedCount"},sortingByPath:{itemProperty:"eventsCreatedCount"},getCsvValues:function(e){return[e.eventsCreatedCount]}})},getEventsUpdatedCountColumn:function(){return i.getColumn({name:"eventsUpdated",header:e("Events updated"),cell:{template:"{{item.eventsUpdatedCount}}"},filteringByPattern:{itemProperty:"eventsUpdatedCount"},sortingByPath:{itemProperty:"eventsUpdatedCount"},getCsvValues:function(e){return[e.eventsUpdatedCount]}})},getMeasurementsCreatedCountColumn:function(){return i.getColumn({name:"measurementsCreated",header:e("Measurements created"),cell:{template:"{{item.measurementsCreatedCount}}"},filteringByPattern:{itemProperty:"measurementsCreatedCount"},sortingByPath:{itemProperty:"measurementsCreatedCount"},getCsvValues:function(e){return[e.measurementsCreatedCount]}})},getTotalInboundTransferColumn:function(){return i.getColumn({name:"totalInboundTransfer",header:e("Total inbound transfer"),cell:{template:"{{item.totalResourceCreateAndUpdateCount}}"},filteringByPattern:{itemProperty:"totalResourceCreateAndUpdateCount"},sortingByPath:{itemProperty:"totalResourceCreateAndUpdateCount"},getCsvValues:function(e){return[e.totalResourceCreateAndUpdateCount]}})},getCpuUsageColumn:function(){return i.getColumn({name:"cpuUsage",header:{text:e("CPU (m)"),tooltip:{icon:"question-circle-o",text:e("Sum of CPU daily usage in CPU milliseconds")}},cell:{template:"{{item.resources.cpu}}"},filteringByPattern:{itemProperty:"resources.cpu"},sortingByPath:{itemProperty:"resources.cpu"},getCsvValues:function(e){return[_.get(e,"resources.cpu")]}})},getMemoryUsageColumn:function(){return i.getColumn({name:"memoryUsage",header:{text:e("Memory (MB)"),tooltip:{icon:"question-circle-o",text:e("Sum of memory daily usage")}},cell:{template:"{{item.resources.memory}}"},filteringByPattern:{itemProperty:"resources.memory"},sortingByPath:{itemProperty:"resources.memory"},getCsvValues:function(e){return[_.get(e,"resources.memory")]}})}}}e.$inject=["c8yFilteringSortingCollections","SchemaPropertiesSvc","gettext"],angular.module("c8y.tenantStatistics").factory("c8yTenantStatisticsColumns",e)}();