"use strict";function _objectSpread(t){for(var e=1;e<arguments.length;e++){var i=null!=arguments[e]?Object(arguments[e]):{},n=Object.keys(i);"function"==typeof Object.getOwnPropertySymbols&&n.push.apply(n,Object.getOwnPropertySymbols(i).filter(function(e){return Object.getOwnPropertyDescriptor(i,e).enumerable})),n.forEach(function(e){_defineProperty(t,e,i[e])})}return t}function _defineProperty(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}!function(){function e(e,t,i,n){var o=this;function r(){o.customCertificates.push({alg:"RSA"})}function a(){var e={signatureVerificationConfig:function(){var e=_.cloneDeep(o.ssoConfiguration.signatureVerificationConfig);return _.set(e,"manual.certificates",(o.customCertificates.length<2&&(o.customCertificates[0].key="default"),_.reduce(o.customCertificates,function(e,t){return _objectSpread({},e,_defineProperty({},t.key,{alg:t.alg,publicKey:t.publicKey,validFrom:moment(t.validFrom).format(i.dateFullFormat),validTill:moment(t.validTill).format(i.dateFullFormat)}))},{}))),_.set(e,"manual",function(e){var t=_.cloneDeep(e.manual);return o.customCertificates.length<2&&(t.certIdFromField=!1,t=_.omit(t,"certIdField")),t}(e)),_.pick(e,o.certificateTypeChosen.signatureVerificationConfigFragment)}()};o.onChange({ssoConfigurationPartial:e})}o.dateNow=Date.now(),o.customCertificates=[],o.certificateIDFieldPopover=n('This is the name of the field in the token whose value will be used to select one of the certificates below which has matching "Certificate ID value".'),t.$watch("vm.ssoConfiguration",a,!0),t.$watch("vm.certificateTypeChosen",a),t.$watch(function(){return angular.toJson(o.customCertificates)},a),_.assign(o,{$onChanges:function(e){e.ssoConfiguration&&(o.certificateTypeChosen=_.find(o.certificateTypes.values(),function(e){return _.has(o.ssoConfiguration.signatureVerificationConfig,e.signatureVerificationConfigFragment)}),function(){var e=_.get(o.ssoConfiguration,"signatureVerificationConfig.manual.certificates",[]);o.customCertificates=_.map(e,function(e,t){return _objectSpread({},e,{key:t,validFrom:Date.parse(e.validFrom),validTill:Date.parse(e.validTill)})}),0===o.customCertificates.length&&r()}())},addCustomCertificate:r,removeCustomCertificate:function(e){_.pull(o.customCertificates,e),o.ssoSignatureVerificationForm.$setDirty()},onCertIdFieldChange:function(e){_.set(o.ssoConfiguration,"signatureVerificationConfig.manual.certIdFromField",!_.isEmpty(e))},algorithmTypes:e.algorithmTypes,certificateTypes:e.certificateTypes})}e.$inject=["c8yLoginOptions","$scope","c8yBase","gettext"],angular.module("c8y.authenticationConfiguration").component("c8ySsoSignatureConfiguration",{templateUrl:":::PLUGIN_PATH:::/sso-configuration/signature-configuration.html",controller:e,bindings:{ssoConfiguration:"<",fieldsConfig:"<",onChange:"&"},controllerAs:"vm"})}();