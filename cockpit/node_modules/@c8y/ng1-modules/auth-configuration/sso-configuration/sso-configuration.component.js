"use strict";!function(){function t(n,o,e,t,i,u,a,r,s){var c=this;function l(){return e.detail("oauth2",{silentError:!0}).then(_.identity,f).then(p).then(g).catch(function(t){return d(s("Could not load OAuth 2.0 configuration."),t)})}function g(t){c.ssoConfiguration=t,c.ssoConfigurationOutput=_.cloneDeep(t)}function f(t){return 404===t.status?e.defaultConfiguration:n.reject(t)}function p(t){return _.defaults(t,{template:c.templateTypes.CUSTOM.value})}function d(t,n){var o=_.get(n,"data.message")||_.get(n,"data.details.exceptionMessage");u.danger(t,o)}_.assign(c,{templateTypes:e.templateTypes,$onInit:function(){n.all({apps:t.listByUser(),groups:i.list()}).then(function(t){var n=t.apps,o=t.groups;c.apps=n,c.groups=o}).then(l)},onConfigurationChange:function(t){c.ssoConfigurationOutput=t},save:function(){var t=!("BASIC"===o.get("c8yAuthBridgeService").getPreferredLoginOption().type),n=function(){return e.save(c.ssoConfigurationOutput)};r({title:s("Force users to log out"),body:s('Updating SSO configuration will log out all users logged with "OAuth Internal" or "Single sign-on redirect". Do you want to proceed?'),status:"warning",labels:{ok:s("Update and log out users"),cancel:s("Cancel")}}).then(function(){return t?a.requireLogout(n):n().then(function(t){g(t.data),u.success(s("Configuration saved."))})}).catch(function(t){t&&d(s("Could not save configuration."),t)})}})}t.$inject=["$q","$injector","c8yLoginOptions","c8yApplication","c8yUserGroup","c8yAlert","c8yUserUtil","c8yModal","gettext"],angular.module("c8y.authenticationConfiguration").component("c8ySsoConfiguration",{templateUrl:":::PLUGIN_PATH:::/sso-configuration/sso-configuration.html",controller:t,controllerAs:"vm"})}();