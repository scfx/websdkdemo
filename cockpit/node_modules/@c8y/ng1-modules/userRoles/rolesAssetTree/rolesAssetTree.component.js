"use strict";!function(){function e(n,e,t){var s,o=this;_.assign(o,{filterAsset:function(e){return!o.ownerAllAssignedRoles||_.get(o.ownerAllAssignedRoles,[e.id,"length"])},onApply:function(e,n){return o.onChangeRoles({managedObjectId:n,roles:e})},$onChanges:function(e){(e.assignedRoles||e.ownerAssignedRoles)&&r.then(i);e.expandGroups&&o.expandGroups&&n.expandAll(s,l)},loadChildren:function(e){e.isOpened?(e._subGroups=[],e.isOpened=!1,l()):(n.loadChildren(e).then(l),e.isOpened=!0)},title:function(e){var n=e._subGroups,s=t.getString("Click to fetch subgroups");Array.isArray(n)&&e.isOpened&&(s=0<n.length?t.getPlural(n.length,"1 subgroup","{{$count}} subgroups",{}):t.getString("No subgroups"));return s}});var r=n.listRootGroups().then(function(e){s=e,l()});function l(){o.flatAssetTree=n.flatTree(s),i()}function i(){if(o.assignedRoles&&(o.inheritedRoles=u(o.flatAssetTree,o.assignedRoles)),o.ownerAssignedRoles){var e=u(o.flatAssetTree,o.ownerAssignedRoles);o.ownerAllAssignedRoles=_.mergeWith(e,o.ownerAssignedRoles,function(e,n){return n?e?_.uniqBy(e.concat(n.roles),"id"):n.roles:e})}}function u(e,s){return _.reduce(e,function(e,n){return e[n.id]=_(n._parentGroups).map(function(e){return _.get(s,e.id)}).filter(_.identity).map(_.property("roles")).flatten().uniqBy("id").value(),e},{})}e.list().then(function(e){o.inventoryRoles=e})}e.$inject=["c8yUserInventoryRoles","c8yRoles","gettextCatalog"],angular.module("c8y.userRoles").component("c8yRolesAssetTree",{templateUrl:":::PLUGIN_PATH:::/rolesAssetTree/rolesAssetTree.html",controllerAs:"vm",controller:e,bindings:{searchFilter:"<",assignedRoles:"<",ownerAssignedRoles:"<",expandGroups:"<",onChangeRoles:"&"}})}();