"use strict";function _toConsumableArray(e){return _arrayWithoutHoles(e)||_iterableToArray(e)||_unsupportedIterableToArray(e)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(e,r){if(e){if("string"==typeof e)return _arrayLikeToArray(e,r);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?_arrayLikeToArray(e,r):void 0}}function _iterableToArray(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}function _arrayWithoutHoles(e){if(Array.isArray(e))return _arrayLikeToArray(e)}function _arrayLikeToArray(e,r){(null==r||r>e.length)&&(r=e.length);for(var t=0,n=new Array(r);t<r;t++)n[t]=e[t];return n}!function(){function e(e,n){var o=this;function r(e,r){return e[r]=!0,e}function a(e){return o.selectedPermissions&&o.availableRoles&&_(o.availableRoles).map("id").filter(i(e)).every(function(e){return o.selectedPermissions[e]})}function i(e){var r=new RegExp("".concat(e,"$"));return function(e){return r.test(e)}}_.assign(o,{$onChanges:function(e){e.availableRoles&&(o.groupedPermissions=_.map(_.groupBy(o.availableRoles,"category"),function(e,r){return{category:r,permissions:e}}));e.inputSelectedRoles&&(o.selectedPermissions=_.reduce(o.inputSelectedRoles,r,{}))},permissionId:function(e,r){var t=_.find(e,{access:r});return t&&t.id},categoryLabel:function(e){var r=e.category,t=n.STRINGS.PERMISSIONS_GLOBAL_LABELS;r=t[r]?t[r]:_.capitalize((r||"").toLowerCase().replace(/_/g," "));return r},hasPermission:function(e,r){return _.some(e,{access:r})},hasPermissionWithAccess:function(e){return o.availableRoles&&_(o.availableRoles).map("id").some(i(e))},allSelected:a,selectAll:function(e){var r=o.selectedPermissions||{},t=!a(e);_(o.availableRoles).map("id").filter(i(e)).forEach(function(e){r[e]=t}),o.selectedPermissions=r},STRINGS:n.STRINGS}),e.$watch("vm.selectedPermissions",function(){o.onSelectedRolesChange({selectedRoles:_.reduce(o.selectedPermissions,function(e,r,t){return r?[].concat(_toConsumableArray(e),[t]):e},[])})},!0)}e.$inject=["$scope","c8yRolesUi"],angular.module("c8y.ui").component("c8yRolesMatrix",{templateUrl:":::PLUGIN_PATH:::/ui/roles/roles-matrix.html",bindings:{availableRoles:"<",inputSelectedRoles:"<selectedRoles",onSelectedRolesChange:"&",readOnly:"<"},controllerAs:"vm",controller:e})}();