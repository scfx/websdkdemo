"use strict";function _toConsumableArray(e){return _arrayWithoutHoles(e)||_iterableToArray(e)||_unsupportedIterableToArray(e)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(e,r){if(e){if("string"==typeof e)return _arrayLikeToArray(e,r);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?_arrayLikeToArray(e,r):void 0}}function _iterableToArray(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}function _arrayWithoutHoles(e){if(Array.isArray(e))return _arrayLikeToArray(e)}function _arrayLikeToArray(e,r){(null==r||r>e.length)&&(r=e.length);for(var t=0,n=new Array(r);t<r;t++)n[t]=e[t];return n}function _objectSpread(r){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?Object(arguments[e]):{},n=Object.keys(t);"function"==typeof Object.getOwnPropertySymbols&&n.push.apply(n,Object.getOwnPropertySymbols(t).filter(function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})),n.forEach(function(e){_defineProperty(r,e,t[e])})}return r}function _defineProperty(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}!function(){function e(n,o,i,u,a,e,c,r){var l=r.ALL_DEVICES_COLUMNS_META_USER_PREFERENCES_KEY_PREFIX,f=r.FILTERING_MODE;return{popupModalColumnsConfigure:function(e){var r=e.dynamicGroupId,t=e.columnOptions;return a({component:"c8yModalDeviceListColumnsConfigure",resolve:{dynamicGroupId:function(){return r},columnOptions:function(){return t}}})},getConfigurableColumns:function(e){var r=e.dynamicGroupId,t=e.options;return(_.isString(r)?o.getConfigurableColumnsMeta(r):n.get(l)).then(function(e){return _.isEmpty(e)?function(e){return _.map(i.getParentDeviceColumns(e),function(e){return _objectSpread({},e,{meta:{key:e.name,headerName:e.header,active:!0}})})}(t):_.map(e,function(e){return s({meta:e,options:t})})}).then(d)},createConfigurableColumn:s,moveRemovalColumnToTheEnd:d,saveConfigurableColumnsMeta:function(e){var r=e.dynamicGroupId,t=e.configurableColumns;return _.isString(r)?o.saveConfigurableColumnsMeta(r,t):n.set(l,_.map(t,"meta"))}};function s(e){var r=e.meta,t=e.options;if(r.custom){var n,o=(_defineProperty(n={},f.EQUALITY,m),_defineProperty(n,f.EXISTENCE,y),n)[r.filteringMode];if(!_.isFunction(o))throw new Error("Invalid filtering mode.");return _objectSpread({},o(r),{meta:r})}var a=i.getParentDeviceColumns(t);return _objectSpread({},_.find(a,{name:r.key}),{meta:r})}function m(e){var r=e.key,t=e.headerName,n=e.fragmentPath,o=_.lowerCase(t),a="".concat(r,"s");return _objectSpread({},p(e),{filtering:{schema:{type:"object",properties:_defineProperty({},a,{type:"array",items:{type:"string"}})},form:[{key:a,title:c.getString('Show devices where "{{headerName}}" contains:',{headerName:t}),add:c.getString("Or"),items:[{key:"".concat(a,"[]"),notitle:!0,placeholder:c.getString("e.g. value, you can use an asterisk (*) as wildcard character",{lowerCasedName:o})}]}],getFilter:function(e){return u.getInFilterFromModel(a,n,e)}},sorting:{path:n}})}function y(e){var r=e.key,t=e.fragmentPath,n=r;return _objectSpread({},p(e),{filtering:{schema:{type:"object",properties:_defineProperty({},n,{type:"boolean",default:!1,title:c.getString('Check for the existence of "{{fragmentPath}}" fragment',{fragmentPath:t})})},form:["*"],getFilter:function(e){return e[n]?{__has:t}:{}}}})}function p(e){var r=e.key,t=e.headerName,n=e.fragmentPath,o="getFragmentPathValue_".concat(function(e){return _toConsumableArray(e).map(function(e){return e.charCodeAt(0).toString(36)}).join("_")}(r)),a=_.property(n);return{name:r,header:t,cell:{template:'<span ng-bind="'.concat(o,'(item)"></span>'),scopeExtensions:_defineProperty({},o,a)}}}function d(e){var r=_.find(e,{name:"removalColumn"});return[].concat(_toConsumableArray(_.without(e,r)),[r])}}e.$inject=["c8yUserPreferences","c8yDynamicGroups","c8yDeviceListColumns","c8yFilteringSortingInventoryQueries","c8yModal","c8yAlert","gettextCatalog","c8yConfigurableDeviceListColumnsConstants"],angular.module("c8y.ui").factory("c8yConfigurableDeviceListColumns",e)}();