(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :
    typeof define === 'function' && define.amd ? define('@ngx-translate/http-loader', ['exports'], factory) :
    (factory((global['ngx-translate'] = global['ngx-translate'] || {}, global['ngx-translate']['http-loader'] = {})));
}(this, (function (exports) { 'use strict';

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
     */
    var TranslateHttpLoader = /** @class */ (function () {
        function TranslateHttpLoader(http, prefix, suffix) {
            if (prefix === void 0) {
                prefix = "/assets/i18n/";
            }
            if (suffix === void 0) {
                suffix = ".json";
            }
            this.http = http;
            this.prefix = prefix;
            this.suffix = suffix;
        }
        /**
         * Gets the translations from the server
         */
        /**
         * Gets the translations from the server
         * @param {?} lang
         * @return {?}
         */
        TranslateHttpLoader.prototype.getTranslation = /**
         * Gets the translations from the server
         * @param {?} lang
         * @return {?}
         */
            function (lang) {
                return this.http.get("" + this.prefix + lang + this.suffix);
            };
        return TranslateHttpLoader;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
     */

    exports.TranslateHttpLoader = TranslateHttpLoader;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LXRyYW5zbGF0ZS1odHRwLWxvYWRlci51bWQuanMiLCJzb3VyY2VzIjpbIkBuZ3gtdHJhbnNsYXRlL2h0dHAtbG9hZGVyL2xpYi9odHRwLWxvYWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBSUE7QUFBMkQsUUFDekQsNkJBQW9CLElBQWdCLEVBQVMsTUFBZ0MsRUFBUyxNQUF3QjtBQUFJLFlBQXJFLHVCQUFBO0FBQUUsZ0JBQUYsd0JBQWdDO0FBQUU7QUFBYyxZQUFQLHVCQUFBO0FBQUUsZ0JBQUYsZ0JBQXdCO0FBQUU7QUFHOUcsWUFIa0IsU0FBSSxHQUFKLElBQUksQ0FBWTtBQUFDLFlBQVEsV0FBTSxHQUFOLE1BQU0sQ0FBMEI7QUFBQyxZQUFRLFdBQU0sR0FBTixNQUFNLENBQWtCO0FBQUMsU0FBRztBQUNwSDtBQUVLO0FBRUE7QUFBWTtBQUFZO0FBQ1g7QUFBMkI7QUFDMUM7QUFFTSxRQUpBLDRDQUFjO0FBQU87QUFDWDtBQUEyQjtBQUU5QztBQUNVLFlBSlIsVUFBc0IsSUFBWTtBQUFJLGdCQUNwQyxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEtBQUcsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLEdBQUcsSUFBSSxDQUFDLE1BQVEsQ0FBQyxDQUFDO0FBQ2hFLGFBQUc7QUFDRixRQUFELDBCQUFDO0FBQ0EsSUFERCxDQUFDO0FBQ0c7QUFBQztBQUFRO0FBQXNDO0FBQW9GO0FBQVE7QUFBQztBQUFRO0FBQXNDO0FBQW9GO0FBQVE7QUFBQztBQUF1RDtBQUFDO0FBQW1FO0FBQUM7O0FBVkEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUtBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFDQSxBQUFBLEFBQUEsQUFBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7SHR0cENsaWVudH0gZnJvbSBcIkBhbmd1bGFyL2NvbW1vbi9odHRwXCI7XG5pbXBvcnQge1RyYW5zbGF0ZUxvYWRlcn0gZnJvbSBcIkBuZ3gtdHJhbnNsYXRlL2NvcmVcIjtcbmltcG9ydCB7T2JzZXJ2YWJsZX0gZnJvbSAncnhqcyc7XG5cbmV4cG9ydCBjbGFzcyBUcmFuc2xhdGVIdHRwTG9hZGVyIGltcGxlbWVudHMgVHJhbnNsYXRlTG9hZGVyIHtcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBodHRwOiBIdHRwQ2xpZW50LCBwdWJsaWMgcHJlZml4OiBzdHJpbmcgPSBcIi9hc3NldHMvaTE4bi9cIiwgcHVibGljIHN1ZmZpeDogc3RyaW5nID0gXCIuanNvblwiKSB7fVxuXG4gIC8qKlxuICAgKiBHZXRzIHRoZSB0cmFuc2xhdGlvbnMgZnJvbSB0aGUgc2VydmVyXG4gICAqL1xuICBwdWJsaWMgZ2V0VHJhbnNsYXRpb24obGFuZzogc3RyaW5nKTogT2JzZXJ2YWJsZTxPYmplY3Q+IHtcbiAgICByZXR1cm4gdGhpcy5odHRwLmdldChgJHt0aGlzLnByZWZpeH0ke2xhbmd9JHt0aGlzLnN1ZmZpeH1gKTtcbiAgfVxufVxuIl19