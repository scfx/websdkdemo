import { EventEmitter, TemplateRef } from '@angular/core';
import { Pagination, AlertService, ActionControl, HeaderActionControl } from '@c8y/ngx-components';
import { InventoryService } from '@c8y/client';
import { SubAssetsService } from '../sub-assets.service';
import { IManagedObject } from '@c8y/client';
import * as ɵngcc0 from '@angular/core';
export declare class AssignDevicesComponent {
    private alert;
    private subAssetsService;
    private inventoryService;
    currentGroupId: string;
    refresh: EventEmitter<any>;
    onCancel: EventEmitter<any>;
    onShowChildDevices: EventEmitter<boolean>;
    selectedDevice: EventEmitter<IManagedObject>;
    showDevicesToggle: TemplateRef<any>;
    deviceQueryStringOutput: string;
    pendingStatus: boolean;
    pagination: Pagination;
    selected: string[];
    baseQuery: any;
    canAssignDevice: boolean;
    actionControls: ActionControl[];
    headerActionControls: HeaderActionControl[];
    showChildren: boolean;
    readonly isSelectable = true;
    constructor(alert: AlertService, subAssetsService: SubAssetsService, inventoryService: InventoryService);
    onEnterKeyDown(event: KeyboardEvent): void;
    onEscapeKeyDown(event: KeyboardEvent): void;
    ngOnInit(): Promise<void>;
    setNotIncludedInGroupQuery(): void;
    setHeaderActionControls(): void;
    setActionControls(showChildren: boolean): void;
    assignDevices(): Promise<void>;
    onSelected(selectedDevicesIDs: string[]): void;
    selectChildren(asset: IManagedObject): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<AssignDevicesComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<AssignDevicesComponent, "c8y-assign-devices", never, { "refresh": "refresh"; "currentGroupId": "currentGroupId"; }, { "onCancel": "onCancel"; "onShowChildDevices": "onShowChildDevices"; "selectedDevice": "selectedDevice"; }, never, never>;
}

//# sourceMappingURL=assign-devices.component.d.ts.map