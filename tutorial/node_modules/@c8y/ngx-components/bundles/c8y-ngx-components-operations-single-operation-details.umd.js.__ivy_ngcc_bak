(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('ngx-bootstrap/collapse'), require('ngx-bootstrap/popover'), require('ngx-bootstrap/tooltip'), require('@c8y/ngx-components'), require('@c8y/ngx-components/operations/bulk-operations-list'), require('@c8y/ngx-components/operations/bulk-operations-service'), require('ngx-bootstrap/modal'), require('@c8y/client'), require('@angular/router'), require('lodash-es')) :
    typeof define === 'function' && define.amd ? define('@c8y/ngx-components/operations/single-operation-details', ['exports', '@angular/core', 'ngx-bootstrap/collapse', 'ngx-bootstrap/popover', 'ngx-bootstrap/tooltip', '@c8y/ngx-components', '@c8y/ngx-components/operations/bulk-operations-list', '@c8y/ngx-components/operations/bulk-operations-service', 'ngx-bootstrap/modal', '@c8y/client', '@angular/router', 'lodash-es'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.c8y = global.c8y || {}, global.c8y["ngx-components"] = global.c8y["ngx-components"] || {}, global.c8y["ngx-components"].operations = global.c8y["ngx-components"].operations || {}, global.c8y["ngx-components"].operations["single-operation-details"] = {}), global.ng.core, global.collapse, global.popover, global.tooltip, global.c8y["ngx-components"], global.c8y["ngx-components"].operations["bulk-operations-list"], global.c8y["ngx-components"].operations["bulk-operations-service"], global.modal, global.client, global.ng.router, global.lodashEs));
})(this, (function (exports, core, collapse, popover, tooltip, ngxComponents, bulkOperationsList, bulkOperationsService, modal, client, router, lodashEs) { 'use strict';

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    /** @deprecated */
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    /** @deprecated */
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    function __spreadArray(to, from, pack) {
        if (pack || arguments.length === 2)
            for (var i = 0, l = from.length, ar; i < l; i++) {
                if (ar || !(i in from)) {
                    if (!ar)
                        ar = Array.prototype.slice.call(from, 0, i);
                    ar[i] = from[i];
                }
            }
        return to.concat(ar || Array.prototype.slice.call(from));
    }
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, state, kind, f) {
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    }
    function __classPrivateFieldSet(receiver, state, value, kind, f) {
        if (kind === "m")
            throw new TypeError("Private method is not writable");
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    }

    var SingleOperationModalComponent = /** @class */ (function () {
        function SingleOperationModalComponent(modalRef) {
            this.modalRef = modalRef;
            this.collapsed = false;
            this.readOnly = false;
        }
        return SingleOperationModalComponent;
    }());
    SingleOperationModalComponent.decorators = [
        { type: core.Component, args: [{
                    selector: 'c8y-single-operation-modal',
                    template: "<div class=\"viewport-modal\">\n  <div class=\"modal-header\">\n    <h3>{{ 'Single operation details' | translate }}</h3>\n  </div>\n\n  <div class=\"modal-inner-scroll\">\n    <c8y-single-operation-list-item\n      [operation]=\"operation\"\n      [collapsed]=\"collapsed\"\n      [readOnly]=\"readOnly\"\n    ></c8y-single-operation-list-item>\n  </div>\n\n  <div class=\"modal-footer\">\n    <button title=\"{{ 'Close' | translate }}\" class=\"btn btn-default\" (click)=\"modalRef.hide()\">\n      {{ 'Close' | translate }}\n    </button>\n  </div>\n</div>\n"
                },] }
    ];
    SingleOperationModalComponent.ctorParameters = function () { return [
        { type: modal.BsModalRef }
    ]; };
    SingleOperationModalComponent.propDecorators = {
        operation: [{ type: core.Input }],
        collapsed: [{ type: core.Input }],
        readOnly: [{ type: core.Input }]
    };

    var SingleOperationDetailsService = /** @class */ (function () {
        function SingleOperationDetailsService(operationService, modalService) {
            this.operationService = operationService;
            this.modalService = modalService;
        }
        /**
         * Opens a modal window with the details of given single operation.
         * @param operationOrOperationId Operation's object or id.
         * @param options Additional options:
         * - `collapsed`: boolean - whether the details pane should be initially collapsed
         * - `readOnly`: boolean - whether the details should be displayed in read-only mode
         */
        SingleOperationDetailsService.prototype.openDetails = function (operationOrOperationId, options) {
            return __awaiter(this, void 0, void 0, function () {
                var operation, _a, initialState;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            if (!operationOrOperationId.id) return [3 /*break*/, 1];
                            _a = operationOrOperationId;
                            return [3 /*break*/, 3];
                        case 1: return [4 /*yield*/, this.operationService.detail(operationOrOperationId)];
                        case 2:
                            _a = (_b.sent()).data;
                            _b.label = 3;
                        case 3:
                            operation = _a;
                            initialState = Object.assign({ operation: operation }, options);
                            this.modalService.show(SingleOperationModalComponent, {
                                initialState: initialState,
                                class: 'modal-lg'
                            });
                            return [2 /*return*/];
                    }
                });
            });
        };
        return SingleOperationDetailsService;
    }());
    SingleOperationDetailsService.decorators = [
        { type: core.Injectable }
    ];
    SingleOperationDetailsService.ctorParameters = function () { return [
        { type: client.OperationService },
        { type: modal.BsModalService }
    ]; };

    /**
     * Single operation component displays a single operation's status, description and creationTime.
     *
     * Example:
     *
     * ```html
     * <c8y-single-operation [operation]="operation"></c8y-single-operation>
     * ```
     */
    var SingleOperationComponent = /** @class */ (function () {
        function SingleOperationComponent(singleOperationDetailsService) {
            this.singleOperationDetailsService = singleOperationDetailsService;
        }
        SingleOperationComponent.prototype.ngOnInit = function () {
            this.statusIcons = ngxComponents.operationStatusIcons;
            this.statusClasses = ngxComponents.operationStatusClasses;
        };
        SingleOperationComponent.prototype.openDetails = function () {
            this.singleOperationDetailsService.openDetails(this.operation);
        };
        return SingleOperationComponent;
    }());
    SingleOperationComponent.decorators = [
        { type: core.Component, args: [{
                    selector: 'c8y-single-operation',
                    template: "<div class=\"c8y-list--group\" *ngIf=\"operation\">\n  <a class=\"c8y-list__item\">\n    <div class=\"c8y-list__item__block\">\n      <div class=\"c8y-list__item__icon\">\n        <i\n          [c8yIcon]=\"statusIcons[operation.status]\"\n          [ngClass]=\"statusClasses[operation.status]\"\n          [tooltip]=\"operation.status?.toString() | translate\"\n          placement=\"right\"\n          container=\"body\"\n        ></i>\n      </div>\n      <div class=\"c8y-list__item__body p-r-16\">\n        <div class=\"content-flex-40\">\n          <div class=\"col-8\">\n            <button\n              class=\"btn-clean text-truncate\"\n              (click)=\"openDetails()\"\n              title=\"{{ operation.description | translate }}\"\n            >\n              {{ operation.description | translate }}\n            </button>\n          </div>\n          <div class=\"col-4 text-muted\">\n            <small class=\"icon-flex\">\n              <i c8yIcon=\"calendar\" class=\"m-r-4\"></i>\n              <span>{{ operation.creationTime | c8yDate }}</span>\n            </small>\n          </div>\n        </div>\n      </div>\n    </div>\n  </a>\n</div>\n"
                },] }
    ];
    SingleOperationComponent.ctorParameters = function () { return [
        { type: SingleOperationDetailsService }
    ]; };
    SingleOperationComponent.propDecorators = {
        operation: [{ type: core.Input }]
    };

    var SingleOperationListItemComponent = /** @class */ (function () {
        function SingleOperationListItemComponent(router, operationService, alertService) {
            this.router = router;
            this.operationService = operationService;
            this.alertService = alertService;
            this.collapsed = true;
            this.readOnly = false;
            this.tabs = [];
            this.statusIcons = ngxComponents.operationStatusIcons;
            this.statusClasses = ngxComponents.operationStatusClasses;
            this.OperationStatus = client.OperationStatus;
        }
        Object.defineProperty(SingleOperationListItemComponent.prototype, "displayedDescription", {
            get: function () {
                var commandText = lodashEs.get(this.operation, 'c8y_Command.text');
                var opDescription = lodashEs.get(this.operation, 'description');
                return commandText || opDescription || ngxComponents.gettext('(no command text or description available)');
            },
            enumerable: false,
            configurable: true
        });
        SingleOperationListItemComponent.prototype.ngOnInit = function () {
            this.statusIcons = ngxComponents.operationStatusIcons;
            this.statusClasses = ngxComponents.operationStatusClasses;
            this.tabs = [
                {
                    label: ngxComponents.gettext('Details'),
                    icon: 'asterisk',
                    template: this.detailsTabTemplate
                },
                {
                    label: ngxComponents.gettext('History of changes'),
                    icon: 'archive',
                    template: this.historyOfChangesTabTemplate
                }
            ];
            this.selectedTab = this.tabs[0];
        };
        SingleOperationListItemComponent.prototype.scheduleAsBulkOperation = function () {
            this.router.navigateByUrl("/devicecontrol/single/create-bulk/" + this.operation.id);
        };
        SingleOperationListItemComponent.prototype.cancel = function () {
            return __awaiter(this, void 0, void 0, function () {
                var operationAfterUpdate, ex_1;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            _a.trys.push([0, 2, , 3]);
                            return [4 /*yield*/, this.operationService.update({
                                    id: this.operation.id,
                                    status: client.OperationStatus.FAILED,
                                    failureReason: ngxComponents.gettext('Operation cancelled by user.')
                                })];
                        case 1:
                            operationAfterUpdate = (_a.sent()).data;
                            lodashEs.assign(this.operation, operationAfterUpdate);
                            this.alertService.success(ngxComponents.gettext('Operation cancelled.'));
                            return [3 /*break*/, 3];
                        case 2:
                            ex_1 = _a.sent();
                            this.alertService.addServerFailure(ex_1);
                            return [3 /*break*/, 3];
                        case 3: return [2 /*return*/];
                    }
                });
            });
        };
        return SingleOperationListItemComponent;
    }());
    SingleOperationListItemComponent.decorators = [
        { type: core.Component, args: [{
                    selector: 'c8y-single-operation-list-item',
                    template: "<c8y-li\n  class=\"c8y-list__item--double-actions\"\n  [ngClass]=\"{ 'c8y-list__item--no-expand': !collapsed }\"\n  [collapsed]=\"collapsed\"\n  #listItem\n  id=\"single-operation-{{ operation.id }}\"\n>\n  <c8y-li-icon>\n    <i [c8yIcon]=\"statusIcons[operation.status]\" [ngClass]=\"statusClasses[operation.status]\"></i>\n  </c8y-li-icon>\n  <div [ngClass]=\"{ 'content-flex-80': !readOnly, 'content-flex-50': readOnly }\">\n    <div class=\"col-6\">\n      <span class=\"text-truncate\" title=\"{{ displayedDescription | translate }}\">\n        {{ displayedDescription | translate }}\n      </span>\n    </div>\n    <div class=\"flex-grow\"></div>\n    <div class=\"col-3\">\n      <div class=\"m-r-16\">\n        <small class=\"icon-flex\">\n          <i c8yIcon=\"calendar\" class=\"m-r-4\"></i>\n          <span>\n            {{ operation.creationTime | c8yDate }}\n          </span>\n        </small>\n      </div>\n    </div>\n  </div>\n  <div class=\"c8y-list__item__footer\">\n    <div class=\"m-r-16\">\n      <small class=\"icon-flex\">\n        <i c8yIcon=\"exchange\" class=\"m-r-4\"></i>\n        <span>\n          <a href=\"#/device/{{ operation.deviceId }}\">{{ operation.deviceName }}</a>\n        </span>\n      </small>\n    </div>\n  </div>\n  <ng-container>\n    <c8y-li-action\n      label=\"{{ 'Schedule as bulk operation' | translate }}\"\n      (click)=\"scheduleAsBulkOperation()\"\n      icon=\"c8y-energy\"\n    >\n    </c8y-li-action>\n    <c8y-li-action\n      *ngIf=\"!readOnly && operation.status === OperationStatus.PENDING\"\n      label=\"{{ 'Cancel`operation`' | translate }}\"\n      (click)=\"cancel()\"\n      icon=\"times\"\n    >\n    </c8y-li-action>\n  </ng-container>\n  <c8y-li-collapse class=\"m-b-16\">\n    <div class=\"tabContainer\">\n      <ul class=\"nav nav-tabs nav-tabsc8y\">\n        <li [ngClass]=\"{ active: selectedTab === tab }\" *ngFor=\"let tab of tabs\">\n          <button [title]=\"tab.label | translate\" (click)=\"selectedTab = tab\" class=\"btn-clean\">\n            <i [c8yIcon]=\"tab.icon\"></i>\n            <span class=\"txt\">{{ tab.label | translate }}</span>\n          </button>\n        </li>\n      </ul>\n    </div>\n\n    <ng-container *ngTemplateOutlet=\"selectedTab.template\"></ng-container>\n\n    <ng-template #details>\n      <c8y-single-operation-details [operation]=\"operation\" [readOnly]=\"readOnly\">\n      </c8y-single-operation-details>\n    </ng-template>\n\n    <ng-template #historyOfChanges>\n      <c8y-audit-log [source]=\"operation.id\"></c8y-audit-log>\n    </ng-template>\n  </c8y-li-collapse>\n</c8y-li>\n"
                },] }
    ];
    SingleOperationListItemComponent.ctorParameters = function () { return [
        { type: router.Router },
        { type: client.OperationService },
        { type: ngxComponents.AlertService }
    ]; };
    SingleOperationListItemComponent.propDecorators = {
        operation: [{ type: core.Input }],
        collapsed: [{ type: core.Input }],
        readOnly: [{ type: core.Input }],
        listItem: [{ type: core.ViewChild, args: ['listItem', { static: true },] }],
        detailsTabTemplate: [{ type: core.ViewChild, args: ['details', { static: true },] }],
        historyOfChangesTabTemplate: [{ type: core.ViewChild, args: ['historyOfChanges', { static: true },] }]
    };

    var SingleOperationDetailsComponent = /** @class */ (function () {
        function SingleOperationDetailsComponent(bulkOperationDetailsService) {
            this.bulkOperationDetailsService = bulkOperationDetailsService;
            this.readOnly = false;
        }
        SingleOperationDetailsComponent.prototype.openBulkOperationDetails = function () {
            this.bulkOperationDetailsService.openDetails(this.operation.bulkOperationId);
        };
        return SingleOperationDetailsComponent;
    }());
    SingleOperationDetailsComponent.decorators = [
        { type: core.Component, args: [{
                    selector: 'c8y-single-operation-details',
                    template: "<div class=\"row\">\n  <div class=\"col-sm-3\">\n    <div class=\"legend form-block\" translate>\n      Details\n    </div>\n    <ul class=\"list-unstyled small\">\n      <li class=\"p-t-4 p-b-4 flex-row separator-bottom wrap\" *ngIf=\"operation.bulkOperationId\">\n        <label class=\"small m-0 m-r-4\" translate>Bulk operation</label>\n        <span class=\"flex-item-right\">\n          <a class=\"pointer\" role=\"button\" (click)=\"openBulkOperationDetails()\" translate\n            >See details</a\n          >\n        </span>\n      </li>\n      <li class=\"p-t-4 p-b-4 flex-row separator-bottom wrap\">\n        <label class=\"small m-0 m-r-4\" translate>Status</label>\n        <span class=\"flex-item-right\">{{ operation.status.toString() | translate }}</span>\n      </li>\n      <li *ngIf=\"operation.failureReason\" class=\"p-t-4 p-b-4 flex-row separator-bottom wrap\">\n        <label class=\"small m-0 m-r-4\" translate>Failure reason</label>\n        <span class=\"flex-item-right\">{{ operation.failureReason | translate }}</span>\n      </li>\n      <li *ngIf=\"operation.c8y_Command\" class=\"p-t-4 p-b-4 flex-row separator-bottom wrap\">\n        <label class=\"small flex-item-top m-r-4\" translate>Result</label>\n        <span class=\"flex-item-right\">{{ operation.c8y_Command.result }}</span>\n      </li>\n    </ul>\n  </div>\n  <div class=\"col-sm-9\">\n    <div class=\"legend form-block\" translate>\n      Operation\n    </div>\n    <pre class=\"p-16\">{{ operation | json }}</pre>\n  </div>\n</div>\n"
                },] }
    ];
    SingleOperationDetailsComponent.ctorParameters = function () { return [
        { type: bulkOperationsList.BulkOperationDetailsService }
    ]; };
    SingleOperationDetailsComponent.propDecorators = {
        operation: [{ type: core.Input }],
        readOnly: [{ type: core.Input }]
    };

    /**
     * This module allows to display details of a single operation in a modal.
     */
    var SingleOperationDetailsModule = /** @class */ (function () {
        function SingleOperationDetailsModule() {
        }
        return SingleOperationDetailsModule;
    }());
    SingleOperationDetailsModule.decorators = [
        { type: core.NgModule, args: [{
                    imports: [
                        ngxComponents.CoreModule,
                        popover.PopoverModule,
                        tooltip.TooltipModule,
                        collapse.CollapseModule,
                        bulkOperationsList.BulkOperationsListModule,
                        bulkOperationsService.BulkOperationsServiceModule
                    ],
                    providers: [SingleOperationDetailsService],
                    declarations: [
                        SingleOperationComponent,
                        SingleOperationModalComponent,
                        SingleOperationListItemComponent,
                        SingleOperationDetailsComponent
                    ],
                    entryComponents: [
                        SingleOperationComponent,
                        SingleOperationModalComponent,
                        SingleOperationListItemComponent,
                        SingleOperationDetailsComponent
                    ],
                    exports: [SingleOperationComponent]
                },] }
    ];

    /**
     * Generated bundle index. Do not edit.
     */

    exports.SingleOperationComponent = SingleOperationComponent;
    exports.SingleOperationDetailsComponent = SingleOperationDetailsComponent;
    exports.SingleOperationDetailsModule = SingleOperationDetailsModule;
    exports.SingleOperationDetailsService = SingleOperationDetailsService;
    exports.SingleOperationListItemComponent = SingleOperationListItemComponent;
    exports.SingleOperationModalComponent = SingleOperationModalComponent;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=c8y-ngx-components-operations-single-operation-details.umd.js.map
