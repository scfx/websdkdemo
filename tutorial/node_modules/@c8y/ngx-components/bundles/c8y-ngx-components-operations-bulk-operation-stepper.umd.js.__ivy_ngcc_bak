(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('rxjs'), require('rxjs/operators'), require('@c8y/ngx-components'), require('lodash-es'), require('@c8y/ngx-components/operations/details'), require('@c8y/ngx-components/operations/bulk-operations-service'), require('@c8y/ngx-components/operations/device-selector'), require('@c8y/ngx-components/operations/operation-summary')) :
    typeof define === 'function' && define.amd ? define('@c8y/ngx-components/operations/bulk-operation-stepper', ['exports', '@angular/core', 'rxjs', 'rxjs/operators', '@c8y/ngx-components', 'lodash-es', '@c8y/ngx-components/operations/details', '@c8y/ngx-components/operations/bulk-operations-service', '@c8y/ngx-components/operations/device-selector', '@c8y/ngx-components/operations/operation-summary'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.c8y = global.c8y || {}, global.c8y["ngx-components"] = global.c8y["ngx-components"] || {}, global.c8y["ngx-components"].operations = global.c8y["ngx-components"].operations || {}, global.c8y["ngx-components"].operations["bulk-operation-stepper"] = {}), global.ng.core, global.rxjs, global.rxjs.operators, global.c8y["ngx-components"], global.lodashEs, global.c8y["ngx-components"].operations.details, global.c8y["ngx-components"].operations["bulk-operations-service"], global.c8y["ngx-components"].operations["device-selector"], global.c8y["ngx-components"].operations["operation-summary"]));
})(this, (function (exports, core, rxjs, operators, ngxComponents, lodashEs, details, bulkOperationsService, deviceSelector, operationSummary) { 'use strict';

    var CustomStep = /** @class */ (function () {
        function CustomStep(templateRef) {
            this.templateRef = templateRef;
            this.buttonsDisabled = false;
            this.onNext = function (_a) {
                var stepper = _a.stepper, step = _a.step;
                // steps without own `onNext` handler, e.g. preview steps need to mark themselves as `completed`,
                // otherwise stepper will not allow to move forth from them as soon as the user navigates back
                // and the `c8y-stepper-buttons` component marks the step as incomplete.
                step.completed = true;
                stepper.next();
            };
        }
        return CustomStep;
    }());
    CustomStep.decorators = [
        { type: core.Directive, args: [{ selector: '[customStep]' },] }
    ];
    CustomStep.ctorParameters = function () { return [
        { type: core.TemplateRef }
    ]; };
    CustomStep.propDecorators = {
        label: [{ type: core.Input, args: ['customStep',] }],
        completed: [{ type: core.Input, args: ['customStepCompleted',] }],
        buttonsDisabled: [{ type: core.Input, args: ['customStepButtonsDisabled',] }],
        onNext: [{ type: core.Input, args: ['customStepOnNext',] }]
    };

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    /** @deprecated */
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    /** @deprecated */
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    function __spreadArray(to, from, pack) {
        if (pack || arguments.length === 2)
            for (var i = 0, l = from.length, ar; i < l; i++) {
                if (ar || !(i in from)) {
                    if (!ar)
                        ar = Array.prototype.slice.call(from, 0, i);
                    ar[i] = from[i];
                }
            }
        return to.concat(ar || Array.prototype.slice.call(from));
    }
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, state, kind, f) {
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    }
    function __classPrivateFieldSet(receiver, state, value, kind, f) {
        if (kind === "m")
            throw new TypeError("Private method is not writable");
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    }

    var BulkOperationStepper = /** @class */ (function () {
        function BulkOperationStepper(bulkOperationService, modal, alert) {
            this.bulkOperationService = bulkOperationService;
            this.modal = modal;
            this.alert = alert;
            this.selectionChange = new core.EventEmitter();
            this.steps = [];
            this.showStepper = false;
            this.showButtons = false;
            this.stepperButtonsLabels = { custom: ngxComponents.gettext('Schedule bulk operation') };
            this.deviceTypesSubject$ = new rxjs.Subject();
            this.endSubscriptions = new rxjs.Subject();
            this.deviceTypes$ = this.deviceTypesSubject$.asObservable();
        }
        BulkOperationStepper.prototype.ngAfterViewInit = function () {
            var _this = this;
            setTimeout(function () {
                // wait for the next event loop turn as `steps` has already been checked in this CD cycle
                _this.steps = _this.customSteps.toArray();
                _this.showStepper = true;
                setTimeout(function () {
                    // postpone rendering of buttons for custom steps to the point where custom steps have already been rendered
                    _this.showButtons = true;
                    if (_this.stepper) {
                        _this.stepper.selectionChange.pipe(operators.takeUntil(_this.endSubscriptions)).subscribe(function (event) {
                            _this.selectionChange.next(event);
                        });
                        _this.operationDetailsForm = _this.operationDetailsComponent.fgOperationDescription;
                    }
                });
            });
        };
        BulkOperationStepper.prototype.changeDeviceTypes = function (deviceTypes) {
            if (deviceTypes) {
                this.deviceTypesSubject$.next(Array.isArray(deviceTypes) ? deviceTypes : [deviceTypes]);
            }
            else {
                this.deviceTypesSubject$.next([]);
            }
        };
        BulkOperationStepper.prototype.confirmDeviceSelection = function ($event) {
            return __awaiter(this, void 0, void 0, function () {
                var _a, _b, ex_1, _c, _d;
                return __generator(this, function (_e) {
                    switch (_e.label) {
                        case 0:
                            if (!!this.deviceQueryString) return [3 /*break*/, 8];
                            _e.label = 1;
                        case 1:
                            _e.trys.push([1, 6, , 7]);
                            return [4 /*yield*/, this.modal.confirm(ngxComponents.gettext('All devices selected'), ngxComponents.gettext('You are about to schedule the bulk operation to be executed for all devices. Do you want to proceed?'), ngxComponents.Status.WARNING, { ok: ngxComponents.gettext('Schedule for all devices'), cancel: ngxComponents.gettext('Cancel and select devices') })];
                        case 2:
                            _e.sent();
                            $event.step.completed = true;
                            $event.stepper.next();
                            _a = this;
                            if (!this.retrieveOperationDetails) return [3 /*break*/, 4];
                            return [4 /*yield*/, this.retrieveOperationDetails()];
                        case 3:
                            _b = _e.sent();
                            return [3 /*break*/, 5];
                        case 4:
                            _b = undefined;
                            _e.label = 5;
                        case 5:
                            _a.operationDetails = _b;
                            return [3 /*break*/, 7];
                        case 6:
                            ex_1 = _e.sent();
                            return [3 /*break*/, 7];
                        case 7: return [3 /*break*/, 12];
                        case 8:
                            $event.step.completed = true;
                            $event.stepper.next();
                            _c = this;
                            if (!this.retrieveOperationDetails) return [3 /*break*/, 10];
                            return [4 /*yield*/, this.retrieveOperationDetails()];
                        case 9:
                            _d = _e.sent();
                            return [3 /*break*/, 11];
                        case 10:
                            _d = undefined;
                            _e.label = 11;
                        case 11:
                            _c.operationDetails = _d;
                            _e.label = 12;
                        case 12:
                            this.bulkOperationType = this.bulkOperationService.retrieveBulkOperationType(lodashEs.get(this.operationDetails, 'prototype'));
                            if (this.operationDetailsForm &&
                                lodashEs.get(this.operationDetailsForm, 'controls.description.pristine') &&
                                this.operationDetails) {
                                this.operationDetailsForm.patchValue({
                                    description: lodashEs.get(this.operationDetails, 'prototype.description')
                                });
                            }
                            return [2 /*return*/];
                    }
                });
            });
        };
        BulkOperationStepper.prototype.cancel = function () {
            this.close();
        };
        BulkOperationStepper.prototype.scheduleBulkOperation = function () {
            return __awaiter(this, void 0, void 0, function () {
                var ex_2;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            this.pendingStatus = true;
                            _a.label = 1;
                        case 1:
                            _a.trys.push([1, 3, , 4]);
                            this.operationDetails.prototype.description = lodashEs.get(this.operationDetailsForm, 'controls.description.value');
                            this.operationDetails.note = lodashEs.get(this.operationDetailsForm, 'controls.note.value');
                            this.operationDetails.schedule = lodashEs.get(this.operationDetailsForm, 'controls.schedule.value');
                            return [4 /*yield*/, this.bulkOperationService.scheduleBulkOperation(this.deviceQueryString, this.operationDetails)];
                        case 2:
                            _a.sent();
                            this.alert.success(ngxComponents.gettext('New bulk operation scheduled.'));
                            this.close();
                            return [3 /*break*/, 4];
                        case 3:
                            ex_2 = _a.sent();
                            this.alert.addServerFailure(ex_2);
                            return [3 /*break*/, 4];
                        case 4:
                            this.pendingStatus = false;
                            return [2 /*return*/];
                    }
                });
            });
        };
        BulkOperationStepper.prototype.ngOnDestroy = function () {
            this.endSubscriptions.next();
            this.endSubscriptions.complete();
        };
        BulkOperationStepper.prototype.close = function () {
            this.stepper.reset();
            this.bulkOperationService.returnToBulkOperationOverview();
        };
        return BulkOperationStepper;
    }());
    BulkOperationStepper.decorators = [
        { type: core.Component, args: [{
                    selector: 'c8y-bulk-operation-stepper',
                    template: "<div class=\"fit-h\">\n  <c8y-stepper\n    class=\"flex-col no-align-items fit-h c8y-stepper--no-btns\"\n    linear\n    [disableDefaultIcons]=\"{ edit: true, done: false }\"\n    [customClasses]=\"['col-md-6', 'col-md-offset-3', 'm-t-24', 'm-b-40', 'p-0', 'flex-no-shrink']\"\n    *ngIf=\"showStepper\"\n  >\n    <!-- CUSTOM STEPS 1 to N-2 -->\n    <cdk-step\n      *ngFor=\"let step of steps\"\n      [label]=\"step.label | translate\"\n      [completed]=\"step.completed\"\n    >\n      <ng-container *ngTemplateOutlet=\"step.templateRef\"></ng-container>\n      <c8y-stepper-buttons\n        class=\"d-block card-footer p-24 separator\"\n        *ngIf=\"showButtons\"\n        [disabled]=\"step.buttonsDisabled\"\n        (onNext)=\"step.onNext($event)\"\n        (onCancel)=\"cancel()\"\n      ></c8y-stepper-buttons>\n    </cdk-step>\n    <!-- STEP N-1 - Data-grid -->\n    <cdk-step [label]=\"'Select target devices' | translate\">\n      <div class=\"card-block p-t-0 flex-no-shrink separator-bottom col-xs-12\">\n        <div class=\"row p-b-16\">\n          <div class=\"col-md-6 col-md-offset-3 col-lg-4 col-lg-offset-4\">\n            <h4 class=\"text-center m-b-16\">\n              {{ 'Select target devices' | translate }}\n            </h4>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"col-xs-12 flex-grow no-gutter\">\n        <c8y-device-selector\n          [deviceTypes]=\"deviceTypes$\"\n          (onDeviceQueryStringChange)=\"deviceQueryString = $event\"\n        ></c8y-device-selector>\n      </div>\n      <c8y-stepper-buttons\n        class=\"d-block card-footer p-24 separator\"\n        *ngIf=\"showButtons\"\n        (onNext)=\"confirmDeviceSelection($event)\"\n        (onCancel)=\"cancel()\"\n      ></c8y-stepper-buttons>\n    </cdk-step>\n\n    <!-- STEP N - Scheduler -->\n    <cdk-step [label]=\"'Confirm and schedule bulk operation' | translate\">\n      <div class=\"card-block p-t-0 flex-no-shrink separator-bottom col-xs-12\">\n        <div class=\"row p-b-16\">\n          <div class=\"col-md-6 col-md-offset-3 col-lg-4 col-lg-offset-4\">\n            <h4 class=\"text-center m-b-16\">\n              {{ 'Confirm and schedule bulk operation' | translate }}\n            </h4>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"col-xs-12 flex-grow no-gutter\">\n        <div class=\"card-inner-scroll fit-h\">\n          <div class=\"card-block p-b-0\">\n            <div class=\"text-center p-b-16\">\n              <c8y-operation-summary\n                [name]=\"operationDetails?.name | translate\"\n                [description]=\"operationDetails?.description | translate\"\n                [deviceQueryString]=\"deviceQueryString\"\n              ></c8y-operation-summary>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-md-4 col-md-offset-4\">\n                <c8y-operation-details\n                  [bulkOperationType]=\"bulkOperationType\"\n                ></c8y-operation-details>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <c8y-stepper-buttons\n        class=\"d-block card-footer p-24 separator\"\n        *ngIf=\"showButtons\"\n        [labels]=\"stepperButtonsLabels\"\n        [pending]=\"pendingStatus\"\n        [disabled]=\"operationDetailsForm?.invalid\"\n        (onCancel)=\"cancel()\"\n        (onCustom)=\"scheduleBulkOperation()\"\n      >\n      </c8y-stepper-buttons>\n    </cdk-step>\n  </c8y-stepper>\n</div>\n"
                },] }
    ];
    BulkOperationStepper.ctorParameters = function () { return [
        { type: bulkOperationsService.BulkOperationsService },
        { type: ngxComponents.ModalService },
        { type: ngxComponents.AlertService }
    ]; };
    BulkOperationStepper.propDecorators = {
        selectionChange: [{ type: core.Output }],
        customSteps: [{ type: core.ContentChildren, args: [CustomStep,] }],
        stepper: [{ type: core.ViewChild, args: [ngxComponents.C8yStepper, { static: false },] }],
        operationDetailsComponent: [{ type: core.ViewChild, args: [details.OperationDetailsComponent, { static: false },] }]
    };

    var BaseStepperComponent = /** @class */ (function () {
        function BaseStepperComponent() {
            /**
             * A map holding step data. The order of properties need to match the order of
             * the steps they hold data for as the index of the property is used to clear
             * step data when navigating forth after changing data at an earlier step.
             */
            this.stepData = {};
            this.endSubscriptions = new rxjs.Subject();
        }
        Object.defineProperty(BaseStepperComponent.prototype, "deviceTypes", {
            set: function (deviceTypes) {
                if (this.operationStepper) {
                    this.operationStepper.changeDeviceTypes(deviceTypes);
                }
            },
            enumerable: false,
            configurable: true
        });
        BaseStepperComponent.prototype.ngOnInit = function () {
            this.operationStepper.retrieveOperationDetails = this.retrieveOperationPrototype.bind(this);
            this.operationStepper.selectionChange
                .pipe(operators.takeUntil(this.endSubscriptions))
                .subscribe(this.onSelectionChange.bind(this));
        };
        BaseStepperComponent.prototype.ngOnDestroy = function () {
            this.endSubscriptions.next();
            this.endSubscriptions.complete();
        };
        BaseStepperComponent.prototype.onSelectionChange = function (event) {
            var selectedIndex = event.selectedIndex, previouslySelectedIndex = event.previouslySelectedIndex;
            if (selectedIndex > previouslySelectedIndex &&
                selectedIndex < Object.keys(this.stepData).length) {
                // TODO clear step data only if previous step is "dirty"
                this.stepData[this.getStepDataKeyByIndex(selectedIndex)] = undefined;
            }
        };
        BaseStepperComponent.prototype.getStepDataKeyByIndex = function (index) {
            return Object.keys(this.stepData)[index];
        };
        return BaseStepperComponent;
    }());
    BaseStepperComponent.propDecorators = {
        operationStepper: [{ type: core.ViewChild, args: [BulkOperationStepper, { static: true },] }]
    };

    /**
     * This module provides base stepper class and stepper wrapper component.
     */
    var BulkOperationStepperModule = /** @class */ (function () {
        function BulkOperationStepperModule() {
        }
        return BulkOperationStepperModule;
    }());
    BulkOperationStepperModule.decorators = [
        { type: core.NgModule, args: [{
                    imports: [ngxComponents.CoreModule, deviceSelector.DeviceSelectorModule, details.OperationDetailsModule, operationSummary.OperationSummaryModule],
                    declarations: [BulkOperationStepper, CustomStep],
                    exports: [BulkOperationStepper, CustomStep]
                },] }
    ];

    /**
     * Generated bundle index. Do not edit.
     */

    exports.BaseStepperComponent = BaseStepperComponent;
    exports.BulkOperationStepper = BulkOperationStepper;
    exports.BulkOperationStepperModule = BulkOperationStepperModule;
    exports.CustomStep = CustomStep;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=c8y-ngx-components-operations-bulk-operation-stepper.umd.js.map
