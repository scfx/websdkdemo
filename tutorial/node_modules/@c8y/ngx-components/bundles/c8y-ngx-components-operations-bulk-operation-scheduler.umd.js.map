{"version":3,"file":"c8y-ngx-components-operations-bulk-operation-scheduler.umd.js","sources":["../../operations/bulk-operation-scheduler/operation-scheduler.component.ts","../../operations/bulk-operation-scheduler/bulk-operation-scheduler.module.ts","../../operations/bulk-operation-scheduler/c8y-ngx-components-operations-bulk-operation-scheduler.ts"],"names":["gettext","Validators","throttleTime","isEmpty","Component","NG_VALUE_ACCESSOR","forwardRef","NG_VALIDATORS","FormBuilder","Input","NgModule","CoreModule","ReactiveFormsModule","BsDatepickerModule","TimepickerModule"],"mappings":"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","sourcesContent":["import { Component, forwardRef, Input, OnDestroy, OnInit } from '@angular/core';\nimport {\n  ControlValueAccessor,\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  NG_VALIDATORS,\n  NG_VALUE_ACCESSOR,\n  ValidationErrors,\n  Validator,\n  Validators\n} from '@angular/forms';\nimport { gettext } from '@c8y/ngx-components';\nimport { isEmpty } from 'lodash-es';\nimport { Subscription } from 'rxjs';\nimport { throttleTime } from 'rxjs/operators';\nimport { OperationSchedule } from './operation-schedule.interface';\n\n@Component({\n  selector: 'c8y-operation-scheduler',\n  templateUrl: 'operation-scheduler.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => OperationSchedulerComponent)\n    },\n    {\n      provide: NG_VALIDATORS,\n      multi: true,\n      useExisting: forwardRef(() => OperationSchedulerComponent)\n    }\n  ]\n})\nexport class OperationSchedulerComponent\n  implements ControlValueAccessor, Validator, OnInit, OnDestroy {\n  @Input('minutesAhead') set _minutesAhead(minutes: number) {\n    if (minutes && minutes > this.MINUTES_AHEAD_DEFAULT) {\n      this.minutesAhead = minutes;\n    }\n  }\n  @Input('delayConfig') set _delayConfig(config: { seconds: number; milliseconds: number }) {\n    if (config) {\n      if (config.seconds > this.DELAY_SECONDS_DEFAULT) {\n        this.delaySeconds = config.seconds;\n      }\n\n      if (config.milliseconds > this.DELAY_MILLISECONDS_DEFAULT) {\n        this.delayMilliseconds = config.milliseconds;\n      }\n    }\n  }\n\n  placeholder: string = gettext('Start date');\n  fgOperationScheduler: FormGroup;\n  minDate: Date;\n  minDelay: number;\n  delayErrors: ValidationErrors = null;\n  pickerErrors: ValidationErrors = null;\n\n  private readonly DELAY_SECONDS_DEFAULT: number = 1;\n  private readonly DELAY_MILLISECONDS_DEFAULT: number = 1;\n  private readonly MINUTES_AHEAD_DEFAULT: number = 5;\n  private delaySeconds: number = this.DELAY_SECONDS_DEFAULT;\n  private delayMilliseconds: number = this.DELAY_MILLISECONDS_DEFAULT;\n  private minutesAhead: number = this.MINUTES_AHEAD_DEFAULT;\n  private currentUnit: string = 'seconds';\n  private delayInSeconds: number;\n  private initialDate: Date;\n  private subscription: Subscription;\n\n  private onChange: (name) => void;\n  private onTouched: () => void;\n  private onValidatorChanged: () => void;\n\n  constructor(private formBuilder: FormBuilder) {}\n\n  ngOnInit() {\n    this.minDate = new Date();\n    this.initialDate = new Date(\n      this.minDate.setMinutes(this.minDate.getMinutes() + this.minutesAhead)\n    );\n    this.minDelay = this.delaySeconds;\n\n    this.fgOperationScheduler = this.formBuilder.group({\n      picker: ['', [Validators.required, this.dateValidation]],\n      time: ['', [Validators.required, this.timeValidation]],\n      delay: ['', [Validators.required, Validators.min(this.minDelay)]],\n      unit: ['seconds']\n    });\n\n    this.fgOperationScheduler.patchValue({\n      picker: this.initialDate,\n      time: this.initialDate,\n      delay: this.minDelay\n    });\n\n    // Due to the validation of picker and time it could be possible that value changes\n    // are emitted more than once. Therefore we throttle the emits.\n    const valueChanges$ = this.fgOperationScheduler.valueChanges.pipe(throttleTime(100));\n    this.subscription = valueChanges$.subscribe(data => {\n      this.delayErrors = this.fgOperationScheduler.controls.delay.errors;\n      this.pickerErrors = this.fgOperationScheduler.controls.picker.errors;\n      this.convertDelayHandler(data.unit);\n      this.emitData(data);\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.subscription && !this.subscription.closed) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n  writeValue(value: OperationSchedule): void {\n    if (value) {\n      this.fgOperationScheduler.patchValue({\n        picker: value.scheduledDate,\n        time: value.scheduledDate,\n        delay: value.delayInSeconds > 1 ? value.delayInSeconds : value.delayInSeconds * 1000,\n        unit: value.delayInSeconds > 1 ? 'seconds' : 'milliseconds'\n      });\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    isDisabled ? this.fgOperationScheduler.disable() : this.fgOperationScheduler.enable();\n  }\n\n  validate(): ValidationErrors {\n    if (this.fgOperationScheduler.invalid) {\n      return {\n        ...this.fgOperationScheduler.controls.picker.errors,\n        ...this.fgOperationScheduler.controls.time.errors,\n        ...this.fgOperationScheduler.controls.delay.errors\n      };\n    }\n  }\n\n  registerOnValidatorChange(fn: any) {\n    this.onValidatorChanged = fn;\n  }\n\n  markAsTouched(): void {\n    if (this.onTouched) {\n      this.onTouched();\n    }\n  }\n\n  convertDelayHandler(unit: string) {\n    if (this.currentUnit === unit) {\n      return;\n    }\n\n    this.currentUnit = unit;\n    this.convertDelay(this.currentUnit);\n\n    // update validator on delay control to make sure that\n    // switching from minutes to seconds or vice versa does not harm validation.\n    this.fgOperationScheduler.controls.delay.setValidators([Validators.required]);\n    this.fgOperationScheduler.controls.delay.updateValueAndValidity();\n  }\n\n  emitData(data: { delayInSeconds: number; picker: Date; time?: Date; delay?: number }) {\n    if (this.onValidatorChanged) {\n      this.onValidatorChanged();\n    }\n\n    if (data.picker && data.time) {\n      data.picker = this.combineDateAndTime(data.picker, data.time);\n    }\n\n    this.convertDelay(this.currentUnit);\n    data.delayInSeconds = this.delayInSeconds;\n\n    if (this.onChange) {\n      this.onChange({\n        delayInSeconds: data.delayInSeconds,\n        scheduledDate: data.picker\n      });\n    }\n  }\n\n  private convertDelay(unit: string) {\n    if (unit && this.fgOperationScheduler.controls.delay.value) {\n      this.delayMilliseconds = this.fgOperationScheduler.controls.delay.value;\n      if (unit === 'milliseconds') {\n        this.minDelay =\n          this.delayMilliseconds > this.DELAY_MILLISECONDS_DEFAULT\n            ? this.delayMilliseconds\n            : this.DELAY_MILLISECONDS_DEFAULT;\n        this.delayInSeconds = this.fgOperationScheduler.controls.delay.value / 1000;\n      } else {\n        this.delaySeconds = this.fgOperationScheduler.controls.delay.value;\n        this.minDelay =\n          this.delaySeconds > this.DELAY_SECONDS_DEFAULT\n            ? this.delaySeconds\n            : this.DELAY_SECONDS_DEFAULT;\n        this.delayInSeconds = this.fgOperationScheduler.controls.delay.value;\n      }\n    }\n  }\n\n  private combineDateAndTime(date: Date, time: Date) {\n    return new Date(\n      date.getFullYear(),\n      date.getMonth(),\n      date.getDate(),\n      time.getHours(),\n      time.getMinutes()\n    );\n  }\n\n  private dateValidation(fControl: FormControl) {\n    if (fControl.value) {\n      const date = fControl.value as Date;\n      fControl.parent.get('time').setValue(date);\n      return date >= new Date()\n        ? null\n        : {\n            dateValidation: true\n          };\n    }\n    return { dateValidation: true };\n  }\n\n  private timeValidation(fControl: FormControl) {\n    if (fControl.value) {\n      const date = fControl.value as Date;\n      const result =\n        date >= new Date()\n          ? null\n          : {\n              dateValidation: true\n            };\n\n      const picker = fControl.parent.get('picker');\n\n      if (result) {\n        picker.setErrors(result);\n        picker.markAsTouched();\n        return result;\n      }\n\n      if (picker && picker.errors && picker.errors.dateValidation) {\n        delete picker.errors.dateValidation;\n\n        if (isEmpty(picker.errors)) {\n          picker.setErrors(null);\n          return result;\n        }\n\n        picker.setErrors(picker.errors);\n      }\n      return result;\n    }\n    return { dateValidation: true };\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CoreModule } from '@c8y/ngx-components';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { TimepickerModule } from 'ngx-bootstrap/timepicker';\nimport { OperationSchedulerComponent } from './operation-scheduler.component';\n\n/**\n * This module provides components for scheduling bulk operations.\n */\n@NgModule({\n  imports: [\n    CoreModule,\n    ReactiveFormsModule,\n    BsDatepickerModule.forRoot(),\n    TimepickerModule.forRoot()\n  ],\n  providers: [],\n  declarations: [OperationSchedulerComponent],\n  entryComponents: [OperationSchedulerComponent],\n  exports: [OperationSchedulerComponent]\n})\nexport class BulkOperationSchedulerModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}