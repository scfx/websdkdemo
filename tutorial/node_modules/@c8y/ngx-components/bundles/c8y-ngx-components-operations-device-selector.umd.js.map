{"version":3,"file":"c8y-ngx-components-operations-device-selector.umd.js","sources":["../../operations/device-selector/device-selector.component.ts","../../operations/device-selector/device-selector.module.ts","../../operations/device-selector/c8y-ngx-components-operations-device-selector.ts"],"names":["TypeDeviceGridColumn","EventEmitter","StatusDeviceGridColumn","NameDeviceGridColumn","ModelDeviceGridColumn","GroupDeviceGridColumn","RegistrationDateDeviceGridColumn","AlarmsDeviceGridColumn","Subject","distinctUntilChanged","takeUntil","FilteringActionType","Component","ViewChild","DeviceGridComponent","Input","Output","NgModule","CoreModule","DeviceGridModule"],"mappings":";;;;;;;;;QAuBA;AACwB,YAUtB,eAAU,GAAW,IAAIA,+BAAoB,EAAE,CAAC;AAClD,YAEE,8BAAyB,GAAyB,IAAIC,iBAAY,EAAU,CAAC;AAC/E,YACE,YAAO,GAAa;AACtB,gBAAI,IAAIC,iCAAsB,EAAE;AAChC,gBAAI,IAAIC,+BAAoB,EAAE;AAC9B,gBAAI,IAAI,CAAC,UAAU;AACnB,gBAAI,IAAIC,gCAAqB,EAAE;AAC/B,gBAAI,IAAIC,gCAAqB,EAAE;AAC/B,gBAAI,IAAIC,2CAAgC,EAAE;AAC1C,gBAAI,IAAIC,iCAAsB,EAAE;AAChC,aAAG,CAAC;AACJ,YACU,iBAAY,GAAqB,IAAIC,YAAO,EAAE,CAAC;AACzD,SAgCC;AACD,QAhCE,0CAAQ,GAAR;AAAc,YAAd,iBAyBC;AACH,YAzBI,IAAI,IAAI,CAAC,WAAW,EAAE;AAC1B,gBAAM,IAAI,CAAC,WAAW;AACtB,qBAAS,IAAI,CACHC,8BAAoB,EAAE,EACtBC,mBAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAC7B;AACT,qBAAS,SAAS,CAAC,UAAC,KAAe;AAAI,oBAC7B,KAAI,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE;AAClE,wBAAY,IAAI,EACF,KAAK,IAAI,KAAK,CAAC,MAAM;AACnC,8BAAkBC,iCAAmB,CAAC,WAAW;AACjD,8BAAkBA,iCAAmB,CAAC,WAAW;AACjD,wBAAY,OAAO,EAAE,KAAK;AAC1B,8BAAgB;AAChB,gCAAkB,iBAAiB,EAAE;AACrC,oCAAoB,mBAAmB,EAAE;AACzC,wCAAsB,KAAK,OAAA;AAC3B,qCAAqB;AACrB,iCAAmB;AACnB,6BAAiB;AACjB,8BAAgB,SAAS;AACzB,qBAAW,CAAC,CAAC;AACb,iBAAS,CAAC,CAAC;AACX,aAAK;AACL,SAAG;AAEH,QAAE,6CAAW,GAAX;AAAc,YACZ,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACjC,YAAI,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;AACjC,SAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBACH;AAAC;AACsC,SAxD9B;AAAC;YAJTC,cAAS,SAAC,sBACT,QAAQ,EAAE,qBAAqB,xFAGwB,6BACtDC,cAAS,SAACC,8BAAmB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;GAHhD,HAIG,8BAEFC,UAAK;AACN,4CAICC,WAAM;AACR;AAAO;AAAC,IChCT;AACA;AAEA;AAAQ;AAEK,QAGb;AAAkC;;uFDYa;MAC9C;;;;;;;;;gQCZK;AAAC;AAAqC,SADnC;AAAC;AAAC,ICbX;AACA;GDOCC,HCLD;AACO;ODIE,SAAC,sBACR,OAAO,EAAE,CAACC,hDCLJ;SDKc,EAAEC,2BAAgB,CAAC,vCCJK;AAAyD;GDKrG,YAAY,EAAE,CAAC,uBAAuB,CAAC,sBACvC,hECNsG;AAAmE;GDMlK,HCNmK;ADMjK,CAAC,uBAAuB,CAAC,kBACnC,3CCPgL","sourcesContent":["import {\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild\n} from '@angular/core';\nimport {\n  AlarmsDeviceGridColumn,\n  DeviceGridComponent,\n  GroupDeviceGridColumn,\n  ModelDeviceGridColumn,\n  NameDeviceGridColumn,\n  RegistrationDateDeviceGridColumn,\n  StatusDeviceGridColumn,\n  TypeDeviceGridColumn\n} from '@c8y/ngx-components/device-grid';\nimport { Column, FilteringActionType } from '@c8y/ngx-components';\nimport { Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'c8y-device-selector',\n  templateUrl: 'device-selector.component.html'\n})\nexport class DeviceSelectorComponent implements OnInit, OnDestroy {\n  @ViewChild(DeviceGridComponent, { static: true })\n  deviceGrid: DeviceGridComponent;\n\n  @Input()\n  deviceTypes: Observable<string[]>;\n\n  typeColumn: Column = new TypeDeviceGridColumn();\n\n  @Output()\n  onDeviceQueryStringChange: EventEmitter<string> = new EventEmitter<string>();\n\n  columns: Column[] = [\n    new StatusDeviceGridColumn(),\n    new NameDeviceGridColumn(),\n    this.typeColumn,\n    new ModelDeviceGridColumn(),\n    new GroupDeviceGridColumn(),\n    new RegistrationDateDeviceGridColumn(),\n    new AlarmsDeviceGridColumn()\n  ];\n\n  private unsubscribe$: Subject<boolean> = new Subject();\n\n  ngOnInit(): void {\n    if (this.deviceTypes) {\n      this.deviceTypes\n        .pipe(\n          distinctUntilChanged(),\n          takeUntil(this.unsubscribe$)\n        )\n        .subscribe((types: string[]) => {\n          this.deviceGrid.updateFiltering([this.typeColumn.name], {\n            type:\n              types && types.length\n                ? FilteringActionType.ApplyFilter\n                : FilteringActionType.ResetFilter,\n            payload: types\n              ? {\n                  filteringModifier: {\n                    externalFilterQuery: {\n                      types\n                    }\n                  }\n                }\n              : undefined\n          });\n        });\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.unsubscribe$.next(true);\n    this.unsubscribe$.complete();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CoreModule } from '@c8y/ngx-components';\nimport { DeviceGridModule } from '@c8y/ngx-components/device-grid';\nimport { DeviceSelectorComponent } from './device-selector.component';\n\n/**\n * This module provides a component for selecting devices based on filters.\n */\n@NgModule({\n  imports: [CoreModule, DeviceGridModule],\n  declarations: [DeviceSelectorComponent],\n  exports: [DeviceSelectorComponent]\n})\nexport class DeviceSelectorModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}