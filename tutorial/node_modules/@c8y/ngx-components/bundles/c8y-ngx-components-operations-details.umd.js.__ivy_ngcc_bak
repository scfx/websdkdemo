(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/forms'), require('@c8y/ngx-components'), require('lodash-es'), require('@c8y/ngx-components/operations/bulk-operations-service'), require('@c8y/ngx-components/operations/bulk-operation-scheduler')) :
    typeof define === 'function' && define.amd ? define('@c8y/ngx-components/operations/details', ['exports', '@angular/core', '@angular/forms', '@c8y/ngx-components', 'lodash-es', '@c8y/ngx-components/operations/bulk-operations-service', '@c8y/ngx-components/operations/bulk-operation-scheduler'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.c8y = global.c8y || {}, global.c8y["ngx-components"] = global.c8y["ngx-components"] || {}, global.c8y["ngx-components"].operations = global.c8y["ngx-components"].operations || {}, global.c8y["ngx-components"].operations.details = {}), global.ng.core, global.ng.forms, global.c8y["ngx-components"], global.lodashEs, global.c8y["ngx-components"].operations["bulk-operations-service"], global.c8y["ngx-components"].operations["bulk-operation-scheduler"]));
})(this, (function (exports, core, forms, ngxComponents, lodashEs, bulkOperationsService, bulkOperationScheduler) { 'use strict';

    var OperationDetailsComponent = /** @class */ (function () {
        function OperationDetailsComponent(formBuilder) {
            var _a;
            this.formBuilder = formBuilder;
            this.titlePlaceholder = ngxComponents.gettext('e.g. Reset factory settings');
            this.descriptionPlaceholder = ngxComponents.gettext('e.g. Reset factory settings of all devices of model XYZ');
            this.placeholders = (_a = {},
                _a[bulkOperationsService.BulkOperationType.SOFTWARE] = {
                    title: ngxComponents.gettext('e.g. Cloud connectivity software'),
                    description: ngxComponents.gettext('e.g. Cloud connectivity software applied to devices with type c8y_Linux')
                },
                _a[bulkOperationsService.BulkOperationType.FIRMWARE] = {
                    title: ngxComponents.gettext('e.g. Firmware for hardware revision b'),
                    description: ngxComponents.gettext('e.g. Firmware for hardware revision b applied to devices with type c8y_Linux')
                },
                _a[bulkOperationsService.BulkOperationType.CONFIGURATION] = {
                    title: ngxComponents.gettext('e.g. Host configuration c8y_Linux'),
                    description: ngxComponents.gettext('e.g. Host configuration applied to devices with type c8y_Linux')
                },
                _a[bulkOperationsService.BulkOperationType.DEVICE_PROFILE] = {
                    title: ngxComponents.gettext('e.g. Device profile for c8y_Linux devices'),
                    description: ngxComponents.gettext('e.g. Device profile applied to devices with type c8y_Linux')
                },
                _a);
        }
        Object.defineProperty(OperationDetailsComponent.prototype, "bulkOperationType", {
            set: function (bulkOperationType) {
                this.titlePlaceholder = lodashEs.get(this.placeholders[bulkOperationType], 'title');
                this.descriptionPlaceholder = lodashEs.get(this.placeholders[bulkOperationType], 'description');
            },
            enumerable: false,
            configurable: true
        });
        OperationDetailsComponent.prototype.ngOnInit = function () {
            var config = {
                description: ['', forms.Validators.required],
                note: [''],
                schedule: []
            };
            this.fgOperationDescription = this.formBuilder.group(config);
        };
        return OperationDetailsComponent;
    }());
    OperationDetailsComponent.decorators = [
        { type: core.Component, args: [{
                    selector: 'c8y-operation-details',
                    template: "<div [formGroup]=\"fgOperationDescription\">\n  <c8y-form-group>\n    <label translate>Title</label>\n    <input\n      formControlName=\"description\"\n      class=\"form-control\"\n      [placeholder]=\"titlePlaceholder | translate\"\n      required\n    />\n    <c8y-messages *ngIf=\"fgOperationDescription?.controls?.description?.errors\">\n      <c8y-message *ngIf=\"fgOperationDescription.controls.description.errors.required\" translate>\n        This field is required.\n      </c8y-message>\n    </c8y-messages>\n  </c8y-form-group>\n  <c8y-form-group>\n    <label translate>Description</label>\n    <textarea\n      formControlName=\"note\"\n      class=\"form-control\"\n      [placeholder]=\"descriptionPlaceholder | translate\"\n      rows=\"3\"\n    ></textarea>\n  </c8y-form-group>\n  <c8y-operation-scheduler formControlName=\"schedule\"></c8y-operation-scheduler>\n</div>\n"
                },] }
    ];
    OperationDetailsComponent.ctorParameters = function () { return [
        { type: forms.FormBuilder }
    ]; };
    OperationDetailsComponent.propDecorators = {
        bulkOperationType: [{ type: core.Input }]
    };

    /**
     * This module provides a component for entering operation details.
     */
    var OperationDetailsModule = /** @class */ (function () {
        function OperationDetailsModule() {
        }
        return OperationDetailsModule;
    }());
    OperationDetailsModule.decorators = [
        { type: core.NgModule, args: [{
                    imports: [ngxComponents.CoreModule, ngxComponents.FormsModule, forms.ReactiveFormsModule, bulkOperationScheduler.BulkOperationSchedulerModule],
                    declarations: [OperationDetailsComponent],
                    exports: [OperationDetailsComponent]
                },] }
    ];

    /**
     * Generated bundle index. Do not edit.
     */

    exports.OperationDetailsComponent = OperationDetailsComponent;
    exports.OperationDetailsModule = OperationDetailsModule;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=c8y-ngx-components-operations-details.umd.js.map
