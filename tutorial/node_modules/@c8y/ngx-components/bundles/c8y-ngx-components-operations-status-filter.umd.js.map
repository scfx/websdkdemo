{"version":3,"file":"c8y-ngx-components-operations-status-filter.umd.js","sources":["../../operations/status-filter/status-filter.component.ts","../../operations/status-filter/status-filter.module.ts","../../operations/status-filter/c8y-ngx-components-operations-status-filter.ts"],"names":["EventEmitter","coerceBooleanProperty","Component","Input","HostBinding","Output","NgModule","CoreModule","TooltipModule","BsDropdownModule"],"mappings":"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","sourcesContent":["import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { IStatusOption } from './status-option.model';\n\n@Component({\n  selector: 'c8y-status-filter',\n  templateUrl: './status-filter.component.html'\n})\nexport class StatusFilterComponent {\n  statusOptions: Array<{ selected: boolean; option: IStatusOption }> = [];\n\n  /** List of filter options to be displayed */\n  @Input() set options(options: IStatusOption[]) {\n    this.statusOptions = (options || []).map(option => ({ selected: false, option }));\n  }\n\n  /**\n   * Allows multiple options to be active simultaneosly.\n   */\n  @Input('multiple') set _multiple(multiple: boolean) {\n    this.multiple = coerceBooleanProperty(multiple);\n  }\n\n  /** Display the filter as a small button group */\n  @Input('small') set _small(small: boolean) {\n    this.small = coerceBooleanProperty(small);\n  }\n\n  @HostBinding('class.btn-group-sm') get displaySmall() {\n    return this.small;\n  }\n\n  @Output() onFilterChanged: EventEmitter<IStatusOption[]> = new EventEmitter();\n\n  isAllButtonSelected: boolean = true;\n\n  private multiple: boolean;\n  private small: boolean;\n\n  changeFilter(option: { selected: boolean; option: IStatusOption }) {\n    this.isAllButtonSelected = false;\n    let emitNeeded: boolean = false;\n\n    if (this.multiple) {\n      option.selected = !option.selected;\n      emitNeeded = true;\n    } else if (!option.selected) {\n      option.selected = true;\n      this.statusOptions.filter(op => op !== option).forEach(op => (op.selected = false));\n      emitNeeded = true;\n    }\n\n    if (emitNeeded) {\n      this.emitSelectedOptions();\n    }\n  }\n\n  removeFilter() {\n    this.isAllButtonSelected = true;\n    this.statusOptions.forEach(op => (op.selected = false));\n\n    this.emitSelectedOptions();\n  }\n\n  /**\n   * Allows the filter to be initalliy displayed with some preset filters.\n   *\n   * @param filters An `IStatusOption` array defining filter options to be preset.\n   * @param emit  (optional) If `true` component will emit `onFilterChanged` event.\n   */\n  preset(filters: IStatusOption[], emit: boolean = true) {\n    let firstSelected: boolean = false;\n\n    this.statusOptions.forEach(option => (option.selected = false));\n\n    this.statusOptions\n      .filter(option => (filters || []).map(o => o.label).includes(option.option.label))\n      .filter(() => {\n        // only first option passed will be set in single selection mode\n        const include: boolean = this.multiple || !firstSelected;\n        if (include) {\n          firstSelected = true;\n        }\n\n        return include;\n      })\n      .forEach(option => (option.selected = true));\n\n    this.isAllButtonSelected = !(filters && filters.length);\n\n    if (emit) {\n      this.emitSelectedOptions();\n    }\n  }\n\n  reset() {\n    this.removeFilter();\n  }\n\n  activeFilters(): IStatusOption[] {\n    return this.statusOptions.filter(option => option.selected).map(option => option.option);\n  }\n\n  isFilterApplied(): boolean {\n    return this.statusOptions.some(option => option.selected);\n  }\n\n  private emitSelectedOptions() {\n    this.onFilterChanged.emit(\n      this.statusOptions.filter(option => option.selected).map(option => option.option)\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { CoreModule } from '@c8y/ngx-components';\nimport { StatusFilterComponent } from './status-filter.component';\n\n/**\n * This module provides a component for selecting status filter.\n */\n@NgModule({\n  imports: [CoreModule, TooltipModule, BsDropdownModule],\n  declarations: [StatusFilterComponent],\n  entryComponents: [StatusFilterComponent],\n  exports: [StatusFilterComponent]\n})\nexport class StatusFilterModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}