(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(require('@angular/core'),require('@c8y/client'),require('@c8y/ngx-components'),require('@angular/router'),require('@angular/common'),require('ngx-bootstrap/tooltip'),require('@c8y/ngx-components/repository'),require('ngx-bootstrap/dropdown'),exports, require('@angular/core'), require('@c8y/client'), require('@c8y/ngx-components'), require('lodash-es'), require('rxjs/operators'), require('@angular/router'), require('rxjs'), require('@angular/common'), require('ngx-bootstrap/tooltip'), require('ngx-bootstrap/dropdown'), require('@c8y/ngx-components/repository')) :
    typeof define === 'function' && define.amd ? define('@c8y/ngx-components/diagnostics', ['@angular/core','@c8y/client','@c8y/ngx-components','@angular/router','@angular/common','ngx-bootstrap/tooltip','@c8y/ngx-components/repository','ngx-bootstrap/dropdown','exports', '@angular/core', '@c8y/client', '@c8y/ngx-components', 'lodash-es', 'rxjs/operators', '@angular/router', 'rxjs', '@angular/common', 'ngx-bootstrap/tooltip', 'ngx-bootstrap/dropdown', '@c8y/ngx-components/repository'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.ng.core,global.c8y.client,global.c8y.ngxComponents,global.ng.router,global.ng.common,global.ngxBootstrap.tooltip,global.c8y.ngxComponents.repository,global.ngxBootstrap.dropdown,(global.c8y = global.c8y || {}, global.c8y["ngx-components"] = global.c8y["ngx-components"] || {}, global.c8y["ngx-components"].diagnostics = {}), global.ng.core, global.client, global.c8y["ngx-components"], global.lodashEs, global.rxjs.operators, global.ng.router, global.rxjs, global.ng.common, global.tooltip, global.dropdown, global.c8y["ngx-components"].repository));
})(this, (function (ɵngcc0,ɵngcc1,ɵngcc2,ɵngcc3,ɵngcc4,ɵngcc5,ɵngcc6,ɵngcc7,exports, core, client, ngxComponents, lodashEs, operators, router, rxjs, common, tooltip, dropdown, repository) { 
function DiagnosticsComponent_div_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 7);
    ɵngcc0.ɵɵelementStart(1, "div", 8);
    ɵngcc0.ɵɵelementStart(2, "div", 9);
    ɵngcc0.ɵɵelementStart(3, "label");
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵpipe(5, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(6, "div", 10);
    ɵngcc0.ɵɵelementStart(7, "div", 11);
    ɵngcc0.ɵɵelement(8, "i", 12);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(9, "div", 13);
    ɵngcc0.ɵɵelementStart(10, "div", 14);
    ɵngcc0.ɵɵelementStart(11, "div", 15);
    ɵngcc0.ɵɵtext(12);
    ɵngcc0.ɵɵpipe(13, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(14, "div", 16);
    ɵngcc0.ɵɵtext(15);
    ɵngcc0.ɵɵpipe(16, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(5, 3, "Date"));
    ɵngcc0.ɵɵadvance(8);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(13, 5, "Event"));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(16, 7, "File"));
} }
function DiagnosticsComponent_ng_template_8_div_13_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 22);
    ɵngcc0.ɵɵelementStart(1, "div", 23);
    ɵngcc0.ɵɵelementStart(2, "span", 24);
    ɵngcc0.ɵɵtext(3, " File ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(4, "span", 25);
    ɵngcc0.ɵɵelement(5, "c8y-file-download", 26);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var operation_r3 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵpropertyInterpolate("title", operation_r3.c8y_DiagnosticReport.file);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("url", operation_r3.c8y_DiagnosticReport.file);
} }
function DiagnosticsComponent_ng_template_8_c8y_li_action_14_Template(rf, ctx) { if (rf & 1) {
    var _r10 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "c8y-li-action", 27);
    ɵngcc0.ɵɵlistener("click", function DiagnosticsComponent_ng_template_8_c8y_li_action_14_Template_c8y_li_action_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r10); var operation_r3 = ɵngcc0.ɵɵnextContext().$implicit; var ctx_r8 = ɵngcc0.ɵɵnextContext(); return ctx_r8.onCancel(operation_r3); });
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵpropertyInterpolate("label", ɵngcc0.ɵɵpipeBind1(1, 1, "Cancel"));
} }
function DiagnosticsComponent_ng_template_8_c8y_li_action_15_Template(rf, ctx) { if (rf & 1) {
    var _r13 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "c8y-li-action", 28);
    ɵngcc0.ɵɵlistener("click", function DiagnosticsComponent_ng_template_8_c8y_li_action_15_Template_c8y_li_action_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r13); var operation_r3 = ɵngcc0.ɵɵnextContext().$implicit; var ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11.onDelete(operation_r3); });
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵpropertyInterpolate("label", ɵngcc0.ɵɵpipeBind1(1, 1, "Delete"));
} }
function DiagnosticsComponent_ng_template_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "c8y-li-timeline");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "c8yDate");
    ɵngcc0.ɵɵelementStart(3, "c8y-li");
    ɵngcc0.ɵɵelementStart(4, "c8y-li-icon");
    ɵngcc0.ɵɵelement(5, "i", 17);
    ɵngcc0.ɵɵpipe(6, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(7, "c8y-li-body", 14);
    ɵngcc0.ɵɵelementStart(8, "div", 15);
    ɵngcc0.ɵɵelementStart(9, "p", 18);
    ɵngcc0.ɵɵpipe(10, "translate");
    ɵngcc0.ɵɵtext(11);
    ɵngcc0.ɵɵpipe(12, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(13, DiagnosticsComponent_ng_template_8_div_13_Template, 6, 2, "div", 19);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(14, DiagnosticsComponent_ng_template_8_c8y_li_action_14_Template, 2, 3, "c8y-li-action", 20);
    ɵngcc0.ɵɵtemplate(15, DiagnosticsComponent_ng_template_8_c8y_li_action_15_Template, 2, 3, "c8y-li-action", 21);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var operation_r3 = ctx.$implicit;
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 9, operation_r3.creationTime), " ");
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵproperty("c8yIcon", ctx_r1.statusIcons[operation_r3.status])("ngClass", ctx_r1.statusClasses[operation_r3.status])("tooltip", ɵngcc0.ɵɵpipeBind1(6, 11, operation_r3.status == null ? null : operation_r3.status.toString()));
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(10, 13, operation_r3.description));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(12, 15, operation_r3.description), " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", operation_r3.c8y_DiagnosticReport == null ? null : operation_r3.c8y_DiagnosticReport.file);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", operation_r3.status === "PENDING");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", operation_r3.status === "SUCCESSFUL");
} }
function DiagnosticsComponent_div_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 29);
    ɵngcc0.ɵɵelementStart(1, "h1", 30);
    ɵngcc0.ɵɵelement(2, "i", 2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "h3", 3);
    ɵngcc0.ɵɵtext(4, "No diagnostic files available.");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} }
'use strict';

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    /** @deprecated */
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    /** @deprecated */
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    function __spreadArray(to, from, pack) {
        if (pack || arguments.length === 2)
            for (var i = 0, l = from.length, ar; i < l; i++) {
                if (ar || !(i in from)) {
                    if (!ar)
                        ar = Array.prototype.slice.call(from, 0, i);
                    ar[i] = from[i];
                }
            }
        return to.concat(ar || Array.prototype.slice.call(from));
    }
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, state, kind, f) {
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    }
    function __classPrivateFieldSet(receiver, state, value, kind, f) {
        if (kind === "m")
            throw new TypeError("Private method is not writable");
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    }

    var DiagnosticsService = /** @class */ (function () {
        function DiagnosticsService(operationService, inventoryBinary, modalService, alertService) {
            this.operationService = operationService;
            this.inventoryBinary = inventoryBinary;
            this.modalService = modalService;
            this.alertService = alertService;
            this.fragment = 'c8y_DiagnosticReport';
        }
        DiagnosticsService.prototype.isSupportedDevice = function (device) {
            var supportedOperations = (device && device.c8y_SupportedOperations) || [];
            return supportedOperations.includes(this.fragment);
        };
        DiagnosticsService.prototype.getOperations$ = function (device$) {
            var _this = this;
            return device$.pipe(operators.switchMap(function (device) { return _this.operationService.list({
                deviceId: device.id,
                fragmentType: _this.fragment,
                dateFrom: new Date(0).toISOString(),
                dateTo: new Date(Date.now()).toISOString(),
                revert: true,
                pageSize: 10,
                withTotalPages: true
            }); }));
        };
        DiagnosticsService.prototype.createOperation = function (deviceId) {
            return __awaiter(this, void 0, void 0, function () {
                var operation, error_1;
                var _a;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            operation = (_a = {
                                    deviceId: deviceId,
                                    description: ngxComponents.gettext('Diagnostic file request')
                                },
                                _a[this.fragment] = {},
                                _a);
                            _b.label = 1;
                        case 1:
                            _b.trys.push([1, 3, , 4]);
                            return [4 /*yield*/, this.operationService.create(operation)];
                        case 2:
                            _b.sent();
                            this.alertService.success(ngxComponents.gettext('Diagnostic file request sent.'));
                            return [3 /*break*/, 4];
                        case 3:
                            error_1 = _b.sent();
                            this.alertService.addServerFailure(error_1);
                            return [3 /*break*/, 4];
                        case 4: return [2 /*return*/];
                    }
                });
            });
        };
        DiagnosticsService.prototype.deleteOperation = function (operation) {
            return __awaiter(this, void 0, void 0, function () {
                var result, error_2;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            _a.trys.push([0, 2, , 3]);
                            return [4 /*yield*/, this.modalService.confirm(ngxComponents.gettext('Delete diagnostic file'), ngxComponents.gettext('You are about to delete this diagnostic file. Do you want to proceed?'), 'danger', {
                                    ok: ngxComponents.gettext('Delete'),
                                    cancel: ngxComponents.gettext('Cancel')
                                })];
                        case 1:
                            result = _a.sent();
                            if (result) {
                                this.deleteDiagnosticsBinary(operation);
                            }
                            return [3 /*break*/, 3];
                        case 2:
                            error_2 = _a.sent();
                            return [3 /*break*/, 3];
                        case 3: return [2 /*return*/];
                    }
                });
            });
        };
        DiagnosticsService.prototype.cancelOperation = function (operation) {
            return __awaiter(this, void 0, void 0, function () {
                var operationAfterUpdate, ex_1;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            _a.trys.push([0, 2, , 3]);
                            return [4 /*yield*/, this.operationService.update({
                                    id: operation.id,
                                    status: client.OperationStatus.FAILED,
                                    failureReason: ngxComponents.gettext('Operation cancelled by user.')
                                })];
                        case 1:
                            operationAfterUpdate = (_a.sent()).data;
                            lodashEs.assign(operation, operationAfterUpdate);
                            this.alertService.success(ngxComponents.gettext('Diagnostic file request cancelled.'));
                            return [3 /*break*/, 3];
                        case 2:
                            ex_1 = _a.sent();
                            this.alertService.addServerFailure(ex_1);
                            return [3 /*break*/, 3];
                        case 3: return [2 /*return*/];
                    }
                });
            });
        };
        DiagnosticsService.prototype.getOperation = function (op) {
            if (!op) {
                return null;
            }
            return op && op[this.fragment];
        };
        DiagnosticsService.prototype.deleteDiagnosticsBinary = function (op) {
            return __awaiter(this, void 0, void 0, function () {
                var operation, file, binaryId, result, err_1, msg;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            operation = this.getOperation(op);
                            if (!(operation && operation.file)) return [3 /*break*/, 4];
                            file = operation.file;
                            _a.label = 1;
                        case 1:
                            _a.trys.push([1, 3, , 4]);
                            binaryId = this.inventoryBinary.getIdFromUrl(file);
                            return [4 /*yield*/, this.inventoryBinary.delete(binaryId)];
                        case 2:
                            result = _a.sent();
                            if (result) {
                                this.deleteDiagnosticsFragment(op);
                            }
                            return [3 /*break*/, 4];
                        case 3:
                            err_1 = _a.sent();
                            if (err_1.res.status === 404) {
                                // In case the file is already deleted via other means we want to delete the fragment
                                this.deleteDiagnosticsFragment(op);
                            }
                            else {
                                msg = ngxComponents.gettext('Could not delete the diagnostic file.');
                                this.alertService.danger(msg);
                            }
                            return [3 /*break*/, 4];
                        case 4: return [2 /*return*/];
                    }
                });
            });
        };
        DiagnosticsService.prototype.deleteDiagnosticsFragment = function (op) {
            return __awaiter(this, void 0, void 0, function () {
                var deleteOp, operationAfterUpdate, error_3;
                var _a;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            deleteOp = (_a = {
                                    id: op.id,
                                    status: op.status
                                },
                                _a[this.fragment] = null,
                                _a);
                            _b.label = 1;
                        case 1:
                            _b.trys.push([1, 3, , 4]);
                            return [4 /*yield*/, this.operationService.update(deleteOp)];
                        case 2:
                            operationAfterUpdate = (_b.sent()).data;
                            lodashEs.assign(op, operationAfterUpdate);
                            this.alertService.success(ngxComponents.gettext('Diagnostic file deleted.'));
                            return [3 /*break*/, 4];
                        case 3:
                            error_3 = _b.sent();
                            this.alertService.addServerFailure(error_3);
                            return [3 /*break*/, 4];
                        case 4: return [2 /*return*/];
                    }
                });
            });
        };
DiagnosticsService.ɵfac = function DiagnosticsService_Factory(t) { return new (t || DiagnosticsService)(ɵngcc0.ɵɵinject(ɵngcc1.OperationService), ɵngcc0.ɵɵinject(ɵngcc1.InventoryBinaryService), ɵngcc0.ɵɵinject(ɵngcc2.ModalService), ɵngcc0.ɵɵinject(ɵngcc2.AlertService)); };
DiagnosticsService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: DiagnosticsService, factory: function (t) { return DiagnosticsService.ɵfac(t); } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DiagnosticsService, [{
        type: core.Injectable
    }], function () { return [{ type: ɵngcc1.OperationService }, { type: ɵngcc1.InventoryBinaryService }, { type: ɵngcc2.ModalService }, { type: ɵngcc2.AlertService }]; }, null); })();
        return DiagnosticsService;
    }());
    DiagnosticsService.ctorParameters = function () { return [
        { type: client.OperationService },
        { type: client.InventoryBinaryService },
        { type: ngxComponents.ModalService },
        { type: ngxComponents.AlertService }
    ]; };

    var DiagnosticsTabGuard = /** @class */ (function () {
        function DiagnosticsTabGuard(diagnosticsService) {
            this.diagnosticsService = diagnosticsService;
        }
        DiagnosticsTabGuard.prototype.canActivate = function (route) {
            var device = route.data.contextData || route.parent.data.contextData;
            return this.diagnosticsService.isSupportedDevice(device);
        };
DiagnosticsTabGuard.ɵfac = function DiagnosticsTabGuard_Factory(t) { return new (t || DiagnosticsTabGuard)(ɵngcc0.ɵɵinject(DiagnosticsService)); };
DiagnosticsTabGuard.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: DiagnosticsTabGuard, factory: function (t) { return DiagnosticsTabGuard.ɵfac(t); } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DiagnosticsTabGuard, [{
        type: core.Injectable
    }], function () { return [{ type: DiagnosticsService }]; }, null); })();
        return DiagnosticsTabGuard;
    }());
    DiagnosticsTabGuard.ctorParameters = function () { return [
        { type: DiagnosticsService }
    ]; };

    var DiagnosticsComponent = /** @class */ (function () {
        function DiagnosticsComponent(route, diagnosticService, operationRealtime) {
            var _this = this;
            this.route = route;
            this.diagnosticService = diagnosticService;
            this.operationRealtime = operationRealtime;
            this.statusIcons = ngxComponents.operationStatusIcons;
            this.statusClasses = ngxComponents.operationStatusClasses;
            this.deviceId = this.route.snapshot.parent.data.contextData.id;
            this.device$ = new rxjs.BehaviorSubject(this.route.snapshot.parent.data.contextData);
            this.operations$ = this.diagnosticService.getOperations$(this.device$);
            this.operationsPipe = rxjs.pipe(operators.map(function (ops) { return ops.filter(function (op) { return op[_this.diagnosticService.fragment]; }); }));
            this.realtimeOptions = {
                entityOrId: this.deviceId,
                removeOnUpdate: true,
                insertOnUpdate: true
            };
        }
        DiagnosticsComponent.prototype.onDiagnosticRequest = function () {
            this.diagnosticService.createOperation(this.deviceId);
        };
        DiagnosticsComponent.prototype.onDelete = function (operation) {
            this.diagnosticService.deleteOperation(operation);
        };
        DiagnosticsComponent.prototype.onCancel = function (operation) {
            this.diagnosticService.cancelOperation(operation);
        };
DiagnosticsComponent.ɵfac = function DiagnosticsComponent_Factory(t) { return new (t || DiagnosticsComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc3.ActivatedRoute), ɵngcc0.ɵɵdirectiveInject(DiagnosticsService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.OperationRealtimeService)); };
DiagnosticsComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: DiagnosticsComponent, selectors: [["c8y-diagnostics"]], decls: 10, vars: 10, consts: [[3, "placement"], [1, "btn", "btn-link", 3, "title", "click"], ["c8yIcon", "stethoscope"], ["translate", ""], ["class", "page-sticky-header hidden-xs c8y-list__item c8y-list--timeline", 4, "ngIf"], ["c8yFor", "", 3, "c8yForOf", "c8yForPipe", "c8yForRealtime", "c8yForRealtimeOptions", "c8yForCount"], ["class", "c8y-empty-state m-t-40", 4, "ngIf"], [1, "page-sticky-header", "hidden-xs", "c8y-list__item", "c8y-list--timeline"], [1, "d-flex"], [1, "c8y-list--timeline__item__date", "flex-item-v-center"], [1, "c8y-list__item__block", "flex-grow"], [1, "c8y-list__item__icon"], [1, "p-l-24"], [1, "c8y-list__item__body"], [1, "content-flex-40"], [1, "col-4"], [1, "col-5", "m-l-8"], [3, "c8yIcon", "ngClass", "tooltip"], [1, "text-truncate-wrap", 3, "title"], ["class", "col-5", 4, "ngIf"], ["icon", "times", 3, "label", "click", 4, "ngIf"], ["icon", "trash", 3, "label", "click", 4, "ngIf"], [1, "col-5"], [1, "text-truncate-wrap", "m-t-xs-8"], ["translate", "", 1, "text-label-small", "visible-xs"], [3, "title"], [3, "url"], ["icon", "times", 3, "label", "click"], ["icon", "trash", 3, "label", "click"], [1, "c8y-empty-state", "m-t-40"], [1, "c8y-icon"]], template: function DiagnosticsComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "c8y-action-bar-item", 0);
        ɵngcc0.ɵɵelementStart(1, "button", 1);
        ɵngcc0.ɵɵlistener("click", function DiagnosticsComponent_Template_button_click_1_listener() { return ctx.onDiagnosticRequest(); });
        ɵngcc0.ɵɵpipe(2, "translate");
        ɵngcc0.ɵɵelement(3, "i", 2);
        ɵngcc0.ɵɵelementStart(4, "span", 3);
        ɵngcc0.ɵɵtext(5, "Request diagnostic file");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(6, DiagnosticsComponent_div_6_Template, 17, 9, "div", 4);
        ɵngcc0.ɵɵelementStart(7, "c8y-list-group");
        ɵngcc0.ɵɵtemplate(8, DiagnosticsComponent_ng_template_8_Template, 16, 17, "ng-template", 5);
        ɵngcc0.ɵɵlistener("c8yForCount", function DiagnosticsComponent_Template_ng_template_c8yForCount_8_listener($event) { return ctx.operationCount = $event; });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(9, DiagnosticsComponent_div_9_Template, 5, 0, "div", 6);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("placement", "right");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(2, 8, "Request diagnostic file"));
        ɵngcc0.ɵɵadvance(5);
        ɵngcc0.ɵɵproperty("ngIf", ctx.operationCount > 0);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("c8yForOf", ctx.operations$)("c8yForPipe", ctx.operationsPipe)("c8yForRealtime", ctx.operationRealtime)("c8yForRealtimeOptions", ctx.realtimeOptions);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.operationCount === 0);
    } }, directives: [ɵngcc2.ActionBarItemComponent, ɵngcc2.IconDirective, ɵngcc2.C8yTranslateDirective, ɵngcc4.NgIf, ɵngcc2.ListGroupComponent, ɵngcc2.ForOfDirective, ɵngcc2.ListItemTimelineComponent, ɵngcc2.ListItemComponent, ɵngcc2.ListItemIconComponent, ɵngcc4.NgClass, ɵngcc5.TooltipDirective, ɵngcc2.ListItemBodyComponent, ɵngcc6.ɵb, ɵngcc2.ListItemActionComponent], pipes: [ɵngcc2.C8yTranslatePipe, ɵngcc2.DatePipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DiagnosticsComponent, [{
        type: core.Component,
        args: [{
                template: "<c8y-action-bar-item [placement]=\"'right'\">\n  <button\n    title=\"{{ 'Request diagnostic file' | translate }}\"\n    class=\"btn btn-link\"\n    (click)=\"onDiagnosticRequest()\"\n  >\n    <i c8yIcon=\"stethoscope\"></i> <span translate>Request diagnostic file</span>\n  </button>\n</c8y-action-bar-item>\n\n<div\n  class=\"page-sticky-header hidden-xs c8y-list__item c8y-list--timeline\"\n  *ngIf=\"operationCount > 0\"\n>\n  <div class=\"d-flex\">\n    <div class=\"c8y-list--timeline__item__date flex-item-v-center\">\n      <label>{{ 'Date' | translate }}</label>\n    </div>\n    <div class=\"c8y-list__item__block flex-grow\">\n      <div class=\"c8y-list__item__icon\">\n        <i class=\"p-l-24\"></i>\n      </div>\n      <div class=\"c8y-list__item__body\">\n        <div class=\"content-flex-40\">\n          <div class=\"col-4\">{{ 'Event' | translate }}</div>\n          <div class=\"col-5 m-l-8\">{{ 'File' | translate }}</div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<c8y-list-group>\n  <ng-template\n    c8yFor\n    let-operation\n    [c8yForOf]=\"operations$\"\n    [c8yForPipe]=\"operationsPipe\"\n    [c8yForRealtime]=\"operationRealtime\"\n    [c8yForRealtimeOptions]=\"realtimeOptions\"\n    (c8yForCount)=\"operationCount = $event\"\n  >\n    <c8y-li-timeline>\n      {{ operation.creationTime | c8yDate }}\n      <c8y-li>\n        <c8y-li-icon>\n          <i\n            [c8yIcon]=\"statusIcons[operation.status]\"\n            [ngClass]=\"statusClasses[operation.status]\"\n            [tooltip]=\"operation.status?.toString() | translate\"\n          ></i>\n        </c8y-li-icon>\n        <c8y-li-body class=\"content-flex-40\">\n          <div class=\"col-4\">\n            <p class=\"text-truncate-wrap\" title=\"{{ operation.description | translate }}\">\n              {{ operation.description | translate }}\n            </p>\n          </div>\n          <div class=\"col-5\" *ngIf=\"operation.c8y_DiagnosticReport?.file\">\n            <div class=\"text-truncate-wrap m-t-xs-8\">\n              <span class=\"text-label-small visible-xs\" translate> File </span>\n              <span title=\"{{ operation.c8y_DiagnosticReport.file }}\">\n                <c8y-file-download\n                  url=\"{{ operation.c8y_DiagnosticReport.file }}\"\n                ></c8y-file-download>\n              </span>\n            </div>\n          </div>\n        </c8y-li-body>\n        <c8y-li-action\n          (click)=\"onCancel(operation)\"\n          *ngIf=\"operation.status === 'PENDING'\"\n          icon=\"times\"\n          label=\"{{ 'Cancel' | translate }}\"\n        >\n        </c8y-li-action>\n        <c8y-li-action\n          (click)=\"onDelete(operation)\"\n          *ngIf=\"operation.status === 'SUCCESSFUL'\"\n          icon=\"trash\"\n          label=\"{{ 'Delete' | translate }}\"\n        >\n        </c8y-li-action>\n      </c8y-li>\n    </c8y-li-timeline>\n  </ng-template>\n</c8y-list-group>\n\n<!-- EMPTY STATE -->\n\n<div class=\"c8y-empty-state m-t-40\" *ngIf=\"operationCount === 0\">\n  <h1 class=\"c8y-icon\">\n    <i c8yIcon=\"stethoscope\"></i>\n  </h1>\n  <h3 translate>No diagnostic files available.</h3>\n</div>\n",
                selector: 'c8y-diagnostics'
            }]
    }], function () { return [{ type: ɵngcc3.ActivatedRoute }, { type: DiagnosticsService }, { type: ɵngcc2.OperationRealtimeService }]; }, null); })();
        return DiagnosticsComponent;
    }());
    DiagnosticsComponent.ctorParameters = function () { return [
        { type: router.ActivatedRoute },
        { type: DiagnosticsService },
        { type: ngxComponents.OperationRealtimeService }
    ]; };

    var ɵ0 = [
        {
            context: ngxComponents.ViewContext.Device,
            path: 'diagnostics',
            component: DiagnosticsComponent,
            label: ngxComponents.gettext('Diagnostics'),
            icon: 'stethoscope',
            canActivate: [DiagnosticsTabGuard],
            priority: 200
        }
    ];
    var DiagnosticsModule = /** @class */ (function () {
        function DiagnosticsModule() {
        }
DiagnosticsModule.ɵfac = function DiagnosticsModule_Factory(t) { return new (t || DiagnosticsModule)(); };
DiagnosticsModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: DiagnosticsModule });
DiagnosticsModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [
        DiagnosticsService,
        dropdown.BsDropdownConfig,
        DiagnosticsTabGuard,
        {
            provide: ngxComponents.HOOK_ROUTE,
            useValue: ɵ0,
            multi: true
        }
    ], imports: [[
            ngxComponents.CoreModule,
            router.RouterModule,
            common.CommonModule,
            ngxComponents.ListGroupModule,
            repository.RepositoryModule,
            dropdown.BsDropdownModule,
            tooltip.TooltipModule
        ]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DiagnosticsModule, [{
        type: core.NgModule,
        args: [{
                imports: [
                    ngxComponents.CoreModule,
                    router.RouterModule,
                    common.CommonModule,
                    ngxComponents.ListGroupModule,
                    repository.RepositoryModule,
                    dropdown.BsDropdownModule,
                    tooltip.TooltipModule
                ],
                declarations: [DiagnosticsComponent],
                exports: [DiagnosticsComponent],
                providers: [
                    DiagnosticsService,
                    dropdown.BsDropdownConfig,
                    DiagnosticsTabGuard,
                    {
                        provide: ngxComponents.HOOK_ROUTE,
                        useValue: ɵ0,
                        multi: true
                    }
                ]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DiagnosticsModule, { declarations: [DiagnosticsComponent], imports: [ɵngcc2.CoreModule, ɵngcc3.RouterModule, ɵngcc4.CommonModule, ɵngcc2.ListGroupModule, ɵngcc6.RepositoryModule, ɵngcc7.BsDropdownModule, ɵngcc5.TooltipModule], exports: [DiagnosticsComponent] }); })();
        return DiagnosticsModule;
    }());

    /**
     * Generated bundle index. Do not edit.
     */

    exports.DiagnosticsComponent = DiagnosticsComponent;
    exports.DiagnosticsModule = DiagnosticsModule;
    exports.DiagnosticsService = DiagnosticsService;
    exports.DiagnosticsTabGuard = DiagnosticsTabGuard;
    exports["ɵ0"] = ɵ0;

    Object.defineProperty(exports, '__esModule', { value: true });

}));

//# sourceMappingURL=c8y-ngx-components-diagnostics.umd.js.map