(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(require('@angular/core'),require('ngx-bootstrap/dropdown'),require('@angular/common'),require('@c8y/ngx-components'),require('ngx-bootstrap/tooltip'),exports, require('@angular/core'), require('ngx-bootstrap/tooltip'), require('ngx-bootstrap/dropdown'), require('@c8y/ngx-components'), require('@angular/cdk/coercion')) :
    typeof define === 'function' && define.amd ? define('@c8y/ngx-components/operations/status-filter', ['@angular/core','ngx-bootstrap/dropdown','@angular/common','@c8y/ngx-components','ngx-bootstrap/tooltip','exports', '@angular/core', 'ngx-bootstrap/tooltip', 'ngx-bootstrap/dropdown', '@c8y/ngx-components', '@angular/cdk/coercion'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.ng.core,global.ngxBootstrap.dropdown,global.ng.common,global.c8y.ngxComponents,global.ngxBootstrap.tooltip,(global.c8y = global.c8y || {}, global.c8y["ngx-components"] = global.c8y["ngx-components"] || {}, global.c8y["ngx-components"].operations = global.c8y["ngx-components"].operations || {}, global.c8y["ngx-components"].operations["status-filter"] = {}), global.ng.core, global.tooltip, global.dropdown, global.c8y["ngx-components"], global.ng.cdk.coercion));
})(this, (function (ɵngcc0,ɵngcc1,ɵngcc2,ɵngcc3,ɵngcc4,exports, core, tooltip, dropdown, ngxComponents, coercion) { 
function StatusFilterComponent_span_3_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 6);
    ɵngcc0.ɵɵelement(1, "i");
    ɵngcc0.ɵɵelementStart(2, "span", 7);
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵpipe(4, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var option_r3 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMap(option_r3.option == null ? null : option_r3.option.iconClass);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(4, 3, option_r3.option == null ? null : option_r3.option.label));
} }
function StatusFilterComponent_span_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 5);
    ɵngcc0.ɵɵtemplate(1, StatusFilterComponent_span_3_span_1_Template, 5, 5, "span", 3);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var option_r3 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", option_r3.selected);
} }
function StatusFilterComponent_span_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 6);
    ɵngcc0.ɵɵelement(1, "i", 8);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(3, 1, "All statuses"), " ");
} }
var _c0 = function (a0) { return { active: a0 }; };
function StatusFilterComponent_ul_5_li_1_Template(rf, ctx) { if (rf & 1) {
    var _r9 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "li", 11);
    ɵngcc0.ɵɵelementStart(1, "button", 13);
    ɵngcc0.ɵɵlistener("click", function StatusFilterComponent_ul_5_li_1_Template_button_click_1_listener() { var restoredCtx = ɵngcc0.ɵɵrestoreView(_r9); var option_r7 = restoredCtx.$implicit; var ctx_r8 = ɵngcc0.ɵɵnextContext(2); return ctx_r8.changeFilter(option_r7); });
    ɵngcc0.ɵɵelement(2, "i");
    ɵngcc0.ɵɵelementStart(3, "span", 7);
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵpipe(5, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var option_r7 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(6, _c0, option_r7.selected));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵclassMap(option_r7.option == null ? null : option_r7.option.iconClass);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(5, 4, option_r7.option == null ? null : option_r7.option.label));
} }
function StatusFilterComponent_ul_5_Template(rf, ctx) { if (rf & 1) {
    var _r11 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "ul", 9);
    ɵngcc0.ɵɵtemplate(1, StatusFilterComponent_ul_5_li_1_Template, 6, 8, "li", 10);
    ɵngcc0.ɵɵelementStart(2, "li", 11);
    ɵngcc0.ɵɵelementStart(3, "button", 12);
    ɵngcc0.ɵɵlistener("click", function StatusFilterComponent_ul_5_Template_button_click_3_listener() { ɵngcc0.ɵɵrestoreView(_r11); var ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10.removeFilter(); });
    ɵngcc0.ɵɵpipe(4, "translate");
    ɵngcc0.ɵɵelement(5, "i", 8);
    ɵngcc0.ɵɵtext(6);
    ɵngcc0.ɵɵpipe(7, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r2.statusOptions);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(8, _c0, ctx_r2.isAllButtonSelected));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(4, 4, "All"));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(7, 6, "All statuses"), " ");
} }
'use strict';

    var StatusFilterComponent = /** @class */ (function () {
        function StatusFilterComponent() {
            this.statusOptions = [];
            this.onFilterChanged = new core.EventEmitter();
            this.isAllButtonSelected = true;
        }
        Object.defineProperty(StatusFilterComponent.prototype, "options", {
            /** List of filter options to be displayed */
            set: function (options) {
                this.statusOptions = (options || []).map(function (option) { return ({ selected: false, option: option }); });
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(StatusFilterComponent.prototype, "_multiple", {
            /**
             * Allows multiple options to be active simultaneosly.
             */
            set: function (multiple) {
                this.multiple = coercion.coerceBooleanProperty(multiple);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(StatusFilterComponent.prototype, "_small", {
            /** Display the filter as a small button group */
            set: function (small) {
                this.small = coercion.coerceBooleanProperty(small);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(StatusFilterComponent.prototype, "displaySmall", {
            get: function () {
                return this.small;
            },
            enumerable: false,
            configurable: true
        });
        StatusFilterComponent.prototype.changeFilter = function (option) {
            this.isAllButtonSelected = false;
            var emitNeeded = false;
            if (this.multiple) {
                option.selected = !option.selected;
                emitNeeded = true;
            }
            else if (!option.selected) {
                option.selected = true;
                this.statusOptions.filter(function (op) { return op !== option; }).forEach(function (op) { return (op.selected = false); });
                emitNeeded = true;
            }
            if (emitNeeded) {
                this.emitSelectedOptions();
            }
        };
        StatusFilterComponent.prototype.removeFilter = function () {
            this.isAllButtonSelected = true;
            this.statusOptions.forEach(function (op) { return (op.selected = false); });
            this.emitSelectedOptions();
        };
        /**
         * Allows the filter to be initalliy displayed with some preset filters.
         *
         * @param filters An `IStatusOption` array defining filter options to be preset.
         * @param emit  (optional) If `true` component will emit `onFilterChanged` event.
         */
        StatusFilterComponent.prototype.preset = function (filters, emit) {
            var _this = this;
            if (emit === void 0) { emit = true; }
            var firstSelected = false;
            this.statusOptions.forEach(function (option) { return (option.selected = false); });
            this.statusOptions
                .filter(function (option) { return (filters || []).map(function (o) { return o.label; }).includes(option.option.label); })
                .filter(function () {
                // only first option passed will be set in single selection mode
                var include = _this.multiple || !firstSelected;
                if (include) {
                    firstSelected = true;
                }
                return include;
            })
                .forEach(function (option) { return (option.selected = true); });
            this.isAllButtonSelected = !(filters && filters.length);
            if (emit) {
                this.emitSelectedOptions();
            }
        };
        StatusFilterComponent.prototype.reset = function () {
            this.removeFilter();
        };
        StatusFilterComponent.prototype.activeFilters = function () {
            return this.statusOptions.filter(function (option) { return option.selected; }).map(function (option) { return option.option; });
        };
        StatusFilterComponent.prototype.isFilterApplied = function () {
            return this.statusOptions.some(function (option) { return option.selected; });
        };
        StatusFilterComponent.prototype.emitSelectedOptions = function () {
            this.onFilterChanged.emit(this.statusOptions.filter(function (option) { return option.selected; }).map(function (option) { return option.option; }));
        };
StatusFilterComponent.ɵfac = function StatusFilterComponent_Factory(t) { return new (t || StatusFilterComponent)(); };
StatusFilterComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: StatusFilterComponent, selectors: [["c8y-status-filter"]], hostVars: 2, hostBindings: function StatusFilterComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("btn-group-sm", ctx.displaySmall);
    } }, inputs: { options: "options", _multiple: ["multiple", "_multiple"], _small: ["small", "_small"] }, outputs: { onFilterChanged: "onFilterChanged" }, decls: 6, vars: 5, consts: [["dropdown", "", "placement", "bottom left", 1, "dropdown", "c8y-child-assets-selector"], ["id", "status-filter", "dropdownToggle", "", "type", "button", "aria-controls", "dropdown-status-filter", 1, "btn", "dropdown-toggle", "d-flex", "a-i-center", "c8y-dropdown", 3, "title"], ["class", "d-contents", 4, "ngFor", "ngForOf"], ["class", "text-truncate", 4, "ngIf"], ["id", "dropdown-status-filter", "class", "dropdown-menu", "role", "menu", "aria-labelledby", "status-filter", 4, "dropdownMenu"], [1, "d-contents"], [1, "text-truncate"], [1, "m-l-4"], ["c8yIcon", "c8y-energy", 1, "m-r-4", "text-info"], ["id", "dropdown-status-filter", "role", "menu", "aria-labelledby", "status-filter", 1, "dropdown-menu"], [3, "ngClass", 4, "ngFor", "ngForOf"], [3, "ngClass"], [3, "title", "click"], [3, "click"]], template: function StatusFilterComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "button", 1);
        ɵngcc0.ɵɵpipe(2, "translate");
        ɵngcc0.ɵɵtemplate(3, StatusFilterComponent_span_3_Template, 2, 1, "span", 2);
        ɵngcc0.ɵɵtemplate(4, StatusFilterComponent_span_4_Template, 4, 3, "span", 3);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(5, StatusFilterComponent_ul_5_Template, 8, 10, "ul", 4);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(2, 3, "Status filter"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.statusOptions);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isAllButtonSelected);
    } }, directives: [ɵngcc1.BsDropdownDirective, ɵngcc1.BsDropdownToggleDirective, ɵngcc2.NgForOf, ɵngcc2.NgIf, ɵngcc1.BsDropdownMenuDirective, ɵngcc3.IconDirective, ɵngcc2.NgClass], pipes: [ɵngcc3.C8yTranslatePipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(StatusFilterComponent, [{
        type: core.Component,
        args: [{
                selector: 'c8y-status-filter',
                template: "<div dropdown \n  placement=\"bottom left\" \n  class=\"dropdown c8y-child-assets-selector\"\n>\n  <button id=\"status-filter\" \n    dropdownToggle \n    type=\"button\" \n    class=\"btn dropdown-toggle d-flex a-i-center c8y-dropdown\"\n    title=\"{{ 'Status filter' | translate}}\"\n    aria-controls=\"dropdown-status-filter\">\n    <span *ngFor=\"let option of statusOptions\" class=\"d-contents\">\n      <span class=\"text-truncate\" *ngIf=\"option.selected\">\n        <i [class]=\"option.option?.iconClass\"></i>\n        <span class=\"m-l-4\">{{ option.option?.label | translate }}</span>\n      </span>\n    </span>\n    <span class=\"text-truncate\" *ngIf=\"isAllButtonSelected\">\n      <i c8yIcon=\"c8y-energy\" class=\"m-r-4 text-info\"></i>\n      {{ 'All statuses' | translate }}\n    </span>\n  </button>\n  <ul id=\"dropdown-status-filter\" \n    *dropdownMenu \n    class=\"dropdown-menu\"\n    role=\"menu\" \n    aria-labelledby=\"status-filter\"\n  >\n    <li *ngFor=\"let option of statusOptions\" [ngClass]=\"{ active: option.selected }\" >\n      <button\n        (click)=\"changeFilter(option)\"\n      >\n        <i [class]=\"option.option?.iconClass\"></i>\n        <span class=\"m-l-4\">{{ option.option?.label | translate }}</span>\n      </button>\n    </li>\n    <li [ngClass]=\"{ active: isAllButtonSelected }\">\n      <button\n        title=\"{{ 'All' | translate }}\"\n        (click)=\"removeFilter()\"\n      >\n        <i c8yIcon=\"c8y-energy\" class=\"m-r-4 text-info\"></i>\n        {{ 'All statuses' | translate }}\n      </button>\n    </li>\n  </ul>\n</div>"
            }]
    }], function () { return []; }, { onFilterChanged: [{
            type: core.Output
        }], options: [{
            type: core.Input
        }], _multiple: [{
            type: core.Input,
            args: ['multiple']
        }], _small: [{
            type: core.Input,
            args: ['small']
        }], displaySmall: [{
            type: core.HostBinding,
            args: ['class.btn-group-sm']
        }] }); })();
        return StatusFilterComponent;
    }());
    StatusFilterComponent.propDecorators = {
        options: [{ type: core.Input }],
        _multiple: [{ type: core.Input, args: ['multiple',] }],
        _small: [{ type: core.Input, args: ['small',] }],
        displaySmall: [{ type: core.HostBinding, args: ['class.btn-group-sm',] }],
        onFilterChanged: [{ type: core.Output }]
    };

    /**
     * This module provides a component for selecting status filter.
     */
    var StatusFilterModule = /** @class */ (function () {
        function StatusFilterModule() {
        }
StatusFilterModule.ɵfac = function StatusFilterModule_Factory(t) { return new (t || StatusFilterModule)(); };
StatusFilterModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: StatusFilterModule });
StatusFilterModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[ngxComponents.CoreModule, tooltip.TooltipModule, dropdown.BsDropdownModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(StatusFilterModule, [{
        type: core.NgModule,
        args: [{
                imports: [ngxComponents.CoreModule, tooltip.TooltipModule, dropdown.BsDropdownModule],
                declarations: [StatusFilterComponent],
                entryComponents: [StatusFilterComponent],
                exports: [StatusFilterComponent]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(StatusFilterModule, { declarations: [StatusFilterComponent], imports: [ɵngcc3.CoreModule, ɵngcc4.TooltipModule, ɵngcc1.BsDropdownModule], exports: [StatusFilterComponent] }); })();
        return StatusFilterModule;
    }());

    /**
     * Generated bundle index. Do not edit.
     */

    exports.StatusFilterComponent = StatusFilterComponent;
    exports.StatusFilterModule = StatusFilterModule;

    Object.defineProperty(exports, '__esModule', { value: true });

}));

//# sourceMappingURL=c8y-ngx-components-operations-status-filter.umd.js.map