import { Router } from '@angular/router';
import { IManagedObject, InventoryService, IResultList } from '@c8y/client';
import { DeviceGridService } from '@c8y/ngx-components/device-grid';
import { Observable } from 'rxjs';
import { AssetSearchService } from './search.service';
export declare class SearchBoxComponent {
    private router;
    private inventory;
    private deviceGridService;
    private searchService;
    term: string;
    selected: any;
    filterPipe: import("rxjs").UnaryFunction<Observable<IManagedObject[]>, Observable<IManagedObject[]>>;
    results$: Observable<IResultList<IManagedObject>>;
    recentSearchResults: IManagedObject[];
    recentlyRegisteredResults$: Observable<IResultList<IManagedObject>>;
    isLoading: boolean;
    noMatch: boolean;
    private readonly RECENT_SEARCH_STORAGE_KEY;
    private readonly MAX_RECENT_SEARCH_RESULTS;
    private readonly DEFAULT_FILTER;
    private readonly KEYCODE_ENTER;
    private readonly KEYCODE_ESC;
    private typeahead;
    private dropdown;
    constructor(router: Router, inventory: InventoryService, deviceGridService: DeviceGridService, searchService: AssetSearchService);
    ngOnInit(): Promise<void>;
    onOpenChange(isOpen: boolean): void;
    open(event: Event, mo: IManagedObject): void;
    reset(): void;
    keyDown(event: KeyboardEvent): void;
    filter(on: any): void;
    openSearch(): void;
    private subscribeOnSearch;
    private navigate;
    private mergeRequest;
    private queryInventoryService;
    private onLoadingDone;
    private onTypingStarted;
}
