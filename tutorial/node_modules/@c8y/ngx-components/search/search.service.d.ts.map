{"version":3,"file":"search.service.d.ts","sources":["search.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { IManagedObject } from '@c8y/client';\nimport { SubAssetsService } from '@c8y/ngx-components/sub-assets';\nimport { Pagination } from '@c8y/ngx-components';\nexport declare class AssetSearchService extends SubAssetsService {\n    protected GRID_CONFIG_STORAGE_KEY: string;\n    protected DEFAULT_PAGE_SIZE: number;\n    private readonly FRAGMENTS_FOR_NO_DEVICE;\n    private readonly TYPES_FOR_NO_DEVICE;\n    private readonly DEVICE_FRAGMENT_TYPE;\n    /**\n     * Will return only valid assets (groups and devices) and filter out\n     * none useful inventories (e.g. c8y_JsonSchema).\n     * @param data All managed objects that should be filtered.\n     */\n    filterOnlyAssets(data: IManagedObject[]): IManagedObject[];\n    buildCombinedRootQueryFilter(columns: any, pagination: any): string;\n    /**\n     * Returns the full-text search results.\n     *\n     * @param term The search term.\n     * @param pagination The currently used pagination.\n     */\n    search(term: string, pagination?: Pagination): Promise<import(\"@c8y/client\").IResultList<IManagedObject>>;\n    private isRootDevice;\n    private isAnyDevice;\n    private hasFragmentOrTypeFromBlacklist;\n    private hasTypeFromBlacklist;\n    private hasFragmentFromBlacklist;\n}\n"]}