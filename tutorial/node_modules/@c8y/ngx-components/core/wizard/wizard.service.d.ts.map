{"version":3,"file":"wizard.service.d.ts","sources":["wizard.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { Injector, TemplateRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BsModalRef, BsModalService, ModalOptions } from 'ngx-bootstrap/modal';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { ExtensionPoint } from '../common/extension-hooks';\nimport { StateService } from '../common/state-service.abstract';\nimport { WizardComponent } from './wizard.component';\nimport { WizardEntry, WizardExtension } from './wizard.model';\nexport declare class WizardService extends StateService implements ExtensionPoint<WizardExtension> {\n    private bsModalService;\n    private injector;\n    private router;\n    /** Wizard list observable. It emits the current list of the wizard entries. */\n    readonly items$: Observable<WizardEntry[]>;\n    /** Wizard header subject. It emits header template. */\n    readonly headerTemplate$: Subject<{\n        wizardId: string;\n        template: TemplateRef<any>;\n    }>;\n    /** Wizard body subject. It emits body template. */\n    readonly bodyTemplate$: Subject<{\n        wizardId: string;\n        template: TemplateRef<any>;\n    }>;\n    /** Wizard footer subject. It emits footer template. */\n    readonly footerTemplate$: Subject<{\n        wizardId: string;\n        template: TemplateRef<any>;\n    }>;\n    /**\n     * @ignore\n     */\n    readonly state$: BehaviorSubject<Set<WizardEntry>>;\n    /** Refresh the extension factories subject. */\n    readonly refreshTrigger: Subject<unknown>;\n    /** Additional factories that can be added by plugins. */\n    factories: WizardExtension[];\n    constructor(bsModalService: BsModalService, injector: Injector, router: Router);\n    /**\n     * Returns the current state.\n     * @returns The current set of entries.\n     * @readonly\n     */\n    get state(): Set<WizardEntry>;\n    /**\n     * Refresh the extension factories.\n     */\n    refresh(): void;\n    /**\n     * Adds a new entry in the wizard.\n     * @param entry Wizard entry to add.\n     */\n    add(entry: WizardEntry): void;\n    /**\n     * Removes entry from the wizard.\n     * @param entry Wizard entry to remove.\n     */\n    remove(entry: WizardEntry): void;\n    /**\n     * List of wizard entries matching the given id.\n     * @param id\n     * @returns observable with list of wizard entries.\n     */\n    getEntriesListById(id: string): Observable<WizardEntry[]>;\n    /**\n     * Shows a wizard modal.\n     * @param modalOptions Modal options.\n     * @returns a reference to the modal.\n     */\n    show(modalOptions?: ModalOptions): BsModalRef<WizardComponent>;\n}\n"]}