{"version":3,"file":"c8y-translate.directive.d.ts","sources":["c8y-translate.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { TranslateDirective, TranslateService } from '@ngx-translate/core';\nimport { ChangeDetectorRef, ElementRef, EventEmitter } from '@angular/core';\nexport declare class C8yTranslateDirective extends TranslateDirective {\n    /**\n     * Used to get private element property from TranslateDirective, so it doesn't throw tsErrors\n     */\n    private get _elementRef();\n    /**\n     * Used to get private translateService property from TranslateDirective, so it doesn't throw tsErrors\n     */\n    private get _translateService();\n    /**\n     * Used to trigger events when html is replaced by directive.\n     */\n    htmlUpdateEvent: EventEmitter<void>;\n    /**\n     * When this directive successfully translates node, it stores its value in this property.\n     * Another translation will be performed only if new translation value differs from stored one.\n     */\n    lastTranslation: string;\n    /**\n     * When this directive encounters element that is HTML, it should switch to Html mode even if\n     * new translated element does not contain any HTML.\n     */\n    htmlMode: boolean;\n    constructor(translateService: TranslateService, element: ElementRef, _ref: ChangeDetectorRef);\n    /**\n     * Overridden method from original directive.\n     * For simple text nodes, it just invokes the base method.\n     * For complex nodes, it builds translation key from whole inner HTML\n     * and replaces it with its translation.\n     * This prevents splitting HTML into pieces and attempting to translate each one separately\n     * which doesn't work, because we extract strings in whole.\n     */\n    checkNodes(forceUpdate?: boolean, translations?: any): void;\n    ngOnDestroy(): void;\n    /**\n     * Builds lookup key from innerHTML, removes comments (that might be added by Angular) and trims it.\n     */\n    private getLookupKey;\n    private isElementSimpleTextType;\n    private isElementInnerHtmlEmpty;\n    private isLookupKeyMissing;\n    private lookupKeyExist;\n    private getNewTranslation;\n    private updateHtmlContent;\n}\n"]}