{"version":3,"file":"popover-confirm.component.d.ts","sources":["popover-confirm.component.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { PopoverDirective } from 'ngx-bootstrap/popover';\nimport { StatusType } from '../common/status.model';\nexport interface PopoverConfirmButtons {\n    /**\n     * The label of the button\n     */\n    label: string;\n    /**\n     * Which action to perform.\n     */\n    action: () => Promise<any>;\n    /**\n     * The status class attached to the button.\n     */\n    status?: StatusType | 'primary';\n}\n/**\n * A component to show a popover right next to the\n * user action. Add this component where the confirm modal\n * should be shown and toggle isOpen to display it. You\n * can use `await isShow()` to wait for a result on the\n * click action.\n */\nexport declare class PopoverConfirmComponent {\n    popover: PopoverDirective;\n    buttons: PopoverConfirmButtons[];\n    message: string;\n    title: string;\n    isOpen: boolean;\n    containerClass: string;\n    placement: string;\n    outsideClick: boolean;\n    click: (action: () => Promise<any>) => void;\n    /**\n     * Show the popover. Wait until an action is performed on it.\n     */\n    show(buttons?: PopoverConfirmButtons[]): Promise<any>;\n    buttonStatus(status: any): string;\n    handleOutsideClick(): void;\n}\n"]}