import { ComponentFactoryResolver, ViewContainerRef } from '@angular/core';
import { DynamicComponentService } from './dynamic-component.service';
import { Observable } from 'rxjs';
/**
 * C8y dynamic component.
 * ## Example:
 *
 * register component in HOOK in module:
 * ```typescript
 *  import { HOOK_COMPONENT } from '@c8y/ngx-components';
 *
 * @NgModule({
 *  ...,
 *  providers: [{
 *      provide: HOOK_COMPONENT,
 *      multi: true,
 *      useValue: [{
 *          id: 'test-component',
 *          label: 'My test component',
 *          description: 'this is test component',
 *          component: TestComponent
 *      }],
 *  ...
 *  }]
 *
 * ```
 * Showing dynamic component:
 * ```html
 * <c8y-dynamic-component [componentId]="'test-component'" [config]="config"></c8y-dynamic-component>
 * ```
 */
export declare class DynamicComponentComponent {
    private componentFactoryResolver;
    private dynamicComponentService;
    /**
     * The ID of the registered component. It needs to be a component that is hooked
     * with the HOOK_COMPONENTS extension hook.
     */
    componentId: string;
    /**
     * The configuration to pass.
     */
    config: any;
    /**
     * DynamicComponents can have two modes, an edit (config) and an view (component) mode.
     * By default it is shown in the component mode.
     */
    mode: 'config' | 'component';
    /**
     * Disable this to hide the error that is shown if the component was not found.
     */
    notFoundError: boolean;
    /**
     * @ignore
     */
    host: ViewContainerRef;
    /**
     * @ignore
     */
    error: any;
    /**
     * @ignore
     */
    expandErrorDetails: boolean;
    private componentRef;
    /**
     * @ignore only DI
     */
    constructor(componentFactoryResolver: ComponentFactoryResolver, dynamicComponentService: DynamicComponentService);
    /**
     * Calls the dynamic component life cycle hook. Currently only
     * supporting onBeforeSave, a hook which is called before a config component
     * is saved.
     */
    callLifeCycleHooks(): Observable<unknown>;
    /**
     * @ignore
     */
    ngOnChanges(): Promise<void>;
    private loadComponent;
    private callOnBeforeSaveHook;
}
