{"version":3,"file":"properties-list.component.d.ts","sources":["properties-list.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { PropertiesListItem } from './properties-list.model';\n/**\n * Renders a list of properties of an object.\n *\n * @example\n * ```html\n * <c8y-properties-list\n *   icon=\"info\"\n *   [properties]=\"properties\"\n *   [values]=\"options\"\n *   [emptyLabel]=\"'-'\"\n *   [title]=\"'Application properties' | translate\"\n * ></c8y-properties-list>\n * ```\n */\nexport declare class PropertiesListComponent {\n    /**\n     * The properties that this list should display.\n     */\n    set properties(items: PropertiesListItem[]);\n    /**\n     * @ignore\n     */\n    get properties(): PropertiesListItem[];\n    /**\n     * A title for the list.\n     */\n    title: string;\n    /**\n     * An icon which is displayed next to the title.\n     */\n    icon: string;\n    /**\n     * An object where the properties keys are resolved from.\n     */\n    set data(data: {});\n    /**\n     * A string array of groups that are shown. If noParse is set to false,\n     * each complex key will form a group.\n     */\n    groups: string[];\n    /**\n     * The component tries to parse the properties and resolve keys and types. You can\n     * avoid this by setting this property to true.\n     */\n    noParse: boolean;\n    /**\n     * Set this label to display all properties but the empty ones\n     * get the `emptyLabel` assigned.\n     */\n    emptyLabel: string;\n    private _properties;\n    private _data;\n    /**\n     * Checks if a certain property has an group associated.\n     * @param item The property to verify.\n     */\n    hasGroup(item: PropertiesListItem): boolean;\n    /**\n     * @ignore\n     */\n    ngOnInit(): void;\n    /**\n     * Used in trackBy to avoid recalculation all the time.\n     * @ignore\n     */\n    identity(index: any, item: any): any;\n    private parseProperties;\n    private parsePropertyItem;\n    private resolveValueFromKey;\n    private resolveType;\n    private attachEmptyLabel;\n}\n"]}