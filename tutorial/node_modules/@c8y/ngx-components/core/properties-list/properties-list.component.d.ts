import { PropertiesListItem } from './properties-list.model';
/**
 * Renders a list of properties of an object.
 *
 * @example
 * ```html
 * <c8y-properties-list
 *   icon="info"
 *   [properties]="properties"
 *   [values]="options"
 *   [emptyLabel]="'-'"
 *   [title]="'Application properties' | translate"
 * ></c8y-properties-list>
 * ```
 */
import * as ɵngcc0 from '@angular/core';
export declare class PropertiesListComponent {
    /**
     * The properties that this list should display.
     */
    set properties(items: PropertiesListItem[]);
    /**
     * @ignore
     */
    get properties(): PropertiesListItem[];
    /**
     * A title for the list.
     */
    title: string;
    /**
     * An icon which is displayed next to the title.
     */
    icon: string;
    /**
     * An object where the properties keys are resolved from.
     */
    set data(data: {});
    /**
     * A string array of groups that are shown. If noParse is set to false,
     * each complex key will form a group.
     */
    groups: string[];
    /**
     * The component tries to parse the properties and resolve keys and types. You can
     * avoid this by setting this property to true.
     */
    noParse: boolean;
    /**
     * Set this label to display all properties but the empty ones
     * get the `emptyLabel` assigned.
     */
    emptyLabel: string;
    private _properties;
    private _data;
    /**
     * Checks if a certain property has an group associated.
     * @param item The property to verify.
     */
    hasGroup(item: PropertiesListItem): boolean;
    /**
     * @ignore
     */
    ngOnInit(): void;
    /**
     * Used in trackBy to avoid recalculation all the time.
     * @ignore
     */
    identity(index: any, item: any): any;
    private parseProperties;
    private parsePropertyItem;
    private resolveValueFromKey;
    private resolveType;
    private attachEmptyLabel;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<PropertiesListComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<PropertiesListComponent, "c8y-properties-list", never, { "groups": "groups"; "noParse": "noParse"; "properties": "properties"; "data": "data"; "title": "title"; "icon": "icon"; "emptyLabel": "emptyLabel"; }, {}, never, never>;
}

//# sourceMappingURL=properties-list.component.d.ts.map