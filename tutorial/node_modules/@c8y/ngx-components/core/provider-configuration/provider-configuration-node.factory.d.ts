import { Injector } from '@angular/core';
import { Observable } from 'rxjs';
import { NavigatorNode, NavigatorNodeFactory } from '../navigator';
import { DynamicProviderConfig } from './model/dynamic-provider-config.model';
import * as ɵngcc0 from '@angular/core';
export declare class ProviderConfigurationNodeFactory implements NavigatorNodeFactory {
    private injector;
    private config;
    private nodes;
    constructor(config: DynamicProviderConfig[][], injector: Injector);
    get(): NavigatorNode[] | Observable<NavigatorNode[]>;
    private checkCanActivate;
    private getGuards;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ProviderConfigurationNodeFactory, [{ optional: true; }, null]>;
    static ɵprov: ɵngcc0.ɵɵInjectableDeclaration<ProviderConfigurationNodeFactory>;
}

//# sourceMappingURL=provider-configuration-node.factory.d.ts.map