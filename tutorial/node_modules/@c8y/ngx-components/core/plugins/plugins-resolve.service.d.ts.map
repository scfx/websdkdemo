{"version":3,"file":"plugins-resolve.service.d.ts","sources":["plugins-resolve.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { Compiler, Injector } from '@angular/core';\nimport { ActionBarService } from '../action-bar/action-bar.service';\nimport { ActionService } from '../action/action.service';\nimport { BreadcrumbService } from '../breadcrumb/breadcrumb.service';\nimport { DocsService } from '../docs/docs.service';\nimport { DynamicComponentService } from '../dynamic-component/dynamic-component.service';\nimport { NavigatorService } from '../navigator/navigator.service';\nimport { RouterService } from '../router/router.service';\nimport { SearchService } from '../search/search.service';\nimport { TabsService } from '../tabs/tabs.service';\nexport declare class PluginsResolveService {\n    private tabs;\n    private navigator;\n    private action;\n    private actionBar;\n    private breadcrumb;\n    private dynamicComponent;\n    private search;\n    private c8yRouter;\n    private docs;\n    private compiler;\n    private injector;\n    private allHooks;\n    constructor(tabs: TabsService, navigator: NavigatorService, action: ActionService, actionBar: ActionBarService, breadcrumb: BreadcrumbService, dynamicComponent: DynamicComponentService, search: SearchService, c8yRouter: RouterService, docs: DocsService, compiler: Compiler, injector: Injector);\n    /**\n     * Loads plugins by resolving the remote NgModules and injecting it. Also attaching\n     * the hooks onto the root injector.\n     * @param remoteModules The remote plugins to load as factory name mapping array.\n     */\n    resolveRemotePlugins(remoteModules: Array<{\n        factory: any;\n        name: any;\n    }>): Promise<void>;\n}\n"]}