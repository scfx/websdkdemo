import { OnDestroy } from '@angular/core';
import { Alert } from './alert.model';
import { AlertService } from './alert.service';
import { AlertDetailsComponent } from './alert-details.component';
/**
 * Alert component allows creating alert with complex view.
 */
import * as ɵngcc0 from '@angular/core';
export declare class AlertComponent implements OnDestroy, Alert {
    alertService: AlertService;
    /**
     * The type of the alert.
     */
    type: 'success' | 'warning' | 'danger' | 'info' | 'system';
    /**
     * Function to call if user clicks on the detail button.
     */
    onDetail: () => void;
    /**
     * Function to call if user clicks on the close button.
     */
    onClose: () => void;
    /**
     * Detailed information to display.
     */
    detailedData: any;
    /**
     * The text templateRef to display message.
     */
    text: any;
    /**
     * Content of AlertDetailsComponent is displayed as alertDetails.
     */
    containDetailsComponent: AlertDetailsComponent;
    /**
     * @ignore
     */
    private viewInitTimeout;
    /**
     * @ignore
     */
    constructor(alertService: AlertService);
    /**
     * AlertComponent adds new alert to collection stored in alertService after view init.
     */
    ngAfterViewInit(): void;
    /**
     * AlertComponent removes alert from collection stored in alertService on destroy component.
     */
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<AlertComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<AlertComponent, "c8y-alert", never, { "type": "type"; "onDetail": "onDetail"; "onClose": "onClose"; }, {}, ["containDetailsComponent"], ["c8y-alert-text", "*", "c8y-alert-details"]>;
}

//# sourceMappingURL=alert.component.d.ts.map