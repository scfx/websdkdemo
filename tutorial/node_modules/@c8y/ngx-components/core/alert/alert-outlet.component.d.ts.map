{"version":3,"file":"alert-outlet.component.d.ts","sources":["alert-outlet.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { Alert } from './alert.model';\nimport { AlertService } from './alert.service';\nimport { BehaviorSubject } from 'rxjs';\n/**\n * Alert outlet component shows all added alerts. It is used in the application's `c8y-bootstrap` component.\n *\n * For applications which don’t use `c8y-bootstrap` component but want to display alerts via AlertService, a c8y-alert-outlet component needs to be added explicitly in the template.\n *\n * ## Example:\n * ```html\n *  <div class=\"alerts\">\n *    <c8y-alert-outlet></c8y-alert-outlet>\n *  </div>\n * ```\n */\nexport declare class AlertOutletComponent {\n    private position;\n    alertService: AlertService;\n    /**\n     * Currently displayed details of an alert. Only one alert’s details can be displayed at a time.”\n     */\n    detailDisplayedAlert: any;\n    /**\n     * @ignore\n     */\n    isStatic: boolean;\n    /**\n     * The array of current alerts.\n     */\n    get alerts(): BehaviorSubject<Alert[]>;\n    /**\n     * @ignore\n     */\n    constructor(position: string, alertService: AlertService);\n    /**\n     * Returns a CSS class for an alert depending on its type to style the corresponding alert component.\n     */\n    getClass(alert: Alert): string;\n    /**\n     * Executes alert’s onClose method, if provided, and closes the alert.\n     * @param alert The alert which will be closed.\n     */\n    close(alert: Alert): void;\n    /**\n     * Expands details part of particular alert, and collapses details for another alerts.\n     * @param alert The alert which details should be expanded.\n     */\n    showDetails(alert: Alert): void;\n    /**\n     * Returns true if alert has extra detailedData or defines custom onDetail method.\n     */\n    hasDetails(alert: Alert): any;\n    /**\n     * Collapses alert's details.\n     */\n    closeDetails(): void;\n    /**\n     * Returns true if details part of alert is expanded.\n     */\n    isDetailsShow(alert: Alert): boolean;\n    /**\n     * @ignore\n     */\n    isTemplateRef(value: any): boolean;\n    /**\n     * @ignore\n     */\n    template(content: any): any;\n    private setDetailsContent;\n}\n"]}