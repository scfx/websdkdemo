{"version":3,"file":"file-picker.component.d.ts","sources":["file-picker.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter, OnInit } from '@angular/core';\nimport { DroppedFile, DropAreaComponent } from '../drop-area/drop-area.component';\nimport { PickedFiles } from './file-picker.model';\nimport { FilePickerConfig } from './file-picker-config.model';\n/**\n * User can upload a binary directly or use an URL.\n *\n * ## Usage Example:\n *\n * ```html\n * <div>\n * <c8y-file-picker [maxAllowedFiles]=\"1\" (onFilesPicked)=\"onFile($event)\">\n * </c8y-file-picker>\n * </div>\n * ```\n */\nexport declare class FilePickerComponent implements OnInit {\n    dropArea: DropAreaComponent;\n    onFilesPicked: EventEmitter<PickedFiles>;\n    maxAllowedFiles: number;\n    uploadChoice: 'uploadBinary' | 'uploadUrl';\n    fileUrl: string;\n    fileBinary: DroppedFile;\n    config: FilePickerConfig;\n    /**\n     * Additional string to be displayed in a popover.\n     */\n    fileUrlPopover: string;\n    droppedFiles: DroppedFile[];\n    private fileToSave;\n    /**\n     * @ignore\n     */\n    ngOnInit(): void;\n    /**\n     * Triggered by dropped file in component and pass it into drop-area component.\n     */\n    onFileDropped(droppedFiles: DroppedFile[]): void;\n    /**\n     * Triggered when user changes upload choice, from upload url to upload binary.\n     */\n    clearInputFromUrl(): void;\n    /**\n     * Triggered when user changes upload choice, to avoid cumulation of droppedFiles.\n     */\n    clearSelectedFiles(): void;\n    /**\n     * Triggered when user puts binary's url to upload.\n     */\n    onFileUrlChange(urlStr: any): void;\n    /**\n     * Checks if there is popover to display.\n     */\n    isPopoverUsed(): boolean;\n}\n"]}