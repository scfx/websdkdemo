{"version":3,"file":"action-bar.component.d.ts","sources":["action-bar.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnDestroy, OnInit } from '@angular/core';\nimport { ActionBarItem } from './action-bar.model';\nimport { Observable } from 'rxjs';\n/**\n * This component is used as the outlet to show the action bars.\n * In a c8ycli app it is by default placed on the bootstrap component.\n */\nexport declare class ActionBarComponent implements OnInit, OnDestroy {\n    /**\n     * Identifies if the navigator is opened. If yes, the action-bar\n     * needs to move to the right.\n     */\n    navigatorOpen: boolean;\n    /**\n     * Identifies if the current view has tabs. If yes, the action bar needs\n     * to move down.\n     */\n    hasTabs: boolean;\n    /**\n     * Identifies if the tabs are aligned horizontally. If yes, the tabs don't\n     * need to move to the left.\n     */\n    isTabsHorizontal: boolean;\n    /**\n     * Identifies if in a mobile view the toolbar is expanded or not.\n     */\n    isPageToolbarExpanded: boolean;\n    /**\n     * Adds the default `c8y-ui-action-bar` class.\n     */\n    uiActionBar: boolean;\n    /**\n     * The current items to display in the ActionBar.\n     */\n    items$: Observable<ActionBarItem[]>;\n    /**\n     * Provides observable for right action items.\n     */\n    right$: Observable<ActionBarItem[]>;\n    /**\n     * Provides observable for left action items.\n     */\n    left$: Observable<ActionBarItem[]>;\n    /**\n     * Provides observable for more action items.\n     */\n    more$: Observable<ActionBarItem[]>;\n    /**\n     * Returns true if no items are present and hides the action bar.\n     */\n    hidden$: Observable<boolean>;\n    /**\n     * Binds hidden property to this component's native element\n     */\n    hidden: boolean;\n    private destroy$;\n    ngOnInit(): void;\n    ngOnDestroy(): void;\n    private byPriority;\n}\n"]}