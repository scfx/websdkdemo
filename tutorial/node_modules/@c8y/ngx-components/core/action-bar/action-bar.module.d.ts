/**
 * An action bar can be added with content projection or multi provider
 * extension. It allows to show them in three positions (left, right
 * or more). The actions placed here are always local actions to the
 * current route like "add device" or "lock dashboard".
 *
 * @example
 * ```html
 * <c8y-action-bar-item [placement]="'right'">
 *   <button class="btn btn-link" (click)="addRandom()"><i c8yIcon="plus-circle"></i> Add random</button>
 * </c8y-action-bar-item>
 * ```
 * @exports ActionBarComponent The outlet component
 * @exports ActionBarItemComponent The items to add with cp.
 */
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './action-bar.component';
import * as ɵngcc2 from './action-bar-item.component';
import * as ɵngcc3 from 'ngx-bootstrap/dropdown';
import * as ɵngcc4 from '../common/common.module';
import * as ɵngcc5 from 'ngx-bootstrap/collapse';
import * as ɵngcc6 from '@angular/router';
export declare class ActionBarModule {
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ActionBarModule, never>;
    static ɵmod: ɵngcc0.ɵɵNgModuleDeclaration<ActionBarModule, [typeof ɵngcc1.ActionBarComponent, typeof ɵngcc2.ActionBarItemComponent], [typeof ɵngcc3.BsDropdownModule, typeof ɵngcc4.CommonModule, typeof ɵngcc5.CollapseModule, typeof ɵngcc6.RouterModule], [typeof ɵngcc1.ActionBarComponent, typeof ɵngcc2.ActionBarItemComponent]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDeclaration<ActionBarModule>;
}

//# sourceMappingURL=action-bar.module.d.ts.map