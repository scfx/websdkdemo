import { RouterService } from './router.service';
import { ContextRouteGuard } from './context-route.guard';
import { Route } from './router.models';
import { RouterTabsResolver } from './router-tabs.resolver';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './context-route.component';
import * as ɵngcc2 from './empty.component';
import * as ɵngcc3 from '@angular/router';
import * as ɵngcc4 from '../header/header.module';
import * as ɵngcc5 from '../common/common.module';
export declare const routes: Route[];
export declare class RouterModule {
    static providers(): (typeof RouterTabsResolver | typeof RouterService | typeof ContextRouteGuard)[];
    static forRoot(): ({
        ngModule: typeof RouterModule;
        providers: (typeof RouterTabsResolver | typeof RouterService | typeof ContextRouteGuard)[];
    })&{ngModule:RouterModule};
    constructor(routerService: RouterService);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<RouterModule, never>;
    static ɵmod: ɵngcc0.ɵɵNgModuleDeclaration<RouterModule, [typeof ɵngcc1.ContextRouteComponent, typeof ɵngcc2.EmptyComponent], [typeof ɵngcc3.RouterModule, typeof ɵngcc4.HeaderModule, typeof ɵngcc5.CommonModule], never>;
    static ɵinj: ɵngcc0.ɵɵInjectorDeclaration<RouterModule>;
}

//# sourceMappingURL=router.module.d.ts.map