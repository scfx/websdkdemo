import { Injector } from '@angular/core';
import { OptionsService } from '../common/options.service';
import { AppStateService } from '../common/ui-state.service';
import { DocLink, DocLinkExtension } from './docs.models';
import { ExtensionPoint } from '../common/extension-hooks';
import { Observable, Subject } from 'rxjs';
import { Router } from '@angular/router';
import * as ɵngcc0 from '@angular/core';
export declare class DocsService implements ExtensionPoint<DocLinkExtension> {
    private options;
    private app;
    private injector;
    items$: Observable<DocLink[]>;
    /**
     * Additional factories that can be added by plugins.
     */
    factories: DocLinkExtension[];
    /**
     * Refresh the extension factories subject.
     * @readonly
     */
    readonly refreshTrigger: Subject<unknown>;
    constructor(options: OptionsService, app: AppStateService, injector: Injector, router: Router);
    getBaseUrl(): string;
    get templateStr(): string;
    getUserGuideLink(link: any): any;
    list(): Promise<DocLink[]>;
    refresh(): void;
    get(): {
        url: any;
        icon: string;
        label: string;
        type: "doc" | "quicklink";
        click?: any;
    }[];
    private getLink;
    private prefixWithSlash;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<DocsService, never>;
}

//# sourceMappingURL=docs.service.d.ts.map