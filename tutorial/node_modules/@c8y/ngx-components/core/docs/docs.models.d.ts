import { InjectionToken } from '@angular/core';
import { ExtensionFactory } from '../common/extension-hooks';
export interface DocLink {
    icon: string;
    label: string;
    url: string;
    type: 'doc' | 'quicklink';
    click?: any;
}
/**
 * An extension HOOK can use either a pure value:
 * ```typescript
 *  { provide: HOOK_X, useValue: { ...hookValue }, multi: true }
 * ```
 *
 * Or an array to directly register multiple:
 * ```typescript
 *  { provide: HOOK_X, useValue: [{ ...hookValues }], multi: true }
 * ```
 *
 * Or an ExtensionFactory which allows to define a get() function. This function
 * gets called on each navigation with the current route and can return values
 * async (observable or promise).
 * ```typescript
 *  { provide: HOOK_X, useFactory: { get: (route) => doSomethingAsync(route) }, multi: true }
 * ```
 */
export declare type DocLinkExtension = DocLink | DocLink[] | ExtensionFactory<DocLink>;
export declare const HOOK_DOCS: InjectionToken<DocLinkExtension[]>;
