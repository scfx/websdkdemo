{"version":3,"file":"if-allowed.directive.d.ts","sources":["if-allowed.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { TemplateRef, ViewContainerRef } from '@angular/core';\nimport { Permissions } from './permissions.service';\n/**\n * A structural directive that conditionally includes a template only if the user has\n * all or any of the roles passed as an input. By default the directive checks all roles:\n *\n * ```\n * <button *c8yIfAllowed=\"['ROLE_RECORD_DELETE', 'ROLE_ENTRY_DELETE']\" (click)=\"delete()\" title=\"Delete\">\n *   Delete\n * </button>\n * ```\n *\n * To check if the user has any of the required roles to view the element you need to use the `allowAny` input:\n *\n * ```\n * <button *c8yIfAllowed=\"['ROLE_RECORD_DELETE', 'ROLE_ENTRY_DELETE']; allowAny: true\" (click)=\"delete()\" title=\"Delete\">\n *   Delete\n * </button>\n * ```\n *\n * or use the shorter version\n *\n * ```\n * <button *c8yIfAllowed=\"['ROLE_RECORD_DELETE', 'ROLE_ENTRY_DELETE']; allowAny\" (click)=\"delete()\" title=\"Delete\">\n *   Delete\n * </button>\n * ```\n */\nexport declare class IfAllowedDirective {\n    private template;\n    private container;\n    private permissions;\n    /**\n     * One or many roles required for the element to be rendered\n     */\n    set c8yIfAllowed(roleIds: string | string[]);\n    /**\n     * Switches to the mode where at least one of the provided roles is sufficient for the element to be rendered\n     */\n    set c8yIfAllowedAllowAny(allowAny: boolean);\n    private rolesIds;\n    private allowAny;\n    constructor(template: TemplateRef<any>, container: ViewContainerRef, permissions: Permissions);\n    ngOnInit(): void;\n}\n"]}