{"version":3,"file":"outlet.directive.d.ts","sources":["outlet.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ComponentFactoryResolver, ElementRef, Renderer2, TemplateRef, Type, ViewContainerRef } from '@angular/core';\n/**\n * Directive to set a DOM node, a TemplateRef or any Component to a container or any node.\n * @example\n * <div *c8yOutlet=\"template\"></div>\n * <div *c8yOutlet=\"DeviceStatusComponent; properties: { node }\"></div>\n * <div *c8yOutlet=\"nodes\"></div>\n *\n *\n * note: If template is instance of HTMLElement (for example, node compiled by angularJS) then there can be\n * only single instance rendered, as only one instance of HTMLElement can exist in DOM.\n * If there is need for displaying same element multiple times, please make sure to inject into\n * this element createCopy function, which should return another instance of given element.\n *\n */\nexport declare class OutletDirective {\n    private viewContainer;\n    private resolver;\n    private renderer;\n    private el;\n    private properties;\n    private _element;\n    constructor(viewContainer: ViewContainerRef, resolver: ComponentFactoryResolver, renderer: Renderer2, el: ElementRef);\n    /**\n     * Directive to set a DOM node, a TemplateRef or any Component to a container or any node.\n     * @example\n     * <div *c8yOutlet=\"template\"></div>\n     * <div *c8yOutlet=\"DeviceStatusComponent; properties: { node }\"></div>\n     * <div *c8yOutlet=\"nodes\"></div>\n     */\n    set c8yOutlet(template: TemplateRef<any> | Type<any> | Element);\n    set c8yOutletProperties(value: any);\n    ngOnDestroy(): void;\n    private destroy;\n}\n"]}