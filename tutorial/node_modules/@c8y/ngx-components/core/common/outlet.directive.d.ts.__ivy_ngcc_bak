import { ComponentFactoryResolver, ElementRef, Renderer2, TemplateRef, Type, ViewContainerRef } from '@angular/core';
/**
 * Directive to set a DOM node, a TemplateRef or any Component to a container or any node.
 * @example
 * <div *c8yOutlet="template"></div>
 * <div *c8yOutlet="DeviceStatusComponent; properties: { node }"></div>
 * <div *c8yOutlet="nodes"></div>
 *
 *
 * note: If template is instance of HTMLElement (for example, node compiled by angularJS) then there can be
 * only single instance rendered, as only one instance of HTMLElement can exist in DOM.
 * If there is need for displaying same element multiple times, please make sure to inject into
 * this element createCopy function, which should return another instance of given element.
 *
 */
export declare class OutletDirective {
    private viewContainer;
    private resolver;
    private renderer;
    private el;
    private properties;
    private _element;
    constructor(viewContainer: ViewContainerRef, resolver: ComponentFactoryResolver, renderer: Renderer2, el: ElementRef);
    /**
     * Directive to set a DOM node, a TemplateRef or any Component to a container or any node.
     * @example
     * <div *c8yOutlet="template"></div>
     * <div *c8yOutlet="DeviceStatusComponent; properties: { node }"></div>
     * <div *c8yOutlet="nodes"></div>
     */
    set c8yOutlet(template: TemplateRef<any> | Type<any> | Element);
    set c8yOutletProperties(value: any);
    ngOnDestroy(): void;
    private destroy;
}
