import { NavigatorNode } from './navigator-node';
import { HeaderService } from '../header/header.service';
import { BehaviorSubject } from 'rxjs';
/**
 * The component shows all nodes that have been added to the navigator.
 * In addition, it allows you to add a header and a footer to the navigator.
 *
 * ## Example:
 * ```html
 * <c8y-navigator-outlet [nodes]="navigatorService.items$ | async" [open]="isOpen">
 *   <header class="navigator-slot-top"></header>
 *   <footer class="navigator-slot-bottom"></footer>
 * </c8y-navigator-outlet>
 * ```
 */
import * as ɵngcc0 from '@angular/core';
export declare class NavigatorOutletComponent {
    private headerService;
    /**
     * Navigator nodes list.
     */
    nodes: NavigatorNode[];
    /**
     * Determines whether the navigator menu should be open/closed.
     */
    open: boolean;
    /**
     * Determines whether the navigator pane should be rendered.
     */
    isShown$: BehaviorSubject<boolean>;
    constructor(headerService: HeaderService);
    /**
     * @ignore
     */
    ngOnChanges(): void;
    /**
     * Closes the navigator menu after clicking an item in the menu, in case of insufficient screen width.
     */
    collapseNavigator(from: 'icon' | 'expander' | 'link'): void;
    /**
     * @ignore
     */
    trackByPathOrLabel(index: any, node: any): any;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<NavigatorOutletComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<NavigatorOutletComponent, "c8y-navigator-outlet, c8y-ui-navigator", never, { "open": "open"; "nodes": "nodes"; }, {}, never, [".navigator-slot-top", ".navigator-slot-bottom"]>;
}

//# sourceMappingURL=navigator-outlet.component.d.ts.map