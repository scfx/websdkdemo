{"version":3,"file":"header.service.d.ts","sources":["header.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { BehaviorSubject, Observable } from 'rxjs';\nimport { OptionsService } from '../common/options.service';\nimport { StateService } from '../common/state-service.abstract';\nimport { NavigatorService } from '../navigator/navigator.service';\nimport { Header } from './header.model';\nimport { HumanizeAppNamePipe } from '../common';\n/**\n * A service which defines header functions.\n */\nexport declare class HeaderService extends StateService {\n    private navigatorService;\n    private options;\n    private humanizeAppName;\n    headerOpen: boolean;\n    header$: Observable<Header>;\n    navigatorOpen$: Observable<boolean>;\n    readonly DELAY_TO_AVOID_FLICKERING_ON_ASYNC_NODES = 1000;\n    hasItemsInNavigator$: Observable<boolean>;\n    state$: BehaviorSubject<Header>;\n    title: any;\n    constructor(navigatorService: NavigatorService, options: OptionsService, humanizeAppName: HumanizeAppNamePipe);\n    get state(): Header;\n    get navigatorHiddenOnStartup(): boolean;\n    get largeWidth(): boolean;\n    get shouldToggle(): boolean;\n    /**\n     * Toggles the main header menu in mobile view.\n     */\n    toggle(): void;\n    /**\n     * Toggles the navigator open status.\n     */\n    toggleNavigator(): void;\n    /**\n     * Force to close the navigator.\n     */\n    closeNavigator(): void;\n    /**\n     * Configures navigation options.\n     * @param config Object with the properties:\n     * - open: Boolean\n     */\n    configNavigator(config?: any): void;\n    /**\n     * Change the application title.\n     * @param newTitle The new title of the application.\n     */\n    changeTitle(newTitle?: any, pageTitleUpdate?: boolean): void;\n    /**\n     * Change the page title.\n     * @param newTitle The new title of the page.\n     */\n    changePageTitle(newTitle?: string): void;\n    /**\n     * This methods checks if the navigator toggles on startup\n     * or if an item is added to the navigator node.\n     * Delay of 300ms is intended for animation purpose.\n     */\n    verifyIfNavOpen(): void;\n    shouldShowBreadcrumbs(): boolean;\n}\n"]}