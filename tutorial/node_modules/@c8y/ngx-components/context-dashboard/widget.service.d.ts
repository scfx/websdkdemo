import { DynamicComponentService, DynamicComponentDefinition, Widget } from '@c8y/ngx-components';
import { TranslateService } from '@ngx-translate/core';
import { ContextDashboardConfig } from './context-dashboard.model';
import * as ɵngcc0 from '@angular/core';
export declare class WidgetService {
    private dynamicComponentService;
    private translateService;
    moduleConfig: ContextDashboardConfig;
    widgets: DynamicComponentDefinition[];
    constructor(dynamicComponentService: DynamicComponentService, translateService: TranslateService, moduleConfig: ContextDashboardConfig);
    getWidgetDefinition(componentId: any): Promise<DynamicComponentDefinition>;
    getWidgetDefinitions(): any;
    mapLegacy(widget: Partial<Widget>): Promise<Widget>;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<WidgetService, [null, null, { optional: true; }]>;
}

//# sourceMappingURL=widget.service.d.ts.map