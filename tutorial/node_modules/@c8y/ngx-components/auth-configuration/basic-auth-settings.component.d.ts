import { SimpleChanges } from '@angular/core';
import { IAuthenticationRestrictions, TenantLoginOptionsService, TenantLoginOptionType } from '@c8y/client';
import { AuthConfiguration } from './auth-configuration.model';
import { TenantUiService } from '@c8y/ngx-components';
import * as ɵngcc0 from '@angular/core';
export declare class BasicAuthSettingsComponent {
    private tenantLoginOptionsService;
    private tenantUiService;
    authConfiguration: AuthConfiguration;
    forbiddenUserAgents: any;
    trustedUserAgents: any;
    preferredLoginOptionType: TenantLoginOptionType;
    tenantLoginOptionTypeEnum: typeof TenantLoginOptionType;
    constructor(tenantLoginOptionsService: TenantLoginOptionsService, tenantUiService: TenantUiService);
    ngOnChanges(changes: SimpleChanges): void;
    ngDoCheck(): void;
    get forbiddenWebBrowsers(): boolean;
    set forbiddenWebBrowsers(value: boolean);
    forbiddenUserAgentsChanged({ event, index }: {
        event: any;
        index: any;
    }): void;
    forbiddenUserAgentsRemove(index: any): void;
    trustedUserAgentsChanged({ event, index }: {
        event: any;
        index: any;
    }): void;
    trustedUserAgentsRemove(index: any): void;
    get authenticationRestrictions(): IAuthenticationRestrictions;
    add(collection: any): void;
    private remove;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<BasicAuthSettingsComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<BasicAuthSettingsComponent, "c8y-basic-auth-settings", never, { "authConfiguration": "authConfiguration"; }, {}, never, never>;
}

//# sourceMappingURL=basic-auth-settings.component.d.ts.map