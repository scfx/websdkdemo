import { ApplicationService, IResult, ITenantLoginOption, ITenantOption, SystemOptionsService, TenantLoginOptionsService, TenantOptionsService } from '@c8y/client';
import { Observable } from 'rxjs';
import { AuthConfiguration } from './auth-configuration.model';
import { TenantUiService } from '@c8y/ngx-components';
export declare class AuthConfigurationService {
    private tenantLoginOptionsService;
    private tenantOptionsService;
    private systemOptionsService;
    private applicationService;
    private tenantUiService;
    private systemOptionsWithDefaultValue;
    private tenantOptionsWithDefaultValue;
    constructor(tenantLoginOptionsService: TenantLoginOptionsService, tenantOptionsService: TenantOptionsService, systemOptionsService: SystemOptionsService, applicationService: ApplicationService, tenantUiService: TenantUiService);
    getAuthConfiguration$(): Observable<AuthConfiguration>;
    save(newAuthConfiguration: AuthConfiguration, previousAuthConfiguration: AuthConfiguration): Promise<[IResult<ITenantLoginOption>, IResult<ITenantLoginOption>, Promise<IResult<ITenantOption>>[]]>;
    private saveOrUpdateLoginOption;
    private prepareBasicLoginOption;
    private prepareOauthInternalLoginOption;
    private originalLoginOptionWithDefaults;
    private sessionConfiguration;
    private authenticationRestriction;
    private visibleOnLoginPage;
    private removeReadOnlyFields;
    private prepareTenantOptions;
    private getLoginOptions$;
    private getPreferredLoginOptionType$;
    private addDefaultLoginOptions;
    private getTenantOptions$;
    private getSystemOptions$;
    private isSmsApplicationAvailable$;
    private getOptionsObject;
    private getValue;
    private getDefaultLoginOption;
}
