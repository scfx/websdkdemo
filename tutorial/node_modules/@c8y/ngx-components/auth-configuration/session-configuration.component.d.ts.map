{"version":3,"file":"session-configuration.component.d.ts","sources":["session-configuration.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { SimpleChanges } from '@angular/core';\nimport { ISessionConfiguration } from '@c8y/client';\nimport { TenantUiService } from '@c8y/ngx-components';\nimport { AuthConfiguration } from './auth-configuration.model';\nimport { TranslateService } from '@ngx-translate/core';\nexport declare class SessionConfigurationComponent {\n    private tenantUiService;\n    private translateService;\n    authConfiguration: AuthConfiguration;\n    ABSOLUTE_TIMEOUT_VALIDATION_MESSAGE: any;\n    RENEWAL_TIMEOUT_VALIDATION_MESSAGE: any;\n    MAX_TOKEN_LIFESPAN_VALIDATION_MESSAGE: any;\n    MIN_TOKEN_LIFESPAN_VALIDATION_MESSAGE: any;\n    USER_AGENT_VALIDATION_REQUIRED_POPOVER: any;\n    private MIN_ABSOLUTE_TIMEOUT;\n    private originalSessionConfiguration;\n    private previousTokenLifespan;\n    constructor(tenantUiService: TenantUiService, translateService: TranslateService);\n    ngOnChanges(changes: SimpleChanges): void;\n    get renewalTimeoutSeconds(): number;\n    set renewalTimeoutSeconds(value: number);\n    get absoluteTimeoutSeconds(): number;\n    set absoluteTimeoutSeconds(value: number);\n    get maximumNumberOfParallelSessions(): number;\n    set maximumNumberOfParallelSessions(value: number);\n    get userAgentValidationRequired(): boolean;\n    set userAgentValidationRequired(value: boolean);\n    get basicTokenLifespan(): any;\n    set basicTokenLifespan(value: any);\n    get useSessionConfiguration(): boolean;\n    set useSessionConfiguration(value: boolean);\n    get absoluteTimeoutConstraints(): {\n        min: number;\n    };\n    get renewalTimeoutConstraints(): {\n        min: number;\n        max: number;\n    };\n    get basicTokenLifespanConstraints(): {\n        min: number;\n        max: number;\n    };\n    get sessionConfiguration(): ISessionConfiguration;\n    set sessionConfiguration(value: ISessionConfiguration);\n    private convertToMillis;\n    private convertToSeconds;\n}\n"]}