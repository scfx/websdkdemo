import { AfterViewInit, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';
import { IOperation, IOperationBulk, IResultList } from '@c8y/client';
import { StatusFilterComponent, IStatusOption } from '@c8y/ngx-components/operations/status-filter';
import { BulkOperationsService } from '@c8y/ngx-components/operations/bulk-operations-service';
export declare class SingleOperationsListComponent implements AfterViewInit, OnChanges {
    private bulkOperationsService;
    bulkOperation: Partial<IOperationBulk>;
    readOnly: boolean;
    onRetryFailedOperations: EventEmitter<Partial<IOperationBulk>>;
    statusFilter: StatusFilterComponent;
    singleOperationStatusProperties: {
        label: any;
        iconClass: string;
        selected: boolean;
    }[];
    singleOperationStatusNames: {
        PENDING: any;
        EXECUTING: any;
        FAILED: any;
        SUCCESSFUL: any;
        ALL: any;
    };
    singleOperations: IResultList<IOperation>;
    constructor(bulkOperationsService: BulkOperationsService);
    ngAfterViewInit(): Promise<void>;
    ngOnChanges(changes: SimpleChanges): void;
    filterOperationsByType(): void;
    getFilterTypeOfSingleOperations(): any;
    getOperationsByStatus(filter: IStatusOption[]): Promise<void>;
    retryBulkOperation(): void;
}
