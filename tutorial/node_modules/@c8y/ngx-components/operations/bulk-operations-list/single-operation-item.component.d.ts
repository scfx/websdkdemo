import { ElementRef } from '@angular/core';
import { IOperation } from '@c8y/client';
import { AlertService } from '@c8y/ngx-components';
import { BulkOperationsService } from '@c8y/ngx-components/operations/bulk-operations-service';
import * as ɵngcc0 from '@angular/core';
export declare class SingleOperationItemComponent {
    private bulkOperationsService;
    private alertService;
    device: {};
    showIfTextTruncated: boolean;
    singleOperationStatusNames: {
        PENDING: any;
        EXECUTING: any;
        FAILED: any;
        SUCCESSFUL: any;
        ALL: any;
    };
    singleOperationsStatusProperties: {
        label: any;
        iconClass: string;
        selected: boolean;
    }[];
    iconClass: string;
    operation: IOperation;
    readOnly: boolean;
    failureReasonRef: ElementRef;
    constructor(bulkOperationsService: BulkOperationsService, alertService: AlertService);
    ngOnInit(): Promise<void>;
    ngAfterViewInit(): void;
    retrySingleOperation(singleOperation: any): Promise<void>;
    getIconClass(): string;
    private getDeviceMO;
    private isTextTruncated;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<SingleOperationItemComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<SingleOperationItemComponent, "c8y-single-operation-item", never, { "readOnly": "readOnly"; "operation": "operation"; }, {}, never, never>;
}

//# sourceMappingURL=single-operation-item.component.d.ts.map