{"__symbolic":"module","version":4,"metadata":{"StepperBulkTypeFirmwareComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"@c8y/ngx-components/operations/bulk-operation-stepper","name":"BaseStepperComponent","line":17,"character":54},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":13,"character":1},"arguments":[{"selector":"c8y-stepper-firmware","template":"<c8y-bulk-operation-stepper>\n  <ng-container\n    *customStep=\"\n      'Select firmware' | translate;\n      completed: !!stepData?.firmware;\n      buttonsDisabled: !stepData?.firmware;\n      onNext: goToVersionOrPatchStep.bind(this)\n    \"\n  >\n    <c8y-select-firmware-step\n      [selected]=\"stepData?.firmware\"\n      (firmware)=\"onFirmwareSelected($event)\"\n      class=\"d-contents\"\n    ></c8y-select-firmware-step\n  ></ng-container>\n  <ng-container\n    *customStep=\"\n      'Select version or patch' | translate;\n      completed: !!stepData?.versionOrPatch;\n      buttonsDisabled: !stepData?.versionOrPatch\n    \"\n  >\n    <div class=\"card-block p-t-0 flex-no-shrink separator-bottom col-xs-12\">\n      <div class=\"row\">\n        <div class=\"col-md-6 col-md-offset-3 col-lg-4 col-lg-offset-4\">\n          <h4 class=\"text-center m-b-16 text-gray\" translate>\n            Select version or patch\n          </h4>\n          <p class=\"text-center p-b-8 text-truncate\">\n            <strong [title]=\"stepData?.firmware?.name\">{{ stepData?.firmware?.name }}</strong\n            ><br />\n            <small [title]=\"stepData?.firmware?.description\">{{\n              stepData?.firmware?.description\n            }}</small>\n          </p>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-xs-12 flex-grow no-gutter\">\n      <div class=\"card-inner-scroll fit-h\">\n        <div class=\"card-block p-t-0 p-b-0\">\n          <c8y-version-or-patch-step\n            [selected]=\"stepData?.versionOrPatch\"\n            (versionOrPatch)=\"onVersionOrPatchSelected($event)\">\n          </c8y-version-or-patch-step>\n        </div>\n      </div>\n    </div>\n  </ng-container>\n</c8y-bulk-operation-stepper>\n"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@c8y/ngx-components/operations/bulk-operations-service","name":"BulkOperationsService","line":33,"character":34},{"__symbolic":"reference","module":"@ngx-translate/core","name":"TranslateService","line":34,"character":23}]}],"goToVersionOrPatchStep":[{"__symbolic":"method"}],"onVersionOrPatchSelected":[{"__symbolic":"method"}],"onFirmwareSelected":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"retrieveOperationPrototype":[{"__symbolic":"method"}],"onSelectionChange":[{"__symbolic":"method"}]}},"VersionOrPatchComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":17,"character":1},"arguments":[{"selector":"c8y-version-or-patch-step","template":"<c8y-list-group\n  class=\"m-b-16\"\n  [ngClass]=\"{ 'dd-low': elementCount <= DD_LOW_COUNT }\"\n  *ngIf=\"(baseVersions$ | async)?.data.length > 0\"\n>\n  <c8y-li *c8yFor=\"let baseVersion of baseVersions$ | async; let i = index; loadMore: 'auto'\">\n    <c8y-li-icon>\n      <i c8yIcon=\"c8y-firmware\"></i>\n    </c8y-li-icon>\n\n    <c8y-li-body class=\"content-flex-50\">\n      <div class=\"col-10\">\n        <p>{{ baseVersion.c8y_Firmware.version }}</p>\n      </div>\n      <div class=\"col-2\">\n        <span *ngIf=\"isLegacy$ | async\" class=\"label label-warning\">\n          {{ 'Legacy' | translate }}\n        </span>\n\n        <span *ngIf=\"!(isLegacy$ | async)\">\n          <span *ngIf=\"(getPatchVersionsCount$(baseVersion) | async) === null\">\n            <span class=\"label label-info\">\n              <i c8yIcon=\"circle-o-notch\" class=\"icon-spin\"></i>\n            </span>\n          </span>\n\n          <span *ngIf=\"(getPatchVersionsCount$(baseVersion) | async) !== null\">\n            <span [ngPlural]=\"getPatchVersionsCount$(baseVersion) | async\">\n              <ng-template ngPluralCase=\"=0\">\n                <span class=\"label label-default\"> <span translate>No patches</span></span>\n              </ng-template>\n              <ng-template ngPluralCase=\"=1\">\n                <span class=\"label label-info\">\n                  <span translate>1 patch</span>\n                </span>\n              </ng-template>\n              <ng-template ngPluralCase=\"other\">\n                <span class=\"label label-info\">\n                  <span\n                    ngNonBindable\n                    translate\n                    [translateParams]=\"{ count: getPatchVersionsCount$(baseVersion) | async }\"\n                    >{{ count }} patches</span\n                  ></span\n                >\n              </ng-template>\n            </span>\n          </span>\n        </span>\n      </div>\n    </c8y-li-body>\n\n    <c8y-li-collapse>\n      <c8y-list-group>\n        <c8y-li\n          *c8yFor=\"\n            let patchVersion of getBaseVersionAndPatches$(baseVersion) | async;\n            let i = index;\n            loadMore: 'auto'\n          \"\n        >\n          <c8y-li-radio\n            (onSelect)=\"selectVersionOrPatch($event, patchVersion)\"\n            [selected]=\"patchVersion === selected\"\n          ></c8y-li-radio>\n          <c8y-li-icon>\n            <i c8yIcon=\"c8y-firmware\"></i>\n          </c8y-li-icon>\n          <c8y-li-body class=\"content-flex-50\">\n            <div class=\"col-3\">\n              {{ patchVersion.c8y_Firmware.version }}\n            </div>\n            <div class=\"col-3\">\n              <span *ngIf=\"patchVersion.c8y_Patch; else version\" translate class=\"label label-info\"\n                >patch</span\n              >\n              <ng-template #version\n                ><span translate class=\"label label-primary\">version</span></ng-template\n              >\n            </div>\n            <div class=\"col-6 text-truncate\">\n              <span class=\"text-label-small m-r-4\" translate>\n                File\n              </span>\n              <span title=\"{{ getBinaryName$(patchVersion.c8y_Firmware.url) | async }}\">\n                {{ getBinaryName$(patchVersion.c8y_Firmware.url) | async }}\n              </span>\n            </div>\n          </c8y-li-body>\n        </c8y-li>\n      </c8y-list-group>\n    </c8y-li-collapse>\n  </c8y-li>\n</c8y-list-group>\n"}]}],"members":{"selected":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":22,"character":3}}]}],"versionOrPatch":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":23,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@c8y/ngx-components/repository","name":"RepositoryService","line":55,"character":31},{"__symbolic":"reference","module":"@c8y/client","name":"InventoryService","line":56,"character":30},{"__symbolic":"reference","module":"@c8y/ngx-components/operations/bulk-operations-service","name":"BulkOperationsService","line":57,"character":28}]}],"getBinaryName$":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@c8y/ngx-components","name":"memoize","line":62,"character":3}}]}],"getBaseVersionAndPatches$":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@c8y/ngx-components","name":"memoize","line":67,"character":3},"arguments":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"lodash-es","name":"property","line":67,"character":11},"arguments":["id"]}]}]}],"getPatchVersionsCount$":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@c8y/ngx-components","name":"memoize","line":78,"character":3},"arguments":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"lodash-es","name":"property","line":78,"character":11},"arguments":["id"]}]}]}],"selectVersionOrPatch":[{"__symbolic":"method"}]}},"StepperBulkTypeFirmwareModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":17,"character":1},"arguments":[{"declarations":[{"__symbolic":"reference","name":"StepperBulkTypeFirmwareComponent"},{"__symbolic":"reference","name":"VersionOrPatchComponent"},{"__symbolic":"reference","name":"SelectFirmwareComponent"}],"imports":[{"__symbolic":"reference","module":"@c8y/ngx-components","name":"CoreModule","line":24,"character":4},{"__symbolic":"reference","module":"@c8y/ngx-components","name":"FormsModule","line":25,"character":4},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule","line":26,"character":4},{"__symbolic":"reference","module":"@c8y/ngx-components/operations/bulk-operation-stepper","name":"BulkOperationStepperModule","line":27,"character":4},{"__symbolic":"reference","module":"@c8y/ngx-components/repository","name":"RepositoryModule","line":28,"character":4}],"providers":[{"provide":{"__symbolic":"reference","module":"@c8y/ngx-components/operations/bulk-operations-service","name":"HOOK_LIST_BULK_TYPE","line":32,"character":15},"useValue":{"type":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@c8y/ngx-components/operations/bulk-operations-service","name":"BulkOperationType","line":34,"character":14},"member":"FIRMWARE"},"c8yIcon":"c8y-firmware","name":{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@c8y/ngx-components","name":"gettext","line":36,"character":14},"arguments":["Firmware update"]},"path":{"__symbolic":"binop","operator":"+","left":{"__symbolic":"reference","module":"@c8y/ngx-components/operations/bulk-operations-service","name":"baseUrl","line":37,"character":17},"right":"firmware"},"component":{"__symbolic":"reference","name":"StepperBulkTypeFirmwareComponent"},"fragments":["c8y_Firmware"],"selected":false},"multi":true}],"entryComponents":[{"__symbolic":"reference","name":"StepperBulkTypeFirmwareComponent"}],"exports":[{"__symbolic":"reference","name":"StepperBulkTypeFirmwareComponent"}]}]}],"members":{}},"SelectFirmwareComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":11,"character":1},"arguments":[{"selector":"c8y-select-firmware-step","template":"<div class=\"card-block p-t-0 flex-no-shrink separator-bottom col-xs-12\">\n  <div class=\"row p-b-16\">\n    <div class=\"col-md-6 col-md-offset-3 col-lg-4 col-lg-offset-4\">\n      <h4 class=\"text-center m-b-16\">{{ 'Select firmware' | translate }}</h4>\n      <div class=\"input-group input-group-search\">\n        <input\n          type=\"search\"\n          class=\"form-control\"\n          title=\"{{ 'Filter firmware…' | translate }}\"\n          placeholder=\"{{ 'Filter firmware…' | translate }}\"\n          [ngModel]=\"textFilter$ | async\"\n          (ngModelChange)=\"textFilter$.next($event)\"\n        />\n        <span class=\"input-group-addon\">\n          <i c8yIcon=\"filter\" *ngIf=\"(textFilter$ | async).length === 0\"></i>\n          <i\n            c8yIcon=\"times\"\n            class=\"text-muted\"\n            *ngIf=\"(textFilter$ | async).length > 0\"\n            (click)=\"textFilter$.next('')\"\n          ></i>\n        </span>\n      </div>\n    </div>\n  </div>\n</div>\n<c8y-search-result-empty *ngIf=\"(textFilter$ | async).length > 0 && elementCount===0\">\n</c8y-search-result-empty>\n<div class=\"col-xs-12 flex-grow no-gutter\">\n  <div class=\"card-inner-scroll fit-h\">\n    <div class=\"card-block p-t-0 p-b-0\">\n      <c8y-list-group [ngClass]=\"{ 'dd-low': elementCount <= DD_LOW_COUNT }\">\n        <c8y-li *c8yFor=\"let firmware of firmwares$ | async; let i = index; loadMore: 'auto'\">\n          <c8y-li-radio (onSelect)=\"selectFirmware($event, firmware)\" [selected]=\"firmware === selected\"></c8y-li-radio>\n          <c8y-li-icon>\n            <i c8yIcon=\"c8y-firmware\"></i>\n          </c8y-li-icon>\n\n          <c8y-li-body class=\"content-flex-60\">\n            <div class=\"col-3\">\n              <div class=\"text-truncate\" title=\"{{ firmware.name }}\">\n                {{ firmware.name }}\n              </div>\n            </div>\n            <div class=\"col-4\">\n              <div class=\"text-truncate\" title=\"{{ getDescriptionTitle(firmware) }}\">\n                <small *ngIf=\"firmware.description; else noDesc\">\n                  {{ firmware.description }}\n                </small>\n                <ng-template #noDesc>\n                  <small>\n                    <em class=\"text-muted\" translate>No description available.</em>\n                  </small>\n                </ng-template>\n              </div>\n            </div>\n            <div class=\"col-3\">\n              <div class=\"text-truncate\" title=\"{{ 'Device type' | translate }}: {{ getDeviceTypeTitle(firmware) }}\">\n                <span class=\"text-label-small m-r-8\" translate>\n                  Device type\n                </span>\n                <span *ngIf=\"firmware.c8y_Filter?.type; else noType\">\n                  {{ firmware.c8y_Filter?.type }}\n                </span>\n                <ng-template #noType>\n                  <em class=\"text-muted\" translate>Undefined`device type`</em>\n                </ng-template>\n              </div>\n            </div>\n            <div class=\"col-2\">\n              <span *ngIf=\"isLegacy(firmware)\" class=\"label label-warning\">\n                <span translate>Legacy</span>\n              </span>\n\n              <span *ngIf=\"!isLegacy(firmware)\">\n                <span *ngIf=\"(getBaseVersionsCount$(firmware) | async) === null\">\n                  <span class=\"label label-info\">\n                    <i c8yIcon=\"circle-o-notch\" class=\"icon-spin\"></i>\n                  </span>\n                </span>\n                <span *ngIf=\"(getBaseVersionsCount$(firmware) | async) !== null\">\n                  <span [ngPlural]=\"getBaseVersionsCount$(firmware) | async\">\n                    <ng-template ngPluralCase=\"=0\">\n                      <span class=\"label label-default\">\n                        <span translate>No versions</span>\n                      </span>\n                    </ng-template>\n                    <ng-template ngPluralCase=\"=1\">\n                      <span class=\"label label-info\"><span translate>1 version</span></span>\n                    </ng-template>\n                    <ng-template ngPluralCase=\"other\">\n                      <span class=\"label label-info\">\n                        <span\n                          ngNonBindable\n                          translate\n                          [translateParams]=\"{\n                            count: getBaseVersionsCount$(firmware) | async\n                          }\"\n                          >{{ count }} versions</span\n                        >\n                      </span>\n                    </ng-template>\n                  </span>\n                </span>\n              </span>\n            </div>\n          </c8y-li-body>\n        </c8y-li>\n      </c8y-list-group>\n    </div>\n  </div>\n</div>\n"}]}],"members":{"selected":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":3}}]}],"firmware":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":17,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@c8y/ngx-components/repository","name":"RepositoryService","line":39,"character":31},{"__symbolic":"reference","module":"@c8y/ngx-components/operations/bulk-operations-service","name":"BulkOperationsService","line":40,"character":28},{"__symbolic":"reference","module":"@ngx-translate/core","name":"TranslateService","line":41,"character":23}]}],"ngOnInit":[{"__symbolic":"method"}],"selectFirmware":[{"__symbolic":"method"}],"getBaseVersionsCount$":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@c8y/ngx-components","name":"memoize","line":54,"character":3},"arguments":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"lodash-es","name":"property","line":54,"character":11},"arguments":["id"]}]}]}],"getDescriptionTitle":[{"__symbolic":"method"}],"getDeviceTypeTitle":[{"__symbolic":"method"}],"getFirmwares":[{"__symbolic":"method"}]}}},"origins":{"StepperBulkTypeFirmwareComponent":"./stepper-bulk-type-firmware.component","VersionOrPatchComponent":"./version-or-patch.component","StepperBulkTypeFirmwareModule":"./stepper-bulk-type-firmware.module","SelectFirmwareComponent":"./select-firmware.component"},"importAs":"@c8y/ngx-components/operations/stepper-bulk-type-firmware"}