import { CdkStep } from '@angular/cdk/stepper';
import { C8yStepper, ModalService } from '@c8y/ngx-components';
import { TranslateService } from '@ngx-translate/core';
import { BaseStepperComponent } from '@c8y/ngx-components/operations/bulk-operation-stepper';
import { OperationDetails } from '@c8y/ngx-components/operations/bulk-operations-service';
import { SelectSoftwareStepComponent } from './select-software-step.component';
import { ISelectedSoftware } from './select-software.model';
import * as ɵngcc0 from '@angular/core';
export declare class StepperBulkTypeSoftwareComponent extends BaseStepperComponent {
    private modal;
    private translate;
    readonly descriptionTemplateSingle: string;
    readonly descriptionTemplateOneOther: string;
    readonly descriptionTemplateMultiple: string;
    selectedSoftware: ISelectedSoftware[];
    selectSoftware: SelectSoftwareStepComponent;
    constructor(modal: ModalService, translate: TranslateService);
    onSoftwareSelected(selectedItem: any): void;
    confirmSoftwareSelection($event: {
        stepper: C8yStepper;
        step: CdkStep;
    }): Promise<void>;
    protected retrieveOperationPrototype(): OperationDetails;
    private getUniqueDeviceTypes;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<StepperBulkTypeSoftwareComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<StepperBulkTypeSoftwareComponent, "c8y-stepper-bulk-type-software", never, {}, {}, never, never>;
}

//# sourceMappingURL=stepper-bulk-type-software.component.d.ts.map