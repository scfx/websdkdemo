import { CdkStep } from '@angular/cdk/stepper';
import { IManagedObject, IResultList } from '@c8y/client';
import { C8yStepper } from '@c8y/ngx-components';
import { RepositoryService } from '@c8y/ngx-components/repository';
import { TranslateService } from '@ngx-translate/core';
import { BehaviorSubject, Observable } from 'rxjs';
import { BaseStepperComponent } from '@c8y/ngx-components/operations/bulk-operation-stepper';
import { BulkOperationsService, OperationDetails } from '@c8y/ngx-components/operations/bulk-operations-service';
export declare class StepperBulkTypeConfigurationComponent extends BaseStepperComponent {
    private bulkOperationService;
    private repositoryService;
    private translate;
    readonly NO_DEVICE_TYPE_AVAILABLE: any;
    selectedConfiguration: IManagedObject;
    elementCount: number;
    DD_LOW_COUNT: number;
    textFilter$: BehaviorSubject<string>;
    configType$: BehaviorSubject<string>;
    configTypes: any[];
    selectedConfigType: {
        name: string;
    };
    configurations$: Observable<IResultList<IManagedObject>>;
    private configTypeSubscription;
    constructor(bulkOperationService: BulkOperationsService, repositoryService: RepositoryService, translate: TranslateService);
    loadConfigurationTypes(): void;
    ngOnDestroy(): void;
    selectConfiguration(configuration: IManagedObject): void;
    goToSecondStep($event: {
        stepper: C8yStepper;
        step: CdkStep;
    }): void;
    getConfigBinary(): Promise<void>;
    getDeviceTypeTitle(configuration: IManagedObject): string;
    protected retrieveOperationPrototype(): OperationDetails;
    private getConfiguration;
}
