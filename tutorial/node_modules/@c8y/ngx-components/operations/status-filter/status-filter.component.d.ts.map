{"version":3,"file":"status-filter.component.d.ts","sources":["status-filter.component.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter } from '@angular/core';\nimport { IStatusOption } from './status-option.model';\nexport declare class StatusFilterComponent {\n    statusOptions: Array<{\n        selected: boolean;\n        option: IStatusOption;\n    }>;\n    /** List of filter options to be displayed */\n    set options(options: IStatusOption[]);\n    /**\n     * Allows multiple options to be active simultaneosly.\n     */\n    set _multiple(multiple: boolean);\n    /** Display the filter as a small button group */\n    set _small(small: boolean);\n    get displaySmall(): boolean;\n    onFilterChanged: EventEmitter<IStatusOption[]>;\n    isAllButtonSelected: boolean;\n    private multiple;\n    private small;\n    changeFilter(option: {\n        selected: boolean;\n        option: IStatusOption;\n    }): void;\n    removeFilter(): void;\n    /**\n     * Allows the filter to be initalliy displayed with some preset filters.\n     *\n     * @param filters An `IStatusOption` array defining filter options to be preset.\n     * @param emit  (optional) If `true` component will emit `onFilterChanged` event.\n     */\n    preset(filters: IStatusOption[], emit?: boolean): void;\n    reset(): void;\n    activeFilters(): IStatusOption[];\n    isFilterApplied(): boolean;\n    private emitSelectedOptions;\n}\n"]}