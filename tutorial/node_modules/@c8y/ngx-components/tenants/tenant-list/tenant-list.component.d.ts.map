{"version":3,"file":"tenant-list.component.d.ts","sources":["tenant-list.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { TranslateService } from '@ngx-translate/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { ICurrentTenant, ITenant, TenantService, TenantStatus, UserService } from '@c8y/client';\nimport { ActionControl, AlertService, AppStateService, Column, DisplayOptions, ModalService, Pagination, TenantUiService, PasswordService } from '@c8y/ngx-components';\nexport declare class TenantListComponent implements OnInit {\n    appState: AppStateService;\n    private alertService;\n    private modalService;\n    private translateService;\n    private tenantService;\n    private tenantUiService;\n    private location;\n    private passwordService;\n    private userService;\n    tenants$: BehaviorSubject<ITenant[]>;\n    currentTenant: ICurrentTenant;\n    isManagementTenant: boolean;\n    TOP_TENANT_NAME: string;\n    title: string;\n    loadMoreItemsLabel: string;\n    loadingItemsLabel: string;\n    displayOptions: DisplayOptions;\n    columns: Column[];\n    pagination: Pagination;\n    showSearch: boolean;\n    actionControls: ActionControl[];\n    TenantStatus: typeof TenantStatus;\n    constructor(appState: AppStateService, alertService: AlertService, modalService: ModalService, translateService: TranslateService, tenantService: TenantService, tenantUiService: TenantUiService, location: Location, passwordService: PasswordService, userService: UserService);\n    ngOnInit(): Promise<void>;\n    loadTenants(): void;\n    getColumns(): Column[];\n    getPagination(): Pagination;\n    getActionControls(): ActionControl[];\n    createTenant(): void;\n    goToDetails(tenant: ITenant): void;\n    activateTenant(tenant: any): Promise<void>;\n    suspendTenant(tenant: any): Promise<void>;\n    delete(tenant: any): Promise<void>;\n    isActive(tenant: ITenant): boolean;\n    isSuspended(tenant: ITenant): boolean;\n    downloadNewsletterEmails(): Promise<void>;\n}\n"]}