import { __awaiter } from "tslib";
import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';
import { OperationBulkGeneralStatus } from '@c8y/client';
import { AlertService, gettext, ModalService, Status } from '@c8y/ngx-components';
import { assign, cloneDeep } from 'lodash-es';
import { BsModalService } from 'ngx-bootstrap/modal';
import { BulkOperationsService } from '@c8y/ngx-components/operations/bulk-operations-service';
import { BulkOperationsRescheduleModalComponent } from './modals/bulk-operations-reschedule-modal.component';
import { BULK_OPERATION_FALLBACK_STATUS_ICON, BULK_OPERATION_STATUS_OPTIONS } from './bulk-operation-list-item.model';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@c8y/ngx-components/operations/bulk-operations-service';
import * as ɵngcc2 from '@c8y/ngx-components';
import * as ɵngcc3 from 'ngx-bootstrap/modal';
import * as ɵngcc4 from '@angular/common';
import * as ɵngcc5 from 'ngx-bootstrap/popover';
import * as ɵngcc6 from './bulk-operation-details-tabs.component';

const _c0 = ["listItem"];
function BulkOperationListItemComponent_hr_14_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "hr", 22);
} }
function BulkOperationListItemComponent_ng_template_15_span_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "c8yNumber");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r10 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1("", ɵngcc0.ɵɵpipeBind3(2, 1, ctx_r10.progressBarStatus, "floor", "1.0-0"), "%");
} }
function BulkOperationListItemComponent_ng_template_15_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 23);
    ɵngcc0.ɵɵpipe(1, "c8yNumber");
    ɵngcc0.ɵɵelementStart(2, "div", 24);
    ɵngcc0.ɵɵtemplate(3, BulkOperationListItemComponent_ng_template_15_span_3_Template, 3, 5, "span", 19);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMap(ctx_r3.progressBarClass);
    ɵngcc0.ɵɵpropertyInterpolate1("title", "", ɵngcc0.ɵɵpipeBind3(1, 8, ctx_r3.progressBarStatus, "floor", "1.0-0"), "%");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵclassMap(ctx_r3.progressBarColor);
    ɵngcc0.ɵɵstyleProp("width", ctx_r3.progressBarStatus, "%");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r3.progressBarStatus !== 0);
} }
const _c1 = function (a0) { return { bulkOperationsCountSuccessful: a0 }; };
function BulkOperationListItemComponent_small_19_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "small", 25);
    ɵngcc0.ɵɵelement(1, "i", 26);
    ɵngcc0.ɵɵelementStart(2, "span", 27);
    ɵngcc0.ɵɵdisableBindings();
    ɵngcc0.ɵɵtext(3, " {{ bulkOperationsCountSuccessful }} successful ");
    ɵngcc0.ɵɵenableBindings();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r4 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("translateParams", ɵngcc0.ɵɵpureFunction1(1, _c1, ctx_r4.bulkOperation.progress.successful));
} }
const _c2 = function (a0) { return { bulkOperationsCountFailed: a0 }; };
function BulkOperationListItemComponent_small_20_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "small", 25);
    ɵngcc0.ɵɵelement(1, "i", 28);
    ɵngcc0.ɵɵelementStart(2, "span", 27);
    ɵngcc0.ɵɵdisableBindings();
    ɵngcc0.ɵɵtext(3, " {{ bulkOperationsCountFailed }} failed ");
    ɵngcc0.ɵɵenableBindings();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r5 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("translateParams", ɵngcc0.ɵɵpureFunction1(1, _c2, ctx_r5.bulkOperation.progress.failed));
} }
const _c3 = function (a0) { return { bulkOperationsCountPending: a0 }; };
function BulkOperationListItemComponent_small_21_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "small", 25);
    ɵngcc0.ɵɵelement(1, "i", 29);
    ɵngcc0.ɵɵelementStart(2, "span", 27);
    ɵngcc0.ɵɵdisableBindings();
    ɵngcc0.ɵɵtext(3, " {{ bulkOperationsCountPending }} pending ");
    ɵngcc0.ɵɵenableBindings();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r6 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("translateParams", ɵngcc0.ɵɵpureFunction1(1, _c3, ctx_r6.bulkOperation.progress.pending));
} }
function BulkOperationListItemComponent_div_31_a_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "a", 31);
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵelement(2, "i", 32);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r11 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵpropertyInterpolate("popover", ɵngcc0.ɵɵpipeBind1(1, 1, ctx_r11.finishDatePopoverText));
} }
function BulkOperationListItemComponent_div_31_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 14);
    ɵngcc0.ɵɵelementStart(1, "span", 15);
    ɵngcc0.ɵɵtext(2, "Finish");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "small", 16);
    ɵngcc0.ɵɵelement(4, "i", 17);
    ɵngcc0.ɵɵelementStart(5, "span");
    ɵngcc0.ɵɵtext(6);
    ɵngcc0.ɵɵpipe(7, "c8yDate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(8, BulkOperationListItemComponent_div_31_a_8_Template, 3, 3, "a", 30);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r7 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(6);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(7, 2, ctx_r7.finishDate));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r7.isStatusScheduled() || ctx_r7.isStatusExecutingOrExecutingWithError());
} }
function BulkOperationListItemComponent_ng_container_32_c8y_li_action_1_Template(rf, ctx) { if (rf & 1) {
    const _r17 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "c8y-li-action", 37);
    ɵngcc0.ɵɵlistener("click", function BulkOperationListItemComponent_ng_container_32_c8y_li_action_1_Template_c8y_li_action_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r17); const ctx_r16 = ɵngcc0.ɵɵnextContext(2); return ctx_r16.editSchedule(); });
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵpropertyInterpolate("label", ɵngcc0.ɵɵpipeBind1(1, 1, "Edit schedule"));
} }
function BulkOperationListItemComponent_ng_container_32_c8y_li_action_2_Template(rf, ctx) { if (rf & 1) {
    const _r19 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "c8y-li-action", 38);
    ɵngcc0.ɵɵlistener("click", function BulkOperationListItemComponent_ng_container_32_c8y_li_action_2_Template_c8y_li_action_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r19); const ctx_r18 = ɵngcc0.ɵɵnextContext(2); return ctx_r18.cancelBulkOperation(); });
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵpropertyInterpolate("label", ɵngcc0.ɵɵpipeBind1(1, 1, "Cancel bulk operation"));
} }
function BulkOperationListItemComponent_ng_container_32_c8y_li_action_3_Template(rf, ctx) { if (rf & 1) {
    const _r21 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "c8y-li-action", 39);
    ɵngcc0.ɵɵlistener("click", function BulkOperationListItemComponent_ng_container_32_c8y_li_action_3_Template_c8y_li_action_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r21); const ctx_r20 = ɵngcc0.ɵɵnextContext(2); return ctx_r20.retryFailedOperation(); });
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵpropertyInterpolate("label", ɵngcc0.ɵɵpipeBind1(1, 1, "Retry failed operations"));
} }
function BulkOperationListItemComponent_ng_container_32_c8y_li_action_4_Template(rf, ctx) { if (rf & 1) {
    const _r23 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "c8y-li-action", 40);
    ɵngcc0.ɵɵlistener("click", function BulkOperationListItemComponent_ng_container_32_c8y_li_action_4_Template_c8y_li_action_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r23); const ctx_r22 = ɵngcc0.ɵɵnextContext(2); return ctx_r22.setToSuccessful(); });
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵpropertyInterpolate("label", ɵngcc0.ɵɵpipeBind1(1, 1, "Set operation to SUCCESSFUL"));
} }
function BulkOperationListItemComponent_ng_container_32_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, BulkOperationListItemComponent_ng_container_32_c8y_li_action_1_Template, 2, 3, "c8y-li-action", 33);
    ɵngcc0.ɵɵtemplate(2, BulkOperationListItemComponent_ng_container_32_c8y_li_action_2_Template, 2, 3, "c8y-li-action", 34);
    ɵngcc0.ɵɵtemplate(3, BulkOperationListItemComponent_ng_container_32_c8y_li_action_3_Template, 2, 3, "c8y-li-action", 35);
    ɵngcc0.ɵɵtemplate(4, BulkOperationListItemComponent_ng_container_32_c8y_li_action_4_Template, 2, 3, "c8y-li-action", 36);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r8 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r8.isStatusScheduled());
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r8.isStatusScheduled() || ctx_r8.isStatusExecutingOrExecutingWithError() && !ctx_r8.allOperationsCreated());
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r8.isStatusFailed());
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r8.isStatusFailed());
} }
function BulkOperationListItemComponent_c8y_bulk_operation_details_tabs_34_Template(rf, ctx) { if (rf & 1) {
    const _r25 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "c8y-bulk-operation-details-tabs", 41);
    ɵngcc0.ɵɵlistener("onRetryFailedOperations", function BulkOperationListItemComponent_c8y_bulk_operation_details_tabs_34_Template_c8y_bulk_operation_details_tabs_onRetryFailedOperations_0_listener() { ɵngcc0.ɵɵrestoreView(_r25); const ctx_r24 = ɵngcc0.ɵɵnextContext(); return ctx_r24.retryFailedOperation(); })("showFailedOperation", function BulkOperationListItemComponent_c8y_bulk_operation_details_tabs_34_Template_c8y_bulk_operation_details_tabs_showFailedOperation_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r25); const ctx_r26 = ɵngcc0.ɵɵnextContext(); return ctx_r26.openFailedOperation($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r9 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("bulkOperation", ctx_r9.bulkOperation)("readOnly", ctx_r9.readOnly);
} }
const _c4 = function (a0) { return { "c8y-list__item--no-expand": a0 }; };
const _c5 = function (a0, a1) { return { "content-flex-58": a0, "content-flex-50": a1 }; };
export class BulkOperationListItemComponent {
    constructor(bulkOperationsService, modal, alert, bsModalService) {
        this.bulkOperationsService = bulkOperationsService;
        this.modal = modal;
        this.alert = alert;
        this.bsModalService = bsModalService;
        this.detailsCollapsed = true;
        this.readOnly = false;
        this.showFailedOperation = new EventEmitter();
        this.reload = new EventEmitter();
        this.refreshLoading = false;
        this.bulkOperationGeneralStatus = OperationBulkGeneralStatus;
        this.bulkOperationStatusOptions = BULK_OPERATION_STATUS_OPTIONS;
        this.finishDatePopoverText = gettext('Approximate date, estimated based on the bulk operation settings.');
        this.progressBarClass = 'progress';
        this.progressBarStatus = 0;
    }
    ngOnInit() {
        this.iconClass = this.getIconClass();
        this.finishDate = this.calculateFinishDateMs();
        this.setProgressBar();
    }
    ngOnChanges(changes) {
        if (changes.bulkOperation && !changes.bulkOperation.firstChange) {
            this.iconClass = this.getIconClass();
            this.setProgressBar();
        }
    }
    getIconClass() {
        const statusOptions = this.bulkOperationStatusOptions.find(statusOption => statusOption.generalStatus.includes(this.bulkOperation.generalStatus));
        return statusOptions ? statusOptions.iconClass : BULK_OPERATION_FALLBACK_STATUS_ICON;
    }
    calculateFinishDateMs() {
        const startDateMs = new Date(this.bulkOperation.startDate).getTime();
        const creationRampMs = this.bulkOperation.creationRamp * 1000;
        return startDateMs + creationRampMs * this.bulkOperation.progress.all;
    }
    progressBarProgressFn() {
        return (((this.bulkOperation.progress.successful + this.bulkOperation.progress.failed) /
            this.bulkOperation.progress.all) *
            100);
    }
    setProgressBar() {
        const staticContentOfClass = 'progress-bar progress-striped active progress-bar';
        const progressBarState = {
            EXECUTING: {
                progressBarClass: 'progress progress-striped active',
                progressBarColor: `${staticContentOfClass}-primary`,
                progressBarStatus: this.progressBarProgressFn()
            },
            EXECUTING_WITH_ERROR: {
                progressBarClass: 'progress progress-striped active',
                progressBarColor: `${staticContentOfClass}-danger`,
                progressBarStatus: this.progressBarProgressFn()
            },
            FAILED: {
                progressBarClass: 'progress',
                progressBarColor: `${staticContentOfClass}-danger`,
                progressBarStatus: 100
            },
            SUCCESSFUL: {
                progressBarClass: 'progress',
                progressBarColor: `${staticContentOfClass}-success`,
                progressBarStatus: 100
            }
        };
        assign(this, progressBarState[this.bulkOperation.generalStatus]);
    }
    editSchedule() {
        const rescheduledOperation = cloneDeep(this.bulkOperation);
        const initialState = {
            bulkOperation: rescheduledOperation
        };
        const modalOptions = { initialState, class: 'modal-sm', backdrop: 'static' };
        this.bsModalRef = this.bsModalService.show(BulkOperationsRescheduleModalComponent, modalOptions);
    }
    cancelBulkOperation() {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                yield this.modal.confirm(gettext('Cancel bulk operation'), gettext('You are about to cancel the bulk operation. Do you want to proceed?'), Status.DANGER);
                yield this.bulkOperationsService.deleteBulkOperation(this.bulkOperation.id);
                this.reload.emit();
                this.alert.success(gettext('Operation canceled.'));
            }
            catch (er) {
                this.alert.addServerFailure(er);
            }
        });
    }
    retryFailedOperation() {
        const clonedBulk = cloneDeep(this.bulkOperation);
        // change the id to failedparentId similar to the logic in deviceBulkControl.service.js
        delete clonedBulk.groupId;
        clonedBulk.failedParentId = this.bulkOperation.id;
        // show reschdedule modal:
        const initialState = {
            bulkOperation: clonedBulk,
            isRetryOperation: true
        };
        const modalOptions = { initialState, class: 'modal-sm', backdrop: 'static' };
        this.bsModalRef = this.bsModalService.show(BulkOperationsRescheduleModalComponent, modalOptions);
        this.bsModalRef.content.closeSubject.subscribe(() => {
            this.reload.emit();
        });
    }
    setToSuccessful() {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                yield this.modal.confirm(gettext('Set manually bulk operation to SUCCESSFUL'), gettext('You are about to change the bulk operation status to SUCCESSFUL. Do you want to proceed?'), Status.DANGER);
                yield this.bulkOperationsService.updateBulkOperation({
                    id: this.bulkOperation.id,
                    generalStatus: OperationBulkGeneralStatus.SUCCESSFUL
                });
                this.reload.emit();
                this.alert.success(gettext('Operation status changed to SUCCESSFUL.'));
            }
            catch (er) {
                this.alert.addServerFailure(er);
            }
        });
    }
    openFailedOperation(failedParentId) {
        this.showFailedOperation.emit(failedParentId);
    }
    isStatusScheduled() {
        return this.bulkOperation.generalStatus === this.bulkOperationGeneralStatus.SCHEDULED;
    }
    isStatusExecutingOrExecutingWithError() {
        return (this.bulkOperation.generalStatus === this.bulkOperationGeneralStatus.EXECUTING ||
            this.bulkOperation.generalStatus === this.bulkOperationGeneralStatus.EXECUTING_WITH_ERROR);
    }
    allOperationsCreated() {
        return (this.bulkOperation.progress.all ===
            this.bulkOperation.progress.executing +
                this.bulkOperation.progress.failed +
                this.bulkOperation.progress.pending +
                this.bulkOperation.progress.successful);
    }
    isStatusCanceled() {
        return this.bulkOperation.generalStatus === this.bulkOperationGeneralStatus.CANCELED;
    }
    isStatusFailed() {
        return this.bulkOperation.generalStatus === this.bulkOperationGeneralStatus.FAILED;
    }
}
BulkOperationListItemComponent.ɵfac = function BulkOperationListItemComponent_Factory(t) { return new (t || BulkOperationListItemComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.BulkOperationsService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ModalService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.AlertService), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.BsModalService)); };
BulkOperationListItemComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: BulkOperationListItemComponent, selectors: [["c8y-bulk-operation-list-item"]], viewQuery: function BulkOperationListItemComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c0, 7);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.listItem = _t.first);
    } }, inputs: { detailsCollapsed: "detailsCollapsed", readOnly: "readOnly", bulkOperation: "bulkOperation" }, outputs: { showFailedOperation: "showFailedOperation", reload: "reload" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 35, vars: 30, consts: [[1, "c8y-list__item--double-actions", 3, "ngClass", "collapsed", "id"], ["listItem", ""], [3, "ngClass"], [1, "col-5"], [1, "text-truncate", 3, "title"], [1, "text-muted", "m-r-4"], [1, "flex-grow"], [1, "m-t-8", "visible-xs"], ["class", "m-t-16 m-b-0", 4, "ngIf", "ngIfElse"], ["statusNotCanceled", ""], [1, "col-4"], [1, "p-t-8", "visible-xs"], ["class", "m-r-8 icon-flex", 4, "ngIf"], [1, "c8y-list__item__footer"], [1, "m-r-16"], ["translate", "", 1, "text-label-small", "m-r-4"], [1, "icon-flex"], ["c8yIcon", "calendar", 1, "m-r-4"], ["class", "m-r-16", 4, "ngIf"], [4, "ngIf"], [1, "m-b-16"], [3, "bulkOperation", "readOnly", "onRetryFailedOperations", "showFailedOperation", 4, "ngIf"], [1, "m-t-16", "m-b-0"], [3, "title"], ["role", "progressbar", "aria-valuenow", "0", "aria-valuemin", "0", "aria-valuemax", "100"], [1, "m-r-8", "icon-flex"], ["c8yIcon", "check-circle", 1, "text-success", "m-r-4"], ["translate", "", 3, "translateParams"], ["c8yIcon", "warning", 1, "text-danger", "m-r-4"], ["c8yIcon", "clock-o", 1, "text-primary", "m-r-4"], ["container", "body", "class", "btn-clean m-l-4", "placement", "right", "outsideClick", "true", 3, "popover", 4, "ngIf"], ["container", "body", "placement", "right", "outsideClick", "true", 1, "btn-clean", "m-l-4", 3, "popover"], ["c8yIcon", "question-circle-o text-primary"], ["icon", "pencil", 3, "label", "click", 4, "ngIf"], ["icon", "remove", 3, "label", "click", 4, "ngIf"], ["icon", "repeat", 3, "label", "click", 4, "ngIf"], ["icon", "check-circle", 3, "label", "click", 4, "ngIf"], ["icon", "pencil", 3, "label", "click"], ["icon", "remove", 3, "label", "click"], ["icon", "repeat", 3, "label", "click"], ["icon", "check-circle", 3, "label", "click"], [3, "bulkOperation", "readOnly", "onRetryFailedOperations", "showFailedOperation"]], template: function BulkOperationListItemComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "c8y-li", 0, 1);
        ɵngcc0.ɵɵelementStart(2, "c8y-li-icon");
        ɵngcc0.ɵɵelement(3, "i");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(4, "div", 2);
        ɵngcc0.ɵɵelementStart(5, "div", 3);
        ɵngcc0.ɵɵelementStart(6, "span", 4);
        ɵngcc0.ɵɵpipe(7, "translate");
        ɵngcc0.ɵɵelementStart(8, "strong", 5);
        ɵngcc0.ɵɵtext(9);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(10);
        ɵngcc0.ɵɵpipe(11, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(12, "div", 6);
        ɵngcc0.ɵɵelement(13, "div", 7);
        ɵngcc0.ɵɵtemplate(14, BulkOperationListItemComponent_hr_14_Template, 1, 0, "hr", 8);
        ɵngcc0.ɵɵtemplate(15, BulkOperationListItemComponent_ng_template_15_Template, 4, 12, "ng-template", null, 9, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(17, "div", 10);
        ɵngcc0.ɵɵelement(18, "div", 11);
        ɵngcc0.ɵɵtemplate(19, BulkOperationListItemComponent_small_19_Template, 4, 3, "small", 12);
        ɵngcc0.ɵɵtemplate(20, BulkOperationListItemComponent_small_20_Template, 4, 3, "small", 12);
        ɵngcc0.ɵɵtemplate(21, BulkOperationListItemComponent_small_21_Template, 4, 3, "small", 12);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(22, "div", 13);
        ɵngcc0.ɵɵelementStart(23, "div", 14);
        ɵngcc0.ɵɵelementStart(24, "span", 15);
        ɵngcc0.ɵɵtext(25, "Start");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(26, "small", 16);
        ɵngcc0.ɵɵelement(27, "i", 17);
        ɵngcc0.ɵɵelementStart(28, "span");
        ɵngcc0.ɵɵtext(29);
        ɵngcc0.ɵɵpipe(30, "c8yDate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(31, BulkOperationListItemComponent_div_31_Template, 9, 4, "div", 18);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(32, BulkOperationListItemComponent_ng_container_32_Template, 5, 4, "ng-container", 19);
        ɵngcc0.ɵɵelementStart(33, "c8y-li-collapse", 20);
        ɵngcc0.ɵɵtemplate(34, BulkOperationListItemComponent_c8y_bulk_operation_details_tabs_34_Template, 1, 2, "c8y-bulk-operation-details-tabs", 21);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        const _r0 = ɵngcc0.ɵɵreference(1);
        const _r2 = ɵngcc0.ɵɵreference(16);
        ɵngcc0.ɵɵpropertyInterpolate("id", ctx.bulkOperation.id);
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(25, _c4, !ctx.detailsCollapsed))("collapsed", ctx.detailsCollapsed);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵclassMap(ctx.iconClass);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction2(27, _c5, !ctx.readOnly, ctx.readOnly));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵpropertyInterpolate2("title", "", ctx.bulkOperation.id, " - ", ɵngcc0.ɵɵpipeBind1(7, 19, ctx.bulkOperation.operationPrototype.description), "");
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate(ctx.bulkOperation.id);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(11, 21, ctx.bulkOperation.operationPrototype.description), " ");
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isStatusCanceled())("ngIfElse", _r2);
        ɵngcc0.ɵɵadvance(5);
        ɵngcc0.ɵɵproperty("ngIf", ctx.bulkOperation.progress.successful > 0);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.bulkOperation.progress.failed > 0);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.bulkOperation.progress.pending > 0);
        ɵngcc0.ɵɵadvance(8);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(30, 23, ctx.bulkOperation.startDate), " ");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.bulkOperationGeneralStatus.CANCELED !== ctx.bulkOperation.generalStatus);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.readOnly);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", !_r0.collapsed);
    } }, directives: [ɵngcc2.ListItemComponent, ɵngcc4.NgClass, ɵngcc2.ListItemIconComponent, ɵngcc4.NgIf, ɵngcc2.C8yTranslateDirective, ɵngcc2.IconDirective, ɵngcc2.ListItemCollapseComponent, ɵngcc5.PopoverDirective, ɵngcc2.ListItemActionComponent, ɵngcc6.BulkOperationDetailsTabsComponent], pipes: [ɵngcc2.C8yTranslatePipe, ɵngcc2.DatePipe, ɵngcc2.ɵb], encapsulation: 2 });
BulkOperationListItemComponent.ctorParameters = () => [
    { type: BulkOperationsService },
    { type: ModalService },
    { type: AlertService },
    { type: BsModalService }
];
BulkOperationListItemComponent.propDecorators = {
    bulkOperation: [{ type: Input }],
    detailsCollapsed: [{ type: Input }],
    readOnly: [{ type: Input }],
    showFailedOperation: [{ type: Output }],
    reload: [{ type: Output }],
    listItem: [{ type: ViewChild, args: ['listItem', { static: true },] }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BulkOperationListItemComponent, [{
        type: Component,
        args: [{
                selector: 'c8y-bulk-operation-list-item',
                template: "<c8y-li\n  class=\"c8y-list__item--double-actions\"\n  [ngClass]=\"{ 'c8y-list__item--no-expand': !detailsCollapsed }\"\n  [collapsed]=\"detailsCollapsed\"\n  #listItem\n  id=\"{{ bulkOperation.id }}\"\n>\n  <c8y-li-icon>\n    <i [class]=\"iconClass\"></i>\n  </c8y-li-icon>\n  <div [ngClass]=\"{ 'content-flex-58': !readOnly, 'content-flex-50': readOnly }\">\n    <div class=\"col-5\">\n      <span\n        class=\"text-truncate\"\n        title=\"{{ bulkOperation.id }} - {{\n          bulkOperation.operationPrototype.description | translate\n        }}\"\n      >\n        <strong class=\"text-muted m-r-4\">{{ bulkOperation.id }}</strong>\n        {{ bulkOperation.operationPrototype.description | translate }}\n      </span>\n    </div>\n    <div class=\"flex-grow\">\n      <div class=\"m-t-8 visible-xs\"></div>\n      <hr *ngIf=\"isStatusCanceled(); else statusNotCanceled\" class=\"m-t-16 m-b-0\" />\n      <ng-template #statusNotCanceled>\n        <div\n          [class]=\"progressBarClass\"\n          title=\"{{ progressBarStatus | c8yNumber: 'floor':'1.0-0' }}%\"\n        >\n          <div\n            [class]=\"progressBarColor\"\n            role=\"progressbar\"\n            aria-valuenow=\"0\"\n            aria-valuemin=\"0\"\n            aria-valuemax=\"100\"\n            [style.width.%]=\"progressBarStatus\"\n          >\n            <span *ngIf=\"progressBarStatus !== 0\"\n              >{{ progressBarStatus | c8yNumber: 'floor':'1.0-0' }}%</span\n            >\n          </div>\n        </div>\n      </ng-template>\n    </div>\n    <div class=\"col-4\">\n      <div class=\"p-t-8 visible-xs\"></div>\n      <small *ngIf=\"bulkOperation.progress.successful > 0\" class=\"m-r-8 icon-flex\">\n        <i c8yIcon=\"check-circle\" class=\"text-success m-r-4\"></i>\n        <span\n          ngNonBindable\n          translate\n          [translateParams]=\"{ bulkOperationsCountSuccessful: bulkOperation.progress.successful }\"\n        >\n          {{ bulkOperationsCountSuccessful }} successful\n        </span>\n      </small>\n      <small *ngIf=\"bulkOperation.progress.failed > 0\" class=\"m-r-8 icon-flex\">\n        <i c8yIcon=\"warning\" class=\"text-danger m-r-4\"></i>\n        <span\n          ngNonBindable\n          translate\n          [translateParams]=\"{ bulkOperationsCountFailed: bulkOperation.progress.failed }\"\n        >\n          {{ bulkOperationsCountFailed }} failed\n        </span>\n      </small>\n      <small *ngIf=\"bulkOperation.progress.pending > 0\" class=\"m-r-8 icon-flex\">\n        <i c8yIcon=\"clock-o\" class=\"text-primary m-r-4\"></i>\n        <span\n          ngNonBindable\n          translate\n          [translateParams]=\"{ bulkOperationsCountPending: bulkOperation.progress.pending }\"\n        >\n          {{ bulkOperationsCountPending }} pending\n        </span>\n      </small>\n    </div>\n  </div>\n  <div class=\"c8y-list__item__footer\">\n    <div class=\"m-r-16\">\n      <span class=\"text-label-small m-r-4\" translate>Start</span>\n      <small class=\"icon-flex\">\n        <i c8yIcon=\"calendar\" class=\"m-r-4\"></i>\n        <span>\n          {{ bulkOperation.startDate | c8yDate }}\n        </span>\n      </small>\n    </div>\n    <div class=\"m-r-16\" *ngIf=\"bulkOperationGeneralStatus.CANCELED !== bulkOperation.generalStatus\">\n      <span class=\"text-label-small m-r-4\" translate>Finish</span>\n\n      <small class=\"icon-flex\">\n        <i c8yIcon=\"calendar\" class=\"m-r-4\"></i>\n        <span>{{ finishDate | c8yDate }}</span>\n      </small>\n      <a\n        container=\"body\"\n        *ngIf=\"isStatusScheduled() || isStatusExecutingOrExecutingWithError()\"\n        class=\"btn-clean m-l-4\"\n        popover=\"{{ finishDatePopoverText | translate }}\"\n        placement=\"right\"\n        outsideClick=\"true\"\n      >\n        <i c8yIcon=\"question-circle-o text-primary\"></i>\n      </a>\n    </div>\n  </div>\n  <ng-container *ngIf=\"!readOnly\">\n    <c8y-li-action\n      *ngIf=\"isStatusScheduled()\"\n      label=\"{{ 'Edit schedule' | translate }}\"\n      (click)=\"editSchedule()\"\n      icon=\"pencil\"\n    >\n    </c8y-li-action>\n    <c8y-li-action\n      *ngIf=\"\n        isStatusScheduled() || (isStatusExecutingOrExecutingWithError() && !allOperationsCreated())\n      \"\n      label=\"{{ 'Cancel bulk operation' | translate }}\"\n      (click)=\"cancelBulkOperation()\"\n      icon=\"remove\"\n    >\n    </c8y-li-action>\n    <c8y-li-action\n      *ngIf=\"isStatusFailed()\"\n      label=\"{{ 'Retry failed operations' | translate }}\"\n      (click)=\"retryFailedOperation()\"\n      icon=\"repeat\"\n    >\n    </c8y-li-action>\n    <c8y-li-action\n      *ngIf=\"isStatusFailed()\"\n      label=\"{{ 'Set operation to SUCCESSFUL' | translate }}\"\n      (click)=\"setToSuccessful()\"\n      icon=\"check-circle\"\n    >\n    </c8y-li-action>\n  </ng-container>\n  <c8y-li-collapse class=\"m-b-16\">\n    <c8y-bulk-operation-details-tabs\n      *ngIf=\"!listItem.collapsed\"\n      [bulkOperation]=\"bulkOperation\"\n      [readOnly]=\"readOnly\"\n      (onRetryFailedOperations)=\"retryFailedOperation()\"\n      (showFailedOperation)=\"openFailedOperation($event)\"\n    >\n    </c8y-bulk-operation-details-tabs>\n  </c8y-li-collapse>\n</c8y-li>\n"
            }]
    }], function () { return [{ type: ɵngcc1.BulkOperationsService }, { type: ɵngcc2.ModalService }, { type: ɵngcc2.AlertService }, { type: ɵngcc3.BsModalService }]; }, { detailsCollapsed: [{
            type: Input
        }], readOnly: [{
            type: Input
        }], showFailedOperation: [{
            type: Output
        }], reload: [{
            type: Output
        }], bulkOperation: [{
            type: Input
        }], listItem: [{
            type: ViewChild,
            args: ['listItem', { static: true }]
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVsay1vcGVyYXRpb24tbGlzdC1pdGVtLmNvbXBvbmVudC5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vb3BlcmF0aW9ucy9idWxrLW9wZXJhdGlvbnMtbGlzdC9idWxrLW9wZXJhdGlvbi1saXN0LWl0ZW0uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQ0wsU0FBUyxFQUNULFlBQVksRUFDWixLQUFLLEVBR0wsTUFBTSxFQUVOLFNBQVMsRUFDVixNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQWtCLDBCQUEwQixFQUFFLE1BQU0sYUFBYSxDQUFDO0FBQ3pFLE9BQU8sRUFDTCxZQUFZLEVBQ1osT0FBTyxFQUVQLFlBQVksRUFDWixNQUFNLEVBQ1AsTUFBTSxxQkFBcUIsQ0FBQztBQUM3QixPQUFPLEVBQUUsTUFBTSxFQUFFLFNBQVMsRUFBRSxNQUFNLFdBQVcsQ0FBQztBQUM5QyxPQUFPLEVBQWMsY0FBYyxFQUFnQixNQUFNLHFCQUFxQixDQUFDO0FBQy9FLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLHdEQUF3RCxDQUFDO0FBRS9GLE9BQU8sRUFBRSxzQ0FBc0MsRUFBRSxNQUFNLHFEQUFxRCxDQUFDO0FBQzdHLE9BQU8sRUFBRSxtQ0FBbUMsRUFBRSw2QkFBNkIsRUFBRSxNQUFNLGtDQUFrQyxDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFNdEgsTUFBTSxPQUFPLDhCQUE4QjtBQUFHLElBdUI1QyxZQUNVLHFCQUE0QyxFQUM1QyxLQUFtQixFQUNuQixLQUFtQixFQUNuQixjQUE4QjtBQUN2QyxRQUpTLDBCQUFxQixH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QUE4QixrQkFDeEM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7WUFBd0QsY0FDekQ7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozt1WEFDSTtBQUFDO0FBQXdELFlBVHJELHFCQUFxQjtBQUFJLFlBTGhDLFlBQVk7QUFDWixZQUpBLFlBQVk7QUFDWixZQU1tQixjQUFjO0FBQUc7QUFBRztBQUM5Qiw0QkFVUixLQUFLO0FBQ04sK0JBQ0MsS0FBSztBQUNOLHVCQUNDLEtBQUs7QUFDTixrQ0FDQyxNQUFNO0FBQUsscUJBQ1gsTUFBTTtBQUFLLHVCQUNYLFNBQVMsU0FBQyxVQUFVLEVBQUUsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFO0FBQU07Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O29CQUFFO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBDb21wb25lbnQsXG4gIEV2ZW50RW1pdHRlcixcbiAgSW5wdXQsXG4gIE9uQ2hhbmdlcyxcbiAgT25Jbml0LFxuICBPdXRwdXQsXG4gIFNpbXBsZUNoYW5nZXMsXG4gIFZpZXdDaGlsZFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IElPcGVyYXRpb25CdWxrLCBPcGVyYXRpb25CdWxrR2VuZXJhbFN0YXR1cyB9IGZyb20gJ0BjOHkvY2xpZW50JztcbmltcG9ydCB7XG4gIEFsZXJ0U2VydmljZSxcbiAgZ2V0dGV4dCxcbiAgTGlzdEl0ZW1Db21wb25lbnQsXG4gIE1vZGFsU2VydmljZSxcbiAgU3RhdHVzXG59IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMnO1xuaW1wb3J0IHsgYXNzaWduLCBjbG9uZURlZXAgfSBmcm9tICdsb2Rhc2gtZXMnO1xuaW1wb3J0IHsgQnNNb2RhbFJlZiwgQnNNb2RhbFNlcnZpY2UsIE1vZGFsT3B0aW9ucyB9IGZyb20gJ25neC1ib290c3RyYXAvbW9kYWwnO1xuaW1wb3J0IHsgQnVsa09wZXJhdGlvbnNTZXJ2aWNlIH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cy9vcGVyYXRpb25zL2J1bGstb3BlcmF0aW9ucy1zZXJ2aWNlJztcbmltcG9ydCB7IElTdGF0dXNPcHRpb24gfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzL29wZXJhdGlvbnMvc3RhdHVzLWZpbHRlcic7XG5pbXBvcnQgeyBCdWxrT3BlcmF0aW9uc1Jlc2NoZWR1bGVNb2RhbENvbXBvbmVudCB9IGZyb20gJy4vbW9kYWxzL2J1bGstb3BlcmF0aW9ucy1yZXNjaGVkdWxlLW1vZGFsLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBCVUxLX09QRVJBVElPTl9GQUxMQkFDS19TVEFUVVNfSUNPTiwgQlVMS19PUEVSQVRJT05fU1RBVFVTX09QVElPTlMgfSBmcm9tICcuL2J1bGstb3BlcmF0aW9uLWxpc3QtaXRlbS5tb2RlbCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2M4eS1idWxrLW9wZXJhdGlvbi1saXN0LWl0ZW0nLFxuICB0ZW1wbGF0ZVVybDogJy4vYnVsay1vcGVyYXRpb24tbGlzdC1pdGVtLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBCdWxrT3BlcmF0aW9uTGlzdEl0ZW1Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uQ2hhbmdlcyB7XG4gIEBJbnB1dCgpXG4gIGJ1bGtPcGVyYXRpb246IFBhcnRpYWw8SU9wZXJhdGlvbkJ1bGs+O1xuICBASW5wdXQoKVxuICBkZXRhaWxzQ29sbGFwc2VkOiBib29sZWFuID0gdHJ1ZTtcbiAgQElucHV0KClcbiAgcmVhZE9ubHk6IGJvb2xlYW4gPSBmYWxzZTtcbiAgQE91dHB1dCgpIHNob3dGYWlsZWRPcGVyYXRpb24gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gIEBPdXRwdXQoKSByZWxvYWQ6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICBAVmlld0NoaWxkKCdsaXN0SXRlbScsIHsgc3RhdGljOiB0cnVlIH0pIGxpc3RJdGVtOiBMaXN0SXRlbUNvbXBvbmVudDtcbiAgaWNvbkNsYXNzOiBzdHJpbmc7XG4gIGZpbmlzaERhdGU6IG51bWJlcjtcbiAgcmVmcmVzaExvYWRpbmcgPSBmYWxzZTtcbiAgYnVsa09wZXJhdGlvbkdlbmVyYWxTdGF0dXMgPSBPcGVyYXRpb25CdWxrR2VuZXJhbFN0YXR1cztcbiAgYnVsa09wZXJhdGlvblN0YXR1c09wdGlvbnM6IElTdGF0dXNPcHRpb25bXSA9IEJVTEtfT1BFUkFUSU9OX1NUQVRVU19PUFRJT05TO1xuICBic01vZGFsUmVmOiBCc01vZGFsUmVmO1xuICBmaW5pc2hEYXRlUG9wb3ZlclRleHQ6IHN0cmluZyA9IGdldHRleHQoXG4gICAgJ0FwcHJveGltYXRlIGRhdGUsIGVzdGltYXRlZCBiYXNlZCBvbiB0aGUgYnVsayBvcGVyYXRpb24gc2V0dGluZ3MuJ1xuICApO1xuICBwcm9ncmVzc0JhckNsYXNzOiBzdHJpbmcgPSAncHJvZ3Jlc3MnO1xuICBwcm9ncmVzc0JhckNvbG9yOiBzdHJpbmc7XG4gIHByb2dyZXNzQmFyU3RhdHVzOiBudW1iZXIgPSAwO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgYnVsa09wZXJhdGlvbnNTZXJ2aWNlOiBCdWxrT3BlcmF0aW9uc1NlcnZpY2UsXG4gICAgcHJpdmF0ZSBtb2RhbDogTW9kYWxTZXJ2aWNlLFxuICAgIHByaXZhdGUgYWxlcnQ6IEFsZXJ0U2VydmljZSxcbiAgICBwcml2YXRlIGJzTW9kYWxTZXJ2aWNlOiBCc01vZGFsU2VydmljZVxuICApIHt9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5pY29uQ2xhc3MgPSB0aGlzLmdldEljb25DbGFzcygpO1xuICAgIHRoaXMuZmluaXNoRGF0ZSA9IHRoaXMuY2FsY3VsYXRlRmluaXNoRGF0ZU1zKCk7XG4gICAgdGhpcy5zZXRQcm9ncmVzc0JhcigpO1xuICB9XG5cbiAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcyk6IHZvaWQge1xuICAgIGlmIChjaGFuZ2VzLmJ1bGtPcGVyYXRpb24gJiYgIWNoYW5nZXMuYnVsa09wZXJhdGlvbi5maXJzdENoYW5nZSkge1xuICAgICAgdGhpcy5pY29uQ2xhc3MgPSB0aGlzLmdldEljb25DbGFzcygpO1xuICAgICAgdGhpcy5zZXRQcm9ncmVzc0JhcigpO1xuICAgIH1cbiAgfVxuXG4gIGdldEljb25DbGFzcygpIHtcbiAgICBjb25zdCBzdGF0dXNPcHRpb25zID0gdGhpcy5idWxrT3BlcmF0aW9uU3RhdHVzT3B0aW9ucy5maW5kKHN0YXR1c09wdGlvbiA9PlxuICAgICAgc3RhdHVzT3B0aW9uLmdlbmVyYWxTdGF0dXMuaW5jbHVkZXModGhpcy5idWxrT3BlcmF0aW9uLmdlbmVyYWxTdGF0dXMpXG4gICAgKTtcbiAgICByZXR1cm4gc3RhdHVzT3B0aW9ucyA/IHN0YXR1c09wdGlvbnMuaWNvbkNsYXNzIDogQlVMS19PUEVSQVRJT05fRkFMTEJBQ0tfU1RBVFVTX0lDT047XG4gIH1cblxuICBjYWxjdWxhdGVGaW5pc2hEYXRlTXMoKTogbnVtYmVyIHtcbiAgICBjb25zdCBzdGFydERhdGVNczogbnVtYmVyID0gbmV3IERhdGUodGhpcy5idWxrT3BlcmF0aW9uLnN0YXJ0RGF0ZSkuZ2V0VGltZSgpO1xuICAgIGNvbnN0IGNyZWF0aW9uUmFtcE1zOiBudW1iZXIgPSB0aGlzLmJ1bGtPcGVyYXRpb24uY3JlYXRpb25SYW1wICogMTAwMDtcblxuICAgIHJldHVybiBzdGFydERhdGVNcyArIGNyZWF0aW9uUmFtcE1zICogdGhpcy5idWxrT3BlcmF0aW9uLnByb2dyZXNzLmFsbDtcbiAgfVxuXG4gIHByb2dyZXNzQmFyUHJvZ3Jlc3NGbigpIHtcbiAgICByZXR1cm4gKFxuICAgICAgKCh0aGlzLmJ1bGtPcGVyYXRpb24ucHJvZ3Jlc3Muc3VjY2Vzc2Z1bCArIHRoaXMuYnVsa09wZXJhdGlvbi5wcm9ncmVzcy5mYWlsZWQpIC9cbiAgICAgICAgdGhpcy5idWxrT3BlcmF0aW9uLnByb2dyZXNzLmFsbCkgKlxuICAgICAgMTAwXG4gICAgKTtcbiAgfVxuXG4gIHNldFByb2dyZXNzQmFyKCkge1xuICAgIGNvbnN0IHN0YXRpY0NvbnRlbnRPZkNsYXNzID0gJ3Byb2dyZXNzLWJhciBwcm9ncmVzcy1zdHJpcGVkIGFjdGl2ZSBwcm9ncmVzcy1iYXInO1xuXG4gICAgY29uc3QgcHJvZ3Jlc3NCYXJTdGF0ZSA9IHtcbiAgICAgIEVYRUNVVElORzoge1xuICAgICAgICBwcm9ncmVzc0JhckNsYXNzOiAncHJvZ3Jlc3MgcHJvZ3Jlc3Mtc3RyaXBlZCBhY3RpdmUnLFxuICAgICAgICBwcm9ncmVzc0JhckNvbG9yOiBgJHtzdGF0aWNDb250ZW50T2ZDbGFzc30tcHJpbWFyeWAsXG4gICAgICAgIHByb2dyZXNzQmFyU3RhdHVzOiB0aGlzLnByb2dyZXNzQmFyUHJvZ3Jlc3NGbigpXG4gICAgICB9LFxuICAgICAgRVhFQ1VUSU5HX1dJVEhfRVJST1I6IHtcbiAgICAgICAgcHJvZ3Jlc3NCYXJDbGFzczogJ3Byb2dyZXNzIHByb2dyZXNzLXN0cmlwZWQgYWN0aXZlJyxcbiAgICAgICAgcHJvZ3Jlc3NCYXJDb2xvcjogYCR7c3RhdGljQ29udGVudE9mQ2xhc3N9LWRhbmdlcmAsXG4gICAgICAgIHByb2dyZXNzQmFyU3RhdHVzOiB0aGlzLnByb2dyZXNzQmFyUHJvZ3Jlc3NGbigpXG4gICAgICB9LFxuICAgICAgRkFJTEVEOiB7XG4gICAgICAgIHByb2dyZXNzQmFyQ2xhc3M6ICdwcm9ncmVzcycsXG4gICAgICAgIHByb2dyZXNzQmFyQ29sb3I6IGAke3N0YXRpY0NvbnRlbnRPZkNsYXNzfS1kYW5nZXJgLFxuICAgICAgICBwcm9ncmVzc0JhclN0YXR1czogMTAwXG4gICAgICB9LFxuICAgICAgU1VDQ0VTU0ZVTDoge1xuICAgICAgICBwcm9ncmVzc0JhckNsYXNzOiAncHJvZ3Jlc3MnLFxuICAgICAgICBwcm9ncmVzc0JhckNvbG9yOiBgJHtzdGF0aWNDb250ZW50T2ZDbGFzc30tc3VjY2Vzc2AsXG4gICAgICAgIHByb2dyZXNzQmFyU3RhdHVzOiAxMDBcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgYXNzaWduKHRoaXMsIHByb2dyZXNzQmFyU3RhdGVbdGhpcy5idWxrT3BlcmF0aW9uLmdlbmVyYWxTdGF0dXNdKTtcbiAgfVxuXG4gIGVkaXRTY2hlZHVsZSgpIHtcbiAgICBjb25zdCByZXNjaGVkdWxlZE9wZXJhdGlvbiA9IGNsb25lRGVlcCh0aGlzLmJ1bGtPcGVyYXRpb24pO1xuICAgIGNvbnN0IGluaXRpYWxTdGF0ZSA9IHtcbiAgICAgIGJ1bGtPcGVyYXRpb246IHJlc2NoZWR1bGVkT3BlcmF0aW9uXG4gICAgfTtcbiAgICBjb25zdCBtb2RhbE9wdGlvbnMgPSB7IGluaXRpYWxTdGF0ZSwgY2xhc3M6ICdtb2RhbC1zbScsIGJhY2tkcm9wOiAnc3RhdGljJyB9IGFzIE1vZGFsT3B0aW9ucztcbiAgICB0aGlzLmJzTW9kYWxSZWYgPSB0aGlzLmJzTW9kYWxTZXJ2aWNlLnNob3coXG4gICAgICBCdWxrT3BlcmF0aW9uc1Jlc2NoZWR1bGVNb2RhbENvbXBvbmVudCxcbiAgICAgIG1vZGFsT3B0aW9uc1xuICAgICk7XG4gIH1cblxuICBhc3luYyBjYW5jZWxCdWxrT3BlcmF0aW9uKCkge1xuICAgIHRyeSB7XG4gICAgICBhd2FpdCB0aGlzLm1vZGFsLmNvbmZpcm0oXG4gICAgICAgIGdldHRleHQoJ0NhbmNlbCBidWxrIG9wZXJhdGlvbicpLFxuICAgICAgICBnZXR0ZXh0KCdZb3UgYXJlIGFib3V0IHRvIGNhbmNlbCB0aGUgYnVsayBvcGVyYXRpb24uIERvIHlvdSB3YW50IHRvIHByb2NlZWQ/JyksXG4gICAgICAgIFN0YXR1cy5EQU5HRVJcbiAgICAgICk7XG4gICAgICBhd2FpdCB0aGlzLmJ1bGtPcGVyYXRpb25zU2VydmljZS5kZWxldGVCdWxrT3BlcmF0aW9uKHRoaXMuYnVsa09wZXJhdGlvbi5pZCk7XG4gICAgICB0aGlzLnJlbG9hZC5lbWl0KCk7XG4gICAgICB0aGlzLmFsZXJ0LnN1Y2Nlc3MoZ2V0dGV4dCgnT3BlcmF0aW9uIGNhbmNlbGVkLicpKTtcbiAgICB9IGNhdGNoIChlcikge1xuICAgICAgdGhpcy5hbGVydC5hZGRTZXJ2ZXJGYWlsdXJlKGVyKTtcbiAgICB9XG4gIH1cblxuICByZXRyeUZhaWxlZE9wZXJhdGlvbigpIHtcbiAgICBjb25zdCBjbG9uZWRCdWxrID0gY2xvbmVEZWVwKHRoaXMuYnVsa09wZXJhdGlvbik7XG5cbiAgICAvLyBjaGFuZ2UgdGhlIGlkIHRvIGZhaWxlZHBhcmVudElkIHNpbWlsYXIgdG8gdGhlIGxvZ2ljIGluIGRldmljZUJ1bGtDb250cm9sLnNlcnZpY2UuanNcbiAgICBkZWxldGUgY2xvbmVkQnVsay5ncm91cElkO1xuICAgIGNsb25lZEJ1bGsuZmFpbGVkUGFyZW50SWQgPSB0aGlzLmJ1bGtPcGVyYXRpb24uaWQ7XG5cbiAgICAvLyBzaG93IHJlc2NoZGVkdWxlIG1vZGFsOlxuICAgIGNvbnN0IGluaXRpYWxTdGF0ZSA9IHtcbiAgICAgIGJ1bGtPcGVyYXRpb246IGNsb25lZEJ1bGssXG4gICAgICBpc1JldHJ5T3BlcmF0aW9uOiB0cnVlXG4gICAgfTtcbiAgICBjb25zdCBtb2RhbE9wdGlvbnMgPSB7IGluaXRpYWxTdGF0ZSwgY2xhc3M6ICdtb2RhbC1zbScsIGJhY2tkcm9wOiAnc3RhdGljJyB9IGFzIE1vZGFsT3B0aW9ucztcbiAgICB0aGlzLmJzTW9kYWxSZWYgPSB0aGlzLmJzTW9kYWxTZXJ2aWNlLnNob3coXG4gICAgICBCdWxrT3BlcmF0aW9uc1Jlc2NoZWR1bGVNb2RhbENvbXBvbmVudCxcbiAgICAgIG1vZGFsT3B0aW9uc1xuICAgICk7XG4gICAgdGhpcy5ic01vZGFsUmVmLmNvbnRlbnQuY2xvc2VTdWJqZWN0LnN1YnNjcmliZSgoKSA9PiB7XG4gICAgICB0aGlzLnJlbG9hZC5lbWl0KCk7XG4gICAgfSk7XG4gIH1cblxuICBhc3luYyBzZXRUb1N1Y2Nlc3NmdWwoKSB7XG4gICAgdHJ5IHtcbiAgICAgIGF3YWl0IHRoaXMubW9kYWwuY29uZmlybShcbiAgICAgICAgZ2V0dGV4dCgnU2V0IG1hbnVhbGx5IGJ1bGsgb3BlcmF0aW9uIHRvIFNVQ0NFU1NGVUwnKSxcbiAgICAgICAgZ2V0dGV4dChcbiAgICAgICAgICAnWW91IGFyZSBhYm91dCB0byBjaGFuZ2UgdGhlIGJ1bGsgb3BlcmF0aW9uIHN0YXR1cyB0byBTVUNDRVNTRlVMLiBEbyB5b3Ugd2FudCB0byBwcm9jZWVkPydcbiAgICAgICAgKSxcbiAgICAgICAgU3RhdHVzLkRBTkdFUlxuICAgICAgKTtcblxuICAgICAgYXdhaXQgdGhpcy5idWxrT3BlcmF0aW9uc1NlcnZpY2UudXBkYXRlQnVsa09wZXJhdGlvbih7XG4gICAgICAgIGlkOiB0aGlzLmJ1bGtPcGVyYXRpb24uaWQsXG4gICAgICAgIGdlbmVyYWxTdGF0dXM6IE9wZXJhdGlvbkJ1bGtHZW5lcmFsU3RhdHVzLlNVQ0NFU1NGVUxcbiAgICAgIH0pO1xuICAgICAgdGhpcy5yZWxvYWQuZW1pdCgpO1xuICAgICAgdGhpcy5hbGVydC5zdWNjZXNzKGdldHRleHQoJ09wZXJhdGlvbiBzdGF0dXMgY2hhbmdlZCB0byBTVUNDRVNTRlVMLicpKTtcbiAgICB9IGNhdGNoIChlcikge1xuICAgICAgdGhpcy5hbGVydC5hZGRTZXJ2ZXJGYWlsdXJlKGVyKTtcbiAgICB9XG4gIH1cblxuICBvcGVuRmFpbGVkT3BlcmF0aW9uKGZhaWxlZFBhcmVudElkKSB7XG4gICAgdGhpcy5zaG93RmFpbGVkT3BlcmF0aW9uLmVtaXQoZmFpbGVkUGFyZW50SWQpO1xuICB9XG5cbiAgaXNTdGF0dXNTY2hlZHVsZWQoKSB7XG4gICAgcmV0dXJuIHRoaXMuYnVsa09wZXJhdGlvbi5nZW5lcmFsU3RhdHVzID09PSB0aGlzLmJ1bGtPcGVyYXRpb25HZW5lcmFsU3RhdHVzLlNDSEVEVUxFRDtcbiAgfVxuXG4gIGlzU3RhdHVzRXhlY3V0aW5nT3JFeGVjdXRpbmdXaXRoRXJyb3IoKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIHRoaXMuYnVsa09wZXJhdGlvbi5nZW5lcmFsU3RhdHVzID09PSB0aGlzLmJ1bGtPcGVyYXRpb25HZW5lcmFsU3RhdHVzLkVYRUNVVElORyB8fFxuICAgICAgdGhpcy5idWxrT3BlcmF0aW9uLmdlbmVyYWxTdGF0dXMgPT09IHRoaXMuYnVsa09wZXJhdGlvbkdlbmVyYWxTdGF0dXMuRVhFQ1VUSU5HX1dJVEhfRVJST1JcbiAgICApO1xuICB9XG5cbiAgYWxsT3BlcmF0aW9uc0NyZWF0ZWQoKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIHRoaXMuYnVsa09wZXJhdGlvbi5wcm9ncmVzcy5hbGwgPT09XG4gICAgICB0aGlzLmJ1bGtPcGVyYXRpb24ucHJvZ3Jlc3MuZXhlY3V0aW5nICtcbiAgICAgICAgdGhpcy5idWxrT3BlcmF0aW9uLnByb2dyZXNzLmZhaWxlZCArXG4gICAgICAgIHRoaXMuYnVsa09wZXJhdGlvbi5wcm9ncmVzcy5wZW5kaW5nICtcbiAgICAgICAgdGhpcy5idWxrT3BlcmF0aW9uLnByb2dyZXNzLnN1Y2Nlc3NmdWxcbiAgICApO1xuICB9XG5cbiAgaXNTdGF0dXNDYW5jZWxlZCgpIHtcbiAgICByZXR1cm4gdGhpcy5idWxrT3BlcmF0aW9uLmdlbmVyYWxTdGF0dXMgPT09IHRoaXMuYnVsa09wZXJhdGlvbkdlbmVyYWxTdGF0dXMuQ0FOQ0VMRUQ7XG4gIH1cblxuICBpc1N0YXR1c0ZhaWxlZCgpIHtcbiAgICByZXR1cm4gdGhpcy5idWxrT3BlcmF0aW9uLmdlbmVyYWxTdGF0dXMgPT09IHRoaXMuYnVsa09wZXJhdGlvbkdlbmVyYWxTdGF0dXMuRkFJTEVEO1xuICB9XG59XG4iXX0=