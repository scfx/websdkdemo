import { __awaiter } from "tslib";
import { Component, Input, ViewChild } from '@angular/core';
import { AlertService, gettext } from '@c8y/ngx-components';
import { BulkOperationsService } from '@c8y/ngx-components/operations/bulk-operations-service';
import { omit } from 'lodash-es';
import { SINGLE_OP_STATUS_NAMES, SINGLE_OP_STATUS_PROPERTIES } from './single-operation-item.model';
export class SingleOperationItemComponent {
    constructor(bulkOperationsService, alertService) {
        this.bulkOperationsService = bulkOperationsService;
        this.alertService = alertService;
        this.device = {};
        this.showIfTextTruncated = false;
        this.singleOperationStatusNames = SINGLE_OP_STATUS_NAMES;
        this.singleOperationsStatusProperties = SINGLE_OP_STATUS_PROPERTIES;
        this.readOnly = false;
    }
    ngOnInit() {
        return __awaiter(this, void 0, void 0, function* () {
            this.iconClass = this.getIconClass();
            this.device = yield this.getDeviceMO(this.operation.deviceId);
        });
    }
    ngAfterViewInit() {
        this.isTextTruncated();
    }
    retrySingleOperation(singleOperation) {
        return __awaiter(this, void 0, void 0, function* () {
            const operationToCreate = omit(singleOperation, [
                'id',
                'self',
                'status',
                'failureReason',
                'creationTime',
                'delivery'
            ]);
            try {
                yield this.bulkOperationsService.createSingleOperation(operationToCreate);
                this.alertService.success(gettext('Operation created.'));
            }
            catch (er) {
                this.alertService.addServerFailure(er);
            }
        });
    }
    getIconClass() {
        return this.singleOperationsStatusProperties.find(operationProperties => operationProperties.label.toUpperCase() === this.operation.status).iconClass;
    }
    getDeviceMO(deviceId) {
        return __awaiter(this, void 0, void 0, function* () {
            const inventoryMO = yield this.bulkOperationsService.getManagedObject(deviceId);
            if (inventoryMO) {
                return inventoryMO.data;
            }
        });
    }
    isTextTruncated() {
        if (this.operation.failureReason) {
            const el = this.failureReasonRef.nativeElement;
            this.showIfTextTruncated = el.offsetWidth < el.scrollWidth ? true : false;
        }
    }
}
SingleOperationItemComponent.decorators = [
    { type: Component, args: [{
                selector: 'c8y-single-operation-item',
                template: "<c8y-li class=\"c8y-list__item--double-actions\">\n  <c8y-li-icon>\n    <i [class]=\"iconClass\"></i>\n  </c8y-li-icon>\n  <div [ngClass]=\"{ 'content-flex-80': !readOnly, 'content-flex-50': readOnly }\">\n    <div class=\"col-4\">\n      <span class=\"m-r-4\">\n        <device-status [mo]=\"\"></device-status>\n      </span>\n      <a [routerLink]=\"['/device', operation.deviceId, 'device-info']\" routerLinkActive=\"active\">\n        {{ operation.deviceName }}\n      </a>\n    </div>\n    <div class=\"col-3\">\n      <small class=\"icon-flex text-muted\">\n        <i c8yIcon=\"calendar\" class=\"m-r-4\"></i>\n        {{ operation.creationTime | c8yDate }}\n      </small>\n    </div>\n    <div class=\"col-5\">\n      <div class=\"flex-row\">\n        <span class=\"text-truncate\" #failureReason>\n          {{ operation.failureReason | translate }}\n        </span>\n        <a\n          *ngIf=\"showIfTextTruncated\"\n          class=\"m-l-8\"\n          popover=\"{{ operation.failureReason | translate }}\"\n          placement=\"left\"\n          outsideClick=\"true\"\n        >\n          <i [c8yIcon]=\"'info-circle text-primary'\"></i>\n        </a>\n        <div\n          class=\"showOnHover p-l-8 p-r-8 fit-h-20 flex-item-right\"\n          *ngIf=\"!readOnly && operation.status == singleOperationStatusNames.FAILED.toUpperCase()\"\n        >\n          <a\n            class=\"btn btn-default btn-xs\"\n            (click)=\"retrySingleOperation(operation)\"\n            title=\"{{ 'Retry operation' | translate }}\"\n          >\n            <i [c8yIcon]=\"'repeat m-r-4'\"></i>\n            <span translate>Retry operation</span>\n          </a>\n        </div>\n      </div>\n    </div>\n  </div>\n</c8y-li>\n"
            },] }
];
SingleOperationItemComponent.ctorParameters = () => [
    { type: BulkOperationsService },
    { type: AlertService }
];
SingleOperationItemComponent.propDecorators = {
    operation: [{ type: Input }],
    readOnly: [{ type: Input }],
    failureReasonRef: [{ type: ViewChild, args: ['failureReason', { static: true },] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2luZ2xlLW9wZXJhdGlvbi1pdGVtLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL29wZXJhdGlvbnMvYnVsay1vcGVyYXRpb25zLWxpc3Qvc2luZ2xlLW9wZXJhdGlvbi1pdGVtLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBYyxLQUFLLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXhFLE9BQU8sRUFBRSxZQUFZLEVBQUUsT0FBTyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDNUQsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sd0RBQXdELENBQUM7QUFDL0YsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLFdBQVcsQ0FBQztBQUNqQyxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsMkJBQTJCLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQU1wRyxNQUFNLE9BQU8sNEJBQTRCO0lBWXZDLFlBQ1UscUJBQTRDLEVBQzVDLFlBQTBCO1FBRDFCLDBCQUFxQixHQUFyQixxQkFBcUIsQ0FBdUI7UUFDNUMsaUJBQVksR0FBWixZQUFZLENBQWM7UUFicEMsV0FBTSxHQUFHLEVBQUUsQ0FBQztRQUNaLHdCQUFtQixHQUFHLEtBQUssQ0FBQztRQUM1QiwrQkFBMEIsR0FBRyxzQkFBc0IsQ0FBQztRQUNwRCxxQ0FBZ0MsR0FBRywyQkFBMkIsQ0FBQztRQUsvRCxhQUFRLEdBQVksS0FBSyxDQUFDO0lBTXZCLENBQUM7SUFFRSxRQUFROztZQUNaLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDO1lBQ3JDLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDaEUsQ0FBQztLQUFBO0lBRUQsZUFBZTtRQUNiLElBQUksQ0FBQyxlQUFlLEVBQUUsQ0FBQztJQUN6QixDQUFDO0lBRUssb0JBQW9CLENBQUMsZUFBZTs7WUFDeEMsTUFBTSxpQkFBaUIsR0FBRyxJQUFJLENBQUMsZUFBZSxFQUFFO2dCQUM5QyxJQUFJO2dCQUNKLE1BQU07Z0JBQ04sUUFBUTtnQkFDUixlQUFlO2dCQUNmLGNBQWM7Z0JBQ2QsVUFBVTthQUNYLENBQUMsQ0FBQztZQUVILElBQUk7Z0JBQ0YsTUFBTSxJQUFJLENBQUMscUJBQXFCLENBQUMscUJBQXFCLENBQUMsaUJBQWlCLENBQUMsQ0FBQztnQkFDMUUsSUFBSSxDQUFDLFlBQVksQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLG9CQUFvQixDQUFDLENBQUMsQ0FBQzthQUMxRDtZQUFDLE9BQU8sRUFBRSxFQUFFO2dCQUNYLElBQUksQ0FBQyxZQUFZLENBQUMsZ0JBQWdCLENBQUMsRUFBRSxDQUFDLENBQUM7YUFDeEM7UUFDSCxDQUFDO0tBQUE7SUFFRCxZQUFZO1FBQ1YsT0FBTyxJQUFJLENBQUMsZ0NBQWdDLENBQUMsSUFBSSxDQUMvQyxtQkFBbUIsQ0FBQyxFQUFFLENBQUMsbUJBQW1CLENBQUMsS0FBSyxDQUFDLFdBQVcsRUFBRSxLQUFLLElBQUksQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUN6RixDQUFDLFNBQVMsQ0FBQztJQUNkLENBQUM7SUFFYSxXQUFXLENBQUMsUUFBUTs7WUFDaEMsTUFBTSxXQUFXLEdBQUcsTUFBTSxJQUFJLENBQUMscUJBQXFCLENBQUMsZ0JBQWdCLENBQUMsUUFBUSxDQUFDLENBQUM7WUFDaEYsSUFBSSxXQUFXLEVBQUU7Z0JBQ2YsT0FBTyxXQUFXLENBQUMsSUFBSSxDQUFDO2FBQ3pCO1FBQ0gsQ0FBQztLQUFBO0lBRU8sZUFBZTtRQUNyQixJQUFJLElBQUksQ0FBQyxTQUFTLENBQUMsYUFBYSxFQUFFO1lBQ2hDLE1BQU0sRUFBRSxHQUFHLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxhQUFhLENBQUM7WUFDL0MsSUFBSSxDQUFDLG1CQUFtQixHQUFHLEVBQUUsQ0FBQyxXQUFXLEdBQUcsRUFBRSxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUM7U0FDM0U7SUFDSCxDQUFDOzs7WUFsRUYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSwyQkFBMkI7Z0JBQ3JDLHV0REFBcUQ7YUFDdEQ7OztZQVBRLHFCQUFxQjtZQURyQixZQUFZOzs7d0JBZWxCLEtBQUs7dUJBRUwsS0FBSzsrQkFFTCxTQUFTLFNBQUMsZUFBZSxFQUFFLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRWxlbWVudFJlZiwgSW5wdXQsIFZpZXdDaGlsZCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSU9wZXJhdGlvbiB9IGZyb20gJ0BjOHkvY2xpZW50JztcbmltcG9ydCB7IEFsZXJ0U2VydmljZSwgZ2V0dGV4dCB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMnO1xuaW1wb3J0IHsgQnVsa09wZXJhdGlvbnNTZXJ2aWNlIH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cy9vcGVyYXRpb25zL2J1bGstb3BlcmF0aW9ucy1zZXJ2aWNlJztcbmltcG9ydCB7IG9taXQgfSBmcm9tICdsb2Rhc2gtZXMnO1xuaW1wb3J0IHsgU0lOR0xFX09QX1NUQVRVU19OQU1FUywgU0lOR0xFX09QX1NUQVRVU19QUk9QRVJUSUVTIH0gZnJvbSAnLi9zaW5nbGUtb3BlcmF0aW9uLWl0ZW0ubW9kZWwnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjOHktc2luZ2xlLW9wZXJhdGlvbi1pdGVtJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3NpbmdsZS1vcGVyYXRpb24taXRlbS5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgU2luZ2xlT3BlcmF0aW9uSXRlbUNvbXBvbmVudCB7XG4gIGRldmljZSA9IHt9O1xuICBzaG93SWZUZXh0VHJ1bmNhdGVkID0gZmFsc2U7XG4gIHNpbmdsZU9wZXJhdGlvblN0YXR1c05hbWVzID0gU0lOR0xFX09QX1NUQVRVU19OQU1FUztcbiAgc2luZ2xlT3BlcmF0aW9uc1N0YXR1c1Byb3BlcnRpZXMgPSBTSU5HTEVfT1BfU1RBVFVTX1BST1BFUlRJRVM7XG4gIGljb25DbGFzczogc3RyaW5nO1xuICBASW5wdXQoKVxuICBvcGVyYXRpb246IElPcGVyYXRpb247XG4gIEBJbnB1dCgpXG4gIHJlYWRPbmx5OiBib29sZWFuID0gZmFsc2U7XG4gIEBWaWV3Q2hpbGQoJ2ZhaWx1cmVSZWFzb24nLCB7IHN0YXRpYzogdHJ1ZSB9KSBmYWlsdXJlUmVhc29uUmVmOiBFbGVtZW50UmVmO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgYnVsa09wZXJhdGlvbnNTZXJ2aWNlOiBCdWxrT3BlcmF0aW9uc1NlcnZpY2UsXG4gICAgcHJpdmF0ZSBhbGVydFNlcnZpY2U6IEFsZXJ0U2VydmljZVxuICApIHt9XG5cbiAgYXN5bmMgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5pY29uQ2xhc3MgPSB0aGlzLmdldEljb25DbGFzcygpO1xuICAgIHRoaXMuZGV2aWNlID0gYXdhaXQgdGhpcy5nZXREZXZpY2VNTyh0aGlzLm9wZXJhdGlvbi5kZXZpY2VJZCk7XG4gIH1cblxuICBuZ0FmdGVyVmlld0luaXQoKSB7XG4gICAgdGhpcy5pc1RleHRUcnVuY2F0ZWQoKTtcbiAgfVxuXG4gIGFzeW5jIHJldHJ5U2luZ2xlT3BlcmF0aW9uKHNpbmdsZU9wZXJhdGlvbikge1xuICAgIGNvbnN0IG9wZXJhdGlvblRvQ3JlYXRlID0gb21pdChzaW5nbGVPcGVyYXRpb24sIFtcbiAgICAgICdpZCcsXG4gICAgICAnc2VsZicsXG4gICAgICAnc3RhdHVzJyxcbiAgICAgICdmYWlsdXJlUmVhc29uJyxcbiAgICAgICdjcmVhdGlvblRpbWUnLFxuICAgICAgJ2RlbGl2ZXJ5J1xuICAgIF0pO1xuXG4gICAgdHJ5IHtcbiAgICAgIGF3YWl0IHRoaXMuYnVsa09wZXJhdGlvbnNTZXJ2aWNlLmNyZWF0ZVNpbmdsZU9wZXJhdGlvbihvcGVyYXRpb25Ub0NyZWF0ZSk7XG4gICAgICB0aGlzLmFsZXJ0U2VydmljZS5zdWNjZXNzKGdldHRleHQoJ09wZXJhdGlvbiBjcmVhdGVkLicpKTtcbiAgICB9IGNhdGNoIChlcikge1xuICAgICAgdGhpcy5hbGVydFNlcnZpY2UuYWRkU2VydmVyRmFpbHVyZShlcik7XG4gICAgfVxuICB9XG5cbiAgZ2V0SWNvbkNsYXNzKCkge1xuICAgIHJldHVybiB0aGlzLnNpbmdsZU9wZXJhdGlvbnNTdGF0dXNQcm9wZXJ0aWVzLmZpbmQoXG4gICAgICBvcGVyYXRpb25Qcm9wZXJ0aWVzID0+IG9wZXJhdGlvblByb3BlcnRpZXMubGFiZWwudG9VcHBlckNhc2UoKSA9PT0gdGhpcy5vcGVyYXRpb24uc3RhdHVzXG4gICAgKS5pY29uQ2xhc3M7XG4gIH1cblxuICBwcml2YXRlIGFzeW5jIGdldERldmljZU1PKGRldmljZUlkKSB7XG4gICAgY29uc3QgaW52ZW50b3J5TU8gPSBhd2FpdCB0aGlzLmJ1bGtPcGVyYXRpb25zU2VydmljZS5nZXRNYW5hZ2VkT2JqZWN0KGRldmljZUlkKTtcbiAgICBpZiAoaW52ZW50b3J5TU8pIHtcbiAgICAgIHJldHVybiBpbnZlbnRvcnlNTy5kYXRhO1xuICAgIH1cbiAgfVxuXG4gIHByaXZhdGUgaXNUZXh0VHJ1bmNhdGVkKCkge1xuICAgIGlmICh0aGlzLm9wZXJhdGlvbi5mYWlsdXJlUmVhc29uKSB7XG4gICAgICBjb25zdCBlbCA9IHRoaXMuZmFpbHVyZVJlYXNvblJlZi5uYXRpdmVFbGVtZW50O1xuICAgICAgdGhpcy5zaG93SWZUZXh0VHJ1bmNhdGVkID0gZWwub2Zmc2V0V2lkdGggPCBlbC5zY3JvbGxXaWR0aCA/IHRydWUgOiBmYWxzZTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==