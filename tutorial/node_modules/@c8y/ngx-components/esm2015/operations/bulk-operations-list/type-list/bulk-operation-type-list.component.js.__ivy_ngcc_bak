import { Component, EventEmitter, Output } from '@angular/core';
import { Router } from '@angular/router';
import { BulkOperationsService } from '@c8y/ngx-components/operations/bulk-operations-service';
import { BulkOperationModalsService } from '../modals/bulk-operation-modals.service';
export class BulkOperationTypeListComponent {
    constructor(router, bulkOperationsService, bulkOperationModalsService) {
        this.router = router;
        this.bulkOperationsService = bulkOperationsService;
        this.bulkOperationModalsService = bulkOperationModalsService;
        this.onCustomType = new EventEmitter();
        this.bulkList = [];
    }
    ngOnInit() {
        this.bulkList = this.bulkOperationsService.getBulkTypes();
    }
    handleClick(item) {
        if (item.path) {
            this.bulkOperationModalsService.hideNewBulkOperationModal();
            this.router.navigateByUrl(item.path);
        }
        else if (item.component) {
            this.onCustomType.emit(item);
        }
    }
}
BulkOperationTypeListComponent.decorators = [
    { type: Component, args: [{
                selector: 'c8y-bulk-operation-type-list',
                template: "<div class=\"list-group list-group-links\">\n  <button\n    *ngFor=\"let item of bulkList\"\n    type=\"button\"\n    class=\"list-group-item flex-row\"\n    (click)=\"handleClick(item)\"\n  >\n    <div *ngIf=\"item.c8yIcon; else icon\" class=\"list-item-icon\">\n      <i [c8yIcon]=\"item.c8yIcon\"></i>\n    </div>\n    <ng-template #icon>\n      <div class=\"list-item-icon\">\n        <i c8yIcon=\"cogs\"></i>\n      </div>\n    </ng-template>\n    <div title=\"{{ item.name | translate }}\" class=\"list-item-body text-truncate\">\n      {{ item.name | translate }}\n    </div>\n  </button>\n</div>\n"
            },] }
];
BulkOperationTypeListComponent.ctorParameters = () => [
    { type: Router },
    { type: BulkOperationsService },
    { type: BulkOperationModalsService }
];
BulkOperationTypeListComponent.propDecorators = {
    onCustomType: [{ type: Output }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVsay1vcGVyYXRpb24tdHlwZS1saXN0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL29wZXJhdGlvbnMvYnVsay1vcGVyYXRpb25zLWxpc3QvdHlwZS1saXN0L2J1bGstb3BlcmF0aW9uLXR5cGUtbGlzdC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsTUFBTSxFQUFVLE1BQU0sZUFBZSxDQUFDO0FBQ3hFLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUN6QyxPQUFPLEVBQ0wscUJBQXFCLEVBRXRCLE1BQU0sd0RBQXdELENBQUM7QUFDaEUsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0seUNBQXlDLENBQUM7QUFNckYsTUFBTSxPQUFPLDhCQUE4QjtJQUl6QyxZQUNVLE1BQWMsRUFDZCxxQkFBNEMsRUFDNUMsMEJBQXNEO1FBRnRELFdBQU0sR0FBTixNQUFNLENBQVE7UUFDZCwwQkFBcUIsR0FBckIscUJBQXFCLENBQXVCO1FBQzVDLCtCQUEwQixHQUExQiwwQkFBMEIsQ0FBNEI7UUFOdEQsaUJBQVksR0FBZ0MsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQUN6RSxhQUFRLEdBQW9CLEVBQUUsQ0FBQztJQU01QixDQUFDO0lBRUosUUFBUTtRQUNOLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLHFCQUFxQixDQUFDLFlBQVksRUFBRSxDQUFDO0lBQzVELENBQUM7SUFFRCxXQUFXLENBQUMsSUFBbUI7UUFDN0IsSUFBSSxJQUFJLENBQUMsSUFBSSxFQUFFO1lBQ2IsSUFBSSxDQUFDLDBCQUEwQixDQUFDLHlCQUF5QixFQUFFLENBQUM7WUFDNUQsSUFBSSxDQUFDLE1BQU0sQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1NBQ3RDO2FBQU0sSUFBSSxJQUFJLENBQUMsU0FBUyxFQUFFO1lBQ3pCLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1NBQzlCO0lBQ0gsQ0FBQzs7O1lBekJGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsOEJBQThCO2dCQUN4Qyx5bUJBQXdEO2FBQ3pEOzs7WUFWUSxNQUFNO1lBRWIscUJBQXFCO1lBR2QsMEJBQTBCOzs7MkJBT2hDLE1BQU0iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgT3V0cHV0LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFJvdXRlciB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XG5pbXBvcnQge1xuICBCdWxrT3BlcmF0aW9uc1NlcnZpY2UsXG4gIE9wZXJhdGlvblR5cGVcbn0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cy9vcGVyYXRpb25zL2J1bGstb3BlcmF0aW9ucy1zZXJ2aWNlJztcbmltcG9ydCB7IEJ1bGtPcGVyYXRpb25Nb2RhbHNTZXJ2aWNlIH0gZnJvbSAnLi4vbW9kYWxzL2J1bGstb3BlcmF0aW9uLW1vZGFscy5zZXJ2aWNlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYzh5LWJ1bGstb3BlcmF0aW9uLXR5cGUtbGlzdCcsXG4gIHRlbXBsYXRlVXJsOiAnLi9idWxrLW9wZXJhdGlvbi10eXBlLWxpc3QuY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIEJ1bGtPcGVyYXRpb25UeXBlTGlzdENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIEBPdXRwdXQoKSBvbkN1c3RvbVR5cGU6IEV2ZW50RW1pdHRlcjxPcGVyYXRpb25UeXBlPiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgYnVsa0xpc3Q6IE9wZXJhdGlvblR5cGVbXSA9IFtdO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgcm91dGVyOiBSb3V0ZXIsXG4gICAgcHJpdmF0ZSBidWxrT3BlcmF0aW9uc1NlcnZpY2U6IEJ1bGtPcGVyYXRpb25zU2VydmljZSxcbiAgICBwcml2YXRlIGJ1bGtPcGVyYXRpb25Nb2RhbHNTZXJ2aWNlOiBCdWxrT3BlcmF0aW9uTW9kYWxzU2VydmljZVxuICApIHt9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5idWxrTGlzdCA9IHRoaXMuYnVsa09wZXJhdGlvbnNTZXJ2aWNlLmdldEJ1bGtUeXBlcygpO1xuICB9XG5cbiAgaGFuZGxlQ2xpY2soaXRlbTogT3BlcmF0aW9uVHlwZSkge1xuICAgIGlmIChpdGVtLnBhdGgpIHtcbiAgICAgIHRoaXMuYnVsa09wZXJhdGlvbk1vZGFsc1NlcnZpY2UuaGlkZU5ld0J1bGtPcGVyYXRpb25Nb2RhbCgpO1xuICAgICAgdGhpcy5yb3V0ZXIubmF2aWdhdGVCeVVybChpdGVtLnBhdGgpO1xuICAgIH0gZWxzZSBpZiAoaXRlbS5jb21wb25lbnQpIHtcbiAgICAgIHRoaXMub25DdXN0b21UeXBlLmVtaXQoaXRlbSk7XG4gICAgfVxuICB9XG59XG4iXX0=