import { Injectable } from '@angular/core';
import { BsModalService } from 'ngx-bootstrap/modal';
import { BulkOperationsModalComponent } from './bulk-operations-modal.component';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from 'ngx-bootstrap/modal';
export class BulkOperationModalsService {
    constructor(bsModalService) {
        this.bsModalService = bsModalService;
    }
    showNewBulkOperationModal() {
        this.bsModalRef = this.bsModalService.show(BulkOperationsModalComponent, {
            backdrop: 'static',
            class: 'modal-sm'
        });
    }
    hideNewBulkOperationModal() {
        if (this.bsModalRef) {
            this.bsModalRef.hide();
        }
    }
}
BulkOperationModalsService.ɵfac = function BulkOperationModalsService_Factory(t) { return new (t || BulkOperationModalsService)(ɵngcc0.ɵɵinject(ɵngcc1.BsModalService)); };
BulkOperationModalsService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: BulkOperationModalsService, factory: BulkOperationModalsService.ɵfac });
BulkOperationModalsService.ctorParameters = () => [
    { type: BsModalService }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BulkOperationModalsService, [{
        type: Injectable
    }], function () { return [{ type: ɵngcc1.BsModalService }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVsay1vcGVyYXRpb24tbW9kYWxzLnNlcnZpY2UuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL29wZXJhdGlvbnMvYnVsay1vcGVyYXRpb25zLWxpc3QvbW9kYWxzL2J1bGstb3BlcmF0aW9uLW1vZGFscy5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFjLGNBQWMsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ2pFLE9BQU8sRUFBRSw0QkFBNEIsRUFBRSxNQUFNLG1DQUFtQyxDQUFDOzs7QUFHakYsTUFBTSxPQUFPLDBCQUEwQjtBQUN2QyxJQUVFLFlBQW9CLGNBQThCO0FBQUksUUFBbEMsbUJBQWMsR0FBZCxjQUFjLENBQWdCO0FBQUMsSUFBRSxDQUFDO0FBQ3hELElBQ0UseUJBQXlCO0FBQzNCLFFBQUksSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyw0QkFBNEIsRUFBRTtBQUM3RSxZQUFNLFFBQVEsRUFBRSxRQUFRO0FBQ3hCLFlBQU0sS0FBSyxFQUFFLFVBQVU7QUFDdkIsU0FBSyxDQUFDLENBQUM7QUFDUCxJQUFFLENBQUM7QUFDSCxJQUNFLHlCQUF5QjtBQUMzQixRQUFJLElBQUksSUFBSSxDQUFDLFVBQVUsRUFBRTtBQUN6QixZQUFNLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxFQUFFLENBQUM7QUFDN0IsU0FBSztBQUNMLElBQUUsQ0FBQztBQUNIO3NEQWxCQyxVQUFVOzRKQUNUO0FBQUM7QUFDVSxZQUxRLGNBQWM7QUFBRzs7OytFQUFFO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBCc01vZGFsUmVmLCBCc01vZGFsU2VydmljZSB9IGZyb20gJ25neC1ib290c3RyYXAvbW9kYWwnO1xuaW1wb3J0IHsgQnVsa09wZXJhdGlvbnNNb2RhbENvbXBvbmVudCB9IGZyb20gJy4vYnVsay1vcGVyYXRpb25zLW1vZGFsLmNvbXBvbmVudCc7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBCdWxrT3BlcmF0aW9uTW9kYWxzU2VydmljZSB7XG4gIHByaXZhdGUgYnNNb2RhbFJlZjogQnNNb2RhbFJlZjtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGJzTW9kYWxTZXJ2aWNlOiBCc01vZGFsU2VydmljZSkge31cblxuICBzaG93TmV3QnVsa09wZXJhdGlvbk1vZGFsKCkge1xuICAgIHRoaXMuYnNNb2RhbFJlZiA9IHRoaXMuYnNNb2RhbFNlcnZpY2Uuc2hvdyhCdWxrT3BlcmF0aW9uc01vZGFsQ29tcG9uZW50LCB7XG4gICAgICBiYWNrZHJvcDogJ3N0YXRpYycsXG4gICAgICBjbGFzczogJ21vZGFsLXNtJ1xuICAgIH0pO1xuICB9XG5cbiAgaGlkZU5ld0J1bGtPcGVyYXRpb25Nb2RhbCgpIHtcbiAgICBpZiAodGhpcy5ic01vZGFsUmVmKSB7XG4gICAgICB0aGlzLmJzTW9kYWxSZWYuaGlkZSgpO1xuICAgIH1cbiAgfVxufVxuIl19