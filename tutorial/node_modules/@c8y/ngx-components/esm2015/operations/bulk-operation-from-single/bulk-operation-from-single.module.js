import { NgModule } from '@angular/core';
import { RouterModule } from '@angular/router';
import { CoreModule } from '@c8y/ngx-components';
import { BulkOperationStepperModule } from '@c8y/ngx-components/operations/bulk-operation-stepper';
import { BulkOperationFromSingleComponent } from './bulk-operation-from-single.component';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/router';
export const bulkOperationCreateSingleRoutes = [
    {
        path: 'devicecontrol/single/create-bulk/:operationId',
        component: BulkOperationFromSingleComponent
    }
];
export class BulkOperationFromSingleModule {
}
BulkOperationFromSingleModule.ɵfac = function BulkOperationFromSingleModule_Factory(t) { return new (t || BulkOperationFromSingleModule)(); };
BulkOperationFromSingleModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: BulkOperationFromSingleModule });
BulkOperationFromSingleModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[
            CoreModule,
            BulkOperationStepperModule,
            RouterModule.forChild(bulkOperationCreateSingleRoutes)
        ]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BulkOperationFromSingleModule, [{
        type: NgModule,
        args: [{
                declarations: [BulkOperationFromSingleComponent],
                imports: [
                    CoreModule,
                    BulkOperationStepperModule,
                    RouterModule.forChild(bulkOperationCreateSingleRoutes)
                ]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(BulkOperationFromSingleModule, { declarations: function () { return [BulkOperationFromSingleComponent]; }, imports: function () { return [CoreModule,
        BulkOperationStepperModule, ɵngcc1.RouterModule]; } }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVsay1vcGVyYXRpb24tZnJvbS1zaW5nbGUubW9kdWxlLmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9vcGVyYXRpb25zL2J1bGstb3BlcmF0aW9uLWZyb20tc2luZ2xlL2J1bGstb3BlcmF0aW9uLWZyb20tc2luZ2xlLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUUvQyxPQUFPLEVBQUUsVUFBVSxFQUFTLE1BQU0scUJBQXFCLENBQUM7QUFDeEQsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0sdURBQXVELENBQUM7QUFFbkcsT0FBTyxFQUFFLGdDQUFnQyxFQUFFLE1BQU0sd0NBQXdDLENBQUM7OztBQUUxRixNQUFNLENBQUMsTUFBTSwrQkFBK0IsR0FBWTtBQUN4RCxJQUFFO0FBQ0YsUUFBSSxJQUFJLEVBQUUsK0NBQStDO0FBQ3pELFFBQUksU0FBUyxFQUFFLGdDQUFnQztBQUMvQyxLQUFHO0FBQ0gsQ0FBQyxDQUFDO0FBVUYsTUFBTSxPQUFPLDZCQUE2QjtBQUFHO3lEQVI1QyxRQUFRLFNBQUMsa0JBQ1IsWUFBWSxFQUFFLENBQUMsZ0NBQWdDLENBQUM7ZUFDaEQsT0FBTyxFQUFFLHNCQUNQLFVBQVUsc0JBQ1YsMEJBQTBCO1NBQzFCLFlBQVksQ0FBQyxRQUFRLENBQUMsK0JBQStCLENBQUMsa0JBQ3ZEO01BQ0Y7Ozs7Ozs7Ozs7Ozs7Ozs7cUVBQ0k7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBSb3V0ZXJNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xuXG5pbXBvcnQgeyBDb3JlTW9kdWxlLCBSb3V0ZSB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMnO1xuaW1wb3J0IHsgQnVsa09wZXJhdGlvblN0ZXBwZXJNb2R1bGUgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzL29wZXJhdGlvbnMvYnVsay1vcGVyYXRpb24tc3RlcHBlcic7XG5cbmltcG9ydCB7IEJ1bGtPcGVyYXRpb25Gcm9tU2luZ2xlQ29tcG9uZW50IH0gZnJvbSAnLi9idWxrLW9wZXJhdGlvbi1mcm9tLXNpbmdsZS5jb21wb25lbnQnO1xuXG5leHBvcnQgY29uc3QgYnVsa09wZXJhdGlvbkNyZWF0ZVNpbmdsZVJvdXRlczogUm91dGVbXSA9IFtcbiAge1xuICAgIHBhdGg6ICdkZXZpY2Vjb250cm9sL3NpbmdsZS9jcmVhdGUtYnVsay86b3BlcmF0aW9uSWQnLFxuICAgIGNvbXBvbmVudDogQnVsa09wZXJhdGlvbkZyb21TaW5nbGVDb21wb25lbnRcbiAgfVxuXTtcblxuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbQnVsa09wZXJhdGlvbkZyb21TaW5nbGVDb21wb25lbnRdLFxuICBpbXBvcnRzOiBbXG4gICAgQ29yZU1vZHVsZSxcbiAgICBCdWxrT3BlcmF0aW9uU3RlcHBlck1vZHVsZSxcbiAgICBSb3V0ZXJNb2R1bGUuZm9yQ2hpbGQoYnVsa09wZXJhdGlvbkNyZWF0ZVNpbmdsZVJvdXRlcylcbiAgXVxufSlcbmV4cG9ydCBjbGFzcyBCdWxrT3BlcmF0aW9uRnJvbVNpbmdsZU1vZHVsZSB7fVxuIl19