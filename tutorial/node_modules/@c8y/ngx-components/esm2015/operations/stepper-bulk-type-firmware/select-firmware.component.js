import { __decorate } from "tslib";
import { Component, Output, EventEmitter, Input } from '@angular/core';
import { BehaviorSubject } from 'rxjs';
import { debounceTime, distinctUntilChanged, tap, switchMap, shareReplay } from 'rxjs/operators';
import { memoize } from '@c8y/ngx-components';
import { RepositoryService, RepositoryType } from '@c8y/ngx-components/repository';
import { gettext } from '@c8y/ngx-components';
import { TranslateService } from '@ngx-translate/core';
import { property, get } from 'lodash-es';
import { BulkOperationsService } from '@c8y/ngx-components/operations/bulk-operations-service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@c8y/ngx-components/repository';
import * as ɵngcc2 from '@c8y/ngx-components/operations/bulk-operations-service';
import * as ɵngcc3 from '@ngx-translate/core';
import * as ɵngcc4 from '@angular/forms';
import * as ɵngcc5 from '@angular/common';
import * as ɵngcc6 from '@c8y/ngx-components';

function SelectFirmwareComponent_i_12_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "i", 15);
} }
function SelectFirmwareComponent_i_14_Template(rf, ctx) { if (rf & 1) {
    const _r5 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "i", 16);
    ɵngcc0.ɵɵlistener("click", function SelectFirmwareComponent_i_14_Template_i_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4.textFilter$.next(""); });
    ɵngcc0.ɵɵelementEnd();
} }
function SelectFirmwareComponent_c8y_search_result_empty_16_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "c8y-search-result-empty");
} }
function SelectFirmwareComponent_c8y_li_22_small_10_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "small");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const firmware_r6 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", firmware_r6.description, " ");
} }
function SelectFirmwareComponent_c8y_li_22_ng_template_11_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "small");
    ɵngcc0.ɵɵelementStart(1, "em", 29);
    ɵngcc0.ɵɵtext(2, "No description available.");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} }
function SelectFirmwareComponent_c8y_li_22_span_18_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const firmware_r6 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", firmware_r6.c8y_Filter == null ? null : firmware_r6.c8y_Filter.type, " ");
} }
function SelectFirmwareComponent_c8y_li_22_ng_template_19_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "em", 29);
    ɵngcc0.ɵɵtext(1, "Undefined`device type`");
    ɵngcc0.ɵɵelementEnd();
} }
function SelectFirmwareComponent_c8y_li_22_span_22_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 30);
    ɵngcc0.ɵɵelementStart(1, "span", 31);
    ɵngcc0.ɵɵtext(2, "Legacy");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} }
function SelectFirmwareComponent_c8y_li_22_span_23_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵelementStart(1, "span", 32);
    ɵngcc0.ɵɵelement(2, "i", 33);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} }
function SelectFirmwareComponent_c8y_li_22_span_23_span_3_ng_template_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 38);
    ɵngcc0.ɵɵelementStart(1, "span", 31);
    ɵngcc0.ɵɵtext(2, "No versions");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} }
function SelectFirmwareComponent_c8y_li_22_span_23_span_3_ng_template_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 32);
    ɵngcc0.ɵɵelementStart(1, "span", 31);
    ɵngcc0.ɵɵtext(2, "1 version");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} }
const _c0 = function (a0) { return { count: a0 }; };
function SelectFirmwareComponent_c8y_li_22_span_23_span_3_ng_template_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 32);
    ɵngcc0.ɵɵelementStart(1, "span", 39);
    ɵngcc0.ɵɵdisableBindings();
    ɵngcc0.ɵɵpipe(2, "async");
    ɵngcc0.ɵɵtext(3, "{{ count }} versions");
    ɵngcc0.ɵɵenableBindings();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const firmware_r6 = ɵngcc0.ɵɵnextContext(3).$implicit;
    const ctx_r22 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("translateParams", ɵngcc0.ɵɵpureFunction1(3, _c0, ɵngcc0.ɵɵpipeBind1(2, 1, ctx_r22.getBaseVersionsCount$(firmware_r6))));
} }
function SelectFirmwareComponent_c8y_li_22_span_23_span_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵelementStart(1, "span", 34);
    ɵngcc0.ɵɵpipe(2, "async");
    ɵngcc0.ɵɵtemplate(3, SelectFirmwareComponent_c8y_li_22_span_23_span_3_ng_template_3_Template, 3, 0, "ng-template", 35);
    ɵngcc0.ɵɵtemplate(4, SelectFirmwareComponent_c8y_li_22_span_23_span_3_ng_template_4_Template, 3, 0, "ng-template", 36);
    ɵngcc0.ɵɵtemplate(5, SelectFirmwareComponent_c8y_li_22_span_23_span_3_ng_template_5_Template, 4, 5, "ng-template", 37);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const firmware_r6 = ɵngcc0.ɵɵnextContext(2).$implicit;
    const ctx_r19 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngPlural", ɵngcc0.ɵɵpipeBind1(2, 1, ctx_r19.getBaseVersionsCount$(firmware_r6)));
} }
function SelectFirmwareComponent_c8y_li_22_span_23_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtemplate(1, SelectFirmwareComponent_c8y_li_22_span_23_span_1_Template, 3, 0, "span", 9);
    ɵngcc0.ɵɵpipe(2, "async");
    ɵngcc0.ɵɵtemplate(3, SelectFirmwareComponent_c8y_li_22_span_23_span_3_Template, 6, 3, "span", 9);
    ɵngcc0.ɵɵpipe(4, "async");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const firmware_r6 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r15 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind1(2, 2, ctx_r15.getBaseVersionsCount$(firmware_r6)) === null);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind1(4, 4, ctx_r15.getBaseVersionsCount$(firmware_r6)) !== null);
} }
function SelectFirmwareComponent_c8y_li_22_Template(rf, ctx) { if (rf & 1) {
    const _r27 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "c8y-li");
    ɵngcc0.ɵɵelementStart(1, "c8y-li-radio", 17);
    ɵngcc0.ɵɵlistener("onSelect", function SelectFirmwareComponent_c8y_li_22_Template_c8y_li_radio_onSelect_1_listener($event) { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r27); const firmware_r6 = restoredCtx.$implicit; const ctx_r26 = ɵngcc0.ɵɵnextContext(); return ctx_r26.selectFirmware($event, firmware_r6); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(2, "c8y-li-icon");
    ɵngcc0.ɵɵelement(3, "i", 18);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(4, "c8y-li-body", 19);
    ɵngcc0.ɵɵelementStart(5, "div", 20);
    ɵngcc0.ɵɵelementStart(6, "div", 21);
    ɵngcc0.ɵɵtext(7);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(8, "div", 22);
    ɵngcc0.ɵɵelementStart(9, "div", 21);
    ɵngcc0.ɵɵtemplate(10, SelectFirmwareComponent_c8y_li_22_small_10_Template, 2, 1, "small", 23);
    ɵngcc0.ɵɵtemplate(11, SelectFirmwareComponent_c8y_li_22_ng_template_11_Template, 3, 0, "ng-template", null, 24, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(13, "div", 20);
    ɵngcc0.ɵɵelementStart(14, "div", 21);
    ɵngcc0.ɵɵpipe(15, "translate");
    ɵngcc0.ɵɵelementStart(16, "span", 25);
    ɵngcc0.ɵɵtext(17, " Device type ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(18, SelectFirmwareComponent_c8y_li_22_span_18_Template, 2, 1, "span", 23);
    ɵngcc0.ɵɵtemplate(19, SelectFirmwareComponent_c8y_li_22_ng_template_19_Template, 2, 0, "ng-template", null, 26, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(21, "div", 27);
    ɵngcc0.ɵɵtemplate(22, SelectFirmwareComponent_c8y_li_22_span_22_Template, 3, 0, "span", 28);
    ɵngcc0.ɵɵtemplate(23, SelectFirmwareComponent_c8y_li_22_span_23_Template, 5, 6, "span", 9);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const firmware_r6 = ctx.$implicit;
    const _r9 = ɵngcc0.ɵɵreference(12);
    const _r12 = ɵngcc0.ɵɵreference(20);
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("selected", firmware_r6 === ctx_r3.selected);
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵpropertyInterpolate("title", firmware_r6.name);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", firmware_r6.name, " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵpropertyInterpolate("title", ctx_r3.getDescriptionTitle(firmware_r6));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", firmware_r6.description)("ngIfElse", _r9);
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵpropertyInterpolate2("title", "", ɵngcc0.ɵɵpipeBind1(15, 12, "Device type"), ": ", ctx_r3.getDeviceTypeTitle(firmware_r6), "");
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵproperty("ngIf", firmware_r6.c8y_Filter == null ? null : firmware_r6.c8y_Filter.type)("ngIfElse", _r12);
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r3.isLegacy(firmware_r6));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r3.isLegacy(firmware_r6));
} }
const _c1 = function (a0) { return { "dd-low": a0 }; };
export class SelectFirmwareComponent {
    constructor(repositoryService, bulkOpsService, translate) {
        this.repositoryService = repositoryService;
        this.bulkOpsService = bulkOpsService;
        this.translate = translate;
        this.firmware = new EventEmitter();
        this.elementCount = 0;
        this.DD_LOW_COUNT = 10;
        this.textFilter$ = new BehaviorSubject('');
        this.firmwares$ = this.textFilter$
            .pipe(debounceTime(400), distinctUntilChanged())
            .pipe(switchMap(text => this.getFirmwares(text)), tap(resp => {
            this.elementCount = resp.data ? resp.data.length : 0;
        }), shareReplay(1));
        this.isLegacy = this.repositoryService.isLegacyEntry.bind(this.repositoryService);
        this.DEVICE_TYPE_NOT_AVAILABLE = gettext('No device type available.');
        this.DESCRIPTION_NOT_AVAILABLE = gettext('No description available.');
    }
    ngOnInit() {
        this.DD_LOW_COUNT = this.bulkOpsService.DD_LOW_COUNT;
    }
    selectFirmware(selected, fw) {
        if (selected) {
            this.firmware.emit(fw);
        }
    }
    getBaseVersionsCount$(firmware) {
        return this.firmwares$.pipe(switchMap(() => this.repositoryService.getBaseVersionsCount$(firmware)), shareReplay(1));
    }
    getDescriptionTitle(firmware) {
        return get(firmware, 'description', this.translate.instant(this.DESCRIPTION_NOT_AVAILABLE));
    }
    getDeviceTypeTitle(firmware) {
        return get(firmware, 'c8y_Filter.type', this.translate.instant(this.DEVICE_TYPE_NOT_AVAILABLE));
    }
    getFirmwares(partialName) {
        return this.repositoryService.listRepositoryEntries(RepositoryType.FIRMWARE, { partialName });
    }
}
SelectFirmwareComponent.ɵfac = function SelectFirmwareComponent_Factory(t) { return new (t || SelectFirmwareComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.RepositoryService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.BulkOperationsService), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.TranslateService)); };
SelectFirmwareComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: SelectFirmwareComponent, selectors: [["c8y-select-firmware-step"]], inputs: { selected: "selected" }, outputs: { firmware: "firmware" }, decls: 24, vars: 28, consts: [[1, "card-block", "p-t-0", "flex-no-shrink", "separator-bottom", "col-xs-12"], [1, "row", "p-b-16"], [1, "col-md-6", "col-md-offset-3", "col-lg-4", "col-lg-offset-4"], [1, "text-center", "m-b-16"], [1, "input-group", "input-group-search"], ["type", "search", 1, "form-control", 3, "title", "placeholder", "ngModel", "ngModelChange"], [1, "input-group-addon"], ["c8yIcon", "filter", 4, "ngIf"], ["c8yIcon", "times", "class", "text-muted", 3, "click", 4, "ngIf"], [4, "ngIf"], [1, "col-xs-12", "flex-grow", "no-gutter"], [1, "card-inner-scroll", "fit-h"], [1, "card-block", "p-t-0", "p-b-0"], [3, "ngClass"], [4, "c8yFor", "c8yForOf", "c8yForLoadMore"], ["c8yIcon", "filter"], ["c8yIcon", "times", 1, "text-muted", 3, "click"], [3, "selected", "onSelect"], ["c8yIcon", "c8y-firmware"], [1, "content-flex-60"], [1, "col-3"], [1, "text-truncate", 3, "title"], [1, "col-4"], [4, "ngIf", "ngIfElse"], ["noDesc", ""], ["translate", "", 1, "text-label-small", "m-r-8"], ["noType", ""], [1, "col-2"], ["class", "label label-warning", 4, "ngIf"], ["translate", "", 1, "text-muted"], [1, "label", "label-warning"], ["translate", ""], [1, "label", "label-info"], ["c8yIcon", "circle-o-notch", 1, "icon-spin"], [3, "ngPlural"], ["ngPluralCase", "=0"], ["ngPluralCase", "=1"], ["ngPluralCase", "other"], [1, "label", "label-default"], ["translate", "", 3, "translateParams"]], template: function SelectFirmwareComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵelementStart(2, "div", 2);
        ɵngcc0.ɵɵelementStart(3, "h4", 3);
        ɵngcc0.ɵɵtext(4);
        ɵngcc0.ɵɵpipe(5, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(6, "div", 4);
        ɵngcc0.ɵɵelementStart(7, "input", 5);
        ɵngcc0.ɵɵlistener("ngModelChange", function SelectFirmwareComponent_Template_input_ngModelChange_7_listener($event) { return ctx.textFilter$.next($event); });
        ɵngcc0.ɵɵpipe(8, "translate");
        ɵngcc0.ɵɵpipe(9, "translate");
        ɵngcc0.ɵɵpipe(10, "async");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(11, "span", 6);
        ɵngcc0.ɵɵtemplate(12, SelectFirmwareComponent_i_12_Template, 1, 0, "i", 7);
        ɵngcc0.ɵɵpipe(13, "async");
        ɵngcc0.ɵɵtemplate(14, SelectFirmwareComponent_i_14_Template, 1, 0, "i", 8);
        ɵngcc0.ɵɵpipe(15, "async");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(16, SelectFirmwareComponent_c8y_search_result_empty_16_Template, 1, 0, "c8y-search-result-empty", 9);
        ɵngcc0.ɵɵpipe(17, "async");
        ɵngcc0.ɵɵelementStart(18, "div", 10);
        ɵngcc0.ɵɵelementStart(19, "div", 11);
        ɵngcc0.ɵɵelementStart(20, "div", 12);
        ɵngcc0.ɵɵelementStart(21, "c8y-list-group", 13);
        ɵngcc0.ɵɵtemplate(22, SelectFirmwareComponent_c8y_li_22_Template, 24, 14, "c8y-li", 14);
        ɵngcc0.ɵɵpipe(23, "async");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(5, 10, "Select firmware"));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(8, 12, "Filter firmware\u2026"));
        ɵngcc0.ɵɵpropertyInterpolate("placeholder", ɵngcc0.ɵɵpipeBind1(9, 14, "Filter firmware\u2026"));
        ɵngcc0.ɵɵproperty("ngModel", ɵngcc0.ɵɵpipeBind1(10, 16, ctx.textFilter$));
        ɵngcc0.ɵɵadvance(5);
        ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind1(13, 18, ctx.textFilter$).length === 0);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind1(15, 20, ctx.textFilter$).length > 0);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind1(17, 22, ctx.textFilter$).length > 0 && ctx.elementCount === 0);
        ɵngcc0.ɵɵadvance(5);
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(26, _c1, ctx.elementCount <= ctx.DD_LOW_COUNT));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("c8yForOf", ɵngcc0.ɵɵpipeBind1(23, 24, ctx.firmwares$))("c8yForLoadMore", "auto");
    } }, directives: [ɵngcc4.DefaultValueAccessor, ɵngcc4.NgControlStatus, ɵngcc4.NgModel, ɵngcc5.NgIf, ɵngcc6.ListGroupComponent, ɵngcc5.NgClass, ɵngcc6.ForOfDirective, ɵngcc6.IconDirective, ɵngcc6.SearchResultEmptyComponent, ɵngcc6.ListItemComponent, ɵngcc6.ListItemRadioComponent, ɵngcc6.ListItemIconComponent, ɵngcc6.ListItemBodyComponent, ɵngcc6.C8yTranslateDirective, ɵngcc5.NgPlural, ɵngcc5.NgPluralCase], pipes: [ɵngcc6.C8yTranslatePipe, ɵngcc5.AsyncPipe], encapsulation: 2 });
SelectFirmwareComponent.ctorParameters = () => [
    { type: RepositoryService },
    { type: BulkOperationsService },
    { type: TranslateService }
];
SelectFirmwareComponent.propDecorators = {
    selected: [{ type: Input }],
    firmware: [{ type: Output }]
};
__decorate([
    memoize(property('id'))
], SelectFirmwareComponent.prototype, "getBaseVersionsCount$", null);
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SelectFirmwareComponent, [{
        type: Component,
        args: [{
                selector: 'c8y-select-firmware-step',
                template: "<div class=\"card-block p-t-0 flex-no-shrink separator-bottom col-xs-12\">\n  <div class=\"row p-b-16\">\n    <div class=\"col-md-6 col-md-offset-3 col-lg-4 col-lg-offset-4\">\n      <h4 class=\"text-center m-b-16\">{{ 'Select firmware' | translate }}</h4>\n      <div class=\"input-group input-group-search\">\n        <input\n          type=\"search\"\n          class=\"form-control\"\n          title=\"{{ 'Filter firmware\u2026' | translate }}\"\n          placeholder=\"{{ 'Filter firmware\u2026' | translate }}\"\n          [ngModel]=\"textFilter$ | async\"\n          (ngModelChange)=\"textFilter$.next($event)\"\n        />\n        <span class=\"input-group-addon\">\n          <i c8yIcon=\"filter\" *ngIf=\"(textFilter$ | async).length === 0\"></i>\n          <i\n            c8yIcon=\"times\"\n            class=\"text-muted\"\n            *ngIf=\"(textFilter$ | async).length > 0\"\n            (click)=\"textFilter$.next('')\"\n          ></i>\n        </span>\n      </div>\n    </div>\n  </div>\n</div>\n<c8y-search-result-empty *ngIf=\"(textFilter$ | async).length > 0 && elementCount===0\">\n</c8y-search-result-empty>\n<div class=\"col-xs-12 flex-grow no-gutter\">\n  <div class=\"card-inner-scroll fit-h\">\n    <div class=\"card-block p-t-0 p-b-0\">\n      <c8y-list-group [ngClass]=\"{ 'dd-low': elementCount <= DD_LOW_COUNT }\">\n        <c8y-li *c8yFor=\"let firmware of firmwares$ | async; let i = index; loadMore: 'auto'\">\n          <c8y-li-radio (onSelect)=\"selectFirmware($event, firmware)\" [selected]=\"firmware === selected\"></c8y-li-radio>\n          <c8y-li-icon>\n            <i c8yIcon=\"c8y-firmware\"></i>\n          </c8y-li-icon>\n\n          <c8y-li-body class=\"content-flex-60\">\n            <div class=\"col-3\">\n              <div class=\"text-truncate\" title=\"{{ firmware.name }}\">\n                {{ firmware.name }}\n              </div>\n            </div>\n            <div class=\"col-4\">\n              <div class=\"text-truncate\" title=\"{{ getDescriptionTitle(firmware) }}\">\n                <small *ngIf=\"firmware.description; else noDesc\">\n                  {{ firmware.description }}\n                </small>\n                <ng-template #noDesc>\n                  <small>\n                    <em class=\"text-muted\" translate>No description available.</em>\n                  </small>\n                </ng-template>\n              </div>\n            </div>\n            <div class=\"col-3\">\n              <div class=\"text-truncate\" title=\"{{ 'Device type' | translate }}: {{ getDeviceTypeTitle(firmware) }}\">\n                <span class=\"text-label-small m-r-8\" translate>\n                  Device type\n                </span>\n                <span *ngIf=\"firmware.c8y_Filter?.type; else noType\">\n                  {{ firmware.c8y_Filter?.type }}\n                </span>\n                <ng-template #noType>\n                  <em class=\"text-muted\" translate>Undefined`device type`</em>\n                </ng-template>\n              </div>\n            </div>\n            <div class=\"col-2\">\n              <span *ngIf=\"isLegacy(firmware)\" class=\"label label-warning\">\n                <span translate>Legacy</span>\n              </span>\n\n              <span *ngIf=\"!isLegacy(firmware)\">\n                <span *ngIf=\"(getBaseVersionsCount$(firmware) | async) === null\">\n                  <span class=\"label label-info\">\n                    <i c8yIcon=\"circle-o-notch\" class=\"icon-spin\"></i>\n                  </span>\n                </span>\n                <span *ngIf=\"(getBaseVersionsCount$(firmware) | async) !== null\">\n                  <span [ngPlural]=\"getBaseVersionsCount$(firmware) | async\">\n                    <ng-template ngPluralCase=\"=0\">\n                      <span class=\"label label-default\">\n                        <span translate>No versions</span>\n                      </span>\n                    </ng-template>\n                    <ng-template ngPluralCase=\"=1\">\n                      <span class=\"label label-info\"><span translate>1 version</span></span>\n                    </ng-template>\n                    <ng-template ngPluralCase=\"other\">\n                      <span class=\"label label-info\">\n                        <span\n                          ngNonBindable\n                          translate\n                          [translateParams]=\"{\n                            count: getBaseVersionsCount$(firmware) | async\n                          }\"\n                          >{{ count }} versions</span\n                        >\n                      </span>\n                    </ng-template>\n                  </span>\n                </span>\n              </span>\n            </div>\n          </c8y-li-body>\n        </c8y-li>\n      </c8y-list-group>\n    </div>\n  </div>\n</div>\n"
            }]
    }], function () { return [{ type: ɵngcc1.RepositoryService }, { type: ɵngcc2.BulkOperationsService }, { type: ɵngcc3.TranslateService }]; }, { firmware: [{
            type: Output
        }], selected: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VsZWN0LWZpcm13YXJlLmNvbXBvbmVudC5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vb3BlcmF0aW9ucy9zdGVwcGVyLWJ1bGstdHlwZS1maXJtd2FyZS9zZWxlY3QtZmlybXdhcmUuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3ZFLE9BQU8sRUFBYyxlQUFlLEVBQUUsTUFBTSxNQUFNLENBQUM7QUFDbkQsT0FBTyxFQUFFLFlBQVksRUFBRSxvQkFBb0IsRUFBRSxHQUFHLEVBQUUsU0FBUyxFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ2pHLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUM5QyxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsY0FBYyxFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDbkYsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBRTlDLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3ZELE9BQU8sRUFBRSxRQUFRLEVBQUUsR0FBRyxFQUFFLE1BQU0sV0FBVyxDQUFDO0FBQzFDLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLHdEQUF3RCxDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBTS9GLE1BQU0sT0FBTyx1QkFBdUI7QUFDcEMsSUFzQkUsWUFDVSxpQkFBb0MsRUFDcEMsY0FBcUMsRUFDckMsU0FB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Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsyT0FBNkMsY0FDOUMsNE9BQ0k7QUFBQztBQUNVLFlBWlAsaUJBQWlCO0FBQUksWUFLckIscUJBQXFCO0FBQUksWUFGekIsZ0JBQWdCO0FBQUc7QUFBRztBQUNiLHVCQVFmLEtBQUs7QUFBSyx1QkFDVixNQUFNO0FBQUk7QUFzQ1g7QUFBYSxJQURaLE9BQU8sQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDMUIsb0VBS0c7Ozs7Ozs7Ozs7O29CQUNIO0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE91dHB1dCwgRXZlbnRFbWl0dGVyLCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSwgQmVoYXZpb3JTdWJqZWN0IH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBkZWJvdW5jZVRpbWUsIGRpc3RpbmN0VW50aWxDaGFuZ2VkLCB0YXAsIHN3aXRjaE1hcCwgc2hhcmVSZXBsYXkgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5pbXBvcnQgeyBtZW1vaXplIH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cyc7XG5pbXBvcnQgeyBSZXBvc2l0b3J5U2VydmljZSwgUmVwb3NpdG9yeVR5cGUgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzL3JlcG9zaXRvcnknO1xuaW1wb3J0IHsgZ2V0dGV4dCB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMnO1xuaW1wb3J0IHsgSVJlc3VsdExpc3QsIElNYW5hZ2VkT2JqZWN0IH0gZnJvbSAnQGM4eS9jbGllbnQnO1xuaW1wb3J0IHsgVHJhbnNsYXRlU2VydmljZSB9IGZyb20gJ0BuZ3gtdHJhbnNsYXRlL2NvcmUnO1xuaW1wb3J0IHsgcHJvcGVydHksIGdldCB9IGZyb20gJ2xvZGFzaC1lcyc7XG5pbXBvcnQgeyBCdWxrT3BlcmF0aW9uc1NlcnZpY2UgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzL29wZXJhdGlvbnMvYnVsay1vcGVyYXRpb25zLXNlcnZpY2UnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjOHktc2VsZWN0LWZpcm13YXJlLXN0ZXAnLFxuICB0ZW1wbGF0ZVVybDogJ3NlbGVjdC1maXJtd2FyZS5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgU2VsZWN0RmlybXdhcmVDb21wb25lbnQge1xuICBASW5wdXQoKSBzZWxlY3RlZDogSU1hbmFnZWRPYmplY3Q7XG4gIEBPdXRwdXQoKSBmaXJtd2FyZTogRXZlbnRFbWl0dGVyPElNYW5hZ2VkT2JqZWN0PiA9IG5ldyBFdmVudEVtaXR0ZXI8SU1hbmFnZWRPYmplY3Q+KCk7XG4gIGVsZW1lbnRDb3VudDogbnVtYmVyID0gMDtcbiAgRERfTE9XX0NPVU5UOiBudW1iZXIgPSAxMDtcbiAgdGV4dEZpbHRlciQ6IEJlaGF2aW9yU3ViamVjdDxzdHJpbmc+ID0gbmV3IEJlaGF2aW9yU3ViamVjdCgnJyk7XG5cbiAgZmlybXdhcmVzJDogT2JzZXJ2YWJsZTxJUmVzdWx0TGlzdDxJTWFuYWdlZE9iamVjdD4+ID0gdGhpcy50ZXh0RmlsdGVyJFxuICAgIC5waXBlKFxuICAgICAgZGVib3VuY2VUaW1lKDQwMCksXG4gICAgICBkaXN0aW5jdFVudGlsQ2hhbmdlZCgpXG4gICAgKVxuICAgIC5waXBlKFxuICAgICAgc3dpdGNoTWFwKHRleHQgPT4gdGhpcy5nZXRGaXJtd2FyZXModGV4dCkpLFxuICAgICAgdGFwKHJlc3AgPT4ge1xuICAgICAgICB0aGlzLmVsZW1lbnRDb3VudCA9IHJlc3AuZGF0YSA/IHJlc3AuZGF0YS5sZW5ndGggOiAwO1xuICAgICAgfSksXG4gICAgICBzaGFyZVJlcGxheSgxKVxuICAgICk7XG4gIGlzTGVnYWN5ID0gdGhpcy5yZXBvc2l0b3J5U2VydmljZS5pc0xlZ2FjeUVudHJ5LmJpbmQodGhpcy5yZXBvc2l0b3J5U2VydmljZSk7XG4gIHJlYWRvbmx5IERFVklDRV9UWVBFX05PVF9BVkFJTEFCTEU6IHN0cmluZyA9IGdldHRleHQoJ05vIGRldmljZSB0eXBlIGF2YWlsYWJsZS4nKTtcbiAgcmVhZG9ubHkgREVTQ1JJUFRJT05fTk9UX0FWQUlMQUJMRTogc3RyaW5nID0gZ2V0dGV4dCgnTm8gZGVzY3JpcHRpb24gYXZhaWxhYmxlLicpO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgcmVwb3NpdG9yeVNlcnZpY2U6IFJlcG9zaXRvcnlTZXJ2aWNlLFxuICAgIHByaXZhdGUgYnVsa09wc1NlcnZpY2U6IEJ1bGtPcGVyYXRpb25zU2VydmljZSxcbiAgICBwcml2YXRlIHRyYW5zbGF0ZTogVHJhbnNsYXRlU2VydmljZVxuICApIHt9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5ERF9MT1dfQ09VTlQgPSB0aGlzLmJ1bGtPcHNTZXJ2aWNlLkREX0xPV19DT1VOVDtcbiAgfVxuXG4gIHNlbGVjdEZpcm13YXJlKHNlbGVjdGVkOiBib29sZWFuLCBmdzogSU1hbmFnZWRPYmplY3QpIHtcbiAgICBpZiAoc2VsZWN0ZWQpIHtcbiAgICAgIHRoaXMuZmlybXdhcmUuZW1pdChmdyk7XG4gICAgfVxuICB9XG5cbiAgQG1lbW9pemUocHJvcGVydHkoJ2lkJykpXG4gIGdldEJhc2VWZXJzaW9uc0NvdW50JChmaXJtd2FyZTogSU1hbmFnZWRPYmplY3QpOiBPYnNlcnZhYmxlPG51bWJlciB8IHN0cmluZz4ge1xuICAgIHJldHVybiB0aGlzLmZpcm13YXJlcyQucGlwZShcbiAgICAgIHN3aXRjaE1hcCgoKSA9PiB0aGlzLnJlcG9zaXRvcnlTZXJ2aWNlLmdldEJhc2VWZXJzaW9uc0NvdW50JChmaXJtd2FyZSkpLFxuICAgICAgc2hhcmVSZXBsYXkoMSlcbiAgICApO1xuICB9XG5cbiAgZ2V0RGVzY3JpcHRpb25UaXRsZShmaXJtd2FyZTogSU1hbmFnZWRPYmplY3QpOiBzdHJpbmcge1xuICAgIHJldHVybiBnZXQoZmlybXdhcmUsICdkZXNjcmlwdGlvbicsIHRoaXMudHJhbnNsYXRlLmluc3RhbnQodGhpcy5ERVNDUklQVElPTl9OT1RfQVZBSUxBQkxFKSk7XG4gIH1cblxuICBnZXREZXZpY2VUeXBlVGl0bGUoZmlybXdhcmU6IElNYW5hZ2VkT2JqZWN0KTogc3RyaW5nIHtcbiAgICByZXR1cm4gZ2V0KGZpcm13YXJlLCAnYzh5X0ZpbHRlci50eXBlJywgdGhpcy50cmFuc2xhdGUuaW5zdGFudCh0aGlzLkRFVklDRV9UWVBFX05PVF9BVkFJTEFCTEUpKTtcbiAgfVxuXG4gIHByaXZhdGUgZ2V0RmlybXdhcmVzKHBhcnRpYWxOYW1lPzogc3RyaW5nKSB7XG4gICAgcmV0dXJuIHRoaXMucmVwb3NpdG9yeVNlcnZpY2UubGlzdFJlcG9zaXRvcnlFbnRyaWVzKFJlcG9zaXRvcnlUeXBlLkZJUk1XQVJFLCB7IHBhcnRpYWxOYW1lIH0pO1xuICB9XG59XG4iXX0=