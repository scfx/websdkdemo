import { NgModule } from '@angular/core';
import { RouterModule } from '@angular/router';
import { CoreModule } from '@c8y/ngx-components';
import { BulkOperationsStepperContainerComponent } from './bulk-operations-stepper-container.component';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/router';
export const bulkOperatioStepperRoutes = [
    {
        path: 'devicecontrol/bulk/creation/:type',
        component: BulkOperationsStepperContainerComponent
    }
];
/**
 * Container module for the new bulk operation steppers. Use this module in your application
 * to provide a step by step guided process for scheduling of bulk operations.
 * The module reads the bulk operation type from the URL and displays the corresponding stepper.
 * You can provide stepper for your custom bulk operation type by registering it with the
 * HOOK_LIST_BULK_TYPE injection token.
 */
export class BulkOperationsStepperContainerModule {
}
BulkOperationsStepperContainerModule.ɵfac = function BulkOperationsStepperContainerModule_Factory(t) { return new (t || BulkOperationsStepperContainerModule)(); };
BulkOperationsStepperContainerModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: BulkOperationsStepperContainerModule });
BulkOperationsStepperContainerModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CoreModule, RouterModule.forChild(bulkOperatioStepperRoutes)]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BulkOperationsStepperContainerModule, [{
        type: NgModule,
        args: [{
                declarations: [BulkOperationsStepperContainerComponent],
                imports: [CoreModule, RouterModule.forChild(bulkOperatioStepperRoutes)],
                entryComponents: [BulkOperationsStepperContainerComponent]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(BulkOperationsStepperContainerModule, { declarations: function () { return [BulkOperationsStepperContainerComponent]; }, imports: function () { return [CoreModule, ɵngcc1.RouterModule]; } }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVsay1vcGVyYXRpb25zLXN0ZXBwZXItY29udGFpbmVyLm1vZHVsZS5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vb3BlcmF0aW9ucy9idWxrLW9wZXJhdGlvbnMtc3RlcHBlci1jb250YWluZXIvYnVsay1vcGVyYXRpb25zLXN0ZXBwZXItY29udGFpbmVyLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUUvQyxPQUFPLEVBQUUsVUFBVSxFQUFTLE1BQU0scUJBQXFCLENBQUM7QUFFeEQsT0FBTyxFQUFFLHVDQUF1QyxFQUFFLE1BQU0sK0NBQStDLENBQUM7OztBQUV4RyxNQUFNLENBQUMsTUFBTSx5QkFBeUIsR0FBWTtBQUNsRCxJQUFFO0FBQ0YsUUFBSSxJQUFJLEVBQUUsbUNBQW1DO0FBQzdDLFFBQUksU0FBUyxFQUFFLHVDQUF1QztBQUN0RCxLQUFHO0FBQ0gsQ0FBQyxDQUFDO0FBRUY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQU1ILE1BQU0sT0FBTyxvQ0FBb0M7QUFBRztnRUFMbkQsUUFBUSxTQUFDLGtCQUNSLFlBQVksRUFBRSxDQUFDLHVDQUF1QyxDQUFDO1FBQ3ZELE9BQU8sRUFBRSxDQUFDLFVBQVUsRUFBRSxZQUFZLENBQUMsUUFBUSxDQUFDLHlCQUF5QixDQUFDLENBQUMsa0JBQ3ZFLGVBQWUsRUFBRSxDQUFDO3VCQUF1QyxDQUFDLGNBQzNEOzs7Ozs7Ozs7aVNBQ0k7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBSb3V0ZXJNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xuXG5pbXBvcnQgeyBDb3JlTW9kdWxlLCBSb3V0ZSB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMnO1xuXG5pbXBvcnQgeyBCdWxrT3BlcmF0aW9uc1N0ZXBwZXJDb250YWluZXJDb21wb25lbnQgfSBmcm9tICcuL2J1bGstb3BlcmF0aW9ucy1zdGVwcGVyLWNvbnRhaW5lci5jb21wb25lbnQnO1xuXG5leHBvcnQgY29uc3QgYnVsa09wZXJhdGlvU3RlcHBlclJvdXRlczogUm91dGVbXSA9IFtcbiAge1xuICAgIHBhdGg6ICdkZXZpY2Vjb250cm9sL2J1bGsvY3JlYXRpb24vOnR5cGUnLFxuICAgIGNvbXBvbmVudDogQnVsa09wZXJhdGlvbnNTdGVwcGVyQ29udGFpbmVyQ29tcG9uZW50XG4gIH1cbl07XG5cbi8qKlxuICogQ29udGFpbmVyIG1vZHVsZSBmb3IgdGhlIG5ldyBidWxrIG9wZXJhdGlvbiBzdGVwcGVycy4gVXNlIHRoaXMgbW9kdWxlIGluIHlvdXIgYXBwbGljYXRpb25cbiAqIHRvIHByb3ZpZGUgYSBzdGVwIGJ5IHN0ZXAgZ3VpZGVkIHByb2Nlc3MgZm9yIHNjaGVkdWxpbmcgb2YgYnVsayBvcGVyYXRpb25zLlxuICogVGhlIG1vZHVsZSByZWFkcyB0aGUgYnVsayBvcGVyYXRpb24gdHlwZSBmcm9tIHRoZSBVUkwgYW5kIGRpc3BsYXlzIHRoZSBjb3JyZXNwb25kaW5nIHN0ZXBwZXIuXG4gKiBZb3UgY2FuIHByb3ZpZGUgc3RlcHBlciBmb3IgeW91ciBjdXN0b20gYnVsayBvcGVyYXRpb24gdHlwZSBieSByZWdpc3RlcmluZyBpdCB3aXRoIHRoZVxuICogSE9PS19MSVNUX0JVTEtfVFlQRSBpbmplY3Rpb24gdG9rZW4uXG4gKi9cbkBOZ01vZHVsZSh7XG4gIGRlY2xhcmF0aW9uczogW0J1bGtPcGVyYXRpb25zU3RlcHBlckNvbnRhaW5lckNvbXBvbmVudF0sXG4gIGltcG9ydHM6IFtDb3JlTW9kdWxlLCBSb3V0ZXJNb2R1bGUuZm9yQ2hpbGQoYnVsa09wZXJhdGlvU3RlcHBlclJvdXRlcyldLFxuICBlbnRyeUNvbXBvbmVudHM6IFtCdWxrT3BlcmF0aW9uc1N0ZXBwZXJDb250YWluZXJDb21wb25lbnRdXG59KVxuZXhwb3J0IGNsYXNzIEJ1bGtPcGVyYXRpb25zU3RlcHBlckNvbnRhaW5lck1vZHVsZSB7fVxuIl19