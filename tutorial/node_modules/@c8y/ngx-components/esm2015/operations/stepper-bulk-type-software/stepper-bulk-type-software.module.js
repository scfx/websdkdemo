import { NgModule } from '@angular/core';
import { ReactiveFormsModule } from '@angular/forms';
import { CoreModule, FormsModule, gettext } from '@c8y/ngx-components';
import { RepositoryModule } from '@c8y/ngx-components/repository';
import { BulkOperationStepperModule } from '@c8y/ngx-components/operations/bulk-operation-stepper';
import { HOOK_LIST_BULK_TYPE, baseUrl, BulkOperationType } from '@c8y/ngx-components/operations/bulk-operations-service';
import { ConfirmSoftwareSelectionStepComponent } from './confirm-software-selection-step.component';
import { SelectSoftwareStepComponent } from './select-software-step.component';
import { StepperBulkTypeSoftwareComponent } from './stepper-bulk-type-software.component';
import * as ɵngcc0 from '@angular/core';
const ɵ0 = {
    type: BulkOperationType.SOFTWARE,
    c8yIcon: 'c8y-tools',
    name: gettext('Software update'),
    path: `${baseUrl}software`,
    component: StepperBulkTypeSoftwareComponent,
    fragments: ['c8y_SoftwareList', 'c8y_SoftwareUpdate'],
    selected: false
};
/** Module for the 'Software update' operation type stepper */
export class StepperBulkTypeSoftwareModule {
}
StepperBulkTypeSoftwareModule.ɵfac = function StepperBulkTypeSoftwareModule_Factory(t) { return new (t || StepperBulkTypeSoftwareModule)(); };
StepperBulkTypeSoftwareModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: StepperBulkTypeSoftwareModule });
StepperBulkTypeSoftwareModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [
        {
            provide: HOOK_LIST_BULK_TYPE,
            useValue: ɵ0,
            multi: true
        }
    ], imports: [[
            CoreModule,
            FormsModule,
            ReactiveFormsModule,
            BulkOperationStepperModule,
            RepositoryModule
        ]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(StepperBulkTypeSoftwareModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    StepperBulkTypeSoftwareComponent,
                    ConfirmSoftwareSelectionStepComponent,
                    SelectSoftwareStepComponent
                ],
                imports: [
                    CoreModule,
                    FormsModule,
                    ReactiveFormsModule,
                    BulkOperationStepperModule,
                    RepositoryModule
                ],
                providers: [
                    {
                        provide: HOOK_LIST_BULK_TYPE,
                        useValue: ɵ0,
                        multi: true
                    }
                ],
                entryComponents: [StepperBulkTypeSoftwareComponent],
                exports: [StepperBulkTypeSoftwareComponent]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(StepperBulkTypeSoftwareModule, { declarations: function () { return [StepperBulkTypeSoftwareComponent,
        ConfirmSoftwareSelectionStepComponent,
        SelectSoftwareStepComponent]; }, imports: function () { return [CoreModule,
        FormsModule,
        ReactiveFormsModule,
        BulkOperationStepperModule,
        RepositoryModule]; }, exports: function () { return [StepperBulkTypeSoftwareComponent]; } }); })();
export { ɵ0 };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RlcHBlci1idWxrLXR5cGUtc29mdHdhcmUubW9kdWxlLmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9vcGVyYXRpb25zL3N0ZXBwZXItYnVsay10eXBlLXNvZnR3YXJlL3N0ZXBwZXItYnVsay10eXBlLXNvZnR3YXJlLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRXJELE9BQU8sRUFBRSxVQUFVLEVBQUUsV0FBVyxFQUFFLE9BQU8sRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3ZFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBQ2xFLE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLHVEQUF1RCxDQUFDO0FBQ25HLE9BQU8sRUFDTCxtQkFBbUIsRUFDbkIsT0FBTyxFQUNQLGlCQUFpQixFQUNsQixNQUFNLHdEQUF3RCxDQUFDO0FBRWhFLE9BQU8sRUFBRSxxQ0FBcUMsRUFBRSxNQUFNLDZDQUE2QyxDQUFDO0FBQ3BHLE9BQU8sRUFBRSwyQkFBMkIsRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBQy9FLE9BQU8sRUFBRSxnQ0FBZ0MsRUFBRSxNQUFNLHdDQUF3QyxDQUFDOztBQUMxRixXQWtCZ0I7QUFDaEIsSUFBUSxJQUFJLEVBQUUsaUJBQWlCLENBQUMsUUFBUTtBQUN4QyxJQUFRLE9BQU8sRUFBRSxXQUFXO0FBQzVCLElBQVEsSUFBSSxFQUFFLE9BQU8sQ0FBQyxpQkFBaUIsQ0FBQztBQUN4QyxJQUFRLElBQUksRUFBRSxHQUFHLE9BQU8sVUFBVTtBQUNsQyxJQUFRLFNBQVMsRUFBRSxnQ0FBZ0M7QUFDbkQsSUFBUSxTQUFTLEVBQUUsQ0FBQyxrQkFBa0IsRUFBRSxvQkFBb0IsQ0FBQztBQUM3RCxJQUFRLFFBQVEsRUFBRSxLQUFLO0FBQ3ZCLENBQU87QUF6QlAsOERBQThEO0FBZ0M5RCxNQUFNLE9BQU8sNkJBQTZCO0FBQUc7eURBL0I1QyxRQUFRLFNBQUMsa0JBQ1IsWUFBWSxFQUFFLHNCQUNaO2lCQUFnQyxzQkFDaEMscUNBQXFDLHNCQUNyQztRQUEyQixrQkFDNUIsa0JBQ0QsT0FBTyxFQUFFLHNCQUNQLFVBQVU7O09BQ1YsV0FBVyxzQkFDWDtpQkFBbUI7YUFDbkI7O0tBQTBCO1FBQzFCO0FBQWdCLGtCQUNqQjtXQUNELFNBQVMsRUFBRTtXQUNULDBCQUNFO0lBQU8sRUFBRSxtQkFBbUI7O09BQzVCLFFBQVEsSUFRUCwwQkFDRCxLQUFLLEVBQUUsSUFBSSxzQkFDWixrQkFDRixrQkFDRDtJQUFlLEVBQUUsQ0FBQztlQUFnQyxDQUFDO2lCQUNuRCxPQUFPLEVBQUUsQ0FBQzsyQkFBZ0MsQ0FBQyxjQUM1Qzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsyR0FDSTtBQUFDO0FBQWUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUmVhY3RpdmVGb3Jtc01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcblxuaW1wb3J0IHsgQ29yZU1vZHVsZSwgRm9ybXNNb2R1bGUsIGdldHRleHQgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzJztcbmltcG9ydCB7IFJlcG9zaXRvcnlNb2R1bGUgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzL3JlcG9zaXRvcnknO1xuaW1wb3J0IHsgQnVsa09wZXJhdGlvblN0ZXBwZXJNb2R1bGUgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzL29wZXJhdGlvbnMvYnVsay1vcGVyYXRpb24tc3RlcHBlcic7XG5pbXBvcnQge1xuICBIT09LX0xJU1RfQlVMS19UWVBFLFxuICBiYXNlVXJsLFxuICBCdWxrT3BlcmF0aW9uVHlwZVxufSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzL29wZXJhdGlvbnMvYnVsay1vcGVyYXRpb25zLXNlcnZpY2UnO1xuXG5pbXBvcnQgeyBDb25maXJtU29mdHdhcmVTZWxlY3Rpb25TdGVwQ29tcG9uZW50IH0gZnJvbSAnLi9jb25maXJtLXNvZnR3YXJlLXNlbGVjdGlvbi1zdGVwLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBTZWxlY3RTb2Z0d2FyZVN0ZXBDb21wb25lbnQgfSBmcm9tICcuL3NlbGVjdC1zb2Z0d2FyZS1zdGVwLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBTdGVwcGVyQnVsa1R5cGVTb2Z0d2FyZUNvbXBvbmVudCB9IGZyb20gJy4vc3RlcHBlci1idWxrLXR5cGUtc29mdHdhcmUuY29tcG9uZW50JztcblxuLyoqIE1vZHVsZSBmb3IgdGhlICdTb2Z0d2FyZSB1cGRhdGUnIG9wZXJhdGlvbiB0eXBlIHN0ZXBwZXIgKi9cbkBOZ01vZHVsZSh7XG4gIGRlY2xhcmF0aW9uczogW1xuICAgIFN0ZXBwZXJCdWxrVHlwZVNvZnR3YXJlQ29tcG9uZW50LFxuICAgIENvbmZpcm1Tb2Z0d2FyZVNlbGVjdGlvblN0ZXBDb21wb25lbnQsXG4gICAgU2VsZWN0U29mdHdhcmVTdGVwQ29tcG9uZW50XG4gIF0sXG4gIGltcG9ydHM6IFtcbiAgICBDb3JlTW9kdWxlLFxuICAgIEZvcm1zTW9kdWxlLFxuICAgIFJlYWN0aXZlRm9ybXNNb2R1bGUsXG4gICAgQnVsa09wZXJhdGlvblN0ZXBwZXJNb2R1bGUsXG4gICAgUmVwb3NpdG9yeU1vZHVsZVxuICBdLFxuICBwcm92aWRlcnM6IFtcbiAgICB7XG4gICAgICBwcm92aWRlOiBIT09LX0xJU1RfQlVMS19UWVBFLFxuICAgICAgdXNlVmFsdWU6IHtcbiAgICAgICAgdHlwZTogQnVsa09wZXJhdGlvblR5cGUuU09GVFdBUkUsXG4gICAgICAgIGM4eUljb246ICdjOHktdG9vbHMnLFxuICAgICAgICBuYW1lOiBnZXR0ZXh0KCdTb2Z0d2FyZSB1cGRhdGUnKSxcbiAgICAgICAgcGF0aDogYCR7YmFzZVVybH1zb2Z0d2FyZWAsXG4gICAgICAgIGNvbXBvbmVudDogU3RlcHBlckJ1bGtUeXBlU29mdHdhcmVDb21wb25lbnQsXG4gICAgICAgIGZyYWdtZW50czogWydjOHlfU29mdHdhcmVMaXN0JywgJ2M4eV9Tb2Z0d2FyZVVwZGF0ZSddLFxuICAgICAgICBzZWxlY3RlZDogZmFsc2VcbiAgICAgIH0sXG4gICAgICBtdWx0aTogdHJ1ZVxuICAgIH1cbiAgXSxcbiAgZW50cnlDb21wb25lbnRzOiBbU3RlcHBlckJ1bGtUeXBlU29mdHdhcmVDb21wb25lbnRdLFxuICBleHBvcnRzOiBbU3RlcHBlckJ1bGtUeXBlU29mdHdhcmVDb21wb25lbnRdXG59KVxuZXhwb3J0IGNsYXNzIFN0ZXBwZXJCdWxrVHlwZVNvZnR3YXJlTW9kdWxlIHt9XG4iXX0=