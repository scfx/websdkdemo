import { __awaiter } from "tslib";
import { Component } from '@angular/core';
import { gettext } from '@c8y/ngx-components';
import { RepositoryService, RepositoryType } from '@c8y/ngx-components/repository';
import { TranslateService } from '@ngx-translate/core';
import { get, isEqual, uniqWith } from 'lodash-es';
import { BehaviorSubject, combineLatest, from } from 'rxjs';
import { debounceTime, distinctUntilChanged, shareReplay, switchMap } from 'rxjs/operators';
import { BaseStepperComponent } from '@c8y/ngx-components/operations/bulk-operation-stepper';
import { BulkOperationsService } from '@c8y/ngx-components/operations/bulk-operations-service';
export class StepperBulkTypeConfigurationComponent extends BaseStepperComponent {
    constructor(bulkOperationService, repositoryService, translate) {
        super();
        this.bulkOperationService = bulkOperationService;
        this.repositoryService = repositoryService;
        this.translate = translate;
        this.NO_DEVICE_TYPE_AVAILABLE = gettext('Undefined`device type`');
        this.elementCount = 0;
        this.DD_LOW_COUNT = 10;
        this.textFilter$ = new BehaviorSubject('');
        this.configType$ = new BehaviorSubject('');
        this.configTypes = [];
        this.selectedConfigType = { name: '' };
        this.configurations$ = combineLatest(this.textFilter$, this.configType$).pipe(switchMap(([name, configType]) => this.getConfiguration(name, configType)), shareReplay(1));
        this.DD_LOW_COUNT = this.bulkOperationService.DD_LOW_COUNT;
        this.loadConfigurationTypes();
    }
    loadConfigurationTypes() {
        this.configTypeSubscription = this.configType$
            .pipe(debounceTime(300), distinctUntilChanged(), switchMap(searchStr => {
            const query = { configurationType: `*${searchStr}*` };
            return from(this.repositoryService.listRepositoryEntries(RepositoryType.CONFIGURATION, { query }));
        }))
            .subscribe(result => {
            const { data } = result;
            this.configTypes = uniqWith(data.map(val => ({ name: val.configurationType })), isEqual);
        });
    }
    ngOnDestroy() {
        this.configTypeSubscription.unsubscribe();
    }
    selectConfiguration(configuration) {
        this.selectedConfiguration = configuration;
    }
    goToSecondStep($event) {
        $event.stepper.next();
        this.getConfigBinary();
        this.deviceTypes = this.selectedConfiguration.deviceType;
    }
    getConfigBinary() {
        return __awaiter(this, void 0, void 0, function* () {
            if (this.selectedConfiguration.url) {
                this.selectedConfiguration.binary = yield this.repositoryService.getBinaryText(this.selectedConfiguration.url, { allowExternal: true, noAlerts: true });
            }
        });
    }
    getDeviceTypeTitle(configuration) {
        return get(configuration, 'deviceType', this.translate.instant(this.NO_DEVICE_TYPE_AVAILABLE));
    }
    retrieveOperationPrototype() {
        const configuration = {
            type: this.selectedConfiguration.configurationType,
            url: this.selectedConfiguration.url
        };
        return {
            name: gettext('Configuration update'),
            description: get(this.selectedConfiguration, 'name'),
            prototype: {
                description: `Update configuration to: ${this.selectedConfiguration.name}.`,
                c8y_DownloadConfigFile: configuration
            }
        };
    }
    getConfiguration(name, configurationType) {
        const query = name ? { name: `*${name}*` } : {};
        if (configurationType) {
            query.__or = [{ configurationType }, { __not: { __has: `configurationType` } }];
        }
        return this.repositoryService.listRepositoryEntries(RepositoryType.CONFIGURATION, { query });
    }
}
StepperBulkTypeConfigurationComponent.decorators = [
    { type: Component, args: [{
                selector: 'c8y-stepper-bulk-type-configuration',
                template: "<c8y-bulk-operation-stepper>\n  <ng-container\n    *customStep=\"\n      'Select configuration' | translate;\n      completed: !!selectedConfiguration;\n      buttonsDisabled: !selectedConfiguration;\n      onNext: goToSecondStep.bind(this)\"\n  >\n    <div class=\"card-block p-t-0 overflow-visible flex-no-shrink separator-bottom col-xs-12\">\n      <div class=\"row p-b-16\">\n        <div class=\"col-md-8 col-md-offset-2 col-lg-6 col-lg-offset-3\">\n          <h4 class=\"text-center m-b-16\">{{ 'Select configuration' | translate }}</h4>\n          <div class=\"row\">\n            <div class=\"col-md-6\">\n              <div class=\"input-group input-group-search\">\n                <input\n                  type=\"search\"\n                  class=\"form-control\"\n                  title=\"{{ 'Filter\u2026' | translate }}\"\n                  placeholder=\"{{ 'Filter\u2026' | translate }}\"\n                  [ngModel]=\"textFilter$ | async\"\n                  (ngModelChange)=\"textFilter$.next($event)\"\n                />\n                <span class=\"input-group-addon\">\n                  <i c8yIcon=\"filter\" *ngIf=\"(textFilter$ | async).length === 0\"></i>\n                  <i\n                    c8yIcon=\"times\"\n                    class=\"text-muted\"\n                    *ngIf=\"(textFilter$ | async).length > 0\"\n                    (click)=\"textFilter$.next('')\"\n                  ></i>\n                </span>\n              </div>\n            </div>\n            <div class=\"col-xs-12 p-b-8 visible-xs visible-sm\"></div>\n            <div class=\"col-md-6\">\n              <c8y-form-group class=\"m-0\">\n                <c8y-typeahead\n                  name=\"configType\"\n                  [(ngModel)]=\"selectedConfigType\"\n                  placeholder=\"{{ 'Type to filter configuration types\u2026' | translate }}\"\n                  (onSearch)=\"configType$.next($event)\"\n                >\n                  <c8y-li\n                    class=\"p-l-8 p-r-8 c8y-list__item--link\"\n                    (click)=\"selectedConfigType = { name: '' }; configType$.next('')\"\n                  >\n                    <span>{{ 'All configuration types' | translate }}</span>\n                  </c8y-li>\n                  <c8y-li\n                    *ngFor=\"let configType of configTypes\"\n                    class=\"p-l-8 p-r-8 c8y-list__item--link\"\n                    (click)=\"selectedConfigType = configType; configType$.next(configType.name)\"\n                    [active]=\"selectedConfigType === configType\"\n                  >\n                    <c8y-highlight\n                      [text]=\"configType.name\"\n                      [pattern]=\"configType$ | async\"\n                    ></c8y-highlight>\n                  </c8y-li>\n                </c8y-typeahead>\n              </c8y-form-group>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-xs-12 flex-grow no-gutter\">\n      <div class=\"card-inner-scroll fit-h\">\n        <div class=\"card-block p-t-0 p-b-0\">\n          <c8y-list-group [ngClass]=\"{ 'dd-low': elementCount < DD_LOW_COUNT }\">\n            <c8y-li #listItem *c8yFor=\"let configuration of configurations$ | async\">\n              <c8y-li-radio (onSelect)=\"selectConfiguration(configuration)\"></c8y-li-radio>\n              <c8y-li-icon icon=\"gears\"></c8y-li-icon>\n              <c8y-li-body class=\"content-flex-60\">\n                <div class=\"col-5\">\n                  <div class=\"text-truncate\" title=\"{{ configuration.name || '-' }}\">\n                    <c8y-highlight\n                      [text]=\"configuration.name || '-'\"\n                      [pattern]=\"textFilter$ | async\"\n                    ></c8y-highlight>\n                  </div>\n                </div>\n                <div class=\"col-4\">\n                  <div\n                    class=\"text-truncate\"\n                    title=\"{{ 'Device type' | translate }}: {{ getDeviceTypeTitle(configuration) }}\"\n                  >\n                    <span translate class=\"text-label-small m-r-4\">Device type</span>\n                    {{ configuration.deviceType }}\n                    <em class=\"text-muted\" *ngIf=\"!configuration.deviceType\">\n                      {{ 'Undefined`device type`' | translate }}\n                    </em>\n                  </div>\n                </div>\n                <div class=\"col-3\">\n                  <span\n                    class=\"label label-info\"\n                    *ngIf=\"configuration.configurationType\"\n                    title=\"{{ 'Configuration type' | translate }}: {{\n                      configuration.configurationType\n                    }}\"\n                  >\n                    <c8y-highlight\n                      [text]=\"configuration.configurationType\"\n                      elementClass=\"text-gray-lighter\"\n                      [pattern]=\"configType$ | async\"\n                    ></c8y-highlight>\n                  </span>\n                  <span\n                    class=\"label label-default\"\n                    *ngIf=\"!configuration.configurationType\"\n                    title=\"{{ 'Configuration type' | translate }}: {{ 'Undefined' | translate }}\"\n                  >\n                    {{ 'Undefined' | translate }}\n                  </span>\n                </div>\n              </c8y-li-body>\n            </c8y-li>\n          </c8y-list-group>\n        </div>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *customStep=\"'Preview configuration' | translate\">\n    <div class=\"d-contents\">\n      <div class=\"card-block p-t-0 flex-no-shrink separator-bottom\">\n        <div class=\"row\">\n          <div class=\"col-md-8 col-md-offset-2 col-lg-6 col-lg-offset-3\">\n            <h4 class=\"text-center m-b-16\">\n              {{ 'Preview configuration' | translate }}\n            </h4>\n            <div class=\"row no-gutter\">\n              <div class=\"col-xs-6\">\n                <div class=\"text-right text-truncate\" title=\"{{ selectedConfiguration?.name }}\">\n                  <strong>{{ selectedConfiguration?.name }}</strong>\n                </div>\n                <span class=\"label label-primary\" *ngIf=\"selectedConfiguration?.configurationType\">\n                  {{ selectedConfiguration.configurationType }}\n                </span>\n                <span class=\"label label-default\" *ngIf=\"!selectedConfiguration?.configurationType\">\n                  {{ 'Undefined' | translate }}\n                </span>\n              </div>\n              <div class=\"col-xs-6 text-right\">\n                <div class=\"text-truncate\" title=\"{{ 'Device type' | translate }}: {{ getDeviceTypeTitle(selectedConfiguration) }}\">\n                  <span translate class=\"text-label-small m-r-4\">\n                    Device type\n                  </span>\n                  {{ selectedConfiguration?.deviceType }}\n                  <em class=\"text-muted\" *ngIf=\"!selectedConfiguration?.deviceType\" translate>\n                    Undefined`device type`\n                  </em>\n                </div>\n                <p>\n                  <span translate class=\"text-label-small m-r-4\">Updated</span>\n                  <small>{{ selectedConfiguration?.lastUpdated | c8yDate }}</small>\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-xs-12 flex-grow no-gutter\">\n        <div class=\"card-inner-scroll fit-h\">\n          <div class=\"card-block p-t-0\">\n            <div class=\"row\">\n              <div class=\"col-md-8 col-md-offset-2\">\n                <div class=\"legend form-block\" translate>Preview</div>\n                <div\n                  class=\"c8y-empty-state text-left\"\n                  *ngIf=\"!this.selectedConfiguration?.binary; else binaryPreview\"\n                >\n                  <h1 [c8yIcon]=\"'file-code-o'\"></h1>\n                  <p>\n                    <strong translate>No preview available.</strong><br />\n                    <small translate>Could not fetch the file.</small>\n                  </p>\n                </div>\n                <ng-template #binaryPreview>\n                  <pre\n                    style=\"min-height: 98px;\"\n                  ><code>{{ this.selectedConfiguration?.binary }}</code></pre>\n                </ng-template>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </ng-container>\n</c8y-bulk-operation-stepper>\n"
            },] }
];
StepperBulkTypeConfigurationComponent.ctorParameters = () => [
    { type: BulkOperationsService },
    { type: RepositoryService },
    { type: TranslateService }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RlcHBlci1idWxrLXR5cGUtY29uZmlndXJhdGlvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9vcGVyYXRpb25zL3N0ZXBwZXItYnVsay10eXBlLWNvbmZpZ3VyYXRpb24vc3RlcHBlci1idWxrLXR5cGUtY29uZmlndXJhdGlvbi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFMUMsT0FBTyxFQUFjLE9BQU8sRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQzFELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxjQUFjLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUNuRixPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUN2RCxPQUFPLEVBQUUsR0FBRyxFQUFFLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFDbkQsT0FBTyxFQUFFLGVBQWUsRUFBRSxhQUFhLEVBQUUsSUFBSSxFQUE0QixNQUFNLE1BQU0sQ0FBQztBQUN0RixPQUFPLEVBQUUsWUFBWSxFQUFFLG9CQUFvQixFQUFFLFdBQVcsRUFBRSxTQUFTLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUM1RixPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSx1REFBdUQsQ0FBQztBQUM3RixPQUFPLEVBQ0wscUJBQXFCLEVBRXRCLE1BQU0sd0RBQXdELENBQUM7QUFNaEUsTUFBTSxPQUFPLHFDQUFzQyxTQUFRLG9CQUFvQjtJQWtCN0UsWUFDVSxvQkFBMkMsRUFDM0MsaUJBQW9DLEVBQ3BDLFNBQTJCO1FBRW5DLEtBQUssRUFBRSxDQUFDO1FBSkEseUJBQW9CLEdBQXBCLG9CQUFvQixDQUF1QjtRQUMzQyxzQkFBaUIsR0FBakIsaUJBQWlCLENBQW1CO1FBQ3BDLGNBQVMsR0FBVCxTQUFTLENBQWtCO1FBcEI1Qiw2QkFBd0IsR0FBRyxPQUFPLENBQUMsd0JBQXdCLENBQUMsQ0FBQztRQUV0RSxpQkFBWSxHQUFXLENBQUMsQ0FBQztRQUN6QixpQkFBWSxHQUFXLEVBQUUsQ0FBQztRQUMxQixnQkFBVyxHQUE0QixJQUFJLGVBQWUsQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUMvRCxnQkFBVyxHQUE0QixJQUFJLGVBQWUsQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUMvRCxnQkFBVyxHQUFHLEVBQUUsQ0FBQztRQUNqQix1QkFBa0IsR0FBRyxFQUFFLElBQUksRUFBRSxFQUFFLEVBQUUsQ0FBQztRQUNsQyxvQkFBZSxHQUE0QyxhQUFhLENBQ3RFLElBQUksQ0FBQyxXQUFXLEVBQ2hCLElBQUksQ0FBQyxXQUFXLENBQ2pCLENBQUMsSUFBSSxDQUNKLFNBQVMsQ0FBQyxDQUFDLENBQUMsSUFBSSxFQUFFLFVBQVUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxFQUFFLFVBQVUsQ0FBQyxDQUFDLEVBQzFFLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FDZixDQUFDO1FBU0EsSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUMsb0JBQW9CLENBQUMsWUFBWSxDQUFDO1FBQzNELElBQUksQ0FBQyxzQkFBc0IsRUFBRSxDQUFDO0lBQ2hDLENBQUM7SUFFRCxzQkFBc0I7UUFDcEIsSUFBSSxDQUFDLHNCQUFzQixHQUFHLElBQUksQ0FBQyxXQUFXO2FBQzNDLElBQUksQ0FDSCxZQUFZLENBQUMsR0FBRyxDQUFDLEVBQ2pCLG9CQUFvQixFQUFFLEVBQ3RCLFNBQVMsQ0FBQyxTQUFTLENBQUMsRUFBRTtZQUNwQixNQUFNLEtBQUssR0FBRyxFQUFFLGlCQUFpQixFQUFFLElBQUksU0FBUyxHQUFHLEVBQUUsQ0FBQztZQUN0RCxPQUFPLElBQUksQ0FDVCxJQUFJLENBQUMsaUJBQWlCLENBQUMscUJBQXFCLENBQUMsY0FBYyxDQUFDLGFBQWEsRUFBRSxFQUFFLEtBQUssRUFBRSxDQUFDLENBQ3RGLENBQUM7UUFDSixDQUFDLENBQUMsQ0FDSDthQUNBLFNBQVMsQ0FBQyxNQUFNLENBQUMsRUFBRTtZQUNsQixNQUFNLEVBQUUsSUFBSSxFQUFFLEdBQUcsTUFBTSxDQUFDO1lBQ3hCLElBQUksQ0FBQyxXQUFXLEdBQUcsUUFBUSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsSUFBSSxFQUFFLEdBQUcsQ0FBQyxpQkFBaUIsRUFBRSxDQUFDLENBQUMsRUFBRSxPQUFPLENBQUMsQ0FBQztRQUMzRixDQUFDLENBQUMsQ0FBQztJQUNQLENBQUM7SUFDRCxXQUFXO1FBQ1QsSUFBSSxDQUFDLHNCQUFzQixDQUFDLFdBQVcsRUFBRSxDQUFDO0lBQzVDLENBQUM7SUFFRCxtQkFBbUIsQ0FBQyxhQUE2QjtRQUMvQyxJQUFJLENBQUMscUJBQXFCLEdBQUcsYUFBYSxDQUFDO0lBQzdDLENBQUM7SUFFRCxjQUFjLENBQUMsTUFBOEM7UUFDM0QsTUFBTSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUN0QixJQUFJLENBQUMsZUFBZSxFQUFFLENBQUM7UUFDdkIsSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUMscUJBQXFCLENBQUMsVUFBVSxDQUFDO0lBQzNELENBQUM7SUFFSyxlQUFlOztZQUNuQixJQUFJLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxHQUFHLEVBQUU7Z0JBQ2xDLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxNQUFNLEdBQUcsTUFBTSxJQUFJLENBQUMsaUJBQWlCLENBQUMsYUFBYSxDQUM1RSxJQUFJLENBQUMscUJBQXFCLENBQUMsR0FBRyxFQUM5QixFQUFFLGFBQWEsRUFBRSxJQUFJLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxDQUN4QyxDQUFDO2FBQ0g7UUFDSCxDQUFDO0tBQUE7SUFFRCxrQkFBa0IsQ0FBQyxhQUE2QjtRQUM5QyxPQUFPLEdBQUcsQ0FBQyxhQUFhLEVBQUUsWUFBWSxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyx3QkFBd0IsQ0FBQyxDQUFDLENBQUM7SUFDakcsQ0FBQztJQUVTLDBCQUEwQjtRQUNsQyxNQUFNLGFBQWEsR0FBRztZQUNwQixJQUFJLEVBQUUsSUFBSSxDQUFDLHFCQUFxQixDQUFDLGlCQUFpQjtZQUNsRCxHQUFHLEVBQUUsSUFBSSxDQUFDLHFCQUFxQixDQUFDLEdBQUc7U0FDcEMsQ0FBQztRQUVGLE9BQU87WUFDTCxJQUFJLEVBQUUsT0FBTyxDQUFDLHNCQUFzQixDQUFDO1lBQ3JDLFdBQVcsRUFBRSxHQUFHLENBQUMsSUFBSSxDQUFDLHFCQUFxQixFQUFFLE1BQU0sQ0FBQztZQUNwRCxTQUFTLEVBQUc7Z0JBQ1YsV0FBVyxFQUFFLDRCQUE0QixJQUFJLENBQUMscUJBQXFCLENBQUMsSUFBSSxHQUFHO2dCQUMzRSxzQkFBc0IsRUFBRSxhQUFhO2FBQ1o7U0FDNUIsQ0FBQztJQUNKLENBQUM7SUFFTyxnQkFBZ0IsQ0FBQyxJQUFhLEVBQUUsaUJBQTBCO1FBQ2hFLE1BQU0sS0FBSyxHQUFRLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxJQUFJLEVBQUUsSUFBSSxJQUFJLEdBQUcsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7UUFDckQsSUFBSSxpQkFBaUIsRUFBRTtZQUNyQixLQUFLLENBQUMsSUFBSSxHQUFHLENBQUMsRUFBRSxpQkFBaUIsRUFBRSxFQUFFLEVBQUUsS0FBSyxFQUFFLEVBQUUsS0FBSyxFQUFFLG1CQUFtQixFQUFFLEVBQUUsQ0FBQyxDQUFDO1NBQ2pGO1FBQ0QsT0FBTyxJQUFJLENBQUMsaUJBQWlCLENBQUMscUJBQXFCLENBQUMsY0FBYyxDQUFDLGFBQWEsRUFBRSxFQUFFLEtBQUssRUFBRSxDQUFDLENBQUM7SUFDL0YsQ0FBQzs7O1lBbEdGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUscUNBQXFDO2dCQUMvQyx5Z1JBQTZEO2FBQzlEOzs7WUFQQyxxQkFBcUI7WUFQZCxpQkFBaUI7WUFDakIsZ0JBQWdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2RrU3RlcCB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9zdGVwcGVyJztcbmltcG9ydCB7IENvbXBvbmVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSU1hbmFnZWRPYmplY3QsIElPcGVyYXRpb24sIElSZXN1bHRMaXN0IH0gZnJvbSAnQGM4eS9jbGllbnQnO1xuaW1wb3J0IHsgQzh5U3RlcHBlciwgZ2V0dGV4dCB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMnO1xuaW1wb3J0IHsgUmVwb3NpdG9yeVNlcnZpY2UsIFJlcG9zaXRvcnlUeXBlIH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cy9yZXBvc2l0b3J5JztcbmltcG9ydCB7IFRyYW5zbGF0ZVNlcnZpY2UgfSBmcm9tICdAbmd4LXRyYW5zbGF0ZS9jb3JlJztcbmltcG9ydCB7IGdldCwgaXNFcXVhbCwgdW5pcVdpdGggfSBmcm9tICdsb2Rhc2gtZXMnO1xuaW1wb3J0IHsgQmVoYXZpb3JTdWJqZWN0LCBjb21iaW5lTGF0ZXN0LCBmcm9tLCBPYnNlcnZhYmxlLCBTdWJzY3JpcHRpb24gfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IGRlYm91bmNlVGltZSwgZGlzdGluY3RVbnRpbENoYW5nZWQsIHNoYXJlUmVwbGF5LCBzd2l0Y2hNYXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5pbXBvcnQgeyBCYXNlU3RlcHBlckNvbXBvbmVudCB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMvb3BlcmF0aW9ucy9idWxrLW9wZXJhdGlvbi1zdGVwcGVyJztcbmltcG9ydCB7XG4gIEJ1bGtPcGVyYXRpb25zU2VydmljZSxcbiAgT3BlcmF0aW9uRGV0YWlsc1xufSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzL29wZXJhdGlvbnMvYnVsay1vcGVyYXRpb25zLXNlcnZpY2UnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjOHktc3RlcHBlci1idWxrLXR5cGUtY29uZmlndXJhdGlvbicsXG4gIHRlbXBsYXRlVXJsOiAnc3RlcHBlci1idWxrLXR5cGUtY29uZmlndXJhdGlvbi5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgU3RlcHBlckJ1bGtUeXBlQ29uZmlndXJhdGlvbkNvbXBvbmVudCBleHRlbmRzIEJhc2VTdGVwcGVyQ29tcG9uZW50IHtcbiAgcmVhZG9ubHkgTk9fREVWSUNFX1RZUEVfQVZBSUxBQkxFID0gZ2V0dGV4dCgnVW5kZWZpbmVkYGRldmljZSB0eXBlYCcpO1xuICBzZWxlY3RlZENvbmZpZ3VyYXRpb246IElNYW5hZ2VkT2JqZWN0O1xuICBlbGVtZW50Q291bnQ6IG51bWJlciA9IDA7XG4gIEREX0xPV19DT1VOVDogbnVtYmVyID0gMTA7XG4gIHRleHRGaWx0ZXIkOiBCZWhhdmlvclN1YmplY3Q8c3RyaW5nPiA9IG5ldyBCZWhhdmlvclN1YmplY3QoJycpO1xuICBjb25maWdUeXBlJDogQmVoYXZpb3JTdWJqZWN0PHN0cmluZz4gPSBuZXcgQmVoYXZpb3JTdWJqZWN0KCcnKTtcbiAgY29uZmlnVHlwZXMgPSBbXTtcbiAgc2VsZWN0ZWRDb25maWdUeXBlID0geyBuYW1lOiAnJyB9O1xuICBjb25maWd1cmF0aW9ucyQ6IE9ic2VydmFibGU8SVJlc3VsdExpc3Q8SU1hbmFnZWRPYmplY3Q+PiA9IGNvbWJpbmVMYXRlc3QoXG4gICAgdGhpcy50ZXh0RmlsdGVyJCxcbiAgICB0aGlzLmNvbmZpZ1R5cGUkXG4gICkucGlwZShcbiAgICBzd2l0Y2hNYXAoKFtuYW1lLCBjb25maWdUeXBlXSkgPT4gdGhpcy5nZXRDb25maWd1cmF0aW9uKG5hbWUsIGNvbmZpZ1R5cGUpKSxcbiAgICBzaGFyZVJlcGxheSgxKVxuICApO1xuICBwcml2YXRlIGNvbmZpZ1R5cGVTdWJzY3JpcHRpb246IFN1YnNjcmlwdGlvbjtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIGJ1bGtPcGVyYXRpb25TZXJ2aWNlOiBCdWxrT3BlcmF0aW9uc1NlcnZpY2UsXG4gICAgcHJpdmF0ZSByZXBvc2l0b3J5U2VydmljZTogUmVwb3NpdG9yeVNlcnZpY2UsXG4gICAgcHJpdmF0ZSB0cmFuc2xhdGU6IFRyYW5zbGF0ZVNlcnZpY2VcbiAgKSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLkREX0xPV19DT1VOVCA9IHRoaXMuYnVsa09wZXJhdGlvblNlcnZpY2UuRERfTE9XX0NPVU5UO1xuICAgIHRoaXMubG9hZENvbmZpZ3VyYXRpb25UeXBlcygpO1xuICB9XG5cbiAgbG9hZENvbmZpZ3VyYXRpb25UeXBlcygpIHtcbiAgICB0aGlzLmNvbmZpZ1R5cGVTdWJzY3JpcHRpb24gPSB0aGlzLmNvbmZpZ1R5cGUkXG4gICAgICAucGlwZShcbiAgICAgICAgZGVib3VuY2VUaW1lKDMwMCksXG4gICAgICAgIGRpc3RpbmN0VW50aWxDaGFuZ2VkKCksXG4gICAgICAgIHN3aXRjaE1hcChzZWFyY2hTdHIgPT4ge1xuICAgICAgICAgIGNvbnN0IHF1ZXJ5ID0geyBjb25maWd1cmF0aW9uVHlwZTogYCoke3NlYXJjaFN0cn0qYCB9O1xuICAgICAgICAgIHJldHVybiBmcm9tKFxuICAgICAgICAgICAgdGhpcy5yZXBvc2l0b3J5U2VydmljZS5saXN0UmVwb3NpdG9yeUVudHJpZXMoUmVwb3NpdG9yeVR5cGUuQ09ORklHVVJBVElPTiwgeyBxdWVyeSB9KVxuICAgICAgICAgICk7XG4gICAgICAgIH0pXG4gICAgICApXG4gICAgICAuc3Vic2NyaWJlKHJlc3VsdCA9PiB7XG4gICAgICAgIGNvbnN0IHsgZGF0YSB9ID0gcmVzdWx0O1xuICAgICAgICB0aGlzLmNvbmZpZ1R5cGVzID0gdW5pcVdpdGgoZGF0YS5tYXAodmFsID0+ICh7IG5hbWU6IHZhbC5jb25maWd1cmF0aW9uVHlwZSB9KSksIGlzRXF1YWwpO1xuICAgICAgfSk7XG4gIH1cbiAgbmdPbkRlc3Ryb3koKTogdm9pZCB7XG4gICAgdGhpcy5jb25maWdUeXBlU3Vic2NyaXB0aW9uLnVuc3Vic2NyaWJlKCk7XG4gIH1cblxuICBzZWxlY3RDb25maWd1cmF0aW9uKGNvbmZpZ3VyYXRpb246IElNYW5hZ2VkT2JqZWN0KSB7XG4gICAgdGhpcy5zZWxlY3RlZENvbmZpZ3VyYXRpb24gPSBjb25maWd1cmF0aW9uO1xuICB9XG5cbiAgZ29Ub1NlY29uZFN0ZXAoJGV2ZW50OiB7IHN0ZXBwZXI6IEM4eVN0ZXBwZXI7IHN0ZXA6IENka1N0ZXAgfSkge1xuICAgICRldmVudC5zdGVwcGVyLm5leHQoKTtcbiAgICB0aGlzLmdldENvbmZpZ0JpbmFyeSgpO1xuICAgIHRoaXMuZGV2aWNlVHlwZXMgPSB0aGlzLnNlbGVjdGVkQ29uZmlndXJhdGlvbi5kZXZpY2VUeXBlO1xuICB9XG5cbiAgYXN5bmMgZ2V0Q29uZmlnQmluYXJ5KCkge1xuICAgIGlmICh0aGlzLnNlbGVjdGVkQ29uZmlndXJhdGlvbi51cmwpIHtcbiAgICAgIHRoaXMuc2VsZWN0ZWRDb25maWd1cmF0aW9uLmJpbmFyeSA9IGF3YWl0IHRoaXMucmVwb3NpdG9yeVNlcnZpY2UuZ2V0QmluYXJ5VGV4dChcbiAgICAgICAgdGhpcy5zZWxlY3RlZENvbmZpZ3VyYXRpb24udXJsLFxuICAgICAgICB7IGFsbG93RXh0ZXJuYWw6IHRydWUsIG5vQWxlcnRzOiB0cnVlIH1cbiAgICAgICk7XG4gICAgfVxuICB9XG5cbiAgZ2V0RGV2aWNlVHlwZVRpdGxlKGNvbmZpZ3VyYXRpb246IElNYW5hZ2VkT2JqZWN0KTogc3RyaW5nIHtcbiAgICByZXR1cm4gZ2V0KGNvbmZpZ3VyYXRpb24sICdkZXZpY2VUeXBlJywgdGhpcy50cmFuc2xhdGUuaW5zdGFudCh0aGlzLk5PX0RFVklDRV9UWVBFX0FWQUlMQUJMRSkpO1xuICB9XG5cbiAgcHJvdGVjdGVkIHJldHJpZXZlT3BlcmF0aW9uUHJvdG90eXBlKCk6IE9wZXJhdGlvbkRldGFpbHMge1xuICAgIGNvbnN0IGNvbmZpZ3VyYXRpb24gPSB7XG4gICAgICB0eXBlOiB0aGlzLnNlbGVjdGVkQ29uZmlndXJhdGlvbi5jb25maWd1cmF0aW9uVHlwZSxcbiAgICAgIHVybDogdGhpcy5zZWxlY3RlZENvbmZpZ3VyYXRpb24udXJsXG4gICAgfTtcblxuICAgIHJldHVybiB7XG4gICAgICBuYW1lOiBnZXR0ZXh0KCdDb25maWd1cmF0aW9uIHVwZGF0ZScpLFxuICAgICAgZGVzY3JpcHRpb246IGdldCh0aGlzLnNlbGVjdGVkQ29uZmlndXJhdGlvbiwgJ25hbWUnKSxcbiAgICAgIHByb3RvdHlwZTogKHtcbiAgICAgICAgZGVzY3JpcHRpb246IGBVcGRhdGUgY29uZmlndXJhdGlvbiB0bzogJHt0aGlzLnNlbGVjdGVkQ29uZmlndXJhdGlvbi5uYW1lfS5gLFxuICAgICAgICBjOHlfRG93bmxvYWRDb25maWdGaWxlOiBjb25maWd1cmF0aW9uXG4gICAgICB9IGFzIHVua25vd24pIGFzIElPcGVyYXRpb25cbiAgICB9O1xuICB9XG5cbiAgcHJpdmF0ZSBnZXRDb25maWd1cmF0aW9uKG5hbWU/OiBzdHJpbmcsIGNvbmZpZ3VyYXRpb25UeXBlPzogc3RyaW5nKSB7XG4gICAgY29uc3QgcXVlcnk6IGFueSA9IG5hbWUgPyB7IG5hbWU6IGAqJHtuYW1lfSpgIH0gOiB7fTtcbiAgICBpZiAoY29uZmlndXJhdGlvblR5cGUpIHtcbiAgICAgIHF1ZXJ5Ll9fb3IgPSBbeyBjb25maWd1cmF0aW9uVHlwZSB9LCB7IF9fbm90OiB7IF9faGFzOiBgY29uZmlndXJhdGlvblR5cGVgIH0gfV07XG4gICAgfVxuICAgIHJldHVybiB0aGlzLnJlcG9zaXRvcnlTZXJ2aWNlLmxpc3RSZXBvc2l0b3J5RW50cmllcyhSZXBvc2l0b3J5VHlwZS5DT05GSUdVUkFUSU9OLCB7IHF1ZXJ5IH0pO1xuICB9XG59XG4iXX0=