import { Component } from '@angular/core';
import { CellRendererContext } from '@c8y/ngx-components';
import { ColumnUtilService } from './column-util.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@c8y/ngx-components';
import * as ɵngcc2 from './column-util.service';
export class ModelCellRendererComponent {
    constructor(context, columnUtilService) {
        this.context = context;
        this.columnUtilService = columnUtilService;
    }
}
ModelCellRendererComponent.ɵfac = function ModelCellRendererComponent_Factory(t) { return new (t || ModelCellRendererComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CellRendererContext), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ColumnUtilService)); };
ModelCellRendererComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ModelCellRendererComponent, selectors: [["ng-component"]], decls: 1, vars: 1, template: function ModelCellRendererComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtext(0);
    } if (rf & 2) {
        ɵngcc0.ɵɵtextInterpolate1(" ", ctx.columnUtilService.getModel(ctx.context.item), " ");
    } }, encapsulation: 2 });
ModelCellRendererComponent.ctorParameters = () => [
    { type: CellRendererContext },
    { type: ColumnUtilService }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ModelCellRendererComponent, [{
        type: Component,
        args: [{
                template: `
    {{ columnUtilService.getModel(context.item) }}
  `
            }]
    }], function () { return [{ type: ɵngcc1.CellRendererContext }, { type: ɵngcc2.ColumnUtilService }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kZWwuY2VsbC1yZW5kZXJlci5jb21wb25lbnQuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2RldmljZS1ncmlkL2NvbHVtbnMvbW9kZWwuY2VsbC1yZW5kZXJlci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMxQyxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUMxRCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQzs7OztBQU8xRCxNQUFNLE9BQU8sMEJBQTBCO0FBQ3ZDLElBQUUsWUFBbUIsT0FBNEIsRUFBUyxpQkFBb0M7QUFBSSxRQUE3RSxZQUFPLEdBQVAsT0FBTyxDQUFxQjtBQUFDLFFBQVEsc0JBQWlCLEdBQWpCLGlCQUFpQixDQUFtQjtBQUFDLElBQUUsQ0FBQztBQUNsRztzREFQQyxTQUFTLFNBQUMsa0JBQ1QsUUFBUSxFQUFFLHdEQUVULGNBQ0Y7Ozs7OzZCQUNJO0FBQUM7QUFDVSxZQVRQLG1CQUFtQjtBQUFJLFlBQ3ZCLGlCQUFpQjtBQUFHOzs7Ozs7Ozt3SEFBRTtBQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDZWxsUmVuZGVyZXJDb250ZXh0IH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cyc7XG5pbXBvcnQgeyBDb2x1bW5VdGlsU2VydmljZSB9IGZyb20gJy4vY29sdW1uLXV0aWwuc2VydmljZSc7XG5cbkBDb21wb25lbnQoe1xuICB0ZW1wbGF0ZTogYFxuICAgIHt7IGNvbHVtblV0aWxTZXJ2aWNlLmdldE1vZGVsKGNvbnRleHQuaXRlbSkgfX1cbiAgYFxufSlcbmV4cG9ydCBjbGFzcyBNb2RlbENlbGxSZW5kZXJlckNvbXBvbmVudCB7XG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBjb250ZXh0OiBDZWxsUmVuZGVyZXJDb250ZXh0LCBwdWJsaWMgY29sdW1uVXRpbFNlcnZpY2U6IENvbHVtblV0aWxTZXJ2aWNlKSB7fVxufVxuIl19