import * as angular from 'angular';
function gettextCatalogDecorator($delegate, $interpolate, c8yTranslate) {
    'ngInject';
    const gettextCatalog = $delegate;
    const originalGetString = angular.bind(gettextCatalog, gettextCatalog.getString);
    function newGetString(input, scope, context) {
        if (typeof input === 'string') {
            const translatedString = originalGetString(input, scope, context);
            const interpolatedString = scope ? $interpolate(input)(scope) : input;
            let stringToReturn = translatedString;
            if (translatedString && translatedString === interpolatedString) {
                const translatedServerMessage = c8yTranslate.instant(interpolatedString);
                stringToReturn = translatedServerMessage;
            }
            return stringToReturn;
        }
        return input;
    }
    gettextCatalog.getString = newGetString;
    return gettextCatalog;
}
export { gettextCatalogDecorator };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0dGV4dENhdGFsb2cuZGVjb3JhdG9yLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vdXBncmFkZS9uZzEvZ2V0dGV4dENhdGFsb2cuZGVjb3JhdG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sS0FBSyxPQUFPLE1BQU0sU0FBUyxDQUFDO0FBRW5DLFNBQVMsdUJBQXVCLENBQzlCLFNBQVMsRUFDVCxZQUFZLEVBQ1osWUFBWTtJQUVaLFVBQVUsQ0FBQztJQUVYLE1BQU0sY0FBYyxHQUFHLFNBQVMsQ0FBQztJQUNqQyxNQUFNLGlCQUFpQixHQUFHLE9BQU8sQ0FBQyxJQUFJLENBQUMsY0FBYyxFQUFFLGNBQWMsQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUVqRixTQUFTLFlBQVksQ0FBQyxLQUFLLEVBQUUsS0FBSyxFQUFFLE9BQU87UUFDekMsSUFBSSxPQUFPLEtBQUssS0FBSyxRQUFRLEVBQUU7WUFDN0IsTUFBTSxnQkFBZ0IsR0FBRyxpQkFBaUIsQ0FBQyxLQUFLLEVBQUUsS0FBSyxFQUFFLE9BQU8sQ0FBQyxDQUFDO1lBQ2xFLE1BQU0sa0JBQWtCLEdBQUcsS0FBSyxDQUFDLENBQUMsQ0FBQyxZQUFZLENBQUMsS0FBSyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQztZQUV0RSxJQUFJLGNBQWMsR0FBRyxnQkFBZ0IsQ0FBQztZQUV0QyxJQUFJLGdCQUFnQixJQUFJLGdCQUFnQixLQUFLLGtCQUFrQixFQUFFO2dCQUMvRCxNQUFNLHVCQUF1QixHQUFHLFlBQVksQ0FBQyxPQUFPLENBQUMsa0JBQWtCLENBQUMsQ0FBQztnQkFDekUsY0FBYyxHQUFHLHVCQUF1QixDQUFDO2FBQzFDO1lBRUQsT0FBTyxjQUFjLENBQUM7U0FDdkI7UUFFRCxPQUFPLEtBQUssQ0FBQztJQUNmLENBQUM7SUFFRCxjQUFjLENBQUMsU0FBUyxHQUFHLFlBQVksQ0FBQztJQUV4QyxPQUFPLGNBQWMsQ0FBQztBQUN4QixDQUFDO0FBRUQsT0FBTyxFQUFFLHVCQUF1QixFQUFFLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBhbmd1bGFyIGZyb20gJ2FuZ3VsYXInO1xuXG5mdW5jdGlvbiBnZXR0ZXh0Q2F0YWxvZ0RlY29yYXRvcihcbiAgJGRlbGVnYXRlLFxuICAkaW50ZXJwb2xhdGUsXG4gIGM4eVRyYW5zbGF0ZVxuKSB7XG4gICduZ0luamVjdCc7XG5cbiAgY29uc3QgZ2V0dGV4dENhdGFsb2cgPSAkZGVsZWdhdGU7XG4gIGNvbnN0IG9yaWdpbmFsR2V0U3RyaW5nID0gYW5ndWxhci5iaW5kKGdldHRleHRDYXRhbG9nLCBnZXR0ZXh0Q2F0YWxvZy5nZXRTdHJpbmcpO1xuXG4gIGZ1bmN0aW9uIG5ld0dldFN0cmluZyhpbnB1dCwgc2NvcGUsIGNvbnRleHQpIHtcbiAgICBpZiAodHlwZW9mIGlucHV0ID09PSAnc3RyaW5nJykge1xuICAgICAgY29uc3QgdHJhbnNsYXRlZFN0cmluZyA9IG9yaWdpbmFsR2V0U3RyaW5nKGlucHV0LCBzY29wZSwgY29udGV4dCk7XG4gICAgICBjb25zdCBpbnRlcnBvbGF0ZWRTdHJpbmcgPSBzY29wZSA/ICRpbnRlcnBvbGF0ZShpbnB1dCkoc2NvcGUpIDogaW5wdXQ7XG5cbiAgICAgIGxldCBzdHJpbmdUb1JldHVybiA9IHRyYW5zbGF0ZWRTdHJpbmc7XG5cbiAgICAgIGlmICh0cmFuc2xhdGVkU3RyaW5nICYmIHRyYW5zbGF0ZWRTdHJpbmcgPT09IGludGVycG9sYXRlZFN0cmluZykge1xuICAgICAgICBjb25zdCB0cmFuc2xhdGVkU2VydmVyTWVzc2FnZSA9IGM4eVRyYW5zbGF0ZS5pbnN0YW50KGludGVycG9sYXRlZFN0cmluZyk7XG4gICAgICAgIHN0cmluZ1RvUmV0dXJuID0gdHJhbnNsYXRlZFNlcnZlck1lc3NhZ2U7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBzdHJpbmdUb1JldHVybjtcbiAgICB9XG5cbiAgICByZXR1cm4gaW5wdXQ7XG4gIH1cblxuICBnZXR0ZXh0Q2F0YWxvZy5nZXRTdHJpbmcgPSBuZXdHZXRTdHJpbmc7XG5cbiAgcmV0dXJuIGdldHRleHRDYXRhbG9nO1xufVxuXG5leHBvcnQgeyBnZXR0ZXh0Q2F0YWxvZ0RlY29yYXRvciB9O1xuIl19