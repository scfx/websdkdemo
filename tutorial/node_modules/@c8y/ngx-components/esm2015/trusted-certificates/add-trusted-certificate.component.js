import { __awaiter } from "tslib";
import { Component } from '@angular/core';
import { BsModalRef } from 'ngx-bootstrap/modal';
import { TrustedCertificateService } from '@c8y/client';
import { AlertService, gettext } from '@c8y/ngx-components';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from 'ngx-bootstrap/modal';
import * as ɵngcc2 from '@c8y/client';
import * as ɵngcc3 from '@c8y/ngx-components';
import * as ɵngcc4 from '@angular/forms';
import * as ɵngcc5 from 'ngx-bootstrap/popover';
import * as ɵngcc6 from 'ngx-bootstrap/buttons';
export class AddTrustedCertificateComponent {
    constructor(modal, trustedCertificateService, alertService) {
        this.modal = modal;
        this.trustedCertificateService = trustedCertificateService;
        this.alertService = alertService;
        this.maxAllowedFiles = 1;
        this.AUTO_REGISTRATION_POPOVER = gettext('All devices with credentials signed by this certificate will be able to communicate with the platform without a prior registration.');
        this.trustedCertificate = {
            status: 'DISABLED'
        };
        this.fileIsUploaded = false;
        this.result = new Promise((resolve, reject) => {
            this._save = resolve;
            this._cancel = reject;
        });
    }
    uploadFile(dropped) {
        this.fileIsUploaded = false;
        if (dropped) {
            const reader = new FileReader();
            reader.onload = () => {
                this.fileIsUploaded = true;
                this.trustedCertificate.certInPemFormat = reader.result;
            };
            reader.readAsText(dropped[0].file);
        }
    }
    save() {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                yield this.trustedCertificateService.create(this.trustedCertificate);
                this.alertService.success(gettext('Certificate saved.'));
                this._save();
            }
            catch (ex) {
                this.alertService.addServerFailure(ex);
            }
        });
    }
    close() {
        this._cancel();
        this.modal.hide();
    }
}
AddTrustedCertificateComponent.ɵfac = function AddTrustedCertificateComponent_Factory(t) { return new (t || AddTrustedCertificateComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.BsModalRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.TrustedCertificateService), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.AlertService)); };
AddTrustedCertificateComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: AddTrustedCertificateComponent, selectors: [["c8y-add-trusted-certificate"]], decls: 49, vars: 50, consts: [[1, "viewport-modal"], [1, "modal-header", "dialog-header"], ["c8yIcon", "certificate"], ["translate", ""], [1, "modal-inner-scroll"], [1, "modal-body"], ["addTrustedCertificateForm", "ngForm"], ["translate", "", "for", "certificateName"], ["id", "certificateName", "type", "text", "autocomplete", "off", "name", "certificateName", "required", "", 1, "form-control", 3, "ngModel", "placeholder", "ngModelChange"], ["translate", "", "for", "certificate"], [1, "drop-area-sm", 3, "loadingMessage", "title", "maxAllowedFiles", "dropped"], [1, "c8y-checkbox", 3, "title"], ["id", "autoRegistration", "type", "checkbox", "name", "autoRegistration", 3, "ngModel", "ngModelChange"], ["triggers", "focus", 1, "btn", "btn-clean", 3, "popover"], [3, "c8yIcon"], ["type", "button", "name", "certificateStatus", "btnCheckbox", "", "btnCheckboxTrue", "ENABLED", "btnCheckboxFalse", "DISABLED", 1, "btn", 3, "ngModel", "ngModelChange"], [3, "title", "hidden"], [1, "modal-footer"], [1, "btn", "btn-default", 3, "title", "click"], [1, "btn", "btn-primary", 3, "title", "disabled", "click"]], template: function AddTrustedCertificateComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵelement(2, "i", 2);
        ɵngcc0.ɵɵelementStart(3, "h4", 3);
        ɵngcc0.ɵɵtext(4, "Add trusted certificate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(5, "div", 4);
        ɵngcc0.ɵɵelementStart(6, "div", 5);
        ɵngcc0.ɵɵelementStart(7, "form", null, 6);
        ɵngcc0.ɵɵelementStart(9, "c8y-form-group");
        ɵngcc0.ɵɵelementStart(10, "label", 7);
        ɵngcc0.ɵɵtext(11, "Certificate name");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(12, "input", 8);
        ɵngcc0.ɵɵlistener("ngModelChange", function AddTrustedCertificateComponent_Template_input_ngModelChange_12_listener($event) { return ctx.trustedCertificate.name = $event; });
        ɵngcc0.ɵɵpipe(13, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(14, "c8y-form-group");
        ɵngcc0.ɵɵelementStart(15, "label", 9);
        ɵngcc0.ɵɵtext(16, "Certificate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(17, "c8y-drop-area", 10);
        ɵngcc0.ɵɵlistener("dropped", function AddTrustedCertificateComponent_Template_c8y_drop_area_dropped_17_listener($event) { return ctx.uploadFile($event); });
        ɵngcc0.ɵɵpipe(18, "translate");
        ɵngcc0.ɵɵpipe(19, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(20, "c8y-form-group");
        ɵngcc0.ɵɵelementStart(21, "label", 11);
        ɵngcc0.ɵɵpipe(22, "translate");
        ɵngcc0.ɵɵelementStart(23, "input", 12);
        ɵngcc0.ɵɵlistener("ngModelChange", function AddTrustedCertificateComponent_Template_input_ngModelChange_23_listener($event) { return ctx.trustedCertificate.autoRegistrationEnabled = $event; });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(24, "span");
        ɵngcc0.ɵɵelementStart(25, "span");
        ɵngcc0.ɵɵtext(26);
        ɵngcc0.ɵɵpipe(27, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(28, "button", 13);
        ɵngcc0.ɵɵpipe(29, "translate");
        ɵngcc0.ɵɵelement(30, "i", 14);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(31, "button", 15);
        ɵngcc0.ɵɵlistener("ngModelChange", function AddTrustedCertificateComponent_Template_button_ngModelChange_31_listener($event) { return ctx.trustedCertificate.status = $event; });
        ɵngcc0.ɵɵelementStart(32, "span", 16);
        ɵngcc0.ɵɵpipe(33, "translate");
        ɵngcc0.ɵɵtext(34);
        ɵngcc0.ɵɵpipe(35, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(36, "span", 16);
        ɵngcc0.ɵɵpipe(37, "translate");
        ɵngcc0.ɵɵtext(38);
        ɵngcc0.ɵɵpipe(39, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(40, "div", 17);
        ɵngcc0.ɵɵelementStart(41, "button", 18);
        ɵngcc0.ɵɵlistener("click", function AddTrustedCertificateComponent_Template_button_click_41_listener() { return ctx.close(); });
        ɵngcc0.ɵɵpipe(42, "translate");
        ɵngcc0.ɵɵtext(43);
        ɵngcc0.ɵɵpipe(44, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(45, "button", 19);
        ɵngcc0.ɵɵlistener("click", function AddTrustedCertificateComponent_Template_button_click_45_listener() { return ctx.save(); });
        ɵngcc0.ɵɵpipe(46, "translate");
        ɵngcc0.ɵɵtext(47);
        ɵngcc0.ɵɵpipe(48, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        const _r0 = ɵngcc0.ɵɵreference(8);
        ɵngcc0.ɵɵadvance(12);
        ɵngcc0.ɵɵpropertyInterpolate("placeholder", ɵngcc0.ɵɵpipeBind1(13, 22, "e.g. My certificate"));
        ɵngcc0.ɵɵproperty("ngModel", ctx.trustedCertificate.name);
        ɵngcc0.ɵɵadvance(5);
        ɵngcc0.ɵɵproperty("loadingMessage", ɵngcc0.ɵɵpipeBind1(18, 24, "Importing, please wait."))("title", ɵngcc0.ɵɵpipeBind1(19, 26, "Paste the certificate in PEM format."))("maxAllowedFiles", ctx.maxAllowedFiles);
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(22, 28, "Auto registration"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngModel", ctx.trustedCertificate.autoRegistrationEnabled);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(27, 30, "Auto registration"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵpropertyInterpolate("popover", ɵngcc0.ɵɵpipeBind1(29, 32, ctx.AUTO_REGISTRATION_POPOVER));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("c8yIcon", "question-circle-o");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngModel", ctx.trustedCertificate.status);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(33, 34, "Disabled`trusted certificate status`"));
        ɵngcc0.ɵɵproperty("hidden", ctx.trustedCertificate.status !== "DISABLED");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(35, 36, "Disabled`trusted certificate status`"), " ");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(37, 38, "Enabled`trusted certificate status`"));
        ɵngcc0.ɵɵproperty("hidden", ctx.trustedCertificate.status !== "ENABLED");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(39, 40, "Enabled`trusted certificate status`"), " ");
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(42, 42, "Cancel"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(44, 44, "Cancel"), " ");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(46, 46, "Add certificate"));
        ɵngcc0.ɵɵproperty("disabled", _r0.form.invalid || _r0.form.pristine || !ctx.fileIsUploaded);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(48, 48, "Add certificate"), " ");
    } }, directives: [ɵngcc3.IconDirective, ɵngcc3.C8yTranslateDirective, ɵngcc4.ɵNgNoValidate, ɵngcc4.NgControlStatusGroup, ɵngcc4.NgForm, ɵngcc3.FormGroupComponent, ɵngcc3.RequiredInputPlaceholderDirective, ɵngcc4.DefaultValueAccessor, ɵngcc4.RequiredValidator, ɵngcc4.NgControlStatus, ɵngcc4.NgModel, ɵngcc3.DropAreaComponent, ɵngcc4.CheckboxControlValueAccessor, ɵngcc5.PopoverDirective, ɵngcc6.ButtonCheckboxDirective], pipes: [ɵngcc3.C8yTranslatePipe], encapsulation: 2 });
AddTrustedCertificateComponent.ctorParameters = () => [
    { type: BsModalRef },
    { type: TrustedCertificateService },
    { type: AlertService }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AddTrustedCertificateComponent, [{
        type: Component,
        args: [{
                selector: 'c8y-add-trusted-certificate',
                template: "<div class=\"viewport-modal\">\n  <div class=\"modal-header dialog-header\">\n    <i c8yIcon=\"certificate\"></i>\n    <h4 translate>Add trusted certificate</h4>\n  </div>\n  <div class=\"modal-inner-scroll\">\n    <div class=\"modal-body\">\n      <form #addTrustedCertificateForm=\"ngForm\">\n        <c8y-form-group>\n          <label translate for=\"certificateName\">Certificate name</label>\n          <input\n            id=\"certificateName\"\n            type=\"text\"\n            class=\"form-control\"\n            autocomplete=\"off\"\n            name=\"certificateName\"\n            [(ngModel)]=\"trustedCertificate.name\"\n            placeholder=\"{{ 'e.g. My certificate' | translate }}\"\n            required\n          />\n        </c8y-form-group>\n        <c8y-form-group>\n          <label translate for=\"certificate\">Certificate</label>\n          <c8y-drop-area\n            class=\"drop-area-sm\"\n            (dropped)=\"uploadFile($event)\"\n            [loadingMessage]=\"'Importing, please wait.' | translate\"\n            [title]=\"'Paste the certificate in PEM format.' | translate\"\n            [maxAllowedFiles]=\"maxAllowedFiles\"\n          >\n          </c8y-drop-area>\n        </c8y-form-group>\n        <c8y-form-group>\n          <label title=\"{{ 'Auto registration' | translate }}\" class=\"c8y-checkbox\">\n            <input\n              id=\"autoRegistration\"\n              type=\"checkbox\"\n              name=\"autoRegistration\"\n              [(ngModel)]=\"trustedCertificate.autoRegistrationEnabled\"\n            /><span></span>\n            <span>{{ 'Auto registration' | translate }}</span>\n            <button\n              class=\"btn btn-clean\"\n              popover=\"{{ AUTO_REGISTRATION_POPOVER | translate }}\"\n              triggers=\"focus\"\n            >\n              <i [c8yIcon]=\"'question-circle-o'\"></i>\n            </button>\n          </label>\n        </c8y-form-group>\n        <button\n          type=\"button\"\n          class=\"btn\"\n          name=\"certificateStatus\"\n          [(ngModel)]=\"trustedCertificate.status\"\n          btnCheckbox\n          btnCheckboxTrue=\"ENABLED\"\n          btnCheckboxFalse=\"DISABLED\"\n        >\n          <span\n            title=\"{{ 'Disabled`trusted certificate status`' | translate }}\"\n            [hidden]=\"trustedCertificate.status !== 'DISABLED'\"\n          >\n            {{ 'Disabled`trusted certificate status`' | translate }}\n          </span>\n          <span\n            title=\"{{ 'Enabled`trusted certificate status`' | translate }}\"\n            [hidden]=\"trustedCertificate.status !== 'ENABLED'\"\n          >\n            {{ 'Enabled`trusted certificate status`' | translate }}\n          </span>\n        </button>\n      </form>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n    <button title=\"{{ 'Cancel' | translate }}\" class=\"btn btn-default\" (click)=\"close()\">\n      {{ 'Cancel' | translate }}\n    </button>\n\n    <button\n      title=\"{{ 'Add certificate' | translate }}\"\n      class=\"btn btn-primary\"\n      (click)=\"save()\"\n      [disabled]=\"\n        addTrustedCertificateForm.form.invalid ||\n        addTrustedCertificateForm.form.pristine ||\n        !fileIsUploaded\n      \"\n    >\n      {{ 'Add certificate' | translate }}\n    </button>\n  </div>\n</div>\n"
            }]
    }], function () { return [{ type: ɵngcc1.BsModalRef }, { type: ɵngcc2.TrustedCertificateService }, { type: ɵngcc3.AlertService }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWRkLXRydXN0ZWQtY2VydGlmaWNhdGUuY29tcG9uZW50LmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi90cnVzdGVkLWNlcnRpZmljYXRlcy9hZGQtdHJ1c3RlZC1jZXJ0aWZpY2F0ZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDMUMsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBRWpELE9BQU8sRUFBdUIseUJBQXlCLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDN0UsT0FBTyxFQUFFLFlBQVksRUFBRSxPQUFPLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQzs7Ozs7Ozs7QUFNNUQsTUFBTSxPQUFPLDhCQUE4QjtBQUMzQyxJQWNFLFlBQ1UsS0FBaUIsRUFDakIseUJBQW9ELEVBQ3BELFlBQTBCO0FBQ25DLFFBSFMsVUFBSyxHQUFMLEtBQUssQ0FBWTtBQUFDLFFBQ2xCLDhCQUF5QixHQUF6Qix5QkFBeUIsQ0FBMkI7QUFBQyxRQUNyRCxpQkFBWSxHQUFaLFlBQVksQ0FBYztBQUN0QyxRQWxCRSxvQkFBZSxHQUFHLENBQUMsQ0FBQztBQUN0QixRQUFFLDhCQUF5QixHQUFHLE9BQU8sQ0FBQyxxSUFBcUksQ0FBQyxDQUFDO0FBQzdLLFFBQUUsdUJBQWtCLEdBQWlDO0FBQ3JELFlBQUksTUFBTSxFQUFFLFVBQVU7QUFDdEIsU0FBRyxDQUFDO0FBQ0osUUFBRSxtQkFBYyxHQUFHLEtBQUssQ0FBQztBQUN6QixRQUNFLFdBQU0sR0FBaUIsSUFBSSxPQUFPLENBQUMsQ0FBQyxPQUFPLEVBQUUsTUFBTSxFQUFFLEVBQUU7QUFDekQsWUFBSSxJQUFJLENBQUMsS0FBSyxHQUFHLE9BQU8sQ0FBQztBQUN6QixZQUFJLElBQUksQ0FBQyxPQUFPLEdBQUcsTUFBTSxDQUFDO0FBQzFCLFFBQUUsQ0FBQyxDQUFDLENBQUM7QUFDTCxJQU9LLENBQUM7QUFDTixJQUNFLFVBQVUsQ0FBQyxPQUFzQjtBQUNuQyxRQUFJLElBQUksQ0FBQyxjQUFjLEdBQUcsS0FBSyxDQUFDO0FBQ2hDLFFBQUksSUFBSSxPQUFPLEVBQUU7QUFDakIsWUFBTSxNQUFNLE1BQU0sR0FBRyxJQUFJLFVBQVUsRUFBRSxDQUFDO0FBQ3RDLFlBQU0sTUFBTSxDQUFDLE1BQU0sR0FBRyxHQUFHLEVBQUU7QUFDM0IsZ0JBQVEsSUFBSSxDQUFDLGNBQWMsR0FBRyxJQUFJLENBQUM7QUFDbkMsZ0JBQVEsSUFBSSxDQUFDLGtCQUFrQixDQUFDLGVBQWUsR0FBRyxNQUFNLENBQUMsTUFBZ0IsQ0FBQztBQUMxRSxZQUFNLENBQUMsQ0FBQztBQUNSLFlBQU0sTUFBTSxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDekMsU0FBSztBQUNMLElBQUUsQ0FBQztBQUNILElBQ1EsSUFBSTtBQUNaO0FBQ29ELFlBRGhELElBQUk7QUFDUixnQkFBTSxNQUFNLElBQUksQ0FBQyx5QkFBeUIsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLGtCQUFrQixDQUFDLENBQUM7QUFDM0UsZ0JBQU0sSUFBSSxDQUFDLFlBQVksQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLG9CQUFvQixDQUFDLENBQUMsQ0FBQztBQUMvRCxnQkFBTSxJQUFJLENBQUMsS0FBSyxFQUFFLENBQUM7QUFDbkIsYUFBSztBQUFDLFlBQUEsT0FBTyxFQUFFLEVBQUU7QUFDakIsZ0JBQU0sSUFBSSxDQUFDLFlBQVksQ0FBQyxnQkFBZ0IsQ0FBQyxFQUFFLENBQUMsQ0FBQztBQUM3QyxhQUFLO0FBQ0wsUUFBRSxDQUFDO0FBRUYsS0FGRTtBQUNILElBQ0UsS0FBSztBQUNQLFFBQUksSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO0FBQ25CLFFBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsQ0FBQztBQUN0QixJQUFFLENBQUM7QUFDSDswREFuREMsU0FBUyxTQUFDLGtCQUNULFFBQVEsRUFBRSw2QkFBNkIsa0JBQ3ZDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7eUJBQXVEO1FBQ3hEOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsrZEFDSTtBQUFDO0FBQ1UsWUFWUCxVQUFVO0FBQUksWUFFTyx5QkFBeUI7QUFBSSxZQUNsRCxZQUFZO0FBQUc7Ozs7Ozs7c0pBQUU7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQnNNb2RhbFJlZiB9IGZyb20gJ25neC1ib290c3RyYXAvbW9kYWwnO1xuaW1wb3J0IHsgRHJvcHBlZEZpbGUgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzJztcbmltcG9ydCB7IElUcnVzdGVkQ2VydGlmaWNhdGUsIFRydXN0ZWRDZXJ0aWZpY2F0ZVNlcnZpY2UgfSBmcm9tICdAYzh5L2NsaWVudCc7XG5pbXBvcnQgeyBBbGVydFNlcnZpY2UsIGdldHRleHQgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYzh5LWFkZC10cnVzdGVkLWNlcnRpZmljYXRlJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2FkZC10cnVzdGVkLWNlcnRpZmljYXRlLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBBZGRUcnVzdGVkQ2VydGlmaWNhdGVDb21wb25lbnQge1xuICBtYXhBbGxvd2VkRmlsZXMgPSAxO1xuICBBVVRPX1JFR0lTVFJBVElPTl9QT1BPVkVSID0gZ2V0dGV4dCgnQWxsIGRldmljZXMgd2l0aCBjcmVkZW50aWFscyBzaWduZWQgYnkgdGhpcyBjZXJ0aWZpY2F0ZSB3aWxsIGJlIGFibGUgdG8gY29tbXVuaWNhdGUgd2l0aCB0aGUgcGxhdGZvcm0gd2l0aG91dCBhIHByaW9yIHJlZ2lzdHJhdGlvbi4nKTtcbiAgdHJ1c3RlZENlcnRpZmljYXRlOiBQYXJ0aWFsPElUcnVzdGVkQ2VydGlmaWNhdGU+ID0ge1xuICAgIHN0YXR1czogJ0RJU0FCTEVEJ1xuICB9O1xuICBmaWxlSXNVcGxvYWRlZCA9IGZhbHNlO1xuXG4gIHJlc3VsdDogUHJvbWlzZTxhbnk+ID0gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgIHRoaXMuX3NhdmUgPSByZXNvbHZlO1xuICAgIHRoaXMuX2NhbmNlbCA9IHJlamVjdDtcbiAgfSk7XG4gIHByaXZhdGUgX3NhdmU7XG4gIHByaXZhdGUgX2NhbmNlbDtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIG1vZGFsOiBCc01vZGFsUmVmLFxuICAgIHByaXZhdGUgdHJ1c3RlZENlcnRpZmljYXRlU2VydmljZTogVHJ1c3RlZENlcnRpZmljYXRlU2VydmljZSxcbiAgICBwcml2YXRlIGFsZXJ0U2VydmljZTogQWxlcnRTZXJ2aWNlXG4gICkge31cblxuICB1cGxvYWRGaWxlKGRyb3BwZWQ6IERyb3BwZWRGaWxlW10pIHtcbiAgICB0aGlzLmZpbGVJc1VwbG9hZGVkID0gZmFsc2U7XG4gICAgaWYgKGRyb3BwZWQpIHtcbiAgICAgIGNvbnN0IHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7XG4gICAgICByZWFkZXIub25sb2FkID0gKCkgPT4ge1xuICAgICAgICB0aGlzLmZpbGVJc1VwbG9hZGVkID0gdHJ1ZTtcbiAgICAgICAgdGhpcy50cnVzdGVkQ2VydGlmaWNhdGUuY2VydEluUGVtRm9ybWF0ID0gcmVhZGVyLnJlc3VsdCBhcyBzdHJpbmc7XG4gICAgICB9O1xuICAgICAgcmVhZGVyLnJlYWRBc1RleHQoZHJvcHBlZFswXS5maWxlKTtcbiAgICB9XG4gIH1cblxuICBhc3luYyBzYXZlKCkge1xuICAgIHRyeSB7XG4gICAgICBhd2FpdCB0aGlzLnRydXN0ZWRDZXJ0aWZpY2F0ZVNlcnZpY2UuY3JlYXRlKHRoaXMudHJ1c3RlZENlcnRpZmljYXRlKTtcbiAgICAgIHRoaXMuYWxlcnRTZXJ2aWNlLnN1Y2Nlc3MoZ2V0dGV4dCgnQ2VydGlmaWNhdGUgc2F2ZWQuJykpO1xuICAgICAgdGhpcy5fc2F2ZSgpO1xuICAgIH0gY2F0Y2ggKGV4KSB7XG4gICAgICB0aGlzLmFsZXJ0U2VydmljZS5hZGRTZXJ2ZXJGYWlsdXJlKGV4KTtcbiAgICB9XG4gIH1cblxuICBjbG9zZSgpIHtcbiAgICB0aGlzLl9jYW5jZWwoKTtcbiAgICB0aGlzLm1vZGFsLmhpZGUoKTtcbiAgfVxufVxuIl19