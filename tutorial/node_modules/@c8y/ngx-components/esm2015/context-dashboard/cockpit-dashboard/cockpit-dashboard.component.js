import { Component, Inject, Optional } from '@angular/core';
import { AppStateService, gettext } from '@c8y/ngx-components';
import { COCKPIT_HOME_DASHBOARD_CONFIG, DEFAULT_COCKPIT_HOME_WIDGETS } from './cockpit-dashboard.model';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@c8y/ngx-components';
import * as ɵngcc2 from '../context-dashboard.component';
export class CockpitDashboardComponent {
    constructor(appState, homeDashboardConfig) {
        this.appState = appState;
        this.homeDashboardConfig = homeDashboardConfig;
        this.defaultWidgets = DEFAULT_COCKPIT_HOME_WIDGETS;
        this.dashboardName = 'home-cockpit1';
        this.pageTitle = gettext('Home');
        this.applyDashboardConfig(this.homeDashboardConfig);
    }
    applyDashboardConfig(config) {
        if (!config) {
            return;
        }
        if (config.dashboardName) {
            this.dashboardName = config.dashboardName;
        }
        if (config.defaultWidgets) {
            this.defaultWidgets = config.defaultWidgets;
        }
        if (config.userSpecific && this.appState.currentUser.value) {
            this.dashboardName = `${this.appState.currentUser.value.userName.replace(/\./g, '__')}_${this.dashboardName}`;
        }
        if (config.pageTitle) {
            this.pageTitle = config.pageTitle;
        }
    }
}
CockpitDashboardComponent.ɵfac = function CockpitDashboardComponent_Factory(t) { return new (t || CockpitDashboardComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.AppStateService), ɵngcc0.ɵɵdirectiveInject(COCKPIT_HOME_DASHBOARD_CONFIG, 8)); };
CockpitDashboardComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CockpitDashboardComponent, selectors: [["c8y-cockpit-dashboard"]], decls: 4, vars: 6, consts: [[3, "name", "defaultWidgets", "canDelete"]], template: function CockpitDashboardComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "c8y-title");
        ɵngcc0.ɵɵtext(1);
        ɵngcc0.ɵɵpipe(2, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(3, "c8y-context-dashboard", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 4, ctx.pageTitle), "\n");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("name", ctx.dashboardName)("defaultWidgets", ctx.defaultWidgets)("canDelete", false);
    } }, directives: [ɵngcc1.TitleComponent, ɵngcc2.ContextDashboardComponent], pipes: [ɵngcc1.C8yTranslatePipe], encapsulation: 2 });
CockpitDashboardComponent.ctorParameters = () => [
    { type: AppStateService },
    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [COCKPIT_HOME_DASHBOARD_CONFIG,] }] }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CockpitDashboardComponent, [{
        type: Component,
        args: [{
                selector: 'c8y-cockpit-dashboard',
                template: "<c8y-title>\n  {{ pageTitle | translate}}\n</c8y-title>\n\n<c8y-context-dashboard\n  [name]=\"dashboardName\"\n  [defaultWidgets]=\"defaultWidgets\"\n  [canDelete]=\"false\"\n></c8y-context-dashboard>\n"
            }]
    }], function () { return [{ type: ɵngcc1.AppStateService }, { type: undefined, decorators: [{
                type: Optional
            }, {
                type: Inject,
                args: [COCKPIT_HOME_DASHBOARD_CONFIG]
            }] }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29ja3BpdC1kYXNoYm9hcmQuY29tcG9uZW50LmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9jb250ZXh0LWRhc2hib2FyZC9jb2NrcGl0LWRhc2hib2FyZC9jb2NrcGl0LWRhc2hib2FyZC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzVELE9BQU8sRUFBRSxlQUFlLEVBQUUsT0FBTyxFQUFVLE1BQU0scUJBQXFCLENBQUM7QUFDdkUsT0FBTyxFQUVMLDZCQUE2QixFQUM3Qiw0QkFBNEIsRUFDN0IsTUFBTSwyQkFBMkIsQ0FBQzs7OztBQU1uQyxNQUFNLE9BQU8seUJBQXlCO0FBQ3RDLElBSUUsWUFDVSxRQUF5QixFQUd6QixtQkFBMkM7QUFDcEQsUUFKUyxhQUFRLEdBQVIsUUFBUSxDQUFpQjtBQUFDLFFBRzFCLHdCQUFtQixHQUFuQixtQkFBbUIsQ0FBd0I7QUFDdkQsUUFURSxtQkFBYyxHQUFHLDRCQUE0QixDQUFDO0FBQ2hELFFBQUUsa0JBQWEsR0FBRyxlQUFlLENBQUM7QUFDbEMsUUFBRSxjQUFTLEdBQUcsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0FBQzlCLFFBT0ksSUFBSSxDQUFDLG9CQUFvQixDQUFDLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDO0FBQ3hELElBQUUsQ0FBQztBQUNILElBQ1Usb0JBQW9CLENBQUMsTUFBOEI7QUFDN0QsUUFBSSxJQUFJLENBQUMsTUFBTSxFQUFFO0FBQ2pCLFlBQU0sT0FBTztBQUNiLFNBQUs7QUFDTCxRQUNJLElBQUksTUFBTSxDQUFDLGFBQWEsRUFBRTtBQUM5QixZQUFNLElBQUksQ0FBQyxhQUFhLEdBQUcsTUFBTSxDQUFDLGFBQWEsQ0FBQztBQUNoRCxTQUFLO0FBQ0wsUUFDSSxJQUFJLE1BQU0sQ0FBQyxjQUFjLEVBQUU7QUFDL0IsWUFBTSxJQUFJLENBQUMsY0FBYyxHQUFHLE1BQU0sQ0FBQyxjQUFjLENBQUM7QUFDbEQsU0FBSztBQUNMLFFBQ0ksSUFBSSxNQUFNLENBQUMsWUFBWSxJQUFJLElBQUksQ0FBQyxRQUFRLENBQUMsV0FBVyxDQUFDLEtBQUssRUFBRTtBQUNoRSxZQUFNLElBQUksQ0FBQyxhQUFhLEdBQUcsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLElBQ25GLElBQUksQ0FBQyxhQUNQLEVBQUUsQ0FBQztBQUNULFNBQUs7QUFDTCxRQUNJLElBQUksTUFBTSxDQUFDLFNBQVMsRUFBRTtBQUMxQixZQUFNLElBQUksQ0FBQyxTQUFTLEdBQUcsTUFBTSxDQUFDLFNBQVMsQ0FBQztBQUN4QyxTQUFLO0FBQ0wsSUFBRSxDQUFDO0FBQ0g7cURBekNDLFNBQVMsU0FBQyxrQkFDVCxRQUFRLEVBQUUsdUJBQXVCLGtCQUNqQzttSEFBaUQsY0FDbEQ7Ozs7Ozs7Ozs7O3NJQUNJO0FBQUM7QUFDVSxZQVpQLGVBQWU7QUFBSSw0Q0FrQnZCLFFBQVEsWUFDUixNQUFNLFNBQUMsNkJBQTZCO0FBQ25DOzs7Ozs7Ozs7Ozs7a0NBQUU7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5qZWN0LCBPcHRpb25hbCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQXBwU3RhdGVTZXJ2aWNlLCBnZXR0ZXh0LCBXaWRnZXQgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzJztcbmltcG9ydCB7XG4gIENvY2twaXREYXNoYm9hcmRDb25maWcsXG4gIENPQ0tQSVRfSE9NRV9EQVNIQk9BUkRfQ09ORklHLFxuICBERUZBVUxUX0NPQ0tQSVRfSE9NRV9XSURHRVRTXG59IGZyb20gJy4vY29ja3BpdC1kYXNoYm9hcmQubW9kZWwnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjOHktY29ja3BpdC1kYXNoYm9hcmQnLFxuICB0ZW1wbGF0ZVVybDogJy4vY29ja3BpdC1kYXNoYm9hcmQuY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIENvY2twaXREYXNoYm9hcmRDb21wb25lbnQge1xuICBkZWZhdWx0V2lkZ2V0cyA9IERFRkFVTFRfQ09DS1BJVF9IT01FX1dJREdFVFM7XG4gIGRhc2hib2FyZE5hbWUgPSAnaG9tZS1jb2NrcGl0MSc7XG4gIHBhZ2VUaXRsZSA9IGdldHRleHQoJ0hvbWUnKTtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIGFwcFN0YXRlOiBBcHBTdGF0ZVNlcnZpY2UsXG4gICAgQE9wdGlvbmFsKClcbiAgICBASW5qZWN0KENPQ0tQSVRfSE9NRV9EQVNIQk9BUkRfQ09ORklHKVxuICAgIHByaXZhdGUgaG9tZURhc2hib2FyZENvbmZpZzogQ29ja3BpdERhc2hib2FyZENvbmZpZ1xuICApIHtcbiAgICB0aGlzLmFwcGx5RGFzaGJvYXJkQ29uZmlnKHRoaXMuaG9tZURhc2hib2FyZENvbmZpZyk7XG4gIH1cblxuICBwcml2YXRlIGFwcGx5RGFzaGJvYXJkQ29uZmlnKGNvbmZpZzogQ29ja3BpdERhc2hib2FyZENvbmZpZykge1xuICAgIGlmICghY29uZmlnKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgaWYgKGNvbmZpZy5kYXNoYm9hcmROYW1lKSB7XG4gICAgICB0aGlzLmRhc2hib2FyZE5hbWUgPSBjb25maWcuZGFzaGJvYXJkTmFtZTtcbiAgICB9XG5cbiAgICBpZiAoY29uZmlnLmRlZmF1bHRXaWRnZXRzKSB7XG4gICAgICB0aGlzLmRlZmF1bHRXaWRnZXRzID0gY29uZmlnLmRlZmF1bHRXaWRnZXRzO1xuICAgIH1cblxuICAgIGlmIChjb25maWcudXNlclNwZWNpZmljICYmIHRoaXMuYXBwU3RhdGUuY3VycmVudFVzZXIudmFsdWUpIHtcbiAgICAgIHRoaXMuZGFzaGJvYXJkTmFtZSA9IGAke3RoaXMuYXBwU3RhdGUuY3VycmVudFVzZXIudmFsdWUudXNlck5hbWUucmVwbGFjZSgvXFwuL2csICdfXycpfV8ke1xuICAgICAgICB0aGlzLmRhc2hib2FyZE5hbWVcbiAgICAgIH1gO1xuICAgIH1cblxuICAgIGlmIChjb25maWcucGFnZVRpdGxlKSB7XG4gICAgICB0aGlzLnBhZ2VUaXRsZSA9IGNvbmZpZy5wYWdlVGl0bGU7XG4gICAgfVxuICB9XG59XG4iXX0=