import { NgModule } from '@angular/core';
import { ContextDashboardModule } from '../context-dashboard.module';
import { ContextDashboardComponent } from '../context-dashboard.component';
import { DeviceDashboardGuard } from '../device-dashboard.guard';
import { GroupDashboardGuard } from '../group-dashboard.guard';
import { ViewContext, HOOK_NAVIGATOR_NODES, gettext, CoreModule, HOOK_COMPONENTS, QuickLinkModule, DocsModule } from '@c8y/ngx-components';
import { CockpitDashboardComponent } from './cockpit-dashboard.component';
import { WelcomeToCockpit } from './welcome/welcome.component';
import { LegacyWelcomeComponent } from './legacy-welcome/legacy-welcome.component';
import { COCKPIT_HOME_DASHBOARD_CONFIG } from './cockpit-dashboard.model';
// import for the preview img to get into the build.
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../context-dashboard.module';
let previewImage = '';
try {
    // tslint:disable-next-line: no-var-requires
    previewImage = require('@c8y/style/img/welcome-widget-pr.png');
}
catch (ex) {
    // intended empty
}
const ɵ0 = [{ label: gettext('Home'), icon: 'home', priority: 10000, path: '/' }], ɵ1 = [
    {
        id: 'cockpit.welcome.widget',
        label: gettext('Welcome to Cockpit'),
        description: gettext('Displays a welcome message for Cockpit'),
        component: WelcomeToCockpit,
        previewImage,
        data: {
            settings: {
                noNewWidgets: false,
                widgetDefaults: {
                    _width: 12,
                    _height: 6
                },
                ng1: {
                    options: {
                        noDeviceTarget: true,
                        groupsSelectable: false
                    }
                }
            }
        }
    }
], ɵ2 = [
    {
        id: 'Cockpit Welcome',
        label: gettext('Welcome to Cockpit'),
        description: gettext('Displays a welcome message for Cockpit'),
        component: LegacyWelcomeComponent,
        data: {
            settings: {
                noNewWidgets: true,
                ng1: {
                    options: {
                        noDeviceTarget: true,
                        groupsSelectable: false
                    }
                }
            }
        }
    }
];
export class CockpitDashboardModule {
    static config(config = {}) {
        return {
            ngModule: CockpitDashboardModule,
            providers: [
                {
                    provide: COCKPIT_HOME_DASHBOARD_CONFIG,
                    useValue: config
                }
            ]
        };
    }
}
CockpitDashboardModule.ɵfac = function CockpitDashboardModule_Factory(t) { return new (t || CockpitDashboardModule)(); };
CockpitDashboardModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: CockpitDashboardModule });
CockpitDashboardModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [
        {
            provide: HOOK_NAVIGATOR_NODES,
            useValue: ɵ0,
            multi: true
        },
        {
            provide: HOOK_COMPONENTS,
            multi: true,
            useValue: ɵ1
        },
        {
            provide: HOOK_COMPONENTS,
            multi: true,
            useValue: ɵ2
        }
    ], imports: [[
            DocsModule,
            CoreModule,
            ContextDashboardModule.config({
                routes: [
                    {
                        path: 'dashboard/:dashboardId',
                        component: ContextDashboardComponent,
                        canActivate: [DeviceDashboardGuard],
                        context: ViewContext.Device
                    },
                    {
                        path: 'dashboard/:dashboardId',
                        component: ContextDashboardComponent,
                        canActivate: [GroupDashboardGuard],
                        context: ViewContext.Group
                    },
                    {
                        path: '',
                        component: CockpitDashboardComponent
                    }
                ]
            }),
            QuickLinkModule
        ]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CockpitDashboardModule, [{
        type: NgModule,
        args: [{
                entryComponents: [CockpitDashboardComponent, WelcomeToCockpit, LegacyWelcomeComponent],
                imports: [
                    DocsModule,
                    CoreModule,
                    ContextDashboardModule.config({
                        routes: [
                            {
                                path: 'dashboard/:dashboardId',
                                component: ContextDashboardComponent,
                                canActivate: [DeviceDashboardGuard],
                                context: ViewContext.Device
                            },
                            {
                                path: 'dashboard/:dashboardId',
                                component: ContextDashboardComponent,
                                canActivate: [GroupDashboardGuard],
                                context: ViewContext.Group
                            },
                            {
                                path: '',
                                component: CockpitDashboardComponent
                            }
                        ]
                    }),
                    QuickLinkModule
                ],
                declarations: [CockpitDashboardComponent, WelcomeToCockpit, LegacyWelcomeComponent],
                providers: [
                    {
                        provide: HOOK_NAVIGATOR_NODES,
                        useValue: ɵ0,
                        multi: true
                    },
                    {
                        provide: HOOK_COMPONENTS,
                        multi: true,
                        useValue: ɵ1
                    },
                    {
                        provide: HOOK_COMPONENTS,
                        multi: true,
                        useValue: ɵ2
                    }
                ]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CockpitDashboardModule, { declarations: function () { return [CockpitDashboardComponent, WelcomeToCockpit, LegacyWelcomeComponent]; }, imports: function () { return [DocsModule,
        CoreModule, ɵngcc1.ContextDashboardModule, QuickLinkModule]; } }); })();
export { ɵ0, ɵ1, ɵ2 };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29ja3BpdC1kYXNoYm9hcmQubW9kdWxlLmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9jb250ZXh0LWRhc2hib2FyZC9jb2NrcGl0LWRhc2hib2FyZC9jb2NrcGl0LWRhc2hib2FyZC5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUF1QyxRQUFRLEVBQVksTUFBTSxlQUFlLENBQUM7QUFDeEYsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFDckUsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDM0UsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDakUsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDL0QsT0FBTyxFQUNMLFdBQVcsRUFDWCxvQkFBb0IsRUFDcEIsT0FBTyxFQUNQLFVBQVUsRUFDVixlQUFlLEVBRWYsZUFBZSxFQUNmLFVBQVUsRUFDWCxNQUFNLHFCQUFxQixDQUFDO0FBQzdCLE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBRTFFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBQy9ELE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDJDQUEyQyxDQUFDO0FBQ25GLE9BQU8sRUFFTCw2QkFBNkIsRUFDOUIsTUFBTSwyQkFBMkIsQ0FBQztBQUVuQyxvREFBb0Q7OztBQUNwRCxJQUFJLFlBQVksR0FBRyxFQUFFLENBQUM7QUFDdEIsSUFBSTtBQUNKLElBQUUsNENBQTRDO0FBQzlDLElBQUUsWUFBWSxHQUFHLE9BQU8sQ0FBQyxzQ0FBc0MsQ0FBQyxDQUFDO0FBQ2pFLENBQUM7QUFBQyxPQUFPLEVBQUUsRUFBRTtBQUNiLElBQUUsaUJBQWlCO0FBQ25CLENBQUM7QUFDRCxXQWdDZ0IsQ0FBQyxFQUFFLEtBQUssRUFBRSxPQUFPLENBQUMsTUFBTSxD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VDtLQUNFLE9BQU8sRUFBRTtZQUFvQjs7SUFDN0IsUUFBUSxJQUF3RTtjQUNoRjtJQUFLLEVBQUUsSUFBSSxzQkFDWixzQkFDRCwwQkFDRSxPQUFPLEVBQUUsZUFBZTtZQUN4QixLQUFLLEVBQUUsSUFBSTs7UUFDWCxRQUFRLElBdUJ5QixzQkFDbEMsc0JBQ0QsMEJBQ0UsT0FBTyxFQUFFO1VBQWU7U0FDeEIsS0FBSyxFQUFFLElBQUk7Y0FDWCxRQUFRLElBa0J5QjtnQkFDbEMsa0JBQ0YsY0FDRjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztnRkFDSTtBQUFDO0FBQXVCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0aW9uVG9rZW4sIE1vZHVsZVdpdGhQcm92aWRlcnMsIE5nTW9kdWxlLCBQcm92aWRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29udGV4dERhc2hib2FyZE1vZHVsZSB9IGZyb20gJy4uL2NvbnRleHQtZGFzaGJvYXJkLm1vZHVsZSc7XG5pbXBvcnQgeyBDb250ZXh0RGFzaGJvYXJkQ29tcG9uZW50IH0gZnJvbSAnLi4vY29udGV4dC1kYXNoYm9hcmQuY29tcG9uZW50JztcbmltcG9ydCB7IERldmljZURhc2hib2FyZEd1YXJkIH0gZnJvbSAnLi4vZGV2aWNlLWRhc2hib2FyZC5ndWFyZCc7XG5pbXBvcnQgeyBHcm91cERhc2hib2FyZEd1YXJkIH0gZnJvbSAnLi4vZ3JvdXAtZGFzaGJvYXJkLmd1YXJkJztcbmltcG9ydCB7XG4gIFZpZXdDb250ZXh0LFxuICBIT09LX05BVklHQVRPUl9OT0RFUyxcbiAgZ2V0dGV4dCxcbiAgQ29yZU1vZHVsZSxcbiAgSE9PS19DT01QT05FTlRTLFxuICBEeW5hbWljQ29tcG9uZW50RGVmaW5pdGlvbixcbiAgUXVpY2tMaW5rTW9kdWxlLFxuICBEb2NzTW9kdWxlXG59IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMnO1xuaW1wb3J0IHsgQ29ja3BpdERhc2hib2FyZENvbXBvbmVudCB9IGZyb20gJy4vY29ja3BpdC1kYXNoYm9hcmQuY29tcG9uZW50JztcbmltcG9ydCB7IENvbnRleHRXaWRnZXRDb25maWcgfSBmcm9tICcuLi9jb250ZXh0LWRhc2hib2FyZC5tb2RlbCc7XG5pbXBvcnQgeyBXZWxjb21lVG9Db2NrcGl0IH0gZnJvbSAnLi93ZWxjb21lL3dlbGNvbWUuY29tcG9uZW50JztcbmltcG9ydCB7IExlZ2FjeVdlbGNvbWVDb21wb25lbnQgfSBmcm9tICcuL2xlZ2FjeS13ZWxjb21lL2xlZ2FjeS13ZWxjb21lLmNvbXBvbmVudCc7XG5pbXBvcnQge1xuICBDb2NrcGl0RGFzaGJvYXJkQ29uZmlnLFxuICBDT0NLUElUX0hPTUVfREFTSEJPQVJEX0NPTkZJR1xufSBmcm9tICcuL2NvY2twaXQtZGFzaGJvYXJkLm1vZGVsJztcblxuLy8gaW1wb3J0IGZvciB0aGUgcHJldmlldyBpbWcgdG8gZ2V0IGludG8gdGhlIGJ1aWxkLlxubGV0IHByZXZpZXdJbWFnZSA9ICcnO1xudHJ5IHtcbiAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOiBuby12YXItcmVxdWlyZXNcbiAgcHJldmlld0ltYWdlID0gcmVxdWlyZSgnQGM4eS9zdHlsZS9pbWcvd2VsY29tZS13aWRnZXQtcHIucG5nJyk7XG59IGNhdGNoIChleCkge1xuICAvLyBpbnRlbmRlZCBlbXB0eVxufVxuXG5ATmdNb2R1bGUoe1xuICBlbnRyeUNvbXBvbmVudHM6IFtDb2NrcGl0RGFzaGJvYXJkQ29tcG9uZW50LCBXZWxjb21lVG9Db2NrcGl0LCBMZWdhY3lXZWxjb21lQ29tcG9uZW50XSxcbiAgaW1wb3J0czogW1xuICAgIERvY3NNb2R1bGUsXG4gICAgQ29yZU1vZHVsZSxcbiAgICBDb250ZXh0RGFzaGJvYXJkTW9kdWxlLmNvbmZpZyh7XG4gICAgICByb3V0ZXM6IFtcbiAgICAgICAge1xuICAgICAgICAgIHBhdGg6ICdkYXNoYm9hcmQvOmRhc2hib2FyZElkJyxcbiAgICAgICAgICBjb21wb25lbnQ6IENvbnRleHREYXNoYm9hcmRDb21wb25lbnQsXG4gICAgICAgICAgY2FuQWN0aXZhdGU6IFtEZXZpY2VEYXNoYm9hcmRHdWFyZF0sXG4gICAgICAgICAgY29udGV4dDogVmlld0NvbnRleHQuRGV2aWNlXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBwYXRoOiAnZGFzaGJvYXJkLzpkYXNoYm9hcmRJZCcsXG4gICAgICAgICAgY29tcG9uZW50OiBDb250ZXh0RGFzaGJvYXJkQ29tcG9uZW50LFxuICAgICAgICAgIGNhbkFjdGl2YXRlOiBbR3JvdXBEYXNoYm9hcmRHdWFyZF0sXG4gICAgICAgICAgY29udGV4dDogVmlld0NvbnRleHQuR3JvdXBcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIHBhdGg6ICcnLFxuICAgICAgICAgIGNvbXBvbmVudDogQ29ja3BpdERhc2hib2FyZENvbXBvbmVudFxuICAgICAgICB9XG4gICAgICBdXG4gICAgfSksXG4gICAgUXVpY2tMaW5rTW9kdWxlXG4gIF0sXG4gIGRlY2xhcmF0aW9uczogW0NvY2twaXREYXNoYm9hcmRDb21wb25lbnQsIFdlbGNvbWVUb0NvY2twaXQsIExlZ2FjeVdlbGNvbWVDb21wb25lbnRdLFxuICBwcm92aWRlcnM6IFtcbiAgICB7XG4gICAgICBwcm92aWRlOiBIT09LX05BVklHQVRPUl9OT0RFUyxcbiAgICAgIHVzZVZhbHVlOiBbeyBsYWJlbDogZ2V0dGV4dCgnSG9tZScpLCBpY29uOiAnaG9tZScsIHByaW9yaXR5OiAxMDAwMCwgcGF0aDogJy8nIH1dLFxuICAgICAgbXVsdGk6IHRydWVcbiAgICB9LFxuICAgIHtcbiAgICAgIHByb3ZpZGU6IEhPT0tfQ09NUE9ORU5UUyxcbiAgICAgIG11bHRpOiB0cnVlLFxuICAgICAgdXNlVmFsdWU6IFtcbiAgICAgICAge1xuICAgICAgICAgIGlkOiAnY29ja3BpdC53ZWxjb21lLndpZGdldCcsXG4gICAgICAgICAgbGFiZWw6IGdldHRleHQoJ1dlbGNvbWUgdG8gQ29ja3BpdCcpLFxuICAgICAgICAgIGRlc2NyaXB0aW9uOiBnZXR0ZXh0KCdEaXNwbGF5cyBhIHdlbGNvbWUgbWVzc2FnZSBmb3IgQ29ja3BpdCcpLFxuICAgICAgICAgIGNvbXBvbmVudDogV2VsY29tZVRvQ29ja3BpdCxcbiAgICAgICAgICBwcmV2aWV3SW1hZ2UsXG4gICAgICAgICAgZGF0YToge1xuICAgICAgICAgICAgc2V0dGluZ3M6IHtcbiAgICAgICAgICAgICAgbm9OZXdXaWRnZXRzOiBmYWxzZSxcbiAgICAgICAgICAgICAgd2lkZ2V0RGVmYXVsdHM6IHtcbiAgICAgICAgICAgICAgICBfd2lkdGg6IDEyLFxuICAgICAgICAgICAgICAgIF9oZWlnaHQ6IDZcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgbmcxOiB7XG4gICAgICAgICAgICAgICAgb3B0aW9uczoge1xuICAgICAgICAgICAgICAgICAgbm9EZXZpY2VUYXJnZXQ6IHRydWUsXG4gICAgICAgICAgICAgICAgICBncm91cHNTZWxlY3RhYmxlOiBmYWxzZVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0gYXMgQ29udGV4dFdpZGdldENvbmZpZ1xuICAgICAgICB9XG4gICAgICBdIGFzIER5bmFtaWNDb21wb25lbnREZWZpbml0aW9uW11cbiAgICB9LFxuICAgIHtcbiAgICAgIHByb3ZpZGU6IEhPT0tfQ09NUE9ORU5UUyxcbiAgICAgIG11bHRpOiB0cnVlLFxuICAgICAgdXNlVmFsdWU6IFtcbiAgICAgICAge1xuICAgICAgICAgIGlkOiAnQ29ja3BpdCBXZWxjb21lJyxcbiAgICAgICAgICBsYWJlbDogZ2V0dGV4dCgnV2VsY29tZSB0byBDb2NrcGl0JyksXG4gICAgICAgICAgZGVzY3JpcHRpb246IGdldHRleHQoJ0Rpc3BsYXlzIGEgd2VsY29tZSBtZXNzYWdlIGZvciBDb2NrcGl0JyksXG4gICAgICAgICAgY29tcG9uZW50OiBMZWdhY3lXZWxjb21lQ29tcG9uZW50LFxuICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgIHNldHRpbmdzOiB7XG4gICAgICAgICAgICAgIG5vTmV3V2lkZ2V0czogdHJ1ZSxcbiAgICAgICAgICAgICAgbmcxOiB7XG4gICAgICAgICAgICAgICAgb3B0aW9uczoge1xuICAgICAgICAgICAgICAgICAgbm9EZXZpY2VUYXJnZXQ6IHRydWUsXG4gICAgICAgICAgICAgICAgICBncm91cHNTZWxlY3RhYmxlOiBmYWxzZVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0gYXMgQ29udGV4dFdpZGdldENvbmZpZ1xuICAgICAgICB9XG4gICAgICBdIGFzIER5bmFtaWNDb21wb25lbnREZWZpbml0aW9uW11cbiAgICB9XG4gIF1cbn0pXG5leHBvcnQgY2xhc3MgQ29ja3BpdERhc2hib2FyZE1vZHVsZSB7XG4gIHN0YXRpYyBjb25maWcoY29uZmlnOiBDb2NrcGl0RGFzaGJvYXJkQ29uZmlnID0ge30pOiBNb2R1bGVXaXRoUHJvdmlkZXJzPENvY2twaXREYXNoYm9hcmRNb2R1bGU+IHtcbiAgICByZXR1cm4ge1xuICAgICAgbmdNb2R1bGU6IENvY2twaXREYXNoYm9hcmRNb2R1bGUsXG4gICAgICBwcm92aWRlcnM6IFtcbiAgICAgICAge1xuICAgICAgICAgIHByb3ZpZGU6IENPQ0tQSVRfSE9NRV9EQVNIQk9BUkRfQ09ORklHLFxuICAgICAgICAgIHVzZVZhbHVlOiBjb25maWdcbiAgICAgICAgfVxuICAgICAgXVxuICAgIH07XG4gIH1cbn1cbiJdfQ==