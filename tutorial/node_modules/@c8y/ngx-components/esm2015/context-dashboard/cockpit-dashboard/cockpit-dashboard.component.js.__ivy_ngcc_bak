import { Component, Inject, Optional } from '@angular/core';
import { AppStateService, gettext } from '@c8y/ngx-components';
import { COCKPIT_HOME_DASHBOARD_CONFIG, DEFAULT_COCKPIT_HOME_WIDGETS } from './cockpit-dashboard.model';
export class CockpitDashboardComponent {
    constructor(appState, homeDashboardConfig) {
        this.appState = appState;
        this.homeDashboardConfig = homeDashboardConfig;
        this.defaultWidgets = DEFAULT_COCKPIT_HOME_WIDGETS;
        this.dashboardName = 'home-cockpit1';
        this.pageTitle = gettext('Home');
        this.applyDashboardConfig(this.homeDashboardConfig);
    }
    applyDashboardConfig(config) {
        if (!config) {
            return;
        }
        if (config.dashboardName) {
            this.dashboardName = config.dashboardName;
        }
        if (config.defaultWidgets) {
            this.defaultWidgets = config.defaultWidgets;
        }
        if (config.userSpecific && this.appState.currentUser.value) {
            this.dashboardName = `${this.appState.currentUser.value.userName.replace(/\./g, '__')}_${this.dashboardName}`;
        }
        if (config.pageTitle) {
            this.pageTitle = config.pageTitle;
        }
    }
}
CockpitDashboardComponent.decorators = [
    { type: Component, args: [{
                selector: 'c8y-cockpit-dashboard',
                template: "<c8y-title>\n  {{ pageTitle | translate}}\n</c8y-title>\n\n<c8y-context-dashboard\n  [name]=\"dashboardName\"\n  [defaultWidgets]=\"defaultWidgets\"\n  [canDelete]=\"false\"\n></c8y-context-dashboard>\n"
            },] }
];
CockpitDashboardComponent.ctorParameters = () => [
    { type: AppStateService },
    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [COCKPIT_HOME_DASHBOARD_CONFIG,] }] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29ja3BpdC1kYXNoYm9hcmQuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vY29udGV4dC1kYXNoYm9hcmQvY29ja3BpdC1kYXNoYm9hcmQvY29ja3BpdC1kYXNoYm9hcmQuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM1RCxPQUFPLEVBQUUsZUFBZSxFQUFFLE9BQU8sRUFBVSxNQUFNLHFCQUFxQixDQUFDO0FBQ3ZFLE9BQU8sRUFFTCw2QkFBNkIsRUFDN0IsNEJBQTRCLEVBQzdCLE1BQU0sMkJBQTJCLENBQUM7QUFNbkMsTUFBTSxPQUFPLHlCQUF5QjtJQUtwQyxZQUNVLFFBQXlCLEVBR3pCLG1CQUEyQztRQUgzQyxhQUFRLEdBQVIsUUFBUSxDQUFpQjtRQUd6Qix3QkFBbUIsR0FBbkIsbUJBQW1CLENBQXdCO1FBUnJELG1CQUFjLEdBQUcsNEJBQTRCLENBQUM7UUFDOUMsa0JBQWEsR0FBRyxlQUFlLENBQUM7UUFDaEMsY0FBUyxHQUFHLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQztRQVExQixJQUFJLENBQUMsb0JBQW9CLENBQUMsSUFBSSxDQUFDLG1CQUFtQixDQUFDLENBQUM7SUFDdEQsQ0FBQztJQUVPLG9CQUFvQixDQUFDLE1BQThCO1FBQ3pELElBQUksQ0FBQyxNQUFNLEVBQUU7WUFDWCxPQUFPO1NBQ1I7UUFFRCxJQUFJLE1BQU0sQ0FBQyxhQUFhLEVBQUU7WUFDeEIsSUFBSSxDQUFDLGFBQWEsR0FBRyxNQUFNLENBQUMsYUFBYSxDQUFDO1NBQzNDO1FBRUQsSUFBSSxNQUFNLENBQUMsY0FBYyxFQUFFO1lBQ3pCLElBQUksQ0FBQyxjQUFjLEdBQUcsTUFBTSxDQUFDLGNBQWMsQ0FBQztTQUM3QztRQUVELElBQUksTUFBTSxDQUFDLFlBQVksSUFBSSxJQUFJLENBQUMsUUFBUSxDQUFDLFdBQVcsQ0FBQyxLQUFLLEVBQUU7WUFDMUQsSUFBSSxDQUFDLGFBQWEsR0FBRyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsSUFDbkYsSUFBSSxDQUFDLGFBQ1AsRUFBRSxDQUFDO1NBQ0o7UUFFRCxJQUFJLE1BQU0sQ0FBQyxTQUFTLEVBQUU7WUFDcEIsSUFBSSxDQUFDLFNBQVMsR0FBRyxNQUFNLENBQUMsU0FBUyxDQUFDO1NBQ25DO0lBQ0gsQ0FBQzs7O1lBeENGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsdUJBQXVCO2dCQUNqQyxzTkFBaUQ7YUFDbEQ7OztZQVZRLGVBQWU7NENBa0JuQixRQUFRLFlBQ1IsTUFBTSxTQUFDLDZCQUE2QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5qZWN0LCBPcHRpb25hbCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQXBwU3RhdGVTZXJ2aWNlLCBnZXR0ZXh0LCBXaWRnZXQgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzJztcbmltcG9ydCB7XG4gIENvY2twaXREYXNoYm9hcmRDb25maWcsXG4gIENPQ0tQSVRfSE9NRV9EQVNIQk9BUkRfQ09ORklHLFxuICBERUZBVUxUX0NPQ0tQSVRfSE9NRV9XSURHRVRTXG59IGZyb20gJy4vY29ja3BpdC1kYXNoYm9hcmQubW9kZWwnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjOHktY29ja3BpdC1kYXNoYm9hcmQnLFxuICB0ZW1wbGF0ZVVybDogJy4vY29ja3BpdC1kYXNoYm9hcmQuY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIENvY2twaXREYXNoYm9hcmRDb21wb25lbnQge1xuICBkZWZhdWx0V2lkZ2V0cyA9IERFRkFVTFRfQ09DS1BJVF9IT01FX1dJREdFVFM7XG4gIGRhc2hib2FyZE5hbWUgPSAnaG9tZS1jb2NrcGl0MSc7XG4gIHBhZ2VUaXRsZSA9IGdldHRleHQoJ0hvbWUnKTtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIGFwcFN0YXRlOiBBcHBTdGF0ZVNlcnZpY2UsXG4gICAgQE9wdGlvbmFsKClcbiAgICBASW5qZWN0KENPQ0tQSVRfSE9NRV9EQVNIQk9BUkRfQ09ORklHKVxuICAgIHByaXZhdGUgaG9tZURhc2hib2FyZENvbmZpZzogQ29ja3BpdERhc2hib2FyZENvbmZpZ1xuICApIHtcbiAgICB0aGlzLmFwcGx5RGFzaGJvYXJkQ29uZmlnKHRoaXMuaG9tZURhc2hib2FyZENvbmZpZyk7XG4gIH1cblxuICBwcml2YXRlIGFwcGx5RGFzaGJvYXJkQ29uZmlnKGNvbmZpZzogQ29ja3BpdERhc2hib2FyZENvbmZpZykge1xuICAgIGlmICghY29uZmlnKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgaWYgKGNvbmZpZy5kYXNoYm9hcmROYW1lKSB7XG4gICAgICB0aGlzLmRhc2hib2FyZE5hbWUgPSBjb25maWcuZGFzaGJvYXJkTmFtZTtcbiAgICB9XG5cbiAgICBpZiAoY29uZmlnLmRlZmF1bHRXaWRnZXRzKSB7XG4gICAgICB0aGlzLmRlZmF1bHRXaWRnZXRzID0gY29uZmlnLmRlZmF1bHRXaWRnZXRzO1xuICAgIH1cblxuICAgIGlmIChjb25maWcudXNlclNwZWNpZmljICYmIHRoaXMuYXBwU3RhdGUuY3VycmVudFVzZXIudmFsdWUpIHtcbiAgICAgIHRoaXMuZGFzaGJvYXJkTmFtZSA9IGAke3RoaXMuYXBwU3RhdGUuY3VycmVudFVzZXIudmFsdWUudXNlck5hbWUucmVwbGFjZSgvXFwuL2csICdfXycpfV8ke1xuICAgICAgICB0aGlzLmRhc2hib2FyZE5hbWVcbiAgICAgIH1gO1xuICAgIH1cblxuICAgIGlmIChjb25maWcucGFnZVRpdGxlKSB7XG4gICAgICB0aGlzLnBhZ2VUaXRsZSA9IGNvbmZpZy5wYWdlVGl0bGU7XG4gICAgfVxuICB9XG59XG4iXX0=