import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { CoreModule, HOOK_ROUTE, ViewContext, gettext } from '@c8y/ngx-components';
import { ContextDashboardModule } from './context-dashboard.module';
import { DeviceInfoDashboardComponent } from './device-info-dashboard/device-info-dashboard.component';
import * as ɵngcc0 from '@angular/core';
const ɵ0 = [
    {
        context: ViewContext.Device,
        path: 'device-info',
        component: DeviceInfoDashboardComponent,
        label: gettext('Info'),
        priority: 10000,
        icon: 'asterisk'
    }
];
export class DeviceInfoDashboardModule {
}
DeviceInfoDashboardModule.ɵfac = function DeviceInfoDashboardModule_Factory(t) { return new (t || DeviceInfoDashboardModule)(); };
DeviceInfoDashboardModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: DeviceInfoDashboardModule });
DeviceInfoDashboardModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [
        {
            provide: HOOK_ROUTE,
            useValue: ɵ0,
            multi: true
        }
    ], imports: [[CommonModule, CoreModule, ContextDashboardModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DeviceInfoDashboardModule, [{
        type: NgModule,
        args: [{
                declarations: [DeviceInfoDashboardComponent],
                imports: [CommonModule, CoreModule, ContextDashboardModule],
                exports: [],
                entryComponents: [DeviceInfoDashboardComponent],
                providers: [
                    {
                        provide: HOOK_ROUTE,
                        useValue: ɵ0,
                        multi: true
                    }
                ]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DeviceInfoDashboardModule, { declarations: function () { return [DeviceInfoDashboardComponent]; }, imports: function () { return [CommonModule, CoreModule, ContextDashboardModule]; } }); })();
export { ɵ0 };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGV2aWNlLWluZm8tZGFzaGJvYXJkLm1vZHVsZS5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vY29udGV4dC1kYXNoYm9hcmQvZGV2aWNlLWluZm8tZGFzaGJvYXJkLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsVUFBVSxFQUFFLFVBQVUsRUFBRSxXQUFXLEVBQUUsT0FBTyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDbkYsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDcEUsT0FBTyxFQUFFLDRCQUE0QixFQUFFLE1BQU0seURBQXlELENBQUM7O0FBQ3ZHLFdBU2dCO0FBQ2hCLElBQVE7QUFDUixRQUFVLE9BQU8sRUFBRSxXQUFXLENBQUMsTUFBTTtBQUNyQyxRQUFVLElBQUksRUFBRSxhQUFhO0FBQzdCLFFBQVUsU0FBUyxFQUFFLDRCQUE0QjtBQUNqRCxRQUFVLEtBQUssRUFBRSxPQUFPLENBQUMsTUFBTSxDQUFDO0FBQ2hDLFFBQVUsUUFBUSxFQUFFLEtBQUs7QUFDekIsUUFBVSxJQUFJLEVBQUUsVUFBVTtBQUMxQixLQUFTO0FBQ1QsQ0FBTztBQUtQLE1BQU0sT0FBTyx5QkFBeUI7QUFBRztxREF0QnhDLFFBQVEsU0FBQyxrQkFDUixZQUFZLEVBQUUsQ0FBQztBQUE0QixDQUFDLGtCQUM1QyxPQUFPLEVBQUUsQ0FBQyxZQUFZLEVBQUUsVUFBVSxFQUFFLHNCQUFzQixDQUFDLGtCQUMzRCxPQUFPLEVBQUUsRUFBRTtnQkFDWCxlQUFlLEVBQUUsQ0FBQyw0QkFBNEIsQ0FBQyxrQkFDL0M7SUFBUyxFQUFFO2tCQUNUO1dBQ0UsT0FBTyxFQUFFO0lBQVU7TUFDbkI7SUFBUSxJQVNQLDBCQUNELEtBQUssRUFBRSxJQUFJLHNCQUNaO1lBQ0YsY0FDRjs7Ozs7Ozs7Ozs7Ozs7Ozs0UkFDSTtBQUFDO0FBQWUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvcmVNb2R1bGUsIEhPT0tfUk9VVEUsIFZpZXdDb250ZXh0LCBnZXR0ZXh0IH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cyc7XG5pbXBvcnQgeyBDb250ZXh0RGFzaGJvYXJkTW9kdWxlIH0gZnJvbSAnLi9jb250ZXh0LWRhc2hib2FyZC5tb2R1bGUnO1xuaW1wb3J0IHsgRGV2aWNlSW5mb0Rhc2hib2FyZENvbXBvbmVudCB9IGZyb20gJy4vZGV2aWNlLWluZm8tZGFzaGJvYXJkL2RldmljZS1pbmZvLWRhc2hib2FyZC5jb21wb25lbnQnO1xuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtEZXZpY2VJbmZvRGFzaGJvYXJkQ29tcG9uZW50XSxcbiAgaW1wb3J0czogW0NvbW1vbk1vZHVsZSwgQ29yZU1vZHVsZSwgQ29udGV4dERhc2hib2FyZE1vZHVsZV0sXG4gIGV4cG9ydHM6IFtdLFxuICBlbnRyeUNvbXBvbmVudHM6IFtEZXZpY2VJbmZvRGFzaGJvYXJkQ29tcG9uZW50XSxcbiAgcHJvdmlkZXJzOiBbXG4gICAge1xuICAgICAgcHJvdmlkZTogSE9PS19ST1VURSxcbiAgICAgIHVzZVZhbHVlOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBjb250ZXh0OiBWaWV3Q29udGV4dC5EZXZpY2UsXG4gICAgICAgICAgcGF0aDogJ2RldmljZS1pbmZvJyxcbiAgICAgICAgICBjb21wb25lbnQ6IERldmljZUluZm9EYXNoYm9hcmRDb21wb25lbnQsXG4gICAgICAgICAgbGFiZWw6IGdldHRleHQoJ0luZm8nKSxcbiAgICAgICAgICBwcmlvcml0eTogMTAwMDAsXG4gICAgICAgICAgaWNvbjogJ2FzdGVyaXNrJ1xuICAgICAgICB9XG4gICAgICBdLFxuICAgICAgbXVsdGk6IHRydWVcbiAgICB9XG4gIF1cbn0pXG5leHBvcnQgY2xhc3MgRGV2aWNlSW5mb0Rhc2hib2FyZE1vZHVsZSB7fVxuIl19