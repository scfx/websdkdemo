import { InjectionToken } from '@angular/core';
/**
 * Time the hook waits until it emits an undefined value.
 * Used for not defined widgets -> by default after 5s we
 * show an error that the widget could not be loaded.
 */
export const RESOLVING_COMPONENT_WAIT_TIME = new InjectionToken('RESOLVING_COMPONENT_WAIT_TIME');
/**
 * A hook to add dynamic components to the UI (e.g. widgets).
 */
export const HOOK_COMPONENTS = new InjectionToken('Hook Dynamic Component');
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHluYW1pYy1jb21wb25lbnQubW9kZWwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9jb3JlL2R5bmFtaWMtY29tcG9uZW50L2R5bmFtaWMtY29tcG9uZW50Lm1vZGVsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBYSxjQUFjLEVBQVEsTUFBTSxlQUFlLENBQUM7QUFJaEU7Ozs7R0FJRztBQUNILE1BQU0sQ0FBQyxNQUFNLDZCQUE2QixHQUFHLElBQUksY0FBYyxDQUM3RCwrQkFBK0IsQ0FDaEMsQ0FBQztBQXlCRjs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLGVBQWUsR0FBRyxJQUFJLGNBQWMsQ0FDL0Msd0JBQXdCLENBQ3pCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEluamVjdGlvblRva2VuLCBUeXBlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBFeHRlbnNpb25GYWN0b3J5IH0gZnJvbSAnLi4vY29tbW9uL2V4dGVuc2lvbi1ob29rcyc7XG5cbi8qKlxuICogVGltZSB0aGUgaG9vayB3YWl0cyB1bnRpbCBpdCBlbWl0cyBhbiB1bmRlZmluZWQgdmFsdWUuXG4gKiBVc2VkIGZvciBub3QgZGVmaW5lZCB3aWRnZXRzIC0+IGJ5IGRlZmF1bHQgYWZ0ZXIgNXMgd2VcbiAqIHNob3cgYW4gZXJyb3IgdGhhdCB0aGUgd2lkZ2V0IGNvdWxkIG5vdCBiZSBsb2FkZWQuXG4gKi9cbmV4cG9ydCBjb25zdCBSRVNPTFZJTkdfQ09NUE9ORU5UX1dBSVRfVElNRSA9IG5ldyBJbmplY3Rpb25Ub2tlbjxudW1iZXI+KFxuICAnUkVTT0xWSU5HX0NPTVBPTkVOVF9XQUlUX1RJTUUnXG4pO1xuXG4vKipcbiAqIEFuIGV4dGVuc2lvbiBIT09LIGNhbiB1c2UgZWl0aGVyIGEgcHVyZSB2YWx1ZTpcbiAqIGBgYHR5cGVzY3JpcHRcbiAqICB7IHByb3ZpZGU6IEhPT0tfWCwgdXNlVmFsdWU6IHsgLi4uaG9va1ZhbHVlIH0sIG11bHRpOiB0cnVlIH1cbiAqIGBgYFxuICpcbiAqIE9yIGFuIGFycmF5IHRvIGRpcmVjdGx5IHJlZ2lzdGVyIG11bHRpcGxlOlxuICogYGBgdHlwZXNjcmlwdFxuICogIHsgcHJvdmlkZTogSE9PS19YLCB1c2VWYWx1ZTogW3sgLi4uaG9va1ZhbHVlcyB9XSwgbXVsdGk6IHRydWUgfVxuICogYGBgXG4gKlxuICogT3IgYW4gRXh0ZW5zaW9uRmFjdG9yeSB3aGljaCBhbGxvd3MgdG8gZGVmaW5lIGEgZ2V0KCkgZnVuY3Rpb24uIFRoaXMgZnVuY3Rpb25cbiAqIGdldHMgY2FsbGVkIG9uIGVhY2ggbmF2aWdhdGlvbiB3aXRoIHRoZSBjdXJyZW50IHJvdXRlIGFuZCBjYW4gcmV0dXJuIHZhbHVlc1xuICogYXN5bmMgKG9ic2VydmFibGUgb3IgcHJvbWlzZSkuXG4gKiBgYGB0eXBlc2NyaXB0XG4gKiAgeyBwcm92aWRlOiBIT09LX1gsIHVzZUZhY3Rvcnk6IHsgZ2V0OiAocm91dGUpID0+IGRvU29tZXRoaW5nQXN5bmMocm91dGUpIH0sIG11bHRpOiB0cnVlIH1cbiAqIGBgYFxuICovXG5leHBvcnQgdHlwZSBEeW5hbWljQ29tcG9uZW50RXh0ZW5zaW9uID1cbiAgfCBEeW5hbWljQ29tcG9uZW50RGVmaW5pdGlvblxuICB8IER5bmFtaWNDb21wb25lbnREZWZpbml0aW9uW11cbiAgfCBFeHRlbnNpb25GYWN0b3J5PER5bmFtaWNDb21wb25lbnREZWZpbml0aW9uPjtcblxuLyoqXG4gKiBBIGhvb2sgdG8gYWRkIGR5bmFtaWMgY29tcG9uZW50cyB0byB0aGUgVUkgKGUuZy4gd2lkZ2V0cykuXG4gKi9cbmV4cG9ydCBjb25zdCBIT09LX0NPTVBPTkVOVFMgPSBuZXcgSW5qZWN0aW9uVG9rZW48RHluYW1pY0NvbXBvbmVudEV4dGVuc2lvbltdPihcbiAgJ0hvb2sgRHluYW1pYyBDb21wb25lbnQnXG4pO1xuXG4vKipcbiAqIEEgZHluYW1pYyBjb21wb25lbnQgY2FuIGJlIGRlZmluZWQgaW4gYSB0aGUgSE9PS19DT01QT05FTlRTIHRvIGRpc3BsYXkgYW55IGtpbmRcbiAqIG9mIGNvbXBvbmVudCBkeW5hbWljYWxseSBqdXN0IGJ5IHJlZmVyZW5jaW5nIGl0J3MgaWQuIFRoZSBtb3N0IGNvbW1vbiB1c2UgY2FzZSBpcyBvbiBkYXNoYm9hcmRzLFxuICogd2hlcmUgdGhlIGBjb25maWdDb21wb25lbnRgIGlzIHVzZWQgdG8gZGVmaW5lIHdoYXQgaXMgZGlzcGxheWVkIG9uIHRoZSBgY29tcG9uZW50YFxuICogb24gdGhlIGRhc2hib2FyZC5cbiAqXG4gKiBUbyB1c2UgdGhlIGNvbXBvbmVudCB5b3UgY2FuIHVzZSB0aGUgYzh5LWR5bmFtaWMtY29tcG9uZW50LlxuICpcbiAqIGBgYFxuICogICA8Yzh5LWR5bmFtaWMtY29tcG9uZW50XG4gKiAgICAgY29tcG9uZW50SWQ9XCJhbmd1bGFyLndpZGdldC5kZW1vXCJcbiAqICAgICBbY29uZmlnXT1cInsgdGV4dDogJ0hlbGxvIHdvcmxkJyB9XCJcbiAqICAgICBbbW9kZV09XCJlZGl0Q29tcG9uZW50ID8gJ2NvbmZpZycgOiAnY29tcG9uZW50J1wiXG4gKiAgID48L2M4eS1keW5hbWljLWNvbXBvbmVudD5cbiAqICAgYGBgXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgRHluYW1pY0NvbXBvbmVudERlZmluaXRpb24ge1xuICAvKipcbiAgICogVW5pcXVlIHNlcmlhbGl6YWJsZSBpZFxuICAgKi9cbiAgaWQ6IHN0cmluZztcbiAgLyoqXG4gICAqIFRoZSBjb21wb25lbnQgd2hpY2ggaXMgdXNlZCB3aGVuIHRoZSBjb21wb25lbnQgc2hvdWxkIGJlIGRpc3BsYXllZCAoZS5nLiBvbiBhIGRhc2hib2FyZClcbiAgICovXG4gIGNvbXBvbmVudDogVHlwZTxDb21wb25lbnQ+O1xuICAvKipcbiAgICogVGhlIGNvbmZpZ3VyYXRpb24gY29tcG9uZW50IHVzZWQgd2hlbiBhIHdpZGdldCBpcyBhZGRlZCBvciBlZGl0ZWQuXG4gICAqL1xuICBjb25maWdDb21wb25lbnQ/OiBUeXBlPENvbXBvbmVudD47XG4gIC8qKlxuICAgKiBUaGUgbGFiZWwgc2hvd24gZm9yIHRoaXMgZHluYW1pYyBjb21wb25lbnQgb24gYWRkIHdpZGdldHNcbiAgICovXG4gIGxhYmVsOiBzdHJpbmc7XG4gIC8qKlxuICAgKiBUaGUgZGVzY3JpcHRpb24gc2hvd24gb24gYWRkIHdpZGdldFxuICAgKi9cbiAgZGVzY3JpcHRpb246IHN0cmluZztcbiAgLyoqXG4gICAqIEFkZCBhbnkgcmFuZG9tIGRhdGEsIHNwZWNpYWxseSB0byBhbmd1bGFyLmpzIGRhc2hib2FyZHMuXG4gICAqIFNob3VsZCBiZSBzZWFyaWx6YWJsZWQgdG8gYWxsb3cgdG8gc2F2ZSBpdCB0byB0aGUgQVBJLlxuICAgKi9cbiAgZGF0YT86IGFueTtcbiAgLyoqXG4gICAqIEFuIHVybCB0byBhbiBwcmV2aWV3IGltYWdlLlxuICAgKi9cbiAgcHJldmlld0ltYWdlPzogc3RyaW5nO1xufVxuXG4vKipcbiAqIFVzZSB0aGlzIGludGVyZmFjZSBvbiBhbnkgY29tcG9uZW50IHRvIGRlZmluZSB0aGUgaW50ZXJjaGFuZ2UgYmV0d2VlblxuICogY29uZmlnIGFuZCBkaXNwbGF5IGNvbXBvbmVudC5cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBEeW5hbWljQ29tcG9uZW50IHtcbiAgLyoqXG4gICAqIFRoZSBjb25maWd1cmF0aW9uIHdoaWNoIGlzIHNoYXJlZCBiZXR3ZWVuIGNvbmZpZ3VyYXRpb24gY29tcG9uZW50IGFuZCBkaXNwbGF5IGNvbXBvbmVudC5cbiAgICogU2hvdWxkIGJlIHNlYXJpbHphYmxlZCB0byBhbGxvdyB0byBzYXZlIGl0IHRvIHRoZSBBUEkuXG4gICAqL1xuICBjb25maWc6IGFueTtcbiAgLyoqXG4gICAqIEEgcmVmZXJlbmNlIHRvIHRoZSBuZzFGb3JtIG9uIGFuZ3VsYXJqcyBkYXNoYm9hcmRzIHRvIGRpc2FibGUvZW5hYmxlIHRoZSBzYXZlIGJ1dHRvbi5cbiAgICogQGRlcHJlY2F0ZWQ6IFdpbGwgbm90IHdvcmsgb24gQW5ndWxhci1EYXNoYm9hcmRzICgxLjYuMS4wKS4gVXNlIGBDb250ZXh0U2VydmljZURhc2hib2FyZC5mb3JtRGlzYWJsZWRgIGluc3RlYWQuXG4gICAqL1xuICBuZzFGb3JtUmVmPzogYW55O1xufVxuXG4vKipcbiAqIEFuIGxpZmVjeWNsZSBob29rIHdoaWNoIGlzIGNhbGxlZCBiZWZvcmUgYW4gY29uZmlndXJhdGlvbiBpcyBzYXZlZC5cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBPbkJlZm9yZVNhdmUge1xuICAvKipcbiAgICogQ2FsbGVkIGJlZm9yZSBhIGNvbmZpZ3VyYXRpb24gb2JqZWN0IGlzIHNhdmVkLiBUaGUgZnVuY3Rpb24gY2FuIGJlIHVzZWQgdG8gbWFuaXB1bGF0ZSB0aGVcbiAgICogcGFzc2VkIGNvbmZpZyBvYmplY3Qgb3IgdG8gY2FuY2VsIHRoZSBzYXZpbmcgKHJldHVybiBmYWxzZSBvciBPYnNlcnZhYmxlPGJvb2xlYW4+KS5cbiAgICovXG4gIG9uQmVmb3JlU2F2ZShjb25maWc/OiBhbnkpOiBib29sZWFuIHwgUHJvbWlzZTxib29sZWFuPiB8IE9ic2VydmFibGU8Ym9vbGVhbj47XG59XG4iXX0=