import { Component, Output, Input, EventEmitter, ViewChild } from '@angular/core';
import { DropAreaComponent } from '../drop-area/drop-area.component';
import { isEmpty } from 'lodash-es';
/**
 * User can upload a binary directly or use an URL.
 *
 * ## Usage Example:
 *
 * ```html
 * <div>
 * <c8y-file-picker [maxAllowedFiles]="1" (onFilesPicked)="onFile($event)">
 * </c8y-file-picker>
 * </div>
 * ```
 */
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/forms';
import * as ɵngcc2 from '@angular/common';
import * as ɵngcc3 from '../forms/form-group.component';
import * as ɵngcc4 from '../drop-area/drop-area.component';
import * as ɵngcc5 from '../common/icon.directive';
import * as ɵngcc6 from '../forms/required-input-placeholder.directive';
import * as ɵngcc7 from 'ngx-bootstrap/popover';
import * as ɵngcc8 from '../i18n/c8y-translate.pipe';

function FilePickerComponent_button_17_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "button", 15);
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵelement(2, "i", 16);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵpropertyInterpolate("popover", ɵngcc0.ɵɵpipeBind1(1, 2, ctx_r2.fileUrlPopover));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("c8yIcon", "question-circle-o");
} }
export class FilePickerComponent {
    constructor() {
        this.onFilesPicked = new EventEmitter();
        this.maxAllowedFiles = Infinity;
        this.uploadChoice = 'uploadBinary';
        this.config = { maxlength: 2048 };
    }
    /**
     * @ignore
     */
    ngOnInit() {
        if (this.fileBinary) {
            this.droppedFiles = [this.fileBinary];
        }
    }
    /**
     * Triggered by dropped file in component and pass it into drop-area component.
     */
    onFileDropped(droppedFiles) {
        this.onFilesPicked.emit({
            droppedFiles
        });
    }
    /**
     * Triggered when user changes upload choice, from upload url to upload binary.
     */
    clearInputFromUrl() {
        delete this.fileUrl;
        this.fileToSave = {
            url: undefined
        };
        this.onFilesPicked.emit(this.fileToSave);
    }
    /**
     * Triggered when user changes upload choice, to avoid cumulation of droppedFiles.
     */
    clearSelectedFiles() {
        this.dropArea.onDelete();
        this.fileToSave = {
            droppedFiles: undefined
        };
        this.onFilesPicked.emit(this.fileToSave);
    }
    /**
     * Triggered when user puts binary's url to upload.
     */
    onFileUrlChange(urlStr) {
        this.fileToSave = {
            url: urlStr
        };
        this.onFilesPicked.emit(this.fileToSave);
    }
    /**
     * Checks if there is popover to display.
     */
    isPopoverUsed() {
        return !isEmpty(this.fileUrlPopover);
    }
}
FilePickerComponent.ɵfac = function FilePickerComponent_Factory(t) { return new (t || FilePickerComponent)(); };
FilePickerComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: FilePickerComponent, selectors: [["c8y-file-picker"]], viewQuery: function FilePickerComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(DropAreaComponent, 7);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.dropArea = _t.first);
    } }, inputs: { maxAllowedFiles: "maxAllowedFiles", uploadChoice: "uploadChoice", config: "config", fileUrl: "fileUrl", fileBinary: "fileBinary", fileUrlPopover: "fileUrlPopover" }, outputs: { onFilesPicked: "onFilesPicked" }, decls: 30, vars: 27, consts: [[1, "form-group"], [1, "c8y-radio", "radio-inline", 3, "title"], ["type", "radio", "value", "uploadBinary", "name", "uploadChoice", 3, "ngModel", "ngModelChange", "click"], ["radio", ""], [1, "c8y-radio", "radio-inline", "m-l-8", 3, "title"], ["type", "radio", "value", "uploadUrl", "name", "uploadChoice", 3, "ngModel", "ngModelChange", "click"], ["class", "btn btn-clean text-primary m-l-4", "type", "button", "triggers", "focus", "container", "body", "placement", "top", 3, "popover", 4, "ngIf"], [3, "hidden"], [1, "m-0"], [1, "drop-area-sm", 3, "title", "maxAllowedFiles", "files", "dropped"], [1, "m-b-4", "p-b-8"], [1, "input-group"], [1, "input-group-addon"], ["c8yIcon", "globe"], ["type", "text", "name", "fileUrl", "required", "", 1, "form-control", 3, "ngModel", "placeholder", "maxlength", "ngModelChange"], ["type", "button", "triggers", "focus", "container", "body", "placement", "top", 1, "btn", "btn-clean", "text-primary", "m-l-4", 3, "popover"], [3, "c8yIcon"]], template: function FilePickerComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "label", 1);
        ɵngcc0.ɵɵpipe(2, "translate");
        ɵngcc0.ɵɵelementStart(3, "input", 2, 3);
        ɵngcc0.ɵɵlistener("ngModelChange", function FilePickerComponent_Template_input_ngModelChange_3_listener($event) { return ctx.uploadChoice = $event; })("click", function FilePickerComponent_Template_input_click_3_listener() { return ctx.clearInputFromUrl(); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(5, "span");
        ɵngcc0.ɵɵelementStart(6, "span");
        ɵngcc0.ɵɵtext(7);
        ɵngcc0.ɵɵpipe(8, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(9, "label", 4);
        ɵngcc0.ɵɵpipe(10, "translate");
        ɵngcc0.ɵɵelementStart(11, "input", 5, 3);
        ɵngcc0.ɵɵlistener("ngModelChange", function FilePickerComponent_Template_input_ngModelChange_11_listener($event) { return ctx.uploadChoice = $event; })("click", function FilePickerComponent_Template_input_click_11_listener() { return ctx.clearSelectedFiles(); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(13, "span");
        ɵngcc0.ɵɵelementStart(14, "span");
        ɵngcc0.ɵɵtext(15);
        ɵngcc0.ɵɵpipe(16, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(17, FilePickerComponent_button_17_Template, 3, 4, "button", 6);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(18, "div", 7);
        ɵngcc0.ɵɵelementStart(19, "c8y-form-group", 8);
        ɵngcc0.ɵɵelementStart(20, "c8y-drop-area", 9);
        ɵngcc0.ɵɵlistener("dropped", function FilePickerComponent_Template_c8y_drop_area_dropped_20_listener($event) { return ctx.onFileDropped($event); });
        ɵngcc0.ɵɵpipe(21, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(22, "div", 7);
        ɵngcc0.ɵɵelementStart(23, "c8y-form-group", 8);
        ɵngcc0.ɵɵelementStart(24, "div", 10);
        ɵngcc0.ɵɵelementStart(25, "div", 11);
        ɵngcc0.ɵɵelementStart(26, "span", 12);
        ɵngcc0.ɵɵelement(27, "i", 13);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(28, "input", 14);
        ɵngcc0.ɵɵlistener("ngModelChange", function FilePickerComponent_Template_input_ngModelChange_28_listener($event) { return ctx.fileUrl = $event; })("ngModelChange", function FilePickerComponent_Template_input_ngModelChange_28_listener($event) { return ctx.onFileUrlChange($event); });
        ɵngcc0.ɵɵpipe(29, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(2, 15, "Upload a binary"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngModel", ctx.uploadChoice);
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(8, 17, "Upload a binary"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(10, 19, "Provide a file path"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngModel", ctx.uploadChoice);
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(16, 21, "Provide a file path"), " ");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isPopoverUsed());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("hidden", ctx.uploadChoice !== "uploadBinary");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("title", ɵngcc0.ɵɵpipeBind1(21, 23, "Drop file or click to browse"))("maxAllowedFiles", ctx.maxAllowedFiles)("files", ctx.droppedFiles);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("hidden", ctx.uploadChoice !== "uploadUrl");
        ɵngcc0.ɵɵadvance(6);
        ɵngcc0.ɵɵpropertyInterpolate1("placeholder", "", ɵngcc0.ɵɵpipeBind1(29, 25, "e.g."), " http://example.com/binary.zip");
        ɵngcc0.ɵɵpropertyInterpolate("maxlength", ctx.config.maxlength);
        ɵngcc0.ɵɵproperty("ngModel", ctx.fileUrl);
    } }, directives: [ɵngcc1.RadioControlValueAccessor, ɵngcc1.DefaultValueAccessor, ɵngcc1.NgControlStatus, ɵngcc1.NgModel, ɵngcc2.NgIf, ɵngcc3.FormGroupComponent, ɵngcc4.DropAreaComponent, ɵngcc5.IconDirective, ɵngcc6.RequiredInputPlaceholderDirective, ɵngcc1.RequiredValidator, ɵngcc1.MaxLengthValidator, ɵngcc7.PopoverDirective], pipes: [ɵngcc8.C8yTranslatePipe], encapsulation: 2 });
FilePickerComponent.propDecorators = {
    dropArea: [{ type: ViewChild, args: [DropAreaComponent, { static: true },] }],
    onFilesPicked: [{ type: Output }],
    maxAllowedFiles: [{ type: Input }],
    uploadChoice: [{ type: Input }],
    fileUrl: [{ type: Input }],
    fileBinary: [{ type: Input }],
    config: [{ type: Input }],
    fileUrlPopover: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FilePickerComponent, [{
        type: Component,
        args: [{
                selector: 'c8y-file-picker',
                template: "<div class=\"form-group\">\n  <label title=\"{{ 'Upload a binary' | translate }}\" class=\"c8y-radio radio-inline\">\n    <input\n      #radio\n      type=\"radio\"\n      value=\"uploadBinary\"\n      name=\"uploadChoice\"\n      [(ngModel)]=\"uploadChoice\"\n      (click)=\"clearInputFromUrl()\"\n    />\n    <span></span>\n    <span>{{ 'Upload a binary' | translate }}</span>\n  </label>\n  <label title=\"{{ 'Provide a file path' | translate }}\" class=\"c8y-radio radio-inline m-l-8\">\n    <input\n      #radio\n      type=\"radio\"\n      value=\"uploadUrl\"\n      name=\"uploadChoice\"\n      [(ngModel)]=\"uploadChoice\"\n      (click)=\"clearSelectedFiles()\"\n    />\n    <span></span>\n    <span>\n      {{ 'Provide a file path' | translate }}\n    </span>\n    <button\n      *ngIf=\"isPopoverUsed()\"\n      class=\"btn btn-clean text-primary m-l-4\"\n      type=\"button\"\n      popover=\"{{ fileUrlPopover | translate }}\"\n      triggers=\"focus\"\n      container=\"body\"\n      placement=\"top\"\n    >\n      <i [c8yIcon]=\"'question-circle-o'\"></i>\n    </button>\n  </label>\n</div>\n\n<div [hidden]=\"uploadChoice !== 'uploadBinary'\">\n  <c8y-form-group class=\"m-0\">\n    <c8y-drop-area\n      class=\"drop-area-sm\"\n      (dropped)=\"onFileDropped($event)\"\n      [title]=\"'Drop file or click to browse' | translate\"\n      [maxAllowedFiles]=\"maxAllowedFiles\"\n      [files]=\"droppedFiles\"\n    >\n    </c8y-drop-area>\n  </c8y-form-group>\n</div>\n\n<div [hidden]=\"uploadChoice !== 'uploadUrl'\">\n  <c8y-form-group class=\"m-0\">\n    <div class=\"m-b-4 p-b-8\">\n      <div class=\"input-group\">\n        <span class=\"input-group-addon\">\n          <i c8yIcon=\"globe\"></i>\n        </span>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          name=\"fileUrl\"\n          [(ngModel)]=\"fileUrl\"\n          (ngModelChange)=\"onFileUrlChange($event)\"\n          placeholder=\"{{ 'e.g.' | translate }} http://example.com/binary.zip\"\n          maxlength=\"{{ config.maxlength }}\"\n          required\n        />\n      </div>\n    </div>\n  </c8y-form-group>\n</div>\n"
            }]
    }], function () { return []; }, { onFilesPicked: [{
            type: Output
        }], maxAllowedFiles: [{
            type: Input
        }], uploadChoice: [{
            type: Input
        }], config: [{
            type: Input
        }], dropArea: [{
            type: ViewChild,
            args: [DropAreaComponent, { static: true }]
        }], fileUrl: [{
            type: Input
        }], fileBinary: [{
            type: Input
        }], fileUrlPopover: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsZS1waWNrZXIuY29tcG9uZW50LmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9jb3JlL2ZpbGUtcGlja2VyL2ZpbGUtcGlja2VyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUsWUFBWSxFQUFFLFNBQVMsRUFBVSxNQUFNLGVBQWUsQ0FBQztBQUMxRixPQUFPLEVBQWUsaUJBQWlCLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUVsRixPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sV0FBVyxDQUFDO0FBR3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBTUgsTUFBTSxPQUFPLG1CQUFtQjtBQUFHLElBSm5DO0FBQ0csUUFLUyxrQkFBYSxHQUE4QixJQUFJLFlBQVksRUFBRSxDQUFDO0FBQzFFLFFBQVcsb0JBQWUsR0FBVyxRQUFRLENBQUM7QUFDOUMsUUFBVyxpQkFBWSxHQUFpQyxjQUFjLENBQUM7QUFDdkUsUUFFVyxXQUFNLEdBQXFCLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxDQUFDO0FBQzFELElBZ0VBLENBQUM7QUFDRCxJQXpERTtBQUNGO0FBQ0UsT0FBRztBQUNMLElBQUUsUUFBUTtBQUFLLFFBQ1gsSUFBSSxJQUFJLENBQUMsVUFBVSxFQUFFO0FBQ3pCLFlBQU0sSUFBSSxDQUFDLFlBQVksR0FBRyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztBQUM1QyxTQUFLO0FBQ0wsSUFBRSxDQUFDO0FBQ0gsSUFDRTtBQUNGO0FBQ0UsT0FBRztBQUNMLElBQUUsYUFBYSxDQUFDLFlBQTJCO0FBQUksUUFDM0MsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUM7QUFDNUIsWUFBTSxZQUFZO0FBQ2xCLFNBQUssQ0FBQyxDQUFDO0FBQ1AsSUFBRSxDQUFDO0FBQ0gsSUFDRTtBQUNGO0FBQ0UsT0FBRztBQUNMLElBQUUsaUJBQWlCO0FBQUssUUFDcEIsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDO0FBQ3hCLFFBQUksSUFBSSxDQUFDLFVBQVUsR0FBRztBQUN0QixZQUFNLEdBQUcsRUFBRSxTQUFTO0FBQ3BCLFNBQUssQ0FBQztBQUNOLFFBQUksSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO0FBQzdDLElBQUUsQ0FBQztBQUNILElBQ0U7QUFDRjtBQUNFLE9BQUc7QUFDTCxJQUFFLGtCQUFrQjtBQUFLLFFBQ3JCLElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxFQUFFLENBQUM7QUFDN0IsUUFBSSxJQUFJLENBQUMsVUFBVSxHQUFHO0FBQ3RCLFlBQU0sWUFBWSxFQUFFLFNBQVM7QUFDN0IsU0FBSyxDQUFDO0FBQ04sUUFBSSxJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7QUFDN0MsSUFBRSxDQUFDO0FBQ0gsSUFDRTtBQUNGO0FBQ0UsT0FBRztBQUNMLElBQUUsZUFBZSxDQUFDLE1BQU07QUFBSSxRQUN4QixJQUFJLENBQUMsVUFBVSxHQUFHO0FBQ3RCLFlBQU0sR0FBRyxFQUFFLE1BQU07QUFDakIsU0FBSyxDQUFDO0FBQ04sUUFBSSxJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7QUFDN0MsSUFBRSxDQUFDO0FBQ0gsSUFDRTtBQUNGO0FBQ0UsT0FBRztBQUNMLElBQUUsYUFBYTtBQUNmLFFBQUksT0FBTyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUM7QUFDekMsSUFBRSxDQUFDO0FBQ0g7K0NBNUVDLFNBQVMsU0FBQyxrQkFDVCxRQUFRLEVBQUUsaUJBQWlCO2VBQzNCOzs7Ozs7Ozs7Ozs7V0FBMkMsY0FDNUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7b1lBQ0k7QUFBQztBQUF1Qyx1QkFDMUMsU0FBUyxTQUFDLGlCQUFpQixFQUFFLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRTtBQUFPLDRCQUNwRCxNQUFNO0FBQUssOEJBQ1gsS0FBSztBQUFLLDJCQUNWLEtBQUs7QUFBSyxzQkFDVixLQUFLO0FBQUsseUJBQ1YsS0FBSztBQUFLLHFCQUNWLEtBQUs7QUFBSyw2QkFJVixLQUFLO0FBQUk7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztvQkFBRTtBQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPdXRwdXQsIElucHV0LCBFdmVudEVtaXR0ZXIsIFZpZXdDaGlsZCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBEcm9wcGVkRmlsZSwgRHJvcEFyZWFDb21wb25lbnQgfSBmcm9tICcuLi9kcm9wLWFyZWEvZHJvcC1hcmVhLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBQaWNrZWRGaWxlcyB9IGZyb20gJy4vZmlsZS1waWNrZXIubW9kZWwnO1xuaW1wb3J0IHsgaXNFbXB0eSB9IGZyb20gJ2xvZGFzaC1lcyc7XG5pbXBvcnQgeyBGaWxlUGlja2VyQ29uZmlnIH0gZnJvbSAnLi9maWxlLXBpY2tlci1jb25maWcubW9kZWwnO1xuXG4vKipcbiAqIFVzZXIgY2FuIHVwbG9hZCBhIGJpbmFyeSBkaXJlY3RseSBvciB1c2UgYW4gVVJMLlxuICpcbiAqICMjIFVzYWdlIEV4YW1wbGU6XG4gKlxuICogYGBgaHRtbFxuICogPGRpdj5cbiAqIDxjOHktZmlsZS1waWNrZXIgW21heEFsbG93ZWRGaWxlc109XCIxXCIgKG9uRmlsZXNQaWNrZWQpPVwib25GaWxlKCRldmVudClcIj5cbiAqIDwvYzh5LWZpbGUtcGlja2VyPlxuICogPC9kaXY+XG4gKiBgYGBcbiAqL1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjOHktZmlsZS1waWNrZXInLFxuICB0ZW1wbGF0ZVVybDogJy4vZmlsZS1waWNrZXIuY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIEZpbGVQaWNrZXJDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICBAVmlld0NoaWxkKERyb3BBcmVhQ29tcG9uZW50LCB7IHN0YXRpYzogdHJ1ZSB9KSBkcm9wQXJlYTogRHJvcEFyZWFDb21wb25lbnQ7XG4gIEBPdXRwdXQoKSBvbkZpbGVzUGlja2VkOiBFdmVudEVtaXR0ZXI8UGlja2VkRmlsZXM+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICBASW5wdXQoKSBtYXhBbGxvd2VkRmlsZXM6IG51bWJlciA9IEluZmluaXR5O1xuICBASW5wdXQoKSB1cGxvYWRDaG9pY2U6ICd1cGxvYWRCaW5hcnknIHwgJ3VwbG9hZFVybCcgPSAndXBsb2FkQmluYXJ5JztcbiAgQElucHV0KCkgZmlsZVVybDogc3RyaW5nO1xuICBASW5wdXQoKSBmaWxlQmluYXJ5OiBEcm9wcGVkRmlsZTtcbiAgQElucHV0KCkgY29uZmlnOiBGaWxlUGlja2VyQ29uZmlnID0geyBtYXhsZW5ndGg6IDIwNDggfTtcbiAgLyoqXG4gICAqIEFkZGl0aW9uYWwgc3RyaW5nIHRvIGJlIGRpc3BsYXllZCBpbiBhIHBvcG92ZXIuXG4gICAqL1xuICBASW5wdXQoKSBmaWxlVXJsUG9wb3Zlcjogc3RyaW5nO1xuXG4gIGRyb3BwZWRGaWxlczogRHJvcHBlZEZpbGVbXTtcbiAgcHJpdmF0ZSBmaWxlVG9TYXZlOiBQaWNrZWRGaWxlcztcblxuICAvKipcbiAgICogQGlnbm9yZVxuICAgKi9cbiAgbmdPbkluaXQoKTogdm9pZCB7XG4gICAgaWYgKHRoaXMuZmlsZUJpbmFyeSkge1xuICAgICAgdGhpcy5kcm9wcGVkRmlsZXMgPSBbdGhpcy5maWxlQmluYXJ5XTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogVHJpZ2dlcmVkIGJ5IGRyb3BwZWQgZmlsZSBpbiBjb21wb25lbnQgYW5kIHBhc3MgaXQgaW50byBkcm9wLWFyZWEgY29tcG9uZW50LlxuICAgKi9cbiAgb25GaWxlRHJvcHBlZChkcm9wcGVkRmlsZXM6IERyb3BwZWRGaWxlW10pOiB2b2lkIHtcbiAgICB0aGlzLm9uRmlsZXNQaWNrZWQuZW1pdCh7XG4gICAgICBkcm9wcGVkRmlsZXNcbiAgICB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBUcmlnZ2VyZWQgd2hlbiB1c2VyIGNoYW5nZXMgdXBsb2FkIGNob2ljZSwgZnJvbSB1cGxvYWQgdXJsIHRvIHVwbG9hZCBiaW5hcnkuXG4gICAqL1xuICBjbGVhcklucHV0RnJvbVVybCgpOiB2b2lkIHtcbiAgICBkZWxldGUgdGhpcy5maWxlVXJsO1xuICAgIHRoaXMuZmlsZVRvU2F2ZSA9IHtcbiAgICAgIHVybDogdW5kZWZpbmVkXG4gICAgfTtcbiAgICB0aGlzLm9uRmlsZXNQaWNrZWQuZW1pdCh0aGlzLmZpbGVUb1NhdmUpO1xuICB9XG5cbiAgLyoqXG4gICAqIFRyaWdnZXJlZCB3aGVuIHVzZXIgY2hhbmdlcyB1cGxvYWQgY2hvaWNlLCB0byBhdm9pZCBjdW11bGF0aW9uIG9mIGRyb3BwZWRGaWxlcy5cbiAgICovXG4gIGNsZWFyU2VsZWN0ZWRGaWxlcygpOiB2b2lkIHtcbiAgICB0aGlzLmRyb3BBcmVhLm9uRGVsZXRlKCk7XG4gICAgdGhpcy5maWxlVG9TYXZlID0ge1xuICAgICAgZHJvcHBlZEZpbGVzOiB1bmRlZmluZWRcbiAgICB9O1xuICAgIHRoaXMub25GaWxlc1BpY2tlZC5lbWl0KHRoaXMuZmlsZVRvU2F2ZSk7XG4gIH1cblxuICAvKipcbiAgICogVHJpZ2dlcmVkIHdoZW4gdXNlciBwdXRzIGJpbmFyeSdzIHVybCB0byB1cGxvYWQuXG4gICAqL1xuICBvbkZpbGVVcmxDaGFuZ2UodXJsU3RyKTogdm9pZCB7XG4gICAgdGhpcy5maWxlVG9TYXZlID0ge1xuICAgICAgdXJsOiB1cmxTdHJcbiAgICB9O1xuICAgIHRoaXMub25GaWxlc1BpY2tlZC5lbWl0KHRoaXMuZmlsZVRvU2F2ZSk7XG4gIH1cblxuICAvKipcbiAgICogQ2hlY2tzIGlmIHRoZXJlIGlzIHBvcG92ZXIgdG8gZGlzcGxheS5cbiAgICovXG4gIGlzUG9wb3ZlclVzZWQoKSB7XG4gICAgcmV0dXJuICFpc0VtcHR5KHRoaXMuZmlsZVVybFBvcG92ZXIpO1xuICB9XG59XG4iXX0=