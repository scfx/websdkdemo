import { __awaiter } from "tslib";
import { Injectable } from '@angular/core';
import { ActivatedRoute } from '@angular/router';
import { FetchClient, Service } from '@c8y/client';
import { get } from 'lodash-es';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@c8y/client';
import * as ɵngcc2 from '@angular/router';
export class ProviderConfigurationService extends Service {
    constructor(client, activatedRoute) {
        super(client);
        this.baseUrl = get(activatedRoute, 'snapshot.data.endpoint.configurationEndpoint.baseUrl');
        this.listUrl = get(activatedRoute, 'snapshot.data.endpoint.configurationEndpoint.listUrl');
    }
    detail() {
        const _super = Object.create(null, {
            detail: { get: () => super.detail }
        });
        return __awaiter(this, void 0, void 0, function* () {
            return _super.detail.call(this, ProviderConfigurationService.NO_DETAIL_ID);
        });
    }
    update(entity) {
        const _super = Object.create(null, {
            update: { get: () => super.update }
        });
        return __awaiter(this, void 0, void 0, function* () {
            return _super.update.call(this, entity);
        });
    }
    delete() {
        const _super = Object.create(null, {
            delete: { get: () => super.delete }
        });
        return __awaiter(this, void 0, void 0, function* () {
            return _super.delete.call(this, ProviderConfigurationService.NO_DETAIL_ID);
        });
    }
    /** There is a single provider configuration per tenant and detail URL is not needed */
    getDetailUrl(_) {
        return this.listUrl;
    }
}
ProviderConfigurationService.ɵfac = function ProviderConfigurationService_Factory(t) { return new (t || ProviderConfigurationService)(ɵngcc0.ɵɵinject(ɵngcc1.FetchClient), ɵngcc0.ɵɵinject(ɵngcc2.ActivatedRoute)); };
ProviderConfigurationService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: ProviderConfigurationService, factory: ProviderConfigurationService.ɵfac });
ProviderConfigurationService.NO_DETAIL_ID = null;
ProviderConfigurationService.ctorParameters = () => [
    { type: FetchClient },
    { type: ActivatedRoute }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ProviderConfigurationService, [{
        type: Injectable
    }], function () { return [{ type: ɵngcc1.FetchClient }, { type: ɵngcc2.ActivatedRoute }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvdmlkZXItY29uZmlndXJhdGlvbi5zZXJ2aWNlLmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9jb3JlL3Byb3ZpZGVyLWNvbmZpZ3VyYXRpb24vc2VydmljZS9wcm92aWRlci1jb25maWd1cmF0aW9uLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ2pELE9BQU8sRUFBRSxXQUFXLEVBQXdCLE9BQU8sRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUN6RSxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sV0FBVyxDQUFDOzs7O0FBSWhDLE1BQU0sT0FBTyw0QkFBNkIsU0FBUSxPQUEyQjtBQUM3RSxJQUtFLFlBQVksTUFBbUIsRUFBRSxjQUE4QjtBQUNqRSxRQUFJLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQztBQUNsQixRQUFJLElBQUksQ0FBQyxPQUFPLEdBQUcsR0FBRyxDQUFDLGNBQWMsRUFBRSxzREFBc0QsQ0FBQyxDQUFDO0FBQy9GLFFBQUksSUFBSSxDQUFDLE9BQU8sR0FBRyxHQUFHLENBQUMsY0FBYyxFQUFFLHNEQUFzRCxDQUFDLENBQUM7QUFDL0YsSUFBRSxDQUFDO0FBQ0gsSUFDUSxNQUFNO0FBQUs7QUFDWjtBQUFnRDtBQUFZO0FBR1gsWUFIcEQsT0FBTyxPQUFNLE1BQU0sWUFBQyw0QkFBNEIsQ0FBQyxZQUFZLEVBQUU7QUFDbkUsUUFBRSxDQUFDO0FBRUYsS0FGRTtBQUNILElBQ1EsTUFBTSxDQUFDLE1BQW1DO0FBQUk7QUFDL0M7QUFHVTtBQUFZO0FBQ21CLFlBSjVDLE9BQU8sT0FBTSxNQUFNLFlBQUMsTUFBTSxFQUFFO0FBQ2hDLFFBQUUsQ0FBQztBQUVGLEtBRkU7QUFDSCxJQUNRLE1BQU07QUFBSztBQUNFO0FBQ3BCO0FBRU87QUFBOEQsWUFIbEUsT0FBTyxPQUFNLE1BQU0sWUFBQyw0QkFBNEIsQ0FBQyxZQUFZLEVBQUU7QUFDbkUsUUFBRSxDQUFDO0FBRUYsS0FGRTtBQUNILElBQ0UsdUZBQXVGO0FBQ3pGLElBQVksWUFBWSxDQUFDLENBQWdDO0FBQUksUUFDekQsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDO0FBQ3hCLElBQUUsQ0FBQztBQUNIOztrS0FBQztBQTNCeUIseUNBQVksR0FBVyxJQUFJLENBQUMsQUFEcEQ7QUFBQztFQURGLFVBQVUsWkFDOEMsWUFMaEQsV0FBVztBQUFJLFlBRGYsY0FBYztBQUFHOzs7NkdBQUU7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEFjdGl2YXRlZFJvdXRlIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcbmltcG9ydCB7IEZldGNoQ2xpZW50LCBJSWRlbnRpZmllZCwgSVJlc3VsdCwgU2VydmljZSB9IGZyb20gJ0BjOHkvY2xpZW50JztcbmltcG9ydCB7IGdldCB9IGZyb20gJ2xvZGFzaC1lcyc7XG5pbXBvcnQgeyBQcm92aWRlclByb3BlcnRpZXMgfSBmcm9tICcuLi9tb2RlbC9wcm92aWRlci1wcm9wZXJ0aWVzLm1vZGVsJztcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFByb3ZpZGVyQ29uZmlndXJhdGlvblNlcnZpY2UgZXh0ZW5kcyBTZXJ2aWNlPFByb3ZpZGVyUHJvcGVydGllcz4ge1xuICBwcml2YXRlIHN0YXRpYyByZWFkb25seSBOT19ERVRBSUxfSUQ6IHN0cmluZyA9IG51bGw7XG5cbiAgcHJvdGVjdGVkIGJhc2VVcmw6IHN0cmluZztcbiAgcHJvdGVjdGVkIGxpc3RVcmw6IHN0cmluZztcblxuICBjb25zdHJ1Y3RvcihjbGllbnQ6IEZldGNoQ2xpZW50LCBhY3RpdmF0ZWRSb3V0ZTogQWN0aXZhdGVkUm91dGUpIHtcbiAgICBzdXBlcihjbGllbnQpO1xuICAgIHRoaXMuYmFzZVVybCA9IGdldChhY3RpdmF0ZWRSb3V0ZSwgJ3NuYXBzaG90LmRhdGEuZW5kcG9pbnQuY29uZmlndXJhdGlvbkVuZHBvaW50LmJhc2VVcmwnKTtcbiAgICB0aGlzLmxpc3RVcmwgPSBnZXQoYWN0aXZhdGVkUm91dGUsICdzbmFwc2hvdC5kYXRhLmVuZHBvaW50LmNvbmZpZ3VyYXRpb25FbmRwb2ludC5saXN0VXJsJyk7XG4gIH1cblxuICBhc3luYyBkZXRhaWwoKTogUHJvbWlzZTxJUmVzdWx0PFByb3ZpZGVyUHJvcGVydGllcz4+IHtcbiAgICByZXR1cm4gc3VwZXIuZGV0YWlsKFByb3ZpZGVyQ29uZmlndXJhdGlvblNlcnZpY2UuTk9fREVUQUlMX0lEKTtcbiAgfVxuXG4gIGFzeW5jIHVwZGF0ZShlbnRpdHk6IFBhcnRpYWw8UHJvdmlkZXJQcm9wZXJ0aWVzPik6IFByb21pc2U8SVJlc3VsdDxQcm92aWRlclByb3BlcnRpZXM+PiB7XG4gICAgcmV0dXJuIHN1cGVyLnVwZGF0ZShlbnRpdHkpO1xuICB9XG5cbiAgYXN5bmMgZGVsZXRlKCk6IFByb21pc2U8SVJlc3VsdDxudWxsPj4ge1xuICAgIHJldHVybiBzdXBlci5kZWxldGUoUHJvdmlkZXJDb25maWd1cmF0aW9uU2VydmljZS5OT19ERVRBSUxfSUQpO1xuICB9XG5cbiAgLyoqIFRoZXJlIGlzIGEgc2luZ2xlIHByb3ZpZGVyIGNvbmZpZ3VyYXRpb24gcGVyIHRlbmFudCBhbmQgZGV0YWlsIFVSTCBpcyBub3QgbmVlZGVkICovXG4gIHByb3RlY3RlZCBnZXREZXRhaWxVcmwoXzogc3RyaW5nIHwgbnVtYmVyIHwgSUlkZW50aWZpZWQpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLmxpc3RVcmw7XG4gIH1cbn1cbiJdfQ==