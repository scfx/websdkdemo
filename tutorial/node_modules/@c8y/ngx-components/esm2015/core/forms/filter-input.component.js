import { Component, EventEmitter, Input, Output } from '@angular/core';
import { Subject, timer } from 'rxjs';
import { debounce, distinctUntilChanged, map } from 'rxjs/operators';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../common/icon.directive';
import * as ɵngcc2 from '../i18n/c8y-translate.pipe';
export class FilterInputComponent {
    constructor() {
        this.onSearch = new EventEmitter();
        this.filterChange$ = new Subject();
        this.filterTerm = '';
        this.CARRIAGE_RETURN_KEY = 13;
        this.CARRIAGE_RETURN_CODE = 'Enter';
    }
    ngOnInit() {
        this.reset();
        this.filterChange$
            .pipe(debounce((event) => event.code === this.CARRIAGE_RETURN_CODE || event.keyCode === this.CARRIAGE_RETURN_KEY
            ? timer(10)
            : timer(300)), map((e) => e.target.value), distinctUntilChanged())
            .subscribe(filterTerm => {
            this.filterTerm = filterTerm;
            this.onSearch.emit(filterTerm);
        });
    }
    reset() {
        this.filterTerm = '';
        this.onSearch.emit('');
    }
    ngOnDestroy() {
        this.filterChange$.complete();
    }
}
FilterInputComponent.ɵfac = function FilterInputComponent_Factory(t) { return new (t || FilterInputComponent)(); };
FilterInputComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: FilterInputComponent, selectors: [["c8y-filter"]], inputs: { icon: "icon" }, outputs: { onSearch: "onSearch" }, decls: 6, vars: 5, consts: [[1, "input-group", "input-group-search"], ["type", "text", 1, "form-control", 3, "placeholder", "value", "keyup"], [1, "input-group-btn"], [1, "btn", "btn-clean", 3, "click"], [3, "c8yIcon"]], template: function FilterInputComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "input", 1);
        ɵngcc0.ɵɵlistener("keyup", function FilterInputComponent_Template_input_keyup_1_listener($event) { return ctx.filterChange$.next($event); });
        ɵngcc0.ɵɵpipe(2, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(3, "span", 2);
        ɵngcc0.ɵɵelementStart(4, "button", 3);
        ɵngcc0.ɵɵlistener("click", function FilterInputComponent_Template_button_click_4_listener() { return ctx.reset(); });
        ɵngcc0.ɵɵelement(5, "i", 4);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵpropertyInterpolate("placeholder", ɵngcc0.ɵɵpipeBind1(2, 3, "Filter\u2026"));
        ɵngcc0.ɵɵproperty("value", ctx.filterTerm);
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵproperty("c8yIcon", ctx.filterTerm.length === 0 ? "search" : "close");
    } }, directives: [ɵngcc1.IconDirective], pipes: [ɵngcc2.C8yTranslatePipe], encapsulation: 2 });
FilterInputComponent.propDecorators = {
    icon: [{ type: Input }],
    onSearch: [{ type: Output }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FilterInputComponent, [{
        type: Component,
        args: [{
                selector: 'c8y-filter',
                template: "<div class=\"input-group input-group-search\">\n  <input\n    class=\"form-control\"\n    placeholder=\"{{ 'Filter\u2026' | translate }}\"\n    type=\"text\"\n    [value]=\"filterTerm\"\n    (keyup)=\"filterChange$.next($event)\"\n  />\n  <span class=\"input-group-btn\">\n    <button class=\"btn btn-clean\" (click)=\"reset()\">\n      <i [c8yIcon]=\"filterTerm.length === 0 ? 'search' : 'close'\"></i>\n    </button>\n  </span>\n</div>\n"
            }]
    }], function () { return []; }, { onSearch: [{
            type: Output
        }], icon: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsdGVyLWlucHV0LmNvbXBvbmVudC5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vY29yZS9mb3Jtcy9maWx0ZXItaW5wdXQuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBcUIsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzFGLE9BQU8sRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBQ3RDLE9BQU8sRUFBRSxRQUFRLEVBQUUsb0JBQW9CLEVBQUUsR0FBRyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7Ozs7QUFNckUsTUFBTSxPQUFPLG9CQUFvQjtBQUFHLElBSnBDO0FBQ0csUUFLUyxhQUFRLEdBQUcsSUFBSSxZQUFZLEVBQVUsQ0FBQztBQUNsRCxRQUFFLGtCQUFhLEdBQUcsSUFBSSxPQUFPLEVBQUUsQ0FBQztBQUNoQyxRQUFFLGVBQVUsR0FBVyxFQUFFLENBQUM7QUFDMUIsUUFBbUIsd0JBQW1CLEdBQUcsRUFBRSxDQUFDO0FBQzVDLFFBQW1CLHlCQUFvQixHQUFHLE9BQU8sQ0FBQztBQUNsRCxJQTJCQSxDQUFDO0FBQ0QsSUEzQkUsUUFBUTtBQUNWLFFBQUksSUFBSSxDQUFDLEtBQUssRUFBRSxDQUFDO0FBQ2pCLFFBQUksSUFBSSxDQUFDLGFBQWE7QUFDdEIsYUFBTyxJQUFJLENBQ0gsUUFBUSxDQUFDLENBQUMsS0FBVSxFQUFFLEVBQUUsQ0FDdEIsS0FBSyxDQUFDLElBQUksS0FBSyxJQUFJLENBQUMsb0JBQW9CLElBQUksS0FBSyxDQUFDLE9BQU8sS0FBSyxJQUFJLENBQUMsbUJBQW1CO0FBQ2hHLFlBQVksQ0FBQyxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDdkIsWUFBWSxDQUFDLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUNmLEVBQ0QsR0FBRyxDQUFDLENBQUMsQ0FBTSxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxFQUMvQixvQkFBb0IsRUFBRSxDQUN2QjtBQUNQLGFBQU8sU0FBUyxDQUFDLFVBQVUsQ0FBQyxFQUFFO0FBQzlCLFlBQVEsSUFBSSxDQUFDLFVBQVUsR0FBRyxVQUFVLENBQUM7QUFDckMsWUFBUSxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztBQUN2QyxRQUFNLENBQUMsQ0FBQyxDQUFDO0FBQ1QsSUFBRSxDQUFDO0FBQ0gsSUFDRSxLQUFLO0FBQ1AsUUFBSSxJQUFJLENBQUMsVUFBVSxHQUFHLEVBQUUsQ0FBQztBQUN6QixRQUFJLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0FBQzNCLElBQUUsQ0FBQztBQUNILElBQ0UsV0FBVztBQUFLLFFBQ2QsSUFBSSxDQUFDLGFBQWEsQ0FBQyxRQUFRLEVBQUUsQ0FBQztBQUNsQyxJQUFFLENBQUM7QUFDSDtnREF0Q0MsU0FBUyxTQUFDLGtCQUNULFFBQVEsRUFBRSxZQUFZO1FBQ3RCLG1jQUE0QyxjQUM3Qzs7Ozs7Ozs7Ozs7Ozs7Ozs7OzttR0FDSTtBQUFDO0FBQXdDLG1CQUMzQyxLQUFLO0FBQUssdUJBQ1YsTUFBTTtBQUFJOzs7Ozs7Ozs7OztvQkFBRTtBQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIElucHV0LCBPbkRlc3Ryb3ksIE9uSW5pdCwgT3V0cHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBTdWJqZWN0LCB0aW1lciB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgZGVib3VuY2UsIGRpc3RpbmN0VW50aWxDaGFuZ2VkLCBtYXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2M4eS1maWx0ZXInLFxuICB0ZW1wbGF0ZVVybDogJy4vZmlsdGVyLWlucHV0LmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBGaWx0ZXJJbnB1dENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcbiAgQElucHV0KCkgaWNvbjogc3RyaW5nO1xuICBAT3V0cHV0KCkgb25TZWFyY2ggPSBuZXcgRXZlbnRFbWl0dGVyPHN0cmluZz4oKTtcbiAgZmlsdGVyQ2hhbmdlJCA9IG5ldyBTdWJqZWN0KCk7XG4gIGZpbHRlclRlcm06IHN0cmluZyA9ICcnO1xuICBwcml2YXRlIHJlYWRvbmx5IENBUlJJQUdFX1JFVFVSTl9LRVkgPSAxMztcbiAgcHJpdmF0ZSByZWFkb25seSBDQVJSSUFHRV9SRVRVUk5fQ09ERSA9ICdFbnRlcic7XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5yZXNldCgpO1xuICAgIHRoaXMuZmlsdGVyQ2hhbmdlJFxuICAgICAgLnBpcGUoXG4gICAgICAgIGRlYm91bmNlKChldmVudDogYW55KSA9PlxuICAgICAgICAgIGV2ZW50LmNvZGUgPT09IHRoaXMuQ0FSUklBR0VfUkVUVVJOX0NPREUgfHwgZXZlbnQua2V5Q29kZSA9PT0gdGhpcy5DQVJSSUFHRV9SRVRVUk5fS0VZXG4gICAgICAgICAgICA/IHRpbWVyKDEwKVxuICAgICAgICAgICAgOiB0aW1lcigzMDApXG4gICAgICAgICksXG4gICAgICAgIG1hcCgoZTogYW55KSA9PiBlLnRhcmdldC52YWx1ZSksXG4gICAgICAgIGRpc3RpbmN0VW50aWxDaGFuZ2VkKClcbiAgICAgIClcbiAgICAgIC5zdWJzY3JpYmUoZmlsdGVyVGVybSA9PiB7XG4gICAgICAgIHRoaXMuZmlsdGVyVGVybSA9IGZpbHRlclRlcm07XG4gICAgICAgIHRoaXMub25TZWFyY2guZW1pdChmaWx0ZXJUZXJtKTtcbiAgICAgIH0pO1xuICB9XG5cbiAgcmVzZXQoKSB7XG4gICAgdGhpcy5maWx0ZXJUZXJtID0gJyc7XG4gICAgdGhpcy5vblNlYXJjaC5lbWl0KCcnKTtcbiAgfVxuXG4gIG5nT25EZXN0cm95KCk6IHZvaWQge1xuICAgIHRoaXMuZmlsdGVyQ2hhbmdlJC5jb21wbGV0ZSgpO1xuICB9XG59XG4iXX0=