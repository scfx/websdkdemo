import { NG_VALIDATORS } from '@angular/forms';
import { Directive, Input } from '@angular/core';
import { isUndefined, isFinite } from 'lodash-es';
import * as ɵngcc0 from '@angular/core';
export class MinValidationDirective {
    constructor() {
        this.min = '';
    }
    validate(control) {
        const parsedMin = parseInt(this.min, 10);
        if (isUndefined(control.value) || !isFinite(parsedMin)) {
            return null;
        }
        let valid = true;
        valid = (control.value !== null) ? !(control.value < parsedMin) : true;
        return valid ? null : { min: { value: parsedMin } };
    }
}
MinValidationDirective.ɵfac = function MinValidationDirective_Factory(t) { return new (t || MinValidationDirective)(); };
MinValidationDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MinValidationDirective, selectors: [["", "min", ""]], inputs: { min: "min" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: NG_VALIDATORS, useExisting: MinValidationDirective, multi: true }])] });
MinValidationDirective.propDecorators = {
    min: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MinValidationDirective, [{
        type: Directive,
        args: [{
                selector: '[min]',
                providers: [{ provide: NG_VALIDATORS, useExisting: MinValidationDirective, multi: true }]
            }]
    }], function () { return []; }, { min: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWluLXZhbGlkYXRpb24uZGlyZWN0aXZlLmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9jb3JlL2Zvcm1zL21pbi12YWxpZGF0aW9uLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQW1CLGFBQWEsRUFBYSxNQUFNLGdCQUFnQixDQUFDO0FBQzNFLE9BQU8sRUFBRSxTQUFTLEVBQWMsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTdELE9BQU8sRUFBRSxXQUFXLEVBQUUsUUFBUSxFQUFFLE1BQU0sV0FBVyxDQUFDOztBQU1sRCxNQUFNLE9BQU8sc0JBQXNCO0FBQUcsSUFKdEM7QUFDRyxRQUlRLFFBQUcsR0FBVyxFQUFFLENBQUM7QUFDNUIsSUFXQSxDQUFDO0FBQ0QsSUFYRSxRQUFRLENBQUMsT0FBd0I7QUFBSSxRQUNuQyxNQUFNLFNBQVMsR0FBRyxRQUFRLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUMsQ0FBQztBQUM3QyxRQUFJLElBQUksV0FBVyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsRUFBRTtBQUM1RCxZQUFNLE9BQU8sSUFBSSxDQUFDO0FBQ2xCLFNBQUs7QUFDTCxRQUNJLElBQUksS0FBSyxHQUFHLElBQUksQ0FBQztBQUNyQixRQUFJLEtBQUssR0FBRyxDQUFDLE9BQU8sQ0FBQyxLQUFLLEtBQUssSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsS0FBSyxHQUFHLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7QUFDM0UsUUFBSSxPQUFPLEtBQUssQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFDLEdBQUcsRUFBRSxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUUsRUFBRSxDQUFDO0FBQ3ZELElBQUUsQ0FBQztBQUNIO2tEQWpCQyxTQUFTLFNBQUMsa0JBQ1QsUUFBUSxFQUFFLE9BQU8sa0JBQ2pCO1FBQVMsRUFBRSxDQUFDLEVBQUMsT0FBTyxFQUFFLGFBQWEsRUFBRSxXQUFXLEVBQUUsc0JBQXNCLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBQyxDQUFDLGNBQ3hGLDhLQUNJO0FBQUM7QUFBMEMsa0JBQzdDLEtBQUs7QUFBSTs7Ozs7Ozs7O29CQUFFO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBYnN0cmFjdENvbnRyb2wsIE5HX1ZBTElEQVRPUlMsIFZhbGlkYXRvciB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7IERpcmVjdGl2ZSwgRWxlbWVudFJlZiwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgaXNVbmRlZmluZWQsIGlzRmluaXRlIH0gZnJvbSAnbG9kYXNoLWVzJztcblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW21pbl0nLFxuICBwcm92aWRlcnM6IFt7cHJvdmlkZTogTkdfVkFMSURBVE9SUywgdXNlRXhpc3Rpbmc6IE1pblZhbGlkYXRpb25EaXJlY3RpdmUsIG11bHRpOiB0cnVlfV1cbn0pXG5leHBvcnQgY2xhc3MgTWluVmFsaWRhdGlvbkRpcmVjdGl2ZSBpbXBsZW1lbnRzIFZhbGlkYXRvciB7XG4gIEBJbnB1dCgpIG1pbjogc3RyaW5nID0gJyc7XG5cbiAgdmFsaWRhdGUoY29udHJvbDogQWJzdHJhY3RDb250cm9sKToge1trZXk6IHN0cmluZ106IGFueX0gfCBudWxsIHtcbiAgICBjb25zdCBwYXJzZWRNaW4gPSBwYXJzZUludCh0aGlzLm1pbiwgMTApO1xuICAgIGlmIChpc1VuZGVmaW5lZChjb250cm9sLnZhbHVlKSB8fCAhaXNGaW5pdGUocGFyc2VkTWluKSkge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuXG4gICAgbGV0IHZhbGlkID0gdHJ1ZTtcbiAgICB2YWxpZCA9IChjb250cm9sLnZhbHVlICE9PSBudWxsKSA/ICEoY29udHJvbC52YWx1ZSA8IHBhcnNlZE1pbikgOiB0cnVlO1xuICAgIHJldHVybiB2YWxpZCA/IG51bGwgOiB7bWluOiB7IHZhbHVlOiBwYXJzZWRNaW4gfSB9O1xuICB9XG59XG4iXX0=