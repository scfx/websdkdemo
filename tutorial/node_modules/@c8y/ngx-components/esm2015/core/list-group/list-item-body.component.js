import { Component, Input } from '@angular/core';
/**
 * The li-body component can be used to define the body.
 * Usually it doesn't need to be used, as it is the default
 * content projected to a <c8y-li>.
 */
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';

function ListItemBodyComponent_span_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r0.body);
} }
const _c0 = ["*"];
export class ListItemBodyComponent {
}
ListItemBodyComponent.ɵfac = function ListItemBodyComponent_Factory(t) { return new (t || ListItemBodyComponent)(); };
ListItemBodyComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ListItemBodyComponent, selectors: [["c8y-list-item-body"], ["c8y-li-body"]], inputs: { body: "body" }, ngContentSelectors: _c0, decls: 2, vars: 1, consts: [[4, "ngIf"]], template: function ListItemBodyComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵtemplate(0, ListItemBodyComponent_span_0_Template, 2, 1, "span", 0);
        ɵngcc0.ɵɵprojection(1);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.body);
    } }, directives: [ɵngcc1.NgIf], encapsulation: 2 });
ListItemBodyComponent.propDecorators = {
    body: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ListItemBodyComponent, [{
        type: Component,
        args: [{
                selector: 'c8y-list-item-body, c8y-li-body',
                template: "<span *ngIf=\"body\">{{body}}</span>\n<ng-content></ng-content>\n"
            }]
    }], null, { body: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdC1pdGVtLWJvZHkuY29tcG9uZW50LmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9jb3JlL2xpc3QtZ3JvdXAvbGlzdC1pdGVtLWJvZHkuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRWpEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7Ozs7Ozs7Ozs7Ozs7QUFLSCxNQUFNLE9BQU8scUJBQXFCO0FBQ2xDO2lEQUxDLFNBQVMsU0FBQyxrQkFDVCxRQUFRLEVBQUU7U0FBaUMsa0JBQzNDLDZFQUE4QyxjQUMvQzs7Ozs7O3dEQUNJO0FBQUM7QUFFRixtQkFFRCxLQUFLO0FBQ1A7Ozs7Ozs7OztvQkFBRTtBQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG4vKipcbiAqIFRoZSBsaS1ib2R5IGNvbXBvbmVudCBjYW4gYmUgdXNlZCB0byBkZWZpbmUgdGhlIGJvZHkuXG4gKiBVc3VhbGx5IGl0IGRvZXNuJ3QgbmVlZCB0byBiZSB1c2VkLCBhcyBpdCBpcyB0aGUgZGVmYXVsdFxuICogY29udGVudCBwcm9qZWN0ZWQgdG8gYSA8Yzh5LWxpPi5cbiAqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYzh5LWxpc3QtaXRlbS1ib2R5LCBjOHktbGktYm9keScsXG4gIHRlbXBsYXRlVXJsOiAnLi9saXN0LWl0ZW0tYm9keS5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgTGlzdEl0ZW1Cb2R5Q29tcG9uZW50IHtcbiAgLyoqXG4gICAqIEFuIG9wdGlvbmFsIHN0cmluZyBjb250ZW50LlxuICAgKi9cbiAgQElucHV0KClcbiAgYm9keTogc3RyaW5nO1xufVxuIl19