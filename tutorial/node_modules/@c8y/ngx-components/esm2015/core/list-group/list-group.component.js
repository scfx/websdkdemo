import { Component, HostBinding, ContentChild } from '@angular/core';
import { ListItemTimelineComponent } from './list-item-timeline.component';
/**
 * List groups are flexible and powerful components for displaying
 * both simple lists of elements and complex ones with custom content.
 *
 * @example
 * ```html
 * <c8y-list-group>
 *   <c8y-li>
 *     Plain <strong>Text</strong>
 *   </c8y-li>
 *   <c8y-li>
 *     <c8y-li-icon [icon]="'rocket'"></c8y-li-icon>
 *     Icon
 *   </c8y-li>
 *   <c8y-li>
 *     <c8y-li-radio></c8y-li-radio>
 *     Radio
 *   </c8y-li>
 *   <c8y-li>
 *     <c8y-li-checkbox></c8y-li-checkbox>
 *     Checkbox
 *   </c8y-li>
 *   <c8y-li>
 *     Content
 *     <c8y-li-footer>
 *       Footer
 *     </c8y-li-footer>
 *   </c8y-li>
 *   <c8y-li>
 *     Content
 *     <c8y-li-action icon="rocket">
 *       Launch
 *     </c8y-li-action>
 *   </c8y-li>
 *   <c8y-li>
 *     Content
 *     <c8y-li-collapse>
 *       Collapsed content
 *     </c8y-li-collapse>
 *   </c8y-li>
 * </c8y-list-group>
 * ```
 */
import * as ɵngcc0 from '@angular/core';

const _c0 = ["*"];
export class ListGroupComponent {
    constructor() {
        /**
         * @ignore
         */
        this.timeline = false;
    }
    /**
     * @ignore
     */
    ngAfterContentChecked() {
        this.timeline = !!this.timelineComponent;
    }
}
ListGroupComponent.ɵfac = function ListGroupComponent_Factory(t) { return new (t || ListGroupComponent)(); };
ListGroupComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ListGroupComponent, selectors: [["c8y-list-group"]], contentQueries: function ListGroupComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, ListItemTimelineComponent, 5);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.timelineComponent = _t.first);
    } }, hostAttrs: [1, "c8y-list__group"], hostVars: 2, hostBindings: function ListGroupComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("c8y-list--timeline", ctx.timeline);
    } }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ListGroupComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2 });
ListGroupComponent.propDecorators = {
    timeline: [{ type: HostBinding, args: ['class.c8y-list--timeline',] }],
    timelineComponent: [{ type: ContentChild, args: [ListItemTimelineComponent, { static: false },] }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ListGroupComponent, [{
        type: Component,
        args: [{
                selector: 'c8y-list-group',
                template: "<ng-content></ng-content>\n\n",
                host: {
                    class: 'c8y-list__group'
                }
            }]
    }], function () { return []; }, { timeline: [{
            type: HostBinding,
            args: ['class.c8y-list--timeline']
        }], timelineComponent: [{
            type: ContentChild,
            args: [ListItemTimelineComponent, { static: false }]
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdC1ncm91cC5jb21wb25lbnQuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2NvcmUvbGlzdC1ncm91cC9saXN0LWdyb3VwLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFdBQVcsRUFBRSxZQUFZLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDckUsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFFM0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7OztBQVFILE1BQU0sT0FBTyxrQkFBa0I7QUFDL0IsSUFSQTtBQUNHLFFBT0Q7QUFDRjtBQUVBLFdBREs7QUFDTCxRQUNFLGFBQVEsR0FBWSxLQUFLLENBQUM7QUFDNUIsSUEwQkEsQ0FBQztBQUNELElBUEU7QUFDRjtBQUNFLE9BQUc7QUFDTCxJQUFFLHFCQUFxQjtBQUFLLFFBQ3hCLElBQUksQ0FBQyxRQUFRLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxpQkFBaUIsQ0FBQztBQUM3QyxJQUFFLENBQUM7QUFDSDs4Q0F2Q0MsU0FBUyxTQUFDLGtCQUNULFFBQVEsRUFBRSxnQkFBZ0I7Z0JBQzFCLHlDQUEwQyxrQkFDMUMsSUFBSSxFQUFFLHNCQUNKLEtBQUssRUFBRSxpQkFBaUIsa0JBQ3pCLGNBQ0Y7Ozs7Ozs7Ozs7NkJBQ0k7QUFBQztBQUVGLHVCQUVELFdBQVcsU0FBQywwQkFBMEI7QUFDcEMsZ0NBa0JGLFlBQVksU0FBQyx5QkFBeUIsRUFBRSxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUU7QUFDeEQ7Ozs7Ozs7Ozs7Ozs7Ozs7b0JBQUU7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSG9zdEJpbmRpbmcsIENvbnRlbnRDaGlsZCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTGlzdEl0ZW1UaW1lbGluZUNvbXBvbmVudCB9IGZyb20gJy4vbGlzdC1pdGVtLXRpbWVsaW5lLmNvbXBvbmVudCc7XG5cbi8qKlxuICogTGlzdCBncm91cHMgYXJlIGZsZXhpYmxlIGFuZCBwb3dlcmZ1bCBjb21wb25lbnRzIGZvciBkaXNwbGF5aW5nXG4gKiBib3RoIHNpbXBsZSBsaXN0cyBvZiBlbGVtZW50cyBhbmQgY29tcGxleCBvbmVzIHdpdGggY3VzdG9tIGNvbnRlbnQuXG4gKlxuICogQGV4YW1wbGVcbiAqIGBgYGh0bWxcbiAqIDxjOHktbGlzdC1ncm91cD5cbiAqICAgPGM4eS1saT5cbiAqICAgICBQbGFpbiA8c3Ryb25nPlRleHQ8L3N0cm9uZz5cbiAqICAgPC9jOHktbGk+XG4gKiAgIDxjOHktbGk+XG4gKiAgICAgPGM4eS1saS1pY29uIFtpY29uXT1cIidyb2NrZXQnXCI+PC9jOHktbGktaWNvbj5cbiAqICAgICBJY29uXG4gKiAgIDwvYzh5LWxpPlxuICogICA8Yzh5LWxpPlxuICogICAgIDxjOHktbGktcmFkaW8+PC9jOHktbGktcmFkaW8+XG4gKiAgICAgUmFkaW9cbiAqICAgPC9jOHktbGk+XG4gKiAgIDxjOHktbGk+XG4gKiAgICAgPGM4eS1saS1jaGVja2JveD48L2M4eS1saS1jaGVja2JveD5cbiAqICAgICBDaGVja2JveFxuICogICA8L2M4eS1saT5cbiAqICAgPGM4eS1saT5cbiAqICAgICBDb250ZW50XG4gKiAgICAgPGM4eS1saS1mb290ZXI+XG4gKiAgICAgICBGb290ZXJcbiAqICAgICA8L2M4eS1saS1mb290ZXI+XG4gKiAgIDwvYzh5LWxpPlxuICogICA8Yzh5LWxpPlxuICogICAgIENvbnRlbnRcbiAqICAgICA8Yzh5LWxpLWFjdGlvbiBpY29uPVwicm9ja2V0XCI+XG4gKiAgICAgICBMYXVuY2hcbiAqICAgICA8L2M4eS1saS1hY3Rpb24+XG4gKiAgIDwvYzh5LWxpPlxuICogICA8Yzh5LWxpPlxuICogICAgIENvbnRlbnRcbiAqICAgICA8Yzh5LWxpLWNvbGxhcHNlPlxuICogICAgICAgQ29sbGFwc2VkIGNvbnRlbnRcbiAqICAgICA8L2M4eS1saS1jb2xsYXBzZT5cbiAqICAgPC9jOHktbGk+XG4gKiA8L2M4eS1saXN0LWdyb3VwPlxuICogYGBgXG4gKi9cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2M4eS1saXN0LWdyb3VwJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2xpc3QtZ3JvdXAuY29tcG9uZW50Lmh0bWwnLFxuICBob3N0OiB7XG4gICAgY2xhc3M6ICdjOHktbGlzdF9fZ3JvdXAnXG4gIH1cbn0pXG5leHBvcnQgY2xhc3MgTGlzdEdyb3VwQ29tcG9uZW50IHtcbiAgLyoqXG4gICAqIEBpZ25vcmVcbiAgICovXG4gIEBIb3N0QmluZGluZygnY2xhc3MuYzh5LWxpc3QtLXRpbWVsaW5lJylcbiAgdGltZWxpbmU6IGJvb2xlYW4gPSBmYWxzZTtcblxuICAvKipcbiAgICogRGlzcGxheXMgdGhlIGN1cnJlbnQgbGlzdCBhcyBhIHRpbWVsaW5lLiBCZXN0IHVzZWRcbiAgICogd2l0aCBjb250ZW50IHByb2plY3Rpb24uXG4gICAqXG4gICAqIEBleGFtcGxlXG4gICAqIGBgYGh0bWxcbiAgICogPGM4eS1saXN0LWdyb3VwPlxuICAgKiAgIDxjOHktbGktdGltZWxpbmU+XG4gICAqICAgICAyNC5BcHJpbCAyMDIwXG4gICAqICAgICA8Yzh5LWxpPlxuICAgKiAgICAgICBIZWxsb1xuICAgKiAgICAgPC9jOHktbGk+XG4gICAqICAgPC9jOHktbGktdGltZWxpbmU+XG4gICAqIDwvYzh5LWxpc3QtZ3JvdXA+XG4gICAqIGBgYFxuICAgKi9cbiAgQENvbnRlbnRDaGlsZChMaXN0SXRlbVRpbWVsaW5lQ29tcG9uZW50LCB7IHN0YXRpYzogZmFsc2UgfSlcbiAgdGltZWxpbmVDb21wb25lbnQ6IExpc3RJdGVtVGltZWxpbmVDb21wb25lbnQ7XG5cbiAgLyoqXG4gICAqIEBpZ25vcmVcbiAgICovXG4gIG5nQWZ0ZXJDb250ZW50Q2hlY2tlZCgpOiB2b2lkIHtcbiAgICB0aGlzLnRpbWVsaW5lID0gISF0aGlzLnRpbWVsaW5lQ29tcG9uZW50O1xuICB9XG59XG4iXX0=