import { Component, EventEmitter, Input, Output, ViewChild, forwardRef } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
/**
 * A component to display a radio button in a c8y-li. Use it with content projection. It
 * can be used standalone or with an ngModel.
 *
 * @example
 * ```html
 * <c8y-li>
 *   <c8y-li-radio></c8y-li-radio>
 * </c8y-li>
 * ```
 */
import * as ɵngcc0 from '@angular/core';

const _c0 = ["radio"];
const _c1 = ["*"];
export class ListItemRadioComponent {
    constructor() {
        /**
         * Indicates if the radio is selected.
         */
        this.selected = false;
        /**
         * The name of the radio (use different names for different radio groups).
         */
        this.name = 'list_item_radio';
        /**
         * Indicates if the radio is disabled.
         */
        this.disabled = false;
        /**
         * An event emitted as soon as the radio is selected.
         */
        this.onSelect = new EventEmitter();
    }
    /**
     * Resets the native radio element.
     */
    reset() {
        this.radio.nativeElement.checked = false;
    }
    /**
     * @ignore
     */
    ngOnChanges(changes) {
        if (changes.selected && !changes.selected.firstChange) {
            this.onSelect.emit(changes.selected.currentValue);
        }
    }
    /**
     * Triggered when the radio is changed.
     * @param checked Should it be checked or not?
     */
    change(checked) {
        this.onSelect.emit(checked);
        this.model = this.value;
        if (this.onChange) {
            this.onChange(this.model);
        }
        if (this.onTouched) {
            this.onTouched();
        }
    }
    /**
     * Registers an onChange event.
     */
    registerOnChange(fn) {
        this.onChange = fn;
    }
    /**
     * Registers an onTouch event.
     */
    registerOnTouched(fn) {
        this.onTouched = fn;
    }
    /**
     * @ignore
     */
    writeValue(value) {
        this.model = value;
    }
}
ListItemRadioComponent.ɵfac = function ListItemRadioComponent_Factory(t) { return new (t || ListItemRadioComponent)(); };
ListItemRadioComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ListItemRadioComponent, selectors: [["c8y-list-item-radio"], ["c8y-li-radio"]], viewQuery: function ListItemRadioComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c0, 7);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.radio = _t.first);
    } }, hostAttrs: [1, "c8y-list__item__radio"], inputs: { selected: "selected", name: "name", disabled: "disabled", value: "value" }, outputs: { onSelect: "onSelect" }, features: [ɵngcc0.ɵɵProvidersFeature([
            {
                provide: NG_VALUE_ACCESSOR,
                multi: true,
                useExisting: forwardRef(() => ListItemRadioComponent)
            }
        ]), ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c1, decls: 5, vars: 3, consts: [[1, "c8y-radio"], ["type", "radio", 3, "name", "checked", "disabled", "change"], ["radio", ""]], template: function ListItemRadioComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "label", 0);
        ɵngcc0.ɵɵelementStart(1, "input", 1, 2);
        ɵngcc0.ɵɵlistener("change", function ListItemRadioComponent_Template_input_change_1_listener($event) { ctx.change($event.target.checked); return false; });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(3, "span");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵprojection(4);
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("name", ctx.name)("checked", ctx.selected)("disabled", ctx.disabled);
    } }, encapsulation: 2 });
ListItemRadioComponent.propDecorators = {
    radio: [{ type: ViewChild, args: ['radio', { static: true },] }],
    selected: [{ type: Input }],
    name: [{ type: Input }],
    disabled: [{ type: Input }],
    onSelect: [{ type: Output }],
    value: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ListItemRadioComponent, [{
        type: Component,
        args: [{
                selector: 'c8y-list-item-radio, c8y-li-radio',
                template: "<label class=\"c8y-radio\">\n  <input\n    #radio\n    type=\"radio\"\n    [name]=\"name\"\n    [checked]=\"selected\"\n    (change)=\"change($event.target.checked); (false)\"\n    [disabled]=\"disabled\"\n  />\n  <span></span>\n</label>\n<ng-content></ng-content>\n",
                host: {
                    class: 'c8y-list__item__radio'
                },
                providers: [
                    {
                        provide: NG_VALUE_ACCESSOR,
                        multi: true,
                        useExisting: forwardRef(() => ListItemRadioComponent)
                    }
                ]
            }]
    }], function () { return []; }, { selected: [{
            type: Input
        }], name: [{
            type: Input
        }], disabled: [{
            type: Input
        }], onSelect: [{
            type: Output
        }], radio: [{
            type: ViewChild,
            args: ['radio', { static: true }]
        }], value: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdC1pdGVtLXJhZGlvLmNvbXBvbmVudC5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vY29yZS9saXN0LWdyb3VwL2xpc3QtaXRlbS1yYWRpby5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNMLFNBQVMsRUFFVCxZQUFZLEVBQ1osS0FBSyxFQUNMLE1BQU0sRUFFTixTQUFTLEVBQ1QsVUFBVSxFQUNYLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBd0IsaUJBQWlCLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUV6RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7Ozs7O0FBZUgsTUFBTSxPQUFPLHNCQUFzQjtBQUFHLElBZHRDO0FBQ0csUUFrQkQ7QUFDRjtBQUVBLFdBREs7QUFDTCxRQUNFLGFBQVEsR0FBRyxLQUFLLENBQUM7QUFDbkIsUUFBRTtBQUNGO0FBRUEsV0FESztBQUNMLFFBQ0UsU0FBSSxHQUFHLGlCQUFpQixDQUFDO0FBQzNCLFFBQUU7QUFDRjtBQUVBLFdBREs7QUFDTCxRQUNFLGFBQVEsR0FBWSxLQUFLLENBQUM7QUFDNUIsUUFBRTtBQUNGO0FBRUEsV0FESztBQUNMLFFBQ0UsYUFBUSxHQUFHLElBQUksWUFBWSxFQUFXLENBQUM7QUFDekMsSUFvRUEsQ0FBQztBQUNELElBcERFO0FBQ0Y7QUFDRSxPQUFHO0FBQ0wsSUFBRSxLQUFLO0FBQ1AsUUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLGFBQWEsQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDO0FBQzdDLElBQUUsQ0FBQztBQUNILElBQ0U7QUFDRjtBQUNFLE9BQUc7QUFDTCxJQUFFLFdBQVcsQ0FBQyxPQUFzQjtBQUFJLFFBQ3BDLElBQUksT0FBTyxDQUFDLFFBQVEsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsV0FBVyxFQUFFO0FBQzNELFlBQU0sSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxZQUFZLENBQUMsQ0FBQztBQUN4RCxTQUFLO0FBQ0wsSUFBRSxDQUFDO0FBQ0gsSUFDRTtBQUNGO0FBQ0U7QUFDRSxPQUFDO0FBQ0wsSUFBRSxNQUFNLENBQUMsT0FBTztBQUNoQixRQUFJLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0FBQ2hDLFFBQUksSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDO0FBQzVCLFFBQUksSUFBSSxJQUFJLENBQUMsUUFBUSxFQUFFO0FBQ3ZCLFlBQU0sSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7QUFDaEMsU0FBSztBQUNMLFFBQUksSUFBSSxJQUFJLENBQUMsU0FBUyxFQUFFO0FBQ3hCLFlBQU0sSUFBSSxDQUFDLFNBQVMsRUFBRSxDQUFDO0FBQ3ZCLFNBQUs7QUFDTCxJQUFFLENBQUM7QUFDSCxJQUNFO0FBQ0Y7QUFDRSxPQUFHO0FBQ0wsSUFBRSxnQkFBZ0IsQ0FBQyxFQUFPO0FBQUksUUFDMUIsSUFBSSxDQUFDLFFBQVEsR0FBRyxFQUFFLENBQUM7QUFDdkIsSUFBRSxDQUFDO0FBQ0gsSUFDRTtBQUNGO0FBQ0UsT0FBRztBQUNMLElBQUUsaUJBQWlCLENBQUMsRUFBTztBQUFJLFFBQzNCLElBQUksQ0FBQyxTQUFTLEdBQUcsRUFBRSxDQUFDO0FBQ3hCLElBQUUsQ0FBQztBQUNILElBQ0U7QUFDRjtBQUNFLE9BQUc7QUFDTCxJQUFFLFVBQVUsQ0FBQyxLQUFjO0FBQUksUUFDM0IsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7QUFDdkIsSUFBRSxDQUFDO0FBQ0g7a0RBM0dDLFNBQVMsU0FBQyxrQkFDVCxRQUFRLEVBQUU7U0FBbUMsa0JBQzdDOzs7O0VBQStDLGtCQUMvQyxJQUFJLEVBQUUsc0JBQ0osS0FBSyxFQUFFLHVCQUF1QjtZQUMvQixrQkFDRCxTQUFTLEVBQUUsc0JBQ1QsMEJBQ0UsT0FBTyxFQUFFLGlCQUFpQiwwQkFDMUIsS0FBSyxFQUFFLElBQUksMEJBQ1gsV0FBVyxFQUFFLFVBQVUsQ0FBQyxHQUFHLEVBQUUsQ0FBQzs7TUFBc0IsQ0FBQyxzQkFDdEQ7R0FDRixjQUNGOzs7Ozs7Ozs7Ozs7Ozs7NkJBQ0k7QUFBQztBQUEwQyxvQkFJN0MsU0FBUyxTQUFDLE9BQU8sRUFBRSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUU7QUFBTyx1QkFJMUMsS0FBSztBQUNOLG1CQUlDLEtBQUs7QUFDTix1QkFJQyxLQUFLO0FBQ04sdUJBSUMsTUFBTTtBQUNQLG9CQUlDLEtBQUs7QUFBSTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O29CQUFFO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBDb21wb25lbnQsXG4gIEVsZW1lbnRSZWYsXG4gIEV2ZW50RW1pdHRlcixcbiAgSW5wdXQsXG4gIE91dHB1dCxcbiAgU2ltcGxlQ2hhbmdlcyxcbiAgVmlld0NoaWxkLFxuICBmb3J3YXJkUmVmXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29udHJvbFZhbHVlQWNjZXNzb3IsIE5HX1ZBTFVFX0FDQ0VTU09SIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuXG4vKipcbiAqIEEgY29tcG9uZW50IHRvIGRpc3BsYXkgYSByYWRpbyBidXR0b24gaW4gYSBjOHktbGkuIFVzZSBpdCB3aXRoIGNvbnRlbnQgcHJvamVjdGlvbi4gSXRcbiAqIGNhbiBiZSB1c2VkIHN0YW5kYWxvbmUgb3Igd2l0aCBhbiBuZ01vZGVsLlxuICpcbiAqIEBleGFtcGxlXG4gKiBgYGBodG1sXG4gKiA8Yzh5LWxpPlxuICogICA8Yzh5LWxpLXJhZGlvPjwvYzh5LWxpLXJhZGlvPlxuICogPC9jOHktbGk+XG4gKiBgYGBcbiAqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYzh5LWxpc3QtaXRlbS1yYWRpbywgYzh5LWxpLXJhZGlvJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2xpc3QtaXRlbS1yYWRpby5jb21wb25lbnQuaHRtbCcsXG4gIGhvc3Q6IHtcbiAgICBjbGFzczogJ2M4eS1saXN0X19pdGVtX19yYWRpbydcbiAgfSxcbiAgcHJvdmlkZXJzOiBbXG4gICAge1xuICAgICAgcHJvdmlkZTogTkdfVkFMVUVfQUNDRVNTT1IsXG4gICAgICBtdWx0aTogdHJ1ZSxcbiAgICAgIHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IExpc3RJdGVtUmFkaW9Db21wb25lbnQpXG4gICAgfVxuICBdXG59KVxuZXhwb3J0IGNsYXNzIExpc3RJdGVtUmFkaW9Db21wb25lbnQgaW1wbGVtZW50cyBDb250cm9sVmFsdWVBY2Nlc3NvciB7XG4gIC8qKlxuICAgKiBAaWdub3JlXG4gICAqL1xuICBAVmlld0NoaWxkKCdyYWRpbycsIHsgc3RhdGljOiB0cnVlIH0pIHJhZGlvOiBFbGVtZW50UmVmO1xuICAvKipcbiAgICogSW5kaWNhdGVzIGlmIHRoZSByYWRpbyBpcyBzZWxlY3RlZC5cbiAgICovXG4gIEBJbnB1dCgpXG4gIHNlbGVjdGVkID0gZmFsc2U7XG4gIC8qKlxuICAgKiBUaGUgbmFtZSBvZiB0aGUgcmFkaW8gKHVzZSBkaWZmZXJlbnQgbmFtZXMgZm9yIGRpZmZlcmVudCByYWRpbyBncm91cHMpLlxuICAgKi9cbiAgQElucHV0KClcbiAgbmFtZSA9ICdsaXN0X2l0ZW1fcmFkaW8nO1xuICAvKipcbiAgICogSW5kaWNhdGVzIGlmIHRoZSByYWRpbyBpcyBkaXNhYmxlZC5cbiAgICovXG4gIEBJbnB1dCgpXG4gIGRpc2FibGVkOiBib29sZWFuID0gZmFsc2U7XG4gIC8qKlxuICAgKiBBbiBldmVudCBlbWl0dGVkIGFzIHNvb24gYXMgdGhlIHJhZGlvIGlzIHNlbGVjdGVkLlxuICAgKi9cbiAgQE91dHB1dCgpXG4gIG9uU2VsZWN0ID0gbmV3IEV2ZW50RW1pdHRlcjxib29sZWFuPigpO1xuICAvKipcbiAgICogVGhlIGN1cnJlbnQgdmFsdWUuXG4gICAqL1xuICBASW5wdXQoKSB2YWx1ZTogYW55O1xuICAvKipcbiAgICogQGlnbm9yZVxuICAgKi9cbiAgbW9kZWw6IGFueTtcbiAgLyoqXG4gICAqIEBpZ25vcmVcbiAgICovXG4gIG9uQ2hhbmdlOiAodmFsdWU6IGFueSkgPT4gdm9pZDtcbiAgLyoqXG4gICAqIEBpZ25vcmVcbiAgICovXG4gIG9uVG91Y2hlZDogKCkgPT4gdm9pZDtcblxuICAvKipcbiAgICogUmVzZXRzIHRoZSBuYXRpdmUgcmFkaW8gZWxlbWVudC5cbiAgICovXG4gIHJlc2V0KCkge1xuICAgIHRoaXMucmFkaW8ubmF0aXZlRWxlbWVudC5jaGVja2VkID0gZmFsc2U7XG4gIH1cblxuICAvKipcbiAgICogQGlnbm9yZVxuICAgKi9cbiAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcyk6IHZvaWQge1xuICAgIGlmIChjaGFuZ2VzLnNlbGVjdGVkICYmICFjaGFuZ2VzLnNlbGVjdGVkLmZpcnN0Q2hhbmdlKSB7XG4gICAgICB0aGlzLm9uU2VsZWN0LmVtaXQoY2hhbmdlcy5zZWxlY3RlZC5jdXJyZW50VmFsdWUpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBUcmlnZ2VyZWQgd2hlbiB0aGUgcmFkaW8gaXMgY2hhbmdlZC5cbiAgICogQHBhcmFtIGNoZWNrZWQgU2hvdWxkIGl0IGJlIGNoZWNrZWQgb3Igbm90P1xuICAgKi9cbiAgY2hhbmdlKGNoZWNrZWQpIHtcbiAgICB0aGlzLm9uU2VsZWN0LmVtaXQoY2hlY2tlZCk7XG4gICAgdGhpcy5tb2RlbCA9IHRoaXMudmFsdWU7XG4gICAgaWYgKHRoaXMub25DaGFuZ2UpIHtcbiAgICAgIHRoaXMub25DaGFuZ2UodGhpcy5tb2RlbCk7XG4gICAgfVxuICAgIGlmICh0aGlzLm9uVG91Y2hlZCkge1xuICAgICAgdGhpcy5vblRvdWNoZWQoKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogUmVnaXN0ZXJzIGFuIG9uQ2hhbmdlIGV2ZW50LlxuICAgKi9cbiAgcmVnaXN0ZXJPbkNoYW5nZShmbjogYW55KTogdm9pZCB7XG4gICAgdGhpcy5vbkNoYW5nZSA9IGZuO1xuICB9XG5cbiAgLyoqXG4gICAqIFJlZ2lzdGVycyBhbiBvblRvdWNoIGV2ZW50LlxuICAgKi9cbiAgcmVnaXN0ZXJPblRvdWNoZWQoZm46IGFueSk6IHZvaWQge1xuICAgIHRoaXMub25Ub3VjaGVkID0gZm47XG4gIH1cblxuICAvKipcbiAgICogQGlnbm9yZVxuICAgKi9cbiAgd3JpdGVWYWx1ZSh2YWx1ZTogYm9vbGVhbik6IHZvaWQge1xuICAgIHRoaXMubW9kZWwgPSB2YWx1ZTtcbiAgfVxufVxuIl19