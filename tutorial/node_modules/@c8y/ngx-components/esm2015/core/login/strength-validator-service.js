import { Injectable } from '@angular/core';
import { PasswordService } from '../authentication';
import { PasswordStrength } from '@c8y/client';
import * as i0 from "@angular/core";
import * as i1 from "../authentication/password.service";
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../authentication';
export class StrengthValidatorService {
    constructor(passwordService) {
        this.passwordService = passwordService;
    }
    isStrong(password) {
        return this.isPasswordGreen(this.passwordService.getStrengthColor(password).passwordStrength);
    }
    isPasswordGreen(strength) {
        return strength === PasswordStrength.GREEN;
    }
}
StrengthValidatorService.ɵfac = function StrengthValidatorService_Factory(t) { return new (t || StrengthValidatorService)(ɵngcc0.ɵɵinject(ɵngcc1.PasswordService)); };
StrengthValidatorService.ɵprov = i0.ɵɵdefineInjectable({ factory: function StrengthValidatorService_Factory() { return new StrengthValidatorService(i0.ɵɵinject(i1.PasswordService)); }, token: StrengthValidatorService, providedIn: "root" });
StrengthValidatorService.ctorParameters = () => [
    { type: PasswordService }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(StrengthValidatorService, [{
        type: Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return [{ type: ɵngcc1.PasswordService }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RyZW5ndGgtdmFsaWRhdG9yLXNlcnZpY2UuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2NvcmUvbG9naW4vc3RyZW5ndGgtdmFsaWRhdG9yLXNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDcEQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sYUFBYSxDQUFDO0FBQy9DO0FBR0M7OztBQUNELE1BQU0sT0FBTyx3QkFBd0I7QUFDckMsSUFDRSxZQUFvQixlQUFnQztBQUN0RCxRQURzQixvQkFBZSxHQUFmLGVBQWUsQ0FBaUI7QUFBQyxJQUNyRCxDQUFDO0FBQ0gsSUFDRSxRQUFRLENBQUMsUUFBZ0I7QUFBSSxRQUMzQixPQUFPLElBQUksQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxnQkFBZ0IsQ0FBQyxRQUFRLENBQUMsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO0FBQ2xHLElBQUUsQ0FBQztBQUNILElBQ1UsZUFBZSxDQUFDLFFBQTBCO0FBQ3BELFFBQUksT0FBTyxRQUE0QixLQUFLLGdCQUFnQixDQUFDLEtBQXlCLENBQUM7QUFDdkYsSUFBRSxDQUFDO0FBQ0g7c0tBQUM7QUFDRCxnUEFiSztBQUFDO0VBSEwsVUFBVSxTQUFDLHJCQUtHLFlBUk4sZUFBZTtBQUFHO01BSXpCLFVBQVUsRUFBRSxNQUFNLGNBQ25COzs7OztnRkFMNEI7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFBhc3N3b3JkU2VydmljZSB9IGZyb20gJy4uL2F1dGhlbnRpY2F0aW9uJztcbmltcG9ydCB7IFBhc3N3b3JkU3RyZW5ndGggfSBmcm9tICdAYzh5L2NsaWVudCc7XG5cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnXG59KVxuZXhwb3J0IGNsYXNzIFN0cmVuZ3RoVmFsaWRhdG9yU2VydmljZSB7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBwYXNzd29yZFNlcnZpY2U6IFBhc3N3b3JkU2VydmljZSkge1xuICB9XG5cbiAgaXNTdHJvbmcocGFzc3dvcmQ6IHN0cmluZyk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLmlzUGFzc3dvcmRHcmVlbih0aGlzLnBhc3N3b3JkU2VydmljZS5nZXRTdHJlbmd0aENvbG9yKHBhc3N3b3JkKS5wYXNzd29yZFN0cmVuZ3RoKTtcbiAgfVxuXG4gIHByaXZhdGUgaXNQYXNzd29yZEdyZWVuKHN0cmVuZ3RoOiBQYXNzd29yZFN0cmVuZ3RoKSB7XG4gICAgcmV0dXJuIHN0cmVuZ3RoIGFzIFBhc3N3b3JkU3RyZW5ndGggPT09IFBhc3N3b3JkU3RyZW5ndGguR1JFRU4gYXMgUGFzc3dvcmRTdHJlbmd0aDtcbiAgfVxufVxuIl19