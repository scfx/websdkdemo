import { Directive, Input } from '@angular/core';
import { NG_VALIDATORS } from '@angular/forms';
import { StrengthValidatorService } from './strength-validator-service';
export class PasswordStrengthValidatorDirective {
    constructor(passwordService) {
        this.passwordService = passwordService;
    }
    set passwordStrengthEnforced(value) {
        this.forced = value;
    }
    validate(control) {
        const strengthFulfilled = this.passwordService.isStrong(control.value || '');
        const enforcementForcedAndNotFulfilled = this.forced && !strengthFulfilled;
        return enforcementForcedAndNotFulfilled ? { passwordStrength: true } : null;
    }
}
PasswordStrengthValidatorDirective.decorators = [
    { type: Directive, args: [{
                selector: '[passwordStrengthEnforced]',
                providers: [{ provide: NG_VALIDATORS, useExisting: PasswordStrengthValidatorDirective, multi: true }]
            },] }
];
PasswordStrengthValidatorDirective.ctorParameters = () => [
    { type: StrengthValidatorService }
];
PasswordStrengthValidatorDirective.propDecorators = {
    passwordStrengthEnforced: [{ type: Input }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFzc3dvcmQtc3RyZW5ndGgtdmFsaWRhdG9yLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2NvcmUvbG9naW4vcGFzc3dvcmQtc3RyZW5ndGgtdmFsaWRhdG9yLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNqRCxPQUFPLEVBQW1CLGFBQWEsRUFBK0IsTUFBTSxnQkFBZ0IsQ0FBQztBQUM3RixPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQU14RSxNQUFNLE9BQU8sa0NBQWtDO0lBUTdDLFlBQ1MsZUFBeUM7UUFBekMsb0JBQWUsR0FBZixlQUFlLENBQTBCO0lBQ2xELENBQUM7SUFORCxJQUFhLHdCQUF3QixDQUFDLEtBQUs7UUFDekMsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7SUFDdEIsQ0FBQztJQU1ELFFBQVEsQ0FBQyxPQUF3QjtRQUMvQixNQUFNLGlCQUFpQixHQUFHLElBQUksQ0FBQyxlQUFlLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxLQUFLLElBQUksRUFBRSxDQUFDLENBQUM7UUFDN0UsTUFBTSxnQ0FBZ0MsR0FBRyxJQUFJLENBQUMsTUFBTSxJQUFJLENBQUMsaUJBQWlCLENBQUM7UUFDM0UsT0FBTyxnQ0FBZ0MsQ0FBQyxDQUFDLENBQUMsRUFBRSxnQkFBZ0IsRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO0lBQzlFLENBQUM7OztZQXBCRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLDRCQUE0QjtnQkFDdEMsU0FBUyxFQUFFLENBQUMsRUFBRSxPQUFPLEVBQUUsYUFBYSxFQUFFLFdBQVcsRUFBRSxrQ0FBa0MsRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFLENBQUM7YUFDdEc7OztZQUxRLHdCQUF3Qjs7O3VDQVU5QixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQWJzdHJhY3RDb250cm9sLCBOR19WQUxJREFUT1JTLCBWYWxpZGF0aW9uRXJyb3JzLCBWYWxpZGF0b3IgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBTdHJlbmd0aFZhbGlkYXRvclNlcnZpY2UgfSBmcm9tICcuL3N0cmVuZ3RoLXZhbGlkYXRvci1zZXJ2aWNlJztcblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW3Bhc3N3b3JkU3RyZW5ndGhFbmZvcmNlZF0nLFxuICBwcm92aWRlcnM6IFt7IHByb3ZpZGU6IE5HX1ZBTElEQVRPUlMsIHVzZUV4aXN0aW5nOiBQYXNzd29yZFN0cmVuZ3RoVmFsaWRhdG9yRGlyZWN0aXZlLCBtdWx0aTogdHJ1ZSB9XVxufSlcbmV4cG9ydCBjbGFzcyBQYXNzd29yZFN0cmVuZ3RoVmFsaWRhdG9yRGlyZWN0aXZlIGltcGxlbWVudHMgVmFsaWRhdG9yIHtcblxuICBwcml2YXRlIGZvcmNlZDogYm9vbGVhbjtcblxuICBASW5wdXQoKSBzZXQgcGFzc3dvcmRTdHJlbmd0aEVuZm9yY2VkKHZhbHVlKSB7XG4gICAgdGhpcy5mb3JjZWQgPSB2YWx1ZTtcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHB1YmxpYyBwYXNzd29yZFNlcnZpY2U6IFN0cmVuZ3RoVmFsaWRhdG9yU2VydmljZSkge1xuICB9XG5cbiAgdmFsaWRhdGUoY29udHJvbDogQWJzdHJhY3RDb250cm9sKTogVmFsaWRhdGlvbkVycm9ycyB8IG51bGwge1xuICAgIGNvbnN0IHN0cmVuZ3RoRnVsZmlsbGVkID0gdGhpcy5wYXNzd29yZFNlcnZpY2UuaXNTdHJvbmcoY29udHJvbC52YWx1ZSB8fCAnJyk7XG4gICAgY29uc3QgZW5mb3JjZW1lbnRGb3JjZWRBbmROb3RGdWxmaWxsZWQgPSB0aGlzLmZvcmNlZCAmJiAhc3RyZW5ndGhGdWxmaWxsZWQ7XG4gICAgcmV0dXJuIGVuZm9yY2VtZW50Rm9yY2VkQW5kTm90RnVsZmlsbGVkID8geyBwYXNzd29yZFN0cmVuZ3RoOiB0cnVlIH0gOiBudWxsO1xuICB9XG5cbn1cbiJdfQ==