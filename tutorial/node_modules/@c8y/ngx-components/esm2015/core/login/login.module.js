import { NgModule } from '@angular/core';
import { FormsModule } from '@angular/forms';
import { FormsModule as C8yFormsModule } from '../forms/forms.module';
import { TooltipModule } from 'ngx-bootstrap/tooltip';
import { CommonModule } from '../common/common.module';
import { ChangePasswordComponent } from './change-password.component';
import { CredentialsComponent } from './credentials.component';
import { LoginComponent } from './login.component';
import { LoginService } from './login.service';
import { RecoverPasswordComponent } from './recover-password.component';
import { AuthenticationModule } from '../authentication/authentication.module';
import { AlertModule } from '../alert/alert.module';
import { TotpAuthComponent } from './totp-auth.component';
import { PasswordStrengthValidatorDirective } from './password-strength-validator.directive';
import { TenantIdSetupComponent } from './tenant-id-setup.component';
/**
 * The angular module definition for the login.
 * @exports LoginComponent
 */
import * as ɵngcc0 from '@angular/core';
export class LoginModule {
    static forRoot() {
        return {
            ngModule: LoginModule,
            providers: LoginModule.providers()
        };
    }
    static providers() {
        return [LoginService];
    }
}
LoginModule.ɵfac = function LoginModule_Factory(t) { return new (t || LoginModule)(); };
LoginModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: LoginModule });
LoginModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[
            FormsModule,
            TooltipModule,
            CommonModule,
            AuthenticationModule,
            AlertModule,
            C8yFormsModule
        ]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LoginModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    LoginComponent,
                    RecoverPasswordComponent,
                    ChangePasswordComponent,
                    CredentialsComponent,
                    TotpAuthComponent,
                    PasswordStrengthValidatorDirective,
                    TenantIdSetupComponent
                ],
                imports: [
                    FormsModule,
                    TooltipModule,
                    CommonModule,
                    AuthenticationModule,
                    AlertModule,
                    C8yFormsModule
                ],
                exports: [LoginComponent]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(LoginModule, { declarations: function () { return [LoginComponent,
        RecoverPasswordComponent,
        ChangePasswordComponent,
        CredentialsComponent,
        TotpAuthComponent,
        PasswordStrengthValidatorDirective,
        TenantIdSetupComponent]; }, imports: function () { return [FormsModule,
        TooltipModule,
        CommonModule,
        AuthenticationModule,
        AlertModule,
        C8yFormsModule]; }, exports: function () { return [LoginComponent]; } }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9naW4ubW9kdWxlLmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9jb3JlL2xvZ2luL2xvZ2luLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUM3QyxPQUFPLEVBQUUsV0FBVyxJQUFJLGNBQWMsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQ3RFLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUN0RCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDdkQsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFDdEUsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDL0QsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ25ELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUN4RSxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSx5Q0FBeUMsQ0FBQztBQUMvRSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDcEQsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDMUQsT0FBTyxFQUFFLGtDQUFrQyxFQUFFLE1BQU0seUNBQXlDLENBQUM7QUFDN0YsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFFckU7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFxQkgsTUFBTSxPQUFPLFdBQVc7QUFDeEIsSUFBRSxNQUFNLENBQUMsT0FBTztBQUNoQixRQUFJLE9BQU87QUFDWCxZQUFNLFFBQVEsRUFBRSxXQUFXO0FBQzNCLFlBQU0sU0FBUyxFQUFFLFdBQVcsQ0FBQyxTQUFTLEVBQUU7QUFDeEMsU0FBSyxDQUFDO0FBQ04sSUFBRSxDQUFDO0FBQ0gsSUFBRSxNQUFNLENBQUMsU0FBUztBQUNsQixRQUFJLE9BQU8sQ0FBQyxZQUFZLENBQUMsQ0FBQztBQUMxQixJQUFFLENBQUM7QUFDSDt1Q0E5QkMsUUFBUSxTQUFDLGtCQUNSLFlBQVksRUFBRTtxQkFDWixjQUFjLHNCQUNkO0FBQXdCLHNCQUN4Qix1QkFBdUIsc0JBQ3ZCO2dCQUFvQjthQUNwQjtHQUFpQixzQkFDakI7aUNBQWtDO3FCQUNsQztrQkFBc0I7U0FDdkI7WUFDRCxPQUFPLEVBQUUsc0JBQ1AsV0FBVyxzQkFDWCxhQUFhO0lBQ2IsWUFBWTtjQUNaO2lCQUFvQjtPQUNwQixXQUFXO0lBQ1gsY0FBYyxrQkFDZjtRQUNELE9BQU8sRUFBRSxDQUFDLGNBQWMsQ0FBQztFQUMxQjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O3VGQUNJO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRm9ybXNNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBGb3Jtc01vZHVsZSBhcyBDOHlGb3Jtc01vZHVsZSB9IGZyb20gJy4uL2Zvcm1zL2Zvcm1zLm1vZHVsZSc7XG5pbXBvcnQgeyBUb29sdGlwTW9kdWxlIH0gZnJvbSAnbmd4LWJvb3RzdHJhcC90b29sdGlwJztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJy4uL2NvbW1vbi9jb21tb24ubW9kdWxlJztcbmltcG9ydCB7IENoYW5nZVBhc3N3b3JkQ29tcG9uZW50IH0gZnJvbSAnLi9jaGFuZ2UtcGFzc3dvcmQuY29tcG9uZW50JztcbmltcG9ydCB7IENyZWRlbnRpYWxzQ29tcG9uZW50IH0gZnJvbSAnLi9jcmVkZW50aWFscy5jb21wb25lbnQnO1xuaW1wb3J0IHsgTG9naW5Db21wb25lbnQgfSBmcm9tICcuL2xvZ2luLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBMb2dpblNlcnZpY2UgfSBmcm9tICcuL2xvZ2luLnNlcnZpY2UnO1xuaW1wb3J0IHsgUmVjb3ZlclBhc3N3b3JkQ29tcG9uZW50IH0gZnJvbSAnLi9yZWNvdmVyLXBhc3N3b3JkLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBBdXRoZW50aWNhdGlvbk1vZHVsZSB9IGZyb20gJy4uL2F1dGhlbnRpY2F0aW9uL2F1dGhlbnRpY2F0aW9uLm1vZHVsZSc7XG5pbXBvcnQgeyBBbGVydE1vZHVsZSB9IGZyb20gJy4uL2FsZXJ0L2FsZXJ0Lm1vZHVsZSc7XG5pbXBvcnQgeyBUb3RwQXV0aENvbXBvbmVudCB9IGZyb20gJy4vdG90cC1hdXRoLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBQYXNzd29yZFN0cmVuZ3RoVmFsaWRhdG9yRGlyZWN0aXZlIH0gZnJvbSAnLi9wYXNzd29yZC1zdHJlbmd0aC12YWxpZGF0b3IuZGlyZWN0aXZlJztcbmltcG9ydCB7IFRlbmFudElkU2V0dXBDb21wb25lbnQgfSBmcm9tICcuL3RlbmFudC1pZC1zZXR1cC5jb21wb25lbnQnO1xuXG4vKipcbiAqIFRoZSBhbmd1bGFyIG1vZHVsZSBkZWZpbml0aW9uIGZvciB0aGUgbG9naW4uXG4gKiBAZXhwb3J0cyBMb2dpbkNvbXBvbmVudFxuICovXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtcbiAgICBMb2dpbkNvbXBvbmVudCxcbiAgICBSZWNvdmVyUGFzc3dvcmRDb21wb25lbnQsXG4gICAgQ2hhbmdlUGFzc3dvcmRDb21wb25lbnQsXG4gICAgQ3JlZGVudGlhbHNDb21wb25lbnQsXG4gICAgVG90cEF1dGhDb21wb25lbnQsXG4gICAgUGFzc3dvcmRTdHJlbmd0aFZhbGlkYXRvckRpcmVjdGl2ZSxcbiAgICBUZW5hbnRJZFNldHVwQ29tcG9uZW50XG4gIF0sXG4gIGltcG9ydHM6IFtcbiAgICBGb3Jtc01vZHVsZSxcbiAgICBUb29sdGlwTW9kdWxlLFxuICAgIENvbW1vbk1vZHVsZSxcbiAgICBBdXRoZW50aWNhdGlvbk1vZHVsZSxcbiAgICBBbGVydE1vZHVsZSxcbiAgICBDOHlGb3Jtc01vZHVsZVxuICBdLFxuICBleHBvcnRzOiBbTG9naW5Db21wb25lbnRdXG59KVxuZXhwb3J0IGNsYXNzIExvZ2luTW9kdWxlIHtcbiAgc3RhdGljIGZvclJvb3QoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG5nTW9kdWxlOiBMb2dpbk1vZHVsZSxcbiAgICAgIHByb3ZpZGVyczogTG9naW5Nb2R1bGUucHJvdmlkZXJzKClcbiAgICB9O1xuICB9XG4gIHN0YXRpYyBwcm92aWRlcnMoKSB7XG4gICAgcmV0dXJuIFtMb2dpblNlcnZpY2VdO1xuICB9XG59XG4iXX0=