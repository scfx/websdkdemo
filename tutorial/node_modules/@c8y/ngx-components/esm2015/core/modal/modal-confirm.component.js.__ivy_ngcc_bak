import { Component, Input } from '@angular/core';
import { BsModalRef } from 'ngx-bootstrap/modal';
import { Status, statusAlert, statusIcons } from '../common/status.model';
export class ConfirmModalComponent {
    constructor(modal) {
        this.modal = modal;
        this.status = Status.INFO;
        this._labels = {
            ok: 'OK',
            cancel: 'Cancel'
        };
        this.result = new Promise((resolve, reject) => {
            this.dismiss = () => {
                reject();
                this.modal.hide();
            };
            this.close = () => {
                resolve(true);
                this.modal.hide();
            };
        });
    }
    set labels(labels) {
        const { ok = 'OK', cancel = 'Cancel' } = labels || {};
        this._labels = { ok, cancel };
    }
    get labels() {
        return this._labels;
    }
    get classIcon() {
        return `dlt-c8y-icon-${statusIcons[this.status]}`;
    }
    get classAlert() {
        return statusAlert[this.status];
    }
    ngOnDestroy() {
        this.dismiss();
    }
}
ConfirmModalComponent.decorators = [
    { type: Component, args: [{
                selector: 'c8y-confirm-modal',
                template: "<div class=\"c8y-prompt alert\" [ngClass]=\"[classAlert]\">\n  <h3 class=\"m-b-16\" *ngIf=\"title\">\n    <i class=\"dlt-c8y-icon\" [ngClass]=\"[classIcon]\"></i>\n    <span *ngIf=\"title\">{{ title | translate }}</span>\n  </h3>\n  <p class=\"text-break-word\">{{ body | translate }}</p>\n  <ng-content></ng-content>\n  <div class=\"alert-footer\">\n    <button\n      title=\"{{ labels.cancel | translate }}\"\n      class=\"btn btn-default\"\n      *ngIf=\"labels.cancel !== null\"\n      (click)=\"dismiss()\"\n    >\n      {{ labels.cancel | translate }}\n    </button>\n    <button title=\"{{ labels.ok | translate }}\" class=\"btn btn-primary\" (click)=\"close()\">\n      {{ labels.ok | translate }}\n    </button>\n  </div>\n</div>\n"
            },] }
];
ConfirmModalComponent.ctorParameters = () => [
    { type: BsModalRef }
];
ConfirmModalComponent.propDecorators = {
    title: [{ type: Input }],
    body: [{ type: Input }],
    status: [{ type: Input }],
    labels: [{ type: Input }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kYWwtY29uZmlybS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9jb3JlL21vZGFsL21vZGFsLWNvbmZpcm0uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFhLE1BQU0sZUFBZSxDQUFDO0FBQzVELE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUNqRCxPQUFPLEVBQUUsTUFBTSxFQUFFLFdBQVcsRUFBRSxXQUFXLEVBQWMsTUFBTSx3QkFBd0IsQ0FBQztBQWN0RixNQUFNLE9BQU8scUJBQXFCO0lBaUJoQyxZQUFvQixLQUFpQjtRQUFqQixVQUFLLEdBQUwsS0FBSyxDQUFZO1FBWDVCLFdBQU0sR0FBZSxNQUFNLENBQUMsSUFBSSxDQUFDO1FBWXhDLElBQUksQ0FBQyxPQUFPLEdBQUc7WUFDYixFQUFFLEVBQUUsSUFBSTtZQUNSLE1BQU0sRUFBRSxRQUFRO1NBQ2pCLENBQUM7UUFDRixJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksT0FBTyxDQUFDLENBQUMsT0FBTyxFQUFFLE1BQU0sRUFBRSxFQUFFO1lBQzVDLElBQUksQ0FBQyxPQUFPLEdBQUcsR0FBRyxFQUFFO2dCQUNsQixNQUFNLEVBQUUsQ0FBQztnQkFDVCxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksRUFBRSxDQUFDO1lBQ3BCLENBQUMsQ0FBQztZQUNGLElBQUksQ0FBQyxLQUFLLEdBQUcsR0FBRyxFQUFFO2dCQUNoQixPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7Z0JBQ2QsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsQ0FBQztZQUNwQixDQUFDLENBQUM7UUFDSixDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7SUF6QkQsSUFBYSxNQUFNLENBQUMsTUFBbUI7UUFDckMsTUFBTSxFQUFFLEVBQUUsR0FBRyxJQUFJLEVBQUUsTUFBTSxHQUFHLFFBQVEsRUFBRSxHQUFHLE1BQU0sSUFBSSxFQUFFLENBQUM7UUFDdEQsSUFBSSxDQUFDLE9BQU8sR0FBRyxFQUFFLEVBQUUsRUFBRSxNQUFNLEVBQUUsQ0FBQztJQUNoQyxDQUFDO0lBRUQsSUFBSSxNQUFNO1FBQ1IsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDO0lBQ3RCLENBQUM7SUFvQkQsSUFBSSxTQUFTO1FBQ1gsT0FBTyxnQkFBZ0IsV0FBVyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDO0lBQ3BELENBQUM7SUFFRCxJQUFJLFVBQVU7UUFDWixPQUFPLFdBQVcsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDbEMsQ0FBQztJQUVELFdBQVc7UUFDVCxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7SUFDakIsQ0FBQzs7O1lBaERGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsbUJBQW1CO2dCQUM3QixrdkJBQTZDO2FBQzlDOzs7WUFkUSxVQUFVOzs7b0JBbUJoQixLQUFLO21CQUNMLEtBQUs7cUJBQ0wsS0FBSztxQkFDTCxLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT25EZXN0cm95IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBCc01vZGFsUmVmIH0gZnJvbSAnbmd4LWJvb3RzdHJhcC9tb2RhbCc7XG5pbXBvcnQgeyBTdGF0dXMsIHN0YXR1c0FsZXJ0LCBzdGF0dXNJY29ucywgU3RhdHVzVHlwZSB9IGZyb20gJy4uL2NvbW1vbi9zdGF0dXMubW9kZWwnO1xuaW1wb3J0IHsgTW9kYWxMYWJlbHMgfSBmcm9tICcuLi9zZWxlY3QtbW9kYWwvc2VsZWN0LW1vZGFsLm1vZGVsJztcblxuLyoqXG4gKiBMYWJlbHMgdG8gYmUgdXNlZCBpbiB0aGUgc2VsZWN0aW9uIG1vZGFsLlxuICogQGRlcHJlY2F0ZWQgVGhpcyBpcyBnb2luZyB0byBiZSByZW1vdmVkIGFmdGVyIDEwMDcuNy4wLiBVc2UgTW9kYWxMYWJlbHMgaW5zdGVhZC5cbiAqL1xuLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOiBuby1lbXB0eS1pbnRlcmZhY2VcbmV4cG9ydCBpbnRlcmZhY2UgSUxhYmVscyBleHRlbmRzIE1vZGFsTGFiZWxzIHt9XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2M4eS1jb25maXJtLW1vZGFsJyxcbiAgdGVtcGxhdGVVcmw6ICcuL21vZGFsLWNvbmZpcm0uY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIENvbmZpcm1Nb2RhbENvbXBvbmVudCBpbXBsZW1lbnRzIE9uRGVzdHJveSB7XG4gIHJlc3VsdDogUHJvbWlzZTxib29sZWFuPjtcbiAgZGlzbWlzczogKCkgPT4gdm9pZDtcbiAgY2xvc2U6ICgpID0+IHZvaWQ7XG4gIEBJbnB1dCgpIHRpdGxlOiBzdHJpbmc7XG4gIEBJbnB1dCgpIGJvZHk6IHN0cmluZztcbiAgQElucHV0KCkgc3RhdHVzOiBTdGF0dXNUeXBlID0gU3RhdHVzLklORk87XG4gIEBJbnB1dCgpIHNldCBsYWJlbHMobGFiZWxzOiBNb2RhbExhYmVscykge1xuICAgIGNvbnN0IHsgb2sgPSAnT0snLCBjYW5jZWwgPSAnQ2FuY2VsJyB9ID0gbGFiZWxzIHx8IHt9O1xuICAgIHRoaXMuX2xhYmVscyA9IHsgb2ssIGNhbmNlbCB9O1xuICB9XG5cbiAgZ2V0IGxhYmVscygpOiBNb2RhbExhYmVscyB7XG4gICAgcmV0dXJuIHRoaXMuX2xhYmVscztcbiAgfVxuXG4gIHByaXZhdGUgX2xhYmVsczogTW9kYWxMYWJlbHM7XG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgbW9kYWw6IEJzTW9kYWxSZWYpIHtcbiAgICB0aGlzLl9sYWJlbHMgPSB7XG4gICAgICBvazogJ09LJyxcbiAgICAgIGNhbmNlbDogJ0NhbmNlbCdcbiAgICB9O1xuICAgIHRoaXMucmVzdWx0ID0gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgdGhpcy5kaXNtaXNzID0gKCkgPT4ge1xuICAgICAgICByZWplY3QoKTtcbiAgICAgICAgdGhpcy5tb2RhbC5oaWRlKCk7XG4gICAgICB9O1xuICAgICAgdGhpcy5jbG9zZSA9ICgpID0+IHtcbiAgICAgICAgcmVzb2x2ZSh0cnVlKTtcbiAgICAgICAgdGhpcy5tb2RhbC5oaWRlKCk7XG4gICAgICB9O1xuICAgIH0pO1xuICB9XG5cbiAgZ2V0IGNsYXNzSWNvbigpIHtcbiAgICByZXR1cm4gYGRsdC1jOHktaWNvbi0ke3N0YXR1c0ljb25zW3RoaXMuc3RhdHVzXX1gO1xuICB9XG5cbiAgZ2V0IGNsYXNzQWxlcnQoKSB7XG4gICAgcmV0dXJuIHN0YXR1c0FsZXJ0W3RoaXMuc3RhdHVzXTtcbiAgfVxuXG4gIG5nT25EZXN0cm95KCkge1xuICAgIHRoaXMuZGlzbWlzcygpO1xuICB9XG59XG4iXX0=