import { __awaiter } from "tslib";
import { Component, Input, ViewChild } from '@angular/core';
import { PopoverDirective } from 'ngx-bootstrap/popover';
import { gettext } from '../i18n/gettext';
/**
 * A component to show a popover right next to the
 * user action. Add this component where the confirm modal
 * should be shown and toggle isOpen to display it. You
 * can use `await isShow()` to wait for a result on the
 * click action.
 */
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from 'ngx-bootstrap/popover';
import * as ɵngcc2 from '@angular/common';
import * as ɵngcc3 from '../i18n/c8y-translate.pipe';

function PopoverConfirmComponent_ng_template_2_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    const _r5 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "button", 5);
    ɵngcc0.ɵɵlistener("click", function PopoverConfirmComponent_ng_template_2_ng_container_4_Template_button_click_1_listener() { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r5); const button_r3 = restoredCtx.$implicit; const ctx_r4 = ɵngcc0.ɵɵnextContext(2); return ctx_r4.click(button_r3.action); });
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵpipe(4, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const button_r3 = ctx.$implicit;
    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(2, 3, button_r3.label));
    ɵngcc0.ɵɵproperty("ngClass", ctx_r2.buttonStatus(button_r3.status));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(4, 5, button_r3.label), " ");
} }
function PopoverConfirmComponent_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "p", 2);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "div", 3);
    ɵngcc0.ɵɵtemplate(4, PopoverConfirmComponent_ng_template_2_ng_container_4_Template, 5, 7, "ng-container", 4);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 2, ctx_r1.message), " ");
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r1.buttons);
} }
export class PopoverConfirmComponent {
    constructor() {
        this.buttons = [{ label: gettext('cancel'), action: () => Promise.reject() }];
        this.isOpen = false;
        this.containerClass = '';
        this.placement = 'right';
        this.outsideClick = false;
    }
    /**
     * Show the popover. Wait until an action is performed on it.
     */
    show(buttons) {
        return __awaiter(this, void 0, void 0, function* () {
            this.buttons = buttons || this.buttons;
            this.isOpen = true;
            let result;
            try {
                result = yield new Promise((resolve, reject) => {
                    return this.click = (action) => action().then(resolve).catch(reject);
                });
            }
            catch (ex) {
                throw (ex);
            }
            finally {
                this.isOpen = false;
            }
            return result;
        });
    }
    buttonStatus(status) {
        if (status) {
            return `btn-${status}`;
        }
        return 'btn-link btn-clean';
    }
    handleOutsideClick() {
        this.click(() => Promise.reject());
    }
}
PopoverConfirmComponent.ɵfac = function PopoverConfirmComponent_Factory(t) { return new (t || PopoverConfirmComponent)(); };
PopoverConfirmComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: PopoverConfirmComponent, selectors: [["c8y-popover-confirm"]], viewQuery: function PopoverConfirmComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(PopoverDirective, 5);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.popover = _t.first);
    } }, inputs: { buttons: "buttons", isOpen: "isOpen", containerClass: "containerClass", placement: "placement", outsideClick: "outsideClick", message: "message", title: "title" }, decls: 4, vars: 8, consts: [["container", "body", 3, "popover", "isOpen", "popoverTitle", "placement", "containerClass", "outsideClick", "onHidden"], ["popover", ""], [1, "m-b-8"], [1, "popover-footer"], [4, "ngFor", "ngForOf"], [1, "btn", "btn-sm", "m-r-16", 3, "title", "ngClass", "click"]], template: function PopoverConfirmComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "span", 0);
        ɵngcc0.ɵɵlistener("onHidden", function PopoverConfirmComponent_Template_span_onHidden_0_listener() { return ctx.handleOutsideClick(); });
        ɵngcc0.ɵɵpipe(1, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(2, PopoverConfirmComponent_ng_template_2_Template, 5, 4, "ng-template", null, 1, ɵngcc0.ɵɵtemplateRefExtractor);
    } if (rf & 2) {
        const _r0 = ɵngcc0.ɵɵreference(3);
        ɵngcc0.ɵɵproperty("popover", _r0)("isOpen", ctx.isOpen)("popoverTitle", ɵngcc0.ɵɵpipeBind1(1, 6, ctx.title))("placement", ctx.placement)("containerClass", ctx.containerClass)("outsideClick", ctx.outsideClick);
    } }, directives: [ɵngcc1.PopoverDirective, ɵngcc2.NgForOf, ɵngcc2.NgClass], pipes: [ɵngcc3.C8yTranslatePipe], encapsulation: 2 });
PopoverConfirmComponent.propDecorators = {
    popover: [{ type: ViewChild, args: [PopoverDirective, { static: false },] }],
    buttons: [{ type: Input }],
    message: [{ type: Input }],
    title: [{ type: Input }],
    isOpen: [{ type: Input }],
    containerClass: [{ type: Input }],
    placement: [{ type: Input }],
    outsideClick: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PopoverConfirmComponent, [{
        type: Component,
        args: [{
                selector: 'c8y-popover-confirm',
                template: "<span\n  [popover]=\"popover\"\n  container=\"body\"\n  [isOpen]=\"isOpen\"\n  [popoverTitle]=\"title | translate\"\n  [placement]=\"placement\"\n  [containerClass]=\"containerClass\"\n  [outsideClick]=\"outsideClick\"\n  (onHidden)=\"handleOutsideClick()\"\n></span>\n<ng-template #popover>\n  <p class=\"m-b-8\">\n    {{ message | translate }}\n  </p>\n  <div class=\"popover-footer\">\n    <ng-container *ngFor=\"let button of buttons\">\n      <button\n        title=\"{{ button.label | translate }}\"\n        class=\"btn btn-sm m-r-16\"\n        [ngClass]=\"buttonStatus(button.status)\"\n        (click)=\"click(button.action)\"\n      >\n        {{ button.label | translate }}\n      </button>\n    </ng-container>\n  </div>\n</ng-template>\n"
            }]
    }], function () { return []; }, { buttons: [{
            type: Input
        }], isOpen: [{
            type: Input
        }], containerClass: [{
            type: Input
        }], placement: [{
            type: Input
        }], outsideClick: [{
            type: Input
        }], popover: [{
            type: ViewChild,
            args: [PopoverDirective, { static: false }]
        }], message: [{
            type: Input
        }], title: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9wb3Zlci1jb25maXJtLmNvbXBvbmVudC5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vY29yZS9tb2RhbC9wb3BvdmVyLWNvbmZpcm0uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQWEsTUFBTSxlQUFlLENBQUM7QUFDdkUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFFekQsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBaUIxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBS0gsTUFBTSxPQUFPLHVCQUF1QjtBQUNwQyxJQUxBO0FBQ0csUUFLUSxZQUFPLEdBQTRCLENBQUMsRUFBRSxLQUFLLEVBQUUsT0FBTyxDQUFDLFFBQVEsQ0FBQyxFQUFFLE1BQU0sRUFBRSxHQUFHLEVBQUUsQ0FBQyxPQUFPLENBQUMsTUFBTSxFQUFFLEVBQUMsQ0FBQyxDQUFDO0FBQzVHLFFBRVcsV0FBTSxHQUFHLEtBQUssQ0FBQztBQUMxQixRQUFXLG1CQUFjLEdBQUcsRUFBRSxDQUFDO0FBQy9CLFFBQVcsY0FBUyxHQUFHLE9BQU8sQ0FBQztBQUMvQixRQUFXLGlCQUFZLEdBQUcsS0FBSyxDQUFDO0FBQ2hDLElBZ0NBLENBQUM7QUFDRCxJQTlCRTtBQUNGO0FBQ0UsT0FBRztBQUNMLElBQVEsSUFBSSxDQUFDLE9BQWlDO0FBQzlDO0FBQ2tCLFlBRGQsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLElBQUksSUFBSSxDQUFDLE9BQU8sQ0FBQztBQUMzQyxZQUFJLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDO0FBQ3ZCLFlBQUksSUFBSSxNQUFNLENBQUM7QUFDZixZQUFJLElBQUk7QUFDUixnQkFBTSxNQUFNLEdBQUcsTUFBTSxJQUFJLE9BQU8sQ0FBQyxDQUFDLE9BQU8sRUFBRSxNQUFNLEVBQUUsRUFBRTtBQUNyRCxvQkFBUSxPQUFPLElBQUksQ0FBQyxLQUFLLEdBQUcsQ0FBQyxNQUEwQixFQUFFLEVBQUUsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0FBQ2pHLGdCQUFNLENBQUMsQ0FBQyxDQUFDO0FBQ1QsYUFBSztBQUFDLFlBQUEsT0FBTyxFQUFFLEVBQUU7QUFDakIsZ0JBQU0sTUFBSyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0FBQ2hCLGFBQUs7QUFBQyxvQkFBUTtBQUNkLGdCQUFNLElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO0FBQzFCLGFBQUs7QUFDTCxZQUFJLE9BQU8sTUFBTSxDQUFDO0FBQ2xCLFFBQUUsQ0FBQztBQUVGLEtBRkU7QUFDSCxJQUNFLFlBQVksQ0FBQyxNQUFNO0FBQ3JCLFFBQUksSUFBSSxNQUFNLEVBQUU7QUFDaEIsWUFBTSxPQUFPLE9BQU8sTUFBTSxFQUFFLENBQUM7QUFDN0IsU0FBSztBQUNMLFFBQUksT0FBTyxvQkFBb0IsQ0FBQztBQUNoQyxJQUFFLENBQUM7QUFDSCxJQUNFLGtCQUFrQjtBQUNwQixRQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxFQUFFLENBQUMsT0FBTyxDQUFDLE1BQU0sRUFBRSxDQUFDLENBQUM7QUFDdkMsSUFBRSxDQUFDO0FBQ0g7bURBN0NDLFNBQVMsU0FBQyxrQkFDVCxRQUFRLEVBQUUscUJBQXFCO1dBQy9COzs7OztrWUFBK0MsY0FDaEQ7Ozs7Ozs7OztzSUFDSTtBQUFDO0FBQ0ksc0JBQVAsU0FBUyxTQUFDLGdCQUFnQixFQUFFLEVBQUMsTUFBTSxFQUFFLEtBQUssRUFBQztBQUFPLHNCQUNsRCxLQUFLO0FBQUssc0JBQ1YsS0FBSztBQUFLLG9CQUNWLEtBQUs7QUFBSyxxQkFDVixLQUFLO0FBQUssNkJBQ1YsS0FBSztBQUFLLHdCQUNWLEtBQUs7QUFBSywyQkFDVixLQUFLO0FBQUk7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztvQkFBRTtBQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgVmlld0NoaWxkLCBPbkRlc3Ryb3kgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFBvcG92ZXJEaXJlY3RpdmUgfSBmcm9tICduZ3gtYm9vdHN0cmFwL3BvcG92ZXInO1xuaW1wb3J0IHsgU3RhdHVzVHlwZSB9IGZyb20gJy4uL2NvbW1vbi9zdGF0dXMubW9kZWwnO1xuaW1wb3J0IHsgZ2V0dGV4dCB9IGZyb20gJy4uL2kxOG4vZ2V0dGV4dCc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgUG9wb3ZlckNvbmZpcm1CdXR0b25zIHtcbiAgLyoqXG4gICAqIFRoZSBsYWJlbCBvZiB0aGUgYnV0dG9uXG4gICAqL1xuICBsYWJlbDogc3RyaW5nO1xuICAvKipcbiAgICogV2hpY2ggYWN0aW9uIHRvIHBlcmZvcm0uXG4gICAqL1xuICBhY3Rpb246ICgpID0+IFByb21pc2U8YW55PjtcbiAgLyoqXG4gICAqIFRoZSBzdGF0dXMgY2xhc3MgYXR0YWNoZWQgdG8gdGhlIGJ1dHRvbi5cbiAgICovXG4gIHN0YXR1cz86IFN0YXR1c1R5cGUgfCAncHJpbWFyeSc7XG59XG5cbi8qKlxuICogQSBjb21wb25lbnQgdG8gc2hvdyBhIHBvcG92ZXIgcmlnaHQgbmV4dCB0byB0aGVcbiAqIHVzZXIgYWN0aW9uLiBBZGQgdGhpcyBjb21wb25lbnQgd2hlcmUgdGhlIGNvbmZpcm0gbW9kYWxcbiAqIHNob3VsZCBiZSBzaG93biBhbmQgdG9nZ2xlIGlzT3BlbiB0byBkaXNwbGF5IGl0LiBZb3VcbiAqIGNhbiB1c2UgYGF3YWl0IGlzU2hvdygpYCB0byB3YWl0IGZvciBhIHJlc3VsdCBvbiB0aGVcbiAqIGNsaWNrIGFjdGlvbi5cbiAqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYzh5LXBvcG92ZXItY29uZmlybScsXG4gIHRlbXBsYXRlVXJsOiAnLi9wb3BvdmVyLWNvbmZpcm0uY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIFBvcG92ZXJDb25maXJtQ29tcG9uZW50IHtcbiAgQFZpZXdDaGlsZChQb3BvdmVyRGlyZWN0aXZlLCB7c3RhdGljOiBmYWxzZX0pIHBvcG92ZXI6IFBvcG92ZXJEaXJlY3RpdmU7XG4gIEBJbnB1dCgpIGJ1dHRvbnM6IFBvcG92ZXJDb25maXJtQnV0dG9uc1tdID0gW3sgbGFiZWw6IGdldHRleHQoJ2NhbmNlbCcpLCBhY3Rpb246ICgpID0+IFByb21pc2UucmVqZWN0KCl9XTtcbiAgQElucHV0KCkgbWVzc2FnZTogc3RyaW5nO1xuICBASW5wdXQoKSB0aXRsZTogc3RyaW5nO1xuICBASW5wdXQoKSBpc09wZW4gPSBmYWxzZTtcbiAgQElucHV0KCkgY29udGFpbmVyQ2xhc3MgPSAnJztcbiAgQElucHV0KCkgcGxhY2VtZW50ID0gJ3JpZ2h0JztcbiAgQElucHV0KCkgb3V0c2lkZUNsaWNrID0gZmFsc2U7XG5cbiAgY2xpY2s6IChhY3Rpb246ICgpID0+IFByb21pc2U8YW55PikgPT4gdm9pZDtcblxuICAvKipcbiAgICogU2hvdyB0aGUgcG9wb3Zlci4gV2FpdCB1bnRpbCBhbiBhY3Rpb24gaXMgcGVyZm9ybWVkIG9uIGl0LlxuICAgKi9cbiAgYXN5bmMgc2hvdyhidXR0b25zPzogUG9wb3ZlckNvbmZpcm1CdXR0b25zW10pIHtcbiAgICB0aGlzLmJ1dHRvbnMgPSBidXR0b25zIHx8IHRoaXMuYnV0dG9ucztcbiAgICB0aGlzLmlzT3BlbiA9IHRydWU7XG4gICAgbGV0IHJlc3VsdDtcbiAgICB0cnkge1xuICAgICAgcmVzdWx0ID0gYXdhaXQgbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICByZXR1cm4gdGhpcy5jbGljayA9IChhY3Rpb246ICgpID0+IFByb21pc2U8YW55PikgPT4gYWN0aW9uKCkudGhlbihyZXNvbHZlKS5jYXRjaChyZWplY3QpO1xuICAgICAgfSk7XG4gICAgfSBjYXRjaCAoZXgpIHtcbiAgICAgIHRocm93KGV4KTtcbiAgICB9IGZpbmFsbHkge1xuICAgICAgdGhpcy5pc09wZW4gPSBmYWxzZTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfVxuXG4gIGJ1dHRvblN0YXR1cyhzdGF0dXMpIHtcbiAgICBpZiAoc3RhdHVzKSB7XG4gICAgICByZXR1cm4gYGJ0bi0ke3N0YXR1c31gO1xuICAgIH1cbiAgICByZXR1cm4gJ2J0bi1saW5rIGJ0bi1jbGVhbic7XG4gIH1cblxuICBoYW5kbGVPdXRzaWRlQ2xpY2soKSB7XG4gICAgdGhpcy5jbGljaygoKSA9PiBQcm9taXNlLnJlamVjdCgpKTtcbiAgfVxufVxuIl19