import { __awaiter } from "tslib";
import { Component, Input, Output, EventEmitter } from '@angular/core';
import { UserService } from '@c8y/client';
import { AlertService } from '../alert/alert.service';
import { gettext } from '../i18n/gettext';
export class UserTotpRevokeComponent {
    constructor(users, alert) {
        this.users = users;
        this.alert = alert;
        this.revokeEmitter = new EventEmitter();
    }
    revoke() {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                yield this.users.totpRevokeSecret(this.user);
                this.alert.success(gettext('User TOTP secret revoked.'));
                this.revokeEmitter.next();
            }
            catch (e) {
                this.alert.addServerFailure(e);
            }
        });
    }
}
UserTotpRevokeComponent.decorators = [
    { type: Component, args: [{
                selector: 'c8y-user-totp-revoke',
                template: "<button\n  type=\"button\"\n  class=\"btn btn-default\"\n  [popover]=\"confirm\"\n  [popoverTitle]=\"'Revoke TOTP secret' | translate\"\n  #popover=\"bs-popover\"\n  placement=\"right\"\n>\n  <i c8yIcon=\"key\"></i> {{ 'Revoke TOTP secret' | translate }}\n</button>\n\n<ng-template #confirm>\n  <p class=\"m-b-16\" translate>\n    This action will revoke the user's stored TOTP secret which will require a new setup.\n  </p>\n  <button\n    title=\"{{ 'Revoke' | translate }}\"\n    type=\"button\"\n    class=\"btn btn-danger\"\n    (click)=\"revoke(); popover.hide()\"\n    translate\n  >\n    Revoke\n  </button>\n  <button\n    title=\"{{ 'Cancel' | translate }}\"\n    type=\"button\"\n    class=\"btn btn-default\"\n    (click)=\"popover.hide()\"\n    translate\n  >\n    Cancel\n  </button>\n</ng-template>\n"
            },] }
];
UserTotpRevokeComponent.ctorParameters = () => [
    { type: UserService },
    { type: AlertService }
];
UserTotpRevokeComponent.propDecorators = {
    user: [{ type: Input }],
    revokeEmitter: [{ type: Output, args: ['revoke',] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlci10b3RwLXJldm9rZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9jb3JlL3VzZXIvdXNlci10b3RwLXJldm9rZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxZQUFZLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDdkUsT0FBTyxFQUFTLFdBQVcsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUNqRCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDdEQsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBTTFDLE1BQU0sT0FBTyx1QkFBdUI7SUFHbEMsWUFDVSxLQUFrQixFQUNsQixLQUFtQjtRQURuQixVQUFLLEdBQUwsS0FBSyxDQUFhO1FBQ2xCLFVBQUssR0FBTCxLQUFLLENBQWM7UUFIWCxrQkFBYSxHQUFHLElBQUksWUFBWSxFQUFhLENBQUM7SUFJNUQsQ0FBQztJQUVDLE1BQU07O1lBQ1YsSUFBSTtnQkFDRixNQUFNLElBQUksQ0FBQyxLQUFLLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO2dCQUM3QyxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsMkJBQTJCLENBQUMsQ0FBQyxDQUFDO2dCQUN6RCxJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksRUFBRSxDQUFDO2FBQzNCO1lBQUMsT0FBTyxDQUFDLEVBQUU7Z0JBQ1YsSUFBSSxDQUFDLEtBQUssQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLENBQUMsQ0FBQzthQUNoQztRQUNILENBQUM7S0FBQTs7O1lBcEJGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsc0JBQXNCO2dCQUNoQywyekJBQXlDO2FBQzFDOzs7WUFQZSxXQUFXO1lBQ2xCLFlBQVk7OzttQkFRbEIsS0FBSzs0QkFDTCxNQUFNLFNBQUMsUUFBUSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE91dHB1dCwgRXZlbnRFbWl0dGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBJVXNlciwgVXNlclNlcnZpY2UgfSBmcm9tICdAYzh5L2NsaWVudCc7XG5pbXBvcnQgeyBBbGVydFNlcnZpY2UgfSBmcm9tICcuLi9hbGVydC9hbGVydC5zZXJ2aWNlJztcbmltcG9ydCB7IGdldHRleHQgfSBmcm9tICcuLi9pMThuL2dldHRleHQnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjOHktdXNlci10b3RwLXJldm9rZScsXG4gIHRlbXBsYXRlVXJsOiAnLi91c2VyLXRvdHAuY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIFVzZXJUb3RwUmV2b2tlQ29tcG9uZW50IHtcbiAgQElucHV0KCkgdXNlcjogSVVzZXI7XG4gIEBPdXRwdXQoJ3Jldm9rZScpIHJldm9rZUVtaXR0ZXIgPSBuZXcgRXZlbnRFbWl0dGVyPHVuZGVmaW5lZD4oKTtcbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSB1c2VyczogVXNlclNlcnZpY2UsXG4gICAgcHJpdmF0ZSBhbGVydDogQWxlcnRTZXJ2aWNlLFxuICApIHsgfVxuXG4gIGFzeW5jIHJldm9rZSgpIHtcbiAgICB0cnkge1xuICAgICAgYXdhaXQgdGhpcy51c2Vycy50b3RwUmV2b2tlU2VjcmV0KHRoaXMudXNlcik7XG4gICAgICB0aGlzLmFsZXJ0LnN1Y2Nlc3MoZ2V0dGV4dCgnVXNlciBUT1RQIHNlY3JldCByZXZva2VkLicpKTtcbiAgICAgIHRoaXMucmV2b2tlRW1pdHRlci5uZXh0KCk7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgdGhpcy5hbGVydC5hZGRTZXJ2ZXJGYWlsdXJlKGUpO1xuICAgIH1cbiAgfVxufVxuIl19