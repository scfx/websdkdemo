import { Directive, Attribute } from '@angular/core';
import { NG_VALIDATORS } from '@angular/forms';
import * as ɵngcc0 from '@angular/core';
export class PasswordConfirm {
    constructor(passwordConfirm) {
        this.passwordConfirm = passwordConfirm;
    }
    validate(abControl) {
        const value = abControl.value;
        const controlToCompareWith = abControl.root.get(this.passwordConfirm);
        if (controlToCompareWith && value !== controlToCompareWith.value) {
            return { passwordConfirm: true };
        }
        return null;
    }
}
PasswordConfirm.ɵfac = function PasswordConfirm_Factory(t) { return new (t || PasswordConfirm)(ɵngcc0.ɵɵinjectAttribute('passwordConfirm')); };
PasswordConfirm.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: PasswordConfirm, selectors: [["", "passwordConfirm", ""]], features: [ɵngcc0.ɵɵProvidersFeature([
            {
                provide: NG_VALIDATORS,
                useExisting: PasswordConfirm,
                multi: true
            }
        ])] });
PasswordConfirm.ctorParameters = () => [
    { type: String, decorators: [{ type: Attribute, args: ['passwordConfirm',] }] }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PasswordConfirm, [{
        type: Directive,
        args: [{
                selector: '[passwordConfirm]',
                providers: [
                    {
                        provide: NG_VALIDATORS,
                        useExisting: PasswordConfirm,
                        multi: true
                    }
                ]
            }]
    }], function () { return [{ type: String, decorators: [{
                type: Attribute,
                args: ['passwordConfirm']
            }] }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFzc3dvcmQtY29uZmlybS5kaXJlY3RpdmUuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2NvcmUvYXV0aGVudGljYXRpb24vcGFzc3dvcmQtY29uZmlybS5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBYyxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDakUsT0FBTyxFQUFFLGFBQWEsRUFBOEIsTUFBTSxnQkFBZ0IsQ0FBQzs7QUFhM0UsTUFBTSxPQUFPLGVBQWU7QUFBRyxJQUU3QixZQUFpRCxlQUF1QjtBQUFJLFFBQTNCLG9CQUFlLEdBQWYsZUFBZSxDQUFRO0FBQUMsSUFDekUsQ0FBQztBQUFDLElBRUYsUUFBUSxDQUFDLFNBQTBCO0FBQUksUUFDckMsTUFBTSxLQUFLLEdBQUcsU0FBUyxDQUFDLEtBQUssQ0FBQztBQUFDLFFBQy9CLE1BQU0sb0JBQW9CLEdBQUcsU0FBUyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxDQUFDO0FBQUMsUUFDdkUsSUFBSSxvQkFBb0IsSUFBSSxLQUFLLEtBQUssb0JBQW9CLENBQUMsS0FBSyxFQUFFO0FBQUUsWUFDbEUsT0FBTyxFQUFFLGVBQWUsRUFBRSxJQUFJLEVBQUUsQ0FBQztBQUFDLFNBQ25DO0FBQUMsUUFDRixPQUFPLElBQUksQ0FBQztBQUFDLElBQ2YsQ0FBQztBQUFDOzJDQXZCSCxTQUFTLFNBQUMsa0JBQ1QsUUFBUSxFQUFFLG1CQUFtQixrQkFDN0IsU0FBUyxFQUFFO2VBQ1QsMEJBQ0UsT0FBTyxFQUFFLGFBQWEsMEJBQ3RCLFdBQVcsRUFBRSxlQUFlLDBCQUM1QixLQUFLLEVBQUUsSUFBSTtRQUNaO1lBQ0YsY0FDRjs7OztlQUVDO0FBQUM7QUFBeUMseUNBRTdCLFNBQVMsU0FBQyxpQkFBaUI7QUFBUTs7Ozs7Ozs7Ozs7Ozs7OztrQ0FBRTtBQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBmb3J3YXJkUmVmLCBBdHRyaWJ1dGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgTkdfVkFMSURBVE9SUywgVmFsaWRhdG9yLCBBYnN0cmFjdENvbnRyb2wgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XHJcblxyXG5ARGlyZWN0aXZlKHtcclxuICBzZWxlY3RvcjogJ1twYXNzd29yZENvbmZpcm1dJyxcclxuICBwcm92aWRlcnM6IFtcclxuICAgIHtcclxuICAgICAgcHJvdmlkZTogTkdfVkFMSURBVE9SUyxcclxuICAgICAgdXNlRXhpc3Rpbmc6IFBhc3N3b3JkQ29uZmlybSxcclxuICAgICAgbXVsdGk6IHRydWVcclxuICAgIH1cclxuICBdXHJcbn0pXHJcblxyXG5leHBvcnQgY2xhc3MgUGFzc3dvcmRDb25maXJtIGltcGxlbWVudHMgVmFsaWRhdG9yIHtcclxuXHJcbiAgY29uc3RydWN0b3IoQEF0dHJpYnV0ZSgncGFzc3dvcmRDb25maXJtJykgcHVibGljIHBhc3N3b3JkQ29uZmlybTogc3RyaW5nKSB7XHJcbiAgfVxyXG5cclxuICB2YWxpZGF0ZShhYkNvbnRyb2w6IEFic3RyYWN0Q29udHJvbCk6IHsgW2tleTogc3RyaW5nXTogYW55IH0ge1xyXG4gICAgY29uc3QgdmFsdWUgPSBhYkNvbnRyb2wudmFsdWU7XHJcbiAgICBjb25zdCBjb250cm9sVG9Db21wYXJlV2l0aCA9IGFiQ29udHJvbC5yb290LmdldCh0aGlzLnBhc3N3b3JkQ29uZmlybSk7XHJcbiAgICBpZiAoY29udHJvbFRvQ29tcGFyZVdpdGggJiYgdmFsdWUgIT09IGNvbnRyb2xUb0NvbXBhcmVXaXRoLnZhbHVlKSB7XHJcbiAgICAgIHJldHVybiB7IHBhc3N3b3JkQ29uZmlybTogdHJ1ZSB9O1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIG51bGw7XHJcbiAgfVxyXG59XHJcbiJdfQ==