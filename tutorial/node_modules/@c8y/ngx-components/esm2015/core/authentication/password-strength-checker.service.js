import { Injectable } from '@angular/core';
import { PasswordStrength } from '@c8y/client';
import { filter } from 'lodash-es';
import { gettext } from '../i18n/gettext';
import * as ɵngcc0 from '@angular/core';
export class PasswordStrengthCheckerService {
    constructor() {
        this.GREEN = {
            colorName: 'green',
            color: 'rgb(0, 128, 0)',
            description: gettext('strong'),
            passwordStrength: PasswordStrength.GREEN
        };
        this.YELLOW = {
            colorName: 'yellow',
            color: 'rgb(255, 204, 51)',
            description: gettext('medium'),
            passwordStrength: PasswordStrength.YELLOW
        };
        this.RED = {
            colorName: 'red',
            color: 'rgb(170, 0, 51)',
            description: gettext('weak'),
            passwordStrength: PasswordStrength.RED
        };
    }
    hasLowerCase(password) {
        return (password.search(/[a-z]/) !== -1);
    }
    hasUpperCase(password) {
        return (password.search(/[A-Z]/) !== -1);
    }
    hasNumbers(password) {
        return (password.search(/[0-9]/) !== -1);
    }
    hasSpecialChars(password) {
        return (password.search(/[^0-9a-zA-Z]+/) !== -1);
    }
    getStrengthColor(password) {
        const passwordStrength = filter([
            this.hasLowerCase(password),
            this.hasUpperCase(password),
            this.hasNumbers(password),
            this.hasSpecialChars(password)
        ]).length;
        if (passwordStrength > 3) {
            return this.GREEN;
        }
        else if (passwordStrength >= 3) {
            return this.YELLOW;
        }
        else {
            return this.RED;
        }
    }
}
PasswordStrengthCheckerService.ɵfac = function PasswordStrengthCheckerService_Factory(t) { return new (t || PasswordStrengthCheckerService)(); };
PasswordStrengthCheckerService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: PasswordStrengthCheckerService, factory: PasswordStrengthCheckerService.ɵfac });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PasswordStrengthCheckerService, [{
        type: Injectable
    }], function () { return []; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFzc3dvcmQtc3RyZW5ndGgtY2hlY2tlci5zZXJ2aWNlLmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9jb3JlL2F1dGhlbnRpY2F0aW9uL3Bhc3N3b3JkLXN0cmVuZ3RoLWNoZWNrZXIuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUMvQyxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sV0FBVyxDQUFDO0FBRW5DLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQzs7QUFHMUMsTUFBTSxPQUFPLDhCQUE4QjtBQUMzQyxJQUZBO0FBQ0UsUUFFUSxVQUFLLEdBQTBCO0FBQ3pDLFlBQUksU0FBUyxFQUFFLE9BQU87QUFDdEIsWUFBSSxLQUFLLEVBQUUsZ0JBQWdCO0FBQzNCLFlBQUksV0FBVyxFQUFFLE9BQU8sQ0FBQyxRQUFRLENBQUM7QUFDbEMsWUFBSSxnQkFBZ0IsRUFBRSxnQkFBZ0IsQ0FBQyxLQUFLO0FBQzVDLFNBQUcsQ0FBQztBQUNKLFFBQVUsV0FBTSxHQUEwQjtBQUMxQyxZQUFJLFNBQVMsRUFBRSxRQUFRO0FBQ3ZCLFlBQUksS0FBSyxFQUFFLG1CQUFtQjtBQUM5QixZQUFJLFdBQVcsRUFBRSxPQUFPLENBQUMsUUFBUSxDQUFDO0FBQ2xDLFlBQUksZ0JBQWdCLEVBQUUsZ0JBQWdCLENBQUMsTUFBTTtBQUM3QyxTQUFHLENBQUM7QUFDSixRQUFVLFFBQUcsR0FBMEI7QUFDdkMsWUFBSSxTQUFTLEVBQUUsS0FBSztBQUNwQixZQUFJLEtBQUssRUFBRSxpQkFBaUI7QUFDNUIsWUFBSSxXQUFXLEVBQUUsT0FBTyxDQUFDLE1BQU0sQ0FBQztBQUNoQyxZQUFJLGdCQUFnQixFQUFFLGdCQUFnQixDQUFDLEdBQUc7QUFDMUMsU0FBRyxDQUFDO0FBQ0osSUFpQ0EsQ0FBQztBQUNELElBakNFLFlBQVksQ0FBQyxRQUFnQjtBQUMvQixRQUFJLE9BQU8sQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDN0MsSUFBRSxDQUFDO0FBQ0gsSUFDRSxZQUFZLENBQUMsUUFBZ0I7QUFDL0IsUUFBSSxPQUFPLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQzdDLElBQUUsQ0FBQztBQUNILElBQ0UsVUFBVSxDQUFDLFFBQWdCO0FBQzdCLFFBQUksT0FBTyxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUM3QyxJQUFFLENBQUM7QUFDSCxJQUNFLGVBQWUsQ0FBQyxRQUFnQjtBQUNsQyxRQUFJLE9BQU8sQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLGVBQWUsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDckQsSUFBRSxDQUFDO0FBQ0gsSUFDRSxnQkFBZ0IsQ0FBQyxRQUFnQjtBQUFJLFFBQ25DLE1BQU0sZ0JBQWdCLEdBQUcsTUFBTSxDQUFDO0FBQ3BDLFlBQU0sSUFBSSxDQUFDLFlBQVksQ0FBQyxRQUFRLENBQUM7QUFDakMsWUFBTSxJQUFJLENBQUMsWUFBWSxDQUFDLFFBQVEsQ0FBQztBQUNqQyxZQUFNLElBQUksQ0FBQyxVQUFVLENBQUMsUUFBUSxDQUFDO0FBQy9CLFlBQU0sSUFBSSxDQUFDLGVBQWUsQ0FBQyxRQUFRLENBQUM7QUFDcEMsU0FBSyxDQUFDLENBQUMsTUFBTSxDQUFDO0FBQ2QsUUFDSSxJQUFJLGdCQUFnQixHQUFHLENBQUMsRUFBRTtBQUM5QixZQUFNLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQztBQUN4QixTQUFLO0FBQUMsYUFBSyxJQUFJLGdCQUFnQixJQUFJLENBQUMsRUFBRTtBQUN0QyxZQUFNLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQztBQUN6QixTQUFLO0FBQUMsYUFBSztBQUNYLFlBQU0sT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDO0FBQ3RCLFNBQUs7QUFDTCxJQUFFLENBQUM7QUFDSDswREF0REMsVUFBVTs7OztnREFDVDtBQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUGFzc3dvcmRTdHJlbmd0aCB9IGZyb20gJ0BjOHkvY2xpZW50JztcbmltcG9ydCB7IGZpbHRlciB9IGZyb20gJ2xvZGFzaC1lcyc7XG5pbXBvcnQgeyBQYXNzd29yZFN0cmVuZ3RoQ29sb3IgfSBmcm9tICcuL3Bhc3N3b3JkLm1vZGVsJztcbmltcG9ydCB7IGdldHRleHQgfSBmcm9tICcuLi9pMThuL2dldHRleHQnO1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgUGFzc3dvcmRTdHJlbmd0aENoZWNrZXJTZXJ2aWNlIHtcblxuICBwcml2YXRlIEdSRUVOOiBQYXNzd29yZFN0cmVuZ3RoQ29sb3IgPSB7XG4gICAgY29sb3JOYW1lOiAnZ3JlZW4nLFxuICAgIGNvbG9yOiAncmdiKDAsIDEyOCwgMCknLFxuICAgIGRlc2NyaXB0aW9uOiBnZXR0ZXh0KCdzdHJvbmcnKSxcbiAgICBwYXNzd29yZFN0cmVuZ3RoOiBQYXNzd29yZFN0cmVuZ3RoLkdSRUVOXG4gIH07XG4gIHByaXZhdGUgWUVMTE9XOiBQYXNzd29yZFN0cmVuZ3RoQ29sb3IgPSB7XG4gICAgY29sb3JOYW1lOiAneWVsbG93JyxcbiAgICBjb2xvcjogJ3JnYigyNTUsIDIwNCwgNTEpJyxcbiAgICBkZXNjcmlwdGlvbjogZ2V0dGV4dCgnbWVkaXVtJyksXG4gICAgcGFzc3dvcmRTdHJlbmd0aDogUGFzc3dvcmRTdHJlbmd0aC5ZRUxMT1dcbiAgfTtcbiAgcHJpdmF0ZSBSRUQ6IFBhc3N3b3JkU3RyZW5ndGhDb2xvciA9IHtcbiAgICBjb2xvck5hbWU6ICdyZWQnLFxuICAgIGNvbG9yOiAncmdiKDE3MCwgMCwgNTEpJyxcbiAgICBkZXNjcmlwdGlvbjogZ2V0dGV4dCgnd2VhaycpLFxuICAgIHBhc3N3b3JkU3RyZW5ndGg6IFBhc3N3b3JkU3RyZW5ndGguUkVEXG4gIH07XG5cbiAgaGFzTG93ZXJDYXNlKHBhc3N3b3JkOiBzdHJpbmcpIHtcbiAgICByZXR1cm4gKHBhc3N3b3JkLnNlYXJjaCgvW2Etel0vKSAhPT0gLTEpO1xuICB9XG5cbiAgaGFzVXBwZXJDYXNlKHBhc3N3b3JkOiBzdHJpbmcpIHtcbiAgICByZXR1cm4gKHBhc3N3b3JkLnNlYXJjaCgvW0EtWl0vKSAhPT0gLTEpO1xuICB9XG5cbiAgaGFzTnVtYmVycyhwYXNzd29yZDogc3RyaW5nKSB7XG4gICAgcmV0dXJuIChwYXNzd29yZC5zZWFyY2goL1swLTldLykgIT09IC0xKTtcbiAgfVxuXG4gIGhhc1NwZWNpYWxDaGFycyhwYXNzd29yZDogc3RyaW5nKSB7XG4gICAgcmV0dXJuIChwYXNzd29yZC5zZWFyY2goL1teMC05YS16QS1aXSsvKSAhPT0gLTEpO1xuICB9XG5cbiAgZ2V0U3RyZW5ndGhDb2xvcihwYXNzd29yZDogc3RyaW5nKTogUGFzc3dvcmRTdHJlbmd0aENvbG9yIHtcbiAgICBjb25zdCBwYXNzd29yZFN0cmVuZ3RoID0gZmlsdGVyKFtcbiAgICAgIHRoaXMuaGFzTG93ZXJDYXNlKHBhc3N3b3JkKSxcbiAgICAgIHRoaXMuaGFzVXBwZXJDYXNlKHBhc3N3b3JkKSxcbiAgICAgIHRoaXMuaGFzTnVtYmVycyhwYXNzd29yZCksXG4gICAgICB0aGlzLmhhc1NwZWNpYWxDaGFycyhwYXNzd29yZClcbiAgICBdKS5sZW5ndGg7XG5cbiAgICBpZiAocGFzc3dvcmRTdHJlbmd0aCA+IDMpIHtcbiAgICAgIHJldHVybiB0aGlzLkdSRUVOO1xuICAgIH0gZWxzZSBpZiAocGFzc3dvcmRTdHJlbmd0aCA+PSAzKSB7XG4gICAgICByZXR1cm4gdGhpcy5ZRUxMT1c7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiB0aGlzLlJFRDtcbiAgICB9XG4gIH1cbn1cbiJdfQ==