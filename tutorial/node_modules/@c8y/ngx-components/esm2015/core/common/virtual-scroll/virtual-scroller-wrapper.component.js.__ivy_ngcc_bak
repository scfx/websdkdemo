import { Component, Input } from '@angular/core';
import { of, pipe } from 'rxjs';
import { map, tap } from 'rxjs/operators';
export class VirtualScrollerWrapperComponent {
    constructor() {
        this.filterPipe = pipe(tap());
        this.trackByFn = (i, item) => {
            return item.id;
        };
    }
    apply() {
        this.items$ = of(this.items).pipe(src => this.filterPipe(src), map(item => item));
    }
}
VirtualScrollerWrapperComponent.decorators = [
    { type: Component, args: [{
                selector: 'c8y-virtual-scroller-wrapper',
                template: "<ng-container *ngIf=\"items$ |async as items\" [ngSwitch]=\"strategy\">\n    <ng-container *ngSwitchCase=\"'window'\">\n      <cdk-virtual-scroll-viewport windowVirtualScrollStrategy [itemSizePx]=\"itemHeight\">\n        <div *cdkVirtualFor=\"let item of items; index as i; trackBy: trackByFn\">\n          <ng-container *ngTemplateOutlet=\"template; context: {$implicit: item, index: i}\"></ng-container>\n        </div>\n      </cdk-virtual-scroll-viewport>\n    </ng-container>\n\n    <ng-container *ngSwitchCase=\"'fixed'\">\n      <cdk-virtual-scroll-viewport [itemSize]=\"itemHeight\" [style.height]=\"containerHeight + 'px'\">\n        <div *cdkVirtualFor=\"let item of items; index as i; trackBy: trackByFn\" >\n          <ng-container *ngTemplateOutlet=\"template; context: {$implicit: item, index: i}\"></ng-container>\n        </div>\n      </cdk-virtual-scroll-viewport>\n    </ng-container>\n</ng-container>\n"
            },] }
];
VirtualScrollerWrapperComponent.propDecorators = {
    items: [{ type: Input }],
    itemHeight: [{ type: Input }],
    containerHeight: [{ type: Input }],
    template: [{ type: Input }],
    filterPipe: [{ type: Input }],
    strategy: [{ type: Input }],
    trackByFn: [{ type: Input }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmlydHVhbC1zY3JvbGxlci13cmFwcGVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL2NvcmUvY29tbW9uL3ZpcnR1YWwtc2Nyb2xsL3ZpcnR1YWwtc2Nyb2xsZXItd3JhcHBlci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUUsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQWUsTUFBTSxlQUFlLENBQUM7QUFDOUQsT0FBTyxFQUFjLEVBQUUsRUFBRSxJQUFJLEVBQUUsTUFBTSxNQUFNLENBQUM7QUFDNUMsT0FBTyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQU0xQyxNQUFNLE9BQU8sK0JBQStCO0lBSjVDO1FBWVcsZUFBVSxHQUFHLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQyxDQUFDO1FBS3pCLGNBQVMsR0FBRyxDQUFDLENBQUMsRUFBRSxJQUFJLEVBQUUsRUFBRTtZQUMvQixPQUFPLElBQUksQ0FBQyxFQUFFLENBQUM7UUFDakIsQ0FBQyxDQUFBO0lBUUgsQ0FBQztJQU5DLEtBQUs7UUFDSCxJQUFJLENBQUMsTUFBTSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsSUFBSSxDQUMvQixHQUFHLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLEVBQzNCLEdBQUcsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUNsQixDQUFDO0lBQ0osQ0FBQzs7O1lBMUJGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsOEJBQThCO2dCQUN4QyxzNkJBQXdEO2FBQ3pEOzs7b0JBRUUsS0FBSzt5QkFDTCxLQUFLOzhCQUNMLEtBQUs7dUJBQ0wsS0FBSzt5QkFJTCxLQUFLO3VCQUVMLEtBQUs7d0JBR0wsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbIiAgaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgVGVtcGxhdGVSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbiAgaW1wb3J0IHsgT2JzZXJ2YWJsZSwgb2YsIHBpcGUgfSBmcm9tICdyeGpzJztcbiAgaW1wb3J0IHsgbWFwLCB0YXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5cbiAgQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICdjOHktdmlydHVhbC1zY3JvbGxlci13cmFwcGVyJyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vdmlydHVhbC1zY3JvbGxlci13cmFwcGVyLmNvbXBvbmVudC5odG1sJ1xuICB9KVxuICBleHBvcnQgY2xhc3MgVmlydHVhbFNjcm9sbGVyV3JhcHBlckNvbXBvbmVudCB7XG4gICAgQElucHV0KCkgaXRlbXM7XG4gICAgQElucHV0KCkgaXRlbUhlaWdodDtcbiAgICBASW5wdXQoKSBjb250YWluZXJIZWlnaHQ7XG4gICAgQElucHV0KCkgdGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XG5cbiAgICBpdGVtcyQ6IE9ic2VydmFibGU8dW5rbm93bj47XG5cbiAgICBASW5wdXQoKSBmaWx0ZXJQaXBlID0gcGlwZSh0YXAoKSk7XG5cbiAgICBASW5wdXQoKVxuICAgIHN0cmF0ZWd5OiAnZml4ZWQnIHwgJ3dpbmRvdyc7XG5cbiAgICBASW5wdXQoKSB0cmFja0J5Rm4gPSAoaSwgaXRlbSkgPT4ge1xuICAgICAgcmV0dXJuIGl0ZW0uaWQ7XG4gICAgfVxuXG4gICAgYXBwbHkoKSB7XG4gICAgICB0aGlzLml0ZW1zJCA9IG9mKHRoaXMuaXRlbXMpLnBpcGUoXG4gICAgICAgIHNyYyA9PiB0aGlzLmZpbHRlclBpcGUoc3JjKSxcbiAgICAgICAgbWFwKGl0ZW0gPT4gaXRlbSlcbiAgICAgICk7XG4gICAgfVxuICB9XG4iXX0=