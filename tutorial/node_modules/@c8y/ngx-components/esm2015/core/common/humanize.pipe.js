import { Pipe } from '@angular/core';
import { upperFirst } from 'lodash-es';
/*
 * Humanize any string
 * Usage:
 *   'something' | humanize
*/
import * as ɵngcc0 from '@angular/core';
export class HumanizePipe {
    static humanize(str = '') {
        str = str
            .replace(/\./g, ' ')
            .replace(/c8y[\s,_]*/gi, '')
            .replace(/_/g, ' ')
            .replace(/([A-Z][a-z])/g, ' $1')
            .replace(/^\$\.?/, '')
            .replace(/^\s*/, '')
            .replace(/\s*$/, '')
            .replace(/\s+/g, ' ');
        return upperFirst(str);
    }
    transform(str) {
        return HumanizePipe.humanize(str);
    }
}
HumanizePipe.ɵfac = function HumanizePipe_Factory(t) { return new (t || HumanizePipe)(); };
HumanizePipe.ɵpipe = /*@__PURE__*/ ɵngcc0.ɵɵdefinePipe({ name: "humanize", type: HumanizePipe, pure: true });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HumanizePipe, [{
        type: Pipe,
        args: [{ name: 'humanize' }]
    }], null, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaHVtYW5pemUucGlwZS5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vY29yZS9jb21tb24vaHVtYW5pemUucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsSUFBSSxFQUFpQixNQUFNLGVBQWUsQ0FBQztBQUNwRCxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sV0FBVyxDQUFDO0FBRXZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRTs7QUFFRixNQUFNLE9BQU8sWUFBWTtBQUFHLElBQzFCLE1BQU0sQ0FBQyxRQUFRLENBQUMsTUFBYyxFQUFFO0FBQUksUUFDbEMsR0FBRyxHQUFHLEdBQUc7QUFDYixhQUFPLE9BQU8sQ0FBQyxLQUFLLEVBQUUsR0FBRyxDQUFDO0FBQzFCLGFBQU8sT0FBTyxDQUFDLGNBQWMsRUFBRSxFQUFFLENBQUM7QUFDbEMsYUFBTyxPQUFPLENBQUMsSUFBSSxFQUFFLEdBQUcsQ0FBQztBQUN6QixhQUFPLE9BQU8sQ0FBQyxlQUFlLEVBQUUsS0FBSyxDQUFDO0FBQ3RDLGFBQU8sT0FBTyxDQUFDLFFBQVEsRUFBRSxFQUFFLENBQUM7QUFDNUIsYUFBTyxPQUFPLENBQUMsTUFBTSxFQUFFLEVBQUUsQ0FBQztBQUMxQixhQUFPLE9BQU8sQ0FBQyxNQUFNLEVBQUUsRUFBRSxDQUFDO0FBQzFCLGFBQU8sT0FBTyxDQUFDLE1BQU0sRUFBRSxHQUFHLENBQUMsQ0FBQztBQUM1QixRQUNJLE9BQU8sVUFBVSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0FBQzNCLElBQUUsQ0FBQztBQUNILElBQ0UsU0FBUyxDQUFDLEdBQVc7QUFBSSxRQUN2QixPQUFPLFlBQVksQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLENBQUM7QUFDdEMsSUFBRSxDQUFDO0FBQ0g7d0NBbkJDLElBQUksU0FBQyxFQUFFLElBQUksRUFBRSxVQUFVLEVBQUU7Ozs7OzBCQUNyQjtBQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGlwZSwgUGlwZVRyYW5zZm9ybSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgdXBwZXJGaXJzdCB9IGZyb20gJ2xvZGFzaC1lcyc7XG5cbi8qXG4gKiBIdW1hbml6ZSBhbnkgc3RyaW5nXG4gKiBVc2FnZTpcbiAqICAgJ3NvbWV0aGluZycgfCBodW1hbml6ZVxuKi9cbkBQaXBlKHsgbmFtZTogJ2h1bWFuaXplJyB9KVxuZXhwb3J0IGNsYXNzIEh1bWFuaXplUGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xuICBzdGF0aWMgaHVtYW5pemUoc3RyOiBzdHJpbmcgPSAnJyk6IHN0cmluZyB7XG4gICAgc3RyID0gc3RyXG4gICAgICAucmVwbGFjZSgvXFwuL2csICcgJylcbiAgICAgIC5yZXBsYWNlKC9jOHlbXFxzLF9dKi9naSwgJycpXG4gICAgICAucmVwbGFjZSgvXy9nLCAnICcpXG4gICAgICAucmVwbGFjZSgvKFtBLVpdW2Etel0pL2csICcgJDEnKVxuICAgICAgLnJlcGxhY2UoL15cXCRcXC4/LywgJycpXG4gICAgICAucmVwbGFjZSgvXlxccyovLCAnJylcbiAgICAgIC5yZXBsYWNlKC9cXHMqJC8sICcnKVxuICAgICAgLnJlcGxhY2UoL1xccysvZywgJyAnKTtcblxuICAgIHJldHVybiB1cHBlckZpcnN0KHN0cik7XG4gIH1cblxuICB0cmFuc2Zvcm0oc3RyOiBzdHJpbmcpOiBzdHJpbmcge1xuICAgIHJldHVybiBIdW1hbml6ZVBpcGUuaHVtYW5pemUoc3RyKTtcbiAgfVxufVxuIl19