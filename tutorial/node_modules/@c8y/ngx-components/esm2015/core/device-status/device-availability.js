import { gettext } from '../i18n/gettext';
import { formatDate } from '@angular/common';
// TODO remove  when c8y-icon will works
export var SendStatus;
(function (SendStatus) {
    SendStatus["AVAILABLE"] = "AVAILABLE";
    SendStatus["UNAVAILABLE"] = "UNAVAILABLE";
    SendStatus["UNKNOWN"] = "UNKNOWN";
    SendStatus["MAINTENANCE"] = "MAINTENANCE";
    SendStatus["NOT_MONITORED"] = "NOT_MONITORED";
})(SendStatus || (SendStatus = {}));
export var PushStatus;
(function (PushStatus) {
    PushStatus["CONNECTED"] = "CONNECTED";
    PushStatus["DISCONNECTED"] = "DISCONNECTED";
    PushStatus["UNKNOWN"] = "UNKNOWN";
    PushStatus["MAINTENANCE"] = "MAINTENANCE";
})(PushStatus || (PushStatus = {}));
export var SendStatusLabels;
(function (SendStatusLabels) {
    SendStatusLabels[SendStatusLabels["AVAILABLE"] = gettext('Send connection: online')] = "AVAILABLE";
    SendStatusLabels[SendStatusLabels["NOT_MONITORED"] = gettext('Send connection: not monitored')] = "NOT_MONITORED";
    SendStatusLabels[SendStatusLabels["UNAVAILABLE"] = gettext('Send connection: offline')] = "UNAVAILABLE";
    SendStatusLabels[SendStatusLabels["UNKNOWN"] = gettext('Send connection status unknown')] = "UNKNOWN";
    SendStatusLabels[SendStatusLabels["MAINTENANCE"] = gettext('Device is under maintenance')] = "MAINTENANCE";
})(SendStatusLabels || (SendStatusLabels = {}));
export var PushStatusLabels;
(function (PushStatusLabels) {
    PushStatusLabels[PushStatusLabels["CONNECTED"] = gettext('Push connection: active')] = "CONNECTED";
    PushStatusLabels[PushStatusLabels["DISCONNECTED"] = gettext('Push connection: inactive')] = "DISCONNECTED";
    PushStatusLabels[PushStatusLabels["UNKNOWN"] = gettext('Push connection: inactive')] = "UNKNOWN";
    PushStatusLabels[PushStatusLabels["MAINTENANCE"] = gettext('Device is under maintenance')] = "MAINTENANCE";
})(PushStatusLabels || (PushStatusLabels = {}));
export const deviceAvailabilityIconMap = {
    sendData: {
        [SendStatus.AVAILABLE]: {
            icon: 'long-arrow-right',
            class: 'statusOk'
        },
        [SendStatus.UNAVAILABLE]: {
            icon: 'long-arrow-right',
            class: 'statusNok'
        },
        [SendStatus.UNKNOWN]: {
            icon: 'long-arrow-right',
            class: 'statusUnknown'
        },
        [SendStatus.NOT_MONITORED]: {
            icon: 'long-arrow-right',
            class: 'statusUnknown'
        }
    },
    push: {
        [PushStatus.CONNECTED]: {
            icon: 'long-arrow-left',
            class: 'statusOk'
        },
        [PushStatus.DISCONNECTED]: {
            icon: 'long-arrow-left',
            class: 'statusUnknown'
        },
        [PushStatus.UNKNOWN]: {
            icon: 'long-arrow-left',
            class: 'statusUnknown'
        },
        [PushStatus.MAINTENANCE]: {
            icon: 'wrench',
            class: 'statusAlert'
        }
    },
    device: {
        MAINTENANCE: {
            icon: 'wrench',
            class: 'statusAlert'
        }
    }
};
const ɵ0 = (lastMessage, translateService) => {
    const date = formatDate(new Date(lastMessage), 'medium', translateService.currentLang);
    return translateService.instant(gettext('Device last request:\n{{date}}'), { date });
};
export const tooltips = {
    sendStatusConnected: ɵ0,
    sendStatusDisconnected: gettext('Connection not monitored'),
    pushStatusConnected: gettext('Connection to device established'),
    pushStatusDisconnected: gettext('Connection to device not established (not supported by device or no connectivity)'),
    maintenance: gettext('Device is under maintenance')
};
export { ɵ0 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGV2aWNlLWF2YWlsYWJpbGl0eS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2NvcmUvZGV2aWNlLXN0YXR1cy9kZXZpY2UtYXZhaWxhYmlsaXR5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMxQyxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDN0Msd0NBQXdDO0FBRXhDLE1BQU0sQ0FBTixJQUFZLFVBTVg7QUFORCxXQUFZLFVBQVU7SUFDcEIscUNBQXVCLENBQUE7SUFDdkIseUNBQTJCLENBQUE7SUFDM0IsaUNBQW1CLENBQUE7SUFDbkIseUNBQTJCLENBQUE7SUFDM0IsNkNBQStCLENBQUE7QUFDakMsQ0FBQyxFQU5XLFVBQVUsS0FBVixVQUFVLFFBTXJCO0FBRUQsTUFBTSxDQUFOLElBQVksVUFLWDtBQUxELFdBQVksVUFBVTtJQUNwQixxQ0FBdUIsQ0FBQTtJQUN2QiwyQ0FBNkIsQ0FBQTtJQUM3QixpQ0FBbUIsQ0FBQTtJQUNuQix5Q0FBMkIsQ0FBQTtBQUM3QixDQUFDLEVBTFcsVUFBVSxLQUFWLFVBQVUsUUFLckI7QUFFRCxNQUFNLENBQU4sSUFBWSxnQkFNWDtBQU5ELFdBQVksZ0JBQWdCO0lBQzFCLGlEQUFZLE9BQU8sQ0FBQyx5QkFBeUIsQ0FBQyxlQUFBLENBQUE7SUFDOUMscURBQWdCLE9BQU8sQ0FBQyxnQ0FBZ0MsQ0FBQyxtQkFBQSxDQUFBO0lBQ3pELG1EQUFjLE9BQU8sQ0FBQywwQkFBMEIsQ0FBQyxpQkFBQSxDQUFBO0lBQ2pELCtDQUFVLE9BQU8sQ0FBQyxnQ0FBZ0MsQ0FBQyxhQUFBLENBQUE7SUFDbkQsbURBQWMsT0FBTyxDQUFDLDZCQUE2QixDQUFDLGlCQUFBLENBQUE7QUFDdEQsQ0FBQyxFQU5XLGdCQUFnQixLQUFoQixnQkFBZ0IsUUFNM0I7QUFFRCxNQUFNLENBQU4sSUFBWSxnQkFLWDtBQUxELFdBQVksZ0JBQWdCO0lBQzFCLGlEQUFZLE9BQU8sQ0FBQyx5QkFBeUIsQ0FBQyxlQUFBLENBQUE7SUFDOUMsb0RBQWUsT0FBTyxDQUFDLDJCQUEyQixDQUFDLGtCQUFBLENBQUE7SUFDbkQsK0NBQVUsT0FBTyxDQUFDLDJCQUEyQixDQUFDLGFBQUEsQ0FBQTtJQUM5QyxtREFBYyxPQUFPLENBQUMsNkJBQTZCLENBQUMsaUJBQUEsQ0FBQTtBQUN0RCxDQUFDLEVBTFcsZ0JBQWdCLEtBQWhCLGdCQUFnQixRQUszQjtBQUVELE1BQU0sQ0FBQyxNQUFNLHlCQUF5QixHQUFHO0lBQ3ZDLFFBQVEsRUFBRTtRQUNSLENBQUMsVUFBVSxDQUFDLFNBQVMsQ0FBQyxFQUFFO1lBQ3RCLElBQUksRUFBRSxrQkFBa0I7WUFDeEIsS0FBSyxFQUFFLFVBQVU7U0FDbEI7UUFDRCxDQUFDLFVBQVUsQ0FBQyxXQUFXLENBQUMsRUFBRTtZQUN4QixJQUFJLEVBQUUsa0JBQWtCO1lBQ3hCLEtBQUssRUFBRSxXQUFXO1NBQ25CO1FBQ0QsQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLEVBQUU7WUFDcEIsSUFBSSxFQUFFLGtCQUFrQjtZQUN4QixLQUFLLEVBQUUsZUFBZTtTQUN2QjtRQUNELENBQUMsVUFBVSxDQUFDLGFBQWEsQ0FBQyxFQUFFO1lBQzFCLElBQUksRUFBRSxrQkFBa0I7WUFDeEIsS0FBSyxFQUFFLGVBQWU7U0FDdkI7S0FDRjtJQUNELElBQUksRUFBRTtRQUNKLENBQUMsVUFBVSxDQUFDLFNBQVMsQ0FBQyxFQUFFO1lBQ3RCLElBQUksRUFBRSxpQkFBaUI7WUFDdkIsS0FBSyxFQUFFLFVBQVU7U0FDbEI7UUFDRCxDQUFDLFVBQVUsQ0FBQyxZQUFZLENBQUMsRUFBRTtZQUN6QixJQUFJLEVBQUUsaUJBQWlCO1lBQ3ZCLEtBQUssRUFBRSxlQUFlO1NBQ3ZCO1FBQ0QsQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLEVBQUU7WUFDcEIsSUFBSSxFQUFFLGlCQUFpQjtZQUN2QixLQUFLLEVBQUUsZUFBZTtTQUN2QjtRQUNELENBQUMsVUFBVSxDQUFDLFdBQVcsQ0FBQyxFQUFFO1lBQ3hCLElBQUksRUFBRSxRQUFRO1lBQ2QsS0FBSyxFQUFFLGFBQWE7U0FDckI7S0FDRjtJQUNELE1BQU0sRUFBRTtRQUNOLFdBQVcsRUFBRTtZQUNYLElBQUksRUFBRSxRQUFRO1lBQ2QsS0FBSyxFQUFFLGFBQWE7U0FDckI7S0FDRjtDQUNGLENBQUM7V0FHcUIsQ0FBQyxXQUFXLEVBQUUsZ0JBQWdCLEVBQUUsRUFBRTtJQUNyRCxNQUFNLElBQUksR0FBRyxVQUFVLENBQUMsSUFBSSxJQUFJLENBQUMsV0FBVyxDQUFDLEVBQUUsUUFBUSxFQUFFLGdCQUFnQixDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBQ3ZGLE9BQU8sZ0JBQWdCLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxnQ0FBZ0MsQ0FBQyxFQUFFLEVBQUUsSUFBSSxFQUFFLENBQUMsQ0FBQztBQUN2RixDQUFDO0FBSkgsTUFBTSxDQUFDLE1BQU0sUUFBUSxHQUFHO0lBQ3RCLG1CQUFtQixJQUdsQjtJQUNELHNCQUFzQixFQUFFLE9BQU8sQ0FBQywwQkFBMEIsQ0FBQztJQUMzRCxtQkFBbUIsRUFBRSxPQUFPLENBQUMsa0NBQWtDLENBQUM7SUFDaEUsc0JBQXNCLEVBQUUsT0FBTyxDQUM3QixtRkFBbUYsQ0FDcEY7SUFDRCxXQUFXLEVBQUUsT0FBTyxDQUFDLDZCQUE2QixDQUFDO0NBQ3BELENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXR0ZXh0IH0gZnJvbSAnLi4vaTE4bi9nZXR0ZXh0JztcbmltcG9ydCB7IGZvcm1hdERhdGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuLy8gVE9ETyByZW1vdmUgIHdoZW4gYzh5LWljb24gd2lsbCB3b3Jrc1xuXG5leHBvcnQgZW51bSBTZW5kU3RhdHVzIHtcbiAgQVZBSUxBQkxFID0gJ0FWQUlMQUJMRScsXG4gIFVOQVZBSUxBQkxFID0gJ1VOQVZBSUxBQkxFJyxcbiAgVU5LTk9XTiA9ICdVTktOT1dOJyxcbiAgTUFJTlRFTkFOQ0UgPSAnTUFJTlRFTkFOQ0UnLFxuICBOT1RfTU9OSVRPUkVEID0gJ05PVF9NT05JVE9SRUQnXG59XG5cbmV4cG9ydCBlbnVtIFB1c2hTdGF0dXMge1xuICBDT05ORUNURUQgPSAnQ09OTkVDVEVEJyxcbiAgRElTQ09OTkVDVEVEID0gJ0RJU0NPTk5FQ1RFRCcsXG4gIFVOS05PV04gPSAnVU5LTk9XTicsXG4gIE1BSU5URU5BTkNFID0gJ01BSU5URU5BTkNFJ1xufVxuXG5leHBvcnQgZW51bSBTZW5kU3RhdHVzTGFiZWxzIHtcbiAgQVZBSUxBQkxFID0gZ2V0dGV4dCgnU2VuZCBjb25uZWN0aW9uOiBvbmxpbmUnKSxcbiAgTk9UX01PTklUT1JFRCA9IGdldHRleHQoJ1NlbmQgY29ubmVjdGlvbjogbm90IG1vbml0b3JlZCcpLFxuICBVTkFWQUlMQUJMRSA9IGdldHRleHQoJ1NlbmQgY29ubmVjdGlvbjogb2ZmbGluZScpLFxuICBVTktOT1dOID0gZ2V0dGV4dCgnU2VuZCBjb25uZWN0aW9uIHN0YXR1cyB1bmtub3duJyksXG4gIE1BSU5URU5BTkNFID0gZ2V0dGV4dCgnRGV2aWNlIGlzIHVuZGVyIG1haW50ZW5hbmNlJylcbn1cblxuZXhwb3J0IGVudW0gUHVzaFN0YXR1c0xhYmVscyB7XG4gIENPTk5FQ1RFRCA9IGdldHRleHQoJ1B1c2ggY29ubmVjdGlvbjogYWN0aXZlJyksXG4gIERJU0NPTk5FQ1RFRCA9IGdldHRleHQoJ1B1c2ggY29ubmVjdGlvbjogaW5hY3RpdmUnKSxcbiAgVU5LTk9XTiA9IGdldHRleHQoJ1B1c2ggY29ubmVjdGlvbjogaW5hY3RpdmUnKSxcbiAgTUFJTlRFTkFOQ0UgPSBnZXR0ZXh0KCdEZXZpY2UgaXMgdW5kZXIgbWFpbnRlbmFuY2UnKVxufVxuXG5leHBvcnQgY29uc3QgZGV2aWNlQXZhaWxhYmlsaXR5SWNvbk1hcCA9IHtcbiAgc2VuZERhdGE6IHtcbiAgICBbU2VuZFN0YXR1cy5BVkFJTEFCTEVdOiB7XG4gICAgICBpY29uOiAnbG9uZy1hcnJvdy1yaWdodCcsXG4gICAgICBjbGFzczogJ3N0YXR1c09rJ1xuICAgIH0sXG4gICAgW1NlbmRTdGF0dXMuVU5BVkFJTEFCTEVdOiB7XG4gICAgICBpY29uOiAnbG9uZy1hcnJvdy1yaWdodCcsXG4gICAgICBjbGFzczogJ3N0YXR1c05vaydcbiAgICB9LFxuICAgIFtTZW5kU3RhdHVzLlVOS05PV05dOiB7XG4gICAgICBpY29uOiAnbG9uZy1hcnJvdy1yaWdodCcsXG4gICAgICBjbGFzczogJ3N0YXR1c1Vua25vd24nXG4gICAgfSxcbiAgICBbU2VuZFN0YXR1cy5OT1RfTU9OSVRPUkVEXToge1xuICAgICAgaWNvbjogJ2xvbmctYXJyb3ctcmlnaHQnLFxuICAgICAgY2xhc3M6ICdzdGF0dXNVbmtub3duJ1xuICAgIH1cbiAgfSxcbiAgcHVzaDoge1xuICAgIFtQdXNoU3RhdHVzLkNPTk5FQ1RFRF06IHtcbiAgICAgIGljb246ICdsb25nLWFycm93LWxlZnQnLFxuICAgICAgY2xhc3M6ICdzdGF0dXNPaydcbiAgICB9LFxuICAgIFtQdXNoU3RhdHVzLkRJU0NPTk5FQ1RFRF06IHtcbiAgICAgIGljb246ICdsb25nLWFycm93LWxlZnQnLFxuICAgICAgY2xhc3M6ICdzdGF0dXNVbmtub3duJ1xuICAgIH0sXG4gICAgW1B1c2hTdGF0dXMuVU5LTk9XTl06IHtcbiAgICAgIGljb246ICdsb25nLWFycm93LWxlZnQnLFxuICAgICAgY2xhc3M6ICdzdGF0dXNVbmtub3duJ1xuICAgIH0sXG4gICAgW1B1c2hTdGF0dXMuTUFJTlRFTkFOQ0VdOiB7XG4gICAgICBpY29uOiAnd3JlbmNoJyxcbiAgICAgIGNsYXNzOiAnc3RhdHVzQWxlcnQnXG4gICAgfVxuICB9LFxuICBkZXZpY2U6IHtcbiAgICBNQUlOVEVOQU5DRToge1xuICAgICAgaWNvbjogJ3dyZW5jaCcsXG4gICAgICBjbGFzczogJ3N0YXR1c0FsZXJ0J1xuICAgIH1cbiAgfVxufTtcblxuZXhwb3J0IGNvbnN0IHRvb2x0aXBzID0ge1xuICBzZW5kU3RhdHVzQ29ubmVjdGVkOiAobGFzdE1lc3NhZ2UsIHRyYW5zbGF0ZVNlcnZpY2UpID0+IHtcbiAgICBjb25zdCBkYXRlID0gZm9ybWF0RGF0ZShuZXcgRGF0ZShsYXN0TWVzc2FnZSksICdtZWRpdW0nLCB0cmFuc2xhdGVTZXJ2aWNlLmN1cnJlbnRMYW5nKTtcbiAgICByZXR1cm4gdHJhbnNsYXRlU2VydmljZS5pbnN0YW50KGdldHRleHQoJ0RldmljZSBsYXN0IHJlcXVlc3Q6XFxue3tkYXRlfX0nKSwgeyBkYXRlIH0pO1xuICB9LFxuICBzZW5kU3RhdHVzRGlzY29ubmVjdGVkOiBnZXR0ZXh0KCdDb25uZWN0aW9uIG5vdCBtb25pdG9yZWQnKSxcbiAgcHVzaFN0YXR1c0Nvbm5lY3RlZDogZ2V0dGV4dCgnQ29ubmVjdGlvbiB0byBkZXZpY2UgZXN0YWJsaXNoZWQnKSxcbiAgcHVzaFN0YXR1c0Rpc2Nvbm5lY3RlZDogZ2V0dGV4dChcbiAgICAnQ29ubmVjdGlvbiB0byBkZXZpY2Ugbm90IGVzdGFibGlzaGVkIChub3Qgc3VwcG9ydGVkIGJ5IGRldmljZSBvciBubyBjb25uZWN0aXZpdHkpJ1xuICApLFxuICBtYWludGVuYW5jZTogZ2V0dGV4dCgnRGV2aWNlIGlzIHVuZGVyIG1haW50ZW5hbmNlJylcbn07XG4iXX0=