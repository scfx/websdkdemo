import { Component, ViewChild, Input } from '@angular/core';
import { NavigatorNode } from './navigator-node';
import { NavigatorService } from './navigator.service';
export class NavigatorItemComponent {
    constructor(service) {
        this.service = service;
        this.priority = 0;
        this.nodeData = new NavigatorNode();
    }
    ngOnInit() {
        this.ngOnChanges();
        setTimeout(() => this.service.add(this.nodeData));
    }
    ngOnChanges() {
        this.nodeData.icon = this.icon;
        this.nodeData.label = this.label;
        this.nodeData.path = this.path;
        this.nodeData.priority = this.priority;
        this.nodeData.iconTemplate = !this.icon ? this.template : undefined;
        this.nodeData.icon = this.icon;
    }
    ngOnDestroy() {
        this.service.remove(this.nodeData);
    }
}
NavigatorItemComponent.decorators = [
    { type: Component, args: [{
                selector: 'c8y-navigator-item',
                template: '<ng-template #iconTpl><ng-content></ng-content></ng-template>'
            },] }
];
NavigatorItemComponent.ctorParameters = () => [
    { type: NavigatorService }
];
NavigatorItemComponent.propDecorators = {
    template: [{ type: ViewChild, args: ['iconTpl', { static: true },] }],
    label: [{ type: Input }],
    icon: [{ type: Input }],
    path: [{ type: Input }],
    priority: [{ type: Input }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmF2aWdhdG9yLWVudHJ5LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2NvcmUvbmF2aWdhdG9yL25hdmlnYXRvci1lbnRyeS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBZSxTQUFTLEVBQUUsS0FBSyxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ3hFLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUNqRCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQU12RCxNQUFNLE9BQU8sc0JBQXNCO0lBT2pDLFlBQ1UsT0FBeUI7UUFBekIsWUFBTyxHQUFQLE9BQU8sQ0FBa0I7UUFIMUIsYUFBUSxHQUFHLENBQUMsQ0FBQztRQUtwQixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksYUFBYSxFQUFFLENBQUM7SUFDdEMsQ0FBQztJQUVELFFBQVE7UUFDTixJQUFJLENBQUMsV0FBVyxFQUFFLENBQUM7UUFDbkIsVUFBVSxDQUFDLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO0lBQ3BELENBQUM7SUFFRCxXQUFXO1FBQ1QsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQztRQUMvQixJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDO1FBQ2pDLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUM7UUFDL0IsSUFBSSxDQUFDLFFBQVEsQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQztRQUN2QyxJQUFJLENBQUMsUUFBUSxDQUFDLFlBQVksR0FBRyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQztRQUNwRSxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDO0lBQ2pDLENBQUM7SUFFRCxXQUFXO1FBQ1QsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ3JDLENBQUM7OztZQWpDRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLG9CQUFvQjtnQkFDOUIsUUFBUSxFQUFFLCtEQUErRDthQUMxRTs7O1lBTFEsZ0JBQWdCOzs7dUJBT3RCLFNBQVMsU0FBQyxTQUFTLEVBQUUsRUFBQyxNQUFNLEVBQUUsSUFBSSxFQUFDO29CQUNuQyxLQUFLO21CQUNMLEtBQUs7bUJBQ0wsS0FBSzt1QkFDTCxLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBUZW1wbGF0ZVJlZiwgVmlld0NoaWxkLCBJbnB1dH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBOYXZpZ2F0b3JOb2RlIH0gZnJvbSAnLi9uYXZpZ2F0b3Itbm9kZSc7XG5pbXBvcnQgeyBOYXZpZ2F0b3JTZXJ2aWNlIH0gZnJvbSAnLi9uYXZpZ2F0b3Iuc2VydmljZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2M4eS1uYXZpZ2F0b3ItaXRlbScsXG4gIHRlbXBsYXRlOiAnPG5nLXRlbXBsYXRlICNpY29uVHBsPjxuZy1jb250ZW50PjwvbmctY29udGVudD48L25nLXRlbXBsYXRlPicsXG59KVxuZXhwb3J0IGNsYXNzIE5hdmlnYXRvckl0ZW1Db21wb25lbnQgIHtcbiAgQFZpZXdDaGlsZCgnaWNvblRwbCcsIHtzdGF0aWM6IHRydWV9KSB0ZW1wbGF0ZTogVGVtcGxhdGVSZWY8YW55PjtcbiAgQElucHV0KCkgbGFiZWw6IHN0cmluZztcbiAgQElucHV0KCkgaWNvbjogc3RyaW5nO1xuICBASW5wdXQoKSBwYXRoOiBzdHJpbmc7XG4gIEBJbnB1dCgpIHByaW9yaXR5ID0gMDtcbiAgbm9kZURhdGE6IE5hdmlnYXRvck5vZGU7XG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgc2VydmljZTogTmF2aWdhdG9yU2VydmljZVxuICApIHtcbiAgICB0aGlzLm5vZGVEYXRhID0gbmV3IE5hdmlnYXRvck5vZGUoKTtcbiAgfVxuXG4gIG5nT25Jbml0KCk6IHZvaWQge1xuICAgIHRoaXMubmdPbkNoYW5nZXMoKTtcbiAgICBzZXRUaW1lb3V0KCgpID0+IHRoaXMuc2VydmljZS5hZGQodGhpcy5ub2RlRGF0YSkpO1xuICB9XG5cbiAgbmdPbkNoYW5nZXMoKTogdm9pZCB7XG4gICAgdGhpcy5ub2RlRGF0YS5pY29uID0gdGhpcy5pY29uO1xuICAgIHRoaXMubm9kZURhdGEubGFiZWwgPSB0aGlzLmxhYmVsO1xuICAgIHRoaXMubm9kZURhdGEucGF0aCA9IHRoaXMucGF0aDtcbiAgICB0aGlzLm5vZGVEYXRhLnByaW9yaXR5ID0gdGhpcy5wcmlvcml0eTtcbiAgICB0aGlzLm5vZGVEYXRhLmljb25UZW1wbGF0ZSA9ICF0aGlzLmljb24gPyB0aGlzLnRlbXBsYXRlIDogdW5kZWZpbmVkO1xuICAgIHRoaXMubm9kZURhdGEuaWNvbiA9IHRoaXMuaWNvbjtcbiAgfVxuXG4gIG5nT25EZXN0cm95KCk6IHZvaWQge1xuICAgIHRoaXMuc2VydmljZS5yZW1vdmUodGhpcy5ub2RlRGF0YSk7XG4gIH1cbn1cbiJdfQ==