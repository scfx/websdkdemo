import { Component, Input, HostBinding } from '@angular/core';
import { DomSanitizer } from '@angular/platform-browser';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/platform-browser';
import * as ɵngcc2 from '@angular/common';
import * as ɵngcc3 from '../i18n/c8y-translate.pipe';
import * as ɵngcc4 from '../common/date.pipe';

function RangeDisplayComponent_div_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "div", 11);
} }
function RangeDisplayComponent_div_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "div", 12);
} }
function RangeDisplayComponent_div_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "div", 13);
    ɵngcc0.ɵɵpipe(1, "translate");
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵattributeInterpolate2("data-label", "", ctx_r2.config.target, " ", ctx_r2.config.unit, "");
    ɵngcc0.ɵɵpropertyInterpolate3("title", "", ɵngcc0.ɵɵpipeBind1(1, 5, "Target"), ": ", ctx_r2.config.target, " ", ctx_r2.config.unit, "");
} }
function RangeDisplayComponent_div_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "div", 14);
    ɵngcc0.ɵɵpipe(1, "c8yDate");
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵpipe(3, "c8yDate");
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵattributeInterpolate3("data-label", "", ctx_r3.config.current, " ", ctx_r3.config.unit, " \n ", ɵngcc0.ɵɵpipeBind1(1, 7, ctx_r3.config.time), "");
    ɵngcc0.ɵɵpropertyInterpolate4("title", "", ɵngcc0.ɵɵpipeBind1(2, 9, "Current"), ": ", ctx_r3.config.current, " ", ctx_r3.config.unit, " | ", ɵngcc0.ɵɵpipeBind1(3, 11, ctx_r3.config.time), "");
} }
function RangeDisplayComponent_div_10_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "div", 10);
} if (rf & 2) {
    const index_r6 = ctx.index;
    const ctx_r4 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵattribute("data-label", ctx_r4.rulerCalc(index_r6));
} }
const _c0 = function (a0) { return { "range-display--vertical": a0 }; };
const _c1 = function () { return []; };
export class RangeDisplayComponent {
    constructor(sanitizer) {
        this.sanitizer = sanitizer;
        this.config = {};
    }
    get inlineStyle() {
        this.config = this.config || {};
        if (!this.config.min) {
            this.config.min = 0;
        }
        if (!this.config.max) {
            this.config.max = 100;
        }
        if (this.config.fractionSize !== undefined) {
            this.config.current = parseFloat(this.config.current.toFixed(this.config.fractionSize));
        }
        return this.sanitizer.bypassSecurityTrustStyle(`
          --range-min: ${this.config.min};
          --range-max: ${this.config.max};
          --full-range: ${this.config.max - this.config.min};
          --measurement-target: ${((this.config.target - this.config.min) * 100) /
            (this.config.max - this.config.min)}%;
          --measurement-current: ${((this.config.current - this.config.min) * 100) /
            (this.config.max - this.config.min)}%;
          --range-y-min: ${((this.config.yellowRangeMin - this.config.min) * 100) /
            (this.config.max - this.config.min)}%;
          --range-y-max: ${((this.config.yellowRangeMax - this.config.min) /
            (this.config.max - this.config.min)) *
            100}%;
          --range-r-min: ${((this.config.redRangeMin - this.config.min) * 100) /
            (this.config.max - this.config.min)}%;
          --range-r-max: ${((this.config.redRangeMax - this.config.min) /
            (this.config.max - this.config.min)) *
            100}%;
        `);
    }
    checkTarget() {
        return (this.config.target !== undefined &&
            (this.config.target >= this.config.min && this.config.target <= this.config.max));
    }
    rulerCalc(index) {
        const num = this.config.min + ((this.config.max - this.config.min) / 10) * index;
        if (this.config.fractionSize !== undefined) {
            return parseFloat(num.toFixed(this.config.fractionSize));
        }
        return parseFloat(num.toFixed(2));
    }
    trackByIndex(index, el) {
        return index;
    }
    isRedRangeDisplayed() {
        const { redRangeMin, redRangeMax } = this.config;
        return this.isRangeDisplayed(redRangeMin, redRangeMax);
    }
    isYellowRangeDisplayed() {
        const { yellowRangeMin, yellowRangeMax } = this.config;
        return this.isRangeDisplayed(yellowRangeMin, yellowRangeMax);
    }
    isRangeDisplayed(rangeMin, rangeMax) {
        return rangeMin === 0 || rangeMax === 0 || rangeMin && rangeMax;
    }
}
RangeDisplayComponent.ɵfac = function RangeDisplayComponent_Factory(t) { return new (t || RangeDisplayComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DomSanitizer)); };
RangeDisplayComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: RangeDisplayComponent, selectors: [["c8y-range-display"]], hostVars: 1, hostBindings: function RangeDisplayComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵattribute("style", ctx.inlineStyle, ɵngcc0.ɵɵsanitizeStyle);
    } }, inputs: { config: "config" }, decls: 13, vars: 14, consts: [[3, "ngClass"], [1, "range-display"], [1, "range-display__range"], [1, "range-display__range__unit"], ["class", "range-display__range__max", 4, "ngIf"], ["class", "range-display__range__min", 4, "ngIf"], ["class", "range-display__range__target", 3, "title", 4, "ngIf"], ["class", "range-display__range__current", 3, "title", 4, "ngIf"], [1, "range-display__ruler"], ["class", "range-display__tick", 4, "ngFor", "ngForOf", "ngForTrackBy"], [1, "range-display__tick"], [1, "range-display__range__max"], [1, "range-display__range__min"], [1, "range-display__range__target", 3, "title"], [1, "range-display__range__current", 3, "title"]], template: function RangeDisplayComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵelementStart(2, "div", 2);
        ɵngcc0.ɵɵelementStart(3, "div", 3);
        ɵngcc0.ɵɵtext(4);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(5, RangeDisplayComponent_div_5_Template, 1, 0, "div", 4);
        ɵngcc0.ɵɵtemplate(6, RangeDisplayComponent_div_6_Template, 1, 0, "div", 5);
        ɵngcc0.ɵɵtemplate(7, RangeDisplayComponent_div_7_Template, 2, 7, "div", 6);
        ɵngcc0.ɵɵtemplate(8, RangeDisplayComponent_div_8_Template, 4, 13, "div", 7);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(9, "div", 8);
        ɵngcc0.ɵɵtemplate(10, RangeDisplayComponent_div_10_Template, 1, 1, "div", 9);
        ɵngcc0.ɵɵelement(11, "div", 10);
        ɵngcc0.ɵɵpipe(12, "number");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(11, _c0, ctx.config.orientation === "vertical"));
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵtextInterpolate1(" ", ctx.config.unit, " ");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isRedRangeDisplayed());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isYellowRangeDisplayed());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.checkTarget());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.config.current != undefined && ctx.config.current >= ctx.config.min && ctx.config.current <= ctx.config.max);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngForOf", ɵngcc0.ɵɵpureFunction0(13, _c1).constructor(10))("ngForTrackBy", ctx.trackByIndex);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵattribute("data-label", ɵngcc0.ɵɵpipeBind1(12, 9, ctx.config.max || 100));
    } }, directives: [ɵngcc2.NgClass, ɵngcc2.NgIf, ɵngcc2.NgForOf], pipes: [ɵngcc2.DecimalPipe, ɵngcc3.C8yTranslatePipe, ɵngcc4.DatePipe], encapsulation: 2 });
RangeDisplayComponent.ctorParameters = () => [
    { type: DomSanitizer }
];
RangeDisplayComponent.propDecorators = {
    config: [{ type: Input }],
    inlineStyle: [{ type: HostBinding, args: ['attr.style',] }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(RangeDisplayComponent, [{
        type: Component,
        args: [{
                selector: 'c8y-range-display',
                template: "<div [ngClass]=\"{ 'range-display--vertical': config.orientation === 'vertical' }\">\n  <div class=\"range-display\">\n    <div class=\"range-display__range\">\n      <div class=\"range-display__range__unit\">\n        {{ config.unit }}\n      </div>\n      <div *ngIf=\"isRedRangeDisplayed()\" class=\"range-display__range__max\"></div>\n      <div\n        *ngIf=\"isYellowRangeDisplayed()\"\n        class=\"range-display__range__min\"\n      ></div>\n      <div\n        *ngIf=\"checkTarget()\"\n        class=\"range-display__range__target\"\n        attr.data-label=\"{{ config.target }} {{ config.unit }}\"\n        title=\"{{ 'Target' | translate }}: {{ config.target }} {{ config.unit }}\"\n      ></div>\n      <div\n        *ngIf=\"\n          config.current != undefined &&\n          config.current >= config.min &&\n          config.current <= config.max\n        \"\n        class=\"range-display__range__current\"\n        attr.data-label=\"{{ config.current }} {{ config.unit }} &#xa; {{ config.time | c8yDate }}\"\n        title=\"{{ 'Current' | translate }}: {{ config.current }} {{ config.unit }} | {{ config.time | c8yDate }}\"\n      ></div>\n    </div>\n    <div class=\"range-display__ruler\">\n      <div\n        *ngFor=\"let x of [].constructor(10); let index = index; trackBy: trackByIndex\"\n        attr.data-label=\"{{rulerCalc(index)}}\"\n        class=\"range-display__tick\"\n      ></div>\n      <div attr.data-label=\"{{ config.max || 100 | number }}\" class=\"range-display__tick\"></div>\n    </div>\n  </div>\n</div>"
            }]
    }], function () { return [{ type: ɵngcc1.DomSanitizer }]; }, { config: [{
            type: Input
        }], inlineStyle: [{
            type: HostBinding,
            args: ['attr.style']
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,