import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';
import { BsModalRef } from 'ngx-bootstrap/modal';
import { filter } from 'rxjs/operators';
import { WizardService } from './wizard.service';
/**
 * A generic component that is intended to serve as the building block of more wizards.
 *
 * **Example**
 * ```html
 * <button
 *    title="Add application"
 *    class="btn btn-primary"
 *    (click)="addApplication()"
 *  >
 *    Add application
 *  </button>
 * ```
 *
 * ```ts
 * import { Component } from '@angular/core';
 * import { WizardConfig, WizardService, Wizard } from '@c8y/ngx-components';
 * import { ModalOptions } from 'ngx-bootstrap/modal';
 *
 * @Component({
 *  selector: 'c8y-add-application-wizard',
 *  templateUrl: './templatePath'
 * })
 * export class AddApplicationWizardComponent {
 *   constructor(private wizardService: WizardService) {}
 *
 *   addApplication() {
 *     const wizardConfig: WizardConfig = {
 *       headerText: 'Add Application',
 *       headerIcon: 'c8y-icon-modules',
 *       bodyHeaderText: 'Select methods',
 *       bodyHeaderIcon: 'c8y-icon-modules'
 *     };
 *
 *     const initialState: Wizard = {
 *       wizardConfig,
 *       id: 'uploadApplication'
 *     };
 *
 *     const modalOptions: ModalOptions = { initialState };
 *
 *     this.wizardService.show(modalOptions);
 *   }
 * }
 * ```
 */
export class WizardComponent {
    constructor(wizardService, bsModalRef) {
        this.wizardService = wizardService;
        this.bsModalRef = bsModalRef;
        /**
         * A configuration object that allows you to set header values, both text and icon.
         */
        this.wizardConfig = {};
        /**
         * The event that is emitted when the wizard is closed.
         */
        this.onClose = new EventEmitter();
        /**
         * The event that is emitted when the wizard is reseted.
         */
        this.onReset = new EventEmitter();
        /**
         * The event that is emitted when the wizard entry is clicked.
         */
        this.onSelect = new EventEmitter();
        this.headerTemplate$ = this.wizardService.headerTemplate$.pipe(filter(header => header.wizardId === this.id));
        this.bodyTemplate$ = this.wizardService.bodyTemplate$.pipe(filter(body => body.wizardId === this.id));
        this.footerTemplate$ = this.wizardService.footerTemplate$.pipe(filter(footer => footer.wizardId === this.id));
    }
    ngOnInit() {
        this.emitTemplates();
    }
    /**
     * Resets the wizard.
     * @param result Custom result object which will be emitted via onReset output.
     */
    reset(result) {
        this.onReset.emit(result);
        this.emitTemplates();
    }
    /**
     * Closes the wizard.
     * @param result Custom result object which will be emitted via onClose output.
     */
    close(result) {
        this.onClose.emit(result);
        this.bsModalRef.hide();
    }
    emitTemplates() {
        setTimeout(() => {
            this.wizardService.headerTemplate$.next({ template: this.header, wizardId: this.id });
            this.wizardService.bodyTemplate$.next({ template: this.body, wizardId: this.id });
            this.wizardService.footerTemplate$.next({ template: this.footer, wizardId: this.id });
        });
    }
}
WizardComponent.decorators = [
    { type: Component, args: [{
                selector: 'c8y-wizard',
                template: "<div class=\"viewport-modal animated fadeIn\">\n  <ng-template *ngTemplateOutlet=\"(headerTemplate$ | async)?.template\"></ng-template>\n\n  <ng-template #headerRef>\n    <div class=\"modal-header dialog-header animated fadeIn\">\n      <h1 [c8yIcon]=\"wizardConfig.headerIcon\"></h1>\n      <h4>{{ wizardConfig.headerText | translate }}</h4>\n    </div>\n  </ng-template>\n\n  <ng-template *ngTemplateOutlet=\"(bodyTemplate$ | async)?.template\"></ng-template>\n\n  <ng-template #bodyRef>\n    <div class=\"p-16 p-t-8 text-center\" *ngIf=\"wizardConfig.bodyHeaderText\">\n      <div class=\"c8y-wizard-nav\">\n        <i [c8yIcon]=\"wizardConfig.bodyHeaderIcon\"></i>\n        <span>{{ wizardConfig.bodyHeaderText | translate }}</span>\n      </div>\n    </div>\n  </ng-template>\n  <c8y-wizard-outlet (onSelect)=\"onSelect.emit($event)\"></c8y-wizard-outlet>\n\n  <ng-template *ngTemplateOutlet=\"(footerTemplate$ | async)?.template\"></ng-template>\n  <ng-template #footerRef>\n    <div class=\"modal-footer animated fadeIn\">\n      <button\n        (click)=\"close()\"\n        type=\"button\"\n        class=\"btn btn-default\"\n        title=\"{{ 'Cancel' | translate }}\"\n      >\n        <span translate>Cancel</span>\n      </button>\n    </div>\n  </ng-template>\n</div>\n"
            },] }
];
WizardComponent.ctorParameters = () => [
    { type: WizardService },
    { type: BsModalRef }
];
WizardComponent.propDecorators = {
    header: [{ type: ViewChild, args: ['headerRef', { static: true },] }],
    body: [{ type: ViewChild, args: ['bodyRef', { static: true },] }],
    footer: [{ type: ViewChild, args: ['footerRef', { static: true },] }],
    id: [{ type: Input }],
    wizardConfig: [{ type: Input }],
    onClose: [{ type: Output }],
    onReset: [{ type: Output }],
    onSelect: [{ type: Output }]
};
//# sourceMappingURL=data:application/json;base64,