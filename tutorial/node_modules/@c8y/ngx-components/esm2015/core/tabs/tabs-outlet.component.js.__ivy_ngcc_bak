import { Component, Input, HostBinding, Renderer2, ElementRef, ViewChild } from '@angular/core';
import { debounceTime } from 'rxjs/operators';
import { fromEventPattern, fromEvent, merge } from 'rxjs';
import { Router } from '@angular/router';
import { HeaderService } from '../header/header.service';
export class TabsOutletComponent {
    constructor(router, renderer, el, header) {
        this.router = router;
        this.renderer = renderer;
        this.el = el;
        this.header = header;
        this.tabs = [];
        this.orientation = 'vertical';
        this.navigatorOpen = false;
        this.showLeft = false;
        this.showRight = false;
    }
    get isNavigatorOpen() {
        return this.navigatorOpen;
    }
    get hasTabs() {
        let visibleTabs = [];
        if (this.tabs) {
            visibleTabs = this.tabs.filter(tab => tab.hide !== true);
        }
        return visibleTabs.length;
    }
    get isHorizontal() {
        return this.orientation === 'horizontal';
    }
    get isVertical() {
        return this.orientation !== 'horizontal';
    }
    ngOnDestroy() {
        if (this.scrollSubscription) {
            this.scrollSubscription.unsubscribe();
        }
    }
    ngAfterContentInit() {
        if (this.orientation === 'horizontal') {
            this.scrollSubscribe();
        }
    }
    isActive(tab) {
        if (tab && tab.path) {
            return this.router.isActive(tab.path, false);
        }
        else {
            return false;
        }
    }
    navigateTo(path) {
        this.header.toggle();
        this.router.navigate([path]);
    }
    scroll(direction = 'right') {
        const { widthScroll, width, scrollLeft } = this.getDimensions();
        const multiplier = direction === 'left' ? -1 : 1;
        let targetScroll = scrollLeft + width * multiplier;
        if (targetScroll < 0) {
            targetScroll = 0;
        }
        if (targetScroll > widthScroll - width) {
            targetScroll = widthScroll - width;
        }
        // TODO: we should animate this
        this.container.nativeElement.scrollLeft = targetScroll;
    }
    scrollSubscribe() {
        let unlisten;
        this.scrollSubscription = merge(fromEvent(this.container.nativeElement, 'scroll'), fromEventPattern((handler) => {
            unlisten = this.renderer.listen('window', 'resize', handler);
        }, () => unlisten())).pipe(debounceTime(250)).subscribe(() => this.updateScroll());
    }
    updateScroll() {
        const { widthScroll, width, scrollLeft } = this.getDimensions();
        this.showLeft = !!scrollLeft;
        this.showRight = widthScroll > width + scrollLeft;
    }
    getDimensions() {
        const elTabs = this.tabsContainer.nativeElement;
        const el = this.container.nativeElement;
        const widthScroll = elTabs.scrollWidth;
        const width = el.clientWidth;
        const scrollLeft = el.scrollLeft;
        return { widthScroll, width, scrollLeft };
    }
}
TabsOutletComponent.decorators = [
    { type: Component, args: [{
                selector: 'c8y-tabs-outlet,c8y-ui-tabs',
                template: "<div #container class=\"tabContainer hidden-xs\">\n  <button class=\"tabs-slider tabs-slider-left\" #left *ngIf=\"showLeft\" (click)=\"scroll('left')\">\n    <i [c8yIcon]=\"'chevron-left'\"></i>\n  </button>\n  <button class=\"tabs-slider tabs-slider-right\" #right *ngIf=\"showRight\" (click)=\"scroll('right')\">\n    <i [c8yIcon]=\"'chevron-right'\"></i>\n  </button>\n  <ul class=\"nav nav-tabs nav-tabsc8y\" #tabsContainer>\n    <li [ngClass]=\"{'active': rla.isActive}\" *ngFor=\"let tab of tabs\">\n      <a [routerLink]=\"tab.path\" routerLinkActive #rla=\"routerLinkActive\" title=\"{{tab?.label | translate}}\">\n        <i [c8yIcon]=\"tab?.icon\" *ngIf=\"!tab.template && tab?.icon\"></i>\n        <span class=\"txt\" *ngIf=\"!tab.template\">{{tab?.label | translate}}</span>\n        <ng-container *ngTemplateOutlet=\"tab.template\"></ng-container>\n      </a>\n    </li>\n  </ul>\n</div>\n\n<div class=\"visible-xs mobile-tabs\">\n  <div class=\"c8y-select-wrapper\">\n    <select (change)=\"navigateTo($event.target.value)\" #select>\n      <option *ngFor=\"let tab of tabs\" [value]=\"tab.path\" [selected]=\"isActive(tab)\">\n        {{tab?.label | translate}}\n      </option>\n    </select>\n  </div>\n</div>\n"
            },] }
];
TabsOutletComponent.ctorParameters = () => [
    { type: Router },
    { type: Renderer2 },
    { type: ElementRef },
    { type: HeaderService }
];
TabsOutletComponent.propDecorators = {
    tabs: [{ type: Input }],
    orientation: [{ type: Input }],
    navigatorOpen: [{ type: Input }],
    isNavigatorOpen: [{ type: HostBinding, args: ['class.navigator-open',] }],
    hasTabs: [{ type: HostBinding, args: ['class.page-tabs',] }],
    isHorizontal: [{ type: HostBinding, args: ['class.page-tabs-horizontal',] }],
    isVertical: [{ type: HostBinding, args: ['class.page-tabs-vertical',] }],
    container: [{ type: ViewChild, args: ['container', { read: ElementRef, static: true },] }],
    leftBtn: [{ type: ViewChild, args: ['left', { read: ElementRef, static: false },] }],
    rightBtn: [{ type: ViewChild, args: ['right', { read: ElementRef, static: false },] }],
    tabsContainer: [{ type: ViewChild, args: ['tabsContainer', { read: ElementRef, static: false },] }]
};
//# sourceMappingURL=data:application/json;base64,