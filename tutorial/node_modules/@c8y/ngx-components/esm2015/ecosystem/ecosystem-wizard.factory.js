import { __awaiter } from "tslib";
import { Injectable } from '@angular/core';
import { EcosystemGuard } from './ecosystem.guard';
import { InstallFromPackageComponent } from './applications/install-from-package/install-from-package.component';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './ecosystem.guard';
export class EcosystemWizardFactory {
    constructor(ecosystemGuard) {
        this.ecosystemGuard = ecosystemGuard;
    }
    get() {
        return __awaiter(this, void 0, void 0, function* () {
            if (!this.ecosystemGuard.isFeatureEnabled()) {
                return;
            }
            else {
                return {
                    wizardId: 'uploadApplication',
                    component: InstallFromPackageComponent,
                    name: 'Install from available packages',
                    c8yIcon: 'big-parcel'
                };
            }
        });
    }
}
EcosystemWizardFactory.ɵfac = function EcosystemWizardFactory_Factory(t) { return new (t || EcosystemWizardFactory)(ɵngcc0.ɵɵinject(ɵngcc1.EcosystemGuard)); };
EcosystemWizardFactory.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: EcosystemWizardFactory, factory: EcosystemWizardFactory.ɵfac });
EcosystemWizardFactory.ctorParameters = () => [
    { type: EcosystemGuard }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(EcosystemWizardFactory, [{
        type: Injectable
    }], function () { return [{ type: ɵngcc1.EcosystemGuard }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZWNvc3lzdGVtLXdpemFyZC5mYWN0b3J5LmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi9lY29zeXN0ZW0vZWNvc3lzdGVtLXdpemFyZC5mYWN0b3J5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNuRCxPQUFPLEVBQUUsMkJBQTJCLEVBQUUsTUFBTSxvRUFBb0UsQ0FBQzs7O0FBR2pILE1BQU0sT0FBTyxzQkFBc0I7QUFDbkMsSUFBRSxZQUFvQixjQUE4QjtBQUFJLFFBQWxDLG1CQUFjLEdBQWQsY0FBYyxDQUFnQjtBQUFDLElBQUUsQ0FBQztBQUN4RCxJQUNRLEdBQUc7QUFDWDtBQUNXLFlBRFAsSUFBSSxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsZ0JBQWdCLEVBQUUsRUFBRTtBQUNqRCxnQkFBTSxPQUFPO0FBQ2IsYUFBSztBQUFDLGlCQUFLO0FBQ1gsZ0JBQU0sT0FBTztBQUNiLG9CQUFRLFFBQVEsRUFBRSxtQkFBbUI7QUFDckMsb0JBQVEsU0FBUyxFQUFFLDJCQUEyQjtBQUM5QyxvQkFBUSxJQUFJLEVBQUUsaUNBQWlDO0FBQy9DLG9CQUFRLE9BQU8sRUFBRSxZQUFZO0FBQzdCLGlCQUFPLENBQUM7QUFDUixhQUFLO0FBQ0wsUUFBRSxDQUFDO0FBRUgsS0FGRztBQUNIO2tEQWhCQyxVQUFVO2dKQUNUO0FBQUM7QUFDVSxZQUxKLGNBQWM7QUFBRzs7OytFQUFFO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBFY29zeXN0ZW1HdWFyZCB9IGZyb20gJy4vZWNvc3lzdGVtLmd1YXJkJztcbmltcG9ydCB7IEluc3RhbGxGcm9tUGFja2FnZUNvbXBvbmVudCB9IGZyb20gJy4vYXBwbGljYXRpb25zL2luc3RhbGwtZnJvbS1wYWNrYWdlL2luc3RhbGwtZnJvbS1wYWNrYWdlLmNvbXBvbmVudCc7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBFY29zeXN0ZW1XaXphcmRGYWN0b3J5IHtcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBlY29zeXN0ZW1HdWFyZDogRWNvc3lzdGVtR3VhcmQpIHt9XG5cbiAgYXN5bmMgZ2V0KCkge1xuICAgIGlmICghdGhpcy5lY29zeXN0ZW1HdWFyZC5pc0ZlYXR1cmVFbmFibGVkKCkpIHtcbiAgICAgIHJldHVybjtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgd2l6YXJkSWQ6ICd1cGxvYWRBcHBsaWNhdGlvbicsXG4gICAgICAgIGNvbXBvbmVudDogSW5zdGFsbEZyb21QYWNrYWdlQ29tcG9uZW50LFxuICAgICAgICBuYW1lOiAnSW5zdGFsbCBmcm9tIGF2YWlsYWJsZSBwYWNrYWdlcycsXG4gICAgICAgIGM4eUljb246ICdiaWctcGFyY2VsJ1xuICAgICAgfTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==