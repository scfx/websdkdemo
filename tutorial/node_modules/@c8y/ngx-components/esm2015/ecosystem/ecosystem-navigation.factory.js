import { __awaiter } from "tslib";
import { Injectable } from '@angular/core';
import { Permissions } from '@c8y/ngx-components';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@c8y/ngx-components';
export class EcosystemNavigationFactory {
    constructor(permissions) {
        this.permissions = permissions;
        this.navs = [];
        this.showNavigatorNodes = this.permissions.hasAnyRole([
            'ROLE_APPLICATION_MANAGEMENT_READ',
            'ROLE_APPLICATION_MANAGEMENT_ADMIN'
        ]);
    }
    get() {
        return __awaiter(this, void 0, void 0, function* () {
            /*
            The NavigatorNodes are added in AngularJS code to keep the Quick links widget working.
            After the Quick links widget is migrated to Angular, the logic of adding the NavigatorNodes can be migrated as well.
                if (this.navs.length === 0 && this.showNavigatorNodes) {
                  const applicationsNode: NavigatorNode = new NavigatorNode({
                    label: gettext('Applications'),
                    icon: 'c8y-modules',
                    path: '/ecosystem',
                    priority: 300,
                    routerLinkExact: false
                  });
            
                  const microservicesNode = new NavigatorNode({
                    label: gettext('Microservices'),
                    icon: 'microchip',
                    path: '/microservices',
                    priority: 200,
                    routerLinkExact: false
                  });
            
                  this.navs.push(
                    new NavigatorNode({
                      label: gettext('Ecosystem'),
                      icon: 'c8y-atom',
                      priority: 3200,
                      children: [applicationsNode, microservicesNode]
                    })
                  );
                }
            */
            return this.navs;
        });
    }
}
EcosystemNavigationFactory.ɵfac = function EcosystemNavigationFactory_Factory(t) { return new (t || EcosystemNavigationFactory)(ɵngcc0.ɵɵinject(ɵngcc1.Permissions)); };
EcosystemNavigationFactory.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: EcosystemNavigationFactory, factory: EcosystemNavigationFactory.ɵfac });
EcosystemNavigationFactory.ctorParameters = () => [
    { type: Permissions }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(EcosystemNavigationFactory, [{
        type: Injectable
    }], function () { return [{ type: ɵngcc1.Permissions }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZWNvc3lzdGVtLW5hdmlnYXRpb24uZmFjdG9yeS5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vZWNvc3lzdGVtL2Vjb3N5c3RlbS1uYXZpZ2F0aW9uLmZhY3RvcnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFnRCxXQUFXLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQzs7O0FBR2hHLE1BQU0sT0FBTywwQkFBMEI7QUFBRyxJQUl4QyxZQUFvQixXQUF3QjtBQUM5QyxRQURzQixnQkFBVyxHQUFYLFdBQVcsQ0FBYTtBQUFDLFFBSHJDLFNBQUksR0FBb0IsRUFBRSxDQUFDO0FBQ3JDLFFBR0ksSUFBSSxDQUFDLGtCQUFrQixHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsVUFBVSxDQUFDO0FBQzFELFlBQU0sa0NBQWtDO0FBQ3hDLFlBQU0sbUNBQW1DO0FBQ3pDLFNBQUssQ0FBQyxDQUFDO0FBQ1AsSUFBRSxDQUFDO0FBQ0gsSUFDUSxHQUFHO0FBQ1g7QUFDMkQsWUFEM0Q7QUFDQTtBQUNZO0FBQ1k7QUFDWTtBQUU1QjtBQUVMO0FBQ2tCO0FBR0Y7QUFDakI7QUFDRTtBQUFzQjtBQUNkO0FBRVM7QUFJWDtBQUNXO0FBQ0s7QUFFbkI7QUFBMkM7QUFFL0M7QUFFRjtBQUlHO0FBQXdDO0FBQW1EO0FBQXdDO0FBQXNDO0FBQXNFO0FBQXVCO0FBQXFCO0FBQWtCLGNBSi9TO0FBQ0YsWUFBSSxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUM7QUFDckIsUUFBRSxDQUFDO0FBRUgsS0FGRztBQUNIO3NEQTdDQyxVQUFVOzRKQUNUO0FBQUM7QUFBb0QsWUFIQSxXQUFXO0FBQUc7Ozs0RUFBRTtBQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgZ2V0dGV4dCwgTmF2aWdhdG9yTm9kZSwgTmF2aWdhdG9yTm9kZUZhY3RvcnksIFBlcm1pc3Npb25zIH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cyc7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBFY29zeXN0ZW1OYXZpZ2F0aW9uRmFjdG9yeSBpbXBsZW1lbnRzIE5hdmlnYXRvck5vZGVGYWN0b3J5IHtcbiAgcHJpdmF0ZSBuYXZzOiBOYXZpZ2F0b3JOb2RlW10gPSBbXTtcbiAgcHJpdmF0ZSBzaG93TmF2aWdhdG9yTm9kZXM6IGJvb2xlYW47XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBwZXJtaXNzaW9uczogUGVybWlzc2lvbnMpIHtcbiAgICB0aGlzLnNob3dOYXZpZ2F0b3JOb2RlcyA9IHRoaXMucGVybWlzc2lvbnMuaGFzQW55Um9sZShbXG4gICAgICAnUk9MRV9BUFBMSUNBVElPTl9NQU5BR0VNRU5UX1JFQUQnLFxuICAgICAgJ1JPTEVfQVBQTElDQVRJT05fTUFOQUdFTUVOVF9BRE1JTidcbiAgICBdKTtcbiAgfVxuXG4gIGFzeW5jIGdldCgpIHtcbi8qXG5UaGUgTmF2aWdhdG9yTm9kZXMgYXJlIGFkZGVkIGluIEFuZ3VsYXJKUyBjb2RlIHRvIGtlZXAgdGhlIFF1aWNrIGxpbmtzIHdpZGdldCB3b3JraW5nLlxuQWZ0ZXIgdGhlIFF1aWNrIGxpbmtzIHdpZGdldCBpcyBtaWdyYXRlZCB0byBBbmd1bGFyLCB0aGUgbG9naWMgb2YgYWRkaW5nIHRoZSBOYXZpZ2F0b3JOb2RlcyBjYW4gYmUgbWlncmF0ZWQgYXMgd2VsbC5cbiAgICBpZiAodGhpcy5uYXZzLmxlbmd0aCA9PT0gMCAmJiB0aGlzLnNob3dOYXZpZ2F0b3JOb2Rlcykge1xuICAgICAgY29uc3QgYXBwbGljYXRpb25zTm9kZTogTmF2aWdhdG9yTm9kZSA9IG5ldyBOYXZpZ2F0b3JOb2RlKHtcbiAgICAgICAgbGFiZWw6IGdldHRleHQoJ0FwcGxpY2F0aW9ucycpLFxuICAgICAgICBpY29uOiAnYzh5LW1vZHVsZXMnLFxuICAgICAgICBwYXRoOiAnL2Vjb3N5c3RlbScsXG4gICAgICAgIHByaW9yaXR5OiAzMDAsXG4gICAgICAgIHJvdXRlckxpbmtFeGFjdDogZmFsc2VcbiAgICAgIH0pO1xuXG4gICAgICBjb25zdCBtaWNyb3NlcnZpY2VzTm9kZSA9IG5ldyBOYXZpZ2F0b3JOb2RlKHtcbiAgICAgICAgbGFiZWw6IGdldHRleHQoJ01pY3Jvc2VydmljZXMnKSxcbiAgICAgICAgaWNvbjogJ21pY3JvY2hpcCcsXG4gICAgICAgIHBhdGg6ICcvbWljcm9zZXJ2aWNlcycsXG4gICAgICAgIHByaW9yaXR5OiAyMDAsXG4gICAgICAgIHJvdXRlckxpbmtFeGFjdDogZmFsc2VcbiAgICAgIH0pO1xuXG4gICAgICB0aGlzLm5hdnMucHVzaChcbiAgICAgICAgbmV3IE5hdmlnYXRvck5vZGUoe1xuICAgICAgICAgIGxhYmVsOiBnZXR0ZXh0KCdFY29zeXN0ZW0nKSxcbiAgICAgICAgICBpY29uOiAnYzh5LWF0b20nLFxuICAgICAgICAgIHByaW9yaXR5OiAzMjAwLFxuICAgICAgICAgIGNoaWxkcmVuOiBbYXBwbGljYXRpb25zTm9kZSwgbWljcm9zZXJ2aWNlc05vZGVdXG4gICAgICAgIH0pXG4gICAgICApO1xuICAgIH1cbiovXG4gICAgcmV0dXJuIHRoaXMubmF2cztcbiAgfVxufVxuIl19