import { __awaiter } from "tslib";
import { Component } from '@angular/core';
import { ApplicationType } from '@c8y/client';
import { EcosystemService } from '../ecosystem.service';
import { gettext } from '@c8y/ngx-components';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../ecosystem.service';
import * as ɵngcc2 from '../shared/add-application.component';
export class AddPackageComponent {
    constructor(ecosystemService) {
        this.ecosystemService = ecosystemService;
        this.headerText = gettext('Add package');
        this.successText = gettext('Package created');
        this.createPackageAppHandler = (f) => this.createPackageApp(f);
        this.uploadPackageHandler = (f, app) => this.uploadPackage(f, app);
    }
    createPackageApp(file) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.ecosystemService.isValidAppType(file, ApplicationType.HOSTED);
            return this.ecosystemService.createAppForArchive(file, true);
        });
    }
    uploadPackage(file, pckg) {
        return this.ecosystemService.uploadArchiveToApp(file, pckg);
    }
}
AddPackageComponent.ɵfac = function AddPackageComponent_Factory(t) { return new (t || AddPackageComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.EcosystemService)); };
AddPackageComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: AddPackageComponent, selectors: [["c8y-add-package"]], decls: 1, vars: 5, consts: [[3, "headerText", "headerIcon", "successText", "createApplicationHandler", "uploadApplicationHandler"]], template: function AddPackageComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelement(0, "c8y-add-application", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("headerText", ctx.headerText)("headerIcon", "big-parcel")("successText", ctx.successText)("createApplicationHandler", ctx.createPackageAppHandler)("uploadApplicationHandler", ctx.uploadPackageHandler);
    } }, directives: [ɵngcc2.AddApplicationComponent], encapsulation: 2 });
AddPackageComponent.ctorParameters = () => [
    { type: EcosystemService }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AddPackageComponent, [{
        type: Component,
        args: [{
                selector: 'c8y-add-package',
                template: `<c8y-add-application
    [headerText]="headerText"
    [headerIcon]="'big-parcel'"
    [successText]="successText"
    [createApplicationHandler]="createPackageAppHandler"
    [uploadApplicationHandler]="uploadPackageHandler"
  ></c8y-add-application>`
            }]
    }], function () { return [{ type: ɵngcc1.EcosystemService }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWRkLXBhY2thZ2UuY29tcG9uZW50LmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9lY29zeXN0ZW0vcGFja2FnZXMvYWRkLXBhY2thZ2UuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzFDLE9BQU8sRUFBRSxlQUFlLEVBQWdCLE1BQU0sYUFBYSxDQUFDO0FBQzVELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ3hELE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQzs7OztBQVk5QyxNQUFNLE9BQU8sbUJBQW1CO0FBQ2hDLElBR0UsWUFBb0IsZ0JBQWtDO0FBQUksUUFBdEMscUJBQWdCLEdBQWhCLGdCQUFnQixDQUFrQjtBQUFDLFFBSHZELGVBQVUsR0FBVyxPQUFPLENBQUMsYUFBYSxDQUFDLENBQUM7QUFDOUMsUUFBRSxnQkFBVyxHQUFXLE9BQU8sQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO0FBQ25ELFFBR0UsNEJBQXVCLEdBQUcsQ0FBQyxDQUFPLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNsRSxRQUFFLHlCQUFvQixHQUFHLENBQUMsQ0FBTyxFQUFFLEdBQWlCLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxDQUFDO0FBQ3BGLElBSjJELENBQUM7QUFDNUQsSUFJUSxnQkFBZ0IsQ0FBQyxJQUFVO0FBQUk7QUFDQSxZQUFuQyxNQUFNLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxjQUFjLENBQUMsSUFBSSxFQUFFLGVBQWUsQ0FBQyxNQUFNLENBQUMsQ0FBQztBQUM3RSxZQUFJLE9BQU8sSUFBSSxDQUFDLGdCQUFnQixDQUFDLG1CQUFtQixDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQztBQUNqRSxRQUFFLENBQUM7QUFFRixLQUZFO0FBQ0gsSUFDRSxhQUFhLENBQUMsSUFBVSxFQUFFLElBQWtCO0FBQUksUUFDOUMsT0FBTyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsa0JBQWtCLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQ2hFLElBQUUsQ0FBQztBQUNIOytDQTNCQyxTQUFTLFNBQUMsa0JBQ1QsUUFBUSxFQUFFLGlCQUFpQixrQkFDM0IsUUFBUSxFQUFFO3FPQU1jLGNBQ3pCOzs7OzJFQUNJO0FBQUM7QUFDVSxZQWRQLGdCQUFnQjtBQUFHOzs7Ozs7Ozs7Ozs7O2lGQUFFO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEFwcGxpY2F0aW9uVHlwZSwgSUFwcGxpY2F0aW9uIH0gZnJvbSAnQGM4eS9jbGllbnQnO1xuaW1wb3J0IHsgRWNvc3lzdGVtU2VydmljZSB9IGZyb20gJy4uL2Vjb3N5c3RlbS5zZXJ2aWNlJztcbmltcG9ydCB7IGdldHRleHQgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYzh5LWFkZC1wYWNrYWdlJyxcbiAgdGVtcGxhdGU6IGA8Yzh5LWFkZC1hcHBsaWNhdGlvblxuICAgIFtoZWFkZXJUZXh0XT1cImhlYWRlclRleHRcIlxuICAgIFtoZWFkZXJJY29uXT1cIidiaWctcGFyY2VsJ1wiXG4gICAgW3N1Y2Nlc3NUZXh0XT1cInN1Y2Nlc3NUZXh0XCJcbiAgICBbY3JlYXRlQXBwbGljYXRpb25IYW5kbGVyXT1cImNyZWF0ZVBhY2thZ2VBcHBIYW5kbGVyXCJcbiAgICBbdXBsb2FkQXBwbGljYXRpb25IYW5kbGVyXT1cInVwbG9hZFBhY2thZ2VIYW5kbGVyXCJcbiAgPjwvYzh5LWFkZC1hcHBsaWNhdGlvbj5gXG59KVxuZXhwb3J0IGNsYXNzIEFkZFBhY2thZ2VDb21wb25lbnQge1xuICBoZWFkZXJUZXh0OiBzdHJpbmcgPSBnZXR0ZXh0KCdBZGQgcGFja2FnZScpO1xuICBzdWNjZXNzVGV4dDogc3RyaW5nID0gZ2V0dGV4dCgnUGFja2FnZSBjcmVhdGVkJyk7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBlY29zeXN0ZW1TZXJ2aWNlOiBFY29zeXN0ZW1TZXJ2aWNlKSB7fVxuXG4gIGNyZWF0ZVBhY2thZ2VBcHBIYW5kbGVyID0gKGY6IEZpbGUpID0+IHRoaXMuY3JlYXRlUGFja2FnZUFwcChmKTtcbiAgdXBsb2FkUGFja2FnZUhhbmRsZXIgPSAoZjogRmlsZSwgYXBwOiBJQXBwbGljYXRpb24pID0+IHRoaXMudXBsb2FkUGFja2FnZShmLCBhcHApO1xuXG4gIGFzeW5jIGNyZWF0ZVBhY2thZ2VBcHAoZmlsZTogRmlsZSk6IFByb21pc2U8SUFwcGxpY2F0aW9uPiB7XG4gICAgYXdhaXQgdGhpcy5lY29zeXN0ZW1TZXJ2aWNlLmlzVmFsaWRBcHBUeXBlKGZpbGUsIEFwcGxpY2F0aW9uVHlwZS5IT1NURUQpO1xuICAgIHJldHVybiB0aGlzLmVjb3N5c3RlbVNlcnZpY2UuY3JlYXRlQXBwRm9yQXJjaGl2ZShmaWxlLCB0cnVlKTtcbiAgfVxuXG4gIHVwbG9hZFBhY2thZ2UoZmlsZTogRmlsZSwgcGNrZzogSUFwcGxpY2F0aW9uKTogUHJvbWlzZTxJQXBwbGljYXRpb24+IHtcbiAgICByZXR1cm4gdGhpcy5lY29zeXN0ZW1TZXJ2aWNlLnVwbG9hZEFyY2hpdmVUb0FwcChmaWxlLCBwY2tnKTtcbiAgfVxufVxuIl19