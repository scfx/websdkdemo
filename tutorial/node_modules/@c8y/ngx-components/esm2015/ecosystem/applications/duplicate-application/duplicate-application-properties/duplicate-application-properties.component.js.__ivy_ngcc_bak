import { __awaiter } from "tslib";
import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';
import { ApplicationService } from '@c8y/client';
import { BsModalRef } from 'ngx-bootstrap/modal';
import { EcosystemService } from '../../../ecosystem.service';
import { ApplicationPropertiesFormComponent } from '../../../shared/application-properties-form.component';
export class DuplicateApplicationPropertiesComponent {
    constructor(bsModalRef, ecosystemService, applicationService) {
        this.bsModalRef = bsModalRef;
        this.ecosystemService = ecosystemService;
        this.applicationService = applicationService;
        this.duplicatedApp = new EventEmitter();
        this.inProgress = false;
    }
    ngOnInit() {
        this.newAppConfig = this.ecosystemService.getUniqueAppConfig(this.selectedApp.value, this.existingApps);
    }
    duplicateApp() {
        return __awaiter(this, void 0, void 0, function* () {
            const formGroupValue = this.applicationPropertiesForm.formGroup.getRawValue();
            this.inProgress = true;
            const clonedApp = (yield this.applicationService.clone(this.selectedApp.value)).data;
            Object.assign(clonedApp, formGroupValue);
            delete clonedApp.type;
            yield this.updateApp(clonedApp);
            this.inProgress = false;
        });
    }
    cancel() {
        this.bsModalRef.hide();
    }
    back() {
        this.stepper.previous();
    }
    updateApp(clonedAppConfig) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                const app = (yield this.ecosystemService.updateApp(clonedAppConfig, true)).data;
                this.duplicatedApp.emit(app);
                this.stepper.next();
            }
            catch (err) {
                this.inProgress = false;
            }
        });
    }
}
DuplicateApplicationPropertiesComponent.decorators = [
    { type: Component, args: [{
                selector: 'c8y-duplicate-application-properties',
                template: "<p\n  class=\"p-16 text-center text-medium separator-bottom sticky-top bg-white fit-w\"\n  *ngIf=\"!inProgress\"\n>\n  {{ 'Provide application details' | translate }}\n</p>\n<c8y-application-properties-form\n  *ngIf=\"!inProgress\"\n  [application]=\"newAppConfig\"\n  class=\"d-block fit-w\"\n></c8y-application-properties-form>\n<c8y-progress-bar\n  *ngIf=\"inProgress\"\n  [message]=\"'Duplicating\u2026' | translate\"\n  class=\"text-center d-block\"\n></c8y-progress-bar>\n\n<c8y-wizard-footer>\n  <button\n    (click)=\"back()\"\n    [disabled]=\"inProgress\"\n    class=\"btn btn-default\"\n    type=\"button\"\n    title=\"{{ 'Back' | translate }}\"\n  >\n    {{ 'Back' | translate }}\n  </button>\n  <button (click)=\"cancel()\" class=\"btn btn-default\" title=\"{{ 'Cancel' | translate }}\">\n    {{ 'Cancel' | translate }}\n  </button>\n  <button\n    (click)=\"duplicateApp()\"\n    [disabled]=\"inProgress\"\n    class=\"btn btn-primary\"\n    type=\"button\"\n    title=\"{{ 'Duplicate' | translate }}\"\n  >\n    {{ 'Duplicate' | translate }}\n  </button>\n</c8y-wizard-footer>\n"
            },] }
];
DuplicateApplicationPropertiesComponent.ctorParameters = () => [
    { type: BsModalRef },
    { type: EcosystemService },
    { type: ApplicationService }
];
DuplicateApplicationPropertiesComponent.propDecorators = {
    stepper: [{ type: Input }],
    existingApps: [{ type: Input }],
    selectedApp: [{ type: Input }],
    duplicatedApp: [{ type: Output }],
    applicationPropertiesForm: [{ type: ViewChild, args: [ApplicationPropertiesFormComponent,] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHVwbGljYXRlLWFwcGxpY2F0aW9uLXByb3BlcnRpZXMuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vZWNvc3lzdGVtL2FwcGxpY2F0aW9ucy9kdXBsaWNhdGUtYXBwbGljYXRpb24vZHVwbGljYXRlLWFwcGxpY2F0aW9uLXByb3BlcnRpZXMvZHVwbGljYXRlLWFwcGxpY2F0aW9uLXByb3BlcnRpZXMuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNsRixPQUFPLEVBQUUsa0JBQWtCLEVBQWdCLE1BQU0sYUFBYSxDQUFDO0FBRS9ELE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUVqRCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUM5RCxPQUFPLEVBQUUsa0NBQWtDLEVBQUUsTUFBTSx1REFBdUQsQ0FBQztBQU0zRyxNQUFNLE9BQU8sdUNBQXVDO0lBV2xELFlBQ1UsVUFBc0IsRUFDdEIsZ0JBQWtDLEVBQ2xDLGtCQUFzQztRQUZ0QyxlQUFVLEdBQVYsVUFBVSxDQUFZO1FBQ3RCLHFCQUFnQixHQUFoQixnQkFBZ0IsQ0FBa0I7UUFDbEMsdUJBQWtCLEdBQWxCLGtCQUFrQixDQUFvQjtRQVZ0QyxrQkFBYSxHQUFHLElBQUksWUFBWSxFQUFnQixDQUFDO1FBSzNELGVBQVUsR0FBWSxLQUFLLENBQUM7SUFNekIsQ0FBQztJQUVKLFFBQVE7UUFDTixJQUFJLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxrQkFBa0IsQ0FDMUQsSUFBSSxDQUFDLFdBQVcsQ0FBQyxLQUFLLEVBQ3RCLElBQUksQ0FBQyxZQUFZLENBQ2xCLENBQUM7SUFDSixDQUFDO0lBRUssWUFBWTs7WUFDaEIsTUFBTSxjQUFjLEdBQUcsSUFBSSxDQUFDLHlCQUF5QixDQUFDLFNBQVMsQ0FBQyxXQUFXLEVBQUUsQ0FBQztZQUM5RSxJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQztZQUN2QixNQUFNLFNBQVMsR0FBRyxDQUFDLE1BQU0sSUFBSSxDQUFDLGtCQUFrQixDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO1lBRXJGLE1BQU0sQ0FBQyxNQUFNLENBQUMsU0FBUyxFQUFFLGNBQWMsQ0FBQyxDQUFDO1lBQ3pDLE9BQU8sU0FBUyxDQUFDLElBQUksQ0FBQztZQUV0QixNQUFNLElBQUksQ0FBQyxTQUFTLENBQUMsU0FBUyxDQUFDLENBQUM7WUFDaEMsSUFBSSxDQUFDLFVBQVUsR0FBRyxLQUFLLENBQUM7UUFDMUIsQ0FBQztLQUFBO0lBRUQsTUFBTTtRQUNKLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDekIsQ0FBQztJQUVELElBQUk7UUFDRixJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsRUFBRSxDQUFDO0lBQzFCLENBQUM7SUFFYSxTQUFTLENBQUMsZUFBc0M7O1lBQzVELElBQUk7Z0JBQ0YsTUFBTSxHQUFHLEdBQUcsQ0FBQyxNQUFNLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxTQUFTLENBQUMsZUFBZSxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO2dCQUNoRixJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztnQkFDN0IsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsQ0FBQzthQUNyQjtZQUFDLE9BQU8sR0FBRyxFQUFFO2dCQUNaLElBQUksQ0FBQyxVQUFVLEdBQUcsS0FBSyxDQUFDO2FBQ3pCO1FBQ0gsQ0FBQztLQUFBOzs7WUF4REYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxzQ0FBc0M7Z0JBQ2hELGtsQ0FBZ0U7YUFDakU7OztZQVJRLFVBQVU7WUFFVixnQkFBZ0I7WUFKaEIsa0JBQWtCOzs7c0JBWXhCLEtBQUs7MkJBQ0wsS0FBSzswQkFDTCxLQUFLOzRCQUNMLE1BQU07d0NBQ04sU0FBUyxTQUFDLGtDQUFrQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT3V0cHV0LCBWaWV3Q2hpbGQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEFwcGxpY2F0aW9uU2VydmljZSwgSUFwcGxpY2F0aW9uIH0gZnJvbSAnQGM4eS9jbGllbnQnO1xuaW1wb3J0IHsgQzh5U3RlcHBlciB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMnO1xuaW1wb3J0IHsgQnNNb2RhbFJlZiB9IGZyb20gJ25neC1ib290c3RyYXAvbW9kYWwnO1xuaW1wb3J0IHsgQmVoYXZpb3JTdWJqZWN0IH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBFY29zeXN0ZW1TZXJ2aWNlIH0gZnJvbSAnLi4vLi4vLi4vZWNvc3lzdGVtLnNlcnZpY2UnO1xuaW1wb3J0IHsgQXBwbGljYXRpb25Qcm9wZXJ0aWVzRm9ybUNvbXBvbmVudCB9IGZyb20gJy4uLy4uLy4uL3NoYXJlZC9hcHBsaWNhdGlvbi1wcm9wZXJ0aWVzLWZvcm0uY29tcG9uZW50JztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYzh5LWR1cGxpY2F0ZS1hcHBsaWNhdGlvbi1wcm9wZXJ0aWVzJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2R1cGxpY2F0ZS1hcHBsaWNhdGlvbi1wcm9wZXJ0aWVzLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBEdXBsaWNhdGVBcHBsaWNhdGlvblByb3BlcnRpZXNDb21wb25lbnQge1xuICBASW5wdXQoKSBzdGVwcGVyOiBDOHlTdGVwcGVyO1xuICBASW5wdXQoKSBleGlzdGluZ0FwcHM6IElBcHBsaWNhdGlvbltdO1xuICBASW5wdXQoKSBzZWxlY3RlZEFwcDogQmVoYXZpb3JTdWJqZWN0PElBcHBsaWNhdGlvbj47XG4gIEBPdXRwdXQoKSBkdXBsaWNhdGVkQXBwID0gbmV3IEV2ZW50RW1pdHRlcjxJQXBwbGljYXRpb24+KCk7XG4gIEBWaWV3Q2hpbGQoQXBwbGljYXRpb25Qcm9wZXJ0aWVzRm9ybUNvbXBvbmVudClcbiAgYXBwbGljYXRpb25Qcm9wZXJ0aWVzRm9ybTogQXBwbGljYXRpb25Qcm9wZXJ0aWVzRm9ybUNvbXBvbmVudDtcbiAgbmV3QXBwQ29uZmlnOiBJQXBwbGljYXRpb247XG5cbiAgaW5Qcm9ncmVzczogYm9vbGVhbiA9IGZhbHNlO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgYnNNb2RhbFJlZjogQnNNb2RhbFJlZixcbiAgICBwcml2YXRlIGVjb3N5c3RlbVNlcnZpY2U6IEVjb3N5c3RlbVNlcnZpY2UsXG4gICAgcHJpdmF0ZSBhcHBsaWNhdGlvblNlcnZpY2U6IEFwcGxpY2F0aW9uU2VydmljZVxuICApIHt9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5uZXdBcHBDb25maWcgPSB0aGlzLmVjb3N5c3RlbVNlcnZpY2UuZ2V0VW5pcXVlQXBwQ29uZmlnKFxuICAgICAgdGhpcy5zZWxlY3RlZEFwcC52YWx1ZSxcbiAgICAgIHRoaXMuZXhpc3RpbmdBcHBzXG4gICAgKTtcbiAgfVxuXG4gIGFzeW5jIGR1cGxpY2F0ZUFwcCgpIHtcbiAgICBjb25zdCBmb3JtR3JvdXBWYWx1ZSA9IHRoaXMuYXBwbGljYXRpb25Qcm9wZXJ0aWVzRm9ybS5mb3JtR3JvdXAuZ2V0UmF3VmFsdWUoKTtcbiAgICB0aGlzLmluUHJvZ3Jlc3MgPSB0cnVlO1xuICAgIGNvbnN0IGNsb25lZEFwcCA9IChhd2FpdCB0aGlzLmFwcGxpY2F0aW9uU2VydmljZS5jbG9uZSh0aGlzLnNlbGVjdGVkQXBwLnZhbHVlKSkuZGF0YTtcblxuICAgIE9iamVjdC5hc3NpZ24oY2xvbmVkQXBwLCBmb3JtR3JvdXBWYWx1ZSk7XG4gICAgZGVsZXRlIGNsb25lZEFwcC50eXBlO1xuXG4gICAgYXdhaXQgdGhpcy51cGRhdGVBcHAoY2xvbmVkQXBwKTtcbiAgICB0aGlzLmluUHJvZ3Jlc3MgPSBmYWxzZTtcbiAgfVxuXG4gIGNhbmNlbCgpIHtcbiAgICB0aGlzLmJzTW9kYWxSZWYuaGlkZSgpO1xuICB9XG5cbiAgYmFjaygpIHtcbiAgICB0aGlzLnN0ZXBwZXIucHJldmlvdXMoKTtcbiAgfVxuXG4gIHByaXZhdGUgYXN5bmMgdXBkYXRlQXBwKGNsb25lZEFwcENvbmZpZzogUGFydGlhbDxJQXBwbGljYXRpb24+KSB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IGFwcCA9IChhd2FpdCB0aGlzLmVjb3N5c3RlbVNlcnZpY2UudXBkYXRlQXBwKGNsb25lZEFwcENvbmZpZywgdHJ1ZSkpLmRhdGE7XG4gICAgICB0aGlzLmR1cGxpY2F0ZWRBcHAuZW1pdChhcHApO1xuICAgICAgdGhpcy5zdGVwcGVyLm5leHQoKTtcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIHRoaXMuaW5Qcm9ncmVzcyA9IGZhbHNlO1xuICAgIH1cbiAgfVxufVxuIl19