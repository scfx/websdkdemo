import { NgModule } from '@angular/core';
import { gettext, HOOK_PATTERN_MESSAGES, ProviderConfigurationModule } from '@c8y/ngx-components';
import { MESSAGES } from './pattern-messages.data';
import { SmsGatewayGuard } from './sms-gateway.guard';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@c8y/ngx-components';
const ɵ0 = MESSAGES;
export class SmsGatewayModule {
}
SmsGatewayModule.ɵfac = function SmsGatewayModule_Factory(t) { return new (t || SmsGatewayModule)(); };
SmsGatewayModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: SmsGatewayModule });
SmsGatewayModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [SmsGatewayGuard, { provide: HOOK_PATTERN_MESSAGES, useValue: ɵ0, multi: true }], imports: [[
            ProviderConfigurationModule.config([
                {
                    navigation: {
                        label: gettext('SMS provider'),
                        path: 'smsgateway',
                        icon: 'envelope-o',
                        parent: gettext('Settings'),
                        priority: 1000,
                        canActivate: [SmsGatewayGuard]
                    },
                    layout: {
                        pageTitle: gettext('SMS provider'),
                        cardTitle: gettext('Credentials'),
                        description: gettext('Enter your credentials from your SMS provider. This enables platform features that utilize SMS services (e.g. two-factor authentication and user notifications).'),
                        providerName: gettext('SMS provider'),
                        providerNamePlaceholder: gettext('Select or type to filter providers'),
                        providerNameNoMatchesHint: gettext('Select one of the existing providers.'),
                        deleteRoles: ['ROLE_SMS_ADMIN'],
                        deleteBtnLabel: gettext('Delete'),
                        saveRoles: ['ROLE_SMS_ADMIN'],
                        saveBtnLabel: gettext('Save'),
                        configurationUpdatedSuccessMsg: gettext('Credentials updated.'),
                        deleteConfigurationModalTitle: gettext('Delete credentials'),
                        deleteConfigurationModalBody: gettext(`You are about to delete SMS provider credentials. Deleting credentials will lock out any users with SMS-based two-factor authentication and deactivate the SMS-based smart rules and device communication. Do you want to proceed?`),
                        deleteConfigurationModalOkBtnLabel: gettext('Delete'),
                        configurationDeletedSuccessMsg: gettext('Credentials deleted.')
                    },
                    endpoint: {
                        definitionsEndpoint: {
                            baseUrl: 'service/messaging/providers',
                            listUrl: 'definitions'
                        },
                        configurationEndpoint: {
                            baseUrl: 'service/messaging/providers',
                            listUrl: 'configuration'
                        }
                    }
                }
            ])
        ]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SmsGatewayModule, [{
        type: NgModule,
        args: [{
                imports: [
                    ProviderConfigurationModule.config([
                        {
                            navigation: {
                                label: gettext('SMS provider'),
                                path: 'smsgateway',
                                icon: 'envelope-o',
                                parent: gettext('Settings'),
                                priority: 1000,
                                canActivate: [SmsGatewayGuard]
                            },
                            layout: {
                                pageTitle: gettext('SMS provider'),
                                cardTitle: gettext('Credentials'),
                                description: gettext('Enter your credentials from your SMS provider. This enables platform features that utilize SMS services (e.g. two-factor authentication and user notifications).'),
                                providerName: gettext('SMS provider'),
                                providerNamePlaceholder: gettext('Select or type to filter providers'),
                                providerNameNoMatchesHint: gettext('Select one of the existing providers.'),
                                deleteRoles: ['ROLE_SMS_ADMIN'],
                                deleteBtnLabel: gettext('Delete'),
                                saveRoles: ['ROLE_SMS_ADMIN'],
                                saveBtnLabel: gettext('Save'),
                                configurationUpdatedSuccessMsg: gettext('Credentials updated.'),
                                deleteConfigurationModalTitle: gettext('Delete credentials'),
                                deleteConfigurationModalBody: gettext(`You are about to delete SMS provider credentials. Deleting credentials will lock out any users with SMS-based two-factor authentication and deactivate the SMS-based smart rules and device communication. Do you want to proceed?`),
                                deleteConfigurationModalOkBtnLabel: gettext('Delete'),
                                configurationDeletedSuccessMsg: gettext('Credentials deleted.')
                            },
                            endpoint: {
                                definitionsEndpoint: {
                                    baseUrl: 'service/messaging/providers',
                                    listUrl: 'definitions'
                                },
                                configurationEndpoint: {
                                    baseUrl: 'service/messaging/providers',
                                    listUrl: 'configuration'
                                }
                            }
                        }
                    ])
                ],
                providers: [SmsGatewayGuard, { provide: HOOK_PATTERN_MESSAGES, useValue: ɵ0, multi: true }]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SmsGatewayModule, { imports: [ɵngcc1.ProviderConfigurationModule] }); })();
export { ɵ0 };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic21zLWdhdGV3YXkubW9kdWxlLmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi9zbXMtZ2F0ZXdheS9zbXMtZ2F0ZXdheS5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsT0FBTyxFQUFFLHFCQUFxQixFQUFFLDJCQUEyQixFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDbEcsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQ25ELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQzs7O0FBQ3RELFdBK0MyRSxRQUFRO0FBRW5GLE1BQU0sT0FBTyxnQkFBZ0I7QUFBRzs0Q0FoRC9CLFFBQVEsU0FBQyxrQkFDUixPQUFPLEVBQUU7TUFDUCwyQkFBMkIsQ0FBQyxNQUFNLENBQUMsMEJBQ2pDO01BQ0UsVUFBVSxFQUFFLGtDQUNWLEtBQUssRUFBRSxPQUFPLENBQUMsY0FBYyxDQUFDLGtDQUM5QixJQUFJLEVBQUUsWUFBWSxrQ0FDbEI7R0FBSSxFQUFFLFlBQVk7RUFDbEIsTUFBTSxFQUFFLE9BQU87QUFBQyxVQUFVLENBQUM7V0FDM0IsUUFBUSxFQUFFLElBQUk7R0FDZCxXQUFXLEVBQUUsQ0FBQyxlQUFlLENBQUM7bUJBQy9CO0tBQ0QsTUFBTSxFQUFFLGtDQUNOO0dBQVMsRUFBRSxPQUFPLENBQUMsY0FBYyxDQUFDO3NCQUNsQyxTQUFTLEVBQUUsT0FBTyxDQUFDLGFBQWE7QUFBQztXQUNqQyxXQUFXLEVBQUU7Q0FBTyxDQUNsQjs7NkNBQWtLLENBQ25LLGtDQUNELFlBQVksRUFBRSxPQUFPLENBQUMsY0FBYyxDQUFDLGtDQUNyQyx1QkFBdUIsRUFBRSxPQUFPLENBQUM7VUFBb0MsQ0FBQyxrQ0FDdEU7T0FBeUIsRUFBRSxPQUFPLENBQUMsdUNBQXVDLENBQUMsa0NBQzNFO01BQVcsRUFBRSxDQUFDLGdCQUFnQixDQUFDLGtDQUMvQixjQUFjLEVBQUUsT0FBTyxDQUFDLFFBQVEsQ0FBQzswQkFDakMsU0FBUyxFQUFFLENBQUMsZ0JBQWdCLENBQUM7Z0NBQzdCLFlBQVksRUFBRSxPQUFPLENBQUM7Q0FBTSxDQUFDLGtDQUM3QjtXQUE4QixFQUFFLE9BQU8sQ0FBQyxzQkFBc0IsQ0FBQzt1QkFDL0QsNkJBQTZCLEVBQUUsT0FBTyxDQUFDLG9CQUFvQixDQUFDOzRCQUM1RCw0QkFBNEIsRUFBRSxPQUFPLENBQ25DO2dOQUFvTyxDQUNyTyxrQ0FDRCxrQ0FBa0MsRUFBRSxPQUFPLENBQUM7RUFBUSxDQUFDLGtDQUNyRCw4QkFBOEIsRUFBRSxPQUFPLENBQUM7b0JBQXNCLENBQUMsOEJBQ2hFLDhCQUNEO0NBQVEsRUFBRTtjQUNSO0NBQW1CLEVBQUUsc0NBQ25CO0NBQU8sRUFBRSw2QkFBNkI7RUFDdEMsT0FBTyxFQUFFLGFBQWE7T0FDdkI7Y0FDRCxxQkFBcUIsRUFBRTswQkFDckIsT0FBTyxFQUFFLDZCQUE2QjtrQ0FDdEMsT0FBTyxFQUFFO0tBQWU7YUFDekI7O0dBQ0Y7Y0FDRjtxQkFDRixDQUFDLGtCQUNILGtCQUNELFNBQVMsRUFBRSxDQUFDLGVBQWUsRUFBRSxFQUFFLE9BQU8sRUFBRTtPQUFxQixFQUFFLFFBQVEsSUFBVSxFQUFFO0lBQUssRUFBRSxJQUFJLEVBQUUsQ0FBQztVQUNsRzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7dUtBQ0k7QUFBQztBQUFlIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGdldHRleHQsIEhPT0tfUEFUVEVSTl9NRVNTQUdFUywgUHJvdmlkZXJDb25maWd1cmF0aW9uTW9kdWxlIH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cyc7XG5pbXBvcnQgeyBNRVNTQUdFUyB9IGZyb20gJy4vcGF0dGVybi1tZXNzYWdlcy5kYXRhJztcbmltcG9ydCB7IFNtc0dhdGV3YXlHdWFyZCB9IGZyb20gJy4vc21zLWdhdGV3YXkuZ3VhcmQnO1xuXG5ATmdNb2R1bGUoe1xuICBpbXBvcnRzOiBbXG4gICAgUHJvdmlkZXJDb25maWd1cmF0aW9uTW9kdWxlLmNvbmZpZyhbXG4gICAgICB7XG4gICAgICAgIG5hdmlnYXRpb246IHtcbiAgICAgICAgICBsYWJlbDogZ2V0dGV4dCgnU01TIHByb3ZpZGVyJyksXG4gICAgICAgICAgcGF0aDogJ3Ntc2dhdGV3YXknLFxuICAgICAgICAgIGljb246ICdlbnZlbG9wZS1vJyxcbiAgICAgICAgICBwYXJlbnQ6IGdldHRleHQoJ1NldHRpbmdzJyksXG4gICAgICAgICAgcHJpb3JpdHk6IDEwMDAsXG4gICAgICAgICAgY2FuQWN0aXZhdGU6IFtTbXNHYXRld2F5R3VhcmRdXG4gICAgICAgIH0sXG4gICAgICAgIGxheW91dDoge1xuICAgICAgICAgIHBhZ2VUaXRsZTogZ2V0dGV4dCgnU01TIHByb3ZpZGVyJyksXG4gICAgICAgICAgY2FyZFRpdGxlOiBnZXR0ZXh0KCdDcmVkZW50aWFscycpLFxuICAgICAgICAgIGRlc2NyaXB0aW9uOiBnZXR0ZXh0KFxuICAgICAgICAgICAgJ0VudGVyIHlvdXIgY3JlZGVudGlhbHMgZnJvbSB5b3VyIFNNUyBwcm92aWRlci4gVGhpcyBlbmFibGVzIHBsYXRmb3JtIGZlYXR1cmVzIHRoYXQgdXRpbGl6ZSBTTVMgc2VydmljZXMgKGUuZy4gdHdvLWZhY3RvciBhdXRoZW50aWNhdGlvbiBhbmQgdXNlciBub3RpZmljYXRpb25zKS4nXG4gICAgICAgICAgKSxcbiAgICAgICAgICBwcm92aWRlck5hbWU6IGdldHRleHQoJ1NNUyBwcm92aWRlcicpLFxuICAgICAgICAgIHByb3ZpZGVyTmFtZVBsYWNlaG9sZGVyOiBnZXR0ZXh0KCdTZWxlY3Qgb3IgdHlwZSB0byBmaWx0ZXIgcHJvdmlkZXJzJyksXG4gICAgICAgICAgcHJvdmlkZXJOYW1lTm9NYXRjaGVzSGludDogZ2V0dGV4dCgnU2VsZWN0IG9uZSBvZiB0aGUgZXhpc3RpbmcgcHJvdmlkZXJzLicpLFxuICAgICAgICAgIGRlbGV0ZVJvbGVzOiBbJ1JPTEVfU01TX0FETUlOJ10sXG4gICAgICAgICAgZGVsZXRlQnRuTGFiZWw6IGdldHRleHQoJ0RlbGV0ZScpLFxuICAgICAgICAgIHNhdmVSb2xlczogWydST0xFX1NNU19BRE1JTiddLFxuICAgICAgICAgIHNhdmVCdG5MYWJlbDogZ2V0dGV4dCgnU2F2ZScpLFxuICAgICAgICAgIGNvbmZpZ3VyYXRpb25VcGRhdGVkU3VjY2Vzc01zZzogZ2V0dGV4dCgnQ3JlZGVudGlhbHMgdXBkYXRlZC4nKSxcbiAgICAgICAgICBkZWxldGVDb25maWd1cmF0aW9uTW9kYWxUaXRsZTogZ2V0dGV4dCgnRGVsZXRlIGNyZWRlbnRpYWxzJyksXG4gICAgICAgICAgZGVsZXRlQ29uZmlndXJhdGlvbk1vZGFsQm9keTogZ2V0dGV4dChcbiAgICAgICAgICAgIGBZb3UgYXJlIGFib3V0IHRvIGRlbGV0ZSBTTVMgcHJvdmlkZXIgY3JlZGVudGlhbHMuIERlbGV0aW5nIGNyZWRlbnRpYWxzIHdpbGwgbG9jayBvdXQgYW55IHVzZXJzIHdpdGggU01TLWJhc2VkIHR3by1mYWN0b3IgYXV0aGVudGljYXRpb24gYW5kIGRlYWN0aXZhdGUgdGhlIFNNUy1iYXNlZCBzbWFydCBydWxlcyBhbmQgZGV2aWNlIGNvbW11bmljYXRpb24uIERvIHlvdSB3YW50IHRvIHByb2NlZWQ/YFxuICAgICAgICAgICksXG4gICAgICAgICAgZGVsZXRlQ29uZmlndXJhdGlvbk1vZGFsT2tCdG5MYWJlbDogZ2V0dGV4dCgnRGVsZXRlJyksXG4gICAgICAgICAgY29uZmlndXJhdGlvbkRlbGV0ZWRTdWNjZXNzTXNnOiBnZXR0ZXh0KCdDcmVkZW50aWFscyBkZWxldGVkLicpXG4gICAgICAgIH0sXG4gICAgICAgIGVuZHBvaW50OiB7XG4gICAgICAgICAgZGVmaW5pdGlvbnNFbmRwb2ludDoge1xuICAgICAgICAgICAgYmFzZVVybDogJ3NlcnZpY2UvbWVzc2FnaW5nL3Byb3ZpZGVycycsXG4gICAgICAgICAgICBsaXN0VXJsOiAnZGVmaW5pdGlvbnMnXG4gICAgICAgICAgfSxcbiAgICAgICAgICBjb25maWd1cmF0aW9uRW5kcG9pbnQ6IHtcbiAgICAgICAgICAgIGJhc2VVcmw6ICdzZXJ2aWNlL21lc3NhZ2luZy9wcm92aWRlcnMnLFxuICAgICAgICAgICAgbGlzdFVybDogJ2NvbmZpZ3VyYXRpb24nXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgXSlcbiAgXSxcbiAgcHJvdmlkZXJzOiBbU21zR2F0ZXdheUd1YXJkLCB7IHByb3ZpZGU6IEhPT0tfUEFUVEVSTl9NRVNTQUdFUywgdXNlVmFsdWU6IE1FU1NBR0VTLCBtdWx0aTogdHJ1ZSB9XVxufSlcbmV4cG9ydCBjbGFzcyBTbXNHYXRld2F5TW9kdWxlIHt9XG4iXX0=