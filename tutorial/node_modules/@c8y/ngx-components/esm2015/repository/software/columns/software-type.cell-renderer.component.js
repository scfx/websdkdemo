import { Component } from '@angular/core';
import { CellRendererContext } from '@c8y/ngx-components';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@c8y/ngx-components';
import * as ɵngcc2 from '@angular/common';

function SoftwareTypeCellRendererComponent_span_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 2);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r0.context.item.softwareType);
} }
function SoftwareTypeCellRendererComponent_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "small", 3);
    ɵngcc0.ɵɵelementStart(1, "em", 4);
    ɵngcc0.ɵɵtext(2, "Undefined`software type`");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} }
export class SoftwareTypeCellRendererComponent {
    constructor(context) {
        this.context = context;
    }
}
SoftwareTypeCellRendererComponent.ɵfac = function SoftwareTypeCellRendererComponent_Factory(t) { return new (t || SoftwareTypeCellRendererComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CellRendererContext)); };
SoftwareTypeCellRendererComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: SoftwareTypeCellRendererComponent, selectors: [["ng-component"]], decls: 4, vars: 2, consts: [["class", "label label-info", 4, "ngIf", "ngIfElse"], ["emptyText", ""], [1, "label", "label-info"], [1, "text-muted"], ["translate", ""]], template: function SoftwareTypeCellRendererComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, SoftwareTypeCellRendererComponent_span_0_Template, 2, 1, "span", 0);
        ɵngcc0.ɵɵtemplate(1, SoftwareTypeCellRendererComponent_ng_template_1_Template, 3, 0, "ng-template", null, 1, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtext(3, "`\n");
    } if (rf & 2) {
        const _r1 = ɵngcc0.ɵɵreference(2);
        ɵngcc0.ɵɵproperty("ngIf", !!(ctx.context == null ? null : ctx.context.item == null ? null : ctx.context.item.softwareType))("ngIfElse", _r1);
    } }, directives: [ɵngcc2.NgIf, ɵngcc1.C8yTranslateDirective], encapsulation: 2 });
SoftwareTypeCellRendererComponent.ctorParameters = () => [
    { type: CellRendererContext }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SoftwareTypeCellRendererComponent, [{
        type: Component,
        args: [{
                template: "<span *ngIf=\"!!context?.item?.softwareType; else emptyText\" class=\"label label-info\">{{\n  context.item.softwareType\n}}</span>\n<ng-template #emptyText>\n  <small class=\"text-muted\">\n    <em translate>Undefined`software type`</em>\n  </small> </ng-template\n>`\n"
            }]
    }], function () { return [{ type: ɵngcc1.CellRendererContext }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic29mdHdhcmUtdHlwZS5jZWxsLXJlbmRlcmVyLmNvbXBvbmVudC5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcmVwb3NpdG9yeS9zb2Z0d2FyZS9jb2x1bW5zL3NvZnR3YXJlLXR5cGUuY2VsbC1yZW5kZXJlci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMxQyxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBSzFELE1BQU0sT0FBTyxpQ0FBaUM7QUFDOUMsSUFBRSxZQUFtQixPQUE0QjtBQUFJLFFBQWhDLFlBQU8sR0FBUCxPQUFPLENBQXFCO0FBQUMsSUFBRSxDQUFDO0FBQ3JEOzZEQUxDLFNBQVMsU0FBQyxrQkFDVDs0S0FBMkQsY0FDNUQ7Ozs7Ozs7c0ZBQ0k7QUFBQztBQUNVLFlBTlAsbUJBQW1CO0FBQUc7Ozs7OztvRkFBRTtBQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDZWxsUmVuZGVyZXJDb250ZXh0IH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cyc7XG5cbkBDb21wb25lbnQoe1xuICB0ZW1wbGF0ZVVybDogJy4vc29mdHdhcmUtdHlwZS5jZWxsLXJlbmRlcmVyLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBTb2Z0d2FyZVR5cGVDZWxsUmVuZGVyZXJDb21wb25lbnQge1xuICBjb25zdHJ1Y3RvcihwdWJsaWMgY29udGV4dDogQ2VsbFJlbmRlcmVyQ29udGV4dCkge31cbn1cbiJdfQ==