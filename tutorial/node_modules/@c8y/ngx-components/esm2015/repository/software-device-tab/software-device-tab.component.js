import { __awaiter } from "tslib";
import { Component } from '@angular/core';
import { ActivatedRoute } from '@angular/router';
import { BehaviorSubject } from 'rxjs';
import { map, switchMap } from 'rxjs/operators';
import { InventoryService, OperationStatus } from '@c8y/client';
import { RepositoryType } from '../repository.model';
import { RepositoryService } from '../repository.service';
import { AdvancedSoftwareService } from './advanced-software.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/router';
import * as ɵngcc2 from '../repository.service';
import * as ɵngcc3 from '@c8y/client';
import * as ɵngcc4 from './advanced-software.service';
import * as ɵngcc5 from '@c8y/ngx-components';
import * as ɵngcc6 from '@angular/common';
import * as ɵngcc7 from './installed-software.component';
import * as ɵngcc8 from './device-software-changes.component';

const _c0 = function (a0) { return { "icon-spin": a0 }; };
const _c1 = function (a0) { return { "split-view__detail--selected": a0 }; };
export class SoftwareDeviceTabComponent {
    constructor(route, repository, inventory, advancedSoftwareService) {
        this.route = route;
        this.repository = repository;
        this.inventory = inventory;
        this.advancedSoftwareService = advancedSoftwareService;
        this.deviceId = this.route.snapshot.parent.data.contextData.id;
        this.device$ = new BehaviorSubject(this.route.snapshot.parent.data.contextData);
        this.deviceTypeQuery$ = this.device$.pipe(map(device => this.repository.getDeviceTypeQuery(RepositoryType.SOFTWARE, device)));
        this.list$ = this.device$.pipe(switchMap(device => this.advancedSoftwareService
            .isASMAvailable()
            .then(isASMAvailable => ({ isASMAvailable, device }))), map(({ isASMAvailable, device }) => 
        // with ASM available software items will be retrieved directly in the
        // device-software-list component
        isASMAvailable ? undefined : this.repository.getDeviceSoftwareList(device)));
        this.changes$ = new BehaviorSubject([]);
        this.changesOperation$ = new BehaviorSubject(null);
        this.changesInProgress$ = this.changesOperation$.pipe(map(operation => this.isInProgress(operation)));
        this.reloading = false;
        this.showSoftwareChanges = false;
    }
    ngOnInit() {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.loadDevice();
            yield this.loadOperation();
        });
    }
    addChanges(requestedChanges) {
        let stagedChanges = [...this.changes$.value];
        requestedChanges.forEach(requestedChange => {
            const alreadyStaged = stagedChanges.some(stagedChange => this.areSameChanges(stagedChange, requestedChange));
            if (!alreadyStaged) {
                stagedChanges = [...stagedChanges, requestedChange];
            }
        });
        this.changes$.next(stagedChanges);
    }
    dropChange(changeToBeDropped) {
        let stagedChanges = [...this.changes$.value];
        stagedChanges = stagedChanges.filter(stagedChange => !this.areSameChanges(stagedChange, changeToBeDropped));
        this.changes$.next(stagedChanges);
    }
    areSameChanges(change1, change2) {
        return change1.name === change2.name &&
            change1.version === change2.version &&
            change1.action === change2.action;
    }
    clearChanges() {
        this.changes$.next([]);
    }
    loadDevice() {
        return __awaiter(this, void 0, void 0, function* () {
            this.reloading = true;
            const device = (yield this.inventory.detail(this.deviceId, { withChildren: false })).data;
            this.device$.next(device);
            this.reloading = false;
        });
    }
    applyChanges() {
        return __awaiter(this, void 0, void 0, function* () {
            const operation = yield this.repository.createSoftwareUpdateOperation(this.device$.value, this.changes$.value);
            this.trackOperation(operation);
        });
    }
    loadOperation() {
        return __awaiter(this, void 0, void 0, function* () {
            const operation = yield this.repository.getLastSoftwareUpdateOperation(this.deviceId);
            this.trackOperation(operation);
        });
    }
    trackOperation(operation) {
        this.changesOperation$.next(operation);
        if (this.isInProgress(operation)) {
            this.displayChangesFromOperation(operation);
            this.repository.observeOperation(operation).subscribe(operationUpdate => {
                this.changesOperation$.next(operationUpdate);
                if (operationUpdate.status === OperationStatus.SUCCESSFUL) {
                    this.clearChanges();
                    this.loadDevice();
                }
            }, operationUpdate => {
                this.changesOperation$.next(operationUpdate);
            });
        }
    }
    displayChangesFromOperation(operation) {
        const changes = this.repository.getDeviceSoftwareChangesFromOperation(operation, this.device$.value);
        this.changes$.next(changes);
    }
    isInProgress(operation) {
        return (operation && [OperationStatus.PENDING, OperationStatus.EXECUTING].includes(operation.status));
    }
}
SoftwareDeviceTabComponent.ɵfac = function SoftwareDeviceTabComponent_Factory(t) { return new (t || SoftwareDeviceTabComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ActivatedRoute), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.RepositoryService), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.InventoryService), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.AdvancedSoftwareService)); };
SoftwareDeviceTabComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: SoftwareDeviceTabComponent, selectors: [["c8y-software-device-tab"]], decls: 17, vars: 37, consts: [[3, "placement"], [1, "btn", "btn-link", 3, "title", "click"], ["c8yIcon", "refresh", 3, "ngClass"], [1, "card", "split-view--8-4", "m-b-0"], [1, "split-view__list", 3, "device", "deviceTypeQuery", "softwareList", "deviceSoftwareChanges", "deviceSoftwareChangesOperation", "deviceSoftwareChangesInProgress", "changes", "showSoftwareChanges"], [1, "bg-gray-white", "split-view__detail", 3, "ngClass", "changes", "changesInProgress", "clear", "drop", "apply", "hideSoftwareChanges"]], template: function SoftwareDeviceTabComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "c8y-action-bar-item", 0);
        ɵngcc0.ɵɵelementStart(1, "button", 1);
        ɵngcc0.ɵɵlistener("click", function SoftwareDeviceTabComponent_Template_button_click_1_listener() { return ctx.loadDevice(); });
        ɵngcc0.ɵɵpipe(2, "translate");
        ɵngcc0.ɵɵelement(3, "i", 2);
        ɵngcc0.ɵɵtext(4);
        ɵngcc0.ɵɵpipe(5, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(6, "div", 3);
        ɵngcc0.ɵɵelementStart(7, "c8y-installed-software", 4);
        ɵngcc0.ɵɵlistener("changes", function SoftwareDeviceTabComponent_Template_c8y_installed_software_changes_7_listener($event) { return ctx.addChanges($event); })("showSoftwareChanges", function SoftwareDeviceTabComponent_Template_c8y_installed_software_showSoftwareChanges_7_listener() { return ctx.showSoftwareChanges = true; });
        ɵngcc0.ɵɵpipe(8, "async");
        ɵngcc0.ɵɵpipe(9, "async");
        ɵngcc0.ɵɵpipe(10, "async");
        ɵngcc0.ɵɵpipe(11, "async");
        ɵngcc0.ɵɵpipe(12, "async");
        ɵngcc0.ɵɵpipe(13, "async");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(14, "c8y-device-software-changes", 5);
        ɵngcc0.ɵɵlistener("clear", function SoftwareDeviceTabComponent_Template_c8y_device_software_changes_clear_14_listener() { return ctx.clearChanges(); })("drop", function SoftwareDeviceTabComponent_Template_c8y_device_software_changes_drop_14_listener($event) { return ctx.dropChange($event); })("apply", function SoftwareDeviceTabComponent_Template_c8y_device_software_changes_apply_14_listener() { return ctx.applyChanges(); })("hideSoftwareChanges", function SoftwareDeviceTabComponent_Template_c8y_device_software_changes_hideSoftwareChanges_14_listener() { return ctx.showSoftwareChanges = false; });
        ɵngcc0.ɵɵpipe(15, "async");
        ɵngcc0.ɵɵpipe(16, "async");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("placement", "right");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(2, 13, "Reload"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(33, _c0, ctx.reloading));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(5, 15, "Reload"), " ");
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("device", ɵngcc0.ɵɵpipeBind1(8, 17, ctx.device$))("deviceTypeQuery", ɵngcc0.ɵɵpipeBind1(9, 19, ctx.deviceTypeQuery$))("softwareList", ɵngcc0.ɵɵpipeBind1(10, 21, ctx.list$))("deviceSoftwareChanges", ɵngcc0.ɵɵpipeBind1(11, 23, ctx.changes$))("deviceSoftwareChangesOperation", ɵngcc0.ɵɵpipeBind1(12, 25, ctx.changesOperation$))("deviceSoftwareChangesInProgress", ɵngcc0.ɵɵpipeBind1(13, 27, ctx.changesInProgress$));
        ɵngcc0.ɵɵadvance(7);
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(35, _c1, ctx.showSoftwareChanges))("changes", ɵngcc0.ɵɵpipeBind1(15, 29, ctx.changes$))("changesInProgress", ɵngcc0.ɵɵpipeBind1(16, 31, ctx.changesInProgress$));
    } }, directives: [ɵngcc5.ActionBarItemComponent, ɵngcc5.IconDirective, ɵngcc6.NgClass, ɵngcc7.InstalledSoftwareComponent, ɵngcc8.DeviceSoftwareChangesComponent], pipes: [ɵngcc5.C8yTranslatePipe, ɵngcc6.AsyncPipe], encapsulation: 2 });
SoftwareDeviceTabComponent.ctorParameters = () => [
    { type: ActivatedRoute },
    { type: RepositoryService },
    { type: InventoryService },
    { type: AdvancedSoftwareService }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SoftwareDeviceTabComponent, [{
        type: Component,
        args: [{
                selector: 'c8y-software-device-tab',
                template: "<c8y-action-bar-item [placement]=\"'right'\">\n  <button class=\"btn btn-link\" title=\"{{ 'Reload' | translate }}\" (click)=\"loadDevice()\">\n    <i c8yIcon=\"refresh\" [ngClass]=\"{ 'icon-spin': reloading }\"></i>\n    {{ 'Reload' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<div class=\"card split-view--8-4 m-b-0\">\n  <c8y-installed-software\n    class=\"split-view__list\"\n    [device]=\"device$ | async\"\n    [deviceTypeQuery]=\"deviceTypeQuery$ | async\"\n    [softwareList]=\"list$ | async\"\n    [deviceSoftwareChanges]=\"changes$ | async\"\n    [deviceSoftwareChangesOperation]=\"changesOperation$ | async\"\n    [deviceSoftwareChangesInProgress]=\"changesInProgress$ | async\"\n    (changes)=\"addChanges($event)\"\n    (showSoftwareChanges)=\"showSoftwareChanges = true\"\n  ></c8y-installed-software>\n  <c8y-device-software-changes\n    class=\"bg-gray-white split-view__detail\"\n    [ngClass]=\"{ 'split-view__detail--selected': showSoftwareChanges }\"\n    [changes]=\"changes$ | async\"\n    [changesInProgress]=\"changesInProgress$ | async\"\n    (clear)=\"clearChanges()\"\n    (drop)=\"dropChange($event)\"\n    (apply)=\"applyChanges()\"\n    (hideSoftwareChanges)=\"showSoftwareChanges = false\"\n  ></c8y-device-software-changes>\n</div>\n"
            }]
    }], function () { return [{ type: ɵngcc1.ActivatedRoute }, { type: ɵngcc2.RepositoryService }, { type: ɵngcc3.InventoryService }, { type: ɵngcc4.AdvancedSoftwareService }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,