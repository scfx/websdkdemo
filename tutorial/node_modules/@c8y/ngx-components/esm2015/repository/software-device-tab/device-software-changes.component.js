import { Component, EventEmitter, Input, Output } from '@angular/core';
import { BehaviorSubject } from 'rxjs';
import { map } from 'rxjs/operators';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@c8y/ngx-components';
import * as ɵngcc2 from '@angular/common';
import * as ɵngcc3 from './device-software-list.component';

function DeviceSoftwareChangesComponent_div_11_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 11);
    ɵngcc0.ɵɵelementStart(1, "div", 12);
    ɵngcc0.ɵɵelement(2, "h1", 13);
    ɵngcc0.ɵɵelementStart(3, "p");
    ɵngcc0.ɵɵelementStart(4, "strong", 4);
    ɵngcc0.ɵɵtext(5, "No software changes.");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(6, "br");
    ɵngcc0.ɵɵelementStart(7, "small", 4);
    ɵngcc0.ɵɵtext(8, "Selected actions will be displayed here.");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} }
function DeviceSoftwareChangesComponent_ng_template_13_fieldset_0_Template(rf, ctx) { if (rf & 1) {
    const _r7 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "fieldset", 15);
    ɵngcc0.ɵɵelementStart(1, "div", 16);
    ɵngcc0.ɵɵtext(2, "Installations`software`");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "c8y-device-software-list", 17);
    ɵngcc0.ɵɵlistener("remove", function DeviceSoftwareChangesComponent_ng_template_13_fieldset_0_Template_c8y_device_software_list_remove_3_listener($event) { ɵngcc0.ɵɵrestoreView(_r7); const ctx_r6 = ɵngcc0.ɵɵnextContext(2); return ctx_r6.drop.emit($event); });
    ɵngcc0.ɵɵpipe(4, "async");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("disabled", ctx_r4.changesInProgress);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("softwareList", ɵngcc0.ɵɵpipeBind1(4, 2, ctx_r4.installations$));
} }
function DeviceSoftwareChangesComponent_ng_template_13_fieldset_2_Template(rf, ctx) { if (rf & 1) {
    const _r9 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "fieldset", 15);
    ɵngcc0.ɵɵelementStart(1, "div", 16);
    ɵngcc0.ɵɵtext(2, "Removals`software`");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "c8y-device-software-list", 17);
    ɵngcc0.ɵɵlistener("remove", function DeviceSoftwareChangesComponent_ng_template_13_fieldset_2_Template_c8y_device_software_list_remove_3_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r8 = ɵngcc0.ɵɵnextContext(2); return ctx_r8.drop.emit($event); });
    ɵngcc0.ɵɵpipe(4, "async");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("disabled", ctx_r5.changesInProgress);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("softwareList", ɵngcc0.ɵɵpipeBind1(4, 2, ctx_r5.removals$));
} }
function DeviceSoftwareChangesComponent_ng_template_13_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, DeviceSoftwareChangesComponent_ng_template_13_fieldset_0_Template, 5, 4, "fieldset", 14);
    ɵngcc0.ɵɵpipe(1, "async");
    ɵngcc0.ɵɵtemplate(2, DeviceSoftwareChangesComponent_ng_template_13_fieldset_2_Template, 5, 4, "fieldset", 14);
    ɵngcc0.ɵɵpipe(3, "async");
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind1(1, 2, ctx_r2.installations$).length > 0);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind1(3, 4, ctx_r2.removals$).length > 0);
} }
const _c0 = function (a0) { return { "btn-pending": a0 }; };
function DeviceSoftwareChangesComponent_div_15_Template(rf, ctx) { if (rf & 1) {
    const _r11 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 18);
    ɵngcc0.ɵɵelementStart(1, "button", 19);
    ɵngcc0.ɵɵlistener("click", function DeviceSoftwareChangesComponent_div_15_Template_button_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r11); const ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10.clear.emit(); });
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵtext(3, " Clear`changes` ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(4, "button", 20);
    ɵngcc0.ɵɵlistener("click", function DeviceSoftwareChangesComponent_div_15_Template_button_click_4_listener() { ɵngcc0.ɵɵrestoreView(_r11); const ctx_r12 = ɵngcc0.ɵɵnextContext(); ctx_r12.apply.emit(); return ctx_r12.hideSoftwareChanges.emit(); });
    ɵngcc0.ɵɵpipe(5, "translate");
    ɵngcc0.ɵɵtext(6, " Apply changes ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(2, 5, "Clear changes"));
    ɵngcc0.ɵɵproperty("disabled", ctx_r3.changesInProgress);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(5, 7, "Apply changes"));
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(9, _c0, ctx_r3.changesInProgress))("disabled", ctx_r3.changesInProgress);
} }
export class DeviceSoftwareChangesComponent {
    constructor() {
        this.clear = new EventEmitter();
        this.drop = new EventEmitter();
        this.apply = new EventEmitter();
        this.hideSoftwareChanges = new EventEmitter();
        this.changes$ = new BehaviorSubject([]);
        this.installations$ = this.changes$.pipe(map(changes => {
            return changes.filter(change => change.action === 'install');
        }));
        this.removals$ = this.changes$.pipe(map(changes => {
            return changes.filter(change => change.action === 'delete');
        }));
    }
    ngOnChanges(changes) {
        if (changes.changes) {
            this.changes$.next(changes.changes.currentValue);
        }
    }
}
DeviceSoftwareChangesComponent.ɵfac = function DeviceSoftwareChangesComponent_Factory(t) { return new (t || DeviceSoftwareChangesComponent)(); };
DeviceSoftwareChangesComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: DeviceSoftwareChangesComponent, selectors: [["c8y-device-software-changes"]], inputs: { changes: "changes", changesInProgress: "changesInProgress" }, outputs: { clear: "clear", drop: "drop", apply: "apply", hideSoftwareChanges: "hideSoftwareChanges" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 17, vars: 10, consts: [[1, "inner-scroll", "d-flex", "d-col"], [1, "card-header", "separator", "sticky-top", "visible-sm", "visible-xs"], [1, "btn", "btn-clean", "text-primary", 3, "title", "click"], ["c8yIcon", "chevron-left"], ["translate", ""], [1, "card-header", "separator", "large-padding", "sticky-top"], ["translate", "", 1, "card-title"], ["id", "software-changes-list", 1, "flex-grow", "inner-scroll"], ["class", "card-block large-padding", 4, "ngIf", "ngIfElse"], ["changesList", ""], ["class", "card-footer separator large-padding sticky-bottom", 4, "ngIf"], [1, "card-block", "large-padding"], [1, "c8y-empty-state", "text-center"], [1, "c8y-icon", "c8y-icon-device-control", "c8y-icon-duocolor"], ["class", "card-block p-t-0 p-b-0", 3, "disabled", 4, "ngIf"], [1, "card-block", "p-t-0", "p-b-0", 3, "disabled"], ["translate", "", 1, "form-block", "legend"], [3, "softwareList", "remove"], [1, "card-footer", "separator", "large-padding", "sticky-bottom"], ["translate", "", 1, "btn", "btn-default", 3, "title", "disabled", "click"], ["translate", "", 1, "btn", "btn-primary", 3, "ngClass", "disabled", "title", "click"]], template: function DeviceSoftwareChangesComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵelementStart(2, "button", 2);
        ɵngcc0.ɵɵlistener("click", function DeviceSoftwareChangesComponent_Template_button_click_2_listener() { return ctx.hideSoftwareChanges.emit(); });
        ɵngcc0.ɵɵpipe(3, "translate");
        ɵngcc0.ɵɵelement(4, "i", 3);
        ɵngcc0.ɵɵelementStart(5, "span", 4);
        ɵngcc0.ɵɵtext(6, "Back");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(7, "div", 5);
        ɵngcc0.ɵɵelementStart(8, "h4", 6);
        ɵngcc0.ɵɵtext(9, "Software changes");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(10, "div", 7);
        ɵngcc0.ɵɵtemplate(11, DeviceSoftwareChangesComponent_div_11_Template, 9, 0, "div", 8);
        ɵngcc0.ɵɵpipe(12, "async");
        ɵngcc0.ɵɵtemplate(13, DeviceSoftwareChangesComponent_ng_template_13_Template, 4, 6, "ng-template", null, 9, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(15, DeviceSoftwareChangesComponent_div_15_Template, 7, 11, "div", 10);
        ɵngcc0.ɵɵpipe(16, "async");
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        const _r1 = ɵngcc0.ɵɵreference(14);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("title", ɵngcc0.ɵɵpipeBind1(3, 4, "Back"));
        ɵngcc0.ɵɵadvance(9);
        ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind1(12, 6, ctx.changes$).length === 0)("ngIfElse", _r1);
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind1(16, 8, ctx.changes$).length > 0);
    } }, directives: [ɵngcc1.IconDirective, ɵngcc1.C8yTranslateDirective, ɵngcc2.NgIf, ɵngcc3.DeviceSoftwareListComponent, ɵngcc2.NgClass], pipes: [ɵngcc1.C8yTranslatePipe, ɵngcc2.AsyncPipe], encapsulation: 2 });
DeviceSoftwareChangesComponent.propDecorators = {
    changes: [{ type: Input }],
    changesInProgress: [{ type: Input }],
    clear: [{ type: Output }],
    drop: [{ type: Output }],
    apply: [{ type: Output }],
    hideSoftwareChanges: [{ type: Output }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DeviceSoftwareChangesComponent, [{
        type: Component,
        args: [{
                selector: 'c8y-device-software-changes',
                template: "<div class=\"inner-scroll d-flex d-col\">\n  <div class=\"card-header separator sticky-top visible-sm visible-xs\">\n    <button\n      class=\"btn btn-clean text-primary\"\n      [title]=\"'Back' | translate\"\n      (click)=\"hideSoftwareChanges.emit()\"\n    >\n      <i c8yIcon=\"chevron-left\"></i><span translate>Back</span>\n    </button>\n  </div>\n  <div class=\"card-header separator large-padding sticky-top\">\n    <h4 class=\"card-title\" translate>Software changes</h4>\n  </div>\n  <div id=\"software-changes-list\" class=\"flex-grow inner-scroll\">\n    <div class=\"card-block large-padding\" *ngIf=\"(changes$ | async).length === 0; else changesList\">\n      <div class=\"c8y-empty-state text-center\">\n        <h1 class=\"c8y-icon c8y-icon-device-control c8y-icon-duocolor\"></h1>\n        <p>\n          <strong translate>No software changes.</strong> <br />\n          <small translate>Selected actions will be displayed here.</small>\n        </p>\n      </div>\n    </div>\n\n    <ng-template #changesList>\n      <fieldset\n        class=\"card-block p-t-0 p-b-0\"\n        *ngIf=\"(installations$ | async).length > 0\"\n        [disabled]=\"changesInProgress\"\n      >\n        <div class=\"form-block legend\" translate>Installations`software`</div>\n        <c8y-device-software-list\n          [softwareList]=\"installations$ | async\"\n          (remove)=\"drop.emit($event)\"\n        ></c8y-device-software-list>\n      </fieldset>\n\n      <fieldset\n        class=\"card-block p-t-0 p-b-0\"\n        *ngIf=\"(removals$ | async).length > 0\"\n        [disabled]=\"changesInProgress\"\n      >\n        <div class=\"form-block legend\" translate>Removals`software`</div>\n        <c8y-device-software-list\n          [softwareList]=\"removals$ | async\"\n          (remove)=\"drop.emit($event)\"\n        ></c8y-device-software-list>\n      </fieldset>\n    </ng-template>\n  </div>\n  <div\n    class=\"card-footer separator large-padding sticky-bottom\"\n    *ngIf=\"(changes$ | async).length > 0\"\n  >\n    <button\n      class=\"btn btn-default\"\n      (click)=\"clear.emit()\"\n      title=\"{{ 'Clear changes' | translate }}\"\n      [disabled]=\"changesInProgress\"\n      translate\n    >\n      Clear`changes`\n    </button>\n    <button\n      class=\"btn btn-primary\"\n      [ngClass]=\"{ 'btn-pending': changesInProgress }\"\n      [disabled]=\"changesInProgress\"\n      (click)=\"apply.emit(); hideSoftwareChanges.emit()\"\n      title=\"{{ 'Apply changes' | translate }}\"\n      translate\n    >\n      Apply changes\n    </button>\n  </div>\n</div>\n"
            }]
    }], function () { return []; }, { clear: [{
            type: Output
        }], drop: [{
            type: Output
        }], apply: [{
            type: Output
        }], hideSoftwareChanges: [{
            type: Output
        }], changes: [{
            type: Input
        }], changesInProgress: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGV2aWNlLXNvZnR3YXJlLWNoYW5nZXMuY29tcG9uZW50LmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9yZXBvc2l0b3J5L3NvZnR3YXJlLWRldmljZS10YWIvZGV2aWNlLXNvZnR3YXJlLWNoYW5nZXMuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBYSxNQUFNLEVBQWlCLE1BQU0sZUFBZSxDQUFDO0FBQ2pHLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxNQUFNLENBQUM7QUFDdkMsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLGdCQUFnQixDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBT3JDLE1BQU0sT0FBTyw4QkFBOEI7QUFBRyxJQUo5QztBQUNHLFFBTVMsVUFBSyxHQUF1QixJQUFJLFlBQVksRUFBRSxDQUFDO0FBQzNELFFBQVksU0FBSSxHQUF1QyxJQUFJLFlBQVksRUFBRSxDQUFDO0FBQzFFLFFBQVksVUFBSyxHQUF1QixJQUFJLFlBQVksRUFBRSxDQUFDO0FBQzNELFFBQVksd0JBQW1CLEdBQUcsSUFBSSxZQUFZLEVBQVEsQ0FBQztBQUMzRCxRQUNFLGFBQVEsR0FBRyxJQUFJLGVBQWUsQ0FBeUIsRUFBRSxDQUFDLENBQUM7QUFDN0QsUUFBRSxtQkFBYyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUNqQyxHQUFHLENBQUMsT0FBTyxDQUFDLEVBQUU7QUFDbEIsWUFBTSxPQUFPLE9BQU8sQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxLQUFLLFNBQVMsQ0FBQyxDQUFDO0FBQ25FLFFBQUksQ0FBQyxDQUFDLENBQ0gsQ0FBQztBQUNKLFFBQ0UsY0FBUyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUM1QixHQUFHLENBQUMsT0FBTyxDQUFDLEVBQUU7QUFDbEIsWUFBTSxPQUFPLE9BQU8sQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxLQUFLLFFBQVEsQ0FBQyxDQUFDO0FBQ2xFLFFBQUksQ0FBQyxDQUFDLENBQ0gsQ0FBQztBQUNKLElBTUEsQ0FBQztBQUNELElBTkUsV0FBVyxDQUFDLE9BQXNCO0FBQ3BDLFFBQUksSUFBSSxPQUFPLENBQUMsT0FBTyxFQUFFO0FBQ3pCLFlBQU0sSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsQ0FBQztBQUN2RCxTQUFLO0FBQ0wsSUFBRSxDQUFDO0FBQ0g7MERBOUJDLFNBQVMsU0FBQyxrQkFDVCxRQUFRLEVBQUUsNkJBQTZCO0tBQ3ZDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OzswR0FBcUQsY0FDdEQ7Ozs7Ozs7Ozs7Ozs7b05BQ0k7QUFBQztBQUFrRCxzQkFDckQsS0FBSztBQUFLLGdDQUNWLEtBQUs7QUFBSyxvQkFDVixNQUFNO0FBQUssbUJBQ1gsTUFBTTtBQUFLLG9CQUNYLE1BQU07QUFBSyxrQ0FDWCxNQUFNO0FBQUk7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7b0JBQUU7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT25DaGFuZ2VzLCBPdXRwdXQsIFNpbXBsZUNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEJlaGF2aW9yU3ViamVjdCB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgbWFwIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuaW1wb3J0IHsgRGV2aWNlU29mdHdhcmVDaGFuZ2UgfSBmcm9tICcuLi9yZXBvc2l0b3J5Lm1vZGVsJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYzh5LWRldmljZS1zb2Z0d2FyZS1jaGFuZ2VzJyxcbiAgdGVtcGxhdGVVcmw6ICdkZXZpY2Utc29mdHdhcmUtY2hhbmdlcy5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgRGV2aWNlU29mdHdhcmVDaGFuZ2VzQ29tcG9uZW50IGltcGxlbWVudHMgT25DaGFuZ2VzIHtcbiAgQElucHV0KCkgY2hhbmdlczogRGV2aWNlU29mdHdhcmVDaGFuZ2VbXTtcbiAgQElucHV0KCkgY2hhbmdlc0luUHJvZ3Jlc3M6IGJvb2xlYW47XG4gIEBPdXRwdXQoKSBjbGVhcjogRXZlbnRFbWl0dGVyPHZvaWQ+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICBAT3V0cHV0KCkgZHJvcDogRXZlbnRFbWl0dGVyPERldmljZVNvZnR3YXJlQ2hhbmdlPiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgQE91dHB1dCgpIGFwcGx5OiBFdmVudEVtaXR0ZXI8dm9pZD4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gIEBPdXRwdXQoKSBoaWRlU29mdHdhcmVDaGFuZ2VzID0gbmV3IEV2ZW50RW1pdHRlcjx2b2lkPigpO1xuXG4gIGNoYW5nZXMkID0gbmV3IEJlaGF2aW9yU3ViamVjdDxEZXZpY2VTb2Z0d2FyZUNoYW5nZVtdPihbXSk7XG4gIGluc3RhbGxhdGlvbnMkID0gdGhpcy5jaGFuZ2VzJC5waXBlKFxuICAgIG1hcChjaGFuZ2VzID0+IHtcbiAgICAgIHJldHVybiBjaGFuZ2VzLmZpbHRlcihjaGFuZ2UgPT4gY2hhbmdlLmFjdGlvbiA9PT0gJ2luc3RhbGwnKTtcbiAgICB9KVxuICApO1xuXG4gIHJlbW92YWxzJCA9IHRoaXMuY2hhbmdlcyQucGlwZShcbiAgICBtYXAoY2hhbmdlcyA9PiB7XG4gICAgICByZXR1cm4gY2hhbmdlcy5maWx0ZXIoY2hhbmdlID0+IGNoYW5nZS5hY3Rpb24gPT09ICdkZWxldGUnKTtcbiAgICB9KVxuICApO1xuXG4gIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpIHtcbiAgICBpZiAoY2hhbmdlcy5jaGFuZ2VzKSB7XG4gICAgICB0aGlzLmNoYW5nZXMkLm5leHQoY2hhbmdlcy5jaGFuZ2VzLmN1cnJlbnRWYWx1ZSk7XG4gICAgfVxuICB9XG59XG4iXX0=