import { Component, EventEmitter, Input, Output } from '@angular/core';
import { gettext, ModalSelectionMode } from '@c8y/ngx-components';
import { get } from 'lodash-es';
import { BsModalService } from 'ngx-bootstrap/modal';
import { BehaviorSubject, combineLatest, from, of } from 'rxjs';
import { distinctUntilChanged, map, shareReplay, switchMap } from 'rxjs/operators';
import { RepositoryService } from '../repository.service';
import { RepositorySelectModalComponent } from '../select-modal/repository-select-modal.component';
import { RepositoryType } from './../repository.model';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../repository.service';
import * as ɵngcc2 from 'ngx-bootstrap/modal';
import * as ɵngcc3 from '@c8y/ngx-components';
import * as ɵngcc4 from '@angular/common';
import * as ɵngcc5 from './device-software-list.component';
import * as ɵngcc6 from '@c8y/ngx-components/operations/single-operation-details';
import * as ɵngcc7 from '@angular/forms';
import * as ɵngcc8 from '../software/software-type.component';

function InstalledSoftwareComponent_fieldset_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "fieldset", 16);
    ɵngcc0.ɵɵelement(1, "c8y-single-operation", 17);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("operation", ctx_r0.deviceSoftwareChangesOperation);
} }
function InstalledSoftwareComponent_fieldset_6_i_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "i", 27);
} }
function InstalledSoftwareComponent_fieldset_6_i_11_Template(rf, ctx) { if (rf & 1) {
    const _r6 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "i", 28);
    ɵngcc0.ɵɵlistener("click", function InstalledSoftwareComponent_fieldset_6_i_11_Template_i_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r6); const ctx_r5 = ɵngcc0.ɵɵnextContext(2); return ctx_r5.textFilter$.next(""); });
    ɵngcc0.ɵɵelementEnd();
} }
function InstalledSoftwareComponent_fieldset_6_Template(rf, ctx) { if (rf & 1) {
    const _r8 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "fieldset", 18);
    ɵngcc0.ɵɵelementStart(1, "div", 19);
    ɵngcc0.ɵɵelementStart(2, "div", 20);
    ɵngcc0.ɵɵelementStart(3, "div", 21);
    ɵngcc0.ɵɵelementStart(4, "input", 22);
    ɵngcc0.ɵɵlistener("ngModelChange", function InstalledSoftwareComponent_fieldset_6_Template_input_ngModelChange_4_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7.textFilter$.next($event); });
    ɵngcc0.ɵɵpipe(5, "translate");
    ɵngcc0.ɵɵpipe(6, "translate");
    ɵngcc0.ɵɵpipe(7, "async");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(8, "span", 23);
    ɵngcc0.ɵɵtemplate(9, InstalledSoftwareComponent_fieldset_6_i_9_Template, 1, 0, "i", 24);
    ɵngcc0.ɵɵpipe(10, "async");
    ɵngcc0.ɵɵtemplate(11, InstalledSoftwareComponent_fieldset_6_i_11_Template, 1, 0, "i", 25);
    ɵngcc0.ɵɵpipe(12, "async");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(13, "div", 20);
    ɵngcc0.ɵɵelementStart(14, "c8y-software-type", 26);
    ɵngcc0.ɵɵlistener("onSelectSoftware", function InstalledSoftwareComponent_fieldset_6_Template_c8y_software_type_onSelectSoftware_14_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r9 = ɵngcc0.ɵɵnextContext(); return ctx_r9.softwareTypeFilter$.next($event == null ? null : $event.softwareType); });
    ɵngcc0.ɵɵpipe(15, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(5, 10, "Filter installed software\u2026"));
    ɵngcc0.ɵɵpropertyInterpolate("placeholder", ɵngcc0.ɵɵpipeBind1(6, 12, "Filter installed software\u2026"));
    ɵngcc0.ɵɵproperty("ngModel", ɵngcc0.ɵɵpipeBind1(7, 14, ctx_r1.textFilter$));
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind1(10, 16, ctx_r1.textFilter$).length === 0);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind1(12, 18, ctx_r1.textFilter$).length > 0);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("required", false)("emitResultsOnly", true)("showBtnInNotFoundMessage", false)("allowFreeEntries", false)("placeholder", ɵngcc0.ɵɵpipeBind1(15, 20, "Filter by software type\u2026"));
} }
function InstalledSoftwareComponent_button_26_Template(rf, ctx) { if (rf & 1) {
    const _r11 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 29);
    ɵngcc0.ɵɵlistener("click", function InstalledSoftwareComponent_button_26_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r11); const ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10.installSoftware(); });
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵelement(2, "i", 30);
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵpipe(4, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(1, 3, "Install software"));
    ɵngcc0.ɵɵproperty("disabled", ctx_r2.deviceSoftwareChangesInProgress);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(4, 5, "Install software"), " ");
} }
const _c0 = function (a0) { return { "visible-sm visible-xs": a0 }; };
export class InstalledSoftwareComponent {
    constructor(repository, bsModal) {
        this.repository = repository;
        this.bsModal = bsModal;
        this.changes = new EventEmitter();
        this.showSoftwareChanges = new EventEmitter();
        this.showFilter = false;
        this.supportsSoftwareOperations = false;
        this.textFilter$ = new BehaviorSubject('');
        this.softwareTypeFilter$ = new BehaviorSubject('');
        this.operationTypes = ['c8y_SoftwareUpdate', 'c8y_SoftwareList', 'c8y_Software'];
        this.filterCriteria$ = combineLatest(this.textFilter$, this.softwareTypeFilter$).pipe(map(([textFilter, softwareTypeFilter]) => ({
            name: textFilter,
            softwareType: softwareTypeFilter
        })), map(filterCriteria => !filterCriteria.name && !filterCriteria.softwareType ? null : filterCriteria));
    }
    ngOnInit() {
        const supportedOperations = get(this.device, 'c8y_SupportedOperations', []);
        this.supportsSoftwareOperations = this.operationTypes.some(operationType => supportedOperations.indexOf(operationType) > -1);
    }
    installSoftware() {
        this.displaySoftwareSelectModal({
            title: gettext('Install software'),
            labels: { ok: gettext('Install') },
            repositoryEntriesWithVersions$: of([]),
            repositoryEntriesWithVersionsFn$: modal => this.getInstallableSoftwareListWithVersions$(modal.content.searchTerm)
        }).subscribe(softwareToInstall => {
            this.emitSoftwareInstall(softwareToInstall);
            this.showSoftwareChanges.emit();
        });
    }
    updateSoftware(softwareToRemove) {
        this.displaySoftwareSelectModal({
            title: gettext('Update software'),
            labels: { ok: gettext('Update') },
            showFilter: false,
            repositoryEntriesWithVersions$: this.getSingleSoftwareWithVersions$(softwareToRemove)
        }).subscribe(softwareToInstall => {
            this.emitSoftwareInstall(softwareToInstall);
            this.showSoftwareChanges.emit();
        });
    }
    removeSoftware(softwareToRemove) {
        this.emitSoftwareRemoval([softwareToRemove]);
    }
    getInstallableSoftwareListWithVersions$(searchTerm$) {
        const installedSoftwareNames = (this.softwareList || []).map(s => s.name);
        return searchTerm$.pipe(distinctUntilChanged(), switchMap(searchTerm => this.repository.listRepositoryEntries(RepositoryType.SOFTWARE, {
            query: this.deviceTypeQuery,
            partialName: searchTerm,
            params: { pageSize: 100 }
        })), map(({ data }) => data), map(softwareList => {
            return softwareList.filter(software => {
                return !installedSoftwareNames.includes(software.name);
            });
        }), map(softwareList => this.attachVersions(softwareList)), shareReplay(1));
    }
    getSingleSoftwareWithVersions$(software) {
        return from(this.repository.listRepositoryEntries(RepositoryType.SOFTWARE, {
            query: { name: software.name }
        })).pipe(map(({ data }) => data), map(softwareList => this.attachVersions(softwareList)), shareReplay(1));
    }
    attachVersions(softwareList) {
        softwareList.forEach(software => {
            software.versions = this.repository.listBaseVersions(software);
        });
        return softwareList;
    }
    displaySoftwareSelectModal(initialStateOverrides) {
        const initialState = Object.assign({ repositoryType: RepositoryType.SOFTWARE, subTitle: gettext('Available softwares matching the device type'), mode: ModalSelectionMode.MULTI, icon: 'c8y-tools', disableSelected: false, selected: this.softwareList }, initialStateOverrides);
        const modal = this.bsModal.show(RepositorySelectModalComponent, {
            ignoreBackdropClick: true,
            class: 'modal-sm',
            initialState
        });
        if (initialStateOverrides.repositoryEntriesWithVersionsFn$) {
            modal.content.repositoryEntriesWithVersions$ =
                initialStateOverrides.repositoryEntriesWithVersionsFn$(modal);
        }
        modal.content.load.next();
        return modal.content.resultEmitter;
    }
    emitSoftwareInstall(items) {
        this.changes.emit(items.map(item => {
            return Object.assign(Object.assign({}, item), { action: 'install' });
        }));
    }
    emitSoftwareRemoval(items) {
        this.changes.emit(items.map(item => {
            return Object.assign(Object.assign({}, item), { action: 'delete' });
        }));
    }
}
InstalledSoftwareComponent.ɵfac = function InstalledSoftwareComponent_Factory(t) { return new (t || InstalledSoftwareComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.RepositoryService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.BsModalService)); };
InstalledSoftwareComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: InstalledSoftwareComponent, selectors: [["c8y-installed-software"]], inputs: { device: "device", softwareList: "softwareList", deviceSoftwareChanges: "deviceSoftwareChanges", deviceSoftwareChangesOperation: "deviceSoftwareChangesOperation", deviceSoftwareChangesInProgress: "deviceSoftwareChangesInProgress", deviceTypeQuery: "deviceTypeQuery" }, outputs: { changes: "changes", showSoftwareChanges: "showSoftwareChanges" }, decls: 32, vars: 14, consts: [[1, "d-flex", "d-col", "flex-grow"], [1, "card-header", "large-padding", "separator", "sticky-top"], ["translate", "", 1, "card-title"], [1, "flex-grow"], ["id", "operation-block", "class", "card-block large-padding bg-gray-lighter", 4, "ngIf"], ["class", "card-block large-padding overflow-visible", 4, "ngIf"], ["id", "software-list", 1, "flex-grow", "inner-scroll", 3, "disabled"], [1, "d-block", "p-l-16", "p-r-16", 3, "device", "filterCriteria$", "softwareList", "deviceSoftwareChanges", "update", "remove", "onListEmpty"], [1, "c8y-empty-state", "text-center", "m-t-16"], [1, "c8y-icon", "c8y-icon-tools", "c8y-icon-duocolor"], ["translate", ""], [1, "c8y-empty-state", "c8y-no-results-state", "text-center", "m-t-16"], [1, "card-footer", "large-padding", "separator", "sticky-bottom", "d-flex", "j-c-between", 3, "ngClass"], ["class", "btn btn-default", 3, "title", "disabled", "click", 4, "ngIf"], [1, "btn", "btn-clean", "text-primary", "visible-sm", "visible-xs", 3, "title", "click"], ["c8yIcon", "chevron-right"], ["id", "operation-block", 1, "card-block", "large-padding", "bg-gray-lighter"], [3, "operation"], [1, "card-block", "large-padding", "overflow-visible"], [1, "row"], [1, "col-xs-6"], [1, "input-group", "input-group-search"], ["type", "search", 1, "form-control", 3, "title", "placeholder", "ngModel", "ngModelChange"], [1, "input-group-addon"], ["c8yIcon", "search", 4, "ngIf"], ["class", "text-muted", "c8yIcon", "times", 3, "click", 4, "ngIf"], [3, "required", "emitResultsOnly", "showBtnInNotFoundMessage", "allowFreeEntries", "placeholder", "onSelectSoftware"], ["c8yIcon", "search"], ["c8yIcon", "times", 1, "text-muted", 3, "click"], [1, "btn", "btn-default", 3, "title", "disabled", "click"], ["c8yIcon", "plus-circle"]], template: function InstalledSoftwareComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵelementStart(2, "h4", 2);
        ɵngcc0.ɵɵtext(3, "Installed software");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(4, "div", 3);
        ɵngcc0.ɵɵtemplate(5, InstalledSoftwareComponent_fieldset_5_Template, 2, 1, "fieldset", 4);
        ɵngcc0.ɵɵtemplate(6, InstalledSoftwareComponent_fieldset_6_Template, 16, 22, "fieldset", 5);
        ɵngcc0.ɵɵelementStart(7, "fieldset", 6);
        ɵngcc0.ɵɵelementStart(8, "c8y-device-software-list", 7);
        ɵngcc0.ɵɵlistener("update", function InstalledSoftwareComponent_Template_c8y_device_software_list_update_8_listener($event) { return ctx.updateSoftware($event); })("remove", function InstalledSoftwareComponent_Template_c8y_device_software_list_remove_8_listener($event) { return ctx.removeSoftware($event); })("onListEmpty", function InstalledSoftwareComponent_Template_c8y_device_software_list_onListEmpty_8_listener($event) { return ctx.showFilter = !$event; });
        ɵngcc0.ɵɵelementStart(9, "div", 8);
        ɵngcc0.ɵɵelement(10, "h1", 9);
        ɵngcc0.ɵɵelementStart(11, "p");
        ɵngcc0.ɵɵelementStart(12, "strong", 10);
        ɵngcc0.ɵɵtext(13, "No software installed.");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(14, "br");
        ɵngcc0.ɵɵelementStart(15, "small", 10);
        ɵngcc0.ɵɵtext(16, "Click below to install software into this device.");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(17, "div", 11);
        ɵngcc0.ɵɵelement(18, "h1", 9);
        ɵngcc0.ɵɵelementStart(19, "p");
        ɵngcc0.ɵɵelementStart(20, "strong", 10);
        ɵngcc0.ɵɵtext(21, "No software matches your filter criteria.");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(22, "br");
        ɵngcc0.ɵɵelementStart(23, "small", 10);
        ɵngcc0.ɵɵtext(24, "Try changing your search criteria.");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(25, "div", 12);
        ɵngcc0.ɵɵtemplate(26, InstalledSoftwareComponent_button_26_Template, 5, 7, "button", 13);
        ɵngcc0.ɵɵelementStart(27, "button", 14);
        ɵngcc0.ɵɵlistener("click", function InstalledSoftwareComponent_Template_button_click_27_listener() { return ctx.showSoftwareChanges.emit(); });
        ɵngcc0.ɵɵpipe(28, "translate");
        ɵngcc0.ɵɵelementStart(29, "span", 10);
        ɵngcc0.ɵɵtext(30, "Show \"Software changes\"");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(31, "i", 15);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(5);
        ɵngcc0.ɵɵproperty("ngIf", ctx.deviceSoftwareChangesOperation);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showFilter);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("disabled", ctx.deviceSoftwareChangesInProgress);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("device", ctx.device)("filterCriteria$", ctx.filterCriteria$)("softwareList", ctx.softwareList)("deviceSoftwareChanges", ctx.deviceSoftwareChanges);
        ɵngcc0.ɵɵadvance(17);
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(12, _c0, !ctx.supportsSoftwareOperations));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.supportsSoftwareOperations);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("title", ɵngcc0.ɵɵpipeBind1(28, 10, "Show \"Software changes\""));
    } }, directives: [ɵngcc3.C8yTranslateDirective, ɵngcc4.NgIf, ɵngcc5.DeviceSoftwareListComponent, ɵngcc4.NgClass, ɵngcc3.IconDirective, ɵngcc6.SingleOperationComponent, ɵngcc7.DefaultValueAccessor, ɵngcc7.NgControlStatus, ɵngcc7.NgModel, ɵngcc8.SoftwareTypeComponent], pipes: [ɵngcc3.C8yTranslatePipe, ɵngcc4.AsyncPipe], encapsulation: 2 });
InstalledSoftwareComponent.ctorParameters = () => [
    { type: RepositoryService },
    { type: BsModalService }
];
InstalledSoftwareComponent.propDecorators = {
    device: [{ type: Input }],
    softwareList: [{ type: Input }],
    deviceSoftwareChanges: [{ type: Input }],
    deviceSoftwareChangesOperation: [{ type: Input }],
    deviceSoftwareChangesInProgress: [{ type: Input }],
    deviceTypeQuery: [{ type: Input }],
    changes: [{ type: Output }],
    showSoftwareChanges: [{ type: Output }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(InstalledSoftwareComponent, [{
        type: Component,
        args: [{
                selector: 'c8y-installed-software',
                template: "<div class=\"d-flex d-col flex-grow\">\n  <div class=\"card-header large-padding separator sticky-top\">\n    <h4 class=\"card-title\" translate>Installed software</h4>\n  </div>\n  <div class=\"flex-grow\">\n    <fieldset\n      id=\"operation-block\"\n      *ngIf=\"deviceSoftwareChangesOperation\"\n      class=\"card-block large-padding bg-gray-lighter\"\n    >\n      <c8y-single-operation [operation]=\"deviceSoftwareChangesOperation\"></c8y-single-operation>\n    </fieldset>\n    <fieldset class=\"card-block large-padding overflow-visible\" *ngIf=\"showFilter\">\n      <div class=\"row\">\n        <div class=\"col-xs-6\">\n          <div class=\"input-group input-group-search\">\n            <input\n              class=\"form-control\"\n              type=\"search\"\n              title=\"{{ 'Filter installed software\u2026' | translate }}\"\n              placeholder=\"{{ 'Filter installed software\u2026' | translate }}\"\n              [ngModel]=\"textFilter$ | async\"\n              (ngModelChange)=\"textFilter$.next($event)\"\n            />\n            <span class=\"input-group-addon\">\n              <i c8yIcon=\"search\" *ngIf=\"(textFilter$ | async).length === 0\"></i>\n              <i\n                class=\"text-muted\"\n                c8yIcon=\"times\"\n                *ngIf=\"(textFilter$ | async).length > 0\"\n                (click)=\"textFilter$.next('')\"\n              ></i>\n            </span>\n          </div>\n        </div>\n        <div class=\"col-xs-6\">\n          <c8y-software-type\n            [required]=\"false\"\n            [emitResultsOnly]=\"true\"\n            [showBtnInNotFoundMessage]=\"false\"\n            [allowFreeEntries]=\"false\"\n            [placeholder]=\"'Filter by software type\u2026' | translate\"\n            (onSelectSoftware)=\"softwareTypeFilter$.next($event?.softwareType)\"\n          ></c8y-software-type>\n        </div>\n      </div>\n    </fieldset>\n\n    <fieldset\n      id=\"software-list\"\n      class=\"flex-grow inner-scroll\"\n      [disabled]=\"deviceSoftwareChangesInProgress\"\n    >\n      <!-- NOT EMPTY STATE -->\n      <c8y-device-software-list\n        [device]=\"device\"\n        [filterCriteria$]=\"filterCriteria$\"\n        [softwareList]=\"softwareList\"\n        [deviceSoftwareChanges]=\"deviceSoftwareChanges\"\n        (update)=\"updateSoftware($event)\"\n        (remove)=\"removeSoftware($event)\"\n        (onListEmpty)=\"showFilter = !$event\"\n        class=\"d-block p-l-16 p-r-16\"\n      >\n        <!-- EMPTY STATE -->\n        <div class=\"c8y-empty-state text-center m-t-16\">\n          <h1 class=\"c8y-icon c8y-icon-tools c8y-icon-duocolor\"></h1>\n          <p>\n            <strong translate>No software installed.</strong> <br />\n            <small translate>Click below to install software into this device.</small>\n          </p>\n        </div>\n        <!-- NO SEARCH RESULTS STATE -->\n        <div class=\"c8y-empty-state c8y-no-results-state text-center m-t-16\">\n          <h1 class=\"c8y-icon c8y-icon-tools c8y-icon-duocolor\"></h1>\n          <p>\n            <strong translate>No software matches your filter criteria.</strong> <br />\n            <small translate>Try changing your search criteria.</small>\n          </p>\n        </div>\n      </c8y-device-software-list>\n    </fieldset>\n  </div>\n  <!-- INSTALL SOFTWARE-->\n  <div\n    class=\"card-footer large-padding separator sticky-bottom d-flex j-c-between\"\n    [ngClass]=\"{ 'visible-sm visible-xs': !supportsSoftwareOperations }\"\n  >\n    <button\n      *ngIf=\"supportsSoftwareOperations\"\n      class=\"btn btn-default\"\n      title=\"{{ 'Install software' | translate }}\"\n      (click)=\"installSoftware()\"\n      [disabled]=\"deviceSoftwareChangesInProgress\"\n    >\n      <i c8yIcon=\"plus-circle\"></i>\n      {{ 'Install software' | translate }}\n    </button>\n    <button\n      (click)=\"showSoftwareChanges.emit()\"\n      class=\"btn btn-clean text-primary visible-sm visible-xs\"\n      [title]=\"'Show &quot;Software changes&quot;' | translate\"\n    >\n      <span translate>Show \"Software changes\"</span>\n      <i c8yIcon=\"chevron-right\"></i>\n    </button>\n  </div>\n</div>\n"
            }]
    }], function () { return [{ type: ɵngcc1.RepositoryService }, { type: ɵngcc2.BsModalService }]; }, { changes: [{
            type: Output
        }], showSoftwareChanges: [{
            type: Output
        }], device: [{
            type: Input
        }], softwareList: [{
            type: Input
        }], deviceSoftwareChanges: [{
            type: Input
        }], deviceSoftwareChangesOperation: [{
            type: Input
        }], deviceSoftwareChangesInProgress: [{
            type: Input
        }], deviceTypeQuery: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,