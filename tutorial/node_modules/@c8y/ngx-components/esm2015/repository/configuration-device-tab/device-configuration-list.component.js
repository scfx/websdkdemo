import { Component, EventEmitter, Input, Output } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from '@c8y/ngx-components';
import * as ɵngcc3 from './configuration-filter.pipe';

function DeviceConfigurationListComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    const _r4 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 4);
    ɵngcc0.ɵɵelementStart(1, "c8y-filter", 5);
    ɵngcc0.ɵɵlistener("onSearch", function DeviceConfigurationListComponent_div_0_Template_c8y_filter_onSearch_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r4); const ctx_r3 = ɵngcc0.ɵɵnextContext(); return ctx_r3.updatePipe($event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("icon", "search");
} }
function DeviceConfigurationListComponent_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 6);
    ɵngcc0.ɵɵelement(1, "h1", 7);
    ɵngcc0.ɵɵelementStart(2, "p");
    ɵngcc0.ɵɵelementStart(3, "strong");
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵpipe(5, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(6, "br");
    ɵngcc0.ɵɵelementStart(7, "small");
    ɵngcc0.ɵɵtext(8);
    ɵngcc0.ɵɵpipe(9, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("c8yIcon", ctx_r1.emptyState.icon);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(5, 3, ctx_r1.emptyState.title));
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(9, 5, ctx_r1.emptyState.text));
} }
function DeviceConfigurationListComponent_div_3_Template(rf, ctx) { if (rf & 1) {
    const _r7 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 8);
    ɵngcc0.ɵɵlistener("click", function DeviceConfigurationListComponent_div_3_Template_div_click_0_listener() { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r7); const config_r5 = restoredCtx.$implicit; const ctx_r6 = ɵngcc0.ɵɵnextContext(); return ctx_r6.showConfigurationTypePreview(config_r5); });
    ɵngcc0.ɵɵelementStart(1, "div", 9);
    ɵngcc0.ɵɵelement(2, "i", 7);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "div", 10);
    ɵngcc0.ɵɵelementStart(4, "div", 11);
    ɵngcc0.ɵɵelementStart(5, "span", 12);
    ɵngcc0.ɵɵtext(6);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(7, "span", 13);
    ɵngcc0.ɵɵtext(8);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const config_r5 = ctx.$implicit;
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassProp("active", config_r5 === ctx_r2.selectedConfig);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("c8yIcon", ctx_r2.itemIcon);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵpropertyInterpolate("title", config_r5.name);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(config_r5.name);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(config_r5.deviceType);
} }
export class DeviceConfigurationListComponent {
    constructor() {
        this.configSelected = new EventEmitter();
        this.filterTerm = '';
    }
    showConfigurationTypePreview(config) {
        this.selectedConfig = config;
        this.configSelected.emit(config);
    }
    updatePipe(filterTerm) {
        this.filterTerm = filterTerm;
    }
}
DeviceConfigurationListComponent.ɵfac = function DeviceConfigurationListComponent_Factory(t) { return new (t || DeviceConfigurationListComponent)(); };
DeviceConfigurationListComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: DeviceConfigurationListComponent, selectors: [["c8y-device-configuration-list"]], inputs: { items: "items", itemIcon: "itemIcon", emptyState: "emptyState", isFilterEnabled: "isFilterEnabled" }, outputs: { configSelected: "configSelected" }, decls: 5, vars: 6, consts: [["class", "p-l-16 m-b-8", 4, "ngIf"], ["class", "c8y-empty-state text-left", 4, "ngIf"], [1, "c8y-nav-stacked"], ["class", "c8y-stacked-item flex-row", 3, "active", "click", 4, "ngFor", "ngForOf"], [1, "p-l-16", "m-b-8"], [3, "icon", "onSearch"], [1, "c8y-empty-state", "text-left"], [3, "c8yIcon"], [1, "c8y-stacked-item", "flex-row", 3, "click"], [1, "list-item-icon"], [1, "list-item-body", "text-truncate"], [1, "d-flex"], [1, "text-truncate", 3, "title"], [1, "text-label-small", "flex-item-right", "flex-item-middle"]], template: function DeviceConfigurationListComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, DeviceConfigurationListComponent_div_0_Template, 2, 1, "div", 0);
        ɵngcc0.ɵɵtemplate(1, DeviceConfigurationListComponent_div_1_Template, 10, 7, "div", 1);
        ɵngcc0.ɵɵelementStart(2, "div", 2);
        ɵngcc0.ɵɵtemplate(3, DeviceConfigurationListComponent_div_3_Template, 9, 6, "div", 3);
        ɵngcc0.ɵɵpipe(4, "configurationFilterPipe");
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.isFilterEnabled);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", (ctx.items == null ? null : ctx.items.length) === 0);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngForOf", ɵngcc0.ɵɵpipeBind2(4, 3, ctx.items, ctx.filterTerm));
    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgForOf, ɵngcc2.FilterInputComponent, ɵngcc2.IconDirective], pipes: [ɵngcc3.ConfigurationFilterPipe, ɵngcc2.C8yTranslatePipe], encapsulation: 2 });
DeviceConfigurationListComponent.propDecorators = {
    items: [{ type: Input }],
    itemIcon: [{ type: Input }],
    emptyState: [{ type: Input }],
    isFilterEnabled: [{ type: Input }],
    configSelected: [{ type: Output }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DeviceConfigurationListComponent, [{
        type: Component,
        args: [{
                selector: 'c8y-device-configuration-list',
                template: "<div class=\"p-l-16 m-b-8\" *ngIf=\"isFilterEnabled\">\n  <c8y-filter [icon]=\"'search'\" (onSearch)=\"updatePipe($event)\"></c8y-filter>\n</div>\n\n<!-- EMPTY STATE -->\n<div class=\"c8y-empty-state text-left\" *ngIf=\"items?.length === 0\">\n  <h1 [c8yIcon]=\"emptyState.icon\"></h1>\n  <p>\n    <strong>{{ emptyState.title | translate }}</strong\n    ><br />\n    <small>{{ emptyState.text | translate }}</small>\n  </p>\n</div>\n\n<!-- CONFIGURATIONS AVAILABLE -->\n<div class=\"c8y-nav-stacked\">\n  <div\n    class=\"c8y-stacked-item flex-row\"\n    [class.active]=\"config === selectedConfig\"\n    *ngFor=\"let config of items | configurationFilterPipe: filterTerm\"\n    (click)=\"showConfigurationTypePreview(config)\"\n  >\n    <div class=\"list-item-icon\">\n      <i [c8yIcon]=\"itemIcon\"></i>\n    </div>\n    <div class=\"list-item-body text-truncate\">\n      <div class=\"d-flex\">\n        <span class=\"text-truncate\" title=\"{{ config.name }}\">{{ config.name }}</span>\n        <span class=\"text-label-small flex-item-right flex-item-middle\">{{ config.deviceType }}</span>\n      </div>\n    </div>\n  </div>\n</div>\n\n<!-- for Carlos: config.configurationType to differentiate whether a config matches configuration type. -->\n"
            }]
    }], function () { return []; }, { configSelected: [{
            type: Output
        }], items: [{
            type: Input
        }], itemIcon: [{
            type: Input
        }], emptyState: [{
            type: Input
        }], isFilterEnabled: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGV2aWNlLWNvbmZpZ3VyYXRpb24tbGlzdC5jb21wb25lbnQuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3JlcG9zaXRvcnkvY29uZmlndXJhdGlvbi1kZXZpY2UtdGFiL2RldmljZS1jb25maWd1cmF0aW9uLWxpc3QuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQU92RSxNQUFNLE9BQU8sZ0NBQWdDO0FBQzdDLElBTEE7QUFDRyxRQVFTLG1CQUFjLEdBQUcsSUFBSSxZQUFZLEVBQVUsQ0FBQztBQUN4RCxRQUNFLGVBQVUsR0FBVyxFQUFFLENBQUM7QUFDMUIsSUFTQSxDQUFDO0FBQ0QsSUFURSw0QkFBNEIsQ0FBQyxNQUFNO0FBQUksUUFDckMsSUFBSSxDQUFDLGNBQWMsR0FBRyxNQUFNLENBQUM7QUFDakMsUUFBSSxJQUFJLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztBQUNyQyxJQUFFLENBQUM7QUFDSCxJQUNFLFVBQVUsQ0FBQyxVQUFrQjtBQUMvQixRQUFJLElBQUksQ0FBQyxVQUFVLEdBQUcsVUFBVSxDQUFDO0FBQ2pDLElBQUUsQ0FBQztBQUNIOzREQXJCQyxTQUFTLFNBQUMsa0JBQ1QsUUFBUSxFQUFFLCtCQUErQjtHQUN6Qzs7OztrRUFBeUQsY0FDMUQ7Ozs7Ozs7Ozs2TEFDSTtBQUFDO0FBQ0ksb0JBQVAsS0FBSztBQUFLLHVCQUNWLEtBQUs7QUFBSyx5QkFDVixLQUFLO0FBQUssOEJBQ1YsS0FBSztBQUFLLDZCQUNWLE1BQU07QUFBSTs7Ozs7Ozs7Ozs7Ozs7Ozs7b0JBQUU7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT3V0cHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBEZXZpY2VDb25maWd1cmF0aW9uTGlzdEVtcHR5U3RhdGUsIFN1cHBvcnRlZENvbmZpZ3VyYXRpb25JdGVtIH0gZnJvbSAnLi4vcmVwb3NpdG9yeS5tb2RlbCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2M4eS1kZXZpY2UtY29uZmlndXJhdGlvbi1saXN0JyxcbiAgdGVtcGxhdGVVcmw6ICcuL2RldmljZS1jb25maWd1cmF0aW9uLWxpc3QuY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIERldmljZUNvbmZpZ3VyYXRpb25MaXN0Q29tcG9uZW50IHtcbiAgQElucHV0KCkgaXRlbXM6IFN1cHBvcnRlZENvbmZpZ3VyYXRpb25JdGVtW107XG4gIEBJbnB1dCgpIGl0ZW1JY29uOiBzdHJpbmc7XG4gIEBJbnB1dCgpIGVtcHR5U3RhdGU6IERldmljZUNvbmZpZ3VyYXRpb25MaXN0RW1wdHlTdGF0ZTtcbiAgQElucHV0KCkgaXNGaWx0ZXJFbmFibGVkOiBib29sZWFuO1xuICBAT3V0cHV0KCkgY29uZmlnU2VsZWN0ZWQgPSBuZXcgRXZlbnRFbWl0dGVyPHN0cmluZz4oKTtcbiAgc2VsZWN0ZWRDb25maWc7XG4gIGZpbHRlclRlcm06IHN0cmluZyA9ICcnO1xuXG4gIHNob3dDb25maWd1cmF0aW9uVHlwZVByZXZpZXcoY29uZmlnKTogdm9pZCB7XG4gICAgdGhpcy5zZWxlY3RlZENvbmZpZyA9IGNvbmZpZztcbiAgICB0aGlzLmNvbmZpZ1NlbGVjdGVkLmVtaXQoY29uZmlnKTtcbiAgfVxuXG4gIHVwZGF0ZVBpcGUoZmlsdGVyVGVybTogc3RyaW5nKSB7XG4gICAgdGhpcy5maWx0ZXJUZXJtID0gZmlsdGVyVGVybTtcbiAgfVxufVxuIl19