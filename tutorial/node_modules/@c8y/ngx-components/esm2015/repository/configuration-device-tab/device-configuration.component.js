import { __awaiter } from "tslib";
import { Component, ViewChild } from '@angular/core';
import { ActivatedRoute } from '@angular/router';
import { Realtime } from '@c8y/client';
import { DeviceConfigurationService } from './device-configuration.service';
import { DeviceConfigurationOperation } from '../repository.model';
import { gettext } from '@c8y/ngx-components';
import { has } from 'lodash-es';
import { RepositoryService } from '../repository.service';
import { TextBasedConfigurationComponent } from './text-based-configuration.component';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/router';
import * as ɵngcc2 from './device-configuration.service';
import * as ɵngcc3 from '@c8y/client';
import * as ɵngcc4 from '../repository.service';
import * as ɵngcc5 from '@c8y/ngx-components';
import * as ɵngcc6 from '@angular/common';
import * as ɵngcc7 from 'ngx-bootstrap/tabs';
import * as ɵngcc8 from './device-configuration-list.component';
import * as ɵngcc9 from './configuration-preview.component';
import * as ɵngcc10 from './text-based-configuration.component';

function DeviceConfigurationComponent_div_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 6);
    ɵngcc0.ɵɵelementStart(1, "h4", 7);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(3, 1, "Configurations"));
} }
function DeviceConfigurationComponent_div_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 6);
    ɵngcc0.ɵɵelementStart(1, "h4", 7);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(3, 1, "Text-based configuration"));
} }
function DeviceConfigurationComponent_tab_10_div_14_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 23);
    ɵngcc0.ɵɵelement(1, "h1", 24);
    ɵngcc0.ɵɵelementStart(2, "p");
    ɵngcc0.ɵɵelementStart(3, "strong", 13);
    ɵngcc0.ɵɵtext(4, "No configuration selected.");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(5, "br");
    ɵngcc0.ɵɵelementStart(6, "small", 13);
    ɵngcc0.ɵɵtext(7, "Select a configuration to preview");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("c8yIcon", "file-text");
} }
function DeviceConfigurationComponent_tab_10_c8y_device_configuration_preview_15_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "c8y-device-configuration-preview", 25);
    ɵngcc0.ɵɵpipe(1, "translate");
} if (rf & 2) {
    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("device", ctx_r5.device)("configurationType", ctx_r5.configurationType)("configSnapshot", ctx_r5.configSnapshot)("canSaveSnapshot", true)("operationToTrigger", "c8y_UploadConfigFile")("actionButtonText", ɵngcc0.ɵɵpipeBind1(1, 8, "Get snapshot from device"))("actionButtonIcon", "download")("isLegacy", ctx_r5.isLegacy);
} }
function DeviceConfigurationComponent_tab_10_div_20_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 23);
    ɵngcc0.ɵɵelement(1, "h1", 24);
    ɵngcc0.ɵɵelementStart(2, "p");
    ɵngcc0.ɵɵelementStart(3, "strong", 13);
    ɵngcc0.ɵɵtext(4, "No selection");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(5, "br");
    ɵngcc0.ɵɵelementStart(6, "small", 13);
    ɵngcc0.ɵɵtext(7, "Select a configuration from the device-supported configuration list");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("c8yIcon", "gears");
} }
function DeviceConfigurationComponent_tab_10_div_21_Template(rf, ctx) { if (rf & 1) {
    const _r11 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 26);
    ɵngcc0.ɵɵelementStart(1, "c8y-device-configuration-list", 27);
    ɵngcc0.ɵɵlistener("configSelected", function DeviceConfigurationComponent_tab_10_div_21_Template_c8y_device_configuration_list_configSelected_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r11); const ctx_r10 = ɵngcc0.ɵɵnextContext(2); return ctx_r10.onRepositoryConfigSelected($event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r7 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("items", ctx_r7.repositorySnapshots)("itemIcon", "file-text")("emptyState", ctx_r7.repositorySnapshotsEmptyState)("isFilterEnabled", true);
} }
function DeviceConfigurationComponent_tab_10_div_26_small_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "small", 13);
    ɵngcc0.ɵɵtext(1, "Select a configuration to preview");
    ɵngcc0.ɵɵelementEnd();
} }
function DeviceConfigurationComponent_tab_10_div_26_ng_template_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "small", 13);
    ɵngcc0.ɵɵtext(1, "Select the configuration you want to preview");
    ɵngcc0.ɵɵelementEnd();
} }
function DeviceConfigurationComponent_tab_10_div_26_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 23);
    ɵngcc0.ɵɵelement(1, "h1", 24);
    ɵngcc0.ɵɵelementStart(2, "p");
    ɵngcc0.ɵɵelementStart(3, "strong", 13);
    ɵngcc0.ɵɵtext(4, "No configuration selected.");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(5, "br");
    ɵngcc0.ɵɵtemplate(6, DeviceConfigurationComponent_tab_10_div_26_small_6_Template, 2, 0, "small", 28);
    ɵngcc0.ɵɵtemplate(7, DeviceConfigurationComponent_tab_10_div_26_ng_template_7_Template, 2, 0, "ng-template", null, 29, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const _r13 = ɵngcc0.ɵɵreference(8);
    const ctx_r8 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("c8yIcon", "file-text");
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r8.configurationType)("ngIfElse", _r13);
} }
function DeviceConfigurationComponent_tab_10_c8y_device_configuration_preview_27_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "c8y-device-configuration-preview", 30);
    ɵngcc0.ɵɵpipe(1, "translate");
} if (rf & 2) {
    const ctx_r9 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("device", ctx_r9.device)("configurationType", ctx_r9.configurationType)("configSnapshot", ctx_r9.repositorySnapshot)("operationToTrigger", "c8y_DownloadConfigFile")("actionButtonText", ɵngcc0.ɵɵpipeBind1(1, 7, "Send configuration to device"))("actionButtonIcon", "upload")("isLegacy", ctx_r9.isLegacy);
} }
function DeviceConfigurationComponent_tab_10_Template(rf, ctx) { if (rf & 1) {
    const _r16 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "tab", 8);
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵelementStart(2, "div", 9);
    ɵngcc0.ɵɵelementStart(3, "div", 10);
    ɵngcc0.ɵɵelementStart(4, "div", 11);
    ɵngcc0.ɵɵelementStart(5, "h5", 12);
    ɵngcc0.ɵɵelementStart(6, "span", 13);
    ɵngcc0.ɵɵtext(7, "Device-supported configurations");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(8, "c8y-device-configuration-list", 14);
    ɵngcc0.ɵɵlistener("configSelected", function DeviceConfigurationComponent_tab_10_Template_c8y_device_configuration_list_configSelected_8_listener($event) { ɵngcc0.ɵɵrestoreView(_r16); const ctx_r15 = ɵngcc0.ɵɵnextContext(); return ctx_r15.onConfigTypeSelected($event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(9, "div", 15);
    ɵngcc0.ɵɵelementStart(10, "div", 16);
    ɵngcc0.ɵɵelementStart(11, "h5", 12);
    ɵngcc0.ɵɵelementStart(12, "span", 13);
    ɵngcc0.ɵɵtext(13, "Preview");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(14, DeviceConfigurationComponent_tab_10_div_14_Template, 8, 1, "div", 17);
    ɵngcc0.ɵɵtemplate(15, DeviceConfigurationComponent_tab_10_c8y_device_configuration_preview_15_Template, 2, 10, "c8y-device-configuration-preview", 18);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(16, "div", 10);
    ɵngcc0.ɵɵelementStart(17, "div", 11);
    ɵngcc0.ɵɵelementStart(18, "h5", 19);
    ɵngcc0.ɵɵtext(19, "Available supported configurations");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(20, DeviceConfigurationComponent_tab_10_div_20_Template, 8, 1, "div", 17);
    ɵngcc0.ɵɵtemplate(21, DeviceConfigurationComponent_tab_10_div_21_Template, 2, 4, "div", 20);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(22, "div", 15);
    ɵngcc0.ɵɵelementStart(23, "div", 21);
    ɵngcc0.ɵɵelementStart(24, "h5", 19);
    ɵngcc0.ɵɵtext(25, "Preview");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(26, DeviceConfigurationComponent_tab_10_div_26_Template, 9, 3, "div", 17);
    ɵngcc0.ɵɵtemplate(27, DeviceConfigurationComponent_tab_10_c8y_device_configuration_preview_27_Template, 2, 9, "c8y-device-configuration-preview", 22);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵpropertyInterpolate("heading", ɵngcc0.ɵɵpipeBind1(1, 9, "Configurations"));
    ɵngcc0.ɵɵadvance(8);
    ɵngcc0.ɵɵproperty("items", ctx_r2.supportedConfigurations)("itemIcon", "gears");
    ɵngcc0.ɵɵadvance(6);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r2.configurationType);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r2.configurationType);
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r2.configurationType);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r2.configurationType);
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r2.repositorySnapshot);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r2.repositorySnapshot);
} }
function DeviceConfigurationComponent_tab_11_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "tab", 8);
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵelement(2, "c8y-text-based-configuration");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵpropertyInterpolate("heading", ɵngcc0.ɵɵpipeBind1(1, 1, "Text-based configuration"));
} }
const _c0 = function (a0) { return { "icon-spin": a0 }; };
export class DeviceConfigurationComponent {
    constructor(route, deviceConfigurationService, realtime, repositoryService) {
        this.route = route;
        this.deviceConfigurationService = deviceConfigurationService;
        this.realtime = realtime;
        this.repositoryService = repositoryService;
        this.supportedConfigurations = [];
        this.showBinaryBasedConfig = false;
        this.configSnapshot = {};
        this.reloading = false;
        this.deviceConfigurationService.configurationsUpdated.subscribe(repositorySnapsOnly => {
            this.updateSnapshots(repositorySnapsOnly);
        });
    }
    ngOnInit() {
        this.device = this.route.snapshot.parent.data.contextData;
        if (this.device.c8y_SupportedConfigurations) {
            this.supportedConfigurations = this.device.c8y_SupportedConfigurations.map(item => ({
                name: item
            }));
        }
        if (this.deviceConfigurationService.hasAnySupportedOperation(this.device, [
            DeviceConfigurationOperation.DOWNLOAD_CONFIG,
            DeviceConfigurationOperation.UPLOAD_CONFIG
        ])) {
            this.supportedConfigurations.push({
                name: gettext('Legacy configuration snapshot'),
                isLegacy: true
            });
        }
        if (this.supportedConfigurations.length > 0) {
            this.showBinaryBasedConfig = true;
        }
        this.repositorySnapshotsEmptyState = {
            icon: 'gears',
            title: gettext('No configurations available.'),
            text: gettext('Add configuration to configuration repository')
        };
        this.showTextBasedConfig =
            this.deviceConfigurationService.hasAnySupportedOperation(this.device, [
                DeviceConfigurationOperation.CONFIG,
                DeviceConfigurationOperation.SEND_CONFIG
            ]) || has(this.device, 'c8y_Configuration');
    }
    onConfigTypeSelected(config) {
        return __awaiter(this, void 0, void 0, function* () {
            this.configurationType = config.name;
            this.isLegacy = config.isLegacy;
            this.updateSnapshots();
        });
    }
    onRepositoryConfigSelected(config) {
        return __awaiter(this, void 0, void 0, function* () {
            this.repositorySnapshot = {
                id: config.id,
                time: config.creationTime,
                name: config.name,
                binaryUrl: config.url,
                deviceType: config.deviceType,
                configurationType: config.configurationType
            };
            if (config.url) {
                try {
                    const binary = yield this.repositoryService.getBinaryFile(config.url, {
                        allowExternal: false
                    });
                    if (binary) {
                        this.repositorySnapshot.binary = yield binary.text();
                    }
                }
                catch (ex) {
                    // do nothing
                }
            }
        });
    }
    updateSnapshots(repositorySnapsOnly) {
        return __awaiter(this, void 0, void 0, function* () {
            this.reloading = true;
            this.repositorySnapshot = undefined;
            this.repositorySnapshots = yield this.repositoryService.getSnapshotsFromRepository(this.device, this.configurationType);
            if (!repositorySnapsOnly) {
                this.configSnapshot = this.isLegacy
                    ? yield this.repositoryService.getLegacyConfigSnapshot(this.device)
                    : yield this.repositoryService.getConfigSnapshot(this.device, this.configurationType);
            }
            if (this.showTextBasedConfig) {
                yield this.textBasedConfigurationComponent.load();
            }
            this.reloading = false;
        });
    }
}
DeviceConfigurationComponent.ɵfac = function DeviceConfigurationComponent_Factory(t) { return new (t || DeviceConfigurationComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ActivatedRoute), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DeviceConfigurationService), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Realtime), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.RepositoryService)); };
DeviceConfigurationComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: DeviceConfigurationComponent, selectors: [["c8y-device-configuration"]], viewQuery: function DeviceConfigurationComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(TextBasedConfigurationComponent, 5);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.textBasedConfigurationComponent = _t.first);
    } }, decls: 12, vars: 14, consts: [[3, "placement"], [1, "btn", "btn-link", 3, "title", "click"], ["c8yIcon", "refresh", 3, "ngClass"], [1, "card", "content-fullpage", "card-has-tabs"], ["class", "card-header separator", 4, "ngIf"], [3, "heading", 4, "ngIf"], [1, "card-header", "separator"], [1, "card-title"], [3, "heading"], [1, "card--grid", "card", "grid__col--4-8--md", "grid__row--6-6--md", "m-b-0"], [1, "card--grid__inner-scroll", "bg-gray-white"], [1, "p-l-16", "p-r-16"], [1, "legend", "form-block"], ["translate", ""], [3, "items", "itemIcon", "configSelected"], [1, "card--grid__inner-scroll", "d-flex", "d-col", "flex-grow"], [1, "card-block", "d-flex", "d-col", "flex-grow"], ["class", "c8y-empty-state text-left", 4, "ngIf"], ["class", "d-flex d-col flex-grow", 3, "device", "configurationType", "configSnapshot", "canSaveSnapshot", "operationToTrigger", "actionButtonText", "actionButtonIcon", "isLegacy", 4, "ngIf"], ["translate", "", 1, "legend", "form-block"], ["class", "p-r-16", 4, "ngIf"], [1, "card-block", "flex-grow", "d-flex", "d-col"], ["class", "d-flex d-col flex-grow", 3, "device", "configurationType", "configSnapshot", "operationToTrigger", "actionButtonText", "actionButtonIcon", "isLegacy", 4, "ngIf"], [1, "c8y-empty-state", "text-left"], [3, "c8yIcon"], [1, "d-flex", "d-col", "flex-grow", 3, "device", "configurationType", "configSnapshot", "canSaveSnapshot", "operationToTrigger", "actionButtonText", "actionButtonIcon", "isLegacy"], [1, "p-r-16"], [3, "items", "itemIcon", "emptyState", "isFilterEnabled", "configSelected"], ["translate", "", 4, "ngIf", "ngIfElse"], ["noSnapshot", ""], [1, "d-flex", "d-col", "flex-grow", 3, "device", "configurationType", "configSnapshot", "operationToTrigger", "actionButtonText", "actionButtonIcon", "isLegacy"]], template: function DeviceConfigurationComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "c8y-action-bar-item", 0);
        ɵngcc0.ɵɵelementStart(1, "button", 1);
        ɵngcc0.ɵɵlistener("click", function DeviceConfigurationComponent_Template_button_click_1_listener() { return ctx.updateSnapshots(); });
        ɵngcc0.ɵɵpipe(2, "translate");
        ɵngcc0.ɵɵelement(3, "i", 2);
        ɵngcc0.ɵɵtext(4);
        ɵngcc0.ɵɵpipe(5, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(6, "div", 3);
        ɵngcc0.ɵɵelementStart(7, "tabset");
        ɵngcc0.ɵɵtemplate(8, DeviceConfigurationComponent_div_8_Template, 4, 3, "div", 4);
        ɵngcc0.ɵɵtemplate(9, DeviceConfigurationComponent_div_9_Template, 4, 3, "div", 4);
        ɵngcc0.ɵɵtemplate(10, DeviceConfigurationComponent_tab_10_Template, 28, 11, "tab", 5);
        ɵngcc0.ɵɵtemplate(11, DeviceConfigurationComponent_tab_11_Template, 3, 3, "tab", 5);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("placement", "right");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(2, 8, "Reload"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(12, _c0, ctx.reloading));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(5, 10, "Reload"), " ");
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showBinaryBasedConfig && !ctx.showTextBasedConfig);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.showBinaryBasedConfig && ctx.showTextBasedConfig);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showBinaryBasedConfig);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showTextBasedConfig);
    } }, directives: [ɵngcc5.ActionBarItemComponent, ɵngcc5.IconDirective, ɵngcc6.NgClass, ɵngcc7.TabsetComponent, ɵngcc6.NgIf, ɵngcc7.TabDirective, ɵngcc5.C8yTranslateDirective, ɵngcc8.DeviceConfigurationListComponent, ɵngcc9.ConfigurationPreviewComponent, ɵngcc10.TextBasedConfigurationComponent], pipes: [ɵngcc5.C8yTranslatePipe], encapsulation: 2 });
DeviceConfigurationComponent.ctorParameters = () => [
    { type: ActivatedRoute },
    { type: DeviceConfigurationService },
    { type: Realtime },
    { type: RepositoryService }
];
DeviceConfigurationComponent.propDecorators = {
    textBasedConfigurationComponent: [{ type: ViewChild, args: [TextBasedConfigurationComponent,] }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DeviceConfigurationComponent, [{
        type: Component,
        args: [{
                selector: 'c8y-device-configuration',
                template: "<c8y-action-bar-item [placement]=\"'right'\">\n  <button class=\"btn btn-link\" title=\"{{ 'Reload' | translate }}\" (click)=\"updateSnapshots()\">\n    <i c8yIcon=\"refresh\" [ngClass]=\"{ 'icon-spin': reloading }\"></i>\n    {{ 'Reload' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<div class=\"card content-fullpage card-has-tabs\">\n  <tabset>\n    <div class=\"card-header separator\" *ngIf=\"showBinaryBasedConfig && !showTextBasedConfig\">\n      <h4 class=\"card-title\">{{ 'Configurations' | translate }}</h4>\n    </div>\n    <div class=\"card-header separator\" *ngIf=\"!showBinaryBasedConfig && showTextBasedConfig\">\n      <h4 class=\"card-title\">{{ 'Text-based configuration' | translate }}</h4>\n    </div>\n    <tab heading=\"{{ 'Configurations' | translate }}\" *ngIf=\"showBinaryBasedConfig\">\n      <div class=\"card--grid card grid__col--4-8--md grid__row--6-6--md m-b-0\">\n        <!-- DEVICE SUPPORTED CONFIGURATIONS -->\n        <div class=\"card--grid__inner-scroll bg-gray-white\">\n          <div class=\"p-l-16 p-r-16\">\n            <h5 class=\"legend form-block\">\n              <span translate>Device-supported configurations</span>\n            </h5>\n          </div>\n          <c8y-device-configuration-list\n            [items]=\"supportedConfigurations\"\n            [itemIcon]=\"'gears'\"\n            (configSelected)=\"onConfigTypeSelected($event)\"\n          ></c8y-device-configuration-list>\n        </div>\n\n        <!-- CONFIGURATION PREVIEW -->\n        <div class=\"card--grid__inner-scroll d-flex d-col flex-grow\">\n          <div class=\"card-block d-flex d-col flex-grow\">\n            <h5 class=\"legend form-block\"><span translate>Preview</span></h5>\n\n            <!-- EMPTY STATE -->\n            <div class=\"c8y-empty-state text-left\" *ngIf=\"!configurationType\">\n              <h1 [c8yIcon]=\"'file-text'\"></h1>\n              <p>\n                <strong translate>No configuration selected.</strong><br />\n                <small translate>Select a configuration to preview</small>\n              </p>\n            </div>\n\n            <!-- PREVIEW AVAILABLE STATE -->\n            <c8y-device-configuration-preview\n              *ngIf=\"configurationType\"\n              [device]=\"device\"\n              [configurationType]=\"configurationType\"\n              [configSnapshot]=\"configSnapshot\"\n              [canSaveSnapshot]=\"true\"\n              [operationToTrigger]=\"'c8y_UploadConfigFile'\"\n              [actionButtonText]=\"'Get snapshot from device' | translate\"\n              [actionButtonIcon]=\"'download'\"\n              [isLegacy]=\"isLegacy\"\n              class=\"d-flex d-col flex-grow\"\n            ></c8y-device-configuration-preview>\n          </div>\n        </div>\n\n        <!-- AVAILABLE SUPPORTED CONFIGURATIONS -->\n        <div class=\"card--grid__inner-scroll bg-gray-white\">\n          <div class=\"p-l-16 p-r-16\">\n            <h5 class=\"legend form-block\" translate>Available supported configurations</h5>\n          </div>\n\n          <!-- EMPTY STATE -->\n          <div class=\"c8y-empty-state text-left\" *ngIf=\"!configurationType\">\n            <h1 [c8yIcon]=\"'gears'\"></h1>\n            <p>\n              <strong translate>No selection</strong><br />\n              <small translate\n                >Select a configuration from the device-supported configuration list</small\n              >\n            </p>\n          </div>\n          <div class=\"p-r-16\" *ngIf=\"configurationType\">\n            <c8y-device-configuration-list\n              [items]=\"repositorySnapshots\"\n              [itemIcon]=\"'file-text'\"\n              [emptyState]=\"repositorySnapshotsEmptyState\"\n              [isFilterEnabled]=\"true\"\n              (configSelected)=\"onRepositoryConfigSelected($event)\"\n            ></c8y-device-configuration-list>\n          </div>\n        </div>\n\n        <!-- CONFIGURATION PREVIEW -->\n        <div class=\"card--grid__inner-scroll d-flex d-col flex-grow\">\n          <div class=\"card-block flex-grow d-flex d-col\">\n            <h5 class=\"legend form-block\" translate>Preview</h5>\n\n            <!-- EMPTY STATE -->\n\n            <div class=\"c8y-empty-state text-left\" *ngIf=\"!repositorySnapshot\">\n              <h1 [c8yIcon]=\"'file-text'\"></h1>\n              <p>\n                <strong translate>No configuration selected.</strong><br />\n                <small *ngIf=\"!configurationType; else noSnapshot\" translate\n                  >Select a configuration to preview</small\n                >\n                <ng-template #noSnapshot>\n                  <small translate>Select the configuration you want to preview</small>\n                </ng-template>\n              </p>\n            </div>\n\n            <!-- CONFIGURATION SELECTED STATE -->\n            <c8y-device-configuration-preview\n              *ngIf=\"repositorySnapshot\"\n              [device]=\"device\"\n              [configurationType]=\"configurationType\"\n              [configSnapshot]=\"repositorySnapshot\"\n              [operationToTrigger]=\"'c8y_DownloadConfigFile'\"\n              [actionButtonText]=\"'Send configuration to device' | translate\"\n              [actionButtonIcon]=\"'upload'\"\n              [isLegacy]=\"isLegacy\"\n              class=\"d-flex d-col flex-grow\"\n            ></c8y-device-configuration-preview>\n          </div>\n        </div>\n      </div>\n    </tab>\n    <tab heading=\"{{ 'Text-based configuration' | translate }}\" *ngIf=\"showTextBasedConfig\">\n      <c8y-text-based-configuration></c8y-text-based-configuration>\n    </tab>\n  </tabset>\n</div>\n"
            }]
    }], function () { return [{ type: ɵngcc1.ActivatedRoute }, { type: ɵngcc2.DeviceConfigurationService }, { type: ɵngcc3.Realtime }, { type: ɵngcc4.RepositoryService }]; }, { textBasedConfigurationComponent: [{
            type: ViewChild,
            args: [TextBasedConfigurationComponent]
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,