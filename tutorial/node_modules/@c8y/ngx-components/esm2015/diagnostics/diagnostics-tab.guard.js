import { DiagnosticsService } from './diagnostics.service';
import { Injectable } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './diagnostics.service';
export class DiagnosticsTabGuard {
    constructor(diagnosticsService) {
        this.diagnosticsService = diagnosticsService;
    }
    canActivate(route) {
        const device = route.data.contextData || route.parent.data.contextData;
        return this.diagnosticsService.isSupportedDevice(device);
    }
}
DiagnosticsTabGuard.ɵfac = function DiagnosticsTabGuard_Factory(t) { return new (t || DiagnosticsTabGuard)(ɵngcc0.ɵɵinject(ɵngcc1.DiagnosticsService)); };
DiagnosticsTabGuard.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: DiagnosticsTabGuard, factory: DiagnosticsTabGuard.ɵfac });
DiagnosticsTabGuard.ctorParameters = () => [
    { type: DiagnosticsService }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DiagnosticsTabGuard, [{
        type: Injectable
    }], function () { return [{ type: ɵngcc1.DiagnosticsService }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGlhZ25vc3RpY3MtdGFiLmd1YXJkLmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi9kaWFnbm9zdGljcy9kaWFnbm9zdGljcy10YWIuZ3VhcmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDM0QsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7O0FBSTNDLE1BQU0sT0FBTyxtQkFBbUI7QUFBRyxJQUNqQyxZQUFvQixrQkFBc0M7QUFBSSxRQUExQyx1QkFBa0IsR0FBbEIsa0JBQWtCLENBQW9CO0FBQUMsSUFBRSxDQUFDO0FBQ2hFLElBQ0UsV0FBVyxDQUFDLEtBQTZCO0FBQzNDLFFBQUksTUFBTSxNQUFNLEdBQUcsS0FBSyxDQUFDLElBQUksQ0FBQyxXQUFXLElBQUksS0FBSyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDO0FBQzNFLFFBQUksT0FBTyxJQUFJLENBQUMsa0JBQWtCLENBQUMsaUJBQWlCLENBQUMsTUFBTSxDQUFDLENBQUM7QUFDN0QsSUFBRSxDQUFDO0FBQ0g7K0NBUkMsVUFBVTt1SUFDVDtBQUFDO0FBQTZDLFlBTHZDLGtCQUFrQjtBQUFHOzs7bUZBQUU7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpYWdub3N0aWNzU2VydmljZSB9IGZyb20gJy4vZGlhZ25vc3RpY3Muc2VydmljZSc7XG5pbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDYW5BY3RpdmF0ZSwgQWN0aXZhdGVkUm91dGVTbmFwc2hvdCB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBEaWFnbm9zdGljc1RhYkd1YXJkIGltcGxlbWVudHMgQ2FuQWN0aXZhdGUge1xuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGRpYWdub3N0aWNzU2VydmljZTogRGlhZ25vc3RpY3NTZXJ2aWNlKSB7fVxuXG4gIGNhbkFjdGl2YXRlKHJvdXRlOiBBY3RpdmF0ZWRSb3V0ZVNuYXBzaG90KSB7XG4gICAgY29uc3QgZGV2aWNlID0gcm91dGUuZGF0YS5jb250ZXh0RGF0YSB8fCByb3V0ZS5wYXJlbnQuZGF0YS5jb250ZXh0RGF0YTtcbiAgICByZXR1cm4gdGhpcy5kaWFnbm9zdGljc1NlcnZpY2UuaXNTdXBwb3J0ZWREZXZpY2UoZGV2aWNlKTtcbiAgfVxufVxuIl19