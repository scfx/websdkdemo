import { NgModule } from '@angular/core';
import { DeviceStatusComponent, DeviceStatusModule, HOOK_NAVIGATOR_NODES, ModalModule, ModalService } from '@c8y/ngx-components';
import { ASSET_NAVIGATOR_CONFIG } from './asset-node-config.model';
import { AssetNodeFactory } from './asset-node.factory';
import { DeviceGroupService } from './group.service';
import * as ɵngcc0 from '@angular/core';
export class AssetsNavigatorModule {
    static config(config = {}) {
        return {
            ngModule: AssetsNavigatorModule,
            providers: [
                {
                    provide: ASSET_NAVIGATOR_CONFIG,
                    useValue: config
                }
            ]
        };
    }
}
AssetsNavigatorModule.ɵfac = function AssetsNavigatorModule_Factory(t) { return new (t || AssetsNavigatorModule)(); };
AssetsNavigatorModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: AssetsNavigatorModule });
AssetsNavigatorModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [
        ModalService,
        DeviceGroupService,
        {
            provide: HOOK_NAVIGATOR_NODES,
            useClass: AssetNodeFactory,
            multi: true
        }
    ], imports: [[ModalModule, DeviceStatusModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AssetsNavigatorModule, [{
        type: NgModule,
        args: [{
                declarations: [],
                imports: [ModalModule, DeviceStatusModule],
                providers: [
                    ModalService,
                    DeviceGroupService,
                    {
                        provide: HOOK_NAVIGATOR_NODES,
                        useClass: AssetNodeFactory,
                        multi: true
                    }
                ],
                entryComponents: [DeviceStatusComponent]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(AssetsNavigatorModule, { imports: function () { return [ModalModule, DeviceStatusModule]; } }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXNzZXRzLW5hdmlnYXRvci5tb2R1bGUuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2Fzc2V0cy1uYXZpZ2F0b3IvYXNzZXRzLW5hdmlnYXRvci5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUF1QixRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDOUQsT0FBTyxFQUNMLHFCQUFxQixFQUNyQixrQkFBa0IsRUFDbEIsb0JBQW9CLEVBQ3BCLFdBQVcsRUFDWCxZQUFZLEVBQ2IsTUFBTSxxQkFBcUIsQ0FBQztBQUM3QixPQUFPLEVBQXdCLHNCQUFzQixFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDekYsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDeEQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0saUJBQWlCLENBQUM7O0FBZ0JyRCxNQUFNLE9BQU8scUJBQXFCO0FBQ2xDLElBQUUsTUFBTSxDQUFDLE1BQU0sQ0FBQyxTQUErQixFQUFFO0FBQUksUUFDakQsT0FBTztBQUNYLFlBQU0sUUFBUSxFQUFFLHFCQUFxQjtBQUNyQyxZQUFNLFNBQVMsRUFBRTtBQUNqQixnQkFBUTtBQUNSLG9CQUFVLE9BQU8sRUFBRSxzQkFBc0I7QUFDekMsb0JBQVUsUUFBUSxFQUFFLE1BQU07QUFDMUIsaUJBQVM7QUFDVCxhQUFPO0FBQ1AsU0FBSyxDQUFDO0FBQ04sSUFBRSxDQUFDO0FBQ0g7aURBMUJDLFFBQVEsU0FBQyxrQkFDUixZQUFZLEVBQUUsRUFBRSxrQkFDaEI7TUFBTyxFQUFFLENBQUMsV0FBVyxFQUFFLGtCQUFrQixDQUFDLGtCQUMxQyxTQUFTLEVBQUUsc0JBQ1Q7R0FBWSxzQkFDWixrQkFBa0Isc0JBQ2xCO1NBQ0UsT0FBTyxFQUFFO2dCQUFvQjs7SUFDN0IsUUFBUSxFQUFFLGdCQUFnQjthQUMxQixLQUFLLEVBQUUsSUFBSTtNQUNaO0FBQ0Y7UUFDRCxlQUFlLEVBQUUsQ0FBQyxxQkFBcUIsQ0FBQztNQUN6Qzs7Ozs7Ozs7Ozs7Ozs7Ozs7aU1BQ0k7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE1vZHVsZVdpdGhQcm92aWRlcnMsIE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1xuICBEZXZpY2VTdGF0dXNDb21wb25lbnQsXG4gIERldmljZVN0YXR1c01vZHVsZSxcbiAgSE9PS19OQVZJR0FUT1JfTk9ERVMsXG4gIE1vZGFsTW9kdWxlLFxuICBNb2RhbFNlcnZpY2Vcbn0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cyc7XG5pbXBvcnQgeyBBc3NldE5hdmlnYXRvckNvbmZpZywgQVNTRVRfTkFWSUdBVE9SX0NPTkZJRyB9IGZyb20gJy4vYXNzZXQtbm9kZS1jb25maWcubW9kZWwnO1xuaW1wb3J0IHsgQXNzZXROb2RlRmFjdG9yeSB9IGZyb20gJy4vYXNzZXQtbm9kZS5mYWN0b3J5JztcbmltcG9ydCB7IERldmljZUdyb3VwU2VydmljZSB9IGZyb20gJy4vZ3JvdXAuc2VydmljZSc7XG5cbkBOZ01vZHVsZSh7XG4gIGRlY2xhcmF0aW9uczogW10sXG4gIGltcG9ydHM6IFtNb2RhbE1vZHVsZSwgRGV2aWNlU3RhdHVzTW9kdWxlXSxcbiAgcHJvdmlkZXJzOiBbXG4gICAgTW9kYWxTZXJ2aWNlLFxuICAgIERldmljZUdyb3VwU2VydmljZSxcbiAgICB7XG4gICAgICBwcm92aWRlOiBIT09LX05BVklHQVRPUl9OT0RFUyxcbiAgICAgIHVzZUNsYXNzOiBBc3NldE5vZGVGYWN0b3J5LFxuICAgICAgbXVsdGk6IHRydWVcbiAgICB9XG4gIF0sXG4gIGVudHJ5Q29tcG9uZW50czogW0RldmljZVN0YXR1c0NvbXBvbmVudF1cbn0pXG5leHBvcnQgY2xhc3MgQXNzZXRzTmF2aWdhdG9yTW9kdWxlIHtcbiAgc3RhdGljIGNvbmZpZyhjb25maWc6IEFzc2V0TmF2aWdhdG9yQ29uZmlnID0ge30pOiBNb2R1bGVXaXRoUHJvdmlkZXJzPEFzc2V0c05hdmlnYXRvck1vZHVsZT4ge1xuICAgIHJldHVybiB7XG4gICAgICBuZ01vZHVsZTogQXNzZXRzTmF2aWdhdG9yTW9kdWxlLFxuICAgICAgcHJvdmlkZXJzOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBwcm92aWRlOiBBU1NFVF9OQVZJR0FUT1JfQ09ORklHLFxuICAgICAgICAgIHVzZVZhbHVlOiBjb25maWdcbiAgICAgICAgfVxuICAgICAgXVxuICAgIH07XG4gIH1cbn1cbiJdfQ==