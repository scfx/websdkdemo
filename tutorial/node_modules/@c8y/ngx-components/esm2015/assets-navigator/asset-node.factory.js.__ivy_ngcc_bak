import { Inject, Injectable, Optional } from '@angular/core';
import { get as getProp } from 'lodash-es';
import { ASSET_NAVIGATOR_CONFIG } from './asset-node-config.model';
import { AssetNodeService } from './asset-node.service';
export class AssetNodeFactory {
    constructor(service, moduleConfig) {
        this.service = service;
        this.moduleConfig = moduleConfig;
    }
    get() {
        var _a;
        const rootNavigatorNode = (_a = getProp(this.moduleConfig, 'rootNavigatorNode')) !== null && _a !== void 0 ? _a : true;
        if (rootNavigatorNode === false) {
            return;
        }
        if (!this.service.rootNode) {
            this.service.createRootNode(rootNavigatorNode === true ? {} : rootNavigatorNode);
        }
        return this.service.rootNode;
    }
}
AssetNodeFactory.decorators = [
    { type: Injectable }
];
AssetNodeFactory.ctorParameters = () => [
    { type: AssetNodeService },
    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [ASSET_NAVIGATOR_CONFIG,] }] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXNzZXQtbm9kZS5mYWN0b3J5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vYXNzZXRzLW5hdmlnYXRvci9hc3NldC1ub2RlLmZhY3RvcnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLE1BQU0sRUFBRSxVQUFVLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzdELE9BQU8sRUFBRSxHQUFHLElBQUksT0FBTyxFQUFFLE1BQU0sV0FBVyxDQUFDO0FBRTNDLE9BQU8sRUFBd0Isc0JBQXNCLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUN6RixPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUd4RCxNQUFNLE9BQU8sZ0JBQWdCO0lBQzNCLFlBQ1UsT0FBeUIsRUFDa0IsWUFBa0M7UUFEN0UsWUFBTyxHQUFQLE9BQU8sQ0FBa0I7UUFDa0IsaUJBQVksR0FBWixZQUFZLENBQXNCO0lBQ3BGLENBQUM7SUFFSixHQUFHOztRQUNELE1BQU0saUJBQWlCLEdBQUcsTUFBQSxPQUFPLENBQUMsSUFBSSxDQUFDLFlBQVksRUFBRSxtQkFBbUIsQ0FBQyxtQ0FBSSxJQUFJLENBQUM7UUFFbEYsSUFBSSxpQkFBaUIsS0FBSyxLQUFLLEVBQUU7WUFDL0IsT0FBTztTQUNSO1FBRUQsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxFQUFFO1lBQzFCLElBQUksQ0FBQyxPQUFPLENBQUMsY0FBYyxDQUFDLGlCQUFpQixLQUFLLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO1NBQ2xGO1FBQ0QsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQztJQUMvQixDQUFDOzs7WUFsQkYsVUFBVTs7O1lBRkYsZ0JBQWdCOzRDQU1wQixRQUFRLFlBQUksTUFBTSxTQUFDLHNCQUFzQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdCwgSW5qZWN0YWJsZSwgT3B0aW9uYWwgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGdldCBhcyBnZXRQcm9wIH0gZnJvbSAnbG9kYXNoLWVzJztcbmltcG9ydCB7IEFzc2V0Tm9kZSB9IGZyb20gJy4vYXNzZXQtbm9kZSc7XG5pbXBvcnQgeyBBc3NldE5hdmlnYXRvckNvbmZpZywgQVNTRVRfTkFWSUdBVE9SX0NPTkZJRyB9IGZyb20gJy4vYXNzZXQtbm9kZS1jb25maWcubW9kZWwnO1xuaW1wb3J0IHsgQXNzZXROb2RlU2VydmljZSB9IGZyb20gJy4vYXNzZXQtbm9kZS5zZXJ2aWNlJztcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIEFzc2V0Tm9kZUZhY3Rvcnkge1xuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIHNlcnZpY2U6IEFzc2V0Tm9kZVNlcnZpY2UsXG4gICAgQE9wdGlvbmFsKCkgQEluamVjdChBU1NFVF9OQVZJR0FUT1JfQ09ORklHKSBwdWJsaWMgbW9kdWxlQ29uZmlnOiBBc3NldE5hdmlnYXRvckNvbmZpZ1xuICApIHt9XG5cbiAgZ2V0KCk6IEFzc2V0Tm9kZSB7XG4gICAgY29uc3Qgcm9vdE5hdmlnYXRvck5vZGUgPSBnZXRQcm9wKHRoaXMubW9kdWxlQ29uZmlnLCAncm9vdE5hdmlnYXRvck5vZGUnKSA/PyB0cnVlO1xuXG4gICAgaWYgKHJvb3ROYXZpZ2F0b3JOb2RlID09PSBmYWxzZSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmICghdGhpcy5zZXJ2aWNlLnJvb3ROb2RlKSB7XG4gICAgICB0aGlzLnNlcnZpY2UuY3JlYXRlUm9vdE5vZGUocm9vdE5hdmlnYXRvck5vZGUgPT09IHRydWUgPyB7fSA6IHJvb3ROYXZpZ2F0b3JOb2RlKTtcbiAgICB9XG4gICAgcmV0dXJuIHRoaXMuc2VydmljZS5yb290Tm9kZTtcbiAgfVxufVxuIl19