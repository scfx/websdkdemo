import { Injectable } from '@angular/core';
import { AssetNodeService } from '../asset-node.service';
import { GroupNode } from './group-node';
import { GroupFragment } from '../group-fragment.model';
export class GroupNodeService extends AssetNodeService {
    constructor() {
        super(...arguments);
        this.PAGE_SIZE = 5;
    }
    createGroupNode(config) {
        return new GroupNode(this, config);
    }
    createChildNode(managedObject) {
        const config = { mo: managedObject };
        return this.createGroupNode(config);
    }
    subAssetsQueryFilter() {
        const rootQueryFilter = this.rootQueryFilter();
        const filter = this.queriesUtil.addOrFilter(rootQueryFilter, {
            type: GroupFragment.subGroupType
        });
        return this.queriesUtil.buildQuery(filter);
    }
    getGroupItems(moId) {
        return this.inventory.childAssetsList(moId, {
            query: this.subAssetsQueryFilter(),
            withChildren: false,
            pageSize: this.PAGE_SIZE,
            withTotalPages: true
        });
    }
}
GroupNodeService.decorators = [
    { type: Injectable }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JvdXAtbm9kZS5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vYXNzZXRzLW5hdmlnYXRvci9hc3NldC1zZWxlY3Rvci9ncm91cC1ub2RlLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUN6RCxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sY0FBYyxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUd4RCxNQUFNLE9BQU8sZ0JBQWlCLFNBQVEsZ0JBQWdCO0lBRHREOztRQUVZLGNBQVMsR0FBRyxDQUFDLENBQUM7SUEyQjFCLENBQUM7SUF6QkMsZUFBZSxDQUFDLE1BQU07UUFDcEIsT0FBTyxJQUFJLFNBQVMsQ0FBQyxJQUFJLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDckMsQ0FBQztJQUVELGVBQWUsQ0FBQyxhQUFhO1FBQzNCLE1BQU0sTUFBTSxHQUF1QixFQUFFLEVBQUUsRUFBRSxhQUFhLEVBQUUsQ0FBQztRQUN6RCxPQUFPLElBQUksQ0FBQyxlQUFlLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDdEMsQ0FBQztJQUVELG9CQUFvQjtRQUNsQixNQUFNLGVBQWUsR0FBRyxJQUFJLENBQUMsZUFBZSxFQUFFLENBQUM7UUFDL0MsTUFBTSxNQUFNLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxXQUFXLENBQUMsZUFBZSxFQUFFO1lBQzNELElBQUksRUFBRSxhQUFhLENBQUMsWUFBWTtTQUNqQyxDQUFDLENBQUM7UUFDSCxPQUFPLElBQUksQ0FBQyxXQUFXLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQzdDLENBQUM7SUFFRCxhQUFhLENBQUMsSUFBWTtRQUN4QixPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsZUFBZSxDQUFDLElBQUksRUFBRTtZQUMxQyxLQUFLLEVBQUUsSUFBSSxDQUFDLG9CQUFvQixFQUFFO1lBQ2xDLFlBQVksRUFBRSxLQUFLO1lBQ25CLFFBQVEsRUFBRSxJQUFJLENBQUMsU0FBUztZQUN4QixjQUFjLEVBQUUsSUFBSTtTQUNyQixDQUFDLENBQUM7SUFDTCxDQUFDOzs7WUE1QkYsVUFBVSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEFzc2V0Tm9kZVNlcnZpY2UgfSBmcm9tICcuLi9hc3NldC1ub2RlLnNlcnZpY2UnO1xuaW1wb3J0IHsgR3JvdXBOb2RlIH0gZnJvbSAnLi9ncm91cC1ub2RlJztcbmltcG9ydCB7IEdyb3VwRnJhZ21lbnQgfSBmcm9tICcuLi9ncm91cC1mcmFnbWVudC5tb2RlbCc7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBHcm91cE5vZGVTZXJ2aWNlIGV4dGVuZHMgQXNzZXROb2RlU2VydmljZSB7XG4gIHByb3RlY3RlZCBQQUdFX1NJWkUgPSA1O1xuXG4gIGNyZWF0ZUdyb3VwTm9kZShjb25maWcpIHtcbiAgICByZXR1cm4gbmV3IEdyb3VwTm9kZSh0aGlzLCBjb25maWcpO1xuICB9XG5cbiAgY3JlYXRlQ2hpbGROb2RlKG1hbmFnZWRPYmplY3QpOiBHcm91cE5vZGUge1xuICAgIGNvbnN0IGNvbmZpZzogUGFydGlhbDxHcm91cE5vZGU+ID0geyBtbzogbWFuYWdlZE9iamVjdCB9O1xuICAgIHJldHVybiB0aGlzLmNyZWF0ZUdyb3VwTm9kZShjb25maWcpO1xuICB9XG5cbiAgc3ViQXNzZXRzUXVlcnlGaWx0ZXIoKSB7XG4gICAgY29uc3Qgcm9vdFF1ZXJ5RmlsdGVyID0gdGhpcy5yb290UXVlcnlGaWx0ZXIoKTtcbiAgICBjb25zdCBmaWx0ZXIgPSB0aGlzLnF1ZXJpZXNVdGlsLmFkZE9yRmlsdGVyKHJvb3RRdWVyeUZpbHRlciwge1xuICAgICAgdHlwZTogR3JvdXBGcmFnbWVudC5zdWJHcm91cFR5cGVcbiAgICB9KTtcbiAgICByZXR1cm4gdGhpcy5xdWVyaWVzVXRpbC5idWlsZFF1ZXJ5KGZpbHRlcik7XG4gIH1cblxuICBnZXRHcm91cEl0ZW1zKG1vSWQ6IHN0cmluZyk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuIHRoaXMuaW52ZW50b3J5LmNoaWxkQXNzZXRzTGlzdChtb0lkLCB7XG4gICAgICBxdWVyeTogdGhpcy5zdWJBc3NldHNRdWVyeUZpbHRlcigpLFxuICAgICAgd2l0aENoaWxkcmVuOiBmYWxzZSxcbiAgICAgIHBhZ2VTaXplOiB0aGlzLlBBR0VfU0laRSxcbiAgICAgIHdpdGhUb3RhbFBhZ2VzOiB0cnVlXG4gICAgfSk7XG4gIH1cbn1cbiJdfQ==