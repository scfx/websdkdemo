import { NgModule } from '@angular/core';
import { CoreModule, HOOK_NAVIGATOR_NODES, HOOK_ROUTE, HOOK_TABS } from '@c8y/ngx-components';
import { BasicAuthSettingsComponent } from './basic-auth-settings.component';
import { TabsFactory } from './factories/tabs.factory';
import { NavigationFactory } from './factories/navigation.factory';
import { AuthConfigurationGuard } from './auth-configuration.guard';
import { PopoverModule } from 'ngx-bootstrap/popover';
import { AuthConfigurationService } from './auth-configuration.service';
import { AuthConfigurationComponent } from './auth-configuration.component';
import { TfaSettingsComponent } from './tfa-settings.component';
import { SessionConfigurationComponent } from './session-configuration.component';
import { LoginSettingsComponent } from './login-settings.component';
const ɵ0 = [
    {
        path: 'auth-configuration',
        redirectTo: 'auth-configuration/basic_settings',
        pathMatch: 'full'
    },
    {
        path: 'auth-configuration/basic_settings',
        component: AuthConfigurationComponent,
        canActivate: [AuthConfigurationGuard]
    }
];
export class AuthConfigurationModule {
}
AuthConfigurationModule.decorators = [
    { type: NgModule, args: [{
                declarations: [
                    SessionConfigurationComponent,
                    LoginSettingsComponent,
                    BasicAuthSettingsComponent,
                    AuthConfigurationComponent,
                    TfaSettingsComponent
                ],
                exports: [],
                imports: [CoreModule, PopoverModule],
                providers: [
                    AuthConfigurationService,
                    AuthConfigurationGuard,
                    { provide: HOOK_TABS, useClass: TabsFactory, multi: true },
                    {
                        provide: HOOK_NAVIGATOR_NODES,
                        useClass: NavigationFactory,
                        multi: true
                    },
                    {
                        provide: HOOK_ROUTE,
                        useValue: ɵ0,
                        multi: true
                    }
                ]
            },] }
];
export { ɵ0 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0aC1jb25maWd1cmF0aW9uLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2F1dGgtY29uZmlndXJhdGlvbi9hdXRoLWNvbmZpZ3VyYXRpb24ubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUNMLFVBQVUsRUFDVixvQkFBb0IsRUFDcEIsVUFBVSxFQUNWLFNBQVMsRUFFVixNQUFNLHFCQUFxQixDQUFDO0FBQzdCLE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBQzdFLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUN2RCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUNuRSxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUNwRSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDdEQsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFDeEUsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDNUUsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDaEUsT0FBTyxFQUFFLDZCQUE2QixFQUFFLE1BQU0sbUNBQW1DLENBQUM7QUFDbEYsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sNEJBQTRCLENBQUM7V0F1QnBEO0lBQ1I7UUFDRSxJQUFJLEVBQUUsb0JBQW9CO1FBQzFCLFVBQVUsRUFBRSxtQ0FBbUM7UUFDL0MsU0FBUyxFQUFFLE1BQU07S0FDbEI7SUFDRDtRQUNFLElBQUksRUFBRSxtQ0FBbUM7UUFDekMsU0FBUyxFQUFFLDBCQUEwQjtRQUNyQyxXQUFXLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQztLQUN0QztDQUNTO0FBS2xCLE1BQU0sT0FBTyx1QkFBdUI7OztZQXJDbkMsUUFBUSxTQUFDO2dCQUNSLFlBQVksRUFBRTtvQkFDWiw2QkFBNkI7b0JBQzdCLHNCQUFzQjtvQkFDdEIsMEJBQTBCO29CQUMxQiwwQkFBMEI7b0JBQzFCLG9CQUFvQjtpQkFDckI7Z0JBQ0QsT0FBTyxFQUFFLEVBQUU7Z0JBQ1gsT0FBTyxFQUFFLENBQUMsVUFBVSxFQUFFLGFBQWEsQ0FBQztnQkFDcEMsU0FBUyxFQUFFO29CQUNULHdCQUF3QjtvQkFDeEIsc0JBQXNCO29CQUN0QixFQUFFLE9BQU8sRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFO29CQUMxRDt3QkFDRSxPQUFPLEVBQUUsb0JBQW9CO3dCQUM3QixRQUFRLEVBQUUsaUJBQWlCO3dCQUMzQixLQUFLLEVBQUUsSUFBSTtxQkFDWjtvQkFDRDt3QkFDRSxPQUFPLEVBQUUsVUFBVTt3QkFDbkIsUUFBUSxJQVdJO3dCQUNaLEtBQUssRUFBRSxJQUFJO3FCQUNaO2lCQUNGO2FBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtcbiAgQ29yZU1vZHVsZSxcbiAgSE9PS19OQVZJR0FUT1JfTk9ERVMsXG4gIEhPT0tfUk9VVEUsXG4gIEhPT0tfVEFCUyxcbiAgUm91dGVcbn0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cyc7XG5pbXBvcnQgeyBCYXNpY0F1dGhTZXR0aW5nc0NvbXBvbmVudCB9IGZyb20gJy4vYmFzaWMtYXV0aC1zZXR0aW5ncy5jb21wb25lbnQnO1xuaW1wb3J0IHsgVGFic0ZhY3RvcnkgfSBmcm9tICcuL2ZhY3Rvcmllcy90YWJzLmZhY3RvcnknO1xuaW1wb3J0IHsgTmF2aWdhdGlvbkZhY3RvcnkgfSBmcm9tICcuL2ZhY3Rvcmllcy9uYXZpZ2F0aW9uLmZhY3RvcnknO1xuaW1wb3J0IHsgQXV0aENvbmZpZ3VyYXRpb25HdWFyZCB9IGZyb20gJy4vYXV0aC1jb25maWd1cmF0aW9uLmd1YXJkJztcbmltcG9ydCB7IFBvcG92ZXJNb2R1bGUgfSBmcm9tICduZ3gtYm9vdHN0cmFwL3BvcG92ZXInO1xuaW1wb3J0IHsgQXV0aENvbmZpZ3VyYXRpb25TZXJ2aWNlIH0gZnJvbSAnLi9hdXRoLWNvbmZpZ3VyYXRpb24uc2VydmljZSc7XG5pbXBvcnQgeyBBdXRoQ29uZmlndXJhdGlvbkNvbXBvbmVudCB9IGZyb20gJy4vYXV0aC1jb25maWd1cmF0aW9uLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBUZmFTZXR0aW5nc0NvbXBvbmVudCB9IGZyb20gJy4vdGZhLXNldHRpbmdzLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBTZXNzaW9uQ29uZmlndXJhdGlvbkNvbXBvbmVudCB9IGZyb20gJy4vc2Vzc2lvbi1jb25maWd1cmF0aW9uLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBMb2dpblNldHRpbmdzQ29tcG9uZW50IH0gZnJvbSAnLi9sb2dpbi1zZXR0aW5ncy5jb21wb25lbnQnO1xuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtcbiAgICBTZXNzaW9uQ29uZmlndXJhdGlvbkNvbXBvbmVudCxcbiAgICBMb2dpblNldHRpbmdzQ29tcG9uZW50LFxuICAgIEJhc2ljQXV0aFNldHRpbmdzQ29tcG9uZW50LFxuICAgIEF1dGhDb25maWd1cmF0aW9uQ29tcG9uZW50LFxuICAgIFRmYVNldHRpbmdzQ29tcG9uZW50XG4gIF0sXG4gIGV4cG9ydHM6IFtdLFxuICBpbXBvcnRzOiBbQ29yZU1vZHVsZSwgUG9wb3Zlck1vZHVsZV0sXG4gIHByb3ZpZGVyczogW1xuICAgIEF1dGhDb25maWd1cmF0aW9uU2VydmljZSxcbiAgICBBdXRoQ29uZmlndXJhdGlvbkd1YXJkLFxuICAgIHsgcHJvdmlkZTogSE9PS19UQUJTLCB1c2VDbGFzczogVGFic0ZhY3RvcnksIG11bHRpOiB0cnVlIH0sXG4gICAge1xuICAgICAgcHJvdmlkZTogSE9PS19OQVZJR0FUT1JfTk9ERVMsXG4gICAgICB1c2VDbGFzczogTmF2aWdhdGlvbkZhY3RvcnksXG4gICAgICBtdWx0aTogdHJ1ZVxuICAgIH0sXG4gICAge1xuICAgICAgcHJvdmlkZTogSE9PS19ST1VURSxcbiAgICAgIHVzZVZhbHVlOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBwYXRoOiAnYXV0aC1jb25maWd1cmF0aW9uJyxcbiAgICAgICAgICByZWRpcmVjdFRvOiAnYXV0aC1jb25maWd1cmF0aW9uL2Jhc2ljX3NldHRpbmdzJyxcbiAgICAgICAgICBwYXRoTWF0Y2g6ICdmdWxsJ1xuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgcGF0aDogJ2F1dGgtY29uZmlndXJhdGlvbi9iYXNpY19zZXR0aW5ncycsXG4gICAgICAgICAgY29tcG9uZW50OiBBdXRoQ29uZmlndXJhdGlvbkNvbXBvbmVudCxcbiAgICAgICAgICBjYW5BY3RpdmF0ZTogW0F1dGhDb25maWd1cmF0aW9uR3VhcmRdXG4gICAgICAgIH1cbiAgICAgIF0gYXMgUm91dGVbXSxcbiAgICAgIG11bHRpOiB0cnVlXG4gICAgfVxuICBdXG59KVxuZXhwb3J0IGNsYXNzIEF1dGhDb25maWd1cmF0aW9uTW9kdWxlIHt9XG4iXX0=