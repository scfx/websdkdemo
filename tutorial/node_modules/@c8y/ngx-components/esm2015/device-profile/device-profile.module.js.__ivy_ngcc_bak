import { NgModule } from '@angular/core';
import { RouterModule } from '@angular/router';
import { CommonModule, CoreModule, HOOK_NAVIGATOR_NODES, HOOK_ROUTE, gettext, ViewContext } from '@c8y/ngx-components';
import { BsDropdownModule } from 'ngx-bootstrap/dropdown';
import { PopoverModule } from 'ngx-bootstrap/popover';
import { TooltipModule } from 'ngx-bootstrap/tooltip';
import { ButtonsModule } from 'ngx-bootstrap/buttons';
import { ReactiveFormsModule } from '@angular/forms';
import { DeviceProfileComponent } from './device-profile.component';
import { DeviceProfileListComponent } from './device-profile-list.component';
import { DeviceProfileNavigationFactory } from './device-profile-navigation.factory';
import { DeviceProfileService } from './device-profile.service';
import { AddDeviceProfileComponent } from './add-device-profile.component';
import { DeviceProfileGuard } from './device-profile.guard';
import { RepositoryModule } from '@c8y/ngx-components/repository';
import { SelectConfigurationModalComponent } from './select-configuration-modal.component';
import { DeviceTabProfileComponent } from './device-tab-profile/device-tab-profile.component';
import { DeviceTabProfileDetailComponent } from './device-tab-profile/device-tab-profile-detail.component';
import { DeviceProfileItemListComponent } from './device-tab-profile/device-profile-item-list.component';
import { SingleOperationDetailsModule } from '@c8y/ngx-components/operations/single-operation-details';
const deviceProfilesRoutes = [
    {
        path: 'device-profiles/:id',
        component: DeviceProfileComponent
    },
    {
        path: 'device-profiles',
        component: DeviceProfileListComponent
    }
];
const deviceTabProfileRoutes = [
    {
        context: ViewContext.Device,
        path: 'device-profile',
        component: DeviceTabProfileComponent,
        label: gettext('Device profile'),
        icon: 'c8y-device-profile',
        canActivate: [DeviceProfileGuard]
    }
];
const ɵ0 = deviceTabProfileRoutes;
export class DeviceProfileModule {
}
DeviceProfileModule.decorators = [
    { type: NgModule, args: [{
                declarations: [
                    DeviceProfileComponent,
                    DeviceProfileListComponent,
                    AddDeviceProfileComponent,
                    SelectConfigurationModalComponent,
                    DeviceTabProfileComponent,
                    DeviceTabProfileDetailComponent,
                    DeviceProfileItemListComponent
                ],
                exports: [],
                imports: [
                    CoreModule,
                    CommonModule,
                    RepositoryModule,
                    RouterModule.forChild(deviceProfilesRoutes),
                    BsDropdownModule.forRoot(),
                    TooltipModule,
                    ReactiveFormsModule,
                    ButtonsModule,
                    PopoverModule,
                    SingleOperationDetailsModule
                ],
                entryComponents: [
                    AddDeviceProfileComponent,
                    SelectConfigurationModalComponent,
                    DeviceTabProfileComponent
                ],
                providers: [
                    {
                        provide: HOOK_NAVIGATOR_NODES,
                        useClass: DeviceProfileNavigationFactory,
                        multi: true
                    },
                    {
                        provide: HOOK_ROUTE,
                        useValue: ɵ0,
                        multi: true
                    },
                    DeviceProfileService,
                    DeviceProfileGuard
                ]
            },] }
];
export { ɵ0 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGV2aWNlLXByb2ZpbGUubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vZGV2aWNlLXByb2ZpbGUvZGV2aWNlLXByb2ZpbGUubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFTLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ3RELE9BQU8sRUFDTCxZQUFZLEVBQ1osVUFBVSxFQUNWLG9CQUFvQixFQUNwQixVQUFVLEVBQ1YsT0FBTyxFQUNQLFdBQVcsRUFDWixNQUFNLHFCQUFxQixDQUFDO0FBQzdCLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQzFELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUN0RCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDdEQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQ3RELE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQ3BFLE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBQzdFLE9BQU8sRUFBRSw4QkFBOEIsRUFBRSxNQUFNLHFDQUFxQyxDQUFDO0FBQ3JGLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQ2hFLE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBQzNFLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQzVELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBQ2xFLE9BQU8sRUFBRSxpQ0FBaUMsRUFBRSxNQUFNLHdDQUF3QyxDQUFDO0FBQzNGLE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLG1EQUFtRCxDQUFDO0FBQzlGLE9BQU8sRUFBRSwrQkFBK0IsRUFBRSxNQUFNLDBEQUEwRCxDQUFDO0FBQzNHLE9BQU8sRUFBRSw4QkFBOEIsRUFBRSxNQUFNLHlEQUF5RCxDQUFDO0FBQ3pHLE9BQU8sRUFBRSw0QkFBNEIsRUFBRSxNQUFNLHlEQUF5RCxDQUFDO0FBRXZHLE1BQU0sb0JBQW9CLEdBQVk7SUFDcEM7UUFDRSxJQUFJLEVBQUUscUJBQXFCO1FBQzNCLFNBQVMsRUFBRSxzQkFBc0I7S0FDbEM7SUFDRDtRQUNFLElBQUksRUFBRSxpQkFBaUI7UUFDdkIsU0FBUyxFQUFFLDBCQUEwQjtLQUN0QztDQUNGLENBQUM7QUFFRixNQUFNLHNCQUFzQixHQUFVO0lBQ3BDO1FBQ0UsT0FBTyxFQUFFLFdBQVcsQ0FBQyxNQUFNO1FBQzNCLElBQUksRUFBRSxnQkFBZ0I7UUFDdEIsU0FBUyxFQUFFLHlCQUF5QjtRQUNwQyxLQUFLLEVBQUUsT0FBTyxDQUFDLGdCQUFnQixDQUFDO1FBQ2hDLElBQUksRUFBRSxvQkFBb0I7UUFDMUIsV0FBVyxFQUFFLENBQUMsa0JBQWtCLENBQUM7S0FDbEM7Q0FDRixDQUFDO1dBc0NjLHNCQUFzQjtBQU90QyxNQUFNLE9BQU8sbUJBQW1COzs7WUEzQy9CLFFBQVEsU0FBQztnQkFDUixZQUFZLEVBQUU7b0JBQ1osc0JBQXNCO29CQUN0QiwwQkFBMEI7b0JBQzFCLHlCQUF5QjtvQkFDekIsaUNBQWlDO29CQUNqQyx5QkFBeUI7b0JBQ3pCLCtCQUErQjtvQkFDL0IsOEJBQThCO2lCQUMvQjtnQkFDRCxPQUFPLEVBQUUsRUFBRTtnQkFDWCxPQUFPLEVBQUU7b0JBQ1AsVUFBVTtvQkFDVixZQUFZO29CQUNaLGdCQUFnQjtvQkFDaEIsWUFBWSxDQUFDLFFBQVEsQ0FBQyxvQkFBb0IsQ0FBQztvQkFDM0MsZ0JBQWdCLENBQUMsT0FBTyxFQUFFO29CQUMxQixhQUFhO29CQUNiLG1CQUFtQjtvQkFDbkIsYUFBYTtvQkFDYixhQUFhO29CQUNiLDRCQUE0QjtpQkFDN0I7Z0JBQ0QsZUFBZSxFQUFFO29CQUNmLHlCQUF5QjtvQkFDekIsaUNBQWlDO29CQUNqQyx5QkFBeUI7aUJBQzFCO2dCQUNELFNBQVMsRUFBRTtvQkFDVDt3QkFDRSxPQUFPLEVBQUUsb0JBQW9CO3dCQUM3QixRQUFRLEVBQUUsOEJBQThCO3dCQUN4QyxLQUFLLEVBQUUsSUFBSTtxQkFDWjtvQkFDRDt3QkFDRSxPQUFPLEVBQUUsVUFBVTt3QkFDbkIsUUFBUSxJQUF3Qjt3QkFDaEMsS0FBSyxFQUFFLElBQUk7cUJBQ1o7b0JBQ0Qsb0JBQW9CO29CQUNwQixrQkFBa0I7aUJBQ25CO2FBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUm91dGUsIFJvdXRlck1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XG5pbXBvcnQge1xuICBDb21tb25Nb2R1bGUsXG4gIENvcmVNb2R1bGUsXG4gIEhPT0tfTkFWSUdBVE9SX05PREVTLFxuICBIT09LX1JPVVRFLFxuICBnZXR0ZXh0LFxuICBWaWV3Q29udGV4dFxufSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzJztcbmltcG9ydCB7IEJzRHJvcGRvd25Nb2R1bGUgfSBmcm9tICduZ3gtYm9vdHN0cmFwL2Ryb3Bkb3duJztcbmltcG9ydCB7IFBvcG92ZXJNb2R1bGUgfSBmcm9tICduZ3gtYm9vdHN0cmFwL3BvcG92ZXInO1xuaW1wb3J0IHsgVG9vbHRpcE1vZHVsZSB9IGZyb20gJ25neC1ib290c3RyYXAvdG9vbHRpcCc7XG5pbXBvcnQgeyBCdXR0b25zTW9kdWxlIH0gZnJvbSAnbmd4LWJvb3RzdHJhcC9idXR0b25zJztcbmltcG9ydCB7IFJlYWN0aXZlRm9ybXNNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBEZXZpY2VQcm9maWxlQ29tcG9uZW50IH0gZnJvbSAnLi9kZXZpY2UtcHJvZmlsZS5jb21wb25lbnQnO1xuaW1wb3J0IHsgRGV2aWNlUHJvZmlsZUxpc3RDb21wb25lbnQgfSBmcm9tICcuL2RldmljZS1wcm9maWxlLWxpc3QuY29tcG9uZW50JztcbmltcG9ydCB7IERldmljZVByb2ZpbGVOYXZpZ2F0aW9uRmFjdG9yeSB9IGZyb20gJy4vZGV2aWNlLXByb2ZpbGUtbmF2aWdhdGlvbi5mYWN0b3J5JztcbmltcG9ydCB7IERldmljZVByb2ZpbGVTZXJ2aWNlIH0gZnJvbSAnLi9kZXZpY2UtcHJvZmlsZS5zZXJ2aWNlJztcbmltcG9ydCB7IEFkZERldmljZVByb2ZpbGVDb21wb25lbnQgfSBmcm9tICcuL2FkZC1kZXZpY2UtcHJvZmlsZS5jb21wb25lbnQnO1xuaW1wb3J0IHsgRGV2aWNlUHJvZmlsZUd1YXJkIH0gZnJvbSAnLi9kZXZpY2UtcHJvZmlsZS5ndWFyZCc7XG5pbXBvcnQgeyBSZXBvc2l0b3J5TW9kdWxlIH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cy9yZXBvc2l0b3J5JztcbmltcG9ydCB7IFNlbGVjdENvbmZpZ3VyYXRpb25Nb2RhbENvbXBvbmVudCB9IGZyb20gJy4vc2VsZWN0LWNvbmZpZ3VyYXRpb24tbW9kYWwuY29tcG9uZW50JztcbmltcG9ydCB7IERldmljZVRhYlByb2ZpbGVDb21wb25lbnQgfSBmcm9tICcuL2RldmljZS10YWItcHJvZmlsZS9kZXZpY2UtdGFiLXByb2ZpbGUuY29tcG9uZW50JztcbmltcG9ydCB7IERldmljZVRhYlByb2ZpbGVEZXRhaWxDb21wb25lbnQgfSBmcm9tICcuL2RldmljZS10YWItcHJvZmlsZS9kZXZpY2UtdGFiLXByb2ZpbGUtZGV0YWlsLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBEZXZpY2VQcm9maWxlSXRlbUxpc3RDb21wb25lbnQgfSBmcm9tICcuL2RldmljZS10YWItcHJvZmlsZS9kZXZpY2UtcHJvZmlsZS1pdGVtLWxpc3QuY29tcG9uZW50JztcbmltcG9ydCB7IFNpbmdsZU9wZXJhdGlvbkRldGFpbHNNb2R1bGUgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzL29wZXJhdGlvbnMvc2luZ2xlLW9wZXJhdGlvbi1kZXRhaWxzJztcblxuY29uc3QgZGV2aWNlUHJvZmlsZXNSb3V0ZXM6IFJvdXRlW10gPSBbXG4gIHtcbiAgICBwYXRoOiAnZGV2aWNlLXByb2ZpbGVzLzppZCcsXG4gICAgY29tcG9uZW50OiBEZXZpY2VQcm9maWxlQ29tcG9uZW50XG4gIH0sXG4gIHtcbiAgICBwYXRoOiAnZGV2aWNlLXByb2ZpbGVzJyxcbiAgICBjb21wb25lbnQ6IERldmljZVByb2ZpbGVMaXN0Q29tcG9uZW50XG4gIH1cbl07XG5cbmNvbnN0IGRldmljZVRhYlByb2ZpbGVSb3V0ZXM6IGFueVtdID0gW1xuICB7XG4gICAgY29udGV4dDogVmlld0NvbnRleHQuRGV2aWNlLFxuICAgIHBhdGg6ICdkZXZpY2UtcHJvZmlsZScsXG4gICAgY29tcG9uZW50OiBEZXZpY2VUYWJQcm9maWxlQ29tcG9uZW50LFxuICAgIGxhYmVsOiBnZXR0ZXh0KCdEZXZpY2UgcHJvZmlsZScpLFxuICAgIGljb246ICdjOHktZGV2aWNlLXByb2ZpbGUnLFxuICAgIGNhbkFjdGl2YXRlOiBbRGV2aWNlUHJvZmlsZUd1YXJkXVxuICB9XG5dO1xuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtcbiAgICBEZXZpY2VQcm9maWxlQ29tcG9uZW50LFxuICAgIERldmljZVByb2ZpbGVMaXN0Q29tcG9uZW50LFxuICAgIEFkZERldmljZVByb2ZpbGVDb21wb25lbnQsXG4gICAgU2VsZWN0Q29uZmlndXJhdGlvbk1vZGFsQ29tcG9uZW50LFxuICAgIERldmljZVRhYlByb2ZpbGVDb21wb25lbnQsXG4gICAgRGV2aWNlVGFiUHJvZmlsZURldGFpbENvbXBvbmVudCxcbiAgICBEZXZpY2VQcm9maWxlSXRlbUxpc3RDb21wb25lbnRcbiAgXSxcbiAgZXhwb3J0czogW10sXG4gIGltcG9ydHM6IFtcbiAgICBDb3JlTW9kdWxlLFxuICAgIENvbW1vbk1vZHVsZSxcbiAgICBSZXBvc2l0b3J5TW9kdWxlLFxuICAgIFJvdXRlck1vZHVsZS5mb3JDaGlsZChkZXZpY2VQcm9maWxlc1JvdXRlcyksXG4gICAgQnNEcm9wZG93bk1vZHVsZS5mb3JSb290KCksXG4gICAgVG9vbHRpcE1vZHVsZSxcbiAgICBSZWFjdGl2ZUZvcm1zTW9kdWxlLFxuICAgIEJ1dHRvbnNNb2R1bGUsXG4gICAgUG9wb3Zlck1vZHVsZSxcbiAgICBTaW5nbGVPcGVyYXRpb25EZXRhaWxzTW9kdWxlXG4gIF0sXG4gIGVudHJ5Q29tcG9uZW50czogW1xuICAgIEFkZERldmljZVByb2ZpbGVDb21wb25lbnQsXG4gICAgU2VsZWN0Q29uZmlndXJhdGlvbk1vZGFsQ29tcG9uZW50LFxuICAgIERldmljZVRhYlByb2ZpbGVDb21wb25lbnRcbiAgXSxcbiAgcHJvdmlkZXJzOiBbXG4gICAge1xuICAgICAgcHJvdmlkZTogSE9PS19OQVZJR0FUT1JfTk9ERVMsXG4gICAgICB1c2VDbGFzczogRGV2aWNlUHJvZmlsZU5hdmlnYXRpb25GYWN0b3J5LFxuICAgICAgbXVsdGk6IHRydWVcbiAgICB9LFxuICAgIHtcbiAgICAgIHByb3ZpZGU6IEhPT0tfUk9VVEUsXG4gICAgICB1c2VWYWx1ZTogZGV2aWNlVGFiUHJvZmlsZVJvdXRlcyxcbiAgICAgIG11bHRpOiB0cnVlXG4gICAgfSxcbiAgICBEZXZpY2VQcm9maWxlU2VydmljZSxcbiAgICBEZXZpY2VQcm9maWxlR3VhcmRcbiAgXVxufSlcbmV4cG9ydCBjbGFzcyBEZXZpY2VQcm9maWxlTW9kdWxlIHt9XG4iXX0=