import { Injectable } from '@angular/core';
import { Router } from '@angular/router';
import { gettext, toObservable } from '@c8y/ngx-components';
import { map } from 'rxjs/operators';
import { ImpactGuard } from './impact.guard';
export class ImpactTabFactory {
    constructor(router, guard) {
        this.router = router;
        this.guard = guard;
        this.config = {
            label: gettext('IMPACT provider settings'),
            path: '/connectivitySettings/impact_provider_settings',
            icon: 'plug'
        };
    }
    get() {
        return this.router.url.match(/connectivitySettings/g) ? this.tab() : [];
    }
    tab() {
        return toObservable(this.guard.canActivate(this.router.routerState.snapshot.root, this.router.routerState.snapshot)).pipe(map(canActivate => (canActivate ? this.config : null)));
    }
}
ImpactTabFactory.decorators = [
    { type: Injectable }
];
ImpactTabFactory.ctorParameters = () => [
    { type: Router },
    { type: ImpactGuard }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW1wYWN0LXRhYi5mYWN0b3J5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vY29ubmVjdGl2aXR5L2ltcGFjdC9pbXBhY3QtdGFiLmZhY3RvcnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDekMsT0FBTyxFQUFFLE9BQU8sRUFBbUIsWUFBWSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFFN0UsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ3JDLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUc3QyxNQUFNLE9BQU8sZ0JBQWdCO0lBTzNCLFlBQW9CLE1BQWMsRUFBVSxLQUFrQjtRQUExQyxXQUFNLEdBQU4sTUFBTSxDQUFRO1FBQVUsVUFBSyxHQUFMLEtBQUssQ0FBYTtRQU50RCxXQUFNLEdBQVE7WUFDcEIsS0FBSyxFQUFFLE9BQU8sQ0FBQywwQkFBMEIsQ0FBQztZQUMxQyxJQUFJLEVBQUUsZ0RBQWdEO1lBQ3RELElBQUksRUFBRSxNQUFNO1NBQ2IsQ0FBQztJQUUrRCxDQUFDO0lBRWxFLEdBQUc7UUFDRCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztJQUMxRSxDQUFDO0lBRUQsR0FBRztRQUNELE9BQU8sWUFBWSxDQUNqQixJQUFJLENBQUMsS0FBSyxDQUFDLFdBQVcsQ0FDcEIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxXQUFXLENBQUMsUUFBUSxDQUFDLElBQUksRUFDckMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxXQUFXLENBQUMsUUFBUSxDQUNqQyxDQUNGLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsRUFBRSxDQUFDLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDakUsQ0FBQzs7O1lBckJGLFVBQVU7OztZQU5GLE1BQU07WUFJTixXQUFXIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUm91dGVyIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcbmltcG9ydCB7IGdldHRleHQsIFRhYiwgVGFiRmFjdG9yeSwgdG9PYnNlcnZhYmxlIH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cyc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBtYXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5pbXBvcnQgeyBJbXBhY3RHdWFyZCB9IGZyb20gJy4vaW1wYWN0Lmd1YXJkJztcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIEltcGFjdFRhYkZhY3RvcnkgaW1wbGVtZW50cyBUYWJGYWN0b3J5IHtcbiAgcHJpdmF0ZSBjb25maWc6IFRhYiA9IHtcbiAgICBsYWJlbDogZ2V0dGV4dCgnSU1QQUNUIHByb3ZpZGVyIHNldHRpbmdzJyksXG4gICAgcGF0aDogJy9jb25uZWN0aXZpdHlTZXR0aW5ncy9pbXBhY3RfcHJvdmlkZXJfc2V0dGluZ3MnLFxuICAgIGljb246ICdwbHVnJ1xuICB9O1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgcm91dGVyOiBSb3V0ZXIsIHByaXZhdGUgZ3VhcmQ6IEltcGFjdEd1YXJkKSB7fVxuXG4gIGdldCgpIHtcbiAgICByZXR1cm4gdGhpcy5yb3V0ZXIudXJsLm1hdGNoKC9jb25uZWN0aXZpdHlTZXR0aW5ncy9nKSA/IHRoaXMudGFiKCkgOiBbXTtcbiAgfVxuXG4gIHRhYigpOiBUYWIgfCBPYnNlcnZhYmxlPFRhYj4ge1xuICAgIHJldHVybiB0b09ic2VydmFibGUoXG4gICAgICB0aGlzLmd1YXJkLmNhbkFjdGl2YXRlKFxuICAgICAgICB0aGlzLnJvdXRlci5yb3V0ZXJTdGF0ZS5zbmFwc2hvdC5yb290LFxuICAgICAgICB0aGlzLnJvdXRlci5yb3V0ZXJTdGF0ZS5zbmFwc2hvdFxuICAgICAgKVxuICAgICkucGlwZShtYXAoY2FuQWN0aXZhdGUgPT4gKGNhbkFjdGl2YXRlID8gdGhpcy5jb25maWcgOiBudWxsKSkpO1xuICB9XG59XG4iXX0=