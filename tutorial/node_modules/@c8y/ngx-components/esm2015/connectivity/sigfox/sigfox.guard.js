import { Injectable } from '@angular/core';
import { ApplicationService } from '@c8y/client';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@c8y/client';
export class SigfoxGuard {
    constructor(applicationService) {
        this.applicationService = applicationService;
    }
    canActivate(route, state) {
        if (this.showSigfoxProvider === undefined) {
            this.showSigfoxProvider = this.applicationService
                .isAvailable(SigfoxGuard.applicationName)
                .then(result => result && result.data);
        }
        return this.showSigfoxProvider;
    }
}
SigfoxGuard.ɵfac = function SigfoxGuard_Factory(t) { return new (t || SigfoxGuard)(ɵngcc0.ɵɵinject(ɵngcc1.ApplicationService)); };
SigfoxGuard.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: SigfoxGuard, factory: SigfoxGuard.ɵfac });
SigfoxGuard.applicationName = 'sigfox-agent';
SigfoxGuard.ctorParameters = () => [
    { type: ApplicationService }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SigfoxGuard, [{
        type: Injectable
    }], function () { return [{ type: ɵngcc1.ApplicationService }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2lnZm94Lmd1YXJkLmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9jb25uZWN0aXZpdHkvc2lnZm94L3NpZ2ZveC5ndWFyZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTNDLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLGFBQWEsQ0FBQzs7O0FBR2pELE1BQU0sT0FBTyxXQUFXO0FBQUcsSUFJekIsWUFBb0Isa0JBQXNDO0FBQUksUUFBMUMsdUJBQWtCLEdBQWxCLGtCQUFrQixDQUFvQjtBQUFDLElBQUUsQ0FBQztBQUNoRSxJQUNFLFdBQVcsQ0FBQyxLQUE2QixFQUFFLEtBQTBCO0FBQUksUUFDdkUsSUFBSSxJQUFJLENBQUMsa0JBQWtCLEtBQUssU0FBUyxFQUFFO0FBQy9DLFlBQU0sSUFBSSxDQUFDLGtCQUFrQixHQUFHLElBQUksQ0FBQyxrQkFBa0I7QUFDdkQsaUJBQVMsV0FBVyxDQUFDLFdBQVcsQ0FBQyxlQUFlLENBQUM7QUFDakQsaUJBQVMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsTUFBTSxJQUFJLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUMvQyxTQUFLO0FBQ0wsUUFDSSxPQUFPLElBQUksQ0FBQyxrQkFBa0IsQ0FBQztBQUNuQyxJQUFFLENBQUM7QUFDSDs7K0dBQUM7QUFkeUIsMkJBQWUsR0FBRyxjQUFjLENBQUMsQUFEekQ7QUFBQztFQURGLFVBQVUsWkFDNkIsWUFIL0Isa0JBQWtCO0FBQUc7OzttRkFBRTtBQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQWN0aXZhdGVkUm91dGVTbmFwc2hvdCwgQ2FuQWN0aXZhdGUsIFJvdXRlclN0YXRlU25hcHNob3QgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xuaW1wb3J0IHsgQXBwbGljYXRpb25TZXJ2aWNlIH0gZnJvbSAnQGM4eS9jbGllbnQnO1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgU2lnZm94R3VhcmQgaW1wbGVtZW50cyBDYW5BY3RpdmF0ZSB7XG4gIHByaXZhdGUgc3RhdGljIHJlYWRvbmx5IGFwcGxpY2F0aW9uTmFtZSA9ICdzaWdmb3gtYWdlbnQnO1xuICBwcml2YXRlIHNob3dTaWdmb3hQcm92aWRlcjogUHJvbWlzZTxib29sZWFuPjtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGFwcGxpY2F0aW9uU2VydmljZTogQXBwbGljYXRpb25TZXJ2aWNlKSB7fVxuXG4gIGNhbkFjdGl2YXRlKHJvdXRlOiBBY3RpdmF0ZWRSb3V0ZVNuYXBzaG90LCBzdGF0ZTogUm91dGVyU3RhdGVTbmFwc2hvdCk6IFByb21pc2U8Ym9vbGVhbj4ge1xuICAgIGlmICh0aGlzLnNob3dTaWdmb3hQcm92aWRlciA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICB0aGlzLnNob3dTaWdmb3hQcm92aWRlciA9IHRoaXMuYXBwbGljYXRpb25TZXJ2aWNlXG4gICAgICAgIC5pc0F2YWlsYWJsZShTaWdmb3hHdWFyZC5hcHBsaWNhdGlvbk5hbWUpXG4gICAgICAgIC50aGVuKHJlc3VsdCA9PiByZXN1bHQgJiYgcmVzdWx0LmRhdGEpO1xuICAgIH1cblxuICAgIHJldHVybiB0aGlzLnNob3dTaWdmb3hQcm92aWRlcjtcbiAgfVxufVxuIl19