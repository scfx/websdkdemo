{"version":3,"file":"configuration-list.component.d.ts","sources":["configuration-list.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnInit, Pipe } from '@angular/core';\nimport { IManagedObject, InventoryBinaryService, InventoryService, IResultList } from '@c8y/client';\nimport { AlertService, FilterInputComponent, ModalService } from '@c8y/ngx-components';\nimport { TranslateService } from '@ngx-translate/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { Observable } from 'rxjs';\nimport { RepositoryService } from '../repository.service';\nexport declare class ConfigurationListComponent implements OnInit {\n    private alert;\n    private repositoryService;\n    private bsModalService;\n    private modalService;\n    private translateService;\n    private inventoryBinaryService;\n    private inventoryService;\n    filter: FilterInputComponent;\n    configurations$: Observable<IResultList<IManagedObject>>;\n    filterPipe: Pipe;\n    filterTerm: string;\n    reloading: boolean;\n    data: any;\n    private readonly DELETED_SUCCESS_MSG;\n    constructor(alert: AlertService, repositoryService: RepositoryService, bsModalService: BsModalService, modalService: ModalService, translateService: TranslateService, inventoryBinaryService: InventoryBinaryService, inventoryService: InventoryService);\n    ngOnInit(): void;\n    loadConfigurations(): Promise<void>;\n    add(): Promise<void>;\n    edit(configuration: IManagedObject): Promise<void>;\n    isBinaryFile(configuration: IManagedObject): boolean;\n    getBinaryName(configuration: IManagedObject): Observable<string>;\n    download(configuration: IManagedObject): Promise<void>;\n    delete(configuration: IManagedObject): Promise<void>;\n    setPipe(filterTerm: string): void;\n    shouldShowEmptyState(): boolean;\n    reset(): void;\n    private filterContainString;\n}\n"]}