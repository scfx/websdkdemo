import { ActivatedRoute } from '@angular/router';
import { BsModalService } from 'ngx-bootstrap/modal';
import { BehaviorSubject, Observable } from 'rxjs';
import { IManagedObject, IOperation, InventoryService } from '@c8y/client';
import { RepositoryService } from '../repository.service';
import { DeviceFirmware } from '../repository.model';
import * as ɵngcc0 from '@angular/core';
export declare class FirmwareDeviceTabComponent {
    private route;
    private repository;
    private inventory;
    private bsModal;
    isEmpty: any;
    reloading: boolean;
    device$: BehaviorSubject<IManagedObject>;
    deviceFirmwareFragment$: Observable<DeviceFirmware>;
    firmwareBinary$: Observable<IManagedObject>;
    repositoryEntry$: Observable<IManagedObject>;
    patches$: Observable<IManagedObject[]>;
    supportsFirmwareOperations$: Observable<boolean>;
    changesOperation$: BehaviorSubject<IOperation>;
    changesInProgress$: Observable<boolean>;
    constructor(route: ActivatedRoute, repository: RepositoryService, inventory: InventoryService, bsModal: BsModalService);
    ngOnInit(): Promise<void>;
    installFirmware(): void;
    getRepositoryEntriesWithVersions$(searchTerm$: BehaviorSubject<string>): Observable<IManagedObject[]>;
    getAndAssignRepositoryBinaries(mos: IManagedObject[]): IManagedObject[];
    addPatch(): void;
    getRepositoryEntryWithPatches$(): Observable<{
        versions: IManagedObject[];
        creationTime: string;
        id: string;
        lastUpdated: string;
        owner: string;
        self: string;
        additionParents: import("@c8y/client").IManagedObjectReferences;
        assetParents: import("@c8y/client").IManagedObjectReferences;
        childAdditions: import("@c8y/client").IManagedObjectReferences;
        childAssets: import("@c8y/client").IManagedObjectReferences;
        childDevices: import("@c8y/client").IManagedObjectReferences;
        deviceParents: import("@c8y/client").IManagedObjectReferences;
    }[]>;
    loadDevice(): Promise<void>;
    private handleOperation;
    private loadOperation;
    private trackOperation;
    private isInProgress;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<FirmwareDeviceTabComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<FirmwareDeviceTabComponent, "c8y-firmware-device-tab", never, {}, {}, never, never>;
}

//# sourceMappingURL=firmware-device-tab.component.d.ts.map