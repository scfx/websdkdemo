{"version":3,"file":"device-software-list.component.d.ts","sources":["device-software-list.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { AfterContentInit, EventEmitter, OnInit } from '@angular/core';\nimport { IManagedObject, IResultList } from '@c8y/client';\nimport { Observable } from 'rxjs';\nimport { DeviceSoftware, DeviceSoftwareChange, SoftwareFilterCriteria } from '../repository.model';\nimport { AdvancedSoftwareService } from './advanced-software.service';\nexport declare class DeviceSoftwareListComponent implements OnInit, AfterContentInit {\n    private advancedSoftwareService;\n    set softwareList(softwareList: DeviceSoftware[]);\n    device: IManagedObject;\n    deviceSoftwareChanges: DeviceSoftwareChange[];\n    filterCriteria$: Observable<SoftwareFilterCriteria>;\n    update: EventEmitter<DeviceSoftware>;\n    remove: EventEmitter<DeviceSoftware>;\n    onListEmpty: EventEmitter<boolean>;\n    softwareItems$: Observable<IResultList<DeviceSoftware>>;\n    showUpdate: boolean;\n    showRemove: boolean;\n    emptyList: boolean;\n    noSearchResults: boolean;\n    supportsSoftwareOperations: boolean;\n    private readonly operationTypes;\n    private legacySoftwareList$;\n    constructor(advancedSoftwareService: AdvancedSoftwareService);\n    ngOnInit(): void;\n    ngAfterContentInit(): void;\n    isSoftwareGoingToBeChanged(software: DeviceSoftware): boolean;\n    private getAdvancedSoftwareList;\n    private getLegacySoftwareList;\n    private notifyListEmpty;\n}\n"]}