{"version":3,"file":"c8y-ngx-components-trusted-certificates.js","sources":["../../trusted-certificates/add-trusted-certificate.component.ts","../../trusted-certificates/trusted-certificates.component.ts","../../trusted-certificates/trusted-certificates-navigation.factory.ts","../../trusted-certificates/trusted-certificates.module.ts","../../trusted-certificates/c8y-ngx-components-trusted-certificates.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { DroppedFile } from '@c8y/ngx-components';\nimport { ITrustedCertificate, TrustedCertificateService } from '@c8y/client';\nimport { AlertService, gettext } from '@c8y/ngx-components';\n\n@Component({\n  selector: 'c8y-add-trusted-certificate',\n  templateUrl: './add-trusted-certificate.component.html'\n})\nexport class AddTrustedCertificateComponent {\n  maxAllowedFiles = 1;\n  AUTO_REGISTRATION_POPOVER = gettext('All devices with credentials signed by this certificate will be able to communicate with the platform without a prior registration.');\n  trustedCertificate: Partial<ITrustedCertificate> = {\n    status: 'DISABLED'\n  };\n  fileIsUploaded = false;\n\n  result: Promise<any> = new Promise((resolve, reject) => {\n    this._save = resolve;\n    this._cancel = reject;\n  });\n  private _save;\n  private _cancel;\n\n  constructor(\n    private modal: BsModalRef,\n    private trustedCertificateService: TrustedCertificateService,\n    private alertService: AlertService\n  ) {}\n\n  uploadFile(dropped: DroppedFile[]) {\n    this.fileIsUploaded = false;\n    if (dropped) {\n      const reader = new FileReader();\n      reader.onload = () => {\n        this.fileIsUploaded = true;\n        this.trustedCertificate.certInPemFormat = reader.result as string;\n      };\n      reader.readAsText(dropped[0].file);\n    }\n  }\n\n  async save() {\n    try {\n      await this.trustedCertificateService.create(this.trustedCertificate);\n      this.alertService.success(gettext('Certificate saved.'));\n      this._save();\n    } catch (ex) {\n      this.alertService.addServerFailure(ex);\n    }\n  }\n\n  close() {\n    this._cancel();\n    this.modal.hide();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AlertService, gettext, ModalService, Status } from '@c8y/ngx-components';\nimport { AddTrustedCertificateComponent } from './add-trusted-certificate.component';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { ITrustedCertificate, TrustedCertificateService, IResultList } from '@c8y/client';\nimport { TranslateService } from '@ngx-translate/core';\nimport { tap, switchMap } from 'rxjs/operators';\nimport { pipe, BehaviorSubject, Observable, of } from 'rxjs';\n\n@Component({\n  selector: 'c8y-trusted-certificates',\n  templateUrl: './trusted-certificates.component.html',\n})\nexport class TrustedCertificatesComponent implements OnInit {\n  reloading: BehaviorSubject<boolean> = new BehaviorSubject(false);\n  reload: BehaviorSubject<void> = new BehaviorSubject(null);\n  trustedCertificates: Observable<IResultList<ITrustedCertificate>> = this.reload.pipe(\n    tap(() => this.reloading.next(true)),\n    switchMap(() => this.getTrustedCertificates()),\n    tap(() => this.reloading.next(false))\n  );\n  sortByExpirationDateAsc = pipe(\n    tap((results: ITrustedCertificate[]) => {\n      return results.sort((n1, n2) => n1.notAfter.localeCompare(n2.notAfter));\n    })\n  );\n\n  constructor(\n    private bsModal: BsModalService,\n    private alertService: AlertService,\n    private trustedCertificateService: TrustedCertificateService,\n    private modalService: ModalService,\n    private translateService: TranslateService\n  ) {}\n\n  async ngOnInit() {\n    await this.loadTrustedCertificates();\n  }\n\n  async loadTrustedCertificates() {\n    this.reload.next();\n  }\n\n  getTrustedCertificates() {\n    const filter: object = {\n      pageSize: 1000,\n      withTotalPages: true,\n    };\n    return this.trustedCertificateService.list(filter);\n  }\n\n  async addTrustedCertificate() {\n    const modal = this.bsModal.show(AddTrustedCertificateComponent, {\n      class: 'modal-sm',\n      ignoreBackdropClick: true,\n    }).content as AddTrustedCertificateComponent;\n    try {\n      await modal.result;\n      modal.close();\n      this.reload.next();\n    } catch (ex) {\n      // do nothing\n    }\n  }\n\n  async deleteTrustedCertificate(certificate, index) {\n    const title = gettext('Delete trusted certificate');\n    const confirmationText = gettext(\n      'You are about to delete a trusted certificate \"{{ certificateName }}\".'\n    );\n    const finalQuestion = gettext('Do you want to proceed?');\n    const certificateName = certificate.name;\n    const body = [\n      this.translateService.instant(confirmationText, {\n        certificateName,\n      }),\n      this.translateService.instant(finalQuestion),\n    ].join(' ');\n\n    try {\n      await this.modalService.confirm(title, body, Status.DANGER, { ok: gettext('Delete') });\n      await this.trustedCertificateService.delete(certificate.fingerprint);\n      this.alertService.success(gettext('Certificate deleted.'));\n      this.reload.next();\n    } catch (ex) {\n      this.alertService.addServerFailure(ex);\n    }\n  }\n\n  async updateCertificate(\n    trustedCertificate: ITrustedCertificate,\n    updatingPart: Partial<ITrustedCertificate>\n  ) {\n    try {\n      await this.trustedCertificateService.update({\n        fingerprint: trustedCertificate.fingerprint,\n        ...updatingPart,\n      });\n      this.alertService.success(gettext('Certificate saved.'));\n    } catch (ex) {\n      this.alertService.addServerFailure(ex);\n    }\n  }\n\n  highlightDependingOnExpirationStatus(item: ITrustedCertificate) {\n    const warningOffset = 24 * 60 * 60 * 1000 * 90; // 90 days\n    const todayTimestamp = new Date().getTime();\n    const warningTimestamp = new Date().getTime() + warningOffset;\n    const notAfterTimestamp = new Date(item.notAfter).getTime();\n    const expired = notAfterTimestamp < todayTimestamp;\n    const expiresInLessThan90Days = notAfterTimestamp < warningTimestamp;\n    if (expired) {\n      return 'text-danger';\n    }\n    if (expiresInLessThan90Days) {\n      return 'text-warning';\n    }\n    return '';\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { gettext, NavigatorNode, NavigatorNodeFactory } from '@c8y/ngx-components';\n\n@Injectable()\nexport class TrustedCertificatesNavigationFactory implements NavigatorNodeFactory {\n  navs: NavigatorNode[] = [];\n\n  async get() {\n    if (this.navs.length === 0) {\n      this.navs.push(\n        new NavigatorNode({\n          label: gettext('Trusted certificates'),\n          icon: 'certificate',\n          path: '/trusted-certificates',\n          parent: gettext('Management'),\n          priority: 100\n        })\n      );\n    }\n    return this.navs;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Route, RouterModule } from '@angular/router';\nimport { CommonModule, CoreModule, HOOK_NAVIGATOR_NODES } from '@c8y/ngx-components';\nimport { TrustedCertificatesComponent } from './trusted-certificates.component';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { PopoverModule } from 'ngx-bootstrap/popover';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { AddTrustedCertificateComponent } from './add-trusted-certificate.component';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { TrustedCertificatesNavigationFactory } from './trusted-certificates-navigation.factory';\n\nconst trustedCertificatesRoutes: Route[] = [\n  {\n    path: 'trusted-certificates',\n    component: TrustedCertificatesComponent\n  }\n];\n\n@NgModule({\n  declarations: [TrustedCertificatesComponent, AddTrustedCertificateComponent],\n  exports: [],\n  imports: [\n    CoreModule,\n    CommonModule,\n    RouterModule.forRoot(trustedCertificatesRoutes, { useHash: true }),\n    BsDropdownModule.forRoot(),\n    TooltipModule,\n    ReactiveFormsModule,\n    ButtonsModule,\n    PopoverModule\n  ],\n  entryComponents: [TrustedCertificatesComponent, AddTrustedCertificateComponent],\n  providers: [\n    {\n      provide: HOOK_NAVIGATOR_NODES,\n      useClass: TrustedCertificatesNavigationFactory,\n      multi: true\n    }\n  ]\n})\nexport class TrustedCertificatesModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}