{"version":3,"file":"c8y-ngx-components-operations-stepper-bulk-type-device-profile.js","sources":["../../operations/stepper-bulk-type-device-profile/confirm-device-profile-selection-step.component.ts","../../operations/stepper-bulk-type-device-profile/select-device-profile-step.component.ts","../../operations/stepper-bulk-type-device-profile/stepper-bulk-type-device-profile.component.ts","../../operations/stepper-bulk-type-device-profile/stepper-bulk-type-device-profile.module.ts","../../operations/stepper-bulk-type-device-profile/c8y-ngx-components-operations-stepper-bulk-type-device-profile.ts"],"sourcesContent":["import { Component, Input } from '@angular/core';\nimport { get } from 'lodash-es';\nimport { IManagedObject } from '@c8y/client';\nimport { gettext } from '@c8y/ngx-components';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'c8y-confirm-device-profile-selection-step',\n  templateUrl: 'confirm-device-profile-selection-step.component.html'\n})\nexport class ConfirmDeviceProfileSelectionStepComponent {\n  @Input() selectedDeviceProfile: IManagedObject;\n  readonly DEVICE_TYPE_NOT_DEFINED = gettext('Device type not defined');\n\n  constructor(\n    private translate: TranslateService\n  ) {}\n\n  get softwares() {\n    return get(this.selectedDeviceProfile, ['c8y_DeviceProfile', 'software'], []);\n  }\n\n  get configurations() {\n    return get(this.selectedDeviceProfile, ['c8y_DeviceProfile', 'configuration'], []);\n  }\n\n  getDeviceTypeTitle(deviceProfile: IManagedObject): string {\n    return get(\n      deviceProfile,\n      'c8y_Filter.type',\n      this.translate.instant(this.DEVICE_TYPE_NOT_DEFINED));\n\n  }\n}\n","import { Component, Output, EventEmitter } from '@angular/core';\nimport { Observable, BehaviorSubject, combineLatest, Subscription, from } from 'rxjs';\nimport { switchMap, shareReplay, debounceTime, distinctUntilChanged, tap } from 'rxjs/operators';\nimport { IResultList, IManagedObject } from '@c8y/client';\nimport { property, isEqual, uniqWith, get } from 'lodash-es';\nimport { gettext } from '@c8y/ngx-components';\nimport { TranslateService } from '@ngx-translate/core';\nimport { DeviceProfileService } from '@c8y/ngx-components/device-profile';\n\n@Component({\n  selector: 'c8y-select-device-profile-step',\n  templateUrl: 'select-device-profile-step.component.html'\n})\nexport class SelectDeviceProfileStepComponent {\n  @Output() deviceProfile: EventEmitter<IManagedObject> = new EventEmitter<IManagedObject>();\n  textFilter$: BehaviorSubject<string> = new BehaviorSubject('');\n  deviceType$: BehaviorSubject<string> = new BehaviorSubject('');\n  readonly DEVICE_TYPE_NOT_DEFINED = gettext('Device type not defined');\n  deviceTypes = [];\n  selectedDeviceType = { name: '' };\n  deviceProfile$: Observable<IResultList<IManagedObject>> = combineLatest(\n    this.textFilter$,\n    this.deviceType$\n  ).pipe(\n    switchMap(([name, deviceType]) => this.getDeviceProfiles(name, deviceType)),\n    shareReplay(1)\n  );\n  private deviceTypeSubscription: Subscription;\n\n  constructor(\n    private deviceProfileService: DeviceProfileService,\n    private translate: TranslateService\n  ) {\n    this.loadDeviceTypes();\n  }\n\n  loadDeviceTypes() {\n    this.deviceTypeSubscription = this.deviceType$\n      .pipe(\n        debounceTime(300),\n        distinctUntilChanged(),\n        switchMap(searchStr => {\n          const query = { 'c8y_Filter.type': `*${searchStr}*` };\n          return from(this.deviceProfileService.getDeviceProfiles(query));\n        })\n      )\n      .subscribe( ({ data }) => {\n        this.deviceTypes = uniqWith(\n          data.map(val => ({ name: val.c8y_Filter.type })).filter(val => val.name),\n          isEqual\n        );\n      });\n  }\n\n  ngOnDestroy() {\n    this.deviceTypeSubscription.unsubscribe();\n  }\n\n  selectDeviceProfile(deviceProfile: IManagedObject) {\n    this.deviceProfile.emit(deviceProfile);\n  }\n\n  getDeviceTypeTitle(deviceProfile: IManagedObject): string {\n    return get(\n      deviceProfile,\n      'c8y_Filter.type',\n      this.translate.instant(this.DEVICE_TYPE_NOT_DEFINED));\n  }\n\n  private getDeviceProfiles(name?: string, deviceType?: string) {\n    const query: any = deviceType ? { 'c8y_Filter.type': deviceType } : {};\n    if (name) {\n      query.name = `*${name}*`;\n    }\n    return this.deviceProfileService.getDeviceProfiles(query);\n  }\n\n}\n","import { CdkStep } from '@angular/cdk/stepper';\nimport { Component } from '@angular/core';\nimport { IManagedObject, IOperation } from '@c8y/client';\nimport { C8yStepper, gettext } from '@c8y/ngx-components';\nimport { get } from 'lodash-es';\nimport { BaseStepperComponent } from '@c8y/ngx-components/operations/bulk-operation-stepper';\nimport { OperationDetails } from '@c8y/ngx-components/operations/bulk-operations-service';\n\n@Component({\n  selector: 'c8y-stepper-bulk-type-device-profile',\n  templateUrl: 'stepper-bulk-type-device-profile.component.html'\n})\nexport class StepperBulkTypeDeviceProfileComponent extends BaseStepperComponent {\n  selectedDeviceProfile: IManagedObject;\n\n  goToConfirmSelection($event: { stepper: C8yStepper; step: CdkStep }) {\n    this.deviceTypes = get(this.selectedDeviceProfile, 'c8y_Filter.type');\n    $event.stepper.next();\n  }\n\n  onDeviceProfileSelected(selectedItem) {\n    this.selectedDeviceProfile = selectedItem;\n  }\n\n  protected retrieveOperationPrototype(): OperationDetails {\n    return {\n      name: gettext('Apply device profile'),\n      description: get(this.selectedDeviceProfile, 'name'),\n      prototype: ({\n        description: `Apply device profile: ${this.selectedDeviceProfile.name}`,\n        profileId: this.selectedDeviceProfile.id,\n        profileName: this.selectedDeviceProfile.name,\n        c8y_DeviceProfile: this.selectedDeviceProfile.c8y_DeviceProfile\n      } as unknown) as IOperation\n    };\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { CoreModule, FormsModule, gettext } from '@c8y/ngx-components';\nimport { DeviceProfileModule } from '@c8y/ngx-components/device-profile';\nimport { BulkOperationStepperModule } from '@c8y/ngx-components/operations/bulk-operation-stepper';\nimport {\n  HOOK_LIST_BULK_TYPE,\n  baseUrl,\n  BulkOperationType\n} from '@c8y/ngx-components/operations/bulk-operations-service';\n\nimport { ConfirmDeviceProfileSelectionStepComponent } from './confirm-device-profile-selection-step.component';\nimport { SelectDeviceProfileStepComponent } from './select-device-profile-step.component';\nimport { StepperBulkTypeDeviceProfileComponent } from './stepper-bulk-type-device-profile.component';\n\n/** Module for the 'Apply device profile' operation type stepper */\n@NgModule({\n  declarations: [\n    StepperBulkTypeDeviceProfileComponent,\n    SelectDeviceProfileStepComponent,\n    ConfirmDeviceProfileSelectionStepComponent\n  ],\n  imports: [\n    CoreModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BulkOperationStepperModule,\n    DeviceProfileModule\n  ],\n  providers: [\n    {\n      provide: HOOK_LIST_BULK_TYPE,\n      useValue: {\n        type: BulkOperationType.DEVICE_PROFILE,\n        c8yIcon: 'c8y-device-profile',\n        name: gettext('Apply device profile'),\n        path: `${baseUrl}device-profile`,\n        component: StepperBulkTypeDeviceProfileComponent,\n        fragments: ['c8y_DeviceProfile'],\n        selected: false\n      },\n      multi: true\n    }\n  ],\n  entryComponents: [StepperBulkTypeDeviceProfileComponent],\n  exports: [StepperBulkTypeDeviceProfileComponent]\n})\nexport class StepperBulkTypeDeviceProfileModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}