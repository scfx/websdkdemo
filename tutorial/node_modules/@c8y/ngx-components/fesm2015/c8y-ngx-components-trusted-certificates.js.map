{"version":3,"file":"c8y-ngx-components-trusted-certificates.js","sources":["../../trusted-certificates/add-trusted-certificate.component.ts","../../trusted-certificates/trusted-certificates.component.ts","../../trusted-certificates/trusted-certificates-navigation.factory.ts","../../trusted-certificates/trusted-certificates.module.ts","../../trusted-certificates/c8y-ngx-components-trusted-certificates.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { DroppedFile } from '@c8y/ngx-components';\nimport { ITrustedCertificate, TrustedCertificateService } from '@c8y/client';\nimport { AlertService, gettext } from '@c8y/ngx-components';\n\n@Component({\n  selector: 'c8y-add-trusted-certificate',\n  templateUrl: './add-trusted-certificate.component.html'\n})\nexport class AddTrustedCertificateComponent {\n  maxAllowedFiles = 1;\n  AUTO_REGISTRATION_POPOVER = gettext('All devices with credentials signed by this certificate will be able to communicate with the platform without a prior registration.');\n  trustedCertificate: Partial<ITrustedCertificate> = {\n    status: 'DISABLED'\n  };\n  fileIsUploaded = false;\n\n  result: Promise<any> = new Promise((resolve, reject) => {\n    this._save = resolve;\n    this._cancel = reject;\n  });\n  private _save;\n  private _cancel;\n\n  constructor(\n    private modal: BsModalRef,\n    private trustedCertificateService: TrustedCertificateService,\n    private alertService: AlertService\n  ) {}\n\n  uploadFile(dropped: DroppedFile[]) {\n    this.fileIsUploaded = false;\n    if (dropped) {\n      const reader = new FileReader();\n      reader.onload = () => {\n        this.fileIsUploaded = true;\n        this.trustedCertificate.certInPemFormat = reader.result as string;\n      };\n      reader.readAsText(dropped[0].file);\n    }\n  }\n\n  async save() {\n    try {\n      await this.trustedCertificateService.create(this.trustedCertificate);\n      this.alertService.success(gettext('Certificate saved.'));\n      this._save();\n    } catch (ex) {\n      this.alertService.addServerFailure(ex);\n    }\n  }\n\n  close() {\n    this._cancel();\n    this.modal.hide();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AlertService, gettext, ModalService, Status } from '@c8y/ngx-components';\nimport { AddTrustedCertificateComponent } from './add-trusted-certificate.component';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { ITrustedCertificate, TrustedCertificateService, IResultList } from '@c8y/client';\nimport { TranslateService } from '@ngx-translate/core';\nimport { tap, switchMap } from 'rxjs/operators';\nimport { pipe, BehaviorSubject, Observable, of } from 'rxjs';\n\n@Component({\n  selector: 'c8y-trusted-certificates',\n  templateUrl: './trusted-certificates.component.html',\n})\nexport class TrustedCertificatesComponent implements OnInit {\n  reloading: BehaviorSubject<boolean> = new BehaviorSubject(false);\n  reload: BehaviorSubject<void> = new BehaviorSubject(null);\n  trustedCertificates: Observable<IResultList<ITrustedCertificate>> = this.reload.pipe(\n    tap(() => this.reloading.next(true)),\n    switchMap(() => this.getTrustedCertificates()),\n    tap(() => this.reloading.next(false))\n  );\n  sortByExpirationDateAsc = pipe(\n    tap((results: ITrustedCertificate[]) => {\n      return results.sort((n1, n2) => n1.notAfter.localeCompare(n2.notAfter));\n    })\n  );\n\n  constructor(\n    private bsModal: BsModalService,\n    private alertService: AlertService,\n    private trustedCertificateService: TrustedCertificateService,\n    private modalService: ModalService,\n    private translateService: TranslateService\n  ) {}\n\n  async ngOnInit() {\n    await this.loadTrustedCertificates();\n  }\n\n  async loadTrustedCertificates() {\n    this.reload.next();\n  }\n\n  getTrustedCertificates() {\n    const filter: object = {\n      pageSize: 1000,\n      withTotalPages: true,\n    };\n    return this.trustedCertificateService.list(filter);\n  }\n\n  async addTrustedCertificate() {\n    const modal = this.bsModal.show(AddTrustedCertificateComponent, {\n      class: 'modal-sm',\n      ignoreBackdropClick: true,\n    }).content as AddTrustedCertificateComponent;\n    try {\n      await modal.result;\n      modal.close();\n      this.reload.next();\n    } catch (ex) {\n      // do nothing\n    }\n  }\n\n  async deleteTrustedCertificate(certificate, index) {\n    const title = gettext('Delete trusted certificate');\n    const confirmationText = gettext(\n      'You are about to delete a trusted certificate \"{{ certificateName }}\".'\n    );\n    const finalQuestion = gettext('Do you want to proceed?');\n    const certificateName = certificate.name;\n    const body = [\n      this.translateService.instant(confirmationText, {\n        certificateName,\n      }),\n      this.translateService.instant(finalQuestion),\n    ].join(' ');\n\n    try {\n      await this.modalService.confirm(title, body, Status.DANGER, { ok: gettext('Delete') });\n      await this.trustedCertificateService.delete(certificate.fingerprint);\n      this.alertService.success(gettext('Certificate deleted.'));\n      this.reload.next();\n    } catch (ex) {\n      this.alertService.addServerFailure(ex);\n    }\n  }\n\n  async updateCertificate(\n    trustedCertificate: ITrustedCertificate,\n    updatingPart: Partial<ITrustedCertificate>\n  ) {\n    try {\n      await this.trustedCertificateService.update({\n        fingerprint: trustedCertificate.fingerprint,\n        ...updatingPart,\n      });\n      this.alertService.success(gettext('Certificate saved.'));\n    } catch (ex) {\n      this.alertService.addServerFailure(ex);\n    }\n  }\n\n  highlightDependingOnExpirationStatus(item: ITrustedCertificate) {\n    const warningOffset = 24 * 60 * 60 * 1000 * 90; // 90 days\n    const todayTimestamp = new Date().getTime();\n    const warningTimestamp = new Date().getTime() + warningOffset;\n    const notAfterTimestamp = new Date(item.notAfter).getTime();\n    const expired = notAfterTimestamp < todayTimestamp;\n    const expiresInLessThan90Days = notAfterTimestamp < warningTimestamp;\n    if (expired) {\n      return 'text-danger';\n    }\n    if (expiresInLessThan90Days) {\n      return 'text-warning';\n    }\n    return '';\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { gettext, NavigatorNode, NavigatorNodeFactory } from '@c8y/ngx-components';\n\n@Injectable()\nexport class TrustedCertificatesNavigationFactory implements NavigatorNodeFactory {\n  navs: NavigatorNode[] = [];\n\n  async get() {\n    if (this.navs.length === 0) {\n      this.navs.push(\n        new NavigatorNode({\n          label: gettext('Trusted certificates'),\n          icon: 'certificate',\n          path: '/trusted-certificates',\n          parent: gettext('Management'),\n          priority: 100\n        })\n      );\n    }\n    return this.navs;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Route, RouterModule } from '@angular/router';\nimport { CommonModule, CoreModule, HOOK_NAVIGATOR_NODES } from '@c8y/ngx-components';\nimport { TrustedCertificatesComponent } from './trusted-certificates.component';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { PopoverModule } from 'ngx-bootstrap/popover';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { AddTrustedCertificateComponent } from './add-trusted-certificate.component';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { TrustedCertificatesNavigationFactory } from './trusted-certificates-navigation.factory';\n\nconst trustedCertificatesRoutes: Route[] = [\n  {\n    path: 'trusted-certificates',\n    component: TrustedCertificatesComponent\n  }\n];\n\n@NgModule({\n  declarations: [TrustedCertificatesComponent, AddTrustedCertificateComponent],\n  exports: [],\n  imports: [\n    CoreModule,\n    CommonModule,\n    RouterModule.forRoot(trustedCertificatesRoutes, { useHash: true }),\n    BsDropdownModule.forRoot(),\n    TooltipModule,\n    ReactiveFormsModule,\n    ButtonsModule,\n    PopoverModule\n  ],\n  entryComponents: [TrustedCertificatesComponent, AddTrustedCertificateComponent],\n  providers: [\n    {\n      provide: HOOK_NAVIGATOR_NODES,\n      useClass: TrustedCertificatesNavigationFactory,\n      multi: true\n    }\n  ]\n})\nexport class TrustedCertificatesModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}