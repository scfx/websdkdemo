{"version":3,"file":"c8y-ngx-components-protocol-opcua.js","sources":["../../protocol-opcua/opcua-device-protocol-mapping-customaction.component.ts","../../protocol-opcua/address-space.service.ts","../../protocol-opcua/opcua-address-space-detail.component.ts","../../protocol-opcua/opcuaService.ts","../../protocol-opcua/opcua-agent.guard.ts","../../protocol-opcua/opcua-device-protocol-browse-path-validation.directive.ts","../../protocol-opcua/opcua-device-protocol-object-mapping.component.ts","../../protocol-opcua/opcua-device-protocol-mapping.component.ts","../../protocol-opcua/opcua-device-protocol-detail.component.ts","../../protocol-opcua/opcua-device-protocol-data-reporting.component.ts","../../protocol-opcua/opcua-device-protocol-object-mapping-status-icon.component.ts","../../protocol-opcua/opcua-address-space.component.ts","../../protocol-opcua/opcua-microservice.guard.ts","../../protocol-opcua/opcua-server-config.component.ts","../../protocol-opcua/opcua-server-list.component.ts","../../protocol-opcua/opcua-server.guard.ts","../../protocol-opcua/opcua-servers.component.ts","../../protocol-opcua/opcua-device-protocol-description.component.ts","../../protocol-opcua/dynamic-data-source.ts","../../protocol-opcua/opcua-address-space-tree.component.ts","../../protocol-opcua/opcua-auto-apply-settings.component.ts","../../protocol-opcua/opcua-protocol.module.ts","../../protocol-opcua/ng1/downgraded.components.ts","../../protocol-opcua/ng1/index.ts","../../protocol-opcua/c8y-ngx-components-protocol-opcua.ts"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { NgModelGroup, ControlContainer } from '@angular/forms';\nimport { get } from 'lodash-es';\n\n@Component({\n  selector: 'opcua-device-protocol-mapping-customaction',\n  templateUrl: './opcua-device-protocol-mapping-customaction.html',\n  viewProviders: [{ provide: ControlContainer, useExisting: NgModelGroup }]\n})\nexport class OpcuaDeviceProtocolMappingCustomAction implements OnInit {\n  _model: any;\n  @Input() customAction;\n\n  hasCustomAction = false;\n  // no translation needed\n  readonly placeholders: string = '${value}, ${serverId}, ${nodeId}, ${deviceId}';\n\n  getHeaderPair() {\n    return { key: '', value: '' };\n  }\n  get headers() {\n    return this.customAction.headers;\n  }\n\n  addHeader() {\n    const { headers } = this.customAction;\n    headers.push(this.getHeaderPair());\n  }\n\n  updateCustomAction() {\n    this.hasCustomAction = !this.hasCustomAction;\n  }\n\n  removeCustomAction(index) {\n    const { headers } = this.customAction;\n\n    headers.splice(index, 1);\n  }\n\n  trackByIndex(index: number): number {\n    return index;\n  }\n\n  ngOnInit() {\n    if (get(this.customAction, 'endpoint')) {\n      this.hasCustomAction = true;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FetchClient, IFetchOptions } from '@c8y/client';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable()\nexport class AddressSpaceService {\n  private nodeNavigationData$: BehaviorSubject<NodeNavigationData>;\n  private client: FetchClient;\n  private microserviceUrl: string;\n  private header: any;\n\n  constructor(fetchClient: FetchClient) {\n    this.client = fetchClient;\n    this.microserviceUrl = '/service/opcua-mgmt-service/address-space';\n    this.header = { 'Content-Type': 'application/json' };\n    this.nodeNavigationData$ = new BehaviorSubject<NodeNavigationData>({\n      node: undefined,\n      selectedAncestorIds: []\n    });\n  }\n\n  resetTreeToRootNode() {\n    this.triggerNodeToOpen({ node: undefined, selectedAncestorIds: [] });\n  }\n\n  triggerNodeToOpen(nodeNavigationData: NodeNavigationData) {\n    this.nodeNavigationData$.next(nodeNavigationData);\n  }\n\n  getNodeNavData$(): Observable<NodeNavigationData> {\n    return this.nodeNavigationData$.asObservable();\n  }\n\n  getNode(serverId: string, nodeId?: string) {\n    if (serverId && serverId.length > 0) {\n      if (nodeId && nodeId.length > 0) {\n        return this.getNodeById(serverId, nodeId);\n      }\n      return this.getRootNode(serverId);\n    }\n  }\n\n  getRootNode(serverId: string) {\n    if (serverId && serverId.length > 0) {\n      const options: IFetchOptions = {\n        method: 'GET',\n        headers: this.header\n      };\n      return this.client.fetch(`${this.microserviceUrl}/${serverId}`, options);\n    }\n  }\n\n  getNodeById(serverId: string, nodeId: string) {\n    if (serverId && nodeId && serverId.length > 0 && nodeId.length > 0) {\n      const options: IFetchOptions = {\n        method: 'GET',\n        headers: this.header\n      };\n      const param = encodeURIComponent(nodeId);\n      return this.client.fetch(`${this.microserviceUrl}/${serverId}?nodeId=${param}`, options);\n    }\n  }\n\n  getChildrenOf(node: AddressSpaceNode, serverId: string) {\n    if (serverId && node.nodeId && serverId.length > 0 && node.nodeId.length > 0) {\n      const options: IFetchOptions = {\n        method: 'GET',\n        headers: this.header\n      };\n      const param = encodeURIComponent(node.nodeId);\n      return this.client.fetch(\n        `${this.microserviceUrl}/${serverId}/children?nodeId=${param}`,\n        options\n      );\n    }\n  }\n\n  childrenAvailable(nodeReferences: AdressSpaceNodeReference[]): boolean {\n    if (!nodeReferences || nodeReferences.length === 0) {\n      return false;\n    }\n    return nodeReferences.some(ref => !ref.inverse && ref.hierarchical);\n  }\n\n  async getSearchedNodes(searchKey: string, serverId: string) {\n    const url = `service/opcua-mgmt-service/search/${serverId}/`;\n    const options: IFetchOptions = {\n      headers: this.header,\n      params: {\n        searchString: '*' + searchKey + '*'\n      }\n    };\n    const res = await this.client.fetch(url, options);\n    return res.json();\n  }\n\n  getIcon(nodeClassName: string) {\n    const iconList = {\n      Object: 'cube',\n      Variable: 'th-list',\n      Method: 'random',\n      View: 'window-maximize',\n      ObjectType: 'c8y-group',\n      VariableType: 'c8y-group',\n      ReferenceType: 'c8y-group',\n      DataType: 'c8y-group'\n    };\n    return iconList[nodeClassName] || 'circle';\n  }\n}\n\nexport interface AddressSpaceNode {\n  nodeId: string;\n  currentlyLoadingChildren?: boolean;\n  nodeClass?: number;\n  nodeClassName?: string;\n  browseName?: string;\n  displayName?: string;\n  description?: any;\n  references?: AdressSpaceNodeReference[];\n  ancestorNodeIds?: [string[]];\n  children: AddressSpaceNode[];\n  expanded: boolean;\n  absolutePaths: [string[]];\n  relativePath?: string[];\n  parentNode?: AddressSpaceNode;\n}\n\nexport interface AdressSpaceNodeReference {\n  referenceId: string;\n  targetId: string;\n  inverse: boolean;\n  hierarchical: boolean;\n}\n\nexport interface SearchedNode {\n  absolutePath: string[];\n  ancestorNodeIds: [string[]];\n  displayName: string;\n  nodeClassName: string;\n  nodeId: string;\n}\n\nexport interface NodeNavigationData {\n  node: AddressSpaceNode;\n  selectedAncestorIds: string[];\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { AddressSpaceNode, AddressSpaceService, NodeNavigationData } from './address-space.service';\nimport { omit } from 'lodash-es';\n\n@Component({\n  selector: 'opcua-address-space-detail',\n  templateUrl: './opcua-address-space-detail.component.html'\n})\nexport class OpcuaAddressSpaceDetailComponent {\n  @Input() set node(n) {\n    this._node = n;\n    if (n) {\n      this.setNodeData(n);\n    } else {\n      // remove details from current view\n      this.showDetails = false;\n    }\n  }\n  nodeDataAttr: Map<string, string>;\n  nodeDataRef: object[];\n  selected: boolean = false;\n  showDetails: boolean = false;\n\n  @Output() toggleAttrDetail: EventEmitter<AddressSpaceNode> = new EventEmitter<AddressSpaceNode>();\n\n  private _node: AddressSpaceNode;\n\n  constructor(private addressSpaceService: AddressSpaceService) {}\n  setNodeData(nodeData) {\n    this.showDetails = true;\n    const { attributes, references } = nodeData;\n    this.nodeDataRef = references;\n    const omitList = [\n      'attributes',\n      'references',\n      'children',\n      'currentlyLoadingChildren',\n      'expanded',\n      'browsePath',\n      'relativePath',\n      'parentNode'\n    ];\n    this.nodeDataAttr = Object.assign({}, attributes, omit(nodeData, omitList));\n  }\n\n  toggleDetail(node) {\n    this.showDetails = !this.showDetails;\n    this.toggleAttrDetail.emit(node);\n  }\n\n  navigateTo(ancestors: string[]) {\n    const nodeNavData: NodeNavigationData = {\n      node: this._node,\n      selectedAncestorIds: ancestors\n    };\n\n    this.toggleDetail(this._node);\n    this.addressSpaceService.triggerNodeToOpen(nodeNavData);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FetchClient, IFetchOptions, InventoryService, InventoryBinaryService } from '@c8y/client';\nimport { OpcuaServer } from './opcua-server.interface';\nimport { Router } from '@angular/router';\nimport { AlertService } from '@c8y/ngx-components';\n\n@Injectable()\nexport class OpcuaService {\n  private binaryService: InventoryBinaryService;\n  private microserviceUrl: string;\n  private deviceTypeProtocolUrl: string;\n  private header: any;\n\n  constructor(\n    private client: FetchClient,\n    private inventoryService: InventoryService,\n    private router: Router,\n    private alertService: AlertService\n    ) {\n    this.microserviceUrl = '/service/opcua-mgmt-service/server';\n    this.deviceTypeProtocolUrl = '/service/opcua-mgmt-service/deviceTypes';\n    this.header = { 'Content-Type': 'application/json' };\n    this.binaryService = inventoryService.binary;\n  }\n\n  getServers(id: string) {\n    if (id && id.length > 0) {\n      const options: IFetchOptions = {\n        method: 'GET',\n        headers: this.header\n      };\n      return this.client.fetch(`${this.microserviceUrl}/${id}`, options);\n    }\n  }\n\n  createServer(data: OpcuaServer) {\n    if (this.doesGatewayIdExist(data)) {\n      this.cleanUpPayload(data);\n      const options: IFetchOptions = {\n        method: 'POST',\n        headers: this.header,\n        body: JSON.stringify(data)\n      };\n      return this.client.fetch(`${this.microserviceUrl}`, options);\n    }\n  }\n\n  async updateServer(server: OpcuaServer) {\n    if (this.doesGatewayIdExist(server) && this.doesIdExist(server)) {\n      this.cleanUpPayload(server);\n      const options: IFetchOptions = {\n        method: 'POST',\n        headers: this.header,\n        body: JSON.stringify(server)\n      };\n      const res = await this.client.fetch(`${this.microserviceUrl}`, options);\n      let data;\n      try {\n        data = await res.json();\n      } catch (e) {\n        // nothing\n      }\n\n      if (res.status !== 200) {\n        this.alertService.addServerFailure({ data, res });\n      } else {\n        return data;\n      }\n    }\n  }\n\n  removeServer(data: OpcuaServer) {\n    if (this.doesGatewayIdExist(data) && this.doesIdExist(data)) {\n      const options: IFetchOptions = {\n        method: 'DELETE'\n      };\n      return this.client.fetch(`${this.microserviceUrl}/${data.gatewayId}/${data.id}`, options);\n    }\n  }\n\n  getKeystore(binaryId: string) {\n    if (binaryId && binaryId.length > 0) {\n      return this.inventoryService.detail(binaryId);\n    }\n    return null;\n  }\n\n  uploadKeystore(file: File) {\n    if (file && file.size > 0) {\n      return this.binaryService.create(file);\n    }\n    return Promise.reject('Invalid file');\n  }\n\n  async updateKeystore(id: string, file: File) {\n    if (id && id.length > 0 && file && file.size > 0) {\n      const { res } = await this.removeKeystore(id);\n      if (res && res.status === 204) {\n        return this.uploadKeystore(file);\n      }\n    }\n    return Promise.reject('Invalid file');\n  }\n\n  removeKeystore(id: string) {\n    if (id && id.length > 0) {\n      return this.binaryService.delete(id);\n    }\n  }\n\n  getMoId() {\n    const currentUrl: string = this.router.routerState.snapshot.url;\n    const isDevice: boolean = new RegExp(/device\\/\\d+/).test(currentUrl);\n    if (isDevice) {\n      return currentUrl.match(/\\d+/)[0];\n    }\n    return '';\n  }\n\n  getId() {\n    const currentUrl: string = this.router.routerState.snapshot.url;\n    const isDeviceprotocol: boolean = new RegExp(/deviceprotocols/).test(currentUrl);\n    if (isDeviceprotocol && RegExp(/\\d+$/).test(currentUrl)) {\n      return currentUrl.match(/\\d+$/)[0];\n    }\n  }\n\n  async getDeviceProtocol(id: string) {\n    const options: IFetchOptions = {\n      method: 'GET',\n      headers: this.header,\n      };\n    return this.client.fetch(`${this.deviceTypeProtocolUrl}/${id}`, options);\n\n  }\n\n  async updateDeviceProtocol(data) {\n    const options: IFetchOptions = {\n      method: 'PUT',\n      headers: this.header,\n      body: JSON.stringify(data)\n    };\n    return this.client.fetch(`${this.deviceTypeProtocolUrl}/${data.id}`, options);\n\n  }\n\n  async createDeviceProtocol(data) {\n    const options: IFetchOptions = {\n      method: 'POST',\n      headers: this.header,\n      body: JSON.stringify(data)\n    };\n    return this.client.fetch(`${this.deviceTypeProtocolUrl}`, options);\n  }\n\n  private doesGatewayIdExist(data: OpcuaServer) {\n    return data && data.gatewayId && data.gatewayId.length > 0;\n  }\n\n  private doesIdExist(data: OpcuaServer) {\n    return data && data.id && data.id.length > 0 && data.id !== 'new';\n  }\n\n  private cleanUpPayload(data: OpcuaServer) {\n    if (data) {\n      if (data.id && data.id === 'new') { delete data.id; }\n      if (data.quickInfo) { delete data.quickInfo; }\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\n\n@Injectable()\nexport class OpcuaAgentGuard implements CanActivate {\n  type = 'c8y_OPCUA_Device_Agent';\n  canActivate( { data } ) {\n    const { contextData } = data;\n    return contextData && contextData.type === this.type;\n  }\n}\n","import { Directive, forwardRef, ElementRef, Input, HostListener } from '@angular/core';\nimport { NgForm, Validator, AbstractControl, NG_VALIDATORS } from '@angular/forms';\nimport { some, isEqual, isEmpty } from 'lodash-es';\n\n@Directive({\n  selector: '[c8yBrowsePathValidator][ngModel]',\n  providers: [\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => OpcuaDeviceProtocolBrowsePathValidation),\n      multi: true\n    }\n  ]\n})\nexport class OpcuaDeviceProtocolBrowsePathValidation implements Validator {\n  @Input() getMappings: () => [];\n  @Input() model: any;\n\n  constructor(private el: ElementRef) {}\n\n  validate(control: AbstractControl): { [key: string]: any } {\n    if (control.value) {\n      if (!this.isValidJson(control.value)) {\n        return { invalidBrowsePathNotation: true };\n      } else {\n        if (this.isBrowsePathUnique(control.value)) {\n          return { browsePathNotUnique: true };\n        }\n      }\n    }\n    return null;\n  }\n\n  isValidJson(value) {\n    try {\n      const browsePath = JSON.parse(value);\n      return !isEmpty(browsePath);\n    } catch (error) {\n      return false;\n    }\n  }\n\n  toArray(str) {\n    return JSON.parse(str);\n  }\n\n  isBrowsePathUnique(value): boolean {\n    const mappings = this.getMappings();\n    const found = some(mappings, item => {\n      if (isEqual(item.browsePath, this.toArray(value)) && item.id !== this.model.id) {\n        return item;\n      }\n    });\n    return found ? true : false;\n  }\n}\n","import { Directive, ElementRef, Injector, ViewChild, Input, Output } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { UpgradeComponent } from '@angular/upgrade/static';\n\n@Directive({\n  selector: 'c8y-object-mapping'\n})\nexport class OpcuaDeviceProtocolObjectMapping extends UpgradeComponent {\n  @Input() mapping: any;\n  @Input() customActions: any;\n  @Input() autoObserveParams: any;\n  @Input() hideAutoObserve: any;\n  constructor(elementRef: ElementRef, injector: Injector) {\n    super('c8yObjectMapping', elementRef, injector);\n  }\n}\n","import {\n  Component,\n  OnInit,\n  EventEmitter,\n  Input,\n  Output,\n  ViewChild,\n  OnChanges,\n  SimpleChanges\n} from '@angular/core';\nimport { NgForm, ControlContainer, FormControl, NgModelGroup } from '@angular/forms';\nimport { AlertService, gettext } from '@c8y/ngx-components';\nimport { isEmpty, assign, unset, get, set, reject, find, cloneDeep, isEqual } from 'lodash-es';\nimport { OpcuaDeviceProtocolObjectMapping } from './opcua-device-protocol-object-mapping.component';\nimport { AddressSpaceService } from './address-space.service';\n\n@Component({\n  selector: 'opcua-device-protocol-mapping',\n  templateUrl: './opcua-device-protocol-mapping.html',\n  viewProviders: [{ provide: ControlContainer, useExisting: NgModelGroup }]\n})\nexport class OpcuaDeviceProtocolMapping implements OnInit, OnChanges {\n  @ViewChild(OpcuaDeviceProtocolObjectMapping, { static: false }) objectMappingForm: any;\n  @ViewChild('variableForm', { static: false }) subFormRef: any;\n  @ViewChild('browsePathModel', { static: false }) browsePathModel: any;\n\n  @Input('resource') _model;\n  @Input() index;\n  @Input() getParentAttr;\n  @Input() referencedServerId;\n  @Input() referencedRootNodeId;\n  @Output() onAction: EventEmitter<any> = new EventEmitter<any>();\n\n  mapping;\n\n  isDetailOpen;\n  customAction;\n  referencedNode;\n  isPathFocused = false;\n  groupName: string;\n  browsePath: string;\n  nodeDisplayName: string;\n  isBrowsePathUniq = true;\n  dataReporting = 'default';\n  isTreeOpen = false;\n  isNew = false;\n  resetModel = false;\n  dataReportingName;\n  private moId: string = '';\n  constructor(\n    private alertService: AlertService,\n    private addressSpaceService: AddressSpaceService\n  ) {}\n\n  toggleDetail() {\n    this.isDetailOpen = !this.isDetailOpen;\n    if (this.resetModel) {\n      this.initialFormSetup();\n    }\n  }\n\n  getMappings = () => this.getParentAttr('mappings');\n\n  ngOnInit() {\n    this.dataReportingName = 'ReportingMode' + this.index;\n    this.initialFormSetup();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (\n      changes._model.previousValue &&\n      !isEqual(this._model, changes._model.previousValue.SimpleChange)\n    ) {\n      if (this.mapping && this.mapping.name === this._model.name) {\n        this.mapping.id = this._model.id;\n      }\n    }\n  }\n\n  initialFormSetup() {\n    const mapping = {\n      id: '',\n      browsePath: [],\n      name: '',\n      subscriptionType: {\n        type: 'None'\n      }\n    };\n\n    const customAction = {\n      headers: [{ key: 'Authorization', value: '' }, { key: 'Content-Type', value: '' }],\n      bodyTemplate: '',\n      type: 'HttpPost',\n      endpoint: ''\n    };\n\n    this.mapping = assign({}, mapping, cloneDeep(this._model));\n\n    if (isEmpty(this.mapping.browsePath)) {\n      this.isNew = true;\n      this.isDetailOpen = true;\n    } else {\n      this.browsePath = this.stringfyBrowsePath(this.mapping.browsePath);\n      this.nodeDisplayName = this.mapping.name;\n    }\n\n    if (this.referencedRootNodeId) {\n      this.referencedNode = { nodeId: this.referencedRootNodeId };\n      this.addressSpaceService.triggerNodeToOpen({\n        node: {\n          nodeId: this.referencedRootNodeId,\n          children: [],\n          expanded: false,\n          absolutePaths: [[]]\n        },\n        selectedAncestorIds: []\n      });\n    } else {\n      this.referencedNode = { nodeId: '' };\n    }\n\n    if (get(this.mapping, 'customAction')) {\n      this.customAction = assign(customAction, get(this.mapping, 'customAction'));\n      this.customAction.headers = this.mapHeadersObjectToList(get(this.customAction, 'headers'));\n    } else {\n      this.customAction = assign({}, customAction);\n    }\n\n    unset(this.mapping, 'customAction');\n    if (get(this._model, 'subscriptionType')) {\n      this.dataReporting = 'custom';\n    } else {\n      this.dataReporting = 'default';\n    }\n    this.resetModel = false;\n  }\n\n  showAddressSpaceTree() {\n    return !isEmpty(this.referencedServerId);\n  }\n\n  ngAfterViewInit() {\n    if (\n      get(this.mapping, 'subscriptionType') &&\n      get(this.mapping, 'subscriptionType.type') !== 'None'\n    ) {\n      this.dataReporting = 'custom';\n    }\n  }\n\n  mapHeadersObjectToList(headers) {\n    if (Object.keys(headers).length > 0) {\n      return Object.keys(headers).map(item => {\n        return { key: item, value: headers[item] };\n      });\n    }\n  }\n\n  stringfyBrowsePath(path) {\n    return JSON.stringify(path);\n  }\n\n  updateBrowsePath(node) {\n    this.mapping.browsePath = node.relativePath;\n    this.nodeDisplayName = node.displayName;\n    this.mapping.name = this.nodeDisplayName;\n    this.browsePath = this.stringfyBrowsePath(this.mapping.browsePath);\n    this.browsePathModel.control.markAsDirty();\n  }\n\n  updateDisplayname() {\n    this.mapping.name = this.nodeDisplayName;\n  }\n\n  updateBrowsePathInput() {\n    if (this.browsePath) {\n      try {\n        this.mapping.browsePath = JSON.parse(this.browsePath);\n      } catch (error) {\n        return;\n      }\n    }\n  }\n\n  save() {\n    if (this.dataReporting === 'default') {\n      unset(this.mapping, 'subscriptionType');\n    }\n\n    if (get(this.mapping, 'measurementCreation')) {\n      const { measurementCreation } = this.mapping;\n      set(measurementCreation, 'fragmentName', get(measurementCreation, 'type'));\n    }\n\n    const { customAction } = this.subFormRef.value;\n    let modifiedCustomAction;\n    if (customAction.hasCustomAction) {\n      const reducedHeaders = this.customAction.headers.reduce((result, item) => {\n        result[item.key] = item.value;\n        return result;\n      }, {});\n\n      modifiedCustomAction = assign({}, this.customAction, { headers: reducedHeaders });\n    }\n\n    this.onAction.emit({\n      action: 'save',\n      data: assign({}, this.mapping, { customAction: modifiedCustomAction })\n    });\n    this.isDetailOpen = false;\n  }\n\n  cancel() {\n    this.isDetailOpen = false;\n    this.resetModel = true;\n    if (this.mapping.id === 'new') {\n      this.onAction.emit({ action: 'delete', data: assign({}, this.mapping) });\n    }\n  }\n\n  onDelete() {\n    this.onAction.emit({ action: 'delete', data: this.mapping });\n  }\n\n  canSave(variableForm) {\n    const areValid = () =>\n      variableForm.valid && this.objectMappingForm.$componentScope.mappingForm.$valid;\n    const areDirty = () =>\n      variableForm.dirty || this.objectMappingForm.$componentScope.mappingForm.$dirty;\n    return areValid() && areDirty();\n  }\n\n  isActive() {\n    return this.isDetailOpen;\n  }\n\n  setTreeFromRefNode() {\n    if (this.referencedRootNodeId) {\n      this.addressSpaceService.triggerNodeToOpen({\n        node: {\n          nodeId: this.referencedRootNodeId,\n          children: [],\n          expanded: false,\n          absolutePaths: [[]]\n        },\n        selectedAncestorIds: []\n      });\n    }\n  }\n}\n","import {\n  Component,\n  OnInit,\n  ViewChildren,\n  QueryList,\n  Input,\n  Output,\n  EventEmitter,\n  ViewChild,\n  OnChanges,\n  ChangeDetectorRef\n} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { OpcuaService } from './opcuaService';\nimport { NgForm } from '@angular/forms';\nimport { AlertService, gettext } from '@c8y/ngx-components';\nimport { OpcuaDeviceType } from './opcua-protocol-device-type.interface';\nimport { find, assign, omit, findIndex, pick, unset, get } from 'lodash';\nimport { OpcuaDeviceProtocolMapping } from './opcua-device-protocol-mapping.component';\n\n@Component({\n  selector: 'opcua-device-protocol-detail',\n  templateUrl: './opcua-device-protocol-detail.html'\n})\nexport class OpcuaDeviceProtocolDetailComponent implements OnInit {\n  @ViewChildren(OpcuaDeviceProtocolMapping) instanceList: QueryList<OpcuaDeviceProtocolMapping>;\n\n  initialModel: OpcuaDeviceType = {\n    id: '',\n    fieldbusType: 'opcuaV2',\n    description: '',\n    unit: '',\n    fieldbusVersion: 4,\n    name: '',\n    referencedServerId: '',\n    referencedRootNodeId: '',\n    subscriptionType: {\n      type: 'None'\n    },\n    mappings: [],\n    overriddenSubscriptions: [],\n    applyConstraints: {\n      browsePathMatchesRegex: '',\n      matchesNodeIds: [],\n      serverObjectHasFragment: '',\n      matchesServerIds: []\n    },\n    enabled: ''\n  };\n\n  model: any;\n  server: any;\n  selectedNode: any;\n  isLoaded = true;\n\n  constructor(\n    private changeDetectorRef: ChangeDetectorRef,\n    private opcuaService: OpcuaService,\n    private alertService: AlertService,\n    private router: Router\n  ) {}\n\n  ngAfterContentChecked() {\n    this.changeDetectorRef.detectChanges();\n  }\n\n  getParentAttr = key => get(this.model, key);\n\n  getMapping() {\n    return this.model.mappings;\n  }\n\n  getEmptyMappingObject() {\n    return {\n      id: 'new',\n      browsePath: []\n    };\n  }\n\n  getOverriddenSubscriptionsByPath(browsePath) {\n    return find(this.model.overriddenSubscriptions, { browsePath });\n  }\n\n  getStructuredResource(resource) {\n    const overriddenSubscriptions: any = this.getOverriddenSubscriptionsByPath(resource.browsePath);\n    let result = assign({}, resource);\n    if (overriddenSubscriptions) {\n      result = assign({}, resource, { subscriptionType: overriddenSubscriptions.subscriptionType });\n    }\n    return result;\n  }\n\n  async ngOnInit() {\n    const id = this.opcuaService.getId();\n    if (id) {\n      const res = await this.opcuaService.getDeviceProtocol(id);\n      if (res && res.status !== 200) {\n        const data = res.json ? await res.json() : undefined;\n        this.alertService.addServerFailure({ data, res });\n        this.isLoaded = false;\n      } else {\n        const data = await res.json();\n        if (data && data.applyConstraints === null) {\n          delete data.applyConstraints;\n        }\n        if (data && data.subscriptionType === null) {\n          delete data.subscriptionType;\n        }\n        this.model = assign(this.initialModel, data);\n        if (!this.model.mappings) {\n          this.model.mappings = [];\n        }\n        this.model = assign(this.initialModel, this.updateViableMapping(data));\n        this.isLoaded = false;\n      }\n    }\n  }\n\n  updateViableMapping(model) {\n    const { mappings } = model;\n    let result = [];\n    if (mappings) {\n      result = mappings.map((item, i) => {\n        return assign(item, { id: i });\n      });\n    }\n    return assign(model, { mappings: result });\n  }\n\n  trackByIndex(index: number): number {\n    return index;\n  }\n\n  addVariable() {\n    this.model.mappings.push(this.getEmptyMappingObject());\n  }\n\n  updateVariable(mappingObject) {\n    const { mappings } = this.model;\n    const index = findIndex(mappings, { id: mappingObject.id });\n    mappings.splice(index, 1);\n    if (mappingObject.id === 'new') {\n      mappingObject.id = mappings.length;\n    }\n    mappings.push(mappingObject);\n  }\n\n  removeVariable(mappingObject) {\n    const { mappings } = this.model;\n    const index = findIndex(mappings, { id: mappingObject.id });\n    mappings.splice(index, 1);\n  }\n\n  actionHandler(actionObject) {\n    switch (actionObject.action) {\n      case 'save':\n        this.updateVariable(actionObject.data);\n        break;\n      case 'delete':\n        this.removeVariable(actionObject.data);\n        break;\n    }\n  }\n\n  extractOverridSubscriptionType(_mapping) {\n    const overriddenSubscriptions = [];\n    const variableMapping = [];\n    _mapping.forEach(element => {\n      if (element.id !== 'new') {\n        if (element.subscriptionType) {\n          overriddenSubscriptions.push(\n            assign(\n              { browsePath: element.browsePath },\n              { subscriptionType: element.subscriptionType }\n            )\n          );\n        }\n        variableMapping.push(omit(element, ['subscriptionType']));\n      }\n    });\n    return [variableMapping, overriddenSubscriptions];\n  }\n\n  prepareRequestJson(_model) {\n    let requestJson = {};\n    const [mappings, overriddenSubscriptions] = this.extractOverridSubscriptionType(\n      _model.mappings\n    );\n    requestJson = assign(requestJson, pick(_model, Object.keys(this.initialModel)), {\n      mappings,\n      overriddenSubscriptions\n    });\n    return requestJson;\n  }\n\n  async save() {\n    try {\n      const res = await this.opcuaService.updateDeviceProtocol(this.prepareRequestJson(this.model));\n      const data = await res.json();\n\n      if (res && res.status === 200) {\n        this.router.navigate(['deviceprotocols']);\n        this.alertService.success(gettext('Device protocol saved.'));\n      } else {\n        const { details } = data;\n        this.alertService.addServerFailure({ res, data: details });\n      }\n    } catch (ex) {\n      this.alertService.danger(gettext('Failed to save. Try again.'));\n    }\n  }\n\n  canSave(deviceTypeForm) {\n    if (this.instanceList) {\n      const activeInstances = this.instanceList.filter(item => item.isActive());\n\n      if (activeInstances.length > 0) {\n        return true;\n      }\n    }\n    return !deviceTypeForm.form.valid;\n  }\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { set, unset, toInteger } from 'lodash';\nimport { gettext } from '@c8y/ngx-components';\nimport { ControlContainer, NgModelGroup } from '@angular/forms';\n\n@Component({\n  selector: 'opcua-device-protocol-data-reporting',\n  templateUrl: './opcua-device-protocol-data-reporting.html',\n  viewProviders: [{ provide: ControlContainer, useExisting: NgModelGroup }]\n})\nexport class OpcuaDeviceProtocolDataReportingComponent {\n  @Input() set model(_model) {\n    if (_model.subscriptionType) {\n      this.subscription = _model.subscriptionType;\n      if (this.subscription.type === 'CyclicRead') {\n        this.cyclicReadParameters = _model.subscriptionType.cyclicReadParameters;\n        this.requireCyclic = true;\n        this.requireSubscription = false;\n      }\n\n      if (this.subscription.type === 'Subscription') {\n        this.subscriptionParameters = _model.subscriptionType.subscriptionParameters;\n        this.requireCyclic = false;\n        this.requireSubscription = true;\n      }\n\n      if (this.subscription.type === 'None') {\n        this.requireCyclic = false;\n        this.requireSubscription = false;\n      }\n    }\n    this._model = _model;\n    this.subscriptionTypeName = 'subscriptionType' + _model.id;\n  }\n  @Input() groupName;\n\n  _model: object;\n  @Output() onSubscriptionChange: EventEmitter<any> = new EventEmitter<any>();\n\n  subscription = {\n    type: 'None'\n  };\n  subscriptionParameters = {\n    samplingRate: undefined,\n    deadbandType: 'None',\n    deadbandValue: undefined,\n    ranges: '',\n    queueSize: undefined,\n    dataChangeTrigger: 'Status',\n    discardOldest: true\n  };\n\n  cyclicReadParameters = {\n    rate: undefined\n  };\n\n  types: any[] = [\n    { value: 'None', label: gettext('None') },\n    { value: 'CyclicRead', label: gettext('Cyclic read') },\n    { value: 'Subscription', label: gettext('Subscription') }\n  ];\n\n  filters: any[] = [\n    { value: 'None', label: gettext('None') },\n    { value: 'absolute', label: gettext('Absolute') },\n    { value: 'percent', label: gettext('Percent') }\n  ];\n\n  triggers: any[] = [\n    { value: 'Status', label: gettext('Status') },\n    { value: 'StatusValue', label: gettext('Status/Value') },\n    { value: 'StatusValueTimestamp', label: gettext('Status/Value/Timestamp') }\n  ];\n\n  discard: any[] = [\n    { value: true, label: gettext('oldest`data`') },\n    { value: false, label: gettext('newest`data`') }\n  ];\n\n  requireCyclic: boolean = false;\n  requireSubscription: boolean = false;\n  subscriptionTypeName = 'subscriptionType';\n\n  parseReadingInterval = $event => toInteger($event.target.value);\n\n  updateModel() {\n    setTimeout(() => {\n      unset(this.subscription, 'subscriptionParameters');\n      unset(this.subscription, 'cyclicReadParameters');\n      if (this.subscription.type === 'CyclicRead') {\n        this.requireCyclic = true;\n        this.requireSubscription = false;\n        set(this.subscription, 'cyclicReadParameters', this.cyclicReadParameters);\n      } else if (this.subscription.type === 'Subscription') {\n        this.requireCyclic = false;\n        this.requireSubscription = true;\n        set(this.subscription, 'subscriptionParameters', this.subscriptionParameters);\n      } else if (this.subscription.type === 'None') {\n        this.requireCyclic = false;\n        this.requireSubscription = false;\n      }\n    });\n  }\n}\n","import { Directive, ElementRef, Injector, Input } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\n\n@Directive({\n  selector: 'c8y-object-mapping-status-icons'\n})\nexport class OpcuaDeviceProtocolObjectMappingStatus extends UpgradeComponent {\n  @Input() mapping: any;\n  constructor(elementRef: ElementRef, injector: Injector) {\n    super('c8yObjectMappingStatusIcons', elementRef, injector);\n  }\n}\n","import { Component, OnInit, Output, EventEmitter, OnDestroy } from '@angular/core';\nimport { AddressSpaceService, AddressSpaceNode } from './address-space.service';\nimport { gettext } from '@c8y/ngx-components';\nimport { DynamicDataSource } from './dynamic-data-source';\nimport { OpcuaService } from './opcuaService';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'opcua-address-space',\n  templateUrl: './opcua-address-space.component.html'\n})\nexport class OpcuaAddressSpaceComponent implements OnInit, OnDestroy {\n  currentNode: AddressSpaceNode;\n  selectednode: boolean = false;\n  searchKey: string;\n  isSearch: boolean;\n  loading: boolean = false;\n  searchInProgress: boolean = false;\n  filterLabel: string;\n  dataSource: DynamicDataSource;\n  nodeList;\n\n  @Output() focusStatus: EventEmitter<AddressSpaceNode> = new EventEmitter<AddressSpaceNode>();\n  private moId: string = '';\n  constructor(\n    private addressSpaceService: AddressSpaceService,\n    private opcuaService: OpcuaService\n  ) {}\n\n  async ngOnInit() {\n    this.filterLabel = gettext('Filter…');\n    this.moId = this.opcuaService.getMoId();\n  }\n\n  ngOnDestroy() {\n    // The BehaviourSubject will store the last array of ancestorNodes from the previous search\n    // this would cause the component while subscribing in the init-phase to the subject to travers\n    // to the last searched node again. From user perspective it does not make sense, because the user\n    // left the Address space (tab) and should loose the context and just request a new search or\n    // browse the tree manually.\n    this.addressSpaceService.resetTreeToRootNode();\n  }\n\n  async searchNodes() {\n    this.searchInProgress = true;\n    this.clearNodeListAndCheckSearchString();\n    if (this.isSearch) {\n      this.currentNode = undefined;\n      this.nodeList = await this.addressSpaceService.getSearchedNodes(this.searchKey, this.moId);\n      this.searchInProgress = false;\n      this.nodeList.resultLabel = gettext('Results found');\n    }\n  }\n\n  clearNodeListAndCheckSearchString() {\n    this.isSearch = this.searchKey !== undefined && this.searchKey !== '' ? true : false;\n    if (!this.isSearch) {\n      this.searchInProgress = false;\n    }\n  }\n\n  clearSearch() {\n    this.isSearch = false;\n    this.searchKey = '';\n    this.currentNode = undefined;\n  }\n\n  getIcon(nodeClassName: string) {\n    return this.addressSpaceService.getIcon(nodeClassName);\n  }\n\n  async selectNode(node) {\n    if (node && node.nodeId && node.nodeId.length > 0) {\n      const res = await this.addressSpaceService.getNodeById(this.moId, node.nodeId);\n      this.toggleCurrentNode((await res.json()) as AddressSpaceNode);\n    }\n  }\n\n  toggleCurrentNode(node: AddressSpaceNode) {\n    this.currentNode = this.isNodeSet(node) ? undefined : node;\n  }\n\n  backHandler(node) {\n    this.isSearch = false;\n    this.focusStatus.emit(node);\n    this.toggleCurrentNode(node);\n  }\n\n  isNodeSet(node: AddressSpaceNode) {\n    if (this.currentNode !== undefined && this.currentNode.nodeId === node.nodeId) {\n      return true;\n    }\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { AppStateService } from '@c8y/ngx-components';\n\n@Injectable()\nexport class OpcuaMicroserviceGuard implements CanActivate {\n  microserviceName: string = 'opcua-mgmt-service';\n  checkApp: Promise<boolean>;\n\n  constructor(\n    private app: AppStateService\n  ) {}\n\n  canActivate() {\n    if (!this.checkApp) {\n      this.checkApp = this.app.isApplicationAvailable(this.microserviceName);\n    }\n    return this.checkApp;\n  }\n}\n","import { Component, Input, OnInit, Output, EventEmitter, OnChanges, ViewChild } from '@angular/core';\nimport { gettext, DroppedFile, DropAreaComponent } from '@c8y/ngx-components';\nimport { OpcuaServer, OpcuaServerConfig } from './opcua-server.interface';\nimport { cloneDeep, has} from 'lodash-es';\nimport { OpcuaService } from './opcuaService';\n\n@Component({\n  selector: 'opcua-server-config',\n  templateUrl: './opcua-server-config.component.html'\n})\nexport class OpcuaServerConfigComponent implements OnInit, OnChanges {\n  currentSecMode: string;\n  fileName: string = '';\n  targetConnectionState: string = '1';\n  minIntervalNumber: number = 1;\n  connectionStatusLabel: string = '';\n  @ViewChild('opcuaConfigForm', {static: false}) opcuaConfigForm: any;\n  @ViewChild(DropAreaComponent, {static: false}) dropArea: DropAreaComponent;\n  @Output() canceled = new EventEmitter<OpcuaServer>();\n  @Output() removed = new EventEmitter<OpcuaServer>();\n  @Output() saved = new EventEmitter<OpcuaServer>();\n  @Input() set server(server: OpcuaServer) {\n    if (server) {\n      this._server = cloneDeep(server);\n      this.model = cloneDeep(server);\n      this.fileName = this.model.config.keystoreFilename;\n\n      if (server.id && server.id === 'new') {\n        // enabled connection state\n        this.targetConnectionState = '1';\n        this.model.config.targetConnectionState = 'enabled';\n      } else {\n        this.targetConnectionState = (this.model.config.targetConnectionState === 'enabled') ? '1' : '0';\n      }\n      this.updateConnectionStatusLabel(this._server);\n      this.setNewPassword();\n    }\n  }\n\n  get server(): OpcuaServer {\n    return this._server;\n  }\n\n  model: OpcuaServer;\n  changePassword: boolean = false;\n  initialPasswordRequired: boolean = true;\n  securityModes: string[];\n  authenticationMode: any;\n  authenticationModes: any[];\n  NONE: string = 'NONE';\n  SIGN: string = 'SIGN';\n  SIGN_ENC: string = 'SIGN_ENCRYPT';\n  securityPolicies: any = {\n    sign: [\n      `BASIC256_${this.SIGN}`,\n      `BASIC128RSA15_${this.SIGN}`,\n      `BASIC256SHA256_${this.SIGN}`\n    ],\n    sign_enc: [\n      `BASIC256_${this.SIGN_ENC}`,\n      `BASIC128RSA15_${this.SIGN_ENC}`,\n      `BASIC256SHA256_${this.SIGN_ENC}`,\n    ]\n  };\n  private ANONYM = {\n    id: 1,\n    value: gettext('Anonymous')\n  };\n  private USER_PASSWORD = {\n    id: 2,\n    value: gettext('Username/Password')\n  };\n  private KEY_BASED = {\n    id: 3,\n    value: gettext('Key-based Authentication')\n  };\n  private _server: OpcuaServer;\n  private opcuaService: OpcuaService;\n  private initialKeystore = {\n    lastModified: 0,\n    name: '',\n    type: '',\n    slice: null,\n    size: 0\n  } as File;\n  private keystore: File = this.initialKeystore;\n  private authSwitch: boolean = false;\n\n  constructor(opcuaService: OpcuaService) {\n    this.opcuaService = opcuaService;\n  }\n\n  async ngOnInit() {\n    this.authSwitch = false;\n\n    this.securityModes = [\n      this.NONE,\n      this.SIGN,\n      this.SIGN_ENC\n    ];\n\n    this.authenticationModes = [\n      this.ANONYM,\n      this.USER_PASSWORD,\n      this.KEY_BASED\n    ];\n\n    this.setCurrentAuthenticationMode();\n    this.setCurrentSecurityMode();\n  }\n\n  ngOnChanges() {\n    this.setCurrentSecurityMode();\n    this.setCurrentAuthenticationMode();\n  }\n\n  cancel() {\n    this.canceled.emit(this.model);\n    this._server = null;\n  }\n\n  async remove() {\n    await this.removeKeystore(this.model);\n    this.removed.emit(this.model);\n    this._server = null;\n  }\n\n  async save() {\n    if (this.keystore && this.keystore.size > 0 && this.keystore.name && this.keystore.name.length > 0) {\n      const response = await this.uploadKeystore(this.model.config.keystoreBinaryId);\n\n      if (response && response.data && response.data.id) {\n        this.model.config.keystoreBinaryId = response.data.id;\n      }\n\n      // if the keystore was uploaded successful we can remove\n      // the local keystore. This will prevent another request to binary api\n      // when the user will edit other inputs in the form and hit save again.\n      this.keystore = this.initialKeystore;\n    }\n\n    // will remove keystore (binary) when the user switched\n    // authentication settings from key-based to anonymous or username/password\n    if (this.authSwitch) {\n      this.removeKeystore(this.server);\n    }\n\n    // when the user sets a new password, make sure to mark it as\n    // \"not encrypted\" by setting passwordEncrypted to false\n    const userPassword: string = this.getModelConfig('userPassword');\n    if (userPassword && userPassword.length > 0) {\n        this.model.config.passwordEncrypted = false;\n    }\n\n    this.saved.emit(this.model);\n  }\n\n  uploadFile(droppedFiles: DroppedFile[]) {\n    if (droppedFiles.length === 1) {\n      this.keystore = droppedFiles[0].file;\n      this.fileName = this.keystore.name;\n    } else {\n      // dropped more than one file\n      console.warn('Tried to import... Import aborted.');\n    }\n  }\n\n  setPolicy(data: any) {\n    if (data === this.NONE) {\n      this.model.config.securityMode = this.NONE;\n    } else if (data === this.SIGN) {\n      this.model.config.securityMode = this.securityPolicies.sign[0];\n    } else if (data === this.SIGN_ENC) {\n      this.model.config.securityMode = this.securityPolicies.sign_enc[0];\n    }\n  }\n\n  setServerConnection(data: string) {\n    this.model.config.targetConnectionState = (data !== '0') ? 'enabled' : 'disabled';\n  }\n\n  updateAuthentication(data: any) {\n    if (data && data.id) {\n      switch (data.id) {\n        // Anonymous\n        case 1:\n          this.resetUserAuthentication();\n          this.resetKeyBasedAuthentication();\n          break;\n\n        // User/Password\n        case 2:\n          this.resetKeyBasedAuthentication();\n          this.restoreUserData();\n          this.setNewPassword();\n          break;\n\n        // Key-based\n        case 3:\n          this.resetUserAuthentication();\n          this.restoreKeyBasedData();\n          break;\n\n        default:\n          console.warn('Invalid authentication id', data.id);\n          break;\n      }\n    }\n  }\n\n  updateConnectionStatusLabel(server) {\n    const connected = server.c8y_Connection && server.c8y_Connection.status === 'CONNECTED';\n    const label = connected ? gettext('Connected') : gettext('Disconnected');\n    this.connectionStatusLabel = label;\n  }\n\n  setNewPassword() {\n    const username: string = this.getModelConfig('userName');\n    if (username && username.length > 0) {\n      // userName is given, NO need to change the password because it is already set\n      this.changePassword = false;\n      this.initialPasswordRequired = false;\n    } else {\n      // no userName in response, so require the user to set the initial pw\n      this.changePassword = true;\n      this.initialPasswordRequired = true;\n    }\n  }\n\n  toggleChangePassword() {\n    this.changePassword = !this.changePassword;\n    // When the user hides the pw-input field but has entered a\n    // string to it before, we need to discard the changes reflected in the model\n    // otherwise we PUT it with the model when user hits the save button\n    if (!this.changePassword) {\n      if (this.getModelConfig('userPassword')) {\n        delete this.model.config.userPassword;\n      }\n    }\n  }\n\n  private uploadKeystore(binaryId?: string) {\n    if (!binaryId) {\n      return this.opcuaService.uploadKeystore(this.keystore);\n    } else if (binaryId && binaryId.length > 0) {\n      // update existing binary\n      return this.opcuaService.updateKeystore(binaryId, this.keystore);\n    }\n  }\n\n  private removeKeystore(server: OpcuaServer) {\n    if (server &&\n      server.config &&\n      server.config.keystoreBinaryId &&\n      server.config.keystoreBinaryId.length > 0) {\n      this.authSwitch = false;\n      return this.opcuaService.removeKeystore(this.server.config.keystoreBinaryId);\n    }\n  }\n\n  private resetUserAuthentication() {\n    this.model.config.userName = null;\n    this.model.config.userPassword = null;\n    this.model.config.userIdentityMode = 'none';\n  }\n\n  private resetKeyBasedAuthentication() {\n    this.authSwitch = true;\n\n    this.model.config.keystorePass = null;\n    this.model.config.certificatePass = null;\n    this.model.config.keystoreBinaryId = '';\n    this.model.config.keystoreFilename = '';\n    this.model.config.userIdentityMode = 'none';\n  }\n\n  private restoreUserData() {\n    this.model.config.userName = this._server.config.userName;\n    this.model.config.userIdentityMode = 'userAndPassword';\n  }\n\n  private restoreKeyBasedData() {\n    this.authSwitch = false;\n    this.model.config.keystorePass = this._server.config.keystorePass;\n    this.model.config.certificatePass = this._server.config.certificatePass;\n    this.model.config.keystoreBinaryId = this._server.config.keystoreBinaryId;\n    this.model.config.keystoreFilename = this._server.config.keystoreFilename;\n    this.model.config.userIdentityMode = 'certificate';\n  }\n\n  private getServerConfig(): OpcuaServerConfig {\n    let cfg: OpcuaServerConfig = {\n      securityMode: this.NONE,\n      userIdentityMode: 'none'\n    };\n    if (this.server && this.server.config) {\n      cfg = this.server.config;\n    }\n    return cfg;\n  }\n\n  private setCurrentSecurityMode() {\n    const { securityMode } = this.getServerConfig();\n    if (securityMode) {\n      const foundInSign = this.securityPolicies.sign.find((el) => el === securityMode);\n      if (foundInSign) {\n        this.currentSecMode = this.SIGN;\n      } else {\n        const foundInSignEncrypt = this.securityPolicies.sign_enc.find((el) => el === securityMode);\n        foundInSignEncrypt ? this.currentSecMode = this.SIGN_ENC : this.currentSecMode = this.NONE;\n      }\n    }\n  }\n\n  private setCurrentAuthenticationMode() {\n    const {\n      userIdentityMode\n    } = this.getServerConfig();\n\n    switch (userIdentityMode) {\n      case 'certificate':\n        this.authenticationMode = this.KEY_BASED;\n        break;\n\n      case 'userAndPassword':\n        this.authenticationMode = this.USER_PASSWORD;\n        break;\n\n      case 'Anonymous':\n        this.authenticationMode = this.ANONYM;\n        break;\n\n      case 'UserName':\n        this.authenticationMode = this.USER_PASSWORD;\n        break;\n\n      case 'Certificate':\n        this.authenticationMode = this.KEY_BASED;\n        break;\n\n      default:\n        this.authenticationMode = this.ANONYM;\n        break;\n    }\n  }\n\n  private getModelConfig(fragment: string) {\n    if (this.model && this.model.config) {\n      if (fragment && fragment.length > 0) {\n        return has(this.model.config, fragment) ? this.model.config[`${fragment}`] : undefined;\n      }\n    }\n    return undefined;\n  }\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { OpcuaServer } from './opcua-server.interface';\n\n@Component({\n  selector: 'opcua-server-list',\n  templateUrl: './opcua-server-list.component.html'\n})\nexport class OpcuaServerListComponent {\n  @Input() serverList: OpcuaServer[] = [];\n  @Output() present = new EventEmitter<OpcuaServer>();\n\n  presentConfig(server: OpcuaServer) {\n    server.active = true;\n    this.present.emit(server);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\n\n@Injectable()\nexport class OpcuaServerGuard implements CanActivate {\n  type = 'c8y_OpcuaServer';\n  canActivate( { data } ) {\n    const { contextData } = data;\n    return contextData && contextData.type === this.type;\n  }\n}\n","import { Component, OnInit, Optional } from '@angular/core';\nimport { AlertService, ContextRouteComponent, gettext } from '@c8y/ngx-components';\nimport { TranslateService } from '@ngx-translate/core';\nimport { OpcuaServer } from './opcua-server.interface';\nimport { OpcuaService } from './opcuaService';\n\n@Component({\n  selector: 'opcua-servers',\n  templateUrl: './opcua-servers.component.html'\n})\nexport class OpcuaServersComponent implements OnInit {\n  serverObjectList: OpcuaServer[] = [];\n  initialServerObject: OpcuaServer = {\n    id: '',\n    name: 'New Server',\n    config: {\n      securityMode: 'NONE',\n      keystorePass: null,\n      keystoreBinaryId: null,\n      keystoreFilename: '',\n      certificatePass: null,\n      serverUrl: '',\n      userName: '',\n      userPassword: '',\n      rescanCron: null,\n      timeout: null,\n      autoReconnect: true,\n      statusCheckInterval: null,\n      valid: true\n    },\n    quickInfo: {\n      padlock: 'unlock',\n      padlockMsg: ''\n    },\n    active: true\n  };\n  server: OpcuaServer;\n  active: boolean = false;\n  private moId: string;\n  private NEW_SERVER_ID: string;\n\n  constructor(\n    private opcuaService: OpcuaService,\n    private alertService: AlertService,\n    private translateService: TranslateService,\n    @Optional() private context: ContextRouteComponent\n  ) {\n    this.moId = '';\n    this.NEW_SERVER_ID = 'new';\n    this.initialServerObject.id = this.NEW_SERVER_ID;\n  }\n\n  async ngOnInit() {\n    this.moId = this.opcuaService.getMoId();\n    if (this.moId && this.moId.length > 0) {\n      const res = await this.opcuaService.getServers(this.moId);\n      if (res && res.status !== 200) {\n        const data = res.json ? await res.json() : undefined;\n        this.alertService.addServerFailure({ data, res });\n      } else {\n        this.serverObjectList = (await res.json()) as OpcuaServer[];\n        this.serverObjectList.map(server => this.setQuickInfo(server));\n      }\n    }\n  }\n\n  localServerObjectExist() {\n    return !!this.serverObjectList.find(server => server.id === this.NEW_SERVER_ID);\n  }\n\n  addServer() {\n    const server: OpcuaServer = this.initialServerObject;\n    this.serverObjectList.push(server);\n    this.onPresent(server);\n  }\n\n  onSaved(server: OpcuaServer) {\n    if (server && server.id) {\n      server.gatewayId = this.moId;\n      if (server.id === this.NEW_SERVER_ID) {\n        this.createServer(server);\n      } else {\n        this.updateServer(server);\n      }\n    }\n  }\n\n  reloadTabs() {\n    if (this.context) {\n      this.context.refreshTabs();\n    }\n  }\n\n  onCanceled(server: OpcuaServer) {\n    if (server && server.id && server.id === this.NEW_SERVER_ID) {\n      this.removeServerObjectListById(server.id);\n    } else {\n      // update activity status for UI\n      this.serverObjectList.forEach(item => {\n        if (item.id === server.id) {\n          item.active = false;\n        }\n      });\n      // When server id is not 'new' we just close the details\n      delete this.server;\n    }\n  }\n\n  onRemoved(server: OpcuaServer) {\n    if (server.id === this.NEW_SERVER_ID) {\n      this.onCanceled(server);\n    } else {\n      this.removeServer(server);\n    }\n  }\n\n  async getKeystore(binaryId: string) {\n    const { data } = await this.opcuaService.getKeystore(binaryId);\n    return data;\n  }\n\n  async onPresent(server: OpcuaServer) {\n    if (\n      server &&\n      server.id !== this.NEW_SERVER_ID &&\n      server.config &&\n      server.config.keystoreBinaryId\n    ) {\n      try {\n        const mo = await this.getKeystore(server.config.keystoreBinaryId);\n        server.config.keystoreFilename = mo.name;\n      } catch (ex) {\n        this.server = Object.assign({}, server);\n        console.log('Could not get existing keystore:', ex);\n      }\n    }\n    if (this.serverObjectList.length > 0) {\n      this.serverObjectList.forEach(item => {\n        item.active = false;\n\n        if (item.id === server.id) {\n          item.active = true;\n          server.active = item.active;\n        }\n      });\n      this.setQuickInfo(server);\n      this.server = Object.assign({}, server);\n    }\n  }\n\n  private async createServer(server: OpcuaServer) {\n    const response = await this.opcuaService.createServer(server);\n    const svr = (await response.json()) as OpcuaServer;\n    this.updateServerObjectListById(this.NEW_SERVER_ID, svr);\n    this.reloadTabs();\n  }\n\n  private async updateServer(server: OpcuaServer) {\n    const updatedServer = (await this.opcuaService.updateServer(server)) as OpcuaServer;\n    if (updatedServer) {\n      this.updateServerObjectListById(updatedServer.id, updatedServer);\n    }\n  }\n\n  private async removeServer(server: OpcuaServer) {\n    try {\n      await this.opcuaService.removeServer(server);\n      this.removeServerObjectListById(server.id);\n      this.reloadTabs();\n    } catch (ex) {\n      console.log('Could not remove OPC UA server:', ex);\n    }\n  }\n\n  private removeServerObjectListById(id: string) {\n    this.serverObjectList.forEach((item, index) => {\n      if (item.id === id) {\n        this.serverObjectList.splice(index, 1);\n        delete this.server;\n      }\n    });\n  }\n\n  private updateServerObjectListById(id: string, server: OpcuaServer) {\n    const idx = this.serverObjectList.findIndex(item => item.id === id);\n    if (idx > -1) {\n      this.setQuickInfo(server);\n      this.serverObjectList[idx] = server;\n    }\n    delete this.server;\n  }\n\n  private setQuickInfo(server: OpcuaServer) {\n    server.quickInfo = {\n      padlock: 'unlock',\n      padlockMsg: ''\n    };\n\n    if (server && server.config) {\n      if (server.config.securityMode) {\n        server.quickInfo.padlock = server.config.securityMode !== 'NONE' ? 'lock' : 'unlock';\n        server.quickInfo.padlockMsg = this.translateService.instant(\n          gettext('The security policy is set to {{param}}.'),\n          { param: server.config.securityMode }\n        );\n      }\n    }\n  }\n}\n","import { Component, Input } from '@angular/core';\r\nimport {NgForm, ControlContainer} from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'opcua-device-protocol-description',\r\n  templateUrl: './opcua-device-protocol-description.html',\r\n  viewProviders: [{provide: ControlContainer, useExisting: NgForm}]\r\n})\r\n\r\nexport class OpcuaDeviceProtocolDescription {\r\n  _model: any;\r\n  autoScan: string;\r\n  @Input() set model(_model) {\r\n    this.moId = _model.referencedServerId;\r\n    this._model = _model;\r\n    this.autoScan = _model.enabled ? '1' : '0';\r\n  }\r\n\r\n  private moId: string = '';\r\n\r\n  setAutoScanOption(data: string) {\r\n    this._model.enabled = data !== '0' ? true : false;\r\n  }\r\n}\r\n","import { BehaviorSubject, Observable, merge, Subscription } from 'rxjs';\nimport { NestedTreeControl } from '@angular/cdk/tree';\nimport { CollectionViewer, SelectionChange } from '@angular/cdk/collections';\nimport { AddressSpaceService, AddressSpaceNode } from './address-space.service';\nimport { map } from 'rxjs/operators';\n\nexport class DynamicDataSource {\n  dataChange = new BehaviorSubject<AddressSpaceNode[]>([]);\n\n  get data(): AddressSpaceNode[] {\n    return this.dataChange.value;\n  }\n  set data(value: AddressSpaceNode[]) {\n    this.treeControl.dataNodes = value;\n    this.dataChange.next(value);\n  }\n\n  constructor(\n    public treeControl: NestedTreeControl<AddressSpaceNode>,\n    private addressSpaceService: AddressSpaceService,\n    private serverId: string\n  ) {\n    this.treeControl.isExpanded = (node: AddressSpaceNode) => node.expanded;\n  }\n\n  connect(collectionViewer: CollectionViewer): Observable<AddressSpaceNode[]> {\n    this.treeControl.expansionModel.changed.subscribe(\n      (change: SelectionChange<AddressSpaceNode>) => {\n        if (change.added || change.removed) {\n          this.handleTreeControl(change);\n        }\n      }\n    );\n    return merge(collectionViewer.viewChange, this.dataChange).pipe(map(() => this.data));\n  }\n\n  /** Handle expand/collapse behaviors */\n  handleTreeControl(change: SelectionChange<AddressSpaceNode>) {\n    if (change.added) {\n      change.added.forEach(node => this.toggleNode(node, true));\n    }\n    if (change.removed) {\n      change.removed\n        .slice()\n        .reverse()\n        .forEach(node => this.toggleNode(node, false));\n    }\n  }\n\n  /**\n   * Toggle the node, remove from display list\n   */\n  async toggleNode(addressSpaceNode: AddressSpaceNode, expand: boolean) {\n    if (!addressSpaceNode.children || addressSpaceNode.children.length === 0) {\n      addressSpaceNode.currentlyLoadingChildren = true;\n\n      const res = await this.addressSpaceService.getChildrenOf(addressSpaceNode, this.serverId);\n      const children = (await res.json()) as AddressSpaceNode[];\n\n      addressSpaceNode.children = children || [];\n      addressSpaceNode.children = addressSpaceNode.children.map((node: AddressSpaceNode) => {\n        node.parentNode = addressSpaceNode;\n        return node;\n      });\n      addressSpaceNode.currentlyLoadingChildren = false;\n\n      this.treeControl.expand(addressSpaceNode);\n    }\n\n    addressSpaceNode.expanded = expand && addressSpaceNode.children.length > 0;\n    this.refreshNestedTree(this.data);\n\n    return Promise.resolve(addressSpaceNode);\n  }\n  catch() {\n    // do nothing\n  }\n\n  private refreshNestedTree(treeData: AddressSpaceNode[]) {\n    // necessary to rerender tree, otherwise new nodes will not\n    // appear, but they are added to the list.\n    this.data = [];\n    this.dataChange.next(treeData);\n    this.triggerResize(); // to resize the modal window when creating a new device protocol\n  }\n\n  private triggerResize() {\n    setTimeout(() => {\n      try {\n        window.dispatchEvent(new Event('resize'));\n      } catch (error) {\n        // do nothing\n      }\n    }, 200);\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  OnInit,\n  EventEmitter,\n  OnDestroy,\n  OnChanges,\n  SimpleChanges\n} from '@angular/core';\nimport { AddressSpaceNode, AddressSpaceService, NodeNavigationData } from './address-space.service';\nimport { OpcuaService } from './opcuaService';\nimport { AlertService } from '@c8y/ngx-components';\nimport { DynamicDataSource } from './dynamic-data-source';\nimport { NestedTreeControl } from '@angular/cdk/tree';\nimport { clone } from 'lodash';\nimport { Subject, Subscription } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'opcua-address-space-tree',\n  templateUrl: './opcua-address-space-tree.component.html'\n})\nexport class OpcuaAddressSpaceTreeComponent implements OnInit, OnDestroy, OnChanges {\n  @Input()\n  set moId(id: string) {\n    this._moId = id || undefined;\n  }\n\n  @Input() node;\n  @Input() focusEmitter: EventEmitter<AddressSpaceNode> = new EventEmitter<AddressSpaceNode>();\n  @Output() selectedNode: EventEmitter<AddressSpaceNode> = new EventEmitter<AddressSpaceNode>();\n  nestedTreeControl: NestedTreeControl<AddressSpaceNode>;\n  dataSource: DynamicDataSource = null;\n  focused: AddressSpaceNode;\n  loading: boolean = false;\n  subscriptionRef: Subscription;\n  nodeNavDataSubscription: Subscription;\n  private _moId: string;\n  private destroy$: Subject<any> = new Subject<any>();\n\n  constructor(\n    private addressSpaceService: AddressSpaceService,\n    private opcuaService: OpcuaService,\n    private alertService: AlertService\n  ) {}\n\n  getChildren = (node: AddressSpaceNode) => (node.expanded ? node.children : []);\n  hasChild = (_: number, _nodeData: AddressSpaceNode) =>\n    this.addressSpaceService.childrenAvailable(_nodeData.references)\n\n  ngOnInit() {\n    this.initializeDataSet();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.moId && changes.moId.previousValue && (changes.moId.currentValue !== changes.moId.previousValue)) {\n      this.initializeDataSet();\n    }\n  }\n\n  initializeDataSet() {\n    this.nodeNavDataSubscription = this.addressSpaceService\n      .getNodeNavData$()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(nodeNavData => this.openNode(nodeNavData));\n    this.subscriptionRef = this.focusEmitter.subscribe(node => {\n      this.focused = this.isFocusedNode(node) ? undefined : node;\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n    // clean up the address-space-tree\n    this.addressSpaceService.resetTreeToRootNode();\n\n    if (this.nodeNavDataSubscription && !this.nodeNavDataSubscription.closed) {\n      this.nodeNavDataSubscription.unsubscribe();\n    }\n\n    if (this.subscriptionRef && !this.subscriptionRef.closed) {\n      this.subscriptionRef.unsubscribe();\n    }\n  }\n\n  async openNode(nodeNavData: NodeNavigationData) {\n    const { node, selectedAncestorIds } = nodeNavData;\n    let nodeId;\n\n    // We just set the nodeId when the selectedAncestorIds variable an empty array.\n    // If selectedAncestorIds contain any id we assume that the tree should be travsersed beginning\n    // from the root node.\n    if (node && node.nodeId && selectedAncestorIds && selectedAncestorIds.length === 0) {\n      nodeId = node.nodeId;\n    }\n    // Always recreate the tree when routing to a specific nested node,\n    // because previous modifications to the tree-structure could cause errors\n    // while traversing with 'old' tree-data\n    // -----------------\n    // setupTree is able to handle nodeId = undefined\n    await this.setupTree(nodeId);\n\n    if (!selectedAncestorIds || selectedAncestorIds.length === 0) {\n      return;\n    }\n\n    if (nodeNavData && this.dataSource) {\n      const clonedAncestors = clone(selectedAncestorIds);\n      clonedAncestors.shift();\n\n      const n = await this.dataSource.toggleNode(this.dataSource.data[0], true);\n      this.setChildNodes(n.children, clonedAncestors);\n\n      this.toggleFocusedNode(node);\n    }\n  }\n\n  setChildNodes(nodes: AddressSpaceNode[], ids: string[]) {\n    if (nodes) {\n      ids.forEach(async id => {\n        const match = nodes.find(n => n.nodeId === id);\n        if (match && ids.length > 0) {\n          const idx = ids.findIndex(value => value === id);\n          if (idx >= 0) {\n            ids.splice(idx, 1);\n          }\n          const toggledNode = await this.dataSource.toggleNode(match, true);\n          this.setChildNodes(toggledNode.children, ids);\n        }\n      });\n    }\n  }\n\n  async setupTree(nodeId?: string) {\n    this.loading = true;\n\n    if (!this._moId || this._moId.length === 0) {\n      this._moId = this.opcuaService.getMoId();\n    }\n\n    // addressSpaceService.getNode returns either the root node of the server (moId)\n    // or if nodeId !== undefined the node with given nodeId\n    const res = await this.addressSpaceService.getNode(this._moId, nodeId);\n    if (res) {\n      if (res.status !== 200) {\n        const data = res.json ? await res.json() : undefined;\n        this.alertService.addServerFailure({ data, res });\n        this.dataSource = undefined;\n      } else {\n        const rootNode = (await res.json()) as AddressSpaceNode;\n        this.nestedTreeControl = new NestedTreeControl<AddressSpaceNode>(this.getChildren);\n        this.dataSource = new DynamicDataSource(\n          this.nestedTreeControl,\n          this.addressSpaceService,\n          this._moId\n        );\n        this.dataSource.data = [rootNode];\n      }\n      this.loading = false;\n    } else {\n      this.loading = false;\n    }\n  }\n\n  getMoId() {\n    if (!this._moId || this._moId.length === 0) {\n      return this.opcuaService.getMoId();\n    }\n    return this._moId;\n  }\n\n  getIcon(nodeClassName) {\n    return this.addressSpaceService.getIcon(nodeClassName);\n  }\n\n  toggleFocusedNode(node) {\n    const relativePath = [];\n    this.getRelativePath(node, relativePath);\n    node.relativePath = relativePath;\n\n    this.selectedNode.emit(node);\n    this.focused = this.isFocusedNode(node) ? undefined : node;\n  }\n\n  isFocusedNode(node: AddressSpaceNode) {\n    if (this.focused) {\n      return node.nodeId === this.focused.nodeId;\n    }\n    return false;\n  }\n\n  private getRelativePath(node: AddressSpaceNode, relativePath: string[]) {\n    if (node.parentNode) {\n      relativePath.unshift(node.browseName);\n      this.getRelativePath(node.parentNode, relativePath);\n    }\n  }\n}\n","import { Component, Input, OnInit, EventEmitter } from '@angular/core';\nimport { AutoApplyConstraints } from './opcua-protocol-device-type.interface';\nimport { IManagedObject, InventoryService } from '@c8y/client';\nimport { gettext } from '@c8y/ngx-components';\nimport { set, find, map, reject } from 'lodash-es';\n@Component({\n  selector: 'opcua-auto-apply',\n  templateUrl: './opcua-auto-apply-settings.component.html'\n})\nexport class OpcuaAutoApplySettingsComponent implements OnInit {\n  opcuaServers: IManagedObject[] = [];\n  selectedItems: IManagedObject[] = [];\n  filteredList: IManagedObject[] = [];\n  checked = {};\n  readonly sizeToShowFilter: number = 5;\n  constraints: AutoApplyConstraints = {\n    browsePathMatchesRegex: '',\n    matchesNodeIds: [],\n    serverObjectHasFragment: '',\n    matchesServerIds: []\n  };\n  placeholderSelectServerIds: string = gettext('Select server IDs from list');\n  showServerIds: boolean;\n  showBrowsePath: boolean;\n  showServerFragment: boolean;\n  showRootNodes: boolean;\n  updateSelectedItem: EventEmitter<boolean> = new EventEmitter();\n  private _model: IManagedObject;\n\n  constructor(private inventoryService: InventoryService) {}\n\n  async ngOnInit() {\n    const { data } = await this.inventoryService.list({\n      pageSize: 1000,\n      withTotalPages: true,\n      type: 'c8y_OpcuaServer'\n    });\n\n    this.opcuaServers = data;\n    this.filteredList = data;\n    this.selectedItems = [];\n\n    const { matchesServerIds } = this.constraints;\n\n    data.forEach(server => {\n      if (\n        matchesServerIds &&\n        matchesServerIds.length > 0 &&\n        matchesServerIds.find(itemId => itemId === server.id)\n      ) {\n        this.selectedItems.push(server);\n        this.checked[server.id] = true;\n        this.showServerIds = true;\n      }\n    });\n  }\n\n  @Input() set model(model) {\n    if (model && model.applyConstraints) {\n      this.constraints = model.applyConstraints as AutoApplyConstraints;\n    }\n    this._model = model;\n  }\n\n  get model() {\n    return this._model;\n  }\n\n  serverIdsSelected(items: IManagedObject[]) {\n    if (this.constraints) {\n      this.constraints.matchesServerIds = items.map((item: IManagedObject) => item.id);\n    }\n    this.selectedItems = items;\n  }\n\n  onChangeNodeId(event) {\n    if (event.target.checked) {\n      this.showRootNodes = true;\n      this.add();\n    } else {\n      this.showRootNodes = false;\n      this.constraints.matchesNodeIds = [];\n    }\n  }\n\n  onChangeShowServerIds(event) {\n    if (!event.target.checked) {\n      this.constraints.matchesServerIds = [];\n      this.showServerIds = false;\n      this.selectedItems = [];\n      this.checked = {};\n    } else {\n      this.showServerIds = true;\n    }\n  }\n\n  onChangeShowBrowsePath(event) {\n    if (!event.target.checked) {\n      this.constraints.browsePathMatchesRegex = '';\n      this.showBrowsePath = false;\n    } else {\n      this.showBrowsePath = true;\n    }\n  }\n\n  onChangeShowServerFragment(event) {\n    if (!event.target.checked) {\n      this.constraints.serverObjectHasFragment = '';\n      this.showServerFragment = false;\n    } else {\n      this.showServerFragment = true;\n    }\n  }\n\n  add() {\n    this.constraints.matchesNodeIds.push('');\n  }\n\n  remove(index) {\n    this.constraints.matchesNodeIds.splice(index, 1);\n  }\n\n  trackByFn(index: any, item: any) {\n    return index;\n  }\n\n  updateConstraints(items) {\n    if (this.constraints) {\n      this.constraints.matchesServerIds = items.map((item: IManagedObject) => item.id);\n    }\n  }\n\n  filterItems(filterText) {\n    if (filterText.length !== 0) {\n      const search = new RegExp(filterText, 'i');\n      this.filteredList = this.opcuaServers.filter(({ name, id }) => {\n        return search.test(name) || search.test(id);\n      });\n    } else {\n      this.filteredList = this.opcuaServers;\n    }\n  }\n\n  isChecked(item) {\n    return this.checked[item.id];\n  }\n\n  onSelect(selected, item) {\n    if (!selected) {\n      this.selectedItems = reject(this.selectedItems, { id: item.id });\n      delete this.checked[item.id];\n    } else {\n      this.selectedItems.push(item);\n      this.checked[item.id] = selected;\n    }\n    this.updateSelectedItem.emit(true);\n    this.updateConstraints(this.selectedItems);\n  }\n}\n","import { CdkTreeModule } from '@angular/cdk/tree';\nimport { CdkStepperModule } from '@angular/cdk/stepper';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport {\n  CoreModule,\n  DeviceStatusModule,\n  DropAreaModule,\n  FormsModule,\n  gettext,\n  HOOK_ROUTE,\n  Route,\n  ViewContext\n} from '@c8y/ngx-components';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { AddressSpaceService } from './address-space.service';\nimport { OpcuaAddressSpaceDetailComponent } from './opcua-address-space-detail.component';\nimport { OpcuaDeviceProtocolDetailComponent } from './opcua-device-protocol-detail.component';\nimport { OpcuaDeviceProtocolDataReportingComponent } from './opcua-device-protocol-data-reporting.component';\nimport { OpcuaDeviceProtocolMapping } from './opcua-device-protocol-mapping.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { OpcuaDeviceProtocolObjectMapping } from './opcua-device-protocol-object-mapping.component';\nimport { OpcuaDeviceProtocolMappingCustomAction } from './opcua-device-protocol-mapping-customaction.component';\nimport { OpcuaDeviceProtocolObjectMappingStatus } from './opcua-device-protocol-object-mapping-status-icon.component';\nimport { OpcuaAddressSpaceComponent } from './opcua-address-space.component';\nimport { OpcuaAgentGuard } from './opcua-agent.guard';\nimport { OpcuaMicroserviceGuard } from './opcua-microservice.guard';\nimport { OpcuaServerConfigComponent } from './opcua-server-config.component';\nimport { OpcuaServerListComponent } from './opcua-server-list.component';\nimport { OpcuaServerGuard } from './opcua-server.guard';\nimport { OpcuaServersComponent } from './opcua-servers.component';\nimport { OpcuaService } from './opcuaService';\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { PopoverModule } from 'ngx-bootstrap/popover';\nimport { OpcuaDeviceProtocolDescription } from './opcua-device-protocol-description.component';\nimport { OpcuaAddressSpaceTreeComponent } from './opcua-address-space-tree.component';\nimport { OpcuaAutoApplySettingsComponent } from './opcua-auto-apply-settings.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { OpcuaDeviceProtocolBrowsePathValidation } from './opcua-device-protocol-browse-path-validation.directive';\n\nconst routes: Route[] = [\n  {\n    context: ViewContext.Device,\n    path: 'opcua-servers',\n    component: OpcuaServersComponent,\n    label: gettext('OPC UA server'),\n    icon: 'server',\n    canActivate: [OpcuaAgentGuard, OpcuaMicroserviceGuard]\n  },\n  {\n    context: ViewContext.Device,\n    path: 'address-space',\n    component: OpcuaAddressSpaceComponent,\n    label: gettext('Address space'),\n    icon: 'cloud-network',\n    canActivate: [OpcuaServerGuard, OpcuaMicroserviceGuard]\n  }\n];\n\nconst deviceProtocolRoutes: Route[] = [\n  {\n    path: 'deviceprotocols/opcuaV2/:id',\n    component: OpcuaDeviceProtocolDetailComponent\n  }\n];\n\n@NgModule({\n  declarations: [\n    OpcuaServersComponent,\n    OpcuaServerListComponent,\n    OpcuaServerConfigComponent,\n    OpcuaAddressSpaceComponent,\n    OpcuaAddressSpaceTreeComponent,\n    OpcuaAddressSpaceDetailComponent,\n    OpcuaDeviceProtocolDescription,\n    OpcuaDeviceProtocolDetailComponent,\n    OpcuaDeviceProtocolDataReportingComponent,\n    OpcuaDeviceProtocolMapping,\n    OpcuaDeviceProtocolObjectMapping,\n    OpcuaDeviceProtocolMappingCustomAction,\n    OpcuaDeviceProtocolObjectMappingStatus,\n    OpcuaAutoApplySettingsComponent,\n    OpcuaDeviceProtocolBrowsePathValidation\n  ],\n  imports: [\n    CoreModule,\n    FormsModule,\n    ReactiveFormsModule,\n    DropAreaModule,\n    ButtonsModule,\n    CdkTreeModule,\n    RouterModule.forRoot(deviceProtocolRoutes, { useHash: true }),\n    TooltipModule.forRoot(),\n    PopoverModule.forRoot(),\n    DeviceStatusModule,\n    BrowserAnimationsModule,\n    CollapseModule.forRoot(),\n    BsDropdownModule.forRoot()\n  ],\n  entryComponents: [\n    OpcuaAddressSpaceTreeComponent,\n    OpcuaAddressSpaceComponent,\n    OpcuaServersComponent\n  ],\n  providers: [\n    OpcuaAgentGuard,\n    OpcuaServerGuard,\n    OpcuaMicroserviceGuard,\n    OpcuaService,\n    AddressSpaceService,\n    {\n      provide: HOOK_ROUTE,\n      useValue: routes,\n      multi: true\n    }\n  ]\n})\nexport class OpcuaProtocolModule {}\n","import { downgradeComponent } from '@angular/upgrade/static';\nimport { OpcuaAddressSpaceTreeComponent } from '../opcua-address-space-tree.component';\nexport const opcuaAddressSpaceTreeComponent = downgradeComponent({\n  component: OpcuaAddressSpaceTreeComponent,\n  inputs: ['moId'],\n  outputs: ['selectedNode']\n});\n","import * as angular from 'angular';\nimport { registerNgModule } from '@c8y/ng1-modules';\nimport { opcuaAddressSpaceTreeComponent } from './downgraded.components';\n\nconst NAME = 'c8y.upgrade.opcua';\n\nconst angularJsModule = angular\n  .module(NAME, [])\n  .directive('c8yOpcuaAddressSpaceTree', opcuaAddressSpaceTreeComponent);\n\nexport const ng1Modules = [NAME];\n\nregisterNgModule(ng1Modules);\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["get","assign","omit","unset","set"],"mappings":"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"}