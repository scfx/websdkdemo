{"version":3,"file":"c8y-ngx-components-diagnostics.js","sources":["../../diagnostics/diagnostics.service.ts","../../diagnostics/diagnostics-tab.guard.ts","../../diagnostics/diagnostics.component.ts","../../diagnostics/diagnostics.module.ts","../../diagnostics/c8y-ngx-components-diagnostics.ts"],"names":[],"mappings":"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","sourcesContent":["import { Observable } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport {\n  IManagedObject,\n  IResultList,\n  InventoryBinaryService,\n  IOperation,\n  OperationService,\n  OperationStatus\n} from '@c8y/client';\nimport { AlertService, gettext, ModalService } from '@c8y/ngx-components';\nimport { assign } from 'lodash-es';\nimport { switchMap } from 'rxjs/operators';\n\n@Injectable()\nexport class DiagnosticsService {\n  readonly fragment = 'c8y_DiagnosticReport';\n  constructor(\n    private operationService: OperationService,\n    private inventoryBinary: InventoryBinaryService,\n    private modalService: ModalService,\n    private alertService: AlertService\n  ) {}\n\n  isSupportedDevice(device): boolean {\n    const supportedOperations = (device && device.c8y_SupportedOperations) || [];\n    return supportedOperations.includes(this.fragment);\n  }\n\n  getOperations$(device$: Observable<IManagedObject>): Observable<IResultList<IOperation>> {\n    return device$.pipe(\n      switchMap(device =>\n        this.operationService.list({\n          deviceId: device.id,\n          fragmentType: this.fragment,\n          dateFrom: new Date(0).toISOString(),\n          dateTo: new Date(Date.now()).toISOString(),\n          revert: true,\n          pageSize: 10,\n          withTotalPages: true\n        })\n      )\n    );\n  }\n\n  async createOperation(deviceId: string) {\n    const operation = {\n      deviceId,\n      description: gettext('Diagnostic file request'),\n      [this.fragment]: {}\n    };\n    try {\n      await this.operationService.create(operation);\n      this.alertService.success(gettext('Diagnostic file request sent.'));\n    } catch (error) {\n      this.alertService.addServerFailure(error);\n    }\n  }\n\n  async deleteOperation(operation: IOperation) {\n    try {\n      const result = await this.modalService.confirm(\n        gettext('Delete diagnostic file'),\n        gettext('You are about to delete this diagnostic file. Do you want to proceed?'),\n        'danger',\n        {\n          ok: gettext('Delete'),\n          cancel: gettext('Cancel')\n        }\n      );\n\n      if (result) {\n        this.deleteDiagnosticsBinary(operation);\n      }\n    } catch (error) {\n      // Do nothing\n    }\n  }\n\n  async cancelOperation(operation: IOperation) {\n    try {\n      const operationAfterUpdate = (\n        await this.operationService.update({\n          id: operation.id,\n          status: OperationStatus.FAILED,\n          failureReason: gettext('Operation cancelled by user.')\n        })\n      ).data;\n      assign(operation, operationAfterUpdate);\n      this.alertService.success(gettext('Diagnostic file request cancelled.'));\n    } catch (ex) {\n      this.alertService.addServerFailure(ex);\n    }\n  }\n\n  private getOperation(op: IOperation) {\n    if (!op) {\n      return null;\n    }\n    return op && op[this.fragment];\n  }\n\n  private async deleteDiagnosticsBinary(op: IOperation) {\n    const operation = this.getOperation(op);\n    if (operation && operation.file) {\n      const { file } = operation;\n      try {\n        const binaryId = this.inventoryBinary.getIdFromUrl(file);\n        const result = await this.inventoryBinary.delete(binaryId);\n        if (result) {\n          this.deleteDiagnosticsFragment(op);\n        }\n      } catch (err) {\n        if (err.res.status === 404) {\n          // In case the file is already deleted via other means we want to delete the fragment\n          this.deleteDiagnosticsFragment(op);\n        } else {\n          const msg = gettext('Could not delete the diagnostic file.');\n          this.alertService.danger(msg);\n        }\n      }\n    }\n  }\n\n  private async deleteDiagnosticsFragment(op: IOperation) {\n    const deleteOp = {\n      id: op.id,\n      status: op.status,\n      [this.fragment]: null\n    };\n    try {\n      const operationAfterUpdate = (await this.operationService.update(deleteOp)).data;\n      assign(op, operationAfterUpdate);\n      this.alertService.success(gettext('Diagnostic file deleted.'));\n    } catch (error) {\n      this.alertService.addServerFailure(error);\n    }\n  }\n}\n","import { DiagnosticsService } from './diagnostics.service';\nimport { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot } from '@angular/router';\n\n@Injectable()\nexport class DiagnosticsTabGuard implements CanActivate {\n  constructor(private diagnosticsService: DiagnosticsService) {}\n\n  canActivate(route: ActivatedRouteSnapshot) {\n    const device = route.data.contextData || route.parent.data.contextData;\n    return this.diagnosticsService.isSupportedDevice(device);\n  }\n}\n","import { DiagnosticsService } from './diagnostics.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Component } from '@angular/core';\nimport { BehaviorSubject, pipe } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport {\n  ForOfRealtimeOptions,\n  operationStatusClasses,\n  operationStatusIcons,\n  OperationRealtimeService\n} from '@c8y/ngx-components';\nimport { IManagedObject, IOperation } from '@c8y/client';\n@Component({\n  templateUrl: './diagnostics.component.html',\n  selector: 'c8y-diagnostics'\n})\nexport class DiagnosticsComponent {\n  statusIcons = operationStatusIcons;\n  statusClasses = operationStatusClasses;\n  deviceId: string = this.route.snapshot.parent.data.contextData.id;\n  device$ = new BehaviorSubject<IManagedObject>(this.route.snapshot.parent.data.contextData);\n  operations$ = this.diagnosticService.getOperations$(this.device$);\n  operationsPipe = pipe(\n    map((ops: IOperation[]) => ops.filter(op => op[this.diagnosticService.fragment]))\n  );\n  realtimeOptions: ForOfRealtimeOptions = {\n    entityOrId: this.deviceId,\n    removeOnUpdate: true,\n    insertOnUpdate: true\n  } as ForOfRealtimeOptions;\n  operationCount: number;\n\n  constructor(\n    private route: ActivatedRoute,\n    private diagnosticService: DiagnosticsService,\n    public operationRealtime: OperationRealtimeService\n  ) {}\n\n  onDiagnosticRequest() {\n    this.diagnosticService.createOperation(this.deviceId);\n  }\n\n  onDelete(operation: IOperation) {\n    this.diagnosticService.deleteOperation(operation);\n  }\n\n  onCancel(operation: IOperation) {\n    this.diagnosticService.cancelOperation(operation);\n  }\n}\n","import { DiagnosticsTabGuard } from './diagnostics-tab.guard';\nimport { ListGroupModule } from '@c8y/ngx-components';\nimport { RouterModule } from '@angular/router';\nimport { DiagnosticsService } from './diagnostics.service';\nimport { CoreModule, gettext, HOOK_ROUTE, Route, ViewContext } from '@c8y/ngx-components';\nimport { DiagnosticsComponent } from './diagnostics.component';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { BsDropdownModule, BsDropdownConfig } from 'ngx-bootstrap/dropdown';\nimport { RepositoryModule } from '@c8y/ngx-components/repository';\n\n@NgModule({\n  imports: [\n    CoreModule,\n    RouterModule,\n    CommonModule,\n    ListGroupModule,\n    RepositoryModule,\n    BsDropdownModule,\n    TooltipModule\n  ],\n  declarations: [DiagnosticsComponent],\n  exports: [DiagnosticsComponent],\n  providers: [\n    DiagnosticsService,\n    BsDropdownConfig,\n    DiagnosticsTabGuard,\n    {\n      provide: HOOK_ROUTE,\n      useValue: [\n        {\n          context: ViewContext.Device,\n          path: 'diagnostics',\n          component: DiagnosticsComponent,\n          label: gettext('Diagnostics'),\n          icon: 'stethoscope',\n          canActivate: [DiagnosticsTabGuard],\n          priority: 200\n        }\n      ] as Route[],\n      multi: true\n    }\n  ]\n})\nexport class DiagnosticsModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}