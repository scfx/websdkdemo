{"version":3,"file":"c8y-ngx-components-repository.js","sources":["../../repository/configuration-device-tab/configuration-filter.pipe.ts","../../repository/repository.model.ts","../../repository/configuration-device-tab/device-configuration.service.ts","../../repository/repository.service.ts","../../repository/configuration-device-tab/save-to-repository.component.ts","../../repository/configuration-device-tab/configuration-preview.component.ts","../../repository/configuration-device-tab/device-configuration-list.component.ts","../../repository/configuration-device-tab/text-based-configuration.component.ts","../../repository/configuration-device-tab/device-configuration.component.ts","../../repository/configuration-device-tab/device-configuration.guard.ts","../../repository/configuration-device-tab/source-code-preview.component.ts","../../repository/configuration/configuration-detail.component.ts","../../repository/configuration/configuration-list.component.ts","../../repository/file-download/link-render-type.enum.ts","../../repository/file-download/file-download.component.ts","../../repository/select-modal/repository-select-modal.component.ts","../../repository/firmware-device-tab/firmware-device-tab.component.ts","../../repository/firmware-device-tab/firmware-device-tab.guard.ts","../../repository/firmware/add-firmware-modal.component.ts","../../repository/firmware/add-firmware-patch-modal.component.ts","../../repository/firmware/firmware-details.component.ts","../../repository/firmware/firmware-list.component.ts","../../repository/repository-navigation-factory.ts","../../repository/software-device-tab/advanced-software.service.ts","../../repository/software-device-tab/device-software-changes.component.ts","../../repository/software-device-tab/device-software-list.component.ts","../../repository/software-device-tab/installed-software.component.ts","../../repository/software-device-tab/software-device-tab.component.ts","../../repository/software-device-tab/software-device-tab.guard.ts","../../repository/software/add-software-modal.component.ts","../../repository/software/columns/device-type.cell-renderer.component.ts","../../repository/software/columns/name.cell-renderer.component.ts","../../repository/software/columns/software-type.cell-renderer.component.ts","../../repository/software/columns/software-type.filtering-form-renderer.component.ts","../../repository/software/columns/versions.cell-renderer.component.ts","../../repository/software/software-type.component.ts","../../repository/software/software-details.component.ts","../../repository/software/columns/description.grid-column.ts","../../repository/software/columns/device-type.grid-column.ts","../../repository/software/columns/name.grid-column.ts","../../repository/software/columns/software-type.grid-column.ts","../../repository/software/columns/versions.grid-column.ts","../../repository/software/software-list.component.ts","../../repository/repository.module.ts","../../repository/c8y-ngx-components-repository.ts"],"names":["_map","filter"],"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","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\nimport { SupportedConfigurationItem } from '../repository.model';\n\n@Pipe({\n  name: 'configurationFilterPipe'\n})\nexport class ConfigurationFilterPipe implements PipeTransform {\n  transform(items: any[], filterTerm: string): any {\n    return filterTerm.trim().length === 0\n      ? items\n      : items.filter(\n          (item: SupportedConfigurationItem) =>\n            this.filterContainString(item.name, filterTerm) ||\n            this.filterContainString(item.deviceType, filterTerm)\n        );\n  }\n\n  private filterContainString(name: string, filterTerm: string) {\n    const term = filterTerm.toLowerCase().trim();\n    return name && name.toLowerCase().indexOf(term) > -1;\n  }\n}\n","import { IManagedObject } from '@c8y/client';\n\nexport enum RepositoryType {\n  FIRMWARE = 'c8y_Firmware',\n  SOFTWARE = 'c8y_Software',\n  CONFIGURATION = 'c8y_ConfigurationDump'\n}\n\nexport const REPOSITORY_BINARY_TYPES = {\n  [RepositoryType.SOFTWARE]: 'c8y_SoftwareBinary',\n  [RepositoryType.FIRMWARE]: 'c8y_FirmwareBinary',\n  [RepositoryType.CONFIGURATION]: 'c8y_ConfigurationDumpBinary'\n};\n\nexport interface ModalModel {\n  selected?: { id?: string; name?: string; [key: string]: any };\n  version?: string;\n  dependency?: { c8y_Firmware: { version: string } };\n  patchVersion?: string;\n  description?: string;\n  deviceType?: string;\n  softwareType?;\n  binary?: {\n    file?: File;\n    url?: string;\n  };\n}\n\nexport interface RepositoryCategory extends Partial<IManagedObject> {\n  type: string;\n  description?: string;\n  c8y_Filter?: {\n    type: string;\n  };\n}\n\nexport interface FirmwareBinary extends Partial<IManagedObject> {\n  type: 'c8y_FirmwareBinary';\n  c8y_Firmware: {\n    version: string;\n    url: string;\n  };\n}\n\nexport interface FirmwarePatchBinary extends FirmwareBinary {\n  c8y_Patch: {\n    dependency: string;\n  };\n}\n\nexport interface SoftwareBinary extends Partial<IManagedObject> {\n  type: string;\n  c8y_Software: {\n    version: string;\n    url: string;\n  };\n}\n\nexport type RepositoryBinary = FirmwareBinary | SoftwareBinary | FirmwarePatchBinary;\n\nexport interface SelectedRepositoryBinary {\n  id?: string;\n  name: string;\n  version: string;\n  url: string;\n  dependency?: string;\n  c8y_Patch?: boolean;\n  isPatch?: boolean;\n  patchDependency?: string;\n}\n\nexport interface DeviceFirmware {\n  version: string;\n  url: string;\n  name: string;\n}\n\nexport interface DeviceSoftware {\n  name: string;\n  version?: string;\n  url: string;\n  softwareType?: string;\n}\n\nexport interface DeviceSoftwareChange extends DeviceSoftware {\n  action: 'install' | 'delete';\n}\n\nexport interface ConfigurationSnapshot {\n  id?: string;\n  time: string;\n  name: string;\n  binaryUrl?: string;\n  binary?: any;\n  binaryType?: any;\n  deviceType?: string;\n  configurationType?: string;\n  description?: string;\n}\n\nexport interface SupportedConfigurationItem {\n  name: string;\n  deviceType?: string;\n  configurationType?: string;\n  isLegacy?: boolean;\n}\n\nexport interface DeviceConfigurationListEmptyState {\n  icon?: string;\n  title?: string;\n  text?: string;\n}\n\nexport interface SoftwareFilterCriteria {\n  name?: string;\n  softwareType?: string;\n}\n\nexport enum DeviceConfigurationOperation {\n  UPLOAD_CONFIG = 'c8y_UploadConfigFile',\n  DOWNLOAD_CONFIG = 'c8y_DownloadConfigFile',\n  CONFIG = 'c8y_Configuration',\n  SEND_CONFIG = 'c8y_SendConfiguration'\n}\n","import { EventEmitter, Injectable } from '@angular/core';\nimport { DeviceConfigurationOperation } from '../repository.model';\nimport { IManagedObject } from '@c8y/client';\n\n@Injectable()\nexport class DeviceConfigurationService {\n  configurationsUpdated = new EventEmitter<any>();\n\n  updateConfigurations(repositorySnapsOnly?: boolean) {\n    this.configurationsUpdated.emit(repositorySnapsOnly);\n  }\n\n  hasAnySupportedOperation(\n    mo: IManagedObject,\n    operation: DeviceConfigurationOperation | DeviceConfigurationOperation[]\n  ) {\n    const supported = mo.c8y_SupportedOperations as [];\n    if (!supported) {\n      return false;\n    }\n    if (!Array.isArray(operation)) {\n      operation = [operation];\n    }\n    return supported.some(supportedOperation => operation.includes(supportedOperation));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  EventBinaryService,\n  EventService,\n  IdReference,\n  IEvent,\n  IFetchResponse,\n  IIdentified,\n  IManagedObject,\n  IManagedObjectBinary,\n  InventoryBinaryService,\n  InventoryService,\n  IOperation,\n  IResult,\n  IResultList,\n  OperationService,\n  OperationStatus,\n  QueriesUtil\n} from '@c8y/client';\nimport { AlertService, gettext, OperationRealtimeService } from '@c8y/ngx-components';\nimport {\n  assign,\n  cloneDeep,\n  find,\n  forEach,\n  get,\n  head,\n  isNil,\n  isString,\n  isUndefined,\n  map as _map,\n  pick,\n  remove,\n  set\n} from 'lodash-es';\nimport { defer, from, merge, Observable, of, throwError } from 'rxjs';\nimport { filter, map, switchMap, take, takeWhile, withLatestFrom } from 'rxjs/operators';\nimport {\n  ConfigurationSnapshot,\n  DeviceFirmware,\n  DeviceSoftware,\n  DeviceSoftwareChange,\n  FirmwareBinary,\n  FirmwarePatchBinary,\n  ModalModel,\n  RepositoryBinary,\n  RepositoryCategory,\n  RepositoryType,\n  REPOSITORY_BINARY_TYPES,\n  SelectedRepositoryBinary,\n  SoftwareBinary\n} from './repository.model';\n\n@Injectable()\nexport class RepositoryService {\n  readonly dateFrom = new Date(0);\n  readonly dateTo = new Date(Date.now() + 86400000); // 1 day in the future\n  private queriesUtil: QueriesUtil;\n\n  constructor(\n    private inventory: InventoryService,\n    private inventoryBinary: InventoryBinaryService,\n    private operation: OperationService,\n    private alert: AlertService,\n    private event: EventService,\n    private operationRealtime: OperationRealtimeService,\n    private eventBinary: EventBinaryService\n  ) {\n    this.queriesUtil = new QueriesUtil();\n  }\n\n  /**\n   * Lists repository entries of given type.\n   * @param type The type of repository entries to list.\n   * @param options Extra listing options.\n   */\n  listRepositoryEntries(\n    type: RepositoryType,\n    options?: {\n      /** Additional query. */\n      query?: any;\n      /** (deprecated - to be removed) Only include entries with matching partial names. */\n      partialName?: string;\n      /** Include entries with matching partial text in the specified properties. */\n      partialTextFilter?: { partialText: string; properties: string[] };\n      /** Exclude legacy entries. */\n      skipLegacy?: boolean;\n      /** Exclude default ordering. */\n      skipDefaultOrder?: boolean;\n      /** Other request params. */\n      params?: any;\n    }\n  ) {\n    const defaultOrder = [{ name: 1 }];\n    const defaultFilters = { type };\n    const legacyFilters = { __has: `url` };\n    let filters = {};\n\n    let fullQuery = (options && options.query) || {};\n    if (!options || (options && !options.skipDefaultOrder)) {\n      fullQuery = this.queriesUtil.addOrderbys(fullQuery, defaultOrder, 'prepend');\n    }\n\n    fullQuery = this.queriesUtil.addAndFilter(fullQuery, defaultFilters);\n\n    if (options && options.partialTextFilter) {\n      const { partialText, properties } = options.partialTextFilter;\n      const orFilter = { __or: properties.map(property => ({ [property]: `*${partialText}*` })) };\n      fullQuery = this.queriesUtil.addAndFilter(fullQuery, orFilter);\n    }\n\n    if (options && options.partialName) {\n      // backwards compatibility if\n      fullQuery = this.queriesUtil.addAndFilter(fullQuery, { name: `*${options.partialName}*` });\n    }\n\n    if (options && options.skipLegacy) {\n      fullQuery = this.queriesUtil.addAndFilter(fullQuery, { __not: legacyFilters });\n    }\n\n    filters = {\n      query: this.queriesUtil.buildQuery(fullQuery),\n      pageSize: 50,\n      withTotalPages: true,\n      ...((options && options.params) || {})\n    };\n    return this.inventory.list(filters);\n  }\n\n  // TODO: merge with create()\n  async save(data: ModalModel, type: RepositoryType, mo: Partial<IManagedObject> = {}) {\n    switch (type) {\n      case RepositoryType.CONFIGURATION: {\n        Object.assign(mo, {\n          type: RepositoryType.CONFIGURATION,\n          configurationType: data.selected ? data.selected.configurationType : undefined,\n          name: data.version,\n          description: data.description,\n          deviceType: data.deviceType,\n          c8y_Global: {}\n        });\n        if (!data.deviceType && mo.id) {\n          mo.deviceType = null;\n        }\n        if (!data.selected && mo.id) {\n          mo.configurationType = null;\n        }\n        break;\n      }\n    }\n\n    const existingUrl = mo.url;\n    if (data.binary.url) {\n      mo.url = data.binary.url;\n    } else if (data.binary.file) {\n      const response = await this.inventoryBinary.create(data.binary.file, {\n        c8y_Global: {}\n      } as Partial<IManagedObject>);\n      mo.url = response.data.self;\n    }\n\n    if (mo.id) {\n      return this.updateEntry(mo, existingUrl);\n    }\n    return this.createEntry(mo);\n  }\n\n  async create(modal: ModalModel, type: RepositoryType) {\n    switch (type) {\n      case RepositoryType.FIRMWARE:\n      case RepositoryType.SOFTWARE:\n        return this.createFirmwareOrSoftware(modal, type);\n    }\n  }\n\n  async createFirmwareOrSoftware(\n    modal: ModalModel,\n    type: RepositoryType\n  ): Promise<RepositoryCategory> {\n    let binary: IManagedObjectBinary;\n    let binaryURL: string;\n    let repositoryEntry: RepositoryCategory;\n    let repositoryBinary: FirmwareBinary | SoftwareBinary;\n    const mos = [];\n    const {\n      selected: { id: selectedId },\n      binary: { file, url }\n    } = modal;\n    try {\n      if (file) {\n        ({ data: binary } = await this.saveBinary(file));\n        ({ self: binaryURL } = binary);\n        mos.push(binary);\n      } else {\n        binaryURL = url;\n      }\n\n      ({ data: repositoryEntry } = await this.createOrUpdateRepositoryEntry(modal, type));\n      if (isNil(selectedId)) {\n        mos.push(repositoryEntry);\n      }\n\n      ({ data: repositoryBinary } = await this.createRepositoryBinary(\n        modal,\n        binaryURL,\n        type,\n        repositoryEntry\n      ));\n      mos.push(repositoryBinary);\n\n      if (file) {\n        await this.linkBinary(repositoryBinary, binary);\n      }\n\n      return repositoryEntry;\n    } catch (error) {\n      this.cleanUp(mos);\n      this.errorMsg();\n\n      // Propagate error\n      throw error;\n    }\n  }\n\n  saveBinary(file: File): Promise<IResult<IManagedObjectBinary>> {\n    return this.inventoryBinary.create(file, { c8y_Global: {} } as Partial<IManagedObject>);\n  }\n\n  createOrUpdateRepositoryEntry(\n    modal: ModalModel,\n    type: RepositoryType\n  ): Promise<IResult<RepositoryCategory>> {\n    const {\n      selected: { id, name },\n      description,\n      deviceType\n    } = modal;\n\n    const mo = {\n      id,\n      name: id ? undefined : name,\n      description,\n      type: id ? undefined : type,\n      c8y_Global: {}\n    };\n\n    if (deviceType) {\n      set(mo, 'c8y_Filter.type', deviceType);\n    }\n\n    if (modal.softwareType) {\n      set(mo, 'softwareType', modal.softwareType.softwareType);\n    }\n\n    return id\n      ? (this.inventory.update(mo) as Promise<IResult<RepositoryCategory>>)\n      : (this.inventory.create(mo) as Promise<IResult<RepositoryCategory>>);\n  }\n\n  createRepositoryBinary(\n    modal: ModalModel,\n    binaryURL: string,\n    type: RepositoryType,\n    parent: RepositoryCategory\n  ): Promise<IResult<FirmwareBinary | SoftwareBinary | FirmwarePatchBinary>> {\n    const mo = this.prepareRepositoryBinaryMO(modal, binaryURL, type);\n\n    return this.inventory.childAdditionsCreate(mo, parent) as Promise<\n      IResult<FirmwareBinary | SoftwareBinary | FirmwarePatchBinary>\n    >;\n  }\n\n  prepareRepositoryBinaryMO(modal: ModalModel, binaryURL: string, type: RepositoryType) {\n    const { version, patchVersion, dependency } = modal;\n    const result = {\n      type: REPOSITORY_BINARY_TYPES[type],\n      [type]: {\n        url: binaryURL\n      },\n      c8y_Global: {}\n    };\n\n    if (dependency) {\n      set(result, [type, 'version'], patchVersion);\n      assign(result, {\n        c8y_Patch: {\n          dependency: dependency.c8y_Firmware.version\n        }\n      });\n    } else {\n      set(result, [type, 'version'], version);\n    }\n    return result;\n  }\n\n  async linkBinary(\n    repositoryBinary: FirmwareBinary | SoftwareBinary,\n    binary: IManagedObjectBinary\n  ) {\n    const { id: repositoryBinaryId } = repositoryBinary;\n    if (binary) {\n      const { id: binaryId } = binary;\n      return this.inventory.childAdditionsAdd(binaryId, repositoryBinaryId);\n    }\n  }\n\n  cleanUp(mosToDelete: IIdentified[]) {\n    mosToDelete.forEach(mo => {\n      const { c8y_IsBinary } = mo;\n      isUndefined(c8y_IsBinary) ? this.delete(mo) : this.inventoryBinary.delete(mo);\n    });\n  }\n\n  delete(entity: IIdentified): Promise<IResult<null>> {\n    return this.inventory.delete(entity, { forceCascade: true });\n  }\n\n  errorMsg() {\n    const msg = gettext('Failed to save');\n    this.alert.danger(msg);\n  }\n\n  getBaseVersionsCount$(entry: IManagedObject): Observable<number> {\n    if (this.isLegacyEntry(entry)) {\n      return of(1);\n    }\n    return from(this.listBaseVersions(entry, { pageSize: 1, withTotalPages: true })).pipe(\n      map(({ paging }) => paging.totalPages)\n    );\n  }\n\n  getBaseVersionFromMO(mo: RepositoryBinary): string {\n    return this.isPatch(mo) ? get(mo, 'c8y_Patch.dependency') : get(mo, 'c8y_Firmware.version');\n  }\n\n  isPatch(mo: RepositoryBinary): boolean {\n    return !!get(mo, 'c8y_Patch.dependency');\n  }\n\n  getPatchVersionsCount$(entry: IManagedObject, baseVersion: FirmwareBinary): Observable<number> {\n    if (this.isLegacyEntry(baseVersion)) {\n      return of(0);\n    }\n    return from(\n      this.listPatchVersions(entry, baseVersion, { pageSize: 1, withTotalPages: true })\n    ).pipe(map(({ paging }) => paging.totalPages));\n  }\n\n  isLegacyEntry(entry: Partial<IManagedObject>): boolean {\n    return Boolean(entry.url);\n  }\n\n  /**\n   * Lists all versions (base and patch ones) of given top level entry.\n   * Versions are ordered by creation time (assuming the earlier created, the older the version).\n   * @param entry Top level repository entry.\n   * @param params Additional query params.\n   */\n  listAllVersions(entry: Partial<IManagedObject>, params = {}) {\n    if (this.isLegacyEntry(entry)) {\n      return this.getBaseVersionResultListForLegacyEntry(entry);\n    }\n\n    const VERSION_FILTER_ORDER = {\n      __filter: {},\n      __orderby: [{ 'creationTime.date': -1 }, { creationTime: -1 }]\n    };\n    return this.listChildren(entry, VERSION_FILTER_ORDER, params);\n  }\n\n  /**\n   * Lists base versions of given top level entry.\n   * Versions are ordered by creation time (assuming the earlier created, the older the version).\n   * @param entry Top level repository entry.\n   * @param params Additional query params.\n   */\n  listBaseVersions(entry: Partial<IManagedObject>, params = {}) {\n    if (this.isLegacyEntry(entry)) {\n      return this.getBaseVersionResultListForLegacyEntry(entry);\n    }\n\n    const NO_PATCH_FILTER_ORDER = {\n      __filter: {\n        __not: { __has: 'c8y_Patch' }\n      },\n      __orderby: [{ 'creationTime.date': -1 }, { creationTime: -1 }]\n    };\n    return this.listChildren(entry, NO_PATCH_FILTER_ORDER, params);\n  }\n\n  /**\n   * Lists patch versions of given base version under the entry.\n   * Versions are ordered by creation time (assuming the earlier created, the older the version).\n   * @param entry Top level repository entry.\n   * @param baseVersion Base version.\n   * @param params Additional query params.\n   */\n  listPatchVersions(entry: IManagedObject, baseVersion: FirmwareBinary | string, params = {}) {\n    const version = isString(baseVersion) ? baseVersion : get(baseVersion, 'c8y_Firmware.version');\n    const PATCH_FILTER_ORDER = {\n      __filter: {\n        'c8y_Patch.dependency': version\n      },\n      __orderby: [{ 'creationTime.date': -1 }, { creationTime: -1 }]\n    };\n    return this.listChildren(entry, PATCH_FILTER_ORDER, params);\n  }\n\n  /**\n   * Lists patch versions of given base version under the entry including the base version.\n   * Versions are ordered by creation time (assuming the earlier created, the older the version).\n   * In terms of legacy base version the entry gets transformed to fit the needed data model.\n   * @param entry Top level repository entry.\n   * @param baseVersion Base version.\n   * @param params Additional query params.\n   */\n  listBaseVersionAndPatches(entry: IManagedObject, baseVersion: IManagedObject, params = {}) {\n    if (this.isLegacyEntry(entry)) {\n      return Promise.resolve({\n        data: [\n          Object.assign(\n            {\n              c8y_Firmware: {\n                version: entry.version,\n                url: entry.url\n              }\n            },\n            entry\n          )\n        ]\n      });\n    }\n\n    const PATCH_FILTER_ORDER = {\n      __filter: {\n        __or: {\n          'c8y_Patch.dependency': baseVersion.c8y_Firmware.version,\n          'c8y_Firmware.version': baseVersion.c8y_Firmware.version\n        }\n      },\n      __orderby: [{ 'c8y_Patch.dependency': 1 }, { 'c8y_Firmware.version': 1 }]\n    };\n    return this.listChildren(entry, PATCH_FILTER_ORDER, params);\n  }\n\n  listChildren(entry: Partial<IManagedObject>, filters = {}, params: any = {}) {\n    const childrenFilters = { __bygroupid: entry.id };\n    const query = this.queriesUtil.addAndFilter(filters, childrenFilters);\n    // FIXME: needed because of issue in forOf directive (...)\n    params.withTotalPages = true;\n    return this.inventory.listQuery(query, params);\n  }\n\n  /**\n   * Fetches all items from the list starting with the provided page.\n   * @param firstPage The first page of the list to fetch all items for.\n   */\n  async fetchAllItemsFromList(firstPage) {\n    let allItems;\n\n    if (!firstPage.then) {\n      allItems = [...firstPage];\n    } else {\n      let { paging, data: items } = await firstPage;\n      allItems = [...items];\n\n      while (paging && paging.nextPage) {\n        ({ paging, data: items } = await paging.next());\n        allItems = [...allItems, ...items];\n      }\n    }\n\n    return allItems;\n  }\n\n  /**\n   * Gets top level repository entry managed object for base or patch version.\n   * @param mo Base or patch version managed object with parents.\n   */\n  getRepositoryEntryMO$(mo: IManagedObject): Observable<IManagedObject | undefined> {\n    if (!mo) {\n      return of(undefined);\n    }\n    const [reference] = get(mo, 'additionParents.references');\n    const id = get(reference, 'managedObject.id');\n    return id\n      ? from(this.inventory.detail(id, { withChildren: false })).pipe(map(({ data }) => data))\n      : of(undefined);\n  }\n  /**\n   * Gets base or patch version managed object.\n   * @param deviceRepositoryFragment Device repository fragment.\n   * @param type Top level repository entry type.\n   * @param configuration Configuration object with options:\n   * - **skipLegacy** - `boolean` - Exclude legacy entries.\n   * - **filters** - `object` - Filter object.\n   *\n   * @deprecated as it doesn't support 'missing url' case\n   */\n  getRepositoryBinaryMoByVersion(\n    deviceRepositoryFragment: DeviceFirmware | DeviceSoftware,\n    type: RepositoryType,\n    { skipLegacy = false, filters = {} }: { skipLegacy?: boolean; filters?: object } = {}\n  ): Promise<IManagedObject> {\n    const { version, url, name } = deviceRepositoryFragment;\n    const repositoryBinaryType = REPOSITORY_BINARY_TYPES[type];\n    let query;\n    const newModelBaseVersionQuery = {\n      [`${type}.version`]: version,\n      [`${type}.url`]: url,\n      type: repositoryBinaryType\n    };\n    const legacyVersionQuery = { url, type, name };\n    filters = { withChildren: false, withParents: true, ...filters };\n\n    if (skipLegacy) {\n      query = {\n        __and: {\n          ...newModelBaseVersionQuery\n        }\n      };\n    } else {\n      query = {\n        __or: [{ __and: { ...newModelBaseVersionQuery } }, { __and: { ...legacyVersionQuery } }]\n      };\n    }\n\n    return this.inventory.listQuery(query, filters).then(({ data }) => head(data));\n  }\n\n  getBinaryName$(binaryUrl: string): Observable<string> {\n    if (!binaryUrl) {\n      return of('---');\n    }\n\n    const binaryId = this.inventoryBinary.getIdFromUrl(binaryUrl);\n    if (!binaryId) {\n      return of(binaryUrl);\n    }\n    return defer(() => this.inventory.detail(binaryId).then(result => result.data)).pipe(\n      map(mo => mo.name)\n    );\n  }\n\n  /**\n   * Generates an inventory query object which can be used to find\n   * repository entries of specified type matching the type of provided device.\n   * @param repositoryType The type of repository entries which will be queried with the generated query.\n   * @param device The device for which matching repository entries will be queried with the generated query.\n   */\n\n  getDeviceTypeQuery(repositoryType: RepositoryType, device: IManagedObject): object {\n    let result = { type: repositoryType };\n    if (repositoryType === RepositoryType.CONFIGURATION) {\n      if (device.type) {\n        result = this.queriesUtil.addAndFilter(result, {\n          __or: [{ deviceType: device.type }, { __not: { __has: `deviceType` } }]\n        });\n      }\n    } else {\n      result = this.queriesUtil.addAndFilter(result, {\n        __or: [\n          { 'c8y_Filter.type': device.type },\n          { 'c8y_Filter.type': '' },\n          { __not: { __has: `c8y_Filter.type` } }\n        ]\n      });\n    }\n    return result;\n  }\n\n  /**\n   * Generates an inventory query object which can be used to find configuration repository entries\n   * matching the type of provided device and specified configuration type.\n   * @param device The device for which matching repository entries will be queried with the generated query.\n   * @param configurationType Configuration type for which matching repository entries will be queried with the generated query.\n   */\n  getConfigurationTypeQuery(device: IManagedObject, configurationType: string): object {\n    const query = this.getDeviceTypeQuery(RepositoryType.CONFIGURATION, device);\n    return this.queriesUtil.addAndFilter(query, {\n      __or: [\n        { configurationType },\n        { configurationType: '' },\n        { __not: { __has: `configurationType` } }\n      ]\n    });\n  }\n\n  /**\n   * Gets the list of software installed in the device in the uniform format.\n   * Supports c8y_SoftwareList and c8y_Software fragments.\n   * @param device The device whose software list should be returned.\n   */\n  getDeviceSoftwareList(device: IManagedObject): DeviceSoftware[] {\n    if (device.c8y_SoftwareList) {\n      return cloneDeep(device.c8y_SoftwareList);\n    }\n    if (device.c8y_Software) {\n      return _map(device.c8y_Software, (version, name) => ({ name, version }));\n    }\n    return [];\n  }\n\n  /**\n   * Prepares a software update operation for given device and the list of changes, and sends it to the device.\n   * @param device The device which the operation should be prepared for and sent to.\n   * @param changes The list of software changes which should be applied.\n   */\n  async createSoftwareUpdateOperation(\n    device: IManagedObject,\n    changes: DeviceSoftwareChange[]\n  ): Promise<IOperation> {\n    const operation = this.getSoftwareUpdateOperation(device, changes);\n    return (await this.operation.create(operation)).data;\n  }\n\n  /**\n   * Prepares a software update operation for given device and changes.\n   * Returned operation type depends on device's supported operations.\n   * Supports c8y_SoftwareUpdate, c8y_SoftwareList, and c8y_Software operations.\n   * @param device The device for which operation should be prepared.\n   * @param changes The list of software changes which should be applied.\n   */\n  getSoftwareUpdateOperation(device: IManagedObject, changes: DeviceSoftwareChange[]): IOperation {\n    const operation: IOperation = {\n      deviceId: device.id,\n      description: `Apply software changes: ${changes\n        .map(\n          change =>\n            `${change.action} \"${change.name}\"${\n              change.version ? ` (version: ${change.version})` : ''\n            }`\n        )\n        .join(', ')}`\n    };\n    if (device.c8y_SupportedOperations.includes('c8y_SoftwareUpdate')) {\n      operation.c8y_SoftwareUpdate = cloneDeep(changes);\n    } else if (device.c8y_SupportedOperations.includes('c8y_SoftwareList')) {\n      operation.c8y_SoftwareList = cloneDeep(device.c8y_SoftwareList) || [];\n      changes.forEach(change => {\n        const deviceSoftware: DeviceSoftware = pick(change, ['name', 'version', 'url']);\n        if (change.action === 'delete') {\n          remove(operation.c8y_SoftwareList, deviceSoftware);\n        }\n        if (change.action === 'install') {\n          operation.c8y_SoftwareList.push(deviceSoftware);\n        }\n      });\n    } else if (device.c8y_SupportedOperations.includes('c8y_Software')) {\n      operation.c8y_Software = cloneDeep(device.c8y_Software) || {};\n      changes.forEach(change => {\n        if (change.action === 'delete') {\n          delete operation.c8y_Software[change.name];\n        }\n        if (change.action === 'install') {\n          operation.c8y_Software[change.name] = change.version;\n        }\n      });\n    }\n    return operation;\n  }\n\n  /**\n   * Extracts the list of device software changes from given operation in the context of given device.\n   * @param operation The operation from which the list should be extracted.\n   * @param device The target device of the operation.\n   */\n  getDeviceSoftwareChangesFromOperation(\n    operation: IOperation,\n    device: IManagedObject\n  ): DeviceSoftwareChange[] {\n    if (operation.c8y_SoftwareUpdate) {\n      return cloneDeep(operation.c8y_SoftwareUpdate);\n    }\n    if (operation.c8y_SoftwareList) {\n      return this.getDeviceSoftwareChangesFromSoftwareListOperation(operation, device);\n    }\n    if (operation.c8y_Software) {\n      return this.getDeviceSoftwareChangesFromSoftwareOperation(operation, device);\n    }\n    return [];\n  }\n\n  /**\n   * Prepares a firmware update operation for given device and the selected repository binary, and sends it to the device.\n   * @param device The device which the operation should be prepared for and sent to.\n   * @param selectedOption The selected repository binary option.\n   */\n  async createFirmwareUpdateOperation(\n    device: IManagedObject,\n    selectedOption: SelectedRepositoryBinary\n  ): Promise<IOperation> {\n    const operation = this.getFirmwareUpdateOperation(device, selectedOption);\n    return (await this.operation.create(operation)).data;\n  }\n\n  /**\n   * Prepares a firmware update operation for given device and selected version.\n   * Supports c8y_Firmware operation.\n   * @param device The device for which operation should be prepared.\n   * @param selectedOption Selected firmware version.\n   */\n  getFirmwareUpdateOperation(\n    device: IManagedObject,\n    selectedOption: SelectedRepositoryBinary\n  ): IOperation {\n    delete selectedOption.id;\n\n    const operation: IOperation = {\n      deviceId: device.id,\n      description: `Update firmware to: \"${selectedOption.name}\"${\n        selectedOption.version ? ` (version: ${selectedOption.version})` : ''\n      }`,\n      c8y_Firmware: { ...selectedOption }\n    };\n\n    return operation;\n  }\n\n  /**\n   * Prepares a configuration file upload operation for given device and configuration type.\n   * @param device The device for which operation should be prepared.\n   * @param configurationType Selected configuration type.\n   * @param isLegacy  A legacy operation is created without a configurationType.\n   */\n  getUploadConfigurationFileOperation(\n    device: IManagedObject,\n    configurationType: string,\n    isLegacy: boolean = false\n  ): IOperation {\n    if (isLegacy) {\n      return {\n        deviceId: device.id,\n        description: `Retrieve configuration snapshot from device ${device.name}`,\n        c8y_UploadConfigFile: {}\n      };\n    }\n    return {\n      deviceId: device.id,\n      description: `Retrieve ${configurationType} configuration snapshot from device ${device.name}`,\n      c8y_UploadConfigFile: {\n        type: configurationType\n      }\n    };\n  }\n\n  /**\n   * Prepares a configuration file download operation for given device and configuration type.\n   * @param device The device for which operation should be prepared.\n   * @param configurationType Selected configuration type.\n   * @param binaryUrl The url of a binary to be downloaded.\n   * @param isLegacy A legacy operation is created without a configurationType.\n   */\n  getDownloadConfigurationFileOperation(\n    device: IManagedObject,\n    configurationType: string,\n    configSnapshot: ConfigurationSnapshot,\n    isLegacy: boolean = false\n  ): IOperation {\n    if (isLegacy) {\n      return {\n        deviceId: device.id,\n        description: `Send configuration snapshot ${configSnapshot.name} to device ${device.name}`,\n        c8y_DownloadConfigFile: {\n          url: configSnapshot.binaryUrl,\n          c8y_ConfigurationDump: {\n            id: configSnapshot.id\n          }\n        }\n      };\n    }\n    return {\n      deviceId: device.id,\n      description: `Send configuration snapshot ${configSnapshot.name} of configuration type ${configurationType} to device ${device.name}`,\n      c8y_DownloadConfigFile: {\n        url: configSnapshot.binaryUrl,\n        type: configurationType\n      }\n    };\n  }\n\n  /**\n   * Gets the last firmware update operation for given device.\n   * Looks for c8y_Firmware operations.\n   * @param deviceId The ID of the device to find an operation for.\n   */\n  async getLastFirmwareUpdateOperation(deviceId: string | number): Promise<IOperation> {\n    const filters = {\n      deviceId,\n      dateFrom: new Date(0).toISOString(),\n      dateTo: new Date(Date.now()).toISOString(),\n      revert: true,\n      pageSize: 1\n    };\n    return this.getFirstMatchingOperation([{ ...filters, fragmentType: 'c8y_Firmware' }]);\n  }\n\n  /**\n   * Gets the last software update operation for given device.\n   * Looks for c8y_SoftwareUpdate, c8y_SoftwareList, or c8y_Software operations.\n   * @param deviceId The ID of the device to find an operation for.\n   */\n  async getLastSoftwareUpdateOperation(deviceId: string | number): Promise<IOperation> {\n    const filters = {\n      deviceId,\n      dateFrom: new Date(0).toISOString(),\n      dateTo: new Date(Date.now()).toISOString(),\n      revert: true,\n      pageSize: 1\n    };\n    return this.getFirstMatchingOperation([\n      { ...filters, fragmentType: 'c8y_SoftwareUpdate' },\n      { ...filters, fragmentType: 'c8y_SoftwareList' },\n      { ...filters, fragmentType: 'c8y_Software' }\n    ]);\n  }\n\n  /**\n   * Iterates over the list of filters and queries the operations.\n   * If a query returns at least one operation, the first one will be returned.\n   * Otherwise the next query will be performed.\n   * If none of the queries returns any operation, null will be returned.\n   * @param filtersList The list of filters for the queries.\n   */\n  async getFirstMatchingOperation(filtersList: any[]): Promise<IOperation> {\n    let matchingOperation = null;\n\n    for (const filters of filtersList) {\n      const operations = (await this.operation.list(filters)).data;\n      if (operations.length) {\n        matchingOperation = operations[0];\n        break;\n      }\n    }\n\n    return matchingOperation;\n  }\n\n  /**\n   * Iterates over the list of filters and queries the operations.\n   * It compares the operations retrieved by the queries by 'creationTime'\n   * and return the latest one.\n   * If none of the queries returns any operation, null will be returned.\n   * @param filtersList The list of filters for the queries.\n   */\n  async getLatestMatchingOperation(filtersList: any[]): Promise<IOperation> {\n    let matchingOperation: IOperation = null;\n\n    for (const filters of filtersList) {\n      const operations: IOperation[] = (await this.operation.list(filters)).data;\n      if (operations.length) {\n        if (matchingOperation) {\n          matchingOperation =\n            new Date(matchingOperation.creationTime).getTime() <\n            new Date(operations[0].creationTime).getTime()\n              ? operations[0]\n              : matchingOperation;\n        } else {\n          matchingOperation = operations[0];\n        }\n      }\n    }\n\n    return matchingOperation;\n  }\n\n  /**\n   * Creates the operation and returns an observable to track its progress.\n   * Fails the observable when the operation returns FAILED status.\n   * Completes the observable when the operation returns SUCCESSFUL status.\n   * @param operation The operation to create and track.\n   */\n  createObservedOperation(operation: IOperation): Observable<IOperation> {\n    return from(this.operation.create(operation)).pipe(\n      map(({ data }) => data),\n      take(1),\n      switchMap(createdOperation => this.observeOperation(createdOperation))\n    );\n  }\n\n  /**\n   * Returns an observable to track progress of given operation.\n   * Fails the observable when the operation returns FAILED status.\n   * Completes the observable when the operation returns SUCCESSFUL status.\n   * @param operation The operation to be observed.\n   */\n  observeOperation(operation: IOperation): Observable<IOperation> {\n    const observedOperation$ = of(operation);\n    const operationUpdates$ = observedOperation$.pipe(\n      switchMap(observedOperation => this.operationRealtime.onAll$(observedOperation.deviceId)),\n      map(({ data }) => data as IOperation),\n      withLatestFrom(observedOperation$),\n      filter(([operationUpdate, observedOperation]) => operationUpdate.id === observedOperation.id),\n      switchMap(([operationUpdate]) => {\n        if (operationUpdate.status === OperationStatus.FAILED) {\n          return throwError(operationUpdate);\n        }\n        return of(operationUpdate);\n      }),\n      takeWhile(operationUpdate => operationUpdate.status !== OperationStatus.SUCCESSFUL, true)\n    );\n    return merge(observedOperation$, operationUpdates$);\n  }\n\n  /**\n   * Gets a single event with latest creationTime for the given device Id and event type.\n   * @param deviceId The device Id for which the events should be queried.\n   * @param type Event type.\n   */\n  async getLatestConfigurationEvent(\n    deviceId: string | number,\n    type: string\n  ): Promise<IEvent | undefined> {\n    const eventFilter: object = {\n      source: deviceId,\n      type,\n      dateFrom: this.dateFrom.toISOString(),\n      dateTo: this.dateTo.toISOString(),\n      pageSize: 1\n    };\n\n    const { data } = await this.event.list(eventFilter);\n    return data[0];\n  }\n\n  /**\n   * Gets a list of operations for the given device Id, and operation type.\n   * @param deviceId The device Id for which the operation should be queried.\n   * @param operationType Operation type fragment.\n   */\n  async getConfigFileOperationList(\n    deviceId: string | number,\n    operationType: string\n  ): Promise<IOperation[]> {\n    const operationFilter: object = {\n      deviceId,\n      fragmentType: operationType,\n      dateFrom: this.dateFrom.toISOString(),\n      dateTo: this.dateTo.toISOString(),\n      revert: true,\n      pageSize: 2000\n    };\n\n    return (await this.operation.list(operationFilter)).data;\n  }\n\n  /**\n   * Gets latest uploaded configuration snapshot for the given device, and configuration type.\n   * @param device The device for which the configuration snapshot was uploaded.\n   * @param configurationType Selected configuration type.\n   */\n  async getConfigSnapshot(\n    device: IManagedObject,\n    configurationType: string\n  ): Promise<ConfigurationSnapshot | undefined> {\n    const event: IEvent = await this.getLatestConfigurationEvent(device.id, configurationType);\n    let configSnapshot: ConfigurationSnapshot;\n    if (event) {\n      configSnapshot = {\n        time: event.time,\n        name: event.text,\n        deviceType: device.type,\n        configurationType\n      };\n      try {\n        configSnapshot.binary = await (await this.eventBinary.download(event)).text();\n        if (event.c8y_IsBinary) {\n          configSnapshot.binaryType = event.c8y_IsBinary.type;\n        }\n      } catch (ex) {\n        const msg = gettext('Could not get the binary.');\n        this.alert.danger(msg);\n      }\n    }\n    return configSnapshot;\n  }\n\n  async getLegacyConfigSnapshot(deviceId) {\n    let configSnapshot: ConfigurationSnapshot;\n    let mo;\n    const device = (await this.inventory.detail(deviceId, { withChildren: false })).data;\n    const snapshotId = device.c8y_ConfigurationDump && device.c8y_ConfigurationDump.id;\n    if (!snapshotId) {\n      return;\n    }\n\n    try {\n      mo = (await this.inventory.detail(snapshotId)).data;\n    } catch (ex) {\n      // do nothing\n    }\n    if (mo) {\n      configSnapshot = {\n        time: mo.creationTime,\n        name: mo.name\n      };\n      configSnapshot.binary = await this.getBinaryText(mo.url, { allowExternal: false });\n    }\n    return configSnapshot;\n  }\n\n  /**\n   * Returns a binary object as text.\n   * @param binaryUrl The URL to find binary\n   * @param options The object with additional options:\n   * - **allowExternal** - `boolean` - allows downloading external binary file\n   * - **noAlerts** - `boolean` - do not display an alert message; defaults to `false`\n   */\n  async getBinaryText(\n    binaryUrl: string,\n    options: { allowExternal: boolean; noAlerts?: boolean }\n  ): Promise<string> {\n    const binaryId = this.inventoryBinary.getIdFromUrl(binaryUrl);\n    let res;\n    if (!binaryId && options.allowExternal) {\n      res = await this.getExternalBinaryResponse(binaryUrl, options);\n    } else {\n      res = await this.getInternalBinaryResponse(binaryId, options);\n    }\n    if (!res) {\n      return null;\n    }\n    return res.text();\n  }\n\n  /**\n   * Returns a binary object as File.\n   * @param binaryUrl The URL to find binary\n   * @param options The object with additional options:\n   * - **allowExternal** - `boolean` - allows downloading external binary file\n   */\n  async getBinaryFile(binaryUrl: string, options: { allowExternal: boolean }): Promise<File> {\n    const binaryId = this.inventoryBinary.getIdFromUrl(binaryUrl);\n    if (!binaryId && !options.allowExternal) {\n      return null;\n    }\n    // @TODO: note that it doesn't solve issue with external binary here, such url won't have binaryId, so we won't know the name or contentType to use in File constructor, let's add a @FIXME comment for now?\n    const { name, contentType } = (await this.inventory.detail(binaryId)).data;\n    const res = !!binaryId\n      ? await this.getInternalBinaryResponse(binaryId)\n      : await this.getExternalBinaryResponse(binaryUrl);\n    const arrayBuffer = await res.arrayBuffer();\n    return new File([arrayBuffer], name, { type: contentType });\n  }\n\n  /**\n   * Gets the last configuration update operation for given device.\n   * Looks for c8y_Configuration and c8y_SendConfiguration operations.\n   * @param deviceId The ID of the device to find an operation for.\n   */\n  async getLastConfigUpdateOperation(deviceId: string | number): Promise<IOperation> {\n    const filters = {\n      deviceId,\n      dateFrom: new Date(0).toISOString(),\n      dateTo: new Date(Date.now()).toISOString(),\n      revert: true,\n      pageSize: 1\n    };\n    return this.getLatestMatchingOperation([\n      { ...filters, fragmentType: 'c8y_Configuration' },\n      { ...filters, fragmentType: 'c8y_SendConfiguration' }\n    ]);\n  }\n\n  /**\n   * Prepares a configuration download operation for given device and its current configuration.\n   * Supports c8y_SendConfiguration operation.\n   * @param device The device for which operation should be prepared.\n   */\n  createTextBasedConfigurationReloadOperation(device: IManagedObject): IOperation {\n    return {\n      deviceId: device.id,\n      description: gettext('Requested current configuration'),\n      c8y_SendConfiguration: {}\n    };\n  }\n\n  /**\n   * Prepares a configuration update operation for the given device.\n   * Supports c8y_Configuration operation.\n   * @param device The device for which operation should be prepared.\n   * @param config The configuration which will update the existing one.\n   */\n  createTextBasedConfigurationUpdateOperation(device: IManagedObject, config: string): IOperation {\n    return {\n      deviceId: device.id,\n      description: gettext('Configuration update'),\n      c8y_Configuration: {\n        config\n      }\n    };\n  }\n\n  async getBinary(binaryId: IdReference): Promise<IFetchResponse> {\n    try {\n      return await this.inventoryBinary.download(binaryId);\n    } catch (ex) {\n      const msg = gettext('Could not get the binary.');\n      this.alert.danger(msg);\n    }\n  }\n\n  /**\n   * Gets all available snapshots from the repository for the given device.\n   * @param device The device for which the snapshots should be prepared.\n   * @param configurationType Selected configuration type.\n   */\n  async getSnapshotsFromRepository(device, configurationType) {\n    const searchQuery = this.getConfigurationTypeQuery(device, configurationType);\n    const res = await this.listRepositoryEntries(RepositoryType.CONFIGURATION, {\n      query: searchQuery,\n      params: { pageSize: 100 }\n    });\n    return res.data;\n  }\n\n  /**\n   * Returns a binary object.\n   * @param binaryId binary ID\n   * @param options The object with additional options:\n   * - **noAlerts** - `boolean` - do not display an alert message; defaults to `false`\n   */\n  private async getInternalBinaryResponse(\n    binaryId: IdReference,\n    options: { noAlerts?: boolean } = {}\n  ): Promise<IFetchResponse> {\n    let res;\n    try {\n      res = await this.inventoryBinary.download(binaryId);\n    } catch (ex) {\n      if (!options.noAlerts) {\n        const msg = gettext('Could not get the binary.');\n        this.alert.danger(msg);\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Returns a binary object.\n   * @param binaryUrl The URL to find binary\n   * @param options The object with additional options:\n   * - **noAlerts** - `boolean` - do not display an alert message; defaults to `false`\n   */\n  private async getExternalBinaryResponse(\n    binaryUrl: string,\n    options: { noAlerts?: boolean } = {}\n  ): Promise<IFetchResponse> {\n    let res;\n    try {\n      const fetchRes = await fetch(binaryUrl);\n      if (fetchRes.status >= 400) {\n        throw res;\n      }\n      res = fetchRes;\n    } catch {\n      if (!options.noAlerts) {\n        const msg = gettext('Could not get the external binary');\n        this.alert.danger(msg);\n      }\n    }\n    return res;\n  }\n\n  private async createEntry(mo: Partial<IManagedObject>) {\n    const binaryId = await this.inventoryBinary.getIdFromUrl(mo.url);\n    const newMo = await this.inventory.create(mo);\n    if (binaryId) {\n      await this.inventory.childAdditionsAdd(binaryId, newMo.data);\n    }\n    return newMo;\n  }\n\n  private async updateEntry(mo: Partial<IManagedObject>, url) {\n    const existingBinaryId = await this.inventoryBinary.getIdFromUrl(url);\n    const newBinaryId = await this.inventoryBinary.getIdFromUrl(mo.url);\n    if (existingBinaryId && existingBinaryId !== newBinaryId) {\n      const id = this.inventoryBinary.getIdFromUrl(url);\n      await this.inventoryBinary.delete(id);\n    }\n    if (newBinaryId) {\n      await this.inventory.childAdditionsAdd(newBinaryId, mo);\n    }\n    return this.inventory.update(mo);\n  }\n\n  private getBaseVersionResultListForLegacyEntry(entry) {\n    return Promise.resolve({\n      res: {} as IFetchResponse,\n      data: [\n        {\n          ...entry,\n          [entry.type]: {\n            version: entry.version,\n            url: entry.url\n          }\n        }\n      ]\n    } as IResultList<IManagedObject>);\n  }\n\n  private getDeviceSoftwareChangesFromSoftwareListOperation(\n    operation: IOperation,\n    device: IManagedObject\n  ): DeviceSoftwareChange[] {\n    const changes: DeviceSoftwareChange[] = [];\n    forEach(device.c8y_SoftwareList, deviceSoftware => {\n      const operationSoftware = find(operation.c8y_SoftwareList, { name: deviceSoftware.name });\n      if (\n        (operationSoftware && operationSoftware.version) !==\n        (deviceSoftware && deviceSoftware.version)\n      ) {\n        changes.push({\n          ...deviceSoftware,\n          action: 'delete'\n        } as DeviceSoftwareChange);\n      }\n    });\n    forEach(operation.c8y_SoftwareList, operationSoftware => {\n      const deviceSoftware = find(device.c8y_SoftwareList, { name: operationSoftware.name });\n      if (\n        (operationSoftware && operationSoftware.version) !==\n        (deviceSoftware && deviceSoftware.version)\n      ) {\n        changes.push({\n          ...operationSoftware,\n          action: 'install'\n        } as DeviceSoftwareChange);\n      }\n    });\n    return changes;\n  }\n\n  private getDeviceSoftwareChangesFromSoftwareOperation(\n    operation: IOperation,\n    device: IManagedObject\n  ): DeviceSoftwareChange[] {\n    const changes: DeviceSoftwareChange[] = [];\n    forEach(device.c8y_Software, (deviceSoftwareVersion, deviceSoftwareName) => {\n      if (operation.c8y_Software[deviceSoftwareName] !== deviceSoftwareVersion) {\n        changes.push({\n          name: deviceSoftwareName,\n          version: deviceSoftwareVersion,\n          action: 'delete'\n        } as DeviceSoftwareChange);\n      }\n    });\n    forEach(operation.c8y_Software, (operationSoftwareVersion, operationSoftwareName) => {\n      const deviceSoftwareVersion =\n        device.c8y_Software && device.c8y_Software[operationSoftwareName];\n      if (deviceSoftwareVersion !== operationSoftwareVersion) {\n        changes.push({\n          name: operationSoftwareName,\n          version: operationSoftwareVersion,\n          action: 'install'\n        } as DeviceSoftwareChange);\n      }\n    });\n    return changes;\n  }\n}\n","import { Component } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { ConfigurationSnapshot, RepositoryType } from '../repository.model';\nimport { AlertService, gettext } from '@c8y/ngx-components';\nimport { RepositoryService } from '../repository.service';\n\n@Component({\n  selector: 'c8y-save-config-to-configuration-repository',\n  templateUrl: 'save-to-repository.component.html'\n})\nexport class SaveToRepositoryComponent {\n  configSnapshot: ConfigurationSnapshot;\n  result: Promise<any> = new Promise((resolve, reject) => {\n    this._save = resolve;\n    this._cancel = reject;\n  });\n  private _save;\n  private _cancel;\n\n  constructor(\n    private modal: BsModalRef,\n    private alertService: AlertService,\n    private repositoryService: RepositoryService\n  ) {}\n\n  async save() {\n    {\n      try {\n        const configSnapshotData = {\n          selected: {\n            configurationType: this.configSnapshot.configurationType\n          },\n          version: this.configSnapshot.name,\n          deviceType: this.configSnapshot.deviceType,\n          description: this.configSnapshot.description,\n          binary: {\n            file: new File([this.configSnapshot.binary], this.configSnapshot.name)\n          }\n        };\n        await this.repositoryService.save(configSnapshotData, RepositoryType.CONFIGURATION);\n        this.alertService.success(gettext('Configuration saved.'));\n        this._save();\n      } catch (ex) {\n        this.alertService.addServerFailure(ex);\n      }\n    }\n  }\n\n  close() {\n    this._cancel();\n    this.modal.hide();\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { ConfigurationSnapshot, DeviceConfigurationOperation } from '../repository.model';\nimport {\n  IManagedObject,\n  IOperation,\n  OperationService,\n  OperationStatus,\n  UserService\n} from '@c8y/client';\nimport { DeviceConfigurationService } from './device-configuration.service';\nimport { Subscription } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { saveAs } from 'file-saver';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { SaveToRepositoryComponent } from './save-to-repository.component';\nimport { cloneDeep } from 'lodash-es';\nimport { AlertService, AppStateService, OperationRealtimeService } from '@c8y/ngx-components';\nimport { RepositoryService } from '../repository.service';\n\n@Component({\n  selector: 'c8y-device-configuration-preview',\n  templateUrl: './configuration-preview.component.html'\n})\nexport class ConfigurationPreviewComponent implements OnInit, OnDestroy {\n  @Input() device: IManagedObject;\n  @Input() set configurationType(type: string) {\n    this._configurationType = type;\n    this.setOperation(type);\n  }\n  get configurationType(): string {\n    return this._configurationType;\n  }\n  @Input() configSnapshot: ConfigurationSnapshot;\n  @Input() canSaveSnapshot: boolean;\n  @Input() actionButtonText: string;\n  @Input() actionButtonIcon: string;\n  @Input() isLegacy: boolean = false;\n  @Input() operationToTrigger:\n    | DeviceConfigurationOperation.UPLOAD_CONFIG\n    | DeviceConfigurationOperation.DOWNLOAD_CONFIG;\n\n  operation: IOperation;\n  canCallAction = true;\n  deviceConfigurationOperation = DeviceConfigurationOperation;\n  private _configurationType: string;\n  private operationsSubscription: Subscription;\n\n  constructor(\n    private deviceConfigurationService: DeviceConfigurationService,\n    private operationRealtime: OperationRealtimeService,\n    private bsModal: BsModalService,\n    private user: UserService,\n    private appState: AppStateService,\n    private repositoryService: RepositoryService,\n    private operationService: OperationService,\n    private alertService: AlertService\n  ) {}\n\n  async ngOnInit() {\n    this.setCanCallAction();\n    this.setOperation(this._configurationType);\n    this.operationsSubscription = this.operationRealtime\n      .onAll$(this.device.id)\n      .pipe(map(({ data }) => data as IOperation))\n      .subscribe(operation => {\n        this.updatePreview(operation);\n      });\n  }\n\n  async setOperation(configType): Promise<void> {\n    const operationList = await this.repositoryService.getConfigFileOperationList(\n      this.device.id,\n      this.operationToTrigger\n    );\n\n    const operation = this.isLegacy\n      ? operationList.find(op => op[this.operationToTrigger] && !op[this.operationToTrigger].type)\n      : operationList.find(op => op[this.operationToTrigger].type === configType);\n\n    this.operation =\n      operation && operation.status !== OperationStatus.SUCCESSFUL ? operation : undefined;\n  }\n\n  setCanCallAction(): void {\n    this.canCallAction = this.deviceConfigurationService.hasAnySupportedOperation(\n      this.device,\n      this.operationToTrigger\n    );\n  }\n\n  async createDeviceOperation() {\n    let operationCfg;\n    if (this.operationToTrigger === DeviceConfigurationOperation.DOWNLOAD_CONFIG) {\n      operationCfg = this.repositoryService.getDownloadConfigurationFileOperation(\n        this.device,\n        this._configurationType,\n        this.configSnapshot,\n        this.isLegacy\n      );\n    }\n    if (this.operationToTrigger === DeviceConfigurationOperation.UPLOAD_CONFIG) {\n      operationCfg = this.repositoryService.getUploadConfigurationFileOperation(\n        this.device,\n        this._configurationType,\n        this.isLegacy\n      );\n    }\n    try {\n      this.operation = (await this.operationService.create(operationCfg)).data;\n    } catch (ex) {\n      this.alertService.addServerFailure(ex);\n    }\n  }\n\n  showOperation(): boolean {\n    if (this.operationToTrigger === DeviceConfigurationOperation.DOWNLOAD_CONFIG) {\n      return !!this.operation;\n    }\n    return (\n      this.operation &&\n      [OperationStatus.PENDING, OperationStatus.EXECUTING, OperationStatus.FAILED].includes(\n        this.operation.status\n      )\n    );\n  }\n\n  showBinary(): boolean {\n    if (this.operationToTrigger === DeviceConfigurationOperation.DOWNLOAD_CONFIG) {\n      return true;\n    }\n    return !this.showOperation();\n  }\n\n  isCreateOperationDisabled(): boolean {\n    return (\n      this.operation &&\n      [OperationStatus.PENDING, OperationStatus.EXECUTING].includes(this.operation.status)\n    );\n  }\n\n  updatePreview(operation: IOperation) {\n    if (\n      operation &&\n      operation[this.operationToTrigger] &&\n      (this.isLegacy ||\n        (operation[this.operationToTrigger].type &&\n          operation[this.operationToTrigger].type === this.configurationType))\n    ) {\n      this.operation = operation;\n      this.updateSnapshotsOnConfigUpload(operation);\n    }\n  }\n\n  download() {\n    const blob = new Blob([this.configSnapshot.binary], { type: this.configSnapshot.binaryType });\n    let fileName = this.configSnapshot.name;\n    switch (this.configSnapshot.binaryType) {\n      case 'text/csv':\n      case 'application/csv':\n        fileName = fileName.concat('.csv');\n        break;\n      case 'text/yaml':\n      case 'application/x-yaml':\n        fileName = fileName.concat('.yaml');\n        break;\n      case 'application/json':\n        fileName = fileName.concat('.json');\n        break;\n    }\n    saveAs(blob, fileName);\n  }\n\n  async saveToRepository() {\n    const initialState = {\n      configSnapshot: cloneDeep(this.configSnapshot)\n    };\n    const modal = this.bsModal.show(SaveToRepositoryComponent, {\n      class: 'modal-sm',\n      initialState,\n      ignoreBackdropClick: true\n    }).content as SaveToRepositoryComponent;\n    try {\n      await modal.result;\n      this.deviceConfigurationService.updateConfigurations(true);\n      modal.close();\n    } catch (ex) {\n      // do nothing\n    }\n  }\n\n  hasPermission(): boolean {\n    return this.user.hasAnyRole(this.appState.currentUser.value, [\n      'ROLE_INVENTORY_ADMIN',\n      'ROLE_INVENTORY_CREATE'\n    ]);\n  }\n\n  ngOnDestroy() {\n    if (this.operationsSubscription) {\n      this.operationsSubscription.unsubscribe();\n    }\n  }\n\n  private async updateSnapshotsOnConfigUpload(operation) {\n    if (\n      operation[DeviceConfigurationOperation.UPLOAD_CONFIG] &&\n      operation.status === OperationStatus.SUCCESSFUL\n    ) {\n      this.deviceConfigurationService.updateConfigurations();\n    }\n  }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { DeviceConfigurationListEmptyState, SupportedConfigurationItem } from '../repository.model';\n\n@Component({\n  selector: 'c8y-device-configuration-list',\n  templateUrl: './device-configuration-list.component.html'\n})\nexport class DeviceConfigurationListComponent {\n  @Input() items: SupportedConfigurationItem[];\n  @Input() itemIcon: string;\n  @Input() emptyState: DeviceConfigurationListEmptyState;\n  @Input() isFilterEnabled: boolean;\n  @Output() configSelected = new EventEmitter<string>();\n  selectedConfig;\n  filterTerm: string = '';\n\n  showConfigurationTypePreview(config): void {\n    this.selectedConfig = config;\n    this.configSelected.emit(config);\n  }\n\n  updatePipe(filterTerm: string) {\n    this.filterTerm = filterTerm;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { IManagedObject, InventoryService, IOperation, OperationStatus } from '@c8y/client';\nimport { AlertService, gettext } from '@c8y/ngx-components';\nimport { DeviceConfigurationOperation } from '../repository.model';\nimport { RepositoryService } from '../repository.service';\nimport { DeviceConfigurationService } from './device-configuration.service';\n\n@Component({\n  selector: 'c8y-text-based-configuration',\n  templateUrl: './text-based-configuration.component.html'\n})\nexport class TextBasedConfigurationComponent implements OnInit {\n  device: IManagedObject;\n  latestOperation: IOperation;\n  showTextBasedConfigReload: boolean;\n  showTextBasedConfigSave: boolean;\n  reloadingConfig = false;\n  config: string;\n\n  constructor(\n    private route: ActivatedRoute,\n    private alertService: AlertService,\n    private repositoryService: RepositoryService,\n    private deviceConfigurationService: DeviceConfigurationService,\n    private inventoryService: InventoryService\n  ) {\n  }\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  async load() {\n    this.device = this.route.snapshot.parent.data.contextData;\n    await this.loadDevice();\n    await this.loadOperation();\n    this.showTextBasedConfigReload = this.deviceConfigurationService.hasAnySupportedOperation(\n      this.device,\n      [DeviceConfigurationOperation.SEND_CONFIG]\n    );\n    this.showTextBasedConfigSave = this.deviceConfigurationService.hasAnySupportedOperation(\n      this.device,\n      [DeviceConfigurationOperation.CONFIG]\n    );\n    if (this.device.c8y_Configuration && this.device.c8y_Configuration.config) {\n      this.config = this.device.c8y_Configuration.config;\n    }\n  }\n\n  async loadOperation() {\n    const operation = await this.repositoryService.getLastConfigUpdateOperation(this.device.id);\n    if (operation !== null) {\n      this.reloadingConfig =\n        !!operation.c8y_SendConfiguration &&\n        (operation.status === OperationStatus.PENDING ||\n          operation.status === OperationStatus.EXECUTING);\n      this.repositoryService.observeOperation(operation).subscribe((operationUpdate) => {\n        this.latestOperation = operationUpdate;\n      });\n    }\n  }\n\n  get savingConfig() {\n    return this.latestOperation\n      ? !!this.latestOperation.c8y_Configuration &&\n          (this.latestOperation.status === OperationStatus.PENDING ||\n            this.latestOperation.status === OperationStatus.EXECUTING)\n      : false;\n  }\n\n  async reloadConfiguration() {\n    this.reloadingConfig = true;\n    const operationCfg = await this.repositoryService.createTextBasedConfigurationReloadOperation(\n      this.device\n    );\n    try {\n      this.repositoryService\n        .createObservedOperation(operationCfg)\n        .subscribe(\n          operationUpdate => this.onOperationReloadSuccess(operationUpdate),\n          operationUpdate => this.onOperationReloadError(operationUpdate),\n          () => this.onOperationReloadComplete()\n        );\n    } catch (ex) {\n      this.alertService.addServerFailure(ex);\n    }\n  }\n\n  async updateConfiguration(config) {\n    const operationCfg = await this.repositoryService.createTextBasedConfigurationUpdateOperation(\n      this.device,\n      config\n    );\n    try {\n      this.repositoryService\n        .createObservedOperation(operationCfg)\n        .subscribe(\n          operationUpdate => this.onOperationUpdateSuccess(operationUpdate),\n          operationUpdate => this.onOperationUpdateError(operationUpdate),\n          () => this.onOperationUpdateComplete()\n        );\n    } catch (ex) {\n      this.alertService.addServerFailure(ex);\n    }\n  }\n\n  private onOperationReloadSuccess(operationUpdate) {\n    this.latestOperation = operationUpdate;\n    if (operationUpdate.status === OperationStatus.PENDING) {\n      this.alertService.success(gettext('Configuration will be reloaded.'));\n    }\n  }\n\n  private onOperationReloadError(operationUpdate) {\n    this.latestOperation = operationUpdate;\n    this.reloadingConfig = false;\n  }\n\n  private async onOperationReloadComplete() {\n    await this.loadDevice();\n    this.config = this.device.c8y_Configuration.config;\n    this.reloadingConfig = false;\n  }\n\n  private onOperationUpdateSuccess(operationUpdate) {\n    this.latestOperation = operationUpdate;\n    if (operationUpdate.status === OperationStatus.PENDING) {\n      this.alertService.success(gettext('Configuration will be updated.'));\n    }\n  }\n\n  private onOperationUpdateError(operationUpdate) {\n    this.latestOperation = operationUpdate;\n  }\n\n  private onOperationUpdateComplete() {\n    this.device.c8y_Configuration.config = this.config;\n  }\n\n  private async loadDevice() {\n    this.device = (await this.inventoryService.detail(this.device.id, {\n      withChildren: false\n    })).data;\n  }\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { IManagedObject, Realtime } from '@c8y/client';\nimport { DeviceConfigurationService } from './device-configuration.service';\nimport {\n  DeviceConfigurationListEmptyState,\n  ConfigurationSnapshot,\n  SupportedConfigurationItem,\n  DeviceConfigurationOperation\n} from '../repository.model';\nimport { gettext } from '@c8y/ngx-components';\nimport { has } from 'lodash-es';\nimport { RepositoryService } from '../repository.service';\nimport { TextBasedConfigurationComponent } from './text-based-configuration.component';\n\n@Component({\n  selector: 'c8y-device-configuration',\n  templateUrl: './device-configuration.component.html'\n})\nexport class DeviceConfigurationComponent implements OnInit {\n  supportedConfigurations: SupportedConfigurationItem[] = [];\n  showBinaryBasedConfig = false;\n  configurationType: string;\n  configSnapshot: Partial<ConfigurationSnapshot> = {};\n  repositorySnapshots: IManagedObject[];\n  repositorySnapshot: ConfigurationSnapshot;\n  repositorySnapshotsEmptyState: DeviceConfigurationListEmptyState;\n  device: IManagedObject;\n  isLegacy: boolean;\n  showTextBasedConfig: boolean;\n  reloading: boolean = false;\n\n  @ViewChild(TextBasedConfigurationComponent) textBasedConfigurationComponent: TextBasedConfigurationComponent;\n\n  constructor(\n    private route: ActivatedRoute,\n    private deviceConfigurationService: DeviceConfigurationService,\n    private realtime: Realtime,\n    private repositoryService: RepositoryService\n  ) {\n    this.deviceConfigurationService.configurationsUpdated.subscribe(repositorySnapsOnly => {\n      this.updateSnapshots(repositorySnapsOnly);\n    });\n  }\n\n  ngOnInit() {\n    this.device = this.route.snapshot.parent.data.contextData;\n    if (this.device.c8y_SupportedConfigurations) {\n      this.supportedConfigurations = this.device.c8y_SupportedConfigurations.map(item => ({\n        name: item\n      }));\n    }\n\n    if (\n      this.deviceConfigurationService.hasAnySupportedOperation(this.device, [\n        DeviceConfigurationOperation.DOWNLOAD_CONFIG,\n        DeviceConfigurationOperation.UPLOAD_CONFIG\n      ])\n    ) {\n      this.supportedConfigurations.push({\n        name: gettext('Legacy configuration snapshot'),\n        isLegacy: true\n      });\n    }\n    if (this.supportedConfigurations.length > 0) {\n      this.showBinaryBasedConfig = true;\n    }\n\n    this.repositorySnapshotsEmptyState = {\n      icon: 'gears',\n      title: gettext('No configurations available.'),\n      text: gettext('Add configuration to configuration repository')\n    };\n\n    this.showTextBasedConfig =\n      this.deviceConfigurationService.hasAnySupportedOperation(this.device, [\n        DeviceConfigurationOperation.CONFIG,\n        DeviceConfigurationOperation.SEND_CONFIG\n      ]) || has(this.device, 'c8y_Configuration');\n  }\n\n  async onConfigTypeSelected(config) {\n    this.configurationType = config.name;\n    this.isLegacy = config.isLegacy;\n    this.updateSnapshots();\n  }\n\n  async onRepositoryConfigSelected(config) {\n    this.repositorySnapshot = {\n      id: config.id,\n      time: config.creationTime,\n      name: config.name,\n      binaryUrl: config.url,\n      deviceType: config.deviceType,\n      configurationType: config.configurationType\n    };\n    if (config.url) {\n      try {\n        const binary = await this.repositoryService.getBinaryFile(config.url, {\n          allowExternal: false\n        });\n        if (binary) {\n          this.repositorySnapshot.binary = await (binary as any).text();\n        }\n      } catch (ex) {\n        // do nothing\n      }\n    }\n  }\n\n  async updateSnapshots(repositorySnapsOnly?: boolean) {\n    this.reloading = true;\n    this.repositorySnapshot = undefined;\n    this.repositorySnapshots = await this.repositoryService.getSnapshotsFromRepository(\n      this.device,\n      this.configurationType\n    );\n    if (!repositorySnapsOnly) {\n      this.configSnapshot = this.isLegacy\n        ? await this.repositoryService.getLegacyConfigSnapshot(this.device)\n        : await this.repositoryService.getConfigSnapshot(this.device, this.configurationType);\n    }\n    if ( this.showTextBasedConfig ) {\n      await this.textBasedConfigurationComponent.load();\n    }\n    this.reloading = false;\n  }\n}\n","import { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { has } from 'lodash-es';\nimport { DeviceConfigurationService } from './device-configuration.service';\nimport { DeviceConfigurationOperation } from '../repository.model';\n\n@Injectable()\nexport class DeviceConfigurationGuard implements CanActivate {\n  constructor(private deviceConfigurationService: DeviceConfigurationService) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    const contextData = route.data.contextData || route.parent.data.contextData;\n    if (!contextData) {\n      return false;\n    }\n    return (\n      (contextData.c8y_SupportedConfigurations &&\n        contextData.c8y_SupportedConfigurations.length > 0) ||\n      this.deviceConfigurationService.hasAnySupportedOperation(contextData, [\n        DeviceConfigurationOperation.DOWNLOAD_CONFIG,\n        DeviceConfigurationOperation.UPLOAD_CONFIG,\n        DeviceConfigurationOperation.CONFIG,\n        DeviceConfigurationOperation.SEND_CONFIG\n      ]) ||\n      has(contextData, 'c8y_Configuration')\n    );\n  }\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'c8y-source-code-preview',\n  templateUrl: './source-code-preview.component.html'\n})\nexport class SourceCodePreviewComponent {\n  @Input() isDisabled: boolean;\n  @Input() text: string;\n}\n","import { Component, ViewChild } from '@angular/core';\nimport { IManagedObject } from '@c8y/client';\nimport { AlertService, gettext } from '@c8y/ngx-components';\nimport { uniqBy, isUndefined } from 'lodash-es';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { pipe } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ModalModel, RepositoryType } from '../repository.model';\nimport { RepositoryService } from '../repository.service';\nimport { PickedFiles } from '@c8y/ngx-components';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'c8y-configuration-detail',\n  templateUrl: './configuration-detail.component.html'\n})\nexport class ConfigurationDetailComponent implements ModalModel {\n  @ViewChild('configurationForm', { static: true }) configurationForm: NgForm;\n  selected: { id?: string; name?: string; [key: string]: any };\n  version: string;\n  description: string;\n  binary: { file?: File; url?: string } = {\n    file: undefined,\n    url: undefined\n  };\n  deviceType: string;\n\n  pattern: string = '';\n  filterPipe;\n  configs;\n  mo: Partial<IManagedObject> = {};\n  saving = false;\n  uploadChoice: 'uploadBinary' | 'uploadUrl' = 'uploadBinary';\n  existingBinary: File;\n  submitButtonTitle: string;\n  textForConfigurationUrlPopover: string = gettext(`Path for binaries can vary depending on device agent implementation, e.g.:\n    /configuration/binaries/configuration1.bin\n    https://configuration/binary/123\n    ftp://configuration/binary/123.tar.gz\n  `);\n\n  result: Promise<void> = new Promise((resolve, reject) => {\n    this._save = resolve;\n    this._cancel = reject;\n  });\n\n  private _save;\n  private _cancel;\n\n  constructor(\n    private repositoryService: RepositoryService,\n    private bsModalRef: BsModalRef,\n    private alert: AlertService\n  ) {}\n\n  async ngOnInit() {\n    this.configs = await this.repositoryService.listRepositoryEntries(RepositoryType.CONFIGURATION);\n    if (this.selected) {\n      this.uploadChoice = this.binary.file ? 'uploadBinary' : 'uploadUrl';\n      this.existingBinary = this.binary.file;\n    }\n    this.setPipe('');\n    this.submitButtonTitle = this.mo.id\n      ? gettext('Update configuration')\n      : gettext('Add configuration');\n  }\n\n  cancel() {\n    this.bsModalRef.hide();\n    this._cancel();\n  }\n\n  setPipe(filterStr: string) {\n    this.pattern = filterStr;\n    this.filterPipe = pipe(\n      map((data: []) => uniqBy(data, 'configurationType')),\n      map((data: []) => {\n        return data.filter(\n          (mo: any) =>\n            mo.configurationType &&\n            mo.configurationType.toLowerCase().indexOf(filterStr.toLowerCase()) > -1\n        );\n      })\n    );\n  }\n\n  onFile(dropped: PickedFiles) {\n    this.configurationForm.form.markAsDirty();\n    if (!isUndefined(dropped.url)) {\n      this.binary = {\n        url: dropped.url\n      };\n      return;\n    } else if (!isUndefined(dropped.droppedFiles)) {\n      this.binary = {\n        file: dropped.droppedFiles[0].file\n      };\n      return;\n    } else {\n      this.binary = {\n        file: undefined,\n        url: undefined\n      };\n    }\n  }\n\n  async save() {\n    try {\n      this.saving = true;\n      const { selected, version, description, binary, deviceType } = this;\n      if (this.existingBinary === this.binary.file) {\n        binary.file = undefined;\n      }\n      await this.repositoryService.save(\n        { selected, version, description, binary, deviceType },\n        RepositoryType.CONFIGURATION,\n        this.mo\n      );\n      this.alert.success(\n        this.mo.id ? gettext('Configuration updated.') : gettext('Configuration created.')\n      );\n      this.bsModalRef.hide();\n      this._save();\n    } catch (ex) {\n      this.alert.addServerFailure(ex);\n      this._cancel();\n    } finally {\n      this.saving = false;\n    }\n  }\n}\n","import { Component, OnInit, Pipe, ViewChild } from '@angular/core';\nimport {IManagedObject, InventoryBinaryService, InventoryService, IResultList} from '@c8y/client';\nimport {\n  AlertService,\n  FilterInputComponent,\n  gettext, memoize,\n  ModalService,\n  Status\n} from '@c8y/ngx-components';\nimport { TranslateService } from '@ngx-translate/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { Observable, of, pipe } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { RepositoryType } from '../repository.model';\nimport { RepositoryService } from '../repository.service';\nimport { ConfigurationDetailComponent } from './configuration-detail.component';\nimport { property } from 'lodash-es';\nimport { saveAs } from 'file-saver';\n\n@Component({\n  selector: 'c8y-configuration-list',\n  templateUrl: './configuration-list.component.html'\n})\nexport class ConfigurationListComponent implements OnInit {\n  @ViewChild(FilterInputComponent, { static: false }) filter: FilterInputComponent;\n  configurations$: Observable<IResultList<IManagedObject>>;\n  filterPipe: Pipe;\n  filterTerm = '';\n  reloading: boolean = false;\n  data;\n  private readonly DELETED_SUCCESS_MSG = gettext('Configuration deleted.');\n\n  constructor(\n    private alert: AlertService,\n    private repositoryService: RepositoryService,\n    private bsModalService: BsModalService,\n    private modalService: ModalService,\n    private translateService: TranslateService,\n    private inventoryBinaryService: InventoryBinaryService,\n    private inventoryService: InventoryService\n  ) {}\n\n  ngOnInit() {\n    this.loadConfigurations();\n  }\n\n  async loadConfigurations() {\n    this.reloading = true;\n    this.configurations$ = of(\n      await this.repositoryService.listRepositoryEntries(RepositoryType.CONFIGURATION)\n    );\n    this.reloading = false;\n    this.reset();\n  }\n\n  async add() {\n    try {\n      await (this.bsModalService.show(ConfigurationDetailComponent, {\n        class: 'modal-sm',\n        ignoreBackdropClick: true\n      }).content as ConfigurationDetailComponent).result;\n      await this.loadConfigurations();\n    } catch (ex) {\n      // intended empty\n    }\n  }\n\n  async edit(configuration: IManagedObject) {\n    const fileBinary: File = await this.repositoryService.getBinaryFile(configuration.url, {\n      allowExternal: false\n    });\n    try {\n      const modal = this.bsModalService.show(ConfigurationDetailComponent, {\n        class: 'modal-sm',\n        ignoreBackdropClick: true,\n        initialState: {\n          selected: configuration,\n          version: configuration.name,\n          deviceType: configuration.deviceType,\n          description: configuration.description,\n          binary: { file: fileBinary, url: configuration.url }\n        }\n      }).content as ConfigurationDetailComponent;\n      modal.mo = configuration;\n      await modal.result;\n      await this.loadConfigurations();\n    } catch (ex) {\n      // intended empty\n    }\n  }\n\n  isBinaryFile(configuration: IManagedObject) {\n    return configuration.url ? !!this.inventoryBinaryService.getIdFromUrl(configuration.url) : false;\n  }\n\n  @memoize(property('id'))\n  getBinaryName(configuration: IManagedObject) {\n    return this.repositoryService.getBinaryName$(configuration.url);\n  }\n\n  async download(configuration: IManagedObject) {\n    const fileBinary: File = await this.repositoryService.getBinaryFile(configuration.url, {\n      allowExternal: false\n    });\n    saveAs(fileBinary);\n  }\n\n  async delete(configuration: IManagedObject) {\n    try {\n      const title = gettext('Delete configuration snapshot');\n      const confirmationText = gettext(\n        'You are about to delete the configuration snapshot {{ name }}.'\n      );\n      const hint = gettext('This operation is irreversible.');\n      const proceed = gettext('Do you want to proceed?');\n      const body = [\n        this.translateService.instant(confirmationText, {\n          name: configuration.name\n        }),\n        this.translateService.instant(hint),\n        this.translateService.instant(proceed)\n      ].join(' ');\n      const labels = {\n        ok: gettext('Delete')\n      };\n      await this.modalService.confirm(title, body, Status.DANGER, labels);\n      await this.repositoryService.delete(configuration);\n      this.alert.success(this.DELETED_SUCCESS_MSG);\n      await this.loadConfigurations();\n    } catch (ex) {\n      if (ex) {\n        this.alert.addServerFailure(ex);\n      }\n    }\n  }\n\n  setPipe(filterTerm: string) {\n    this.filterTerm = filterTerm;\n    this.filterPipe = pipe(\n      map((data: []) => {\n        this.data =\n          filterTerm.trim().length === 0\n            ? data\n            : data.filter(\n            (mo: IManagedObject) =>\n              this.filterContainString(mo.name, filterTerm) ||\n              this.filterContainString(mo.configurationType, filterTerm) ||\n              this.filterContainString(mo.deviceType, filterTerm) ||\n              this.filterContainString(mo.description, filterTerm)\n            );\n\n        return this.data;\n      })\n    );\n  }\n\n  shouldShowEmptyState() {\n    return !(this.data && this.data.length > 0);\n  }\n\n  reset() {\n    this.filter.filterTerm = '';\n    this.setPipe('');\n  }\n\n  private filterContainString(name: string, filterTerm: string) {\n    const term = filterTerm.toLowerCase().trim();\n    return name && name.toLowerCase().indexOf(term) > -1;\n  }\n}\n","export enum LinkRenderType {\n    DOWNLOAD,\n    LINK,\n    TEXTONLY\n}\n","import { AlertService } from '@c8y/ngx-components';\nimport { Component, Input } from '@angular/core';\nimport { RepositoryService } from './../repository.service';\nimport { memoize } from '@c8y/ngx-components';\nimport { saveAs } from 'file-saver';\nimport { InventoryBinaryService } from '@c8y/client';\nimport { LinkRenderType } from './link-render-type.enum';\n\n@Component({\n  selector: 'c8y-file-download',\n  templateUrl: './file-download.component.html'\n})\nexport class FileDownloadComponent {\n  @Input() url: string;\n  linkRenderType = LinkRenderType;\n  isDownloading = false;\n  constructor(\n    private repositoryService: RepositoryService,\n    private inventoryBinaryService: InventoryBinaryService,\n    private alertService: AlertService\n  ) {}\n\n  @memoize()\n  getBinaryName$(binaryUrl) {\n    return this.repositoryService.getBinaryName$(binaryUrl);\n  }\n\n  @memoize()\n  determineBehavior(): LinkRenderType {\n    let result: LinkRenderType;\n    if (this.inventoryBinaryService.getIdFromUrl(this.url)) {\n      result = LinkRenderType.DOWNLOAD;\n    } else if (this.url.match(/\\/\\//g)) {\n      result = LinkRenderType.LINK;\n    } else {\n      result = LinkRenderType.TEXTONLY;\n    }\n    return result;\n  }\n\n  async downloadFile() {\n    try {\n      this.isDownloading = true;\n      const binary: File = await this.repositoryService.getBinaryFile(this.url, {\n        allowExternal: false\n      });\n      this.isDownloading = false;\n      saveAs(binary);\n    } catch (ex) {\n      this.isDownloading = false;\n      if (ex) {\n        this.alertService.addServerFailure(ex);\n      }\n    }\n  }\n}\n","import { Component, EventEmitter } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  gettext,\n  ISelectModalObject,\n  ISelectModalOption,\n  ModalLabels,\n  ModalSelectionMode\n} from '@c8y/ngx-components';\nimport { get } from 'lodash-es';\nimport { IManagedObject, QueriesUtil } from '@c8y/client';\nimport { Subject, Observable, from, BehaviorSubject } from 'rxjs';\nimport { switchMap, map, mergeMap, shareReplay, tap } from 'rxjs/operators';\nimport { RepositoryService } from '../repository.service';\nimport {\n  RepositoryType,\n  RepositoryCategory,\n  RepositoryBinary,\n  SelectedRepositoryBinary\n} from '../repository.model';\n\n// MODAL STRUCTURE\n// - selectModalObject (repository entry (repositoryCategory) -> type c8y_Firmware/c8y_Software)\n//   -- ISelectModalOption (repository binary entry (repositoryBinary) => type c8y_FirmwareBinary/c8y_SoftwareBinary)\n//   -- ISelectModalOption...\n// - selectModalObject...\n\n/**\n * RepositorySelectModalComponent displays repository entries options and allows to select them.\n *\n * @example\n * ```\n * import { take } from 'rxjs/operators';\n * import { RepositorySelectModalComponent, ModalSelectionMode, RepositoryType } from '@c8y/ngx-components/repository';\n *\n * const initialState = {\n *   repositoryType: RepositoryType.FIRMWARE,\n *   title: gettext('Install firmware'),\n *   subTitle: gettext('Available firmwares matching the device type'),\n *   icon: 'c8y-firmware',\n *   mode: ModalSelectionMode.SINGLE,\n *   labels: { ok: gettext('Install') },\n *   disableSelected: false\n * };\n *\n * const modal = this.bsModal.show(RepositorySelectModalComponent, {\n *   ignoreBackdropClick: true,\n *   initialState\n * });\n *\n * modal.content.load.next();\n * modal.content.resultEmitter.pipe(take(1)).subscribe((firmware) => {\n *   ...\n * })\n * ```\n */\n\n@Component({\n  selector: 'c8y-repository-select-modal',\n  templateUrl: './repository-select-modal.component.html'\n})\nexport class RepositorySelectModalComponent {\n  /**\n   * Optional\n   * Allows to provide custom data.\n   * @example\n   * ```\n   * import { from } from 'rxjs';\n   *\n   * const repositoryEntry = { name: 'ExampleEntry', type: 'c8y_Firmware' };\n   * const versions = [{ c8y_Firmware: { version: '1.0.0', url: 'http://example.com' } }];\n   *\n   * const initialState = {repositoryEntriesWithVersions$: from({ ...repositoryEntry, versions })};\n   * ```\n   */\n  repositoryEntriesWithVersions$: Observable<IManagedObject[]> = undefined;\n  /**\n   * Repository entry type.\n   */\n  repositoryType: RepositoryType.FIRMWARE | RepositoryType.SOFTWARE;\n  /**\n   * Optional\n   * Allows to use custom badges templates.\n   * @example\n   * ```\n   * import { gettext } from '@c8y/ngx-components';\n   *\n   * const badgeTemplates = { '=1': gettext('{{count}} version'), other: gettext('{{count}} versions') };\n   * const initialState = { badgeTemplates };\n   * ```\n   */\n  badgeTemplates = { '=1': gettext('{{count}} version'), other: gettext('{{count}} versions') };\n  /**\n   * Optional\n   * Allows to provide custom modal title.\n   */\n  title: string = gettext('Select repository entry');\n  /**\n   * Optional\n   * Allows to provide custom modal subtitle.\n   */\n  subTitle: string;\n  /**\n   * Loads the content of the modal.\n   * Must be invoked by the modal's caller.\n   */\n  load: Subject<void> = new Subject();\n  /**\n   * Optional\n   * Emits a search string currently entered in the filter input.\n   * Use it to filter the items if you use custom repositoryEntriesWithVersions$.\n   */\n  searchTerm: BehaviorSubject<string> = new BehaviorSubject('');\n  /**\n   * Optional\n   * Allows to provide device type query to restrict search criteria.\n   * Only takes effect when repositoryEntriesWithVersions$ is not provided,\n   * otherwise modal's caller have to provide already filtered data in the repositoryEntriesWithVersions$.\n   */\n  deviceTypeQuery: any = {};\n  /**\n   * Optional\n   * Allows to provide query to restrict search criteria.\n   * Only takes effect when repositoryEntriesWithVersions$ is not provided,\n   * otherwise modal's caller have to provide already filtered data in the repositoryEntriesWithVersions$.\n   */\n  searchQuery: any = {};\n  /**\n   * Optional\n   * Allows to provide custom labels for the buttons responsible for confirm/dismiss modal actions.\n   */\n  labels: ModalLabels = { ok: gettext('Save') };\n  /**\n   * Optional\n   * Allows to hide the filter input field.\n   * By default, the filter input field is displayed.\n   */\n  showFilter: boolean = true;\n  /**\n   * Optional\n   * Allows to show a warning that the search criteria should be narrowed down.\n   * By default, this warning is hidden.\n   */\n  areMoreEntries: boolean = false;\n  /**\n   * Optional\n   * Allows to pass the array of items. Each item from this array will be marked as selected in the modal.\n   */\n  selected: SelectedRepositoryBinary[];\n  /**\n   * Emits the list of selected options.\n   */\n  resultEmitter: EventEmitter<SelectedRepositoryBinary[]> = new EventEmitter<\n    SelectedRepositoryBinary[]\n  >();\n  /**\n   * Optional\n   * Allows to change selection mode.\n   * Supported options:\n   *   * single: only single option can be selected.\n   *   * multiple: multiple options can be selected.\n   */\n  mode: ModalSelectionMode = ModalSelectionMode.SINGLE;\n  /**\n   * Optional\n   * Allows to use custom icon in the modal header.\n   */\n  icon: string;\n  /**\n   * Allows to block selection of the other versions from the same repository entry.\n   */\n  disableSelected: boolean = true;\n  modalEntries: Observable<ISelectModalObject[]> = this.load.pipe(\n    switchMap(() => this.repositoryEntriesWithVersions$),\n    mergeMap(mos => this.aggregate(mos)),\n    tap(items => {\n      this.areMoreEntries = items.length >= this.PAGE_SIZE ? true : false;\n    })\n  );\n  private PAGE_SIZE = 100;\n  private queriesUtil: QueriesUtil;\n\n  constructor(\n    private repositoryService: RepositoryService,\n    private translateService: TranslateService\n  ) {\n    this.queriesUtil = new QueriesUtil();\n  }\n\n  ngOnInit() {\n    if (!this.repositoryType) {\n      throw new Error('Repository type must be defined');\n    }\n\n    if (!this.repositoryEntriesWithVersions$) {\n      this.repositoryEntriesWithVersions$ = from(\n        this.repositoryService.listRepositoryEntries(this.repositoryType, {\n          query: this.queriesUtil.addOrFilter(this.deviceTypeQuery, this.searchQuery),\n          params: { pageSize: this.PAGE_SIZE }\n        })\n      ).pipe(\n        map(({ data }) => data),\n        map(mos => this.getAndAssignRepositoryBinaries(mos)),\n        shareReplay(1)\n      );\n    }\n  }\n\n  getAndAssignRepositoryBinaries(mos: IManagedObject[]) {\n    mos.forEach(mo => {\n      mo.versions = this.repositoryService.listAllVersions(mo);\n    });\n    return mos;\n  }\n\n  search(searchTerm: string) {\n    this.searchTerm.next(searchTerm);\n    if (!searchTerm) {\n      this.searchQuery = {};\n    } else {\n      this.searchQuery = { name: `*${searchTerm}*` };\n    }\n    this.load.next();\n  }\n\n  result(selectedItems: SelectedRepositoryBinary[]) {\n    this.resultEmitter.emit(selectedItems);\n  }\n\n  async aggregate(mos: IManagedObject[]): Promise<ISelectModalObject[]> {\n    const repositoryType = this.repositoryType;\n    const selectedItems: SelectedRepositoryBinary[] = this.selected;\n\n    return Promise.all(\n      mos.map(async repositoryEntry => {\n        const options: ISelectModalOption[] = this.getSelectModalOptions(\n          await this.repositoryService.fetchAllItemsFromList(repositoryEntry.versions),\n          selectedItems,\n          repositoryEntry as RepositoryCategory,\n          repositoryType\n        );\n        const selectModalObject = this.getSelectModalObject(\n          repositoryEntry as RepositoryCategory,\n          options\n        );\n\n        return selectModalObject;\n      })\n    );\n  }\n\n  getSelectModalOptions(\n    versions: RepositoryBinary[],\n    selectedItems: SelectedRepositoryBinary[],\n    repositoryEntry: RepositoryCategory,\n    repositoryType: RepositoryType\n  ): ISelectModalOption[] {\n    const selectModalOptions: ISelectModalOption[] = [];\n    versions.forEach(repositoryBinary => {\n      const isSelected: boolean = this.isBinaryRepositorySelected(\n        selectedItems,\n        repositoryEntry,\n        repositoryBinary,\n        repositoryType\n      );\n\n      const { version } = repositoryBinary[`${repositoryType}`];\n      const bodyValue =\n        version || `(${this.translateService.instant(gettext('not specified`version`'))})`;\n      const bodyClass = version ? '' : 'text-muted';\n      selectModalOptions.push({\n        body: [\n          {\n            value: bodyValue,\n            class: bodyClass\n          }\n        ],\n        obj: {\n          id: repositoryBinary.id,\n          name: repositoryEntry.name,\n          version,\n          ...(get(repositoryBinary, 'c8y_Patch.dependency') && {\n            dependency: get(repositoryBinary, 'c8y_Patch.dependency')\n          }),\n          ...(get(repositoryBinary, 'c8y_Patch') && { isPatch: true }),\n          url: repositoryBinary[`${repositoryType}`].url\n        },\n        selected: isSelected\n      });\n    });\n    return selectModalOptions;\n  }\n\n  isBinaryRepositorySelected(\n    selectedItems: SelectedRepositoryBinary[],\n    repositoryEntry: RepositoryCategory,\n    repositoryBinary: RepositoryBinary,\n    repositoryType: RepositoryType\n  ): boolean {\n    const isSelected = selectedItems\n      ? selectedItems.filter(\n          repositoryFragment =>\n            repositoryFragment.name === repositoryEntry.name &&\n            repositoryFragment.version === repositoryBinary[`${repositoryType}`].version\n        ).length > 0\n      : false;\n\n    return isSelected;\n  }\n\n  getSelectModalObject(\n    repositoryEntry: RepositoryCategory,\n    options: ISelectModalOption[]\n  ): ISelectModalObject {\n    const label =\n      options.length === 1\n        ? this.translateService.instant(this.badgeTemplates['=1'], { count: options.length })\n        : this.translateService.instant(this.badgeTemplates.other, { count: options.length });\n\n    const selectModalObject: ISelectModalObject = {\n      groupId: repositoryEntry.id,\n      body: [\n        { value: repositoryEntry.name, class: 'text-truncate' },\n        { value: repositoryEntry.description, class: 'text-truncate text-muted' }\n      ],\n      additionalInformation: { value: label, class: 'label label-info' },\n      options\n    };\n\n    return selectModalObject;\n  }\n}\n","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { assign, get, isEmpty } from 'lodash-es';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BehaviorSubject, Observable, combineLatest, from, of } from 'rxjs';\nimport { distinctUntilChanged, filter, map, shareReplay, switchMap, take } from 'rxjs/operators';\n\nimport { ModalSelectionMode, gettext } from '@c8y/ngx-components';\nimport { IManagedObject, IOperation, InventoryService, OperationStatus } from '@c8y/client';\n\nimport { RepositoryService } from '../repository.service';\nimport { DeviceFirmware, FirmwareBinary, RepositoryType } from '../repository.model';\nimport { RepositorySelectModalComponent } from '../select-modal/repository-select-modal.component';\n\n@Component({\n  selector: 'c8y-firmware-device-tab',\n  templateUrl: 'firmware-device-tab.component.html'\n})\nexport class FirmwareDeviceTabComponent {\n  isEmpty = isEmpty;\n  reloading: boolean = false;\n  device$: BehaviorSubject<IManagedObject> = new BehaviorSubject(\n    this.route.parent.snapshot.data.contextData\n  );\n  deviceFirmwareFragment$: Observable<DeviceFirmware> = this.device$.pipe(\n    map(device => device.c8y_Firmware)\n  );\n  firmwareBinary$: Observable<IManagedObject> = this.deviceFirmwareFragment$.pipe(\n    filter(deviceFirmwareFragment => !isEmpty(deviceFirmwareFragment)),\n    switchMap(deviceFirmwareFragment =>\n      from(\n        this.repository.getRepositoryBinaryMoByVersion(\n          deviceFirmwareFragment,\n          RepositoryType.FIRMWARE\n        )\n      )\n    ),\n    shareReplay(1)\n  );\n  repositoryEntry$: Observable<IManagedObject> = this.firmwareBinary$.pipe(\n    switchMap(mo => this.repository.getRepositoryEntryMO$(mo)),\n    shareReplay(1)\n  );\n  patches$: Observable<IManagedObject[]> = combineLatest(\n    this.firmwareBinary$,\n    this.repositoryEntry$\n  ).pipe(\n    switchMap(([firmwareBinary, repositoryEntry]) => {\n      if (repositoryEntry && firmwareBinary) {\n        const version: string = this.repository.getBaseVersionFromMO(\n          firmwareBinary as FirmwareBinary\n        );\n\n        return from(this.repository.listPatchVersions(repositoryEntry, version)).pipe(\n          map(({ data }) => data)\n        );\n      } else {\n        return of([]);\n      }\n    }),\n    shareReplay(1)\n  );\n  supportsFirmwareOperations$: Observable<boolean> = this.device$.pipe(\n    map(\n      (device: IManagedObject) =>\n        get(device, 'c8y_SupportedOperations', []).indexOf('c8y_Firmware') > -1\n    )\n  );\n  changesOperation$ = new BehaviorSubject<IOperation>(null);\n  changesInProgress$: Observable<boolean> = this.changesOperation$.pipe(\n    map(operation => this.isInProgress(operation))\n  );\n\n  constructor(\n    private route: ActivatedRoute,\n    private repository: RepositoryService,\n    private inventory: InventoryService,\n    private bsModal: BsModalService\n  ) {}\n\n  async ngOnInit() {\n    // TODO check route snapshot, why is not refreshing device.\n    // Scenario: missing deviceFirmwareFragment => install new version => switch tabs.\n    // Expected: device should be set.\n    await this.loadDevice();\n    await this.loadOperation();\n  }\n\n  installFirmware() {\n    const initialState: Partial<RepositorySelectModalComponent> & {\n      repositoryEntriesWithVersionsFn$: (modal: any) => Observable<IManagedObject[]>;\n    } = {\n      repositoryEntriesWithVersions$: of([]),\n      repositoryEntriesWithVersionsFn$: modal =>\n        this.getRepositoryEntriesWithVersions$(modal.content.searchTerm),\n      repositoryType: RepositoryType.FIRMWARE,\n      title: gettext('Install firmware'),\n      subTitle: gettext('Available firmwares matching the device type'),\n      icon: 'c8y-firmware',\n      mode: ModalSelectionMode.SINGLE,\n      labels: { ok: gettext('Install') },\n      disableSelected: false\n    };\n\n    this.deviceFirmwareFragment$\n      .pipe(\n        take(1),\n        switchMap(deviceFirmwareFragment => {\n          if (deviceFirmwareFragment) {\n            const { name, version } = deviceFirmwareFragment;\n            const selected = [{ name, version }];\n            assign(initialState, { selected });\n          }\n\n          const modal = this.bsModal.show(RepositorySelectModalComponent, {\n            ignoreBackdropClick: true,\n            initialState\n          });\n\n          if (initialState.repositoryEntriesWithVersionsFn$) {\n            modal.content.repositoryEntriesWithVersions$ = initialState.repositoryEntriesWithVersionsFn$(\n              modal\n            );\n          }\n\n          modal.content.load.next();\n\n          return modal.content.resultEmitter;\n        })\n      )\n      .subscribe(([selectedFirmware]) => {\n        this.handleOperation(selectedFirmware);\n      });\n  }\n\n  getRepositoryEntriesWithVersions$(searchTerm$: BehaviorSubject<string>) {\n    return searchTerm$.pipe(\n      distinctUntilChanged(),\n      switchMap(searchTerm =>\n        this.repository.listRepositoryEntries(RepositoryType.FIRMWARE, {\n          query: this.repository.getDeviceTypeQuery(RepositoryType.FIRMWARE, this.device$.value),\n          partialName: searchTerm,\n          params: { pageSize: 100 }\n        })\n      ),\n      map(({ data }) => data),\n      map(mos => this.getAndAssignRepositoryBinaries(mos)),\n      shareReplay(1)\n    );\n  }\n\n  getAndAssignRepositoryBinaries(mos: IManagedObject[]) {\n    mos.forEach(mo => {\n      mo.versions = this.repository.listBaseVersions(mo);\n    });\n    return mos;\n  }\n\n  addPatch() {\n    const initialState: Partial<RepositorySelectModalComponent> & {\n      repositoryEntriesWithVersions$: Observable<IManagedObject[]>;\n    } = {\n      repositoryType: RepositoryType.FIRMWARE,\n      repositoryEntriesWithVersions$: this.getRepositoryEntryWithPatches$(),\n      title: gettext('Install firmware'),\n      subTitle: gettext('Available firmwares matching the device type'),\n      icon: 'c8y-firmware',\n      mode: ModalSelectionMode.SINGLE,\n      labels: { ok: gettext('Install') },\n      disableSelected: false\n    };\n\n    this.deviceFirmwareFragment$\n      .pipe(\n        take(1),\n        switchMap(deviceFirmwareFragment => {\n          if (deviceFirmwareFragment) {\n            const { name, version } = deviceFirmwareFragment;\n            const selected = [{ name, version }];\n            assign(initialState, { selected });\n          }\n\n          const modal = this.bsModal.show(RepositorySelectModalComponent, {\n            ignoreBackdropClick: true,\n            initialState\n          });\n          modal.content.load.next();\n\n          return modal.content.resultEmitter;\n        })\n      )\n      .subscribe(([selectedOption]) => {\n        this.handleOperation(selectedOption);\n      });\n  }\n\n  getRepositoryEntryWithPatches$() {\n    return combineLatest(this.repositoryEntry$, this.patches$).pipe(\n      map(([repositoryEntry, patches]) => {\n        return [{ ...repositoryEntry, versions: patches }];\n      })\n    );\n  }\n\n  async loadDevice() {\n    this.reloading = true;\n    const deviceId = this.device$.value.id;\n    const device = (await this.inventory.detail(deviceId, { withChildren: false })).data;\n    this.device$.next(device);\n    this.reloading = false;\n  }\n\n  private async handleOperation(selectedFirmware) {\n    const operation = await this.repository.createFirmwareUpdateOperation(\n      this.device$.value,\n      selectedFirmware\n    );\n    this.trackOperation(operation);\n  }\n\n  private async loadOperation() {\n    const deviceId = this.device$.value.id;\n    const operation = await this.repository.getLastFirmwareUpdateOperation(deviceId);\n    this.trackOperation(operation);\n  }\n\n  private trackOperation(operation: IOperation) {\n    this.changesOperation$.next(operation);\n\n    if (this.isInProgress(operation)) {\n      this.repository.observeOperation(operation).subscribe(\n        operationUpdate => {\n          this.changesOperation$.next(operationUpdate);\n          if (operationUpdate.status === OperationStatus.SUCCESSFUL) {\n            this.loadDevice();\n          }\n        },\n        operationUpdate => {\n          this.changesOperation$.next(operationUpdate);\n        }\n      );\n    }\n  }\n\n  private isInProgress(operation: IOperation) {\n    return (\n      operation && [OperationStatus.PENDING, OperationStatus.EXECUTING].includes(operation.status)\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { get, has, indexOf } from 'lodash-es';\n\nconst FIRMWARE_FRAGMENT = 'c8y_Firmware';\nconst SUPPORTED_OPERATIONS_FRAGMENT = 'c8y_SupportedOperations';\n\n@Injectable()\nexport class FirmwareDeviceTabGuard implements CanActivate {\n  canActivate(route) {\n    const contextData = get(route, 'data.contextData') || get(route, 'parent.data.contextData');\n    const supportedOperations = get(contextData, SUPPORTED_OPERATIONS_FRAGMENT);\n    return (\n      (!!supportedOperations ? indexOf(supportedOperations, FIRMWARE_FRAGMENT) >= 0 : false) ||\n      has(contextData, 'c8y_Firmware')\n    );\n  }\n}\n","import { Component, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { RepositoryService } from '../repository.service';\nimport { RepositoryType, ModalModel, RepositoryCategory } from '../repository.model';\nimport { AlertService, gettext } from '@c8y/ngx-components';\nimport { isUndefined, get, assign } from 'lodash-es';\nimport { BehaviorSubject, Subscription, from } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, tap, switchMap } from 'rxjs/operators';\nimport { PickedFiles } from '@c8y/ngx-components';\nimport { IManagedObject } from '@c8y/client';\n\n@Component({\n  selector: 'c8y-add-firmware-software-modal',\n  templateUrl: 'add-firmware-modal.component.html'\n})\nexport class AddFirmwareModalComponent {\n  @ViewChild('firmwareForm', { static: false }) form: NgForm;\n  @Output() saved: EventEmitter<RepositoryCategory> = new EventEmitter<RepositoryCategory>();\n  onInput: BehaviorSubject<string> = new BehaviorSubject<string>('');\n  model: ModalModel = {\n    selected: undefined,\n    version: undefined,\n    description: undefined,\n    deviceType: undefined,\n    binary: {\n      file: undefined,\n      url: undefined\n    }\n  };\n  firmwaresResult;\n  saving = false;\n  firmwarePreselected: boolean = false;\n  textForFirmwareUrlPopover: string = gettext(`Path for binaries can vary depending on device agent implementation, e.g.:\n    /firmware/binaries/firmware1.bin\n    https://firmware/binary/123\n    ftp://firmware/binary/123.tar.gz\n  `);\n  private inputSubscription$: Subscription;\n\n  constructor(\n    private modal: BsModalRef,\n    private repositoryService: RepositoryService,\n    private alert: AlertService\n  ) {}\n\n  ngOnInit() {\n    this.setInitialState();\n    this.loadFirmwares();\n  }\n\n  setInitialState() {\n    if (this.model.selected) {\n      this.firmwarePreselected = true;\n    }\n  }\n\n  loadFirmwares() {\n    this.inputSubscription$ = this.onInput\n      .pipe(\n        tap(() => {\n          if (!this.firmwarePreselected) {\n            this.model.description = null;\n            if (this.form) {\n              this.form.form.get('description').reset();\n            }\n          }\n        }),\n        debounceTime(300),\n        distinctUntilChanged(),\n        switchMap(searchStr => this.getFirmwareResult(searchStr))\n      )\n      .subscribe(result => {\n        this.firmwaresResult = result;\n      });\n  }\n\n  getFirmwareResult(searchStr: string) {\n    return from(\n      this.repositoryService.listRepositoryEntries(RepositoryType.FIRMWARE, {\n        partialName: searchStr,\n        skipLegacy: true\n      })\n    );\n  }\n\n  async save() {\n    this.saving = true;\n    this.repositoryService\n      .create(this.model, RepositoryType.FIRMWARE)\n      .then(savedFirmware => {\n        this.successMsg();\n        this.saving = false;\n        this.saved.next(savedFirmware);\n        this.cancel();\n      })\n      .catch(e => {\n        this.saving = false;\n        this.saved.error(e);\n        this.cancel();\n      });\n  }\n\n  successMsg() {\n    const msg = gettext('Firmware added.');\n    this.alert.success(msg);\n  }\n\n  cancel() {\n    this.modal.hide();\n    this.saved.complete();\n  }\n\n  ngOnDestroy() {\n    this.inputSubscription$.unsubscribe();\n  }\n\n  onFile(dropped: PickedFiles) {\n    if (!isUndefined(dropped.url)) {\n      this.model.binary = {\n        url: dropped.url\n      };\n      return;\n    } else if (!isUndefined(dropped.droppedFiles)) {\n      this.model.binary = {\n        file: dropped.droppedFiles[0].file\n      };\n      return;\n    } else {\n      this.model.binary = {\n        file: undefined,\n        url: undefined\n      };\n    }\n  }\n\n  onFirmwareSelect(firmware: IManagedObject) {\n    assign(this.model, {\n      selected: firmware,\n      description: firmware.description,\n      deviceType: get(firmware, 'c8y_Filter.type')\n    });\n  }\n}\n","import { Component, ViewChild, Output, EventEmitter } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { RepositoryService } from '../repository.service';\nimport { RepositoryType, ModalModel, RepositoryCategory } from '../repository.model';\nimport { AlertService, gettext } from '@c8y/ngx-components';\nimport { IManagedObject, IResultList } from '@c8y/client';\nimport { isUndefined } from 'lodash-es';\nimport { BehaviorSubject, of, from, pipe, merge, Observable } from 'rxjs';\nimport { BsDropdownDirective } from 'ngx-bootstrap/dropdown';\nimport { NgForm } from '@angular/forms';\nimport {\n  debounceTime,\n  tap,\n  switchMap,\n  distinctUntilChanged,\n  shareReplay,\n  map\n} from 'rxjs/operators';\nimport { PickedFiles } from '@c8y/ngx-components';\n\n@Component({\n  selector: 'c8y-add-firmware-patch-modal.component',\n  templateUrl: 'add-firmware-patch-modal.component.html'\n})\nexport class AddFirmwarePatchModalComponent {\n  @Output() saved: EventEmitter<RepositoryCategory> = new EventEmitter<RepositoryCategory>();\n\n  @ViewChild('dropdown', { static: false }) dropdown: BsDropdownDirective;\n  @ViewChild('firmwarePatchForm', { static: false }) form: NgForm;\n  textForFirmwareUrlPopover: string = gettext(`Path for binaries can vary depending on device agent implementation, e.g.:\n    /firmware/binaries/firmware1.bin\n    https://firmware/binary/123\n    ftp://firmware/binary/123.tar.gz\n  `);\n\n  model: ModalModel = {\n    selected: undefined,\n    dependency: null,\n    patchVersion: undefined,\n    binary: {\n      file: undefined,\n      url: undefined\n    }\n  };\n\n  firmwareInput$ = new BehaviorSubject<string>('');\n  firmwares$: Observable<IResultList<IManagedObject>> = this.firmwareInput$.pipe(\n    debounceTime(300),\n    distinctUntilChanged(),\n    switchMap(searchStr =>\n      from(\n        this.repository.listRepositoryEntries(RepositoryType.FIRMWARE, {\n          partialName: searchStr,\n          skipLegacy: true\n        })\n      )\n    ),\n    shareReplay(1)\n  );\n  firmwareSelected$ = new BehaviorSubject<Partial<RepositoryCategory>>(null);\n  patchDependencyInput$ = new BehaviorSubject<string>('');\n\n  saving = false;\n  firmwarePreselected: boolean = false;\n  baseVersions$: Observable<IResultList<IManagedObject>> = merge(\n    this.firmwareInput$.pipe(\n      tap(() => {\n        this.model.dependency = null;\n        if (this.form) {\n          this.form.form.get('patchDependency').reset();\n        }\n      }),\n      switchMap(() => of(null))\n    ),\n    this.firmwareSelected$\n  ).pipe(\n    switchMap(selectedFirmware =>\n      selectedFirmware ? this.repository.listBaseVersions(selectedFirmware) : of(null)\n    ),\n    shareReplay(1)\n  );\n  baseVersionsFilterPipe = pipe(\n    switchMap((data: []) =>\n      this.patchDependencyInput$.pipe(\n        map(partialVersion =>\n          data.filter((mo: any) => {\n            const version = mo.c8y_Firmware.version.toLowerCase();\n            return (\n              partialVersion.length === 0 || version.indexOf(partialVersion.toLowerCase()) > -1\n            );\n          })\n        )\n      )\n    )\n  );\n\n  constructor(\n    private modal: BsModalRef,\n    private repository: RepositoryService,\n    private alert: AlertService\n  ) {}\n\n  async ngOnInit() {\n    this.setInitialState();\n  }\n\n  setInitialState() {\n    if (this.model.selected) {\n      this.firmwarePreselected = true;\n      this.firmwareSelected$.next(this.model.selected);\n    }\n  }\n\n  async save() {\n    this.saving = true;\n    this.repository\n      .create(this.model, RepositoryType.FIRMWARE)\n      .then(savedFirmware => {\n        this.successMsg();\n        this.saving = false;\n        this.saved.next(savedFirmware);\n        this.cancel();\n      })\n      .catch(e => {\n        this.saving = false;\n        this.saved.error(e);\n        this.cancel();\n      });\n  }\n\n  successMsg() {\n    const msg = gettext('Firmware patch added.');\n    this.alert.success(msg);\n  }\n\n  cancel() {\n    this.modal.hide();\n    this.saved.complete();\n  }\n\n  onFile(dropped: PickedFiles) {\n    if (!isUndefined(dropped.url)) {\n      this.model.binary = {\n        url: dropped.url\n      };\n      return;\n    } else if (!isUndefined(dropped.droppedFiles)) {\n      this.model.binary = {\n        file: dropped.droppedFiles[0].file\n      };\n      return;\n    } else {\n      this.model.binary = {\n        file: undefined,\n        url: undefined\n      };\n    }\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { IManagedObject, InventoryService, IResultList } from '@c8y/client';\nimport { AlertService, gettext, memoize, ModalService, Status } from '@c8y/ngx-components';\nimport { TranslateService } from '@ngx-translate/core';\nimport { property } from 'lodash-es';\nimport { BsModalService, ModalOptions } from 'ngx-bootstrap/modal';\nimport { BehaviorSubject, combineLatest, defer, merge, Observable, Subject } from 'rxjs';\nimport {\n  distinctUntilKeyChanged,\n  map,\n  shareReplay,\n  switchMap,\n  take,\n  takeUntil,\n  tap,\n  withLatestFrom\n} from 'rxjs/operators';\nimport { FirmwareBinary } from '../repository.model';\nimport { RepositoryService } from './../repository.service';\nimport { AddFirmwareModalComponent } from './add-firmware-modal.component';\nimport { AddFirmwarePatchModalComponent } from './add-firmware-patch-modal.component';\n\n@Component({\n  selector: 'c8y-firmware-details',\n  templateUrl: './firmware-details.component.html'\n})\nexport class FirmwareDetailsComponent implements OnInit, OnDestroy {\n  reload$: Subject<void> = new Subject();\n  reloading$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  updateFirmware$: Subject<Partial<IManagedObject>> = new Subject();\n  firmwareUpdated$: Subject<IManagedObject> = new Subject();\n  baseVersionsUpdated$: Subject<void> = new Subject();\n  patchVersionsUpdated$: Subject<void> = new Subject();\n\n  firmware$: Observable<IManagedObject> = merge(\n    this.activatedRoute.params.pipe(\n      map(params => params.id),\n      switchMap(id => defer(() => this.inventoryService.detail(id).then(result => result.data)))\n    ),\n    this.reload$.pipe(\n      tap(() => this.reloading$.next(true)),\n      switchMap(() => this.activatedRoute.params),\n      map(params => params.id),\n      switchMap(id => defer(() => this.inventoryService.detail(id).then(result => result.data))),\n      tap(() => this.reloading$.next(false))\n    ),\n    this.firmwareUpdated$\n  ).pipe(shareReplay(1));\n\n  baseVersions$: Observable<IResultList<IManagedObject>> = merge(\n    this.firmware$.pipe(distinctUntilKeyChanged('id')),\n    this.baseVersionsUpdated$,\n    this.patchVersionsUpdated$,\n    this.reload$\n  ).pipe(\n    switchMap(() => this.firmware$),\n    switchMap(firmware => this.repositoryService.listBaseVersions(firmware)),\n    shareReplay(1)\n  );\n\n  isLegacy$: Observable<boolean> = this.firmware$.pipe(\n    map(firmware => this.repositoryService.isLegacyEntry(firmware)),\n    shareReplay(1)\n  );\n\n  canAddPatchVersions$: Observable<boolean> = combineLatest(\n    this.isLegacy$,\n    this.baseVersions$.pipe(map(({ data }) => data.length > 0))\n  ).pipe(map(([isLegacy, hasBaseVersions]) => !isLegacy && hasBaseVersions));\n\n  expanded: { [id: string]: boolean } = {};\n\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private inventoryService: InventoryService,\n    private repositoryService: RepositoryService,\n    private alertService: AlertService,\n    private translateService: TranslateService,\n    private modalService: ModalService,\n    private bsModalService: BsModalService\n  ) {}\n\n  ngOnInit() {\n    this.updateFirmware$\n      .pipe(\n        withLatestFrom(this.firmware$),\n        switchMap(([firmwarePartial, firmware]) =>\n          this.inventoryService.update({\n            id: firmware.id,\n            ...firmwarePartial\n          })\n        ),\n        map(({ data }) => data),\n        tap(firmware => this.firmwareUpdated$.next(firmware)),\n        tap(() => this.alertService.success(gettext('Saved.'))),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  @memoize(property('id'))\n  getPatchVersionsCount$(baseVersion: FirmwareBinary) {\n    return merge(\n      this.firmware$.pipe(distinctUntilKeyChanged('id')),\n      this.baseVersionsUpdated$,\n      this.patchVersionsUpdated$,\n      this.reload$\n    ).pipe(\n      switchMap(() => this.firmware$),\n      switchMap(firmware => this.repositoryService.getPatchVersionsCount$(firmware, baseVersion)),\n      shareReplay(1)\n    );\n  }\n\n  @memoize()\n  getBinaryName$(binaryUrl) {\n    return this.repositoryService.getBinaryName$(binaryUrl);\n  }\n\n  @memoize(property('id'))\n  getPatchVersions$(baseVersion) {\n    return merge(\n      this.firmware$.pipe(distinctUntilKeyChanged('id')),\n      this.patchVersionsUpdated$,\n      this.reload$\n    ).pipe(\n      switchMap(() => this.firmware$),\n      switchMap(firmware => this.repositoryService.listPatchVersions(firmware, baseVersion)),\n      shareReplay(1)\n    );\n  }\n\n  addBaseVersion() {\n    this.firmware$\n      .pipe(\n        take(1),\n        switchMap(firmware => {\n          const initialState = {\n            model: {\n              selected: firmware,\n              description: firmware.description\n            }\n          };\n          const config: ModalOptions<AddFirmwareModalComponent> = {\n            class: 'modal-sm',\n            ignoreBackdropClick: true,\n            initialState\n          };\n          const modalRef = this.bsModalService.show(AddFirmwareModalComponent, config);\n          return modalRef.content.saved;\n        })\n      )\n      .subscribe(() => this.baseVersionsUpdated$.next());\n  }\n\n  addPatchVersion() {\n    this.firmware$\n      .pipe(\n        take(1),\n        switchMap(firmware => {\n          const initialState = {\n            model: {\n              selected: firmware\n            }\n          };\n          const config: ModalOptions<AddFirmwarePatchModalComponent> = {\n            class: 'modal-sm',\n            ignoreBackdropClick: true,\n            initialState\n          };\n          const modalRef = this.bsModalService.show(AddFirmwarePatchModalComponent, config);\n          return modalRef.content.saved;\n        })\n      )\n      .subscribe(() => this.patchVersionsUpdated$.next());\n  }\n\n  async deleteBaseVersion(baseVersion: IManagedObject) {\n    try {\n      const title = gettext('Delete firmware');\n      const body = `\n        ${this.translateService.instant(\n          gettext('You are about to delete firmware {{ version }} with all its patches.'),\n          { version: baseVersion.c8y_Firmware.version }\n        )}\n        ${this.translateService.instant(gettext('This operation is irreversible.'))}\n        ${this.translateService.instant(gettext('Do you want to proceed?'))}\n      `;\n      const labels = {\n        ok: gettext('Delete')\n      };\n      await this.modalService.confirm(title, body, Status.DANGER, labels);\n      await this.repositoryService.delete(baseVersion);\n      this.alertService.success(gettext('Firmware deleted.'));\n      this.baseVersionsUpdated$.next();\n    } catch (ex) {\n      // only if not cancel from modal\n      if (ex) {\n        this.alertService.addServerFailure(ex);\n      }\n    }\n  }\n\n  async deletePatchVersion(patchVersion: IManagedObject) {\n    try {\n      const title = gettext('Delete firmware patch');\n      const body = `\n        ${this.translateService.instant(\n          gettext('You are about to delete firmware patch {{ version }}.'),\n          { version: patchVersion.c8y_Firmware.version }\n        )}\n        ${this.translateService.instant(gettext('This operation is irreversible.'))}\n        ${this.translateService.instant(gettext('Do you want to proceed?'))}\n      `;\n      const labels = {\n        ok: gettext('Delete')\n      };\n      await this.modalService.confirm(title, body, Status.DANGER, labels);\n      await this.repositoryService.delete(patchVersion);\n      this.alertService.success(gettext('Firmware patch deleted.'));\n      this.patchVersionsUpdated$.next();\n    } catch (ex) {\n      // only if not cancel from modal\n      if (ex) {\n        this.alertService.addServerFailure(ex);\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.unsubscribe();\n  }\n}\n","import { Router, ActivatedRoute } from '@angular/router';\nimport { Component } from '@angular/core';\nimport { BsModalService, ModalOptions } from 'ngx-bootstrap/modal';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  distinctUntilChanged,\n  tap,\n  debounceTime,\n  switchMap,\n  shareReplay,\n  map,\n  pluck\n} from 'rxjs/operators';\nimport { Observable, BehaviorSubject, combineLatest, from } from 'rxjs';\nimport { IResultList, IManagedObject } from '@c8y/client';\nimport { ModalService, gettext, Status, AlertService, memoize } from '@c8y/ngx-components';\nimport { RepositoryService } from '../repository.service';\nimport { RepositoryType } from '../repository.model';\nimport { AddFirmwareModalComponent } from './add-firmware-modal.component';\nimport { AddFirmwarePatchModalComponent } from './add-firmware-patch-modal.component';\nimport { property, get } from 'lodash-es';\n\n@Component({\n  selector: 'c8y-firmware-list',\n  templateUrl: 'firmware-list.component.html'\n})\nexport class FirmwareListComponent {\n  textFilter$: BehaviorSubject<string> = new BehaviorSubject('');\n  reload$: BehaviorSubject<void> = new BehaviorSubject(null);\n  reloading: boolean = false;\n  firmwares$: Observable<IResultList<IManagedObject>> = combineLatest(\n    this.textFilter$.pipe(\n      debounceTime(400),\n      distinctUntilChanged()\n    ),\n    this.reload$\n  ).pipe(\n    tap(() => {\n      this.reloading = true;\n    }),\n    switchMap(([text]) => this.getFirmwares(text)),\n    tap(() => {\n      this.reloading = false;\n    }),\n    shareReplay(1)\n  );\n  canAddFirmwarePatch$: Observable<boolean> = from(\n    this.repositoryService.listRepositoryEntries(RepositoryType.FIRMWARE, { skipLegacy: true })\n  ).pipe(map(({ data }) => data.length > 0));\n  isLegacy = this.repositoryService.isLegacyEntry.bind(this.repositoryService);\n  readonly DEVICE_TYPE_NOT_AVAILABLE: string = gettext('No device type available');\n\n  constructor(\n    private repositoryService: RepositoryService,\n    private modalService: ModalService,\n    private bsModalService: BsModalService,\n    private translateService: TranslateService,\n    private alertService: AlertService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute\n  ) {}\n\n  getFirmwares(partialText?: string) {\n    const properties: string[] = ['name', 'description', 'c8y_Filter.type'];\n    const partialTextFilter = { partialText, properties };\n    return this.repositoryService.listRepositoryEntries(RepositoryType.FIRMWARE, {\n      partialTextFilter\n    });\n  }\n\n  addFirmware() {\n    const config: ModalOptions<AddFirmwareModalComponent> = { class: 'modal-sm', ignoreBackdropClick: true };\n    const modalRef = this.bsModalService.show(AddFirmwareModalComponent, config);\n    modalRef.content.saved.subscribe(savedFirmware => this.editFirmware(savedFirmware));\n  }\n\n  addFirmwarePatch() {\n    const config: ModalOptions<AddFirmwarePatchModalComponent> = { class: 'modal-sm', ignoreBackdropClick: true };\n    const modalRef = this.bsModalService.show(AddFirmwarePatchModalComponent, config);\n    modalRef.content.saved.subscribe(savedFirmware => this.editFirmware(savedFirmware));\n  }\n\n  editFirmware(firmware: Partial<IManagedObject>) {\n    this.router.navigate([firmware.id], { relativeTo: this.activatedRoute });\n  }\n\n  async deleteFirmware(firmware: IManagedObject) {\n    try {\n      const title = gettext('Delete firmware');\n      const body = `\n        ${this.translateService.instant(\n          gettext(\n            'You are about to delete firmware \"{{ name }}\" with all its versions and patches.'\n          ),\n          { name: firmware.name }\n        )}\n        ${this.translateService.instant(gettext('This operation is irreversible.'))}\n        ${this.translateService.instant(gettext('Do you want to proceed?'))}\n      `;\n      const labels = {\n        ok: gettext('Delete')\n      };\n      await this.modalService.confirm(title, body, Status.DANGER, labels);\n      await this.repositoryService.delete(firmware);\n      this.alertService.success(gettext('Firmware deleted.'));\n      this.reload$.next();\n    } catch (ex) {\n      // only if not cancel from modal\n      if (ex) {\n        this.alertService.addServerFailure(ex);\n      }\n    }\n  }\n\n  @memoize(property('id'))\n  getBaseVersionsCount$(firmware: IManagedObject): Observable<number | string> {\n    return this.firmwares$.pipe(\n      switchMap(() => this.repositoryService.getBaseVersionsCount$(firmware)),\n      shareReplay(1)\n    );\n  }\n\n  getDeviceTypeTitle(firmware: IManagedObject): string {\n    return get(\n      firmware,\n      'c8y_Filter.type',\n      this.translateService.instant(this.DEVICE_TYPE_NOT_AVAILABLE)\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { gettext, NavigatorNode, NavigatorNodeFactory } from '@c8y/ngx-components';\n\n@Injectable()\nexport class RepositoryNavigationFactory implements NavigatorNodeFactory {\n  navs: NavigatorNode[] = [];\n\n  async get() {\n    if (this.navs.length === 0) {\n      this.navs.push(\n        new NavigatorNode({\n          label: gettext('Firmware repository'),\n          path: 'firmware',\n          icon: 'c8y-firmware',\n          parent: gettext('Management'),\n          priority: 1000\n        })\n      );\n      this.navs.push(\n        new NavigatorNode({\n          label: gettext('Software repository'),\n          path: 'software',\n          icon: 'c8y-tools',\n          parent: gettext('Management'),\n          priority: 900\n        })\n      );\n      this.navs.push(\n        new NavigatorNode({\n          label: gettext('Configuration repository'),\n          path: 'configuration',\n          icon: 'gears',\n          parent: gettext('Management'),\n          priority: 800\n        })\n      );\n    }\n    return this.navs;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ApplicationService, FetchClient, IManagedObject, IResultList, Service } from '@c8y/client';\n\n@Injectable()\nexport class AdvancedSoftwareService extends Service<IManagedObject> {\n  private static readonly applicationName = 'advanced-software-mgmt';\n\n  protected baseUrl: string = 'service/advanced-software';\n  protected listUrl: string = 'software';\n  protected propertyName = 'softwareList';\n\n  private isAvailable: Promise<boolean>;\n\n  constructor(client: FetchClient, private applicationService: ApplicationService) {\n    super(client);\n  }\n\n  list(filter: object = {}): Promise<IResultList<IManagedObject>> {\n    return super.list(filter);\n  }\n\n  isASMAvailable(): Promise<boolean> {\n    if (this.isAvailable === undefined) {\n      this.isAvailable = this.applicationService\n        .isAvailable(AdvancedSoftwareService.applicationName)\n        .then(result => !!result?.data);\n    }\n\n    return this.isAvailable;\n  }\n}\n","import { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { DeviceSoftwareChange } from '../repository.model';\n\n@Component({\n  selector: 'c8y-device-software-changes',\n  templateUrl: 'device-software-changes.component.html'\n})\nexport class DeviceSoftwareChangesComponent implements OnChanges {\n  @Input() changes: DeviceSoftwareChange[];\n  @Input() changesInProgress: boolean;\n  @Output() clear: EventEmitter<void> = new EventEmitter();\n  @Output() drop: EventEmitter<DeviceSoftwareChange> = new EventEmitter();\n  @Output() apply: EventEmitter<void> = new EventEmitter();\n  @Output() hideSoftwareChanges = new EventEmitter<void>();\n\n  changes$ = new BehaviorSubject<DeviceSoftwareChange[]>([]);\n  installations$ = this.changes$.pipe(\n    map(changes => {\n      return changes.filter(change => change.action === 'install');\n    })\n  );\n\n  removals$ = this.changes$.pipe(\n    map(changes => {\n      return changes.filter(change => change.action === 'delete');\n    })\n  );\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.changes) {\n      this.changes$.next(changes.changes.currentValue);\n    }\n  }\n}\n","import { AfterContentInit, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { IManagedObject, IResultList, Paging } from '@c8y/client';\nimport { filter, get, set } from 'lodash-es';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, map, switchMap, tap } from 'rxjs/operators';\nimport { DeviceSoftware, DeviceSoftwareChange, SoftwareFilterCriteria } from '../repository.model';\nimport { AdvancedSoftwareService } from './advanced-software.service';\n\n@Component({\n  selector: 'c8y-device-software-list',\n  templateUrl: 'device-software-list.component.html'\n})\nexport class DeviceSoftwareListComponent implements OnInit, AfterContentInit {\n  @Input() set softwareList(softwareList: DeviceSoftware[]) {\n    if (softwareList !== null) {\n      this.legacySoftwareList$.next(softwareList);\n    }\n  }\n  @Input() device: IManagedObject;\n  @Input() deviceSoftwareChanges: DeviceSoftwareChange[];\n  @Input() filterCriteria$: Observable<SoftwareFilterCriteria> = of(null);\n  @Output() update = new EventEmitter<DeviceSoftware>();\n  @Output() remove = new EventEmitter<DeviceSoftware>();\n  @Output() onListEmpty: EventEmitter<boolean> = new EventEmitter();\n  softwareItems$: Observable<IResultList<DeviceSoftware>>;\n  showUpdate: boolean;\n  showRemove: boolean;\n  emptyList: boolean;\n  noSearchResults: boolean;\n  supportsSoftwareOperations: boolean = false;\n\n  private readonly operationTypes = ['c8y_SoftwareUpdate', 'c8y_SoftwareList', 'c8y_Software'];\n\n  private legacySoftwareList$: BehaviorSubject<DeviceSoftware[]> = new BehaviorSubject([]);\n\n  constructor(private advancedSoftwareService: AdvancedSoftwareService) {}\n\n  ngOnInit(): void {\n    this.softwareItems$ = combineLatest(this.filterCriteria$, this.legacySoftwareList$).pipe(\n      debounceTime(300),\n      distinctUntilChanged(),\n      switchMap(([filterCriteria, legacySoftwareList]) => {\n        if (legacySoftwareList) {\n          return of(this.getLegacySoftwareList(filterCriteria)).pipe(\n            map(resultList => ({ resultList, filterCriteria }))\n          );\n        } else {\n          return this.getAdvancedSoftwareList(filterCriteria).then(resultList => ({\n            resultList,\n            filterCriteria\n          }));\n        }\n      }),\n      tap(({ resultList, filterCriteria }) => {\n        this.notifyListEmpty(!resultList?.paging?.totalPages && !filterCriteria);\n        this.noSearchResults = !resultList?.paging?.totalPages && !!filterCriteria;\n      }),\n      map(({ resultList }) => resultList)\n    );\n    const supportedOperations = get(this.device, 'c8y_SupportedOperations', []);\n    this.supportsSoftwareOperations = this.operationTypes.some(\n      operationType => supportedOperations.indexOf(operationType) > -1\n    );\n  }\n\n  ngAfterContentInit() {\n    this.showUpdate = this.update.observers.length > 0;\n    this.showRemove = this.remove.observers.length > 0;\n  }\n\n  isSoftwareGoingToBeChanged(software: DeviceSoftware): boolean {\n    const relevantChanges = filter(this.deviceSoftwareChanges, software);\n    return relevantChanges.length > 0;\n  }\n\n  private getAdvancedSoftwareList(\n    filterCriteria: SoftwareFilterCriteria\n  ): Promise<IResultList<DeviceSoftware>> {\n    const queryFilter = { deviceId: this.device.id };\n    if (filterCriteria?.name) {\n      set(queryFilter, 'name', `*${filterCriteria.name}*`);\n    }\n    if (filterCriteria?.softwareType) {\n      set(queryFilter, 'type', `${filterCriteria.softwareType}`);\n    }\n    return this.advancedSoftwareService.list(queryFilter) as unknown as Promise<\n      IResultList<DeviceSoftware>\n    >;\n  }\n\n  private getLegacySoftwareList(\n    filterCriteria: SoftwareFilterCriteria\n  ): IResultList<DeviceSoftware> {\n    const data = filterCriteria\n      ? this.legacySoftwareList$.value.filter(item => {\n          let match = true;\n          if (filterCriteria?.name) {\n            match = match && item.name?.includes(filterCriteria.name);\n          }\n          if (filterCriteria?.softwareType) {\n            match = match && item.softwareType === filterCriteria.softwareType;\n          }\n\n          return match;\n        })\n      : this.legacySoftwareList$.value;\n    return {\n      data,\n      res: null,\n      paging: {\n        totalPages: data.length\n      } as Paging<DeviceSoftware>\n    };\n  }\n\n  private notifyListEmpty(isEmpty: boolean): void {\n    this.emptyList = isEmpty;\n    this.onListEmpty.emit(isEmpty);\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { IManagedObject, IOperation } from '@c8y/client';\nimport { gettext, ModalSelectionMode } from '@c8y/ngx-components';\nimport { get } from 'lodash-es';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BehaviorSubject, combineLatest, from, Observable, of } from 'rxjs';\nimport { distinctUntilChanged, map, shareReplay, switchMap } from 'rxjs/operators';\nimport { RepositoryService } from '../repository.service';\nimport { RepositorySelectModalComponent } from '../select-modal/repository-select-modal.component';\nimport {\n  DeviceSoftware,\n  DeviceSoftwareChange,\n  RepositoryType,\n  SoftwareFilterCriteria\n} from './../repository.model';\n\n@Component({\n  selector: 'c8y-installed-software',\n  templateUrl: 'installed-software.component.html'\n})\nexport class InstalledSoftwareComponent implements OnInit {\n  @Input() device: IManagedObject;\n  @Input() softwareList: DeviceSoftware[];\n  @Input() deviceSoftwareChanges: DeviceSoftwareChange[];\n  @Input() deviceSoftwareChangesOperation: IOperation;\n  @Input() deviceSoftwareChangesInProgress: boolean;\n  @Input() deviceTypeQuery: object;\n  @Output() changes = new EventEmitter<DeviceSoftwareChange[]>();\n  @Output() showSoftwareChanges = new EventEmitter<void>();\n\n  showFilter: boolean = false;\n  supportsSoftwareOperations: boolean = false;\n  textFilter$: BehaviorSubject<string> = new BehaviorSubject('');\n  softwareTypeFilter$: BehaviorSubject<string> = new BehaviorSubject('');\n  filterCriteria$: Observable<SoftwareFilterCriteria>;\n\n  private readonly operationTypes = ['c8y_SoftwareUpdate', 'c8y_SoftwareList', 'c8y_Software'];\n\n  constructor(private repository: RepositoryService, private bsModal: BsModalService) {\n    this.filterCriteria$ = combineLatest(this.textFilter$, this.softwareTypeFilter$).pipe(\n      map(([textFilter, softwareTypeFilter]) => ({\n        name: textFilter,\n        softwareType: softwareTypeFilter\n      })),\n      map(filterCriteria =>\n        !filterCriteria.name && !filterCriteria.softwareType ? null : filterCriteria\n      )\n    );\n  }\n\n  ngOnInit(): void {\n    const supportedOperations = get(this.device, 'c8y_SupportedOperations', []);\n    this.supportsSoftwareOperations = this.operationTypes.some(\n      operationType => supportedOperations.indexOf(operationType) > -1\n    );\n  }\n\n  installSoftware() {\n    this.displaySoftwareSelectModal({\n      title: gettext('Install software'),\n      labels: { ok: gettext('Install') },\n      repositoryEntriesWithVersions$: of([]),\n      repositoryEntriesWithVersionsFn$: modal =>\n        this.getInstallableSoftwareListWithVersions$(modal.content.searchTerm)\n    }).subscribe(softwareToInstall => {\n      this.emitSoftwareInstall(softwareToInstall);\n      this.showSoftwareChanges.emit();\n    });\n  }\n\n  updateSoftware(softwareToRemove) {\n    this.displaySoftwareSelectModal({\n      title: gettext('Update software'),\n      labels: { ok: gettext('Update') },\n      showFilter: false,\n      repositoryEntriesWithVersions$: this.getSingleSoftwareWithVersions$(softwareToRemove)\n    }).subscribe(softwareToInstall => {\n      this.emitSoftwareInstall(softwareToInstall);\n      this.showSoftwareChanges.emit();\n    });\n  }\n\n  removeSoftware(softwareToRemove) {\n    this.emitSoftwareRemoval([softwareToRemove]);\n  }\n\n  getInstallableSoftwareListWithVersions$(searchTerm$: BehaviorSubject<string>) {\n    const installedSoftwareNames = (this.softwareList || []).map(s => s.name);\n    return searchTerm$.pipe(\n      distinctUntilChanged(),\n      switchMap(searchTerm =>\n        this.repository.listRepositoryEntries(RepositoryType.SOFTWARE, {\n          query: this.deviceTypeQuery,\n          partialName: searchTerm,\n          params: { pageSize: 100 }\n        })\n      ),\n      map(({ data }) => data),\n      map(softwareList => {\n        return softwareList.filter(software => {\n          return !installedSoftwareNames.includes(software.name);\n        });\n      }),\n      map(softwareList => this.attachVersions(softwareList)),\n      shareReplay(1)\n    );\n  }\n\n  getSingleSoftwareWithVersions$(software: DeviceSoftware) {\n    return from(\n      this.repository.listRepositoryEntries(RepositoryType.SOFTWARE, {\n        query: { name: software.name }\n      })\n    ).pipe(\n      map(({ data }) => data),\n      map(softwareList => this.attachVersions(softwareList)),\n      shareReplay(1)\n    );\n  }\n\n  attachVersions(softwareList: IManagedObject[]) {\n    softwareList.forEach(software => {\n      software.versions = this.repository.listBaseVersions(software);\n    });\n    return softwareList;\n  }\n\n  displaySoftwareSelectModal(initialStateOverrides) {\n    const initialState = {\n      repositoryType: RepositoryType.SOFTWARE,\n      subTitle: gettext('Available softwares matching the device type'),\n      mode: ModalSelectionMode.MULTI,\n      icon: 'c8y-tools',\n      disableSelected: false,\n      selected: this.softwareList,\n      ...initialStateOverrides\n    };\n    const modal = this.bsModal.show(RepositorySelectModalComponent, {\n      ignoreBackdropClick: true,\n      class: 'modal-sm',\n      initialState\n    });\n\n    if (initialStateOverrides.repositoryEntriesWithVersionsFn$) {\n      modal.content.repositoryEntriesWithVersions$ =\n        initialStateOverrides.repositoryEntriesWithVersionsFn$(modal);\n    }\n\n    modal.content.load.next();\n    return modal.content.resultEmitter;\n  }\n\n  emitSoftwareInstall(items: DeviceSoftware[]) {\n    this.changes.emit(\n      items.map(item => {\n        return { ...item, action: 'install' };\n      })\n    );\n  }\n\n  emitSoftwareRemoval(items: DeviceSoftware[]) {\n    this.changes.emit(\n      items.map(item => {\n        return { ...item, action: 'delete' };\n      })\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport { IManagedObject, InventoryService, OperationStatus, IOperation } from '@c8y/client';\nimport { DeviceSoftware, DeviceSoftwareChange, RepositoryType } from '../repository.model';\nimport { RepositoryService } from '../repository.service';\nimport { AdvancedSoftwareService } from './advanced-software.service';\n\n@Component({\n  selector: 'c8y-software-device-tab',\n  templateUrl: 'software-device-tab.component.html'\n})\nexport class SoftwareDeviceTabComponent implements OnInit {\n  deviceId: string | number = this.route.snapshot.parent.data.contextData.id;\n  device$ = new BehaviorSubject<IManagedObject>(this.route.snapshot.parent.data.contextData);\n  deviceTypeQuery$: Observable<object> = this.device$.pipe(\n    map(device => this.repository.getDeviceTypeQuery(RepositoryType.SOFTWARE, device))\n  );\n  list$: Observable<DeviceSoftware[]> = this.device$.pipe(\n    switchMap(device =>\n      this.advancedSoftwareService\n        .isASMAvailable()\n        .then(isASMAvailable => ({ isASMAvailable, device }))\n    ),\n    map(({ isASMAvailable, device }) =>\n      // with ASM available software items will be retrieved directly in the\n      // device-software-list component\n      isASMAvailable ? undefined : this.repository.getDeviceSoftwareList(device)\n    )\n  );\n  changes$ = new BehaviorSubject<DeviceSoftwareChange[]>([]);\n  changesOperation$ = new BehaviorSubject<IOperation>(null);\n  changesInProgress$: Observable<boolean> = this.changesOperation$.pipe(\n    map(operation => this.isInProgress(operation))\n  );\n  reloading: boolean = false;\n  showSoftwareChanges: boolean = false;\n\n  constructor(\n    private route: ActivatedRoute,\n    private repository: RepositoryService,\n    private inventory: InventoryService,\n    private advancedSoftwareService: AdvancedSoftwareService\n  ) {}\n\n  async ngOnInit() {\n    await this.loadDevice();\n    await this.loadOperation();\n  }\n\n  addChanges(requestedChanges: DeviceSoftwareChange[]) {\n    let stagedChanges = [...this.changes$.value];\n    requestedChanges.forEach(requestedChange => {\n      const alreadyStaged = stagedChanges.some(stagedChange =>\n        this.areSameChanges(stagedChange, requestedChange));\n      if (!alreadyStaged) {\n        stagedChanges = [...stagedChanges, requestedChange];\n      }\n    });\n    this.changes$.next(stagedChanges);\n  }\n\n  dropChange(changeToBeDropped: DeviceSoftwareChange) {\n    let stagedChanges = [...this.changes$.value];\n    stagedChanges = stagedChanges.filter(stagedChange => !this.areSameChanges(stagedChange, changeToBeDropped));\n    this.changes$.next(stagedChanges);\n  }\n\n  areSameChanges(change1: DeviceSoftwareChange, change2: DeviceSoftwareChange) {\n    return change1.name === change2.name &&\n      change1.version === change2.version &&\n      change1.action === change2.action;\n  }\n\n  clearChanges() {\n    this.changes$.next([]);\n  }\n\n  async loadDevice() {\n    this.reloading = true;\n    const device = (await this.inventory.detail(this.deviceId, { withChildren: false })).data;\n    this.device$.next(device);\n    this.reloading = false;\n  }\n\n  async applyChanges() {\n    const operation = await this.repository.createSoftwareUpdateOperation(\n      this.device$.value,\n      this.changes$.value\n    );\n    this.trackOperation(operation);\n  }\n\n  private async loadOperation() {\n    const operation = await this.repository.getLastSoftwareUpdateOperation(this.deviceId);\n    this.trackOperation(operation);\n  }\n\n  private trackOperation(operation: IOperation) {\n    this.changesOperation$.next(operation);\n\n    if (this.isInProgress(operation)) {\n      this.displayChangesFromOperation(operation);\n      this.repository.observeOperation(operation).subscribe(\n        operationUpdate => {\n          this.changesOperation$.next(operationUpdate);\n          if (operationUpdate.status === OperationStatus.SUCCESSFUL) {\n            this.clearChanges();\n            this.loadDevice();\n          }\n        },\n        operationUpdate => {\n          this.changesOperation$.next(operationUpdate);\n        }\n      );\n    }\n  }\n\n  private displayChangesFromOperation(operation: IOperation) {\n    const changes = this.repository.getDeviceSoftwareChangesFromOperation(\n      operation,\n      this.device$.value\n    );\n    this.changes$.next(changes);\n  }\n\n  private isInProgress(operation: IOperation) {\n    return (\n      operation && [OperationStatus.PENDING, OperationStatus.EXECUTING].includes(operation.status)\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate } from '@angular/router';\nimport { IManagedObject } from '@c8y/client';\nimport { get, has } from 'lodash-es';\n\n@Injectable()\nexport class SoftwareDeviceTabGuard implements CanActivate {\n  private readonly operations = ['c8y_SoftwareUpdate', 'c8y_SoftwareList', 'c8y_Software'];\n\n  canActivate(route: ActivatedRouteSnapshot) {\n    const device = get(route, 'data.contextData') || get(route, 'parent.data.contextData');\n    return (\n      this.isAnyOperationSupported(device) ||\n      has(device, 'c8y_Software') ||\n      has(device, 'c8y_SoftwareList') ||\n      has(device, 'c8y_SupportedSoftwareTypes')\n    );\n  }\n\n  private isAnyOperationSupported(device: IManagedObject) {\n    const supportedOperations = device?.c8y_SupportedOperations || [];\n    return this.operations.some(operation => supportedOperations.indexOf(operation) >= 0);\n  }\n}\n","import { Component, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { RepositoryService } from '../repository.service';\nimport { RepositoryType, ModalModel, RepositoryCategory } from '../repository.model';\nimport { AlertService, gettext } from '@c8y/ngx-components';\nimport { isUndefined, get, assign } from 'lodash-es';\nimport { BehaviorSubject, Subscription, from } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, tap, switchMap } from 'rxjs/operators';\nimport { PickedFiles } from '@c8y/ngx-components';\nimport { IManagedObject } from '@c8y/client';\n\n@Component({\n  selector: 'c8y-add-software-software-modal',\n  templateUrl: 'add-software-modal.component.html'\n})\nexport class AddSoftwareModalComponent {\n  @ViewChild('softwareForm', { static: false }) form: NgForm;\n  @Output() saved: EventEmitter<RepositoryCategory> = new EventEmitter<RepositoryCategory>();\n  onInput: BehaviorSubject<string> = new BehaviorSubject<string>('');\n  model: ModalModel = {\n    selected: undefined,\n    version: undefined,\n    description: undefined,\n    deviceType: undefined,\n    softwareType: undefined,\n    binary: {\n      file: undefined,\n      url: undefined\n    }\n  };\n\n  softwaresResult;\n  saving = false;\n  softwarePreselected: boolean = false;\n  textForSoftwareUrlPopover: string =\n    gettext(`Path for binaries can vary depending on device agent implementation, e.g.:\n    /software/binaries/software1.bin\n    https://software/binary/123\n    ftp://software/binary/123.tar.gz\n  `);\n  private inputSubscription$: Subscription;\n\n  constructor(\n    private modal: BsModalRef,\n    private repositoryService: RepositoryService,\n    private alert: AlertService\n  ) {}\n\n  ngOnInit() {\n    this.setInitialState();\n    this.loadSoftwares();\n  }\n\n  setInitialState() {\n    if (this.model.selected) {\n      this.softwarePreselected = true;\n    }\n  }\n\n  loadSoftwares() {\n    this.inputSubscription$ = this.onInput\n      .pipe(\n        tap(() => {\n          if (!this.softwarePreselected) {\n            this.model.description = null;\n            if (this.form) {\n              this.form.form.get('description').reset();\n            }\n          }\n        }),\n        debounceTime(300),\n        distinctUntilChanged(),\n        switchMap(searchStr => this.getSoftwareResult(searchStr))\n      )\n      .subscribe(result => {\n        this.softwaresResult = result;\n      });\n  }\n\n  getSoftwareResult(searchStr: string) {\n    return from(\n      this.repositoryService.listRepositoryEntries(RepositoryType.SOFTWARE, {\n        partialName: searchStr,\n        skipLegacy: true\n      })\n    );\n  }\n\n  async save() {\n    this.saving = true;\n    this.repositoryService\n      .create(this.model, RepositoryType.SOFTWARE)\n      .then(savedSoftware => {\n        this.successMsg();\n        this.saving = false;\n        this.saved.next(savedSoftware);\n        this.cancel();\n      })\n      .catch(e => {\n        this.saving = false;\n        this.saved.error(e);\n        this.cancel();\n      });\n  }\n\n  successMsg() {\n    const msg = gettext('Software added.');\n    this.alert.success(msg);\n  }\n\n  cancel() {\n    this.modal.hide();\n    this.saved.complete();\n  }\n\n  ngOnDestroy() {\n    this.inputSubscription$.unsubscribe();\n  }\n\n  onFile(dropped: PickedFiles) {\n    if (!isUndefined(dropped.url)) {\n      this.model.binary = {\n        url: dropped.url\n      };\n      return;\n    } else if (!isUndefined(dropped.droppedFiles)) {\n      this.model.binary = {\n        file: dropped.droppedFiles[0].file\n      };\n      return;\n    } else {\n      this.model.binary = {\n        file: undefined,\n        url: undefined\n      };\n    }\n  }\n\n  onSoftwareSelect(software: IManagedObject) {\n    assign(this.model, {\n      selected: software,\n      description: software.description,\n      deviceType: get(software, 'c8y_Filter.type'),\n      softwareType: software\n    });\n  }\n}\n","import { Component } from '@angular/core';\nimport { CellRendererContext } from '@c8y/ngx-components';\n\n@Component({\n  templateUrl: './device-type.cell-renderer.component.html'\n})\nexport class DeviceTypeCellRendererComponent {\n  constructor(public context: CellRendererContext) {}\n}\n","import { Component } from '@angular/core';\nimport { CellRendererContext } from '@c8y/ngx-components';\n\n@Component({\n  template: `\n    <a [routerLink]=\"[context.item.id]\" [title]=\"context.item.name\" class=\"interact\">\n      {{ context.item.name }}\n    </a>\n  `\n})\nexport class NameCellRendererComponent {\n  constructor(public context: CellRendererContext) {}\n}\n","import { Component } from '@angular/core';\nimport { CellRendererContext } from '@c8y/ngx-components';\n\n@Component({\n  templateUrl: './software-type.cell-renderer.component.html'\n})\nexport class SoftwareTypeCellRendererComponent {\n  constructor(public context: CellRendererContext) {}\n}\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  HostListener,\n  OnInit,\n  ViewChild\n} from '@angular/core';\nimport { IManagedObject, IResultList, QueriesUtil } from '@c8y/client';\nimport { FilteringFormRendererContext, gettext, TypeaheadComponent } from '@c8y/ngx-components';\nimport { DeviceGridColumn } from '@c8y/ngx-components/device-grid';\nimport { cloneDeep, uniqBy } from 'lodash-es';\nimport { BehaviorSubject, NEVER, Observable, pipe, UnaryFunction } from 'rxjs';\nimport { debounceTime, map, switchMap, tap } from 'rxjs/operators';\nimport { RepositoryType } from '../../repository.model';\nimport { RepositoryService } from '../../repository.service';\n\n@Component({\n  templateUrl: './software-type.filtering-form-renderer.component.html',\n  changeDetection: ChangeDetectionStrategy.Default\n})\nexport class SoftwareTypeFilteringFormRendererComponent implements OnInit, AfterViewInit {\n  selectedType: IManagedObject;\n  softwareWithType$: Observable<IResultList<IManagedObject>> = NEVER;\n  search$: BehaviorSubject<string> = new BehaviorSubject(null);\n  filterPipe: UnaryFunction<unknown, unknown> = pipe(tap());\n  typeaheadPlaceholder = gettext('Start typing to search, e.g. {{ example }}');\n  @ViewChild(TypeaheadComponent, { static: false }) typeahead: TypeaheadComponent;\n  private queriesUtil: QueriesUtil = new QueriesUtil();\n  private softwareTypes: Set<string> = new Set();\n\n  constructor(\n    public context: FilteringFormRendererContext,\n    public changeDetectorRef: ChangeDetectorRef,\n    private repositoryService: RepositoryService,\n    private elementRef: ElementRef\n  ) {\n    this.softwareWithType$ = this.search$.pipe(\n      debounceTime(300),\n      tap(() => this.softwareTypes.clear()),\n      switchMap((searchString: string) => {\n        let query = this.queriesUtil.prependOrderbys({}, [{ softwareType: 1 }]);\n        const filter = !!searchString\n          ? {\n              softwareType: {\n                __eq: `*${searchString}*`\n              }\n            }\n          : {\n              __has: 'softwareType'\n            };\n        query = this.queriesUtil.addAndFilter(query, filter);\n\n        return this.repositoryService.listRepositoryEntries(RepositoryType.SOFTWARE, {\n          skipDefaultOrder: true,\n          query,\n          params: {\n            pageSize: 200\n          }\n        });\n      })\n    );\n\n    this.filterPipe = pipe(\n      map(this.removeDuplicatesBySoftwareType.bind(this)),\n      tap(() => this.changeDetectorRef.detectChanges())\n    );\n  }\n\n  @HostListener('keydown.enter', ['$event']) onEnterKeyDown(event: KeyboardEvent) {\n    event.stopPropagation();\n    this.applyFilter();\n  }\n  @HostListener('keydown.escape', ['$event']) onEscapeKeyDown(event: KeyboardEvent) {\n    event.stopPropagation();\n    this.context.resetFilter();\n  }\n\n  ngOnInit(): void {\n    const column: DeviceGridColumn = this.context.property;\n    this.selectedType = cloneDeep(column.externalFilterQuery || {});\n  }\n\n  ngAfterViewInit(): void {\n    this.typeahead?.searchControl?.nativeElement?.focus();\n    try {\n      this.elementRef.nativeElement.parentElement.parentElement.style.overflow = 'visible';\n    } catch (ex) {\n      // intentionally empty\n    }\n  }\n\n  applyFilter() {\n    this.context.applyFilter({\n      externalFilterQuery: this.selectedType\n    });\n  }\n\n  private removeDuplicatesBySoftwareType(list: IManagedObject[]): IManagedObject[] {\n    const uniqueBySoftwareType: IManagedObject[] = uniqBy(list, 'softwareType').filter(\n      (sw: IManagedObject) => !this.softwareTypes.has(sw.softwareType)\n    );\n    uniqueBySoftwareType.forEach((sw: IManagedObject) => this.softwareTypes.add(sw.softwareType));\n    return uniqueBySoftwareType;\n  }\n}\n","import { Component } from '@angular/core';\nimport { IManagedObject } from '@c8y/client';\nimport { CellRendererContext, memoize } from '@c8y/ngx-components';\nimport { property } from 'lodash-es';\nimport { Observable } from 'rxjs';\nimport { shareReplay } from 'rxjs/operators';\nimport { RepositoryService } from '../../repository.service';\n\n@Component({\n  templateUrl: './versions.cell-renderer.component.html'\n})\nexport class VersionsCellRendererComponent {\n  isLegacy = this.repositoryService.isLegacyEntry.bind(this.repositoryService);\n  software;\n  constructor(public context: CellRendererContext, private repositoryService: RepositoryService) {\n    this.software = context.item;\n  }\n\n  @memoize(property('id'))\n  getBaseVersionsCount$(software: IManagedObject): Observable<number | string> {\n    return this.repositoryService.getBaseVersionsCount$(software).pipe(shareReplay(1));\n  }\n}\n","import {\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  TemplateRef,\n  ViewChild\n} from '@angular/core';\nimport { IManagedObject, IResultList, QueriesUtil } from '@c8y/client';\nimport { gettext, TypeaheadComponent } from '@c8y/ngx-components';\nimport { uniqBy } from 'lodash-es';\nimport { TranslateService } from '@ngx-translate/core';\nimport { BehaviorSubject, Observable, pipe, UnaryFunction } from 'rxjs';\nimport { debounceTime, map, switchMap, tap } from 'rxjs/operators';\nimport { RepositoryType } from '../repository.model';\nimport { RepositoryService } from '../repository.service';\n\n@Component({\n  selector: 'c8y-software-type',\n  templateUrl: 'software-type.component.html'\n})\nexport class SoftwareTypeComponent implements OnInit {\n  @Input() softwareTypeMO: IManagedObject;\n\n  @Input() disabled: boolean;\n\n  @Input() style;\n\n  @Input()\n  required: boolean = true;\n\n  @Input()\n  placeholder: string = this.translateService.instant(\n    gettext('e.g. {{ example }}'), { example: 'yum' }\n  );\n\n  @Input()\n  emitResultsOnly: boolean = false;\n\n  @Input()\n  showBtnInNotFoundMessage: boolean = true;\n\n  @Input()\n  allowFreeEntries: boolean = true;\n\n  @ViewChild('deviceSoftwareTypeModel') deviceSoftwareTypeModel: TypeaheadComponent;\n\n  @ViewChild('notFoundTypeAddNewTemplate', { static: true })\n  notFoundTypeAddNewTemplate: TemplateRef<unknown>;\n\n  @ViewChild('notFoundTypeTemplate', { static: true })\n  notFoundTypeTemplate: TemplateRef<unknown>;\n\n  @Output() onSelectSoftware: EventEmitter<IManagedObject> = new EventEmitter<IManagedObject>();\n\n  notFoundTemplateToUse: TemplateRef<unknown>;\n\n  filterPipe: UnaryFunction<unknown, unknown> = pipe(tap());\n  softwaresResult$: Observable<IResultList<IManagedObject>>;\n  search$: BehaviorSubject<string> = new BehaviorSubject(null);\n  softwaresResult: IResultList<IManagedObject>;\n\n  private queriesUtil: QueriesUtil = new QueriesUtil();\n  private softwareTypes: Set<string> = new Set();\n\n  constructor(\n    private repositoryService: RepositoryService,\n    public changeDetectorRef: ChangeDetectorRef,\n    private translateService: TranslateService\n  ) {\n    this.softwaresResult$ = this.search$.pipe(\n      debounceTime(300),\n      tap(() => this.softwareTypes.clear()),\n      switchMap((searchString: string) => {\n        if (!this.emitResultsOnly || !searchString) {\n          this.onSelectSoftware.emit(this.softwareTypeMO);\n        }\n        return this.getSoftwareByTypeResult(searchString);\n      })\n    );\n\n    this.filterPipe = pipe(map(this.removeDuplicatesBySoftwareType.bind(this)));\n  }\n\n  ngOnInit(): void {\n    this.notFoundTemplateToUse = this.showBtnInNotFoundMessage\n      ? this.notFoundTypeAddNewTemplate\n      : this.notFoundTypeTemplate;\n  }\n\n  getSoftwareByTypeResult(searchString: string) {\n    let query = this.queriesUtil.prependOrderbys({}, [{ softwareType: 1 }]);\n    const filter = !!searchString\n      ? {\n          softwareType: {\n            __eq: `*${searchString}*`\n          }\n        }\n      : {\n          __has: 'softwareType'\n        };\n    query = this.queriesUtil.addAndFilter(query, filter);\n\n    return this.repositoryService.listRepositoryEntries(RepositoryType.SOFTWARE, {\n      query,\n      params: {\n        pageSize: 200\n      }\n    });\n  }\n\n  selectSoftware(software) {\n    this.softwareTypeMO = software;\n    this.onSelectSoftware.emit(software);\n    this.deviceSoftwareTypeModel.searchControlModel.control.markAsDirty();\n  }\n\n  resetInput() {\n    this.deviceSoftwareTypeModel.reset();\n  }\n\n  private removeDuplicatesBySoftwareType(list: IManagedObject[]): IManagedObject[] {\n    const uniqueBySoftwareType: IManagedObject[] = uniqBy(list, 'softwareType').filter(\n      (sw: IManagedObject) => !this.softwareTypes.has(sw.softwareType)\n    );\n    uniqueBySoftwareType.forEach((sw: IManagedObject) => this.softwareTypes.add(sw.softwareType));\n    return uniqueBySoftwareType;\n  }\n}\n","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { IManagedObject, InventoryService, IResultList } from '@c8y/client';\nimport { AlertService, gettext, memoize, ModalService, Status } from '@c8y/ngx-components';\nimport { TranslateService } from '@ngx-translate/core';\nimport { BsModalService, ModalOptions } from 'ngx-bootstrap/modal';\nimport { BehaviorSubject, from, merge, Observable, Subject } from 'rxjs';\nimport {\n  distinctUntilKeyChanged,\n  map,\n  shareReplay,\n  switchMap,\n  take,\n  takeUntil,\n  tap,\n  withLatestFrom\n} from 'rxjs/operators';\nimport { RepositoryService } from '../repository.service';\nimport { AddSoftwareModalComponent } from './add-software-modal.component';\nimport { SoftwareTypeComponent } from './software-type.component';\n\n@Component({\n  selector: 'c8y-software-details',\n  templateUrl: './software-details.component.html'\n})\nexport class SoftwareDetailsComponent implements OnInit, OnDestroy {\n  @ViewChild(SoftwareTypeComponent, { static: true })\n  softwareType: SoftwareTypeComponent;\n\n  reload$: Subject<void> = new Subject();\n  reloading$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n  softwareTypeObject: IManagedObject;\n  isSoftwareTypeChanged: boolean = false;\n\n  updateSoftware$: Subject<Partial<IManagedObject>> = new Subject();\n  softwareUpdated$: Subject<IManagedObject> = new Subject();\n  baseVersionsUpdated$: Subject<void> = new Subject();\n\n  software$: Observable<IManagedObject> = merge(\n    this.activatedRoute.params.pipe(\n      map(params => params.id),\n      switchMap(id => from(this.inventoryService.detail(id).then(result => result.data)))\n    ),\n    this.reload$.pipe(\n      tap(() => this.reloading$.next(true)),\n      switchMap(() => this.activatedRoute.params),\n      map(params => params.id),\n      switchMap(id => from(this.inventoryService.detail(id).then(result => result.data))),\n      tap(() => this.reloading$.next(false))\n    ),\n    this.softwareUpdated$\n  ).pipe(shareReplay(1));\n\n  baseVersions$: Observable<IResultList<IManagedObject>> = merge(\n    this.software$.pipe(distinctUntilKeyChanged('id')),\n    this.baseVersionsUpdated$,\n    this.reload$\n  ).pipe(\n    switchMap(() => this.software$),\n    switchMap(software => this.repositoryService.listBaseVersions(software)),\n    shareReplay(1)\n  );\n\n  isLegacy$: Observable<boolean> = this.software$.pipe(\n    map(software => this.repositoryService.isLegacyEntry(software)),\n    shareReplay(1)\n  );\n\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private inventoryService: InventoryService,\n    private repositoryService: RepositoryService,\n    private alertService: AlertService,\n    private translateService: TranslateService,\n    private modalService: ModalService,\n    private bsModalService: BsModalService\n  ) {}\n\n  ngOnInit() {\n    this.updateSoftware$\n      .pipe(\n        withLatestFrom(this.software$),\n        switchMap(([softwarePartial, software]) =>\n          this.inventoryService.update({\n            id: software.id,\n            ...softwarePartial\n          })\n        ),\n        map(({ data }) => data),\n        tap(software => this.softwareUpdated$.next(software)),\n        tap(() => this.alertService.success(gettext('Saved.'))),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n\n    this.software$.subscribe(software => {\n      this.softwareTypeObject = software;\n    });\n  }\n\n  @memoize()\n  getBinaryName$(binaryUrl) {\n    return this.repositoryService.getBinaryName$(binaryUrl);\n  }\n\n  addBaseVersion() {\n    this.software$\n      .pipe(\n        take(1),\n        switchMap(software => {\n          const initialState = {\n            model: {\n              selected: software,\n              description: software.description\n            }\n          };\n          const config: ModalOptions<AddSoftwareModalComponent> = {\n            class: 'modal-sm',\n            ignoreBackdropClick: true,\n            initialState\n          };\n          const modalRef = this.bsModalService.show(AddSoftwareModalComponent, config);\n          return modalRef.content.saved;\n        })\n      )\n      .subscribe(() => this.baseVersionsUpdated$.next());\n  }\n\n  async deleteBaseVersion(baseVersion: IManagedObject) {\n    try {\n      const title = gettext('Delete software');\n      const body = `\n        ${this.translateService.instant(\n          gettext('You are about to delete software {{ version }}.'),\n          { version: baseVersion.c8y_Software.version }\n        )}\n        ${this.translateService.instant(gettext('This operation is irreversible.'))}\n        ${this.translateService.instant(gettext('Do you want to proceed?'))}\n      `;\n      const labels = {\n        ok: gettext('Delete')\n      };\n      await this.modalService.confirm(title, body, Status.DANGER, labels);\n      await this.repositoryService.delete(baseVersion);\n      this.alertService.success(gettext('Software deleted.'));\n      this.baseVersionsUpdated$.next();\n    } catch (ex) {\n      // only if not cancel from modal\n      if (ex) {\n        this.alertService.addServerFailure(ex);\n      }\n    }\n  }\n\n  onSelectSoftwareType(software) {\n    this.isSoftwareTypeChanged = !(\n      this.softwareTypeObject?.softwareType === software?.softwareType\n    );\n    this.softwareTypeObject = software;\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.unsubscribe();\n  }\n}\n","import { ColumnConfig, ColumnDataRecordClassName, gettext } from '@c8y/ngx-components';\nimport { BaseDeviceGridColumn } from '@c8y/ngx-components/device-grid';\n\nexport class DescriptionGridColumn extends BaseDeviceGridColumn {\n  constructor(initialColumnConfig?: ColumnConfig) {\n    super(initialColumnConfig);\n    this.name = 'description';\n    this.path = 'description';\n    this.header = gettext('Description');\n\n    this.filterable = true;\n    this.filteringConfig = {\n      schema: {\n        type: 'object',\n        properties: {\n          descriptions: {\n            type: 'array',\n            items: {\n              type: 'string'\n            }\n          }\n        }\n      },\n      form: [\n        {\n          type: 'template',\n          template: this.getLabelTemplate(gettext('Filter software by description'), {\n            showWildcardTooltip: true\n          })\n        },\n        {\n          key: 'descriptions',\n          notitle: true,\n          add: gettext('Or'),\n          items: [\n            {\n              key: 'descriptions[]',\n              notitle: true,\n              placeholder: gettext('e.g. Cloud connectivity')\n            }\n          ]\n        }\n      ],\n      getFilter(model: any): any {\n        const filter: any = {};\n        if (model.descriptions.length) {\n          filter.description = { __in: model.descriptions };\n        }\n        return filter;\n      }\n    };\n\n    this.sortable = true;\n    this.sortingConfig = {\n      pathSortingConfigs: [{ path: this.path }]\n    };\n  }\n}\n","import { ColumnConfig, gettext } from '@c8y/ngx-components';\nimport { BaseDeviceGridColumn } from '@c8y/ngx-components/device-grid';\nimport { DeviceTypeCellRendererComponent } from './device-type.cell-renderer.component';\n\nexport class DeviceTypeGridColumn extends BaseDeviceGridColumn {\n  constructor(initialColumnConfig?: ColumnConfig) {\n    super(initialColumnConfig);\n    this.name = 'deviceType';\n    this.path = 'c8yFilter.type';\n    this.header = gettext('Device type');\n    this.cellRendererComponent = DeviceTypeCellRendererComponent;\n\n    this.filterable = true;\n    this.filteringConfig = {\n      schema: {\n        type: 'object',\n        properties: {\n          types: {\n            type: 'array',\n            items: {\n              type: 'string'\n            }\n          }\n        }\n      },\n      form: [\n        {\n          type: 'template',\n          template: this.getLabelTemplate(gettext('Filter software by device type'), {\n            showWildcardTooltip: true\n          })\n        },\n        {\n          key: 'types',\n          notitle: true,\n          add: gettext('Or'),\n          items: [\n            {\n              key: 'types[]',\n              notitle: true,\n              placeholder: gettext('e.g. c8y_Linux')\n            }\n          ]\n        }\n      ],\n      getFilter(model: any): any {\n        const filter: any = {};\n        if (model.types.length) {\n          filter['c8y_Filter.type'] = { __in: model.types };\n        }\n        return filter;\n      }\n    };\n\n    this.sortable = true;\n    this.sortingConfig = {\n      pathSortingConfigs: [{ path: this.path }]\n    };\n  }\n}\n","import { ColumnConfig, gettext } from '@c8y/ngx-components';\nimport { BaseDeviceGridColumn } from '@c8y/ngx-components/device-grid';\nimport { NameCellRendererComponent } from './name.cell-renderer.component';\n\nexport class SoftwareNameGridColumn extends BaseDeviceGridColumn {\n  constructor(initialColumnConfig?: ColumnConfig) {\n    super(initialColumnConfig);\n    this.name = 'name';\n    this.path = 'name';\n    this.header = gettext('Name');\n    this.cellRendererComponent = NameCellRendererComponent;\n\n    this.filterable = true;\n    this.filteringConfig = {\n      schema: {\n        type: 'object',\n        properties: {\n          names: {\n            type: 'array',\n            items: {\n              type: 'string'\n            }\n          }\n        }\n      },\n      form: [\n        {\n          type: 'template',\n          template: this.getLabelTemplate(gettext('Filter software by name'), {\n            showWildcardTooltip: true\n          })\n        },\n        {\n          key: 'names',\n          notitle: true,\n          add: gettext('Or'),\n          items: [\n            {\n              key: 'names[]',\n              notitle: true,\n              placeholder: gettext('e.g. Cloud connectivity')\n            }\n          ]\n        }\n      ],\n      getFilter(model: any): any {\n        const filter: any = {};\n        if (model.names.length) {\n          filter.name = { __in: model.names };\n        }\n        return filter;\n      }\n    };\n\n    this.sortable = true;\n    this.sortingConfig = {\n      pathSortingConfigs: [{ path: this.path }]\n    };\n  }\n}\n","import { ColumnConfig, gettext } from '@c8y/ngx-components';\nimport { BaseDeviceGridColumn } from '@c8y/ngx-components/device-grid';\nimport { SoftwareTypeCellRendererComponent } from './software-type.cell-renderer.component';\nimport { SoftwareTypeFilteringFormRendererComponent } from './software-type.filtering-form-renderer.component';\n\nexport class SoftwareTypeGridColumn extends BaseDeviceGridColumn {\n  constructor(initialColumnConfig?: ColumnConfig) {\n    super(initialColumnConfig);\n    this.name = 'type';\n    this.path = 'softwareType';\n    this.header = gettext('Software type');\n    this.cellRendererComponent = SoftwareTypeCellRendererComponent;\n\n    this.filterable = true;\n    this.filteringFormRendererComponent = SoftwareTypeFilteringFormRendererComponent;\n    this.filteringConfig = {\n      getFilter(model) {\n        const filter: any = {};\n        if (model.softwareType) {\n          filter.softwareType = { __eq: model.softwareType };\n        }\n        return filter;\n      }\n    };\n\n    this.sortable = true;\n    this.sortingConfig = {\n      pathSortingConfigs: [{ path: this.path }]\n    };\n  }\n}\n","import { ColumnConfig, gettext } from '@c8y/ngx-components';\nimport { BaseDeviceGridColumn } from '@c8y/ngx-components/device-grid';\nimport { VersionsCellRendererComponent } from './versions.cell-renderer.component';\n\nexport class VersionsGridColumn extends BaseDeviceGridColumn {\n  constructor(initialColumnConfig?: ColumnConfig) {\n    super(initialColumnConfig);\n    this.name = 'versions';\n    this.header = gettext('Versions');\n    this.cellRendererComponent = VersionsCellRendererComponent;\n    this.sortable = false;\n  }\n}\n","import { Component, EventEmitter, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { IManagedObject, IResultList } from '@c8y/client';\nimport {\n  ActionControl,\n  AlertService,\n  BuiltInActionType,\n  DataSourceModifier,\n  gettext,\n  ModalService,\n  ServerSideDataResult,\n  Status\n} from '@c8y/ngx-components';\nimport { DeviceGridColumn, DeviceGridService } from '@c8y/ngx-components/device-grid';\nimport { TranslateService } from '@ngx-translate/core';\nimport { BsModalService, ModalOptions } from 'ngx-bootstrap/modal';\nimport { RepositoryType } from '../repository.model';\nimport { RepositoryService } from '../repository.service';\nimport { AddSoftwareModalComponent } from './add-software-modal.component';\nimport { DescriptionGridColumn } from './columns/description.grid-column';\nimport { DeviceTypeGridColumn } from './columns/device-type.grid-column';\nimport { SoftwareNameGridColumn } from './columns/name.grid-column';\nimport { SoftwareTypeGridColumn } from './columns/software-type.grid-column';\nimport { VersionsGridColumn } from './columns/versions.grid-column';\n\n@Component({\n  selector: 'c8y-software-list',\n  templateUrl: 'software-list.component.html'\n})\nexport class SoftwareListComponent implements OnInit {\n  sizeRequest: Promise<number>;\n  sizeRequestDone = false;\n  refresh$: EventEmitter<void> = new EventEmitter();\n\n  columns: DeviceGridColumn[] = [\n    new SoftwareNameGridColumn(),\n    new DescriptionGridColumn(),\n    new DeviceTypeGridColumn(),\n    new SoftwareTypeGridColumn(),\n    new VersionsGridColumn()\n  ];\n  actionControls: ActionControl[] = [];\n  serverSideDataCallback: any;\n  pagination = {\n    pageSize: 50,\n    currentPage: 1\n  };\n\n  constructor(\n    private repositoryService: RepositoryService,\n    private gridService: DeviceGridService,\n    private modalService: ModalService,\n    private bsModalService: BsModalService,\n    private translateService: TranslateService,\n    private alertService: AlertService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute\n  ) {\n    this.serverSideDataCallback = this.onDataSourceModifier.bind(this);\n    this.sizeRequest = this.repositoryService\n      .listRepositoryEntries(RepositoryType.SOFTWARE, {\n        skipDefaultOrder: true,\n        params: { pageSize: 1 }\n      })\n      .then(response => {\n        this.sizeRequestDone = true;\n        return response?.paging?.totalPages;\n      });\n  }\n\n  ngOnInit(): void {\n    this.actionControls.push({\n      type: BuiltInActionType.Edit,\n      callback: this.editSoftware.bind(this)\n    });\n    this.actionControls.push({\n      type: BuiltInActionType.Delete,\n      callback: this.deleteSoftware.bind(this)\n    });\n  }\n\n  async onDataSourceModifier(\n    dataSourceModifier: DataSourceModifier\n  ): Promise<ServerSideDataResult> {\n    let serverSideDataResult: ServerSideDataResult;\n\n    const dataRequest: Promise<IResultList<IManagedObject>> =\n      this.repositoryService.listRepositoryEntries(RepositoryType.SOFTWARE, {\n        query: this.gridService.getQueryObj(dataSourceModifier.columns),\n        skipDefaultOrder: true,\n        params: {\n          pageSize: dataSourceModifier.pagination.pageSize,\n          currentPage: dataSourceModifier.pagination.currentPage\n        }\n      });\n\n    const filtererdSizeRequest: Promise<number> = this.repositoryService\n      .listRepositoryEntries(RepositoryType.SOFTWARE, {\n        skipDefaultOrder: true,\n        query: this.gridService.getQueryObj(dataSourceModifier.columns),\n        params: { pageSize: 1 }\n      })\n      .then(response => response?.paging?.totalPages);\n\n    const [dataResponse, size, filteredSize] = await Promise.all([\n      dataRequest,\n      this.sizeRequest,\n      filtererdSizeRequest\n    ]);\n\n    const { res, data, paging } = dataResponse;\n\n    serverSideDataResult = {\n      res,\n      data,\n      paging,\n      filteredSize,\n      size\n    };\n\n    return serverSideDataResult;\n  }\n\n  addSoftware() {\n    const config: ModalOptions<AddSoftwareModalComponent> = {\n      class: 'modal-sm',\n      ignoreBackdropClick: true\n    };\n    const modalRef = this.bsModalService.show(AddSoftwareModalComponent, config);\n    modalRef.content.saved.subscribe(savedSoftware => this.editSoftware(savedSoftware));\n  }\n\n  editSoftware(software: Partial<IManagedObject>) {\n    this.router.navigate([software.id], { relativeTo: this.activatedRoute });\n  }\n\n  async deleteSoftware(software: IManagedObject) {\n    try {\n      const title = gettext('Delete software');\n      const body = `\n        ${this.translateService.instant(\n          gettext('You are about to delete software \"{{ name }}\" with all its versions.'),\n          { name: software.name }\n        )}\n        ${this.translateService.instant(gettext('This operation is irreversible.'))}\n        ${this.translateService.instant(gettext('Do you want to proceed?'))}\n      `;\n      const labels = {\n        ok: gettext('Delete')\n      };\n      await this.modalService.confirm(title, body, Status.DANGER, labels);\n      await this.repositoryService.delete(software);\n      this.alertService.success(gettext('Software deleted.'));\n      this.refresh$.next();\n    } catch (ex) {\n      // only if not cancel from modal\n      if (ex) {\n        this.alertService.addServerFailure(ex);\n      }\n    }\n  }\n\n  trackByName(_index, column: DeviceGridColumn): string {\n    return column.name;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CoreModule,\n  FormsModule,\n  gettext,\n  HOOK_NAVIGATOR_NODES,\n  HOOK_ROUTE,\n  OperationRealtimeService,\n  Route,\n  ViewContext\n} from '@c8y/ngx-components';\nimport { SingleOperationDetailsModule } from '@c8y/ngx-components/operations/single-operation-details';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { PopoverModule } from 'ngx-bootstrap/popover';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { ConfigurationFilterPipe } from './configuration-device-tab/configuration-filter.pipe';\nimport { ConfigurationPreviewComponent } from './configuration-device-tab/configuration-preview.component';\nimport { DeviceConfigurationListComponent } from './configuration-device-tab/device-configuration-list.component';\nimport { DeviceConfigurationComponent } from './configuration-device-tab/device-configuration.component';\nimport { DeviceConfigurationGuard } from './configuration-device-tab/device-configuration.guard';\nimport { DeviceConfigurationService } from './configuration-device-tab/device-configuration.service';\nimport { SaveToRepositoryComponent } from './configuration-device-tab/save-to-repository.component';\nimport { SourceCodePreviewComponent } from './configuration-device-tab/source-code-preview.component';\nimport { TextBasedConfigurationComponent } from './configuration-device-tab/text-based-configuration.component';\nimport { ConfigurationDetailComponent } from './configuration/configuration-detail.component';\nimport { ConfigurationListComponent } from './configuration/configuration-list.component';\nimport { FileDownloadComponent } from './file-download/file-download.component';\nimport { FirmwareDeviceTabComponent } from './firmware-device-tab/firmware-device-tab.component';\nimport { FirmwareDeviceTabGuard } from './firmware-device-tab/firmware-device-tab.guard';\nimport { AddFirmwareModalComponent } from './firmware/add-firmware-modal.component';\nimport { AddFirmwarePatchModalComponent } from './firmware/add-firmware-patch-modal.component';\nimport { FirmwareDetailsComponent } from './firmware/firmware-details.component';\nimport { FirmwareListComponent } from './firmware/firmware-list.component';\nimport { RepositoryNavigationFactory } from './repository-navigation-factory';\nimport { RepositoryService } from './repository.service';\nimport { RepositorySelectModalComponent } from './select-modal/repository-select-modal.component';\nimport { AdvancedSoftwareService } from './software-device-tab/advanced-software.service';\nimport { DeviceSoftwareChangesComponent } from './software-device-tab/device-software-changes.component';\nimport { DeviceSoftwareListComponent } from './software-device-tab/device-software-list.component';\nimport { InstalledSoftwareComponent } from './software-device-tab/installed-software.component';\nimport { SoftwareDeviceTabComponent } from './software-device-tab/software-device-tab.component';\nimport { SoftwareDeviceTabGuard } from './software-device-tab/software-device-tab.guard';\nimport { AddSoftwareModalComponent } from './software/add-software-modal.component';\nimport { DeviceTypeCellRendererComponent } from './software/columns/device-type.cell-renderer.component';\nimport { NameCellRendererComponent } from './software/columns/name.cell-renderer.component';\nimport { SoftwareTypeCellRendererComponent } from './software/columns/software-type.cell-renderer.component';\nimport { SoftwareTypeFilteringFormRendererComponent } from './software/columns/software-type.filtering-form-renderer.component';\nimport { VersionsCellRendererComponent } from './software/columns/versions.cell-renderer.component';\nimport { SoftwareDetailsComponent } from './software/software-details.component';\nimport { SoftwareListComponent } from './software/software-list.component';\nimport { SoftwareTypeComponent } from './software/software-type.component';\n\n@NgModule({\n  imports: [\n    CoreModule,\n    FormsModule,\n    RouterModule,\n    SingleOperationDetailsModule,\n    BsDropdownModule.forRoot(),\n    TooltipModule,\n    PopoverModule,\n    TabsModule.forRoot()\n  ],\n  exports: [SoftwareTypeComponent, FileDownloadComponent],\n  declarations: [\n    FirmwareListComponent,\n    FirmwareDetailsComponent,\n    AddFirmwareModalComponent,\n    AddFirmwarePatchModalComponent,\n    SoftwareListComponent,\n    SoftwareDetailsComponent,\n    AddSoftwareModalComponent,\n    SoftwareTypeComponent,\n    FirmwareDeviceTabComponent,\n    SoftwareDeviceTabComponent,\n    InstalledSoftwareComponent,\n    RepositorySelectModalComponent,\n    DeviceSoftwareListComponent,\n    DeviceSoftwareChangesComponent,\n    ConfigurationListComponent,\n    ConfigurationDetailComponent,\n    DeviceConfigurationComponent,\n    DeviceConfigurationListComponent,\n    SourceCodePreviewComponent,\n    ConfigurationPreviewComponent,\n    ConfigurationFilterPipe,\n    SaveToRepositoryComponent,\n    TextBasedConfigurationComponent,\n    FileDownloadComponent,\n    NameCellRendererComponent,\n    SoftwareTypeCellRendererComponent,\n    SoftwareTypeFilteringFormRendererComponent,\n    DeviceTypeCellRendererComponent,\n    VersionsCellRendererComponent\n  ],\n  entryComponents: [\n    FirmwareListComponent,\n    FirmwareDetailsComponent,\n    AddFirmwareModalComponent,\n    AddFirmwarePatchModalComponent,\n    SoftwareListComponent,\n    SoftwareDetailsComponent,\n    AddSoftwareModalComponent,\n    FirmwareDeviceTabComponent,\n    SoftwareDeviceTabComponent,\n    DeviceSoftwareListComponent,\n    RepositorySelectModalComponent,\n    DeviceSoftwareChangesComponent,\n    ConfigurationListComponent,\n    ConfigurationDetailComponent,\n    DeviceConfigurationComponent,\n    SaveToRepositoryComponent,\n    TextBasedConfigurationComponent\n  ],\n  providers: [\n    RepositoryService,\n    OperationRealtimeService,\n    DeviceConfigurationService,\n    FirmwareDeviceTabGuard,\n    SoftwareDeviceTabGuard,\n    DeviceConfigurationGuard,\n    AdvancedSoftwareService,\n    {\n      provide: HOOK_NAVIGATOR_NODES,\n      useClass: RepositoryNavigationFactory,\n      multi: true\n    },\n    {\n      provide: HOOK_ROUTE,\n      useValue: [\n        {\n          path: 'firmware',\n          component: FirmwareListComponent\n        },\n        {\n          path: 'firmware/:id',\n          component: FirmwareDetailsComponent\n        },\n        {\n          context: ViewContext.Device,\n          path: 'firmware',\n          component: FirmwareDeviceTabComponent,\n          label: gettext('Firmware'),\n          icon: 'c8y-firmware',\n          priority: 500,\n          canActivate: [FirmwareDeviceTabGuard]\n        },\n        {\n          path: 'software',\n          component: SoftwareListComponent\n        },\n        {\n          path: 'software/:id',\n          component: SoftwareDetailsComponent\n        },\n        {\n          context: ViewContext.Device,\n          path: 'software',\n          component: SoftwareDeviceTabComponent,\n          label: gettext('Software'),\n          icon: 'c8y-tools',\n          priority: 499,\n          canActivate: [SoftwareDeviceTabGuard]\n        },\n        {\n          path: 'configuration',\n          component: ConfigurationListComponent\n        },\n        {\n          context: ViewContext.Device,\n          path: 'device-configuration',\n          component: DeviceConfigurationComponent,\n          label: gettext('Configuration'),\n          icon: 'gears',\n          priority: 600,\n          canActivate: [DeviceConfigurationGuard]\n        }\n      ] as Route[],\n      multi: true\n    }\n  ]\n})\nexport class RepositoryModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {FileDownloadComponent as ɵb} from './file-download/file-download.component';\nexport {AdvancedSoftwareService as ɵc} from './software-device-tab/advanced-software.service';\nexport {DeviceTypeCellRendererComponent as ɵg} from './software/columns/device-type.cell-renderer.component';\nexport {NameCellRendererComponent as ɵd} from './software/columns/name.cell-renderer.component';\nexport {SoftwareTypeCellRendererComponent as ɵe} from './software/columns/software-type.cell-renderer.component';\nexport {SoftwareTypeFilteringFormRendererComponent as ɵf} from './software/columns/software-type.filtering-form-renderer.component';\nexport {VersionsCellRendererComponent as ɵh} from './software/columns/versions.cell-renderer.component';\nexport {SoftwareTypeComponent as ɵa} from './software/software-type.component';"]}