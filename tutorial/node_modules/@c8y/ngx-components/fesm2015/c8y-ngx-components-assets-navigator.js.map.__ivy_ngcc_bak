{"version":3,"file":"c8y-ngx-components-assets-navigator.js","sources":["../../assets-navigator/action.enum.ts","../../assets-navigator/group-fragment.model.ts","../../assets-navigator/load-more-node.ts","../../assets-navigator/asset-node.ts","../../assets-navigator/dynamic-group-node.ts","../../assets-navigator/asset-node-config.model.ts","../../assets-navigator/group.service.ts","../../assets-navigator/asset-node.service.ts","../../assets-navigator/asset-node.factory.ts","../../assets-navigator/assets-navigator.module.ts","../../assets-navigator/asset-selector/group-node.ts","../../assets-navigator/asset-selector/group-node.service.ts","../../assets-navigator/asset-selector/asset-selector.component.ts","../../assets-navigator/asset-selector/asset-selector-node.component.ts","../../assets-navigator/asset-selector/asset-selector.module.ts","../../assets-navigator/c8y-ngx-components-assets-navigator.ts"],"sourcesContent":["export enum Action {\n  FETCH,\n  NEXT,\n  REFRESH,\n  LOADING_DONE\n}\n","export enum GroupFragment {\n  groupType = 'c8y_DeviceGroup',\n  subGroupType = 'c8y_DeviceSubgroup',\n  groupFragmentType = 'c8y_IsDeviceGroup',\n  dataBrokerSourceFragment = 'c8y_BrokerSource',\n  dynamicGroupType = 'c8y_DynamicGroup',\n  dynamicGroupFragment = 'c8y_IsDynamicGroup',\n  dynamicGroupColumnConfig = 'c8y_UIDeviceFilterConfig',\n  dynamicGroupQueryString = 'c8y_DeviceQueryString',\n}\n","import { NavigatorNode, gettext } from '@c8y/ngx-components';\n\nexport class LoadMoreNode extends NavigatorNode {\n  label = gettext('Load more');\n  icon = 'plus';\n  droppable = true;\n\n  constructor() {\n    super();\n    this.priority = -Infinity;\n  }\n}\n","import { Paging } from '@c8y/client';\nimport { ClickOptions, DeviceStatusComponent, gettext, NavigatorNode, NavigatorNodeData } from '@c8y/ngx-components';\nimport { debounce, get } from 'lodash-es';\nimport { Subject, Subscription } from 'rxjs';\nimport { Action } from './action.enum';\nimport { AssetNodeMo, AssetNodeService } from './asset-node.service';\nimport { GroupFragment } from './group-fragment.model';\nimport { LoadMoreNode } from './load-more-node';\n\nexport class AssetNode extends NavigatorNode {\n  root: boolean;\n  mo: any;\n\n  get hasChildren() {\n    return this.root || this.service.groups.isGroup(this.mo);\n  }\n\n  get isDevice() {\n    return !!this.mo.c8y_IsDevice;\n  }\n\n  get isDeviceOrProbablyChildDevice() {\n    return this.isDevice || this.isNeitherDeviceOrGroup;\n  }\n\n  get isNeitherDeviceOrGroup() {\n    const { isGroup, isDynamicGroup } = this.service.groups;\n    return !isGroup(this.mo) && !isDynamicGroup(this.mo) && !this.isDevice && !this.root;\n  }\n\n  events: Subject<Action>;\n  protected paging: Paging<AssetNodeMo>;\n  protected loadMoreNode: LoadMoreNode;\n  private onUpdateSubscription: Subscription;\n\n  constructor(protected service: AssetNodeService, protected config: NavigatorNodeData = {}) {\n    super(config);\n    this.root = this.root || false;\n    this.mo = this.mo || {};\n    this.path = this.getPath();\n    this.draggable = !this.service.moduleConfig.disableDragAndDrop && !this.root;\n    this.droppable =\n      !this.service.moduleConfig.disableDragAndDrop && !this.isDeviceOrProbablyChildDevice;\n    this.routerLinkExact = this.root;\n    this.updateIcon(false);\n    this.onUpdateSubscription = this.service\n      .onUpdate(this)\n      .subscribe(({ data, method }) => this.refresh(data, method));\n    this.setLabel();\n    this.iconComponent = this.isDeviceOrProbablyChildDevice ? DeviceStatusComponent : undefined;\n  }\n\n  getPath() {\n    if (this.config.path) {\n      return this.config.path;\n    }\n\n    return this.root\n      ? 'group'\n      : this.isDeviceOrProbablyChildDevice\n      ? `device/${this.mo.id}`\n      : `group/${this.mo.id}`;\n  }\n\n  openOnStart(url) {\n    const urlRegex = /^\\/group\\//;\n    if (this.root) {\n      if (this.service.moduleConfig.openOnStart || urlRegex.test(url)) {\n        return true;\n      }\n    }\n    const matches = url.match(/\\/(group)\\/(\\d+)/);\n    let isMatch = false;\n    if (matches) {\n      const id = matches[2];\n      isMatch = []\n        .concat(get(this.mo, 'childAssets.references', []))\n        .some(({ managedObject }) => managedObject.id === id);\n      return isMatch;\n    }\n    return false;\n  }\n\n  refresh(mo: any = {}, method = 'GET') {\n    if (mo.id === this.mo.id) {\n      this.mo = mo;\n      this.setLabel();\n    } else if (method === 'DELETE') {\n      this.parents.forEach((node: AssetNode) => node.refresh());\n      return;\n    }\n    if (this.events) {\n      this.events.next(Action.REFRESH);\n    }\n  }\n\n  setLabel() {\n    this.label = this.config.label || (this.root && gettext('Groups')) || this.mo.name || '--';\n  }\n\n  click(options: ClickOptions = {}) {\n    if (this.isDeviceOrProbablyChildDevice) {\n      this.service.preferBreadcrumb(this.parents);\n      return;\n    }\n    this.hookEvents();\n\n    this.updateIcon(options.open);\n    if (options.open) {\n      this.events.next(Action.FETCH);\n    }\n  }\n\n  sort() {\n    this.children.sort((a, b) => {\n      if (a.priority > b.priority) {\n        return -1;\n      } else if (a.priority < b.priority) {\n        return 1;\n      } else {\n        return 0;\n      }\n    });\n  }\n\n  addManagedObject(mo) {\n    const { childAdditions } = this.mo;\n    if (!this.isChildAddition(childAdditions, mo)) {\n      this.add(this.service.createChildNode(mo));\n    }\n  }\n\n  isChildAddition(childAdditions, mo) {\n    return (\n      childAdditions && childAdditions.references.some(({ managedObject: { id } }) => id === mo.id)\n    );\n  }\n\n  destroy() {\n    this.onUpdateSubscription.unsubscribe();\n  }\n\n  get canDrop() {\n    const nodeToMove = this.service.draggedData;\n    if (nodeToMove) {\n      const shouldGetChildOfItsOwn = !!nodeToMove.find(child => child === this);\n      const isAlreadyChild = (this.children as AssetNode[]).some(\n        child => child.mo && child.mo.id === nodeToMove.mo.id\n      );\n      const preventMove = this === nodeToMove || shouldGetChildOfItsOwn || isAlreadyChild;\n      return this.droppable && !preventMove;\n    }\n    return this.droppable;\n  }\n\n  dragStart($event) {\n    super.dragStart($event);\n    this.service.draggedData = this;\n    this.service.rootNode.droppable = !this.isDeviceOrProbablyChildDevice;\n  }\n\n  dragEnd($event) {\n    super.dragEnd($event);\n  }\n\n  async drop($event) {\n    super.drop($event);\n    const nodeToMove = this.service.draggedData;\n    if (this.canDrop) {\n      await this.moveNode(nodeToMove);\n    } else {\n      this.draggedHover = false;\n      this.service.draggedData = undefined;\n    }\n  }\n\n  hookEvents() {\n    if (!this.events) {\n      this.events = new Subject();\n      this.events.subscribe(evt => {\n        if (!this.loading) {\n          this.handleEvent(evt);\n        }\n      });\n    }\n  }\n\n  protected fetch() {\n    return this.root ? this.service.getRootNodes() : this.service.getGroupItems(this.mo.id);\n  }\n\n  protected async handleEvent(evt: Action) {\n    if (!this.children.length && evt === Action.FETCH) {\n      this.loading = true;\n      this.addNodes(await this.fetch());\n      this.loading = false;\n    } else if (evt === Action.NEXT) {\n      this.loadMoreNode.loading = true;\n      this.addNodes(await this.paging.next());\n      this.loadMoreNode.loading = false;\n    } else if (evt === Action.REFRESH) {\n      this.loading = false;\n      this.paging = undefined;\n      this.loadMoreNode = undefined;\n      this.empty();\n      this.events.next(Action.FETCH);\n    }\n  }\n\n  protected addNodes(res) {\n    if (res.paging) {\n      const { currentPage, nextPage, pageSize } = (this.paging = res.paging);\n      if (currentPage === 1) {\n        this.empty();\n      }\n      const itemsCount = res.data.length;\n      const moreItemsAvailable = !!nextPage && itemsCount === pageSize;\n      this.toggleLoadMore(moreItemsAvailable);\n    }\n    (res.data || res).map(mo => this.addManagedObject(mo));\n    this.events.next(Action.LOADING_DONE);\n  }\n\n  protected toggleLoadMore(show: boolean) {\n    if (!this.loadMoreNode && show) {\n      this.loadMoreNode = new LoadMoreNode();\n      this.add(this.loadMoreNode);\n      this.loadMoreNode.click = debounce(() => this.events.next(Action.NEXT), 300, { leading: true, trailing: false });\n    }\n\n    if (this.loadMoreNode) {\n      this.loadMoreNode.hidden = !show;\n    }\n  }\n\n  private async moveNode(nodeToMove: AssetNode) {\n    try {\n      const isCopy = await this.showDropConfirm(nodeToMove);\n      await this.verifyNodeAccess(nodeToMove);\n      await this.addMovedNode(nodeToMove);\n      if (!isCopy) {\n        await this.removeMovedNode(nodeToMove);\n      }\n      this.expand();\n    } catch (ex) {\n      if (ex) {\n        this.service.alert.addServerFailure(ex);\n      }\n    } finally {\n      this.draggedHover = false;\n      this.service.draggedData = undefined;\n    }\n  }\n\n  private async showDropConfirm(nodeToMove: AssetNode) {\n    this.confirm.title = gettext('Move');\n    this.confirm.message = gettext('Do you want to move the group?');\n    const buttons: any = [\n      {\n        label: gettext('Cancel'),\n        action: () => Promise.reject()\n      },\n      {\n        label: gettext('Move'),\n        status: 'default',\n        action: () => Promise.resolve(false)\n      }\n    ];\n    if (nodeToMove.isDeviceOrProbablyChildDevice) {\n      this.confirm.title = gettext('Move or add');\n      this.confirm.message = gettext('Do you want to move or add the device?');\n      buttons.push({\n        label: gettext('Add'),\n        status: 'primary',\n        action: () => Promise.resolve(true)\n      });\n    }\n    return this.confirm.show(buttons);\n  }\n\n  private async verifyNodeAccess(nodeToMove: AssetNode) {\n    return this.service.inventory.update({ id: nodeToMove.mo.id });\n  }\n\n  private async addMovedNode(nodeToMove: AssetNode) {\n    let mo;\n    if (this.root) {\n      const { data } = await this.service.inventory.update({\n        id: nodeToMove.mo.id,\n        type: GroupFragment.groupType\n      });\n      mo = data;\n    } else {\n      const { data } = await this.service.inventory.childAssetsAdd(nodeToMove.mo, this.mo);\n      mo = data;\n    }\n    this.addManagedObject(mo);\n  }\n\n  private async removeMovedNode(nodeToMove: AssetNode) {\n    for (const parent of nodeToMove.parents as AssetNode[]) {\n      if (parent.mo && parent.mo.type === GroupFragment.dynamicGroupType) {\n        break; // smart groups don't need to be changed\n      }\n      if (parent.root) {\n        await this.service.inventory.update({\n          id: nodeToMove.mo.id,\n          type: GroupFragment.subGroupType\n        });\n      } else {\n        await this.service.inventory.childAssetsRemove(nodeToMove.mo, parent.mo);\n      }\n      parent.remove(nodeToMove);\n    }\n  }\n\n  private updateIcon(open: boolean) {\n    const { icon, iconOpen } = this.config;\n\n    if (icon && iconOpen) {\n      this.icon = open ? icon : iconOpen;\n    } else {\n    this.icon = this.service.groups.icon(\n      // if it's root we are going to pass a fake mo to get the same icon as groups\n      this.root ? { type: GroupFragment.groupType } : this.mo,\n      open\n    );\n    }\n  }\n}\n","\nimport { AssetNode } from './asset-node';\nimport { AssetNodeService } from './asset-node.service';\n\nexport class DynamicGroupNode extends AssetNode {\n  constructor(\n    protected service: AssetNodeService,\n    config = {}\n  ) {\n    super(service, config);\n    this.draggable = false;\n    this.droppable = false;\n  }\n\n  get hasChildren() {\n    return true;\n  }\n\n  get query() {\n    return this.mo.c8y_DeviceQueryString;\n  }\n\n  protected fetch(): any {\n    return this.service.getDynamicGroupItems(this.query);\n  }\n}\n","import { InjectionToken } from '@angular/core';\r\nimport { NavigatorNode } from '@c8y/ngx-components';\r\nimport { AssetNode } from './asset-node';\r\nexport const ASSET_NAVIGATOR_CONFIG = new InjectionToken<AssetNavigatorConfig>('AssetNodeConfig');\r\n\r\n/**\r\n * Configuration object of the AssetsNavigatorModule.\r\n */\r\nexport interface AssetNavigatorConfig {\r\n  /**\r\n   * Allows to enable smart groups in the module.\r\n   * Default value: false.\r\n   */\r\n  smartGroups?: boolean;\r\n  /**\r\n   * Expands the root navigator node when the navigator is initialized.\r\n   * Default value: false\r\n   */\r\n  openOnStart?: boolean;\r\n  /**\r\n   * Allows to change the position of the root group in the navigator.\r\n   * The higher the value, the higher the position in navigation.\r\n   * Default value: 2000.\r\n   */\r\n  rootNodePriority?: number;\r\n  /**\r\n   * Allows to drag and drop items in the asset navigator.\r\n   * Default value: true.\r\n   */\r\n  disableDragAndDrop?: boolean;\r\n  /**\r\n   * Allows to override properies of the root group or hide it.\r\n   * Setup examples:\r\n   * - `rootNavigatorNode: true` - shows the default navigator node (default),\r\n   * - `rootNavigatorNode: false` - hides the navigator node,\r\n   * - `rootNavigatorNode: { label: 'New name', ... }` - overrides default navigator node,\r\n   * - `rootNavigatorNode: new NavigatorNode({ label: 'New name', ... })` - overrides default navigator node,\r\n   */\r\n  rootNavigatorNode?: boolean | Partial<NavigatorNode | AssetNode>;\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { GroupFragment } from './group-fragment.model';\nimport { IManagedObject } from '@c8y/client';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DeviceGroupService {\n  icons = {\n    brokerSourceInactive: {\n      icon: 'c8y-group-remote-inactive'\n    },\n    brokerSource: {\n      icon: 'c8y-group-remote',\n      iconOpen: 'c8y-group-remote-open'\n    },\n    group: {\n      icon: 'c8y-group',\n      iconOpen: 'c8y-group-open'\n    },\n    dynamicGroup: {\n      icon: 'c8y-group-smart',\n      iconOpen: 'c8y-group-smart-open'\n    },\n    other: {\n      icon: 'circle',\n      iconClass: 'statusUnknown'\n    }\n  };\n  dataBrokerSourceFragmentInactive = `_${GroupFragment.dataBrokerSourceFragment}`;\n\n  isGroup(mo) {\n    return (\n      !!mo[GroupFragment.groupFragmentType] ||\n      mo.type === GroupFragment.groupType ||\n      mo.type === GroupFragment.subGroupType\n    );\n  }\n\n  isDynamicGroup(mo) {\n    return !!mo[GroupFragment.dynamicGroupFragment] || mo.type === GroupFragment.dynamicGroupType;\n  }\n\n  isDataBroker(mo) {\n    return (\n      !!mo[GroupFragment.dataBrokerSourceFragment] || !!mo[this.dataBrokerSourceFragmentInactive]\n    );\n  }\n\n  isDataBrokerActive(mo) {\n    return (\n      !!mo[GroupFragment.dataBrokerSourceFragment] && !mo[this.dataBrokerSourceFragmentInactive]\n    );\n  }\n\n  isDevice(mo) {\n    return !!mo.c8y_IsDevice;\n  }\n\n  icon(mo, open = false) {\n    let type = 'other';\n    if (this.isDynamicGroup(mo)) {\n      type = 'dynamicGroup';\n    } else if (this.isDataBrokerActive(mo)) {\n      type = 'brokerSource';\n    } else if (this.isDataBroker(mo)) {\n      type = 'brokerSourceInactive';\n    } else if (this.isGroup(mo)) {\n      type = 'group';\n    }\n    const icon = this.icons[type];\n    return (open && icon.iconOpen) || icon.icon;\n  }\n\n  isAnyGroup(mo: IManagedObject) {\n    return (\n      this.isGroup(mo) ||\n      this.isDynamicGroup(mo) ||\n      this.isDataBroker(mo) ||\n      this.isDataBrokerActive(mo)\n    );\n  }\n}\n","import { Inject, Injectable, Optional } from '@angular/core';\nimport { InventoryService, QueriesUtil, UserService, IManagedObject, IResult } from '@c8y/client';\nimport {\n  AlertService,\n  BreadcrumbService,\n  ModalService,\n  NavigatorNode,\n  AppStateService,\n  NavigatorNodeData\n} from '@c8y/ngx-components';\nimport { ApiService } from '@c8y/ngx-components/api';\nimport { empty } from 'rxjs';\nimport { filter, mergeMap } from 'rxjs/operators';\nimport { AssetNode } from './asset-node';\nimport { AssetNavigatorConfig, ASSET_NAVIGATOR_CONFIG } from './asset-node-config.model';\nimport { DynamicGroupNode } from './dynamic-group-node';\nimport { GroupFragment } from './group-fragment.model';\nimport { DeviceGroupService } from './group.service';\n\nexport interface AssetNodeMo {\n  id: string;\n  type: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AssetNodeService {\n  rootNode: AssetNode;\n  firstUrl = true;\n  draggedData: AssetNode;\n  queriesUtil: QueriesUtil;\n  protected PAGE_SIZE = 20;\n\n  constructor(\n    public inventory: InventoryService,\n    public groups: DeviceGroupService,\n    public apiService: ApiService,\n    public modal: ModalService,\n    public alert: AlertService,\n    protected breadcrumbService: BreadcrumbService,\n    protected user: UserService,\n    protected appState: AppStateService,\n    @Optional() @Inject(ASSET_NAVIGATOR_CONFIG) public moduleConfig: AssetNavigatorConfig\n  ) {\n    this.moduleConfig = {\n      rootNodePriority: 2000,\n      ...(moduleConfig || {})\n    };\n    this.queriesUtil = new QueriesUtil();\n  }\n\n  createRootNode(config: NavigatorNodeData = {}) {\n    this.rootNode = this.createAssetNode({\n      root: true,\n      ...config,\n      priority: this.moduleConfig.rootNodePriority\n    });\n    return this.rootNode;\n  }\n\n  createDynamicGroupNode(config) {\n    return new DynamicGroupNode(this, config);\n  }\n\n  createAssetNode(config) {\n    return new AssetNode(this, config);\n  }\n\n  createChildNode(managedObject) {\n    const { type } = managedObject;\n    const config: Partial<AssetNode> = { mo: managedObject };\n    if (type === GroupFragment.dynamicGroupType) {\n      return this.createDynamicGroupNode(config);\n    }\n    return this.createAssetNode(config);\n  }\n\n  getRootNodes(customFilter?: any): Promise<any> {\n    const defaultFilter = {\n      pageSize: this.PAGE_SIZE,\n      withChildren: false,\n      query: this.queriesUtil.buildQuery(this.navRootQueryFilter())\n    };\n    const groupFilter = customFilter ? customFilter : defaultFilter;\n\n    // due to BE performance limitations we do not allow filtering and sorting for a user without inventory roles\n    if (!this.user.hasRole(this.appState.currentUser.value, 'ROLE_INVENTORY_READ')) {\n      delete groupFilter.query;\n      Object.assign(groupFilter, {\n        fragmentType: GroupFragment.groupFragmentType,\n        onlyRoots: true\n      });\n    }\n    return this.inventory.list(this.createFilter(groupFilter));\n  }\n\n  getGroupItems(moId: string, extraFilter: object = {}) {\n    const queryFilter = {\n      withChildren: false,\n      pageSize: this.PAGE_SIZE,\n      query: this.groupQueryFilter(moId)\n    };\n    return this.inventory.childAssetsList(moId, { ...queryFilter, ...extraFilter });\n  }\n\n  getDynamicGroupItems(groupQuery: string, filterObj: any = {}) {\n    const { query, ...queryParams } = filterObj;\n    const orderByQuery = query;\n    const queryFilter = {\n      q: this.buildCombinedQuery(groupQuery, orderByQuery),\n      ...queryParams\n    };\n    return this.inventory.list(this.createFilter(queryFilter));\n  }\n\n  getDeviceChildren(moId: string, extraFilter: object = {}) {\n    const queryFilter = {\n      withChildren: false,\n      pageSize: this.PAGE_SIZE,\n      query: this.groupQueryFilter(moId)\n    };\n    return this.inventory.childDevicesList(moId, { ...queryFilter, ...extraFilter });\n  }\n\n  groupQueryFilter(moId: string) {\n    return `$filter=(bygroupid(${moId}))$orderby=name`;\n  }\n\n  navRootQueryFilter() {\n    const navRootFilter = this.rootQueryFilter();\n    navRootFilter.__orderby = [{ name: 1 }];\n    return navRootFilter;\n  }\n\n  rootQueryFilter() {\n    const { moduleConfig } = this;\n    const rootFilter = {\n      __filter: {\n        type: `${GroupFragment.groupType}`\n      },\n      __orderby: []\n    };\n    if (moduleConfig.smartGroups) {\n      const queryFilter = {\n        __filter: {\n          __and: [\n            {\n              type: `${GroupFragment.dynamicGroupType}`\n            },\n            {\n              __has: `${GroupFragment.dynamicGroupFragment}`\n            },\n            { __not: { __has: `${GroupFragment.dynamicGroupFragment}.invisible` } }\n          ]\n        }\n      };\n      this.queriesUtil.addOrFilter(rootFilter, queryFilter);\n    }\n    return rootFilter;\n  }\n\n  onUpdate({ mo, root }) {\n    if (mo.id) {\n      return this.apiService\n        .hookResponse(\n          ({ url, method }) =>\n            ['PUT', 'DELETE', 'POST'].includes(method) &&\n            RegExp(`((inventory/managedObjects)|(service/smartgroup/smartgroups))/${mo.id}`).test(\n              url\n            )\n        )\n        .pipe(\n          filter(() => !this.draggedData),\n          mergeMap(this.apiService.resolveData),\n          filter(response => !response.data.c8y_Dashboard)\n        );\n    } else if (root) {\n      return this.apiService\n        .hookResponse(\n          ({ url, method }) =>\n            RegExp('((inventory/managedObjects)|(service/smartgroup/smartgroups))/?$').test(url) &&\n            method === 'POST'\n        )\n        .pipe(\n          mergeMap(this.apiService.resolveData),\n          filter(response => this.isNewManagedObjectRoot(response))\n        );\n    } else {\n      return empty();\n    }\n  }\n\n  isNewManagedObjectRoot(response: Partial<IResult<IManagedObject>> = {}) {\n    const { data } = response;\n    let isRootAsset = false;\n\n    if (typeof data === 'object') {\n      isRootAsset = !!data[GroupFragment.groupFragmentType];\n      if (!isRootAsset && this.moduleConfig.smartGroups) {\n        isRootAsset = !!data[GroupFragment.dynamicGroupFragment];\n      }\n    }\n    return isRootAsset;\n  }\n\n  /**\n   * There could be multiple breadcrumbs for devices,\n   * so we set a preferred one on click on a device.\n   * @param parents The parent nodes of the device to select the prefered one.\n   */\n  preferBreadcrumb(parents: NavigatorNode[]) {\n    if (parents.length === 1) {\n      this.breadcrumbService.selectPreferredByPath(parents[0].path);\n    }\n  }\n\n  protected createFilter(extraParams: any = {}) {\n    const params = {\n      currentPage: 1,\n      withTotalPages: true,\n      pageSize: 10\n    };\n    return { ...params, ...extraParams };\n  }\n\n  private buildCombinedQuery(query, orderByQuery) {\n    let combinedQuery;\n    if (query && orderByQuery) {\n      const filterQuery = this.queriesUtil.buildQuery({\n        __useFilterQueryString: query\n      });\n      combinedQuery = `${filterQuery} ${orderByQuery}`;\n    } else {\n      combinedQuery = query || orderByQuery || '';\n    }\n    return combinedQuery;\n  }\n}\n","import { Inject, Injectable, Optional } from '@angular/core';\nimport { get as getProp } from 'lodash-es';\nimport { AssetNode } from './asset-node';\nimport { AssetNavigatorConfig, ASSET_NAVIGATOR_CONFIG } from './asset-node-config.model';\nimport { AssetNodeService } from './asset-node.service';\n\n@Injectable()\nexport class AssetNodeFactory {\n  constructor(\n    private service: AssetNodeService,\n    @Optional() @Inject(ASSET_NAVIGATOR_CONFIG) public moduleConfig: AssetNavigatorConfig\n  ) {}\n\n  get(): AssetNode {\n    const rootNavigatorNode = getProp(this.moduleConfig, 'rootNavigatorNode') ?? true;\n\n    if (rootNavigatorNode === false) {\n      return;\n    }\n\n    if (!this.service.rootNode) {\n      this.service.createRootNode(rootNavigatorNode === true ? {} : rootNavigatorNode);\n    }\n    return this.service.rootNode;\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport {\n  DeviceStatusComponent,\n  DeviceStatusModule,\n  HOOK_NAVIGATOR_NODES,\n  ModalModule,\n  ModalService\n} from '@c8y/ngx-components';\nimport { AssetNavigatorConfig, ASSET_NAVIGATOR_CONFIG } from './asset-node-config.model';\nimport { AssetNodeFactory } from './asset-node.factory';\nimport { DeviceGroupService } from './group.service';\n\n@NgModule({\n  declarations: [],\n  imports: [ModalModule, DeviceStatusModule],\n  providers: [\n    ModalService,\n    DeviceGroupService,\n    {\n      provide: HOOK_NAVIGATOR_NODES,\n      useClass: AssetNodeFactory,\n      multi: true\n    }\n  ],\n  entryComponents: [DeviceStatusComponent]\n})\nexport class AssetsNavigatorModule {\n  static config(config: AssetNavigatorConfig = {}): ModuleWithProviders<AssetsNavigatorModule> {\n    return {\n      ngModule: AssetsNavigatorModule,\n      providers: [\n        {\n          provide: ASSET_NAVIGATOR_CONFIG,\n          useValue: config\n        }\n      ]\n    };\n  }\n}\n","import { GroupNodeService } from './group-node.service';\nimport { AssetNode } from '../asset-node';\n\nexport class GroupNode extends AssetNode {\n  // FIXME: Currently hasChildren returns true if it is a group,\n  //        Issue is, that we disable the children in the API\n  //        getGroupItems service call due to performance. This leads\n  //        to that the dropdown chevron is shown always. Issue is,\n  //        that even if we return the chevrons, we have no way to determine\n  //        if the childAssets contain groups or other assets (like dashboards).\n  // get hasChildren() {\n  //  return this.root || this.service.groups.isGroup(this.mo) && (this.mo as IManagedObject).childAssets.references.length > 0;\n  // }\n\n  /**\n   * Creates a new node which shows only groups.\n   *\n   * @param service The service to use.\n   * @param config  The default configuration of the node.\n   */\n  constructor(protected service: GroupNodeService, config = {}) {\n    super(service, config);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AssetNodeService } from '../asset-node.service';\nimport { GroupNode } from './group-node';\nimport { GroupFragment } from '../group-fragment.model';\n\n@Injectable()\nexport class GroupNodeService extends AssetNodeService {\n  protected PAGE_SIZE = 5;\n\n  createGroupNode(config) {\n    return new GroupNode(this, config);\n  }\n\n  createChildNode(managedObject): GroupNode {\n    const config: Partial<GroupNode> = { mo: managedObject };\n    return this.createGroupNode(config);\n  }\n\n  subAssetsQueryFilter() {\n    const rootQueryFilter = this.rootQueryFilter();\n    const filter = this.queriesUtil.addOrFilter(rootQueryFilter, {\n      type: GroupFragment.subGroupType\n    });\n    return this.queriesUtil.buildQuery(filter);\n  }\n\n  getGroupItems(moId: string): Promise<any> {\n    return this.inventory.childAssetsList(moId, {\n      query: this.subAssetsQueryFilter(),\n      withChildren: false,\n      pageSize: this.PAGE_SIZE,\n      withTotalPages: true\n    });\n  }\n}\n","import { Component, Output, Input, EventEmitter, OnInit } from '@angular/core';\nimport { GroupNodeService } from './group-node.service';\nimport { GroupNode } from './group-node';\nimport { IManagedObject } from '@c8y/client';\n\n/**\n * Displays a hierarchical tree selector for assets.\n */\n@Component({\n  selector: 'c8y-asset-selector',\n  templateUrl: './asset-selector.component.html'\n})\nexport class AssetSelectorComponent implements OnInit {\n  /**\n   * An array of predefined nodes.\n   */\n  @Input() selected: IManagedObject[] = [];\n  /**\n   * Emits if one item was selected (all currently selected nodes).\n   */\n  @Output() onChange = new EventEmitter<IManagedObject[]>();\n  /**\n   * @ignore\n   */\n  rootNode: GroupNode;\n\n  /**\n   * @ignore only DI\n   */\n  constructor(private groupNodeService: GroupNodeService) {}\n\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {\n    this.rootNode = this.groupNodeService.createGroupNode({ root: true });\n  }\n\n  /**\n   * Adds an managed object to the selected array and emits the change.\n   * @param selectedMo The selected asset.\n   */\n  select(selectedMo: IManagedObject) {\n    const index = this.getIndexOfSelected(this.selected, selectedMo);\n    if (index === -1) {\n      this.selected.push(selectedMo);\n    }\n    this.onChange.emit(this.selected);\n  }\n\n  /**\n   * Removes a managed object from the selected array and emits the change.\n   * @param selectedMo The selected asset.\n   */\n  deselect(selectedMo: IManagedObject) {\n    const index = this.getIndexOfSelected(this.selected, selectedMo);\n    if (index > -1) {\n      this.selected.splice(index, 1);\n    }\n    this.onChange.emit(this.selected);\n  }\n\n  getIndexOfSelected(selected: Array<Partial<IManagedObject>>, selectedMo: IManagedObject) {\n    return selected.findIndex(mo => mo.id === selectedMo.id);\n  }\n}\n","import { Component, Input, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { gettext } from '@c8y/ngx-components';\nimport { TranslateService } from '@ngx-translate/core';\nimport { GroupNode } from './group-node';\nimport { Subject } from 'rxjs';\nimport { takeUntil, filter } from 'rxjs/operators';\nimport { AssetSelectorComponent } from './asset-selector.component';\nimport { IManagedObject } from '@c8y/client';\nimport { Action } from '../action.enum';\n\n@Component({\n  selector: 'c8y-asset-selector-node',\n  templateUrl: './asset-selector-node.component.html'\n})\nexport class AssetSelectorNodeComponent implements OnInit {\n  /**\n   * The current node.\n   */\n  @Input() node: GroupNode;\n  /**\n   * All preselected items\n   */\n  @Input() preselected: Array<Partial<IManagedObject>> = [];\n  /**\n   *  Should the path be shown\n   */\n  @Input() showPath: boolean = false;\n  /**\n   * The current path to the node\n   */\n  breadcrumb: string;\n  /**\n   * @ignore\n   */\n  level: number = 0;\n  /**\n   * The selection status of the node\n   */\n  checked: boolean = false;\n  /**\n   * @ignore\n   */\n  unsubscribe$ = new Subject<any>();\n\n  /**\n   * @ignore\n   */\n  get expandTitle() {\n    return !this.node.open ? gettext('Expand') : gettext('Collapse');\n  }\n\n  /**\n   * @ignore only di\n   */\n  constructor(\n    private translateService: TranslateService,\n    private cd: ChangeDetectorRef,\n    private parentNode: AssetSelectorComponent\n  ) {}\n\n  /**\n   * @ignore\n   */\n  async ngOnInit() {\n    this.breadcrumb = this.node.label;\n    this.setupBreadcrumbsAndLevel(this.node);\n\n    if (this.node instanceof GroupNode) {\n      this.node.hookEvents();\n    }\n\n    // open on startup\n    if (this.node.root) {\n      this.click();\n    }\n\n    if (this.node.events) {\n      this.node.events\n        .pipe(\n          takeUntil(this.unsubscribe$),\n          filter((a: Action) => a === Action.LOADING_DONE)\n        )\n        .subscribe(() => {\n          this.cd.markForCheck();\n        });\n    }\n\n    this.checked = this.isPreselected();\n  }\n\n  /**\n   * Opens a node.\n   */\n  click() {\n    this.node.open = !this.node.open;\n    this.node.click({ open: this.node.open });\n  }\n\n  /**\n   * TODO: Only level used. Breadcrumbs needs to be implemented.\n   */\n  setupBreadcrumbsAndLevel(node: GroupNode) {\n    if (node.parents && node.parents.length) {\n      const parent = node.parents[0] as GroupNode;\n      this.breadcrumb = this.translateService.instant(parent.label) + ' > ' + this.breadcrumb;\n      this.level++;\n\n      this.setupBreadcrumbsAndLevel(parent);\n    }\n  }\n\n  /**\n   * Selects the node and emits a change on the parent component.\n   * @param node The node to select.\n   */\n  selected(node: GroupNode) {\n    this.checked = !this.checked;\n    this.updateSelection(node.mo);\n  }\n\n  /**\n   * @ignore\n   */\n  ngOnDestroy(): void {\n    this.unsubscribe$.next(true);\n    this.unsubscribe$.complete();\n  }\n\n  private isPreselected() {\n    if (this.node.root || !this.node.mo) {\n      return false;\n    }\n    return this.parentNode.getIndexOfSelected(this.preselected, this.node.mo) > -1;\n  }\n\n  private updateSelection(selectedMo: IManagedObject) {\n    if (this.checked) {\n      this.parentNode.select(selectedMo);\n      return;\n    }\n    this.parentNode.deselect(selectedMo);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@c8y/ngx-components';\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { GroupNodeService } from './group-node.service';\n\nimport { AssetSelectorNodeComponent } from './asset-selector-node.component';\nimport { AssetSelectorComponent } from './asset-selector.component';\n\n@NgModule({\n  imports: [CommonModule, CollapseModule, BsDropdownModule ],\n  exports: [AssetSelectorNodeComponent, AssetSelectorComponent],\n  providers: [GroupNodeService],\n  declarations: [AssetSelectorNodeComponent, AssetSelectorComponent]\n})\nexport class AssetSelectorModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["getProp"],"mappings":"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"}