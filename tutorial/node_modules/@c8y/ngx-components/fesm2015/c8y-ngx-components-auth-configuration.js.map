{"version":3,"file":"c8y-ngx-components-auth-configuration.js","sources":["../../auth-configuration/basic-auth-settings.component.ts","../../auth-configuration/factories/tabs.factory.ts","../../auth-configuration/factories/navigation.factory.ts","../../auth-configuration/auth-configuration.guard.ts","../../auth-configuration/auth-configuration.service.ts","../../auth-configuration/auth-configuration.component.ts","../../auth-configuration/tfa-settings.component.ts","../../auth-configuration/session-configuration.component.ts","../../auth-configuration/login-settings.component.ts","../../auth-configuration/auth-configuration.module.ts","../../auth-configuration/c8y-ngx-components-auth-configuration.ts"],"names":[],"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","sourcesContent":["import { Component, Input, SimpleChanges } from '@angular/core';\nimport {\n  IAuthenticationRestrictions,\n  TenantLoginOptionsService,\n  TenantLoginOptionType\n} from '@c8y/client';\nimport { defaults, remove, isEmpty, omitBy } from 'lodash-es';\nimport { AuthConfiguration } from './auth-configuration.model';\nimport { TenantUiService } from '@c8y/ngx-components';\nimport { ControlContainer, NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'c8y-basic-auth-settings',\n  templateUrl: './basic-auth-settings.component.html',\n  viewProviders: [{ provide: ControlContainer, useExisting: NgForm }]\n})\nexport class BasicAuthSettingsComponent {\n  @Input()\n  authConfiguration: AuthConfiguration;\n\n  forbiddenUserAgents;\n\n  trustedUserAgents;\n\n  preferredLoginOptionType: TenantLoginOptionType = TenantLoginOptionType.BASIC;\n\n  tenantLoginOptionTypeEnum = TenantLoginOptionType;\n\n  constructor(private tenantLoginOptionsService: TenantLoginOptionsService,\n              private tenantUiService: TenantUiService) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.authConfiguration && changes.authConfiguration.currentValue) {\n      const { loginOptions } = changes.authConfiguration.currentValue;\n      const basic = loginOptions.find(this.tenantUiService.isBasic) || {};\n      basic.authenticationRestrictions = defaults({}, omitBy(basic.authenticationRestrictions, isEmpty), {\n        forbiddenUserAgents: [''],\n        trustedUserAgents: [''],\n        forbiddenClients: []\n      });\n      this.forbiddenUserAgents = basic.authenticationRestrictions.forbiddenUserAgents.map(val => ({ value: val }));\n      this.trustedUserAgents = basic.authenticationRestrictions.trustedUserAgents.map(val => ({ value: val }));\n      this.preferredLoginOptionType = changes.authConfiguration.currentValue.preferredLoginOptionType;\n    }\n  }\n\n  ngDoCheck() {\n    if (this.preferredLoginOptionType !== this.authConfiguration.preferredLoginOptionType) {\n      this.preferredLoginOptionType = this.authConfiguration.preferredLoginOptionType;\n    }\n  }\n\n  get forbiddenWebBrowsers() {\n    return this.authenticationRestrictions.forbiddenClients.includes('WEB_BROWSERS');\n  }\n\n  set forbiddenWebBrowsers(value: boolean) {\n    this.authenticationRestrictions.forbiddenClients = value ? ['WEB_BROWSERS'] : [];\n  }\n\n  forbiddenUserAgentsChanged({ event, index }) {\n    this.forbiddenUserAgents[index].value = event;\n    this.authenticationRestrictions.forbiddenUserAgents[index] = event;\n  }\n\n  forbiddenUserAgentsRemove(index) {\n    this.authenticationRestrictions.forbiddenUserAgents.splice(index, 1);\n    this.remove(this.forbiddenUserAgents, index);\n  }\n\n  trustedUserAgentsChanged({ event, index }) {\n    this.trustedUserAgents[index].value = event;\n    this.authenticationRestrictions.trustedUserAgents[index] = event;\n  }\n\n  trustedUserAgentsRemove(index) {\n    this.authenticationRestrictions.trustedUserAgents.splice(index, 1);\n    this.remove(this.trustedUserAgents, index);\n  }\n\n  get authenticationRestrictions(): IAuthenticationRestrictions {\n    return this.authConfiguration.loginOptions.find(this.tenantUiService.isBasic)\n      .authenticationRestrictions;\n  }\n\n  add(collection) {\n    collection.push({ value: '' });\n  }\n\n  private remove(collection, index) {\n    collection.splice(index, 1);\n    if (!collection.length) {\n      collection.push({ value: '' });\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { gettext, Tab, TabFactory } from '@c8y/ngx-components';\n\n@Injectable()\nexport class TabsFactory implements TabFactory {\n  constructor(public router: Router) {}\n  get() {\n    const tabs: Tab[] = [];\n    if (this.router.url.match(/auth-configuration/g)) {\n      tabs.push({\n        path: 'auth-configuration/basic_settings',\n        label: gettext('Basic settings'),\n        icon: 'c8y-icon dlt-c8y-icon-unlock-alt',\n        priority: 1100,\n        orientation: 'horizontal'\n      } as Tab);\n      tabs.push({\n        path: 'auth-configuration/single_sign-on',\n        label: gettext('Single sign-on'),\n        icon: 'c8y-icon dlt-c8y-icon-sign-in',\n        priority: 1050,\n        orientation: 'horizontal'\n      } as Tab);\n    }\n\n    return tabs;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { gettext, NavigatorNode, NavigatorNodeFactory, Permissions } from '@c8y/ngx-components';\n\n@Injectable()\nexport class NavigationFactory implements NavigatorNodeFactory {\n  navs: NavigatorNode[] = [];\n\n  constructor(private permissions: Permissions) {}\n\n  async get() {\n    const userHasPermission = this.permissions.hasAnyRole( [\n      'ROLE_TENANT_ADMIN',\n      'ROLE_TENANT_MANAGEMENT_ADMIN'\n    ]);\n    if (this.navs.length === 0 && userHasPermission) {\n      this.navs.push(\n        new NavigatorNode({\n          label: gettext('Authentication'),\n          icon: 'c8y-shield',\n          path: '/auth-configuration',\n          parent: gettext('Settings'),\n          priority: 2000\n        })\n      );\n    }\n    return this.navs;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { Permissions } from '@c8y/ngx-components';\n\n@Injectable()\nexport class AuthConfigurationGuard implements CanActivate {\n  constructor(private permissions: Permissions) {}\n\n  canActivate(): boolean {\n    return this.permissions.hasAnyRole( [\n      'ROLE_TENANT_ADMIN',\n      'ROLE_TENANT_MANAGEMENT_ADMIN'\n    ]);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  ApplicationService,\n  GrantType, IAuthenticationRestrictions,\n  IResult, ISessionConfiguration,\n  ISystemOption,\n  ITenantLoginOption,\n  ITenantOption,\n  SystemOptionsService,\n  TenantLoginOptionsService,\n  TenantLoginOptionType,\n  TenantOptionsService,\n  UserManagementSource\n} from '@c8y/client';\nimport { catchError, map } from 'rxjs/operators';\nimport { forkJoin, from, Observable, of } from 'rxjs';\nimport { defaults, omit } from 'lodash-es';\nimport { AuthConfiguration, Options } from './auth-configuration.model';\nimport { TenantUiService } from '@c8y/ngx-components';\n\n@Injectable()\nexport class AuthConfigurationService {\n  private systemOptionsWithDefaultValue: ISystemOption[] = [\n    { category: 'password', key: 'limit.validity', value: null },\n    { category: 'password', key: 'enforce.strength', value: 'false' },\n    { category: 'two-factor-authentication', key: 'tenant-scope-settings.enabled', value: 'false' },\n    { category: 'two-factor-authentication', key: 'enabled', value: 'false' },\n    { category: 'two-factor-authentication', key: 'enforced', value: 'false' },\n    { category: 'two-factor-authentication', key: 'enforced.group', value: '' }\n  ];\n\n  private tenantOptionsWithDefaultValue: ITenantOption[] = [\n    { category: 'password', key: 'limit.validity', value: '0' },\n    { category: 'password', key: 'strength.validity', value: 'false' },\n    { category: 'two-factor-authentication', key: 'enabled', value: 'false' },\n    { category: 'two-factor-authentication', key: 'token.validity', value: '43200' }, // 30 days\n    { category: 'two-factor-authentication', key: 'pin.validity', value: '30' },\n    { category: 'two-factor-authentication', key: 'enforced', value: 'false' },\n    { category: 'two-factor-authentication', key: 'strategy', value: 'SMS' },\n    { category: 'oauth.internal', key: 'basic-token.lifespan.seconds', value: null }\n  ];\n\n  constructor(\n    private tenantLoginOptionsService: TenantLoginOptionsService,\n    private tenantOptionsService: TenantOptionsService,\n    private systemOptionsService: SystemOptionsService,\n    private applicationService: ApplicationService,\n    private tenantUiService: TenantUiService\n  ) {}\n\n  getAuthConfiguration$(): Observable<AuthConfiguration> {\n    const loginOptions$ = this.getLoginOptions$();\n    return forkJoin({\n      loginOptions: loginOptions$,\n      tenantOptions: this.getTenantOptions$(),\n      systemOptions: this.getSystemOptions$(),\n      smsGatewayAvailable: this.isSmsApplicationAvailable$(),\n      preferredLoginOptionType: this.getPreferredLoginOptionType$(loginOptions$)\n    });\n  }\n\n  save(newAuthConfiguration: AuthConfiguration, previousAuthConfiguration: AuthConfiguration) {\n    const tenantOptions = this.prepareTenantOptions(\n      newAuthConfiguration,\n      previousAuthConfiguration\n    );\n    const updateTenantOptions = tenantOptions.map(\n      tenantOption => this.tenantOptionsService.create(tenantOption)\n    );\n    const basicLoginOption = this.prepareBasicLoginOption(\n      newAuthConfiguration,\n      previousAuthConfiguration\n    );\n    const oauthInternalLoginOption = this.prepareOauthInternalLoginOption(\n      newAuthConfiguration,\n      previousAuthConfiguration\n    );\n\n    return Promise.all([\n      this.saveOrUpdateLoginOption(basicLoginOption),\n      this.saveOrUpdateLoginOption(oauthInternalLoginOption),\n      updateTenantOptions\n    ]);\n  }\n\n  private saveOrUpdateLoginOption(\n    loginOption: ITenantLoginOption\n  ): Promise<IResult<ITenantLoginOption>> {\n    return loginOption.id\n      ? this.tenantLoginOptionsService.update(loginOption)\n      : this.tenantLoginOptionsService.create(loginOption);\n  }\n\n  private prepareBasicLoginOption(\n    newAuthConfiguration: AuthConfiguration,\n    previousAuthConfiguration: AuthConfiguration\n  ): ITenantLoginOption {\n    let basicLoginOption = this.originalLoginOptionWithDefaults(\n      previousAuthConfiguration,\n      TenantLoginOptionType.BASIC\n    );\n    basicLoginOption.authenticationRestrictions =\n      this.authenticationRestriction(newAuthConfiguration);\n    basicLoginOption.visibleOnLoginPage = this.visibleOnLoginPage(\n      newAuthConfiguration,\n      TenantLoginOptionType.BASIC\n    );\n    basicLoginOption = this.removeReadOnlyFields(basicLoginOption);\n    return basicLoginOption;\n  }\n\n  private prepareOauthInternalLoginOption(\n    newAuthConfiguration: AuthConfiguration,\n    previousAuthConfiguration: AuthConfiguration\n  ): ITenantLoginOption {\n    let oauthInternalLoginOption = this.originalLoginOptionWithDefaults(\n      previousAuthConfiguration,\n      TenantLoginOptionType.OAUTH2_INTERNAL\n    );\n    const sessionConfiguration = this.sessionConfiguration(newAuthConfiguration);\n    sessionConfiguration !== null\n      ? (oauthInternalLoginOption.sessionConfiguration = sessionConfiguration)\n      : delete oauthInternalLoginOption.sessionConfiguration;\n    oauthInternalLoginOption.visibleOnLoginPage = this.visibleOnLoginPage(\n      newAuthConfiguration,\n      TenantLoginOptionType.OAUTH2_INTERNAL\n    );\n    oauthInternalLoginOption = this.removeReadOnlyFields(oauthInternalLoginOption);\n    return oauthInternalLoginOption;\n  }\n\n  private originalLoginOptionWithDefaults(\n    previousAuthConfiguration: AuthConfiguration,\n    loginOptionType: TenantLoginOptionType\n  ): ITenantLoginOption {\n    return defaults(\n      {},\n      previousAuthConfiguration.loginOptions.find(\n        loginOption => loginOption.type === loginOptionType\n      ),\n      this.getDefaultLoginOption(loginOptionType)\n    );\n  }\n\n  private sessionConfiguration(authConfiguration: AuthConfiguration): ISessionConfiguration {\n    return authConfiguration.loginOptions.find(this.tenantUiService.isOauthInternal)\n      .sessionConfiguration;\n  }\n\n  private authenticationRestriction(authConfiguration: AuthConfiguration): IAuthenticationRestrictions {\n    const authenticationRestrictions = authConfiguration.loginOptions.find(\n      this.tenantUiService.isBasic\n    ).authenticationRestrictions;\n    return {\n      trustedUserAgents: authenticationRestrictions.trustedUserAgents.filter(value => value),\n      forbiddenUserAgents: authenticationRestrictions.forbiddenUserAgents.filter(value => value),\n      forbiddenClients: authenticationRestrictions.forbiddenClients.filter(value => value)\n    };\n  }\n\n  private visibleOnLoginPage(\n    authConfiguration: AuthConfiguration,\n    loginOptionType: TenantLoginOptionType\n  ): boolean {\n    return authConfiguration.preferredLoginOptionType === loginOptionType;\n  }\n\n  private removeReadOnlyFields(tenantLoginOption: ITenantLoginOption): ITenantLoginOption {\n    return omit(tenantLoginOption, [\n      'self',\n      'strengthValidity',\n      'tfaStrategy',\n      'greenMinLength',\n      'enforceStrength',\n      'strengthValidity',\n      '_type'\n    ]);\n  }\n\n  private prepareTenantOptions(\n    newAuthConfiguration: AuthConfiguration,\n    previousAuthConfiguration: AuthConfiguration\n  ): ITenantOption[] {\n    const getValue = (authCfg, tenantOption) =>\n      authCfg.tenantOptions[tenantOption.category][tenantOption.key];\n    const hasChanged = tenantOption =>\n      getValue(newAuthConfiguration, tenantOption) !==\n      getValue(previousAuthConfiguration, tenantOption);\n\n    return this.tenantOptionsWithDefaultValue\n      .filter( tenantOption => getValue(newAuthConfiguration, tenantOption) !== null)\n      .filter(tenantOption => hasChanged(tenantOption))\n      .map(tenantOption => ({\n        category: tenantOption.category,\n        key: tenantOption.key,\n        value: getValue(newAuthConfiguration, tenantOption).toString()\n      }));\n  }\n\n  private getLoginOptions$(): Observable<ITenantLoginOption[]> {\n    return from(this.tenantLoginOptionsService.listForCurrentTenant()).pipe(\n      map(res => res.data),\n      map(loginOptions => this.addDefaultLoginOptions(loginOptions))\n    );\n  }\n\n  private getPreferredLoginOptionType$(loginOptions$: Observable<ITenantLoginOption[]>): Observable<TenantLoginOptionType> {\n    return loginOptions$.pipe(\n      map(loginOptions => {\n        return this.tenantUiService.getPreferredLoginOption(loginOptions).type;\n      })\n    );\n  }\n\n  private addDefaultLoginOptions(loginOptions: ITenantLoginOption[]) {\n    if (!loginOptions.find(this.tenantUiService.isBasic)) {\n      loginOptions.push(this.getDefaultLoginOption(TenantLoginOptionType.BASIC));\n    }\n    if (!loginOptions.find(this.tenantUiService.isOauthInternal)) {\n      loginOptions.push(this.getDefaultLoginOption(TenantLoginOptionType.OAUTH2_INTERNAL));\n    }\n    return loginOptions;\n  }\n\n  private getTenantOptions$(): Observable<Options> {\n    return forkJoin(\n      this.tenantOptionsWithDefaultValue.map((option: ITenantOption) =>\n        from(this.tenantOptionsService.detail(option)).pipe(\n          map(res => res.data),\n          catchError(() => of(option))\n        )\n      )\n    ).pipe(map(options => this.getOptionsObject(options)));\n  }\n\n  private getSystemOptions$(): Observable<Options> {\n    return forkJoin(\n      this.systemOptionsWithDefaultValue.map((option: ISystemOption) =>\n        from(this.systemOptionsService.detail(option)).pipe(\n          map(res => res.data),\n          catchError(() => of(option))\n        )\n      )\n    ).pipe(map(options => this.getOptionsObject(options)));\n  }\n\n  private isSmsApplicationAvailable$(): Observable<boolean> {\n    return from(this.applicationService.isAvailable('sms-gateway')).pipe(map(res => res.data));\n  }\n\n  private getOptionsObject(options: Array<ITenantOption | ISystemOption>) {\n    return options.reduce((optionsObject, option) => {\n      optionsObject[option.category] = optionsObject[option.category] || {};\n      optionsObject[option.category][option.key] = this.getValue(option);\n      return optionsObject;\n    }, {});\n  }\n\n  private getValue(option: ITenantOption | ISystemOption) {\n    try {\n      return JSON.parse(option.value);\n    } catch (e) {\n      return option.value;\n    }\n  }\n\n  private getDefaultLoginOption(tenantLoginOptionType: TenantLoginOptionType): ITenantLoginOption {\n    return {\n      userManagementSource: UserManagementSource.INTERNAL,\n      grantType: GrantType.PASSWORD,\n      providerName: 'Cumulocity',\n      visibleOnLoginPage: false,\n      type: tenantLoginOptionType\n    };\n  }\n}\n","import { Component, OnInit, EventEmitter } from '@angular/core';\nimport { AuthConfigurationService } from './auth-configuration.service';\nimport { AlertService, LoginService, ModalService, Status, gettext } from '@c8y/ngx-components';\nimport { TenantLoginOptionsService } from '@c8y/client';\nimport { concat, cloneDeep } from 'lodash-es';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\nimport { tap, switchMap, shareReplay } from 'rxjs/operators';\nimport { AuthConfiguration } from './auth-configuration.model';\n\n@Component({\n  selector: 'c8y-auth-configuration',\n  templateUrl: './auth-configuration.component.html'\n})\nexport class AuthConfigurationComponent implements OnInit {\n  reloading$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n  reload: EventEmitter<void> = new EventEmitter();\n  authConfiguration: AuthConfiguration;\n\n  private authConfiguration$: Observable<AuthConfiguration> = this.reload.pipe(\n    tap(() => this.reloading$.next(true)),\n    switchMap(() => this.authConfigurationService.getAuthConfiguration$()),\n    tap(() => this.reloading$.next(false)),\n    shareReplay(1)\n  );\n  private previousAuthConfiguration: AuthConfiguration;\n  private authConfigurationSubscription: Subscription;\n\n  constructor(\n    private authConfigurationService: AuthConfigurationService,\n    private tenantLoginOptionsService: TenantLoginOptionsService,\n    private modalService: ModalService,\n    private loginService: LoginService,\n    private alertService: AlertService\n  ) {}\n\n  ngOnInit() {\n    this.authConfigurationSubscription = this.authConfiguration$.subscribe(\n      (authConfiguration: AuthConfiguration) => {\n        this.authConfiguration = authConfiguration;\n        this.previousAuthConfiguration = cloneDeep(this.authConfiguration);\n      }\n    );\n    this.loadAuthConfig();\n  }\n\n  loadAuthConfig() {\n    this.reload.next();\n  }\n\n  ngOnDestroy(): void {\n    this.authConfigurationSubscription.unsubscribe();\n  }\n\n  async save() {\n    try {\n      await this.modalService.confirmLogout();\n      await this.authConfigurationService.save(this.authConfiguration, this.previousAuthConfiguration);\n      await this.loginService.logout(true);\n    } catch (ex ) {\n      if (ex) {\n        this.alertService.addServerFailure(ex);\n      }\n    }\n  }\n}\n","// tslint:disable:no-string-literal\nimport { Component, Input, SimpleChanges } from '@angular/core';\nimport { gettext } from '@c8y/ngx-components';\nimport { isEmpty, mapValues } from 'lodash-es';\nimport { ControlContainer, NgForm } from '@angular/forms';\nimport { TfaStrategy, TenantLoginOptionType } from '@c8y/client';\nimport { AuthConfiguration } from './auth-configuration.model';\n\nenum TfaStateEnum {\n  TFA_UNDEFINED_BY_SYSTEM,\n  TFA_ENFORCED_FOR_GROUP,\n  TFA_ENABLED_BY_SYSTEM,\n  TFA_ENFORCED_BY_SYSTEM\n}\n\n@Component({\n  selector: 'c8y-auth-tfa',\n  templateUrl: './tfa-settings.component.html',\n  viewProviders: [{ provide: ControlContainer, useExisting: NgForm }]\n})\nexport class TfaSettingsComponent {\n  @Input()\n  authConfiguration: AuthConfiguration;\n\n  preferredLoginOptionType: TenantLoginOptionType = TenantLoginOptionType.BASIC;\n\n  smsGatewayAvailable: boolean;\n\n  tfaStateEnum = TfaStateEnum;\n  tfaStrategyEnum = TfaStrategy;\n  tenantLoginOptionTypeEnum = TenantLoginOptionType;\n\n  TOTP_REQUIRES_OAUTH_POPOVER = gettext('TOTP requires OAI-Secure login mode.');\n  SMS_APP_NOT_SUBSCRIBED_POPOVER = gettext('SMS strategy requires messaging application to be subscribed.');\n\n  TFA_IS_ENFORCED_BY_SYSTEM_POPOVER = gettext('The setting is enforced on the platform level.');\n  TFA_IS_ENABLED_BY_SYSTEM_POPOVER = gettext('The setting is enabled on the platform level.');\n  TOKEN_VALIDITY_DETERMINED_BY_JWT_POPOVER = gettext(\n    \"In OAI-Secure login mode, the token's validity limit is determined by the JWT token and cannot be edited here.\"\n  );\n  TFA_IS_ENABLED_BY_ENFORCE_FOR_GROUP_POPOVER = gettext(\n    'The setting is enabled on the platform level because it is enforced for particular roles.'\n  );\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.authConfiguration && changes.authConfiguration.currentValue) {\n      this.smsGatewayAvailable = changes.authConfiguration.currentValue.smsGatewayAvailable;\n      this.preferredLoginOptionType = changes.authConfiguration.currentValue.preferredLoginOptionType;\n    }\n  }\n\n  ngDoCheck() {\n    if (this.preferredLoginOptionType !== this.authConfiguration.preferredLoginOptionType) {\n      this.preferredLoginOptionType = this.authConfiguration.preferredLoginOptionType;\n      this.tenantTfaStrategy = this.tfaBySmsCanBeSet ? TfaStrategy.SMS : TfaStrategy.TOTP;\n    }\n  }\n\n  get tenantTfaTokenValidity() {\n    return this.authConfiguration.tenantOptions['two-factor-authentication']['token.validity'];\n  }\n\n  set tenantTfaTokenValidity(value) {\n    this.authConfiguration.tenantOptions['two-factor-authentication']['token.validity'] = value;\n  }\n\n  get tenantTfaPinValidity() {\n    return this.authConfiguration.tenantOptions['two-factor-authentication']['pin.validity'];\n  }\n\n  set tenantTfaPinValidity(value) {\n    this.authConfiguration.tenantOptions['two-factor-authentication']['pin.validity'] = value;\n  }\n\n  get tenantTfaEnabled() {\n    return this.authConfiguration.tenantOptions['two-factor-authentication']['enabled'];\n  }\n\n  set tenantTfaEnabled(value) {\n    this.authConfiguration.tenantOptions['two-factor-authentication']['enabled'] = value;\n  }\n\n  get tenantTfaEnforced() {\n    return this.authConfiguration.tenantOptions['two-factor-authentication']['enforced'];\n  }\n\n  set tenantTfaEnforced(value) {\n    this.authConfiguration.tenantOptions['two-factor-authentication']['enforced'] = value;\n  }\n\n  get tenantTfaStrategy() {\n    return this.authConfiguration.tenantOptions['two-factor-authentication']['strategy'];\n  }\n\n  set tenantTfaStrategy(value) {\n    this.authConfiguration.tenantOptions['two-factor-authentication']['strategy'] = value;\n  }\n\n  get systemTfaEnforcedGroup() {\n    return this.authConfiguration.systemOptions['two-factor-authentication'][\n      'enforced.group'\n    ];\n  }\n\n  get systemTfaTenantScopeSettingEnabled() {\n    return this.authConfiguration.systemOptions['two-factor-authentication']['tenant-scope-settings.enabled'];\n  }\n\n  get systemTfaEnabled() {\n    return this.authConfiguration.systemOptions['two-factor-authentication']['enabled'];\n  }\n\n  get systemTfaEnforced() {\n    return this.authConfiguration.systemOptions['two-factor-authentication']['enforced'];\n  }\n\n  get tfaState() {\n    if (this.systemTfaEnforced) {\n      return this.tfaStateEnum.TFA_ENFORCED_BY_SYSTEM;\n    }\n    if (!isEmpty(this.systemTfaEnforcedGroup)) {\n      return this.tfaStateEnum.TFA_ENFORCED_FOR_GROUP;\n    }\n    if (this.systemTfaEnabled) {\n      return this.tfaStateEnum.TFA_ENABLED_BY_SYSTEM;\n    }\n    return this.tfaStateEnum.TFA_UNDEFINED_BY_SYSTEM;\n  }\n\n  get tfaBySmsCanBeSet() {\n    return (this.tfaState !== this.tfaStateEnum.TFA_UNDEFINED_BY_SYSTEM || this.tenantTfaEnabled) && this.smsGatewayAvailable;\n  }\n\n  get tfaByTotpCanBeSet() {\n    return (\n      (this.tfaState !== this.tfaStateEnum.TFA_UNDEFINED_BY_SYSTEM || this.tenantTfaEnabled) &&\n      this.preferredLoginOptionType === TenantLoginOptionType.OAUTH2_INTERNAL\n    );\n  }\n}\n","import { Component, Input, SimpleChanges } from '@angular/core';\nimport { ISessionConfiguration } from '@c8y/client';\nimport { ControlContainer, NgForm } from '@angular/forms';\nimport { defaults, cloneDeep, isFinite } from 'lodash-es';\nimport { gettext, TenantUiService } from '@c8y/ngx-components';\nimport { AuthConfiguration } from './auth-configuration.model';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'c8y-session-configuration',\n  templateUrl: './session-configuration.component.html',\n  viewProviders: [{ provide: ControlContainer, useExisting: NgForm }]\n})\nexport class SessionConfigurationComponent {\n  @Input()\n  authConfiguration: AuthConfiguration;\n\n  ABSOLUTE_TIMEOUT_VALIDATION_MESSAGE = gettext('The value must be greater than \"Token lifespan\" and not less than {{ minAbsoluteTimeout }}.');\n  RENEWAL_TIMEOUT_VALIDATION_MESSAGE = gettext('The value must be less than \"Token lifespan\".');\n  MAX_TOKEN_LIFESPAN_VALIDATION_MESSAGE = gettext(\n    'The value must be less than \"Session absolute timeout\".'\n  );\n  MIN_TOKEN_LIFESPAN_VALIDATION_MESSAGE = gettext(\n    'The value must be greater than \"Session renewal timeout\".'\n  );\n\n  USER_AGENT_VALIDATION_REQUIRED_POPOVER = gettext('If selected, then every request needs to use the same \"User-Agent\" header as the first request which initiated the session.');\n\n  private MIN_ABSOLUTE_TIMEOUT: number = 15 * 60;\n  private originalSessionConfiguration;\n  private previousTokenLifespan;\n\n  constructor(private tenantUiService: TenantUiService,\n              private translateService: TranslateService) {\n    this.ABSOLUTE_TIMEOUT_VALIDATION_MESSAGE = this.translateService.instant(\n      this.ABSOLUTE_TIMEOUT_VALIDATION_MESSAGE, { minAbsoluteTimeout: this.MIN_ABSOLUTE_TIMEOUT } );\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.authConfiguration && changes.authConfiguration.currentValue) {\n      const oauthInternal =\n        changes.authConfiguration.currentValue.loginOptions.find(\n          this.tenantUiService.isOauthInternal\n        ) || {};\n      this.originalSessionConfiguration = cloneDeep(oauthInternal.sessionConfiguration);\n      this.sessionConfiguration = oauthInternal.sessionConfiguration;\n      this.previousTokenLifespan = this.authConfiguration.tenantOptions['oauth.internal']['basic-token.lifespan.seconds'];\n    }\n  }\n\n  get renewalTimeoutSeconds(): number {\n    const sessionConfiguration = this.sessionConfiguration;\n    return this.convertToSeconds(sessionConfiguration.renewalTimeoutMillis);\n  }\n\n  set renewalTimeoutSeconds(value: number) {\n    this.sessionConfiguration.renewalTimeoutMillis = this.convertToMillis(value);\n  }\n\n  get absoluteTimeoutSeconds(): number {\n    const sessionConfiguration = this.sessionConfiguration;\n    return this.convertToSeconds(sessionConfiguration.absoluteTimeoutMillis);\n  }\n\n  set absoluteTimeoutSeconds(value: number) {\n    this.sessionConfiguration.absoluteTimeoutMillis = this.convertToMillis(value);\n  }\n\n  get maximumNumberOfParallelSessions(): number {\n    return this.sessionConfiguration.maximumNumberOfParallelSessions;\n  }\n\n  set maximumNumberOfParallelSessions(value: number) {\n    this.sessionConfiguration.maximumNumberOfParallelSessions = value;\n  }\n\n  get userAgentValidationRequired(): boolean {\n    return this.sessionConfiguration.userAgentValidationRequired;\n  }\n\n  set userAgentValidationRequired(value: boolean) {\n    this.sessionConfiguration.userAgentValidationRequired = value;\n  }\n\n  get basicTokenLifespan() {\n    return this.authConfiguration.tenantOptions['oauth.internal']['basic-token.lifespan.seconds'];\n  }\n\n  set basicTokenLifespan(value) {\n    this.authConfiguration.tenantOptions['oauth.internal']['basic-token.lifespan.seconds'] = value;\n  }\n\n  get useSessionConfiguration() {\n    return !!this.sessionConfiguration;\n  }\n\n  set useSessionConfiguration(value) {\n    this.sessionConfiguration = value ? defaults({}, this.originalSessionConfiguration, {\n      absoluteTimeoutMillis: 1209600000, // 14 days\n      renewalTimeoutMillis: 86400000, // 1 day\n      maximumNumberOfParallelSessions: 5,\n      userAgentValidationRequired: false\n    }) : null;\n    this.basicTokenLifespan = this.previousTokenLifespan || 172800; // 2 days\n  }\n\n  get absoluteTimeoutConstraints() {\n    return {\n      min: Math.max(this.MIN_ABSOLUTE_TIMEOUT, this.basicTokenLifespan + 1)\n    };\n  }\n\n  get renewalTimeoutConstraints() {\n    return {\n      min: this.MIN_ABSOLUTE_TIMEOUT / 2,\n      max: this.basicTokenLifespan ? this.basicTokenLifespan - 1 : null\n    };\n  }\n\n  get basicTokenLifespanConstraints() {\n    return {\n      min: this.renewalTimeoutSeconds ? this.renewalTimeoutSeconds + 1 : null,\n      max: this.absoluteTimeoutSeconds ? this.absoluteTimeoutSeconds - 1 : null\n    };\n  }\n\n  get sessionConfiguration(): ISessionConfiguration {\n    return this.authConfiguration.loginOptions.find(this.tenantUiService.isOauthInternal)\n      .sessionConfiguration;\n  }\n\n  set sessionConfiguration(value: ISessionConfiguration) {\n    this.authConfiguration.loginOptions.find(this.tenantUiService.isOauthInternal)\n      .sessionConfiguration = value;\n  }\n\n  private convertToMillis(seconds: number): number {\n    return isFinite(seconds) ? seconds * 1000 : null;\n  }\n\n  private convertToSeconds(milliseconds: number): number {\n    return isFinite(milliseconds) ? Math.ceil(milliseconds / 1000) : null;\n  }\n}\n","import { Component, Input, SimpleChanges } from '@angular/core';\nimport { gettext } from '@c8y/ngx-components';\nimport { mapValues } from 'lodash-es';\nimport { ControlContainer, NgForm } from '@angular/forms';\nimport { AuthConfiguration } from './auth-configuration.model';\nimport { TenantUiService } from '@c8y/ngx-components';\nimport { TenantLoginOptionType } from '@c8y/client';\n\n@Component({\n  selector: 'c8y-login-settings',\n  templateUrl: './login-settings.component.html',\n  viewProviders: [{ provide: ControlContainer, useExisting: NgForm }]\n})\nexport class LoginSettingsComponent {\n  PREFERRED_LOGIN_MODE_POPOVER = gettext(\n    'Main difference is the storage of the authentication information. With Basic Auth, it is saved in a session storage and with OAI-Secure in a HttpOnly cookie. OAI-Secure grant is recommended as the authentication information is not accessible via JavaScript. Single sign-on redirect allows a user to login with a single 3rd-party authorization server using the OAuth2 protocol.'\n  );\n  ENFORCED_BY_PLATFORM_POPOVER = gettext('The setting is enforced on the platform level.');\n\n  @Input()\n  authConfiguration: AuthConfiguration;\n\n  isOauth2: boolean;\n  tenantLoginOptionTypeEnum = TenantLoginOptionType;\n\n  private PASSWORD_CATEGORY = 'password';\n  private LIMIT_VALIDITY_KEY = 'limit.validity';\n  private TENANT_STRENGTH_VALIDITY_KEY = 'strength.validity';\n  private SYSTEM_STRENGTH_VALIDITY_KEY = 'enforce.strength';\n\n  constructor(private tenantUiService: TenantUiService) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.authConfiguration && changes.authConfiguration.currentValue) {\n      this.isOauth2 = !!changes.authConfiguration.currentValue.loginOptions.find(this.tenantUiService.isOauth2);\n    }\n  }\n\n  get systemPasswordLimitValidity() {\n    return this.authConfiguration.systemOptions[this.PASSWORD_CATEGORY][this.LIMIT_VALIDITY_KEY];\n  }\n\n  get passwordLimitValidity() {\n    return this.systemPasswordLimitValidity !== null ?\n      this.systemPasswordLimitValidity : this.authConfiguration.tenantOptions[this.PASSWORD_CATEGORY][this.LIMIT_VALIDITY_KEY];\n  }\n\n  set passwordLimitValidity(value) {\n    if ( this.systemPasswordLimitValidity === null ) {\n      this.authConfiguration.tenantOptions[this.PASSWORD_CATEGORY][this.LIMIT_VALIDITY_KEY] = value;\n    }\n  }\n\n  get systemPasswordEnforceStrength() {\n    return this.authConfiguration.systemOptions[this.PASSWORD_CATEGORY][this.SYSTEM_STRENGTH_VALIDITY_KEY];\n  }\n\n  get passwordEnforceStrength() {\n    return this.systemPasswordEnforceStrength ?\n      this.systemPasswordEnforceStrength : this.authConfiguration.tenantOptions[this.PASSWORD_CATEGORY][this.TENANT_STRENGTH_VALIDITY_KEY];\n  }\n\n  set passwordEnforceStrength(value) {\n    if ( !this.systemPasswordEnforceStrength ) {\n      this.authConfiguration.tenantOptions[this.PASSWORD_CATEGORY][this.TENANT_STRENGTH_VALIDITY_KEY] = value;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport {\n  CoreModule,\n  HOOK_NAVIGATOR_NODES,\n  HOOK_ROUTE,\n  HOOK_TABS,\n  Route\n} from '@c8y/ngx-components';\nimport { BasicAuthSettingsComponent } from './basic-auth-settings.component';\nimport { TabsFactory } from './factories/tabs.factory';\nimport { NavigationFactory } from './factories/navigation.factory';\nimport { AuthConfigurationGuard } from './auth-configuration.guard';\nimport { PopoverModule } from 'ngx-bootstrap/popover';\nimport { AuthConfigurationService } from './auth-configuration.service';\nimport { AuthConfigurationComponent } from './auth-configuration.component';\nimport { TfaSettingsComponent } from './tfa-settings.component';\nimport { SessionConfigurationComponent } from './session-configuration.component';\nimport { LoginSettingsComponent } from './login-settings.component';\n\n@NgModule({\n  declarations: [\n    SessionConfigurationComponent,\n    LoginSettingsComponent,\n    BasicAuthSettingsComponent,\n    AuthConfigurationComponent,\n    TfaSettingsComponent\n  ],\n  exports: [],\n  imports: [CoreModule, PopoverModule],\n  providers: [\n    AuthConfigurationService,\n    AuthConfigurationGuard,\n    { provide: HOOK_TABS, useClass: TabsFactory, multi: true },\n    {\n      provide: HOOK_NAVIGATOR_NODES,\n      useClass: NavigationFactory,\n      multi: true\n    },\n    {\n      provide: HOOK_ROUTE,\n      useValue: [\n        {\n          path: 'auth-configuration',\n          redirectTo: 'auth-configuration/basic_settings',\n          pathMatch: 'full'\n        },\n        {\n          path: 'auth-configuration/basic_settings',\n          component: AuthConfigurationComponent,\n          canActivate: [AuthConfigurationGuard]\n        }\n      ] as Route[],\n      multi: true\n    }\n  ]\n})\nexport class AuthConfigurationModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {AuthConfigurationComponent as ɵd} from './auth-configuration.component';\nexport {AuthConfigurationGuard as ɵg} from './auth-configuration.guard';\nexport {AuthConfigurationService as ɵe} from './auth-configuration.service';\nexport {BasicAuthSettingsComponent as ɵc} from './basic-auth-settings.component';\nexport {NavigationFactory as ɵh} from './factories/navigation.factory';\nexport {LoginSettingsComponent as ɵb} from './login-settings.component';\nexport {SessionConfigurationComponent as ɵa} from './session-configuration.component';\nexport {TfaSettingsComponent as ɵf} from './tfa-settings.component';"]}