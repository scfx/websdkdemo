{"version":3,"file":"c8y-ngx-components-binary-file-download.js","sources":["../../binary-file-download/binary-file-download.service.ts","../../binary-file-download/binary-file-download.module.ts","../../binary-file-download/c8y-ngx-components-binary-file-download.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Router, NavigationEnd, ActivatedRoute } from '@angular/router';\nimport { filter, map } from 'rxjs/operators';\nimport { IManagedObject, InventoryBinaryService, InventoryService } from '@c8y/client';\nimport { AlertService, gettext, ModalService, Status } from '@c8y/ngx-components';\nimport { saveAs } from 'file-saver';\nimport { isUndefined } from 'lodash-es';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Injectable()\nexport class BinaryFileDownloadService {\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private inventoryService: InventoryService,\n    private alertService: AlertService,\n    private modalService: ModalService,\n    private translate: TranslateService,\n    private inventoryBinary: InventoryBinaryService\n  ) {}\n\n  run() {\n    this.router.events\n      .pipe(\n        filter(event => {\n          return event instanceof NavigationEnd && this.route.snapshot.queryParams.download;\n        }),\n        map(() => this.route.snapshot.queryParams.download)\n      )\n      .subscribe(async downloadId => {\n        try {\n          const { data } = await this.inventoryService.detail(downloadId);\n          if (!isUndefined(data.c8y_IsBinary)) {\n            this.showDownloadModal(data);\n          } else {\n            const alertMessage = this.translate.instant(\n              gettext(\n                'Could not download the file: object with ID \"{{ id }}\" is not a valid binary.'\n              ),\n              { id: data.id }\n            );\n            this.alertService.danger(alertMessage);\n          }\n        } catch (ex) {\n          this.alertService.addServerFailure(ex);\n        }\n      });\n  }\n\n  async showDownloadModal(binaryMo: IManagedObject) {\n    try {\n      const modalBody = this.translate.instant(\n        gettext('You are about to download file \"{{ fileName }}\". Do you want to proceed?'),\n        { fileName: binaryMo.name }\n      );\n      await this.modalService.confirm(gettext('File download'), modalBody, Status.INFO, {\n        ok: gettext('Download')\n      });\n      const arrayBuffer = await this.getArrayBuffer(binaryMo.id);\n      const fileBinary = new File([arrayBuffer], binaryMo.name, { type: binaryMo.contentType });\n      saveAs(fileBinary);\n    } catch (e) {\n      // empty body :(\n      console.log({ e });\n    }\n  }\n\n  private async getArrayBuffer(binaryId): Promise<ArrayBuffer> {\n    let arrayBuffer: ArrayBuffer;\n    try {\n      const res = await this.inventoryBinary.download(binaryId);\n      arrayBuffer = await res.arrayBuffer();\n    } catch (ex) {\n      const msg = gettext('Could not get the binary.');\n      this.alertService.danger(msg);\n    }\n\n    return arrayBuffer;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@c8y/ngx-components';\nimport { BinaryFileDownloadService } from './binary-file-download.service';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  providers: [BinaryFileDownloadService]\n})\nexport class BinaryFileDownloadModule {\n  constructor(binaryFileDownloadService: BinaryFileDownloadService) {\n    binaryFileDownloadService.run();\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}