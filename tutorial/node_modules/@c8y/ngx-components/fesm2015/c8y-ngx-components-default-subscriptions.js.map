{"version":3,"file":"c8y-ngx-components-default-subscriptions.js","sources":["../../default-subscriptions/default-subscriptions.model.ts","../../default-subscriptions/default-subscriptions.service.ts","../../default-subscriptions/default-subscriptions.component.ts","../../default-subscriptions/default-subscriptions.guard.ts","../../default-subscriptions/default-subscriptions-navigation.factory.ts","../../default-subscriptions/default-subscriptions.module.ts","../../default-subscriptions/c8y-ngx-components-default-subscriptions.ts"],"names":["DefaultSubscriptionsContextTenant"],"mappings":";;;;;;;;AAiBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,IAAY;AAAZ,WAAY,2BAA2B;AACtC;AACE,IAAD,iGAAc,CAAA;AAAC;AAEhB,IAAC,+FAAa,CAAA;AACf,CAAC,EALW,2BAA2B,KAA3B,2BAA2B;AACjC;AAAC,MCEM,2BAA2B;AACxC,IAAE,YACU,kBAAsC,EACtC,aAA4B,EAC5B,oBAA0C,EAC1C,mBAAwC;AACjD,QAJS,uBAAkB,GAAlB,kBAAkB,CAAoB;AAAC,QACvC,kBAAa,GAAb,aAAa,CAAe;AAAC,QAC7B,yBAAoB,GAApB,oBAAoB,CAAsB;AAAC,QAC3C,wBAAmB,GAAnB,mBAAmB,CAAqB;AACpD,KAAM;AACN;AAEC;AACE;AACE;AACE;AACE;AAEJ;AAAQ,IAAL,yBAAyB;AAAK;AACD,YAAjC,MAAM,aAAa,GAAG,CAAC,MAAM,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,EAAE,IAAI,CAAC;AACpE,YACI,MAAM,OAAO,GAAG,CAAC,MAAM,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,IAAI,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,CAAC;AAChG,YAAI,MAAM,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,GAAG,IAAI,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,KAAK,aAAa,CAAC,IAAI,CAAC,CAAC;AACtF,YAAI,MAAM,aAAa,GAAG,OAAO,CAAC,MAAM,CAAC,GAAG,IAAI,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,KAAK,aAAa,CAAC,IAAI,CAAC,CAAC;AAC5F,YACI,MAAM,YAAY,GAAmB,CAAC,GAAG,OAAO,CAAC,CAAC;AACtD,YAAI,aAAa,CAAC,OAAO,CAAC,YAAY;AACtC,gBAAM,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,IAAI,WAAW,CAAC,IAAI,KAAK,YAAY,CAAC,IAAI,CAAC,EAAE;AACrF,oBAAQ,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AACxC,iBAAO;AACP,aAAK,CAAC,CAAC;AACP,YACI,MAAM,8BAA8B,GAAG,MAAM,OAAO,CAAC,GAAG,CACtD,YAAY,CAAC,GAAG,CAAC,CAAM,GAAG;AACc,gBAAtC,MAAM,aAAa,GAAG,MAAM,IAAI,CAAC,mBAAmB;AAC5D,qBAAW,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC;AAC9B,qBAAW,IAAI,CACH,YAAY,CAAC,GAAG,CAAC,EACjB,IAAI,CAAC,CAAC,CAAC,CACR;AACX,qBAAW,SAAS,EAAE,CAAC;AACvB,gBAAQ,OAAO,EAAE,GAAG,EAAE,aAAa,EAAE,CAAC;AACtC,aAAO,CAAA,CAAC,CACH,CAAC;AACN,YAAI,MAAM,4BAA4B,GAAG,MAAM,CAAC,8BAA8B,EAAE,CAAC,eAAe,CAAC,CAAC,CAAC;AACnG,YAAI,MAAM,UAAU,GAAG,4BAA4B,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,KAAK,GAAG,CAAC,CAAC;AAC1E,YACI,OAAO,UAAU,CAAC;AACtB,SAAG;AAEF,KAFE;AACH;AAEC;AACE;AACE;AACE,IAAC,gDAAgD;AAAK;AAC9B,YAA3B,OAAO,IAAI,CAAC,uBAAuB,CAACA,2BAAiC,CAAC,aAAa,CAAC,CAAC;AACzF,SAAG;AAEF,KAFE;AACH;AAEC;AACE;AACE;AACE,IAAC,wCAAwC;AAAK;AACtB,YAA3B,OAAO,IAAI,CAAC,uBAAuB,CAACA,2BAAiC,CAAC,cAAc,CAAC,CAAC;AAC1F,SAAG;AAEF,KAFE;AACH;AAEC;AACE;AACE;AAEJ;AAAQ,IAAD,uCAAuC,CAAC,oBAA0C;AAC1F;AAA8D,YAA1D,MAAM,IAAI,CAAC,2BAA2B,CAAC,oBAAoB,CAAC,CAAC;AACjE,YAAI,MAAM,IAAI,CAAC,0BAA0B,CAAC,oBAAoB,CAAC,CAAC;AAChE,SAAG;AAEF,KAFE;AACH;AAEC;AACE;AACE;AACE,IAAS,uBAAuB,CACnC,aAAgD;AACjD;AACyB,YAAxB,IAAI,mBAA2B,CAAC;AACpC,YAAI,IAAI,WAAoB,CAAC;AAC7B,YACI,QAAQ,aAAa;AACzB,gBAAM,KAAKA,2BAAiC,CAAC,cAAc;AAC3D,oBAAQ,mBAAmB,GAAG,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC;AACtD,oBAAQ,WAAW,GAAG,IAAI,CAAC;AAC3B,oBAAQ,MAAM;AACd,gBACM,KAAKA,2BAAiC,CAAC,aAAa;AAC1D,oBAAQ,mBAAmB,GAAG,EAAE,QAAQ,EAAE,WAAW,EAAE,CAAC;AACxD,oBAAQ,WAAW,GAAG,KAAK,CAAC;AAC5B,oBAAQ,MAAM;AACd,aAAK;AACL,YACI,MAAM,EACJ,cAAc,EACd,uBAAuB,EACvB,oBAAoB,EACpB,aAAa,EACb,6BAA6B,EAC7B,sBAAsB,EACvB,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,CAAC;AACzD,YACI,MAAM,uBAAuB,GAAG,IAAI,CAAC,kBAAkB,CAAC;AAC5D,gBAAM,YAAY,EAAE,cAAc;AAClC,gBAAM,qBAAqB,EAAE,uBAAuB;AACpD,aAAK,CAAC,CAAC;AACP,YACI,MAAM,oBAAoB,GAAG,WAAW,GAAG,IAAI,GAAG,cAAc,CAAC;AACrE,YAAI,MAAM,6BAA6B,GAAG,WAAW,GAAG,IAAI,GAAG,uBAAuB,CAAC;AACvF,YAAI,MAAM,sBAAsB,GAAG,IAAI,CAAC,kBAAkB,CAAC;AAC3D,gBAAM,YAAY,EAAE,oBAAoB,GAAG,aAAa,GAAG,oBAAoB;AAC/E,gBAAM,qBAAqB,EAAE,6BAA6B;AAC1D,sBAAU,sBAAsB;AAChC,sBAAU,6BAA6B;AACvC,aAAK,CAAC,CAAC;AACP,YACI,MAAM,oBAAoB,GAAyB;AACvD,gBAAM,uBAAuB;AAC7B,gBAAM,sBAAsB;AAC5B,aAAK,CAAC;AACN,YACI,IAAI,WAAW,EAAE;AACrB,gBAAM,oBAAoB,CAAC,+BAA+B;AAC1D,oBAAQ,cAAc,KAAK,IAAI,IAAI,uBAAuB,KAAK,IAAI,CAAC;AACpE,gBAAM,oBAAoB,CAAC,8BAA8B;AACzD,oBAAQ,oBAAoB,IAAI,6BAA6B,CAAC;AAC9D,aAAK;AACL,YACI,OAAO,oBAAoB,CAAC;AAChC,SAAG;AAEF,KAFE;AACH,IACgB,gBAAgB,CAAC,MAAM,GAAG,EAAE;AAC5C;AACiD,YAD7C,OAAO;AACX,gBAAM,cAAc,EAAE,MAAM,IAAI,CAAC,eAAe,CACxC;AACR,oBAAU,QAAQ,EAAE,eAAe;AACnC,oBAAU,GAAG,EAAE,6BAA6B;AAC5C,iBAAS,EACD,IAAI,EACJ,MAAM,CACP;AACP,gBAAM,uBAAuB,EAAE,MAAM,IAAI,CAAC,eAAe,CACjD;AACR,oBAAU,QAAQ,EAAE,eAAe;AACnC,oBAAU,GAAG,EAAE,8BAA8B;AAC7C,iBAAS,EACD,IAAI,EACJ,MAAM,CACP;AACP,gBAAM,oBAAoB,EAAE,MAAM,IAAI,CAAC,eAAe,CAC9C;AACR,oBAAU,QAAQ,EAAE,eAAe;AACnC,oBAAU,GAAG,EAAE,uCAAuC;AACtD,iBAAS,EACD,KAAK,EACL,MAAM,CACP;AACP,gBAAM,aAAa,EAAE,MAAM,IAAI,CAAC,eAAe,CACvC;AACR,oBAAU,QAAQ,EAAE,eAAe;AACnC,oBAAU,GAAG,EAAE,+BAA+B;AAC9C,iBAAS,EACD,IAAI,EACJ,MAAM,CACP;AACP,gBAAM,6BAA6B,EAAE,MAAM,IAAI,CAAC,eAAe,CACvD;AACR,oBAAU,QAAQ,EAAE,eAAe;AACnC,oBAAU,GAAG,EAAE,wCAAwC;AACvD,iBAAS,EACD,KAAK,EACL,MAAM,CACP;AACP,gBAAM,sBAAsB,EAAE,MAAM,IAAI,CAAC,eAAe,CAChD;AACR,oBAAU,QAAQ,EAAE,eAAe;AACnC,oBAAU,GAAG,EAAE,gCAAgC;AAC/C,iBAAS,EACD,IAAI,EACJ,MAAM,CACP;AACP,aAAK,CAAC;AACN,SAAG;AAEF,KAFE;AACH,IACgB,2BAA2B,CAAC,oBAA0C;AACtF;AAA8D,YAA1D,IAAI,oBAAoB,CAAC,+BAA+B,EAAE;AAC9D,gBAAM,MAAM,IAAI,CAAC,eAAe,CAAC;AACjC,oBAAQ,QAAQ,EAAE,eAAe;AACjC,oBAAQ,GAAG,EAAE,6BAA6B;AAC1C,oBAAQ,KAAK,EAAE,IAAI,CAAC,0BAA0B,CAAC,oBAAoB,CAAC,uBAAuB,CAAC;AAC5F,iBAAO,CAAC,CAAC;AACT,gBAAM,MAAM,IAAI,CAAC,eAAe,CAAC;AACjC,oBAAQ,QAAQ,EAAE,eAAe;AACjC,oBAAQ,GAAG,EAAE,8BAA8B;AAC3C,oBAAQ,KAAK,EAAE,IAAI,CAAC,+BAA+B,CAAC,oBAAoB,CAAC,uBAAuB,CAAC;AACjG,iBAAO,CAAC,CAAC;AACT,aAAK;AAAC,iBAAK;AACX,gBAAM,MAAM,IAAI,CAAC,iBAAiB,CAAC;AACnC,oBAAQ,QAAQ,EAAE,eAAe;AACjC,oBAAQ,GAAG,EAAE,6BAA6B;AAC1C,iBAAO,CAAC,CAAC;AACT,gBAAM,MAAM,IAAI,CAAC,iBAAiB,CAAC;AACnC,oBAAQ,QAAQ,EAAE,eAAe;AACjC,oBAAQ,GAAG,EAAE,8BAA8B;AAC3C,iBAAO,CAAC,CAAC;AACT,aAAK;AACL,SAAG;AAEF,KAFE;AACH,IACgB,0BAA0B,CAAC,oBAA0C;AACrF;AAA8D,YAA1D,IAAI,oBAAoB,CAAC,8BAA8B,EAAE;AAC7D,gBAAM,MAAM,IAAI,CAAC,eAAe,CAAC;AACjC,oBAAQ,QAAQ,EAAE,eAAe;AACjC,oBAAQ,GAAG,EAAE,uCAAuC;AACpD,oBAAQ,KAAK,EAAE,MAAM;AACrB,iBAAO,CAAC,CAAC;AACT,gBAAM,MAAM,IAAI,CAAC,eAAe,CAAC;AACjC,oBAAQ,QAAQ,EAAE,eAAe;AACjC,oBAAQ,GAAG,EAAE,wCAAwC;AACrD,oBAAQ,KAAK,EAAE,MAAM;AACrB,iBAAO,CAAC,CAAC;AACT,gBAAM,MAAM,IAAI,CAAC,eAAe,CAAC;AACjC,oBAAQ,QAAQ,EAAE,eAAe;AACjC,oBAAQ,GAAG,EAAE,+BAA+B;AAC5C,oBAAQ,KAAK,EAAE,IAAI,CAAC,0BAA0B,CAAC,oBAAoB,CAAC,sBAAsB,CAAC;AAC3F,iBAAO,CAAC,CAAC;AACT,gBAAM,MAAM,IAAI,CAAC,eAAe,CAAC;AACjC,oBAAQ,QAAQ,EAAE,eAAe;AACjC,oBAAQ,GAAG,EAAE,gCAAgC;AAC7C,oBAAQ,KAAK,EAAE,IAAI,CAAC,+BAA+B,CAAC,oBAAoB,CAAC,sBAAsB,CAAC;AAChG,iBAAO,CAAC,CAAC;AACT,aAAK;AAAC,iBAAK;AACX,gBAAM,MAAM,IAAI,CAAC,iBAAiB,CAAC;AACnC,oBAAQ,QAAQ,EAAE,eAAe;AACjC,oBAAQ,GAAG,EAAE,uCAAuC;AACpD,iBAAO,CAAC,CAAC;AACT,gBAAM,MAAM,IAAI,CAAC,iBAAiB,CAAC;AACnC,oBAAQ,QAAQ,EAAE,eAAe;AACjC,oBAAQ,GAAG,EAAE,wCAAwC;AACrD,iBAAO,CAAC,CAAC;AACT,gBAAM,MAAM,IAAI,CAAC,iBAAiB,CAAC;AACnC,oBAAQ,QAAQ,EAAE,eAAe;AACjC,oBAAQ,GAAG,EAAE,+BAA+B;AAC5C,iBAAO,CAAC,CAAC;AACT,gBAAM,MAAM,IAAI,CAAC,iBAAiB,CAAC;AACnC,oBAAQ,QAAQ,EAAE,eAAe;AACjC,oBAAQ,GAAG,EAAE,gCAAgC;AAC7C,iBAAO,CAAC,CAAC;AACT,aAAK;AACL,SAAG;AAEF,KAFE;AACH,IACgB,eAAe,CAAC,MAAqB,EAAE,YAAY,GAAG,IAAI,EAAE,MAAM,GAAG,EAAE;AACvF;AAEqC,YAFjC,IAAI,KAAK,CAAC;AACd,YAAI,IAAI;AACR,gBAAM,KAAK,GAAG,CAAC,MAAM,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;AAClF,gBAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AAChC,aAAK;AAAC,YAAA,OAAO,EAAE,EAAE;AACjB,gBAAM,KAAK,GAAG,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,YAAY,CAAC;AACzD,aAAK;AACL,YAAI,OAAO,KAAK,CAAC;AACjB,SAAG;AAEF,KAFE;AACH,IACgB,eAAe,CAAC,MAAqB;AACrD;AAGI,YAHA,OAAO,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AACpD,SAAG;AAEF,KAFE;AACH,IACgB,iBAAiB,CAAC,MAAqB;AACvD;AACoD,YADhD,IAAI;AACR,gBAAM,MAAM,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AACrD,aAAK;AAAC,YAAA,OAAO,EAAE,EAAE;AACjB,gBAAM,IAAI,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,GAAG,CAAC,MAAM,KAAK,GAAG,EAAE;AACnD,oBAAQ,MAAM,EAAE,CAAC;AACjB,iBAAO;AACP,aAAK;AACL,SAAG;AAEF,KAFE;AACH,IACU,kBAAkB,CAAC,EACzB,YAAY,EACZ,qBAAqB,EAItB;AAAI,QACH,IAAI,YAAY,KAAK,IAAI,IAAI,qBAAqB,KAAK,IAAI,EAAE;AACjE,YAAM,OAAO,IAAI,CAAC;AAClB,SAAK;AACL,QACI,OAAO;AACX,YAAM,GAAG,CAAC,YAAY,IAAI,EAAE;AAC5B,iBAAS,KAAK,CAAC,GAAG,CAAC;AACnB,iBAAS,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC;AACpC,iBAAS,GAAG,CAAC,IAAI,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;AAC7C,YAAM,GAAG,CAAC,qBAAqB,IAAI,EAAE;AACrC,iBAAS,KAAK,CAAC,GAAG,CAAC;AACnB,iBAAS,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC;AACpC,iBAAS,GAAG,CAAC,IAAI,KAAK;AACtB,gBAAU,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE;AAC3B,gBAAU,IAAI,EAAE,eAAe,CAAC,YAAY;AAC5C,aAAS,CAAC,CAAC;AACX,SAAK,CAAC;AACN,KAAG;AACH,IACU,0BAA0B,CAAC,IAAqB;AAAI,QAC1D,OAAO,IAAI;AACf,aAAO,MAAM,CAAC,GAAG,IAAI,GAAG,CAAC,IAAI,KAAK,eAAe,CAAC,YAAY,CAAC;AAC/D,aAAO,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC;AAC3B,aAAO,IAAI,CAAC,GAAG,CAAC,CAAC;AACjB,KAAG;AACH,IACU,+BAA+B,CAAC,IAAqB;AAAI,QAC/D,OAAO,IAAI;AACf,aAAO,MAAM,CAAC,GAAG,IAAI,GAAG,CAAC,IAAI,KAAK,eAAe,CAAC,YAAY,CAAC;AAC/D,aAAO,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC;AAC3B,aAAO,IAAI,CAAC,GAAG,CAAC,CAAC;AACjB,KAAG;AACH;uDA7TC,UAAU;+JACT;AAAC;AACU,YAfX,kBAAkB;AAClB,YACA,aAAa;AACb,YAAA,oBAAoB;AACnB,YACM,mBAAmB;AAAG;;;gMAAE;AAAC;ACLlC;AACA;AACA;AACA,MAIa,6BAA6B;AAC1C,IAWE,YACU,EAAe,EACf,2BAAwD,EACxD,YAA0B;AACnC,QAHS,OAAE,GAAF,EAAE,CAAa;AAAC,QAChB,gCAA2B,GAA3B,2BAA2B,CAA6B;AAAC,QACzD,iBAAY,GAAZ,YAAY,CAAc;AACtC;AAE0C,QARxC,yBAAoB,GAAG,OAAO,CAAC,wCAAwC,CAAC,CAAC;AAC3E,KAKM;AACN;AAEC,IAAO,QAAQ;AAChB;AAEU,YAFN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;AACxB,YAAI,MAAM,IAAI,CAAC,QAAQ,EAAE,CAAC;AAC1B,YAAI,MAAM,IAAI,CAAC,wBAAwB,EAAE,CAAC;AAC1C,YAAI,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;AACzB,SAAG;AAEF,KAFE;AACH;AAEC,IAAO,QAAQ;AAChB;AAC8B,YAD1B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;AAC9B,gBAAM,+BAA+B,EAAE,CAAC,EAAE,CAAC;AAC3C,gBAAM,8BAA8B,EAAE,CAAC,EAAE,CAAC;AAC1C,gBAAM,OAAO,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC;AAChC,aAAK,CAAC,CAAC;AACP,YACI,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,2BAA2B,CAAC,yBAAyB,EAAE,CAAC;AACpF,YAAI,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAoB,CAAC;AAC5D,YAAI,IAAI,CAAC,OAAO,CAAC,GAAG;AACpB,gBAAM,OAAO,CAAC,IAAI,CACV,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;AACtB,oBAAU,GAAG,EAAE,CAAC,GAAG,CAAC;AACpB,oBAAU,oBAAoB,EAAE,CAAC,EAAE,CAAC;AACpC,oBAAU,mBAAmB,EAAE,CAAC,EAAE,CAAC;AACnC,iBAAS,CAAC,CACH,CAAC;AACR,aAAK,CAAC,CAAC;AACP,YACI,IAAI,CAAC,IAAI;AACb,iBAAO,GAAG,CAAC,iCAAiC,CAAC;AAC7C,iBAAO,YAAY,CAAC,SAAS,CAAC,KAAK,IAAI,IAAI,CAAC,uCAAuC,CAAC,KAAK,CAAC,CAAC,CAAC;AAC5F,YACI,IAAI,CAAC,IAAI;AACb,iBAAO,GAAG,CAAC,gCAAgC,CAAC;AAC5C,iBAAO,YAAY,CAAC,SAAS,CAAC,KAAK,IAAI,IAAI,CAAC,sCAAsC,CAAC,KAAK,CAAC,CAAC,CAAC;AAC3F,SAAG;AAEF,KAFE;AACH;AAEC;AACE;AACE;AACE,IAAL,gBAAgB,CAAC,cAAc;AAAI,QACjC,MAAM,EAAE,oBAAoB,EAAE,mBAAmB,EAAE,GAAG,cAAc,CAAC;AACzE,QAAI,MAAM,EAAE,+BAA+B,EAAE,8BAA8B,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;AAChG,QACI,QACE,oBAAoB;AAC1B,YAAM,mBAAmB;AACzB,YAAM,+BAA+B;AACrC,YAAM,8BAA8B,EAC9B;AACN,KAAG;AACH;AAEC,IAAC,WAAW;AAAK,QACd,OAAO,CAAC,IAAI,CAAC,IAAI;AACrB,aAAO,WAAW,EAAE;AACpB,aAAO,OAAO,CAAC,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,CAAC,CAAC;AAC7E,KAAG;AACH;AAEC;AACE;AACE;AACE;AAEJ;AAAQ,IAAT,YAAY,CAAC,GAAiB,EAAE,cAA+B;AAAI,QACjE,OAAO,cAAc,IAAI,cAAc,CAAC,IAAI,CAAC,aAAa,IAAI,aAAa,CAAC,IAAI,KAAK,GAAG,CAAC,IAAI,CAAC,CAAC;AACnG,KAAG;AACH;AAEC,IAAO,IAAI;AACZ;AACoD,YADhD,IAAI;AACR,gBAAM,MAAM,oBAAoB,GAAG,IAAI,CAAC,8BAA8B,EAAE,CAAC;AACzE,gBAAM,MAAM,IAAI,CAAC,2BAA2B,CAAC,uCAAuC,CAC5E,oBAAoB,CACrB,CAAC;AACR,gBAAM,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;AACnD,aAAK;AAAC,YAAA,OAAO,EAAE,EAAE;AACjB,gBAAM,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC;AAC7C,aAAK;AACL,SAAG;AAEF,KAFE;AACH,IACU,uCAAuC,CAAC,+BAAwC;AAC1F,QAAI,MAAM,eAAe,GAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAqB,CAAC,QAAQ,CAAC;AAC/E,QAAI,IAAI,+BAA+B,EAAE;AACzC,YAAM,IAAI,CAAC,mCAAmC,EAAE,CAAC;AACjD,YAAM,OAAO;AACb,SAAK;AACL,QAAI,IAAI,CAAC,oCAAoC,EAAE,CAAC;AAChD,QAAI,IAAI,CAAC,oCAAoC,EAAE,CAAC;AAChD,KAAG;AACH,IACU,mCAAmC;AAC7C,QAAI,MAAM,eAAe,GAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAqB,CAAC,QAAQ,CAAC;AAC/E,QAAI,eAAe,CAAC,OAAO,CAAC,aAAa;AACzC,YAAM,aAAa,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC,MAAM,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;AAC7E,SAAK,CAAC,CAAC;AACP,KAAG;AACH,IACU,oCAAoC;AAC9C,QAAI,MAAM,eAAe,GAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAqB,CAAC,QAAQ,CAAC;AAC/E,QAAI,eAAe,CAAC,OAAO,CAAC,aAAa;AACzC,YAAM,aAAa,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC,OAAO,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;AAC9E,SAAK,CAAC,CAAC;AACP,KAAG;AACH,IACU,oCAAoC;AAC9C,QAAI,MAAM,eAAe,GAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAqB,CAAC,QAAQ,CAAC;AAC/E,QAAI,eAAe,CAAC,OAAO,CAAC,aAAa;AACzC,YAAM,aAAa,CAAC,UAAU,CAAC;AAC/B,gBAAQ,oBAAoB,EAAE,IAAI,CAAC,YAAY,CACrC,aAAa,CAAC,KAAK,CAAC,GAAG,EACvB,IAAI,CAAC,0BAA0B,CAAC,uBAAuB,CACxD;AACT,aAAO,CAAC,CAAC;AACT,SAAK,CAAC,CAAC;AACP,KAAG;AACH,IACU,sCAAsC,CAAC,8BAAuC;AACxF,QAAI,MAAM,eAAe,GAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAqB,CAAC,QAAQ,CAAC;AAC/E,QAAI,IAAI,8BAA8B,EAAE;AACxC,YAAM,IAAI,CAAC,kCAAkC,EAAE,CAAC;AAChD,YAAM,OAAO;AACb,SAAK;AACL,QAAI,IAAI,CAAC,mCAAmC,EAAE,CAAC;AAC/C,QAAI,IAAI,CAAC,mCAAmC,EAAE,CAAC;AAC/C,KAAG;AACH,IACU,kCAAkC;AAC5C,QAAI,MAAM,eAAe,GAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAqB,CAAC,QAAQ,CAAC;AAC/E,QAAI,eAAe,CAAC,OAAO,CAAC,aAAa;AACzC,YAAM,aAAa,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC,MAAM,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;AAC5E,SAAK,CAAC,CAAC;AACP,KAAG;AACH,IACU,mCAAmC;AAC7C,QAAI,MAAM,eAAe,GAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAqB,CAAC,QAAQ,CAAC;AAC/E,QAAI,eAAe,CAAC,OAAO,CAAC,aAAa;AACzC,YAAM,aAAa,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC,OAAO,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;AAC7E,SAAK,CAAC,CAAC;AACP,KAAG;AACH,IACU,mCAAmC;AAC7C,QAAI,MAAM,eAAe,GAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAqB,CAAC,QAAQ,CAAC;AAC/E,QAAI,eAAe,CAAC,OAAO,CAAC,aAAa;AACzC,YAAM,aAAa,CAAC,UAAU,CAAC;AAC/B,gBAAQ,mBAAmB,EAAE,IAAI,CAAC,YAAY,CACpC,aAAa,CAAC,KAAK,CAAC,GAAG,EACvB,IAAI,CAAC,0BAA0B,CAAC,sBAAsB,CACvD;AACT,aAAO,CAAC,CAAC;AACT,SAAK,CAAC,CAAC;AACP,KAAG;AACH,IACgB,wBAAwB;AACxC;AAA8D,YAA1D,IAAI,CAAC,0BAA0B,GAAG,MAAM,IAAI,CAAC,2BAA2B,CAAC,gDAAgD,EAAE,CAAC;AAChI,YAAI,IAAI,CAAC,2BAA2B,GAAG,MAAM,IAAI,CAAC,2BAA2B,CAAC,wCAAwC,EAAE,CAAC;AACzH,YACI,MAAM,EACJ,+BAA+B,EAC/B,8BAA8B,EAC/B,GAAG,IAAI,CAAC,2BAA2B,CAAC;AACzC,YAAI,MAAM,uBAAuB,GAAG,+BAA+B;AACnE,kBAAQ,IAAI,CAAC,2BAA2B,CAAC,uBAAuB;AAChE,kBAAQ,IAAI,CAAC,0BAA0B,CAAC,uBAAuB,CAAC;AAChE,YAAI,MAAM,sBAAsB,GAAG,8BAA8B;AACjE,kBAAQ,IAAI,CAAC,2BAA2B,CAAC,sBAAsB;AAC/D,kBAAQ,IAAI,CAAC,0BAA0B,CAAC,sBAAsB,CAAC;AAC/D,YACI,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;AACzB,gBAAM,+BAA+B;AACrC,gBAAM,8BAA8B;AACpC,aAAK,CAAC,CAAC;AACP,YAAK,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAqB,CAAC,QAAQ,CAAC,OAAO,CAAC,aAAa;AAC5E,gBAAM,aAAa,CAAC,UAAU,CAAC;AAC/B,oBAAQ,oBAAoB,EAAE,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,CAAC,GAAG,EAAE,uBAAuB,CAAC;AACjG,oBAAQ,mBAAmB,EAAE,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,CAAC,GAAG,EAAE,sBAAsB,CAAC;AAC/F,iBAAO,CAAC,CAAC;AACT,aAAK,CAAC,CAAC;AACP,SAAG;AAEF,KAFE;AACH,IACU,8BAA8B;AAAK,QACzC,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC;AAChC,QAAI,OAAO;AACX,YAAM,+BAA+B,EAAE,KAAK,CAAC,+BAA+B;AAC5E,YAAM,uBAAuB,EAAE,KAAK,CAAC,+BAA+B;AACpE,kBAAU,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,IAAI,GAAG,CAAC,oBAAoB,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC;AACnF,kBAAU,IAAI;AACd,YAAM,8BAA8B,EAAE,KAAK,CAAC,8BAA8B;AAC1E,YAAM,sBAAsB,EAAE,KAAK,CAAC,8BAA8B;AAClE,kBAAU,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,IAAI,GAAG,CAAC,mBAAmB,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC;AAClF,kBAAU,IAAI;AACd,SAAK,CAAC;AACN,KAAG;AACH;yDAzNC,SAAS,SAAC,kBACT,QAAQ,EAAE,2BAA2B,kBACrC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SAAqD,cACtD;;;;;;wcACI;AAAC;AACU,YAdI,WAAW;AAAI,YAI1B,2BAA2B;AAAI,YAF/B,YAAY;AAAG;;;;;;;kJAAE;AAAC;AAAC,MCEf,yBAAyB;AAAG,IAGvC,YAAoB,eAAgC;AAAI,QAApC,oBAAe,GAAf,eAAe,CAAiB;AAAC,KAAG;AAC1D;AAEC;AACE;AACE;AAEH;AAAO;AAEJ;AAAQ,IAAL,WAAW;AAAK;AAEjB,YADH,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,EAAE;AACnC,gBAAM,IAAI,CAAC,MAAM;AACjB,oBAAQ,CAAC,MAAM,IAAI,CAAC,eAAe,CAAC,kBAAkB,EAAE;AACxD,yBAAS,MAAM,IAAI,CAAC,eAAe,CAAC,kBAAkB,EAAE,CAAC,CAAC;AAC1D,aAAK;AACL,YAAI,OAAO,IAAI,CAAC,MAAM,CAAC;AACvB,SAAG;AAEH,KAFG;AACH;qDArBC,UAAU;yJACT;AAAC;AAAmD,YAH7C,eAAe;AAAG;;;gFAAE;AAAC;AAAC,MCGlB,qCAAqC;AAAG,IASnD,YAAoB,yBAAoD;AAAI,QAAxD,8BAAyB,GAAzB,yBAAyB,CAA2B;AAAC,QARjE,YAAO,GAAG,IAAI,aAAa,CAAC;AACtC,YAAI,KAAK,EAAE,OAAO,CAAC,uBAAuB,CAAC;AAC3C,YAAI,IAAI,EAAE,wBAAwB;AAClC,YAAI,IAAI,EAAE,cAAc;AACxB,YAAI,MAAM,EAAE,OAAO,CAAC,WAAW,CAAC;AAChC,YAAI,QAAQ,EAAE,GAAG;AACjB,SAAG,CAAC,CAAC;AACL,KAC8E;AAC9E;AAEC,IAAO,GAAG;AAAK;AACsB,YAAlC,IAAI,MAAM,IAAI,CAAC,yBAAyB,CAAC,WAAW,EAAE,EAAE;AAC5D,gBAAM,OAAO,IAAI,CAAC,OAAO,CAAC;AAC1B,aAAK;AACL,SAAG;AAEH,KAFG;AACH;iEAlBC,UAAU;6LACT;AAAC;AAA+D,YAHzD,yBAAyB;AAAG;;;mFAAE;AAAC;AAAC,WCsBzB;AAChB,IAAQ;AACR,QAAU,IAAI,EAAE,uBAAuB;AACvC,QAAU,SAAS,EAAE,6BAA6B;AAClD,QAAU,WAAW,EAAE,CAAC,yBAAyB,CAAC;AAClD,KAAS;AACT;AAAG,MAKU,0BAA0B;AAAG;sDA1BzC,QAAQ,SAAC,kBACR,OAAO,EAAE,CAAC,UAAU,EAAE,mBAAmB,CAAC;eAC1C,YAAY,EAAE,CAAC,6BAA6B,CAAC,kBAC7C,eAAe,EAAE,CAAC;cAA6B,CAAC,kBAChD,OAAO,EAAE,CAAC,6BAA6B,CAAC;IACxC,SAAS,EAAE;AACT,2BAA2B;;IAC3B,yBAAyB;QACzB,0BACE,OAAO,EAAE;EAAoB;IAC7B;CAAQ,EAAE;8BAAqC;uBAC/C;EAAK,EAAE,IAAI;MACZ;kBACD,0BACE,OAAO,EAAE;OAAU,0BACnB,QAAQ,IAMI,0BACZ,KAAK,EAAE,IAAI,sBACZ;AACF,cACF;;;;;;;;;;;;;;;;;;;;;;+UACI;AAAC;ACnCN;AACA;AACA;AACA;AACA;AAGgF","sourcesContent":["import { IApplication } from '@c8y/client';\n\n/** The list of partial application objects. */\nexport type PartialAppsList = Array<Partial<IApplication>>;\n\n/** The interface for default subscriptions configuration. */\nexport interface DefaultSubscriptions {\n  /** Whether the list of on tenant creation subscriptions is overridden in the current tenant. Won't be defined for inherited configuration. */\n  overrideOnCreationSubscriptions?: boolean;\n  /** The list of applications subscribed to new tenants on creation. */\n  onCreationSubscriptions: PartialAppsList;\n  /** Whether the list of on platform upgrade subscriptions is overridden in the current tenant. Won't be defined for inherited configuration. */\n  overrideOnUpgradeSubscriptions?: boolean;\n  /** The list of applications subscribed to existing tenants on platform upgrade. */\n  onUpgradeSubscriptions: PartialAppsList;\n}\n\n/** The context for evaluating default subscriptions configuration */\nexport enum DefaultSubscriptionsContext {\n  /** Current tenant context (only current tenant options are taken into account). */\n  CURRENT_TENANT,\n  /** Parent tenant context (only parent tenant options are taken into account). */\n  PARENT_TENANT\n}\n","import { Injectable } from '@angular/core';\nimport { isUndefined, sortBy } from 'lodash-es';\nimport { debounceTime, take } from 'rxjs/operators';\n\nimport {\n  IApplication,\n  ApplicationType,\n  ApplicationService,\n  ISystemOption,\n  TenantService,\n  TenantOptionsService\n} from '@c8y/client';\nimport { HumanizeAppNamePipe } from '@c8y/ngx-components';\n\nimport {\n  PartialAppsList,\n  DefaultSubscriptions,\n  DefaultSubscriptionsContext as DefaultSubscriptionsContextTenant\n} from './default-subscriptions.model';\n\n@Injectable()\nexport class DefaultSubscriptionsService {\n  constructor(\n    private applicationService: ApplicationService,\n    private tenantService: TenantService,\n    private tenantOptionsService: TenantOptionsService,\n    private humanizeAppNamePipe: HumanizeAppNamePipe\n  ) {}\n\n  /**\n   * Gets the list of applications which can be used in default subscriptions, i.e.:\n   * - current tenant's all own applications,\n   * - inherited applications, which do not have the same names as current tenant's own apps.\n   * The list is sorted alphabetically by humanized app name and contains up to 2000 items.\n   * @returns The list of applications, which can be used in default subscriptions.\n   */\n  async getSubscribableTenantApps(): Promise<IApplication[]> {\n    const currentTenant = (await this.tenantService.current()).data;\n\n    const allApps = (await this.applicationService.listByTenant(null, { pageSize: 2000 })).data;\n    const ownApps = allApps.filter(app => app.owner.tenant.id === currentTenant.name);\n    const inheritedApps = allApps.filter(app => app.owner.tenant.id !== currentTenant.name);\n\n    const filteredApps: IApplication[] = [...ownApps];\n    inheritedApps.forEach(inheritedApp => {\n      if (!filteredApps.some(filteredApp => filteredApp.name === inheritedApp.name)) {\n        filteredApps.push(inheritedApp);\n      }\n    });\n\n    const filteredAppsWithHumanizedNames = await Promise.all(\n      filteredApps.map(async app => {\n        const humanizedName = await this.humanizeAppNamePipe\n          .transform(app.name)\n          .pipe(\n            debounceTime(250),\n            take(1)\n          )\n          .toPromise();\n        return { app, humanizedName };\n      })\n    );\n    const sortedAppsWithHumanizedNames = sortBy(filteredAppsWithHumanizedNames, ['humanizedName']);\n    const sortedApps = sortedAppsWithHumanizedNames.map(({ app }) => app);\n\n    return sortedApps;\n  }\n\n  /**\n   * Gets the default subscriptions configuration inherited from parent tenant.\n   * @returns The default subscriptions object with settings from parent tenant.\n   */\n  async getDefaultSubscriptionsEvaluatedFromParentTenant(): Promise<DefaultSubscriptions> {\n    return this.getDefaultSubscriptions(DefaultSubscriptionsContextTenant.PARENT_TENANT);\n  }\n\n  /**\n   * Gets the default subscriptions configuration from the current tenant.\n   * @returns The default subscriptions object with settings from the current tenant.\n   */\n  async getDefaultSubscriptionsFromCurrentTenant(): Promise<DefaultSubscriptions> {\n    return this.getDefaultSubscriptions(DefaultSubscriptionsContextTenant.CURRENT_TENANT);\n  }\n\n  /**\n   * Saves given default subscriptions configuration to the current tenant\n   * (either sets, updates, or deletes corresponding tenant options).\n   * @param defaultSubscriptions The default subscriptions configuration to be saved.\n   */\n  async saveDefaultSubscriptionsToCurrentTenant(defaultSubscriptions: DefaultSubscriptions) {\n    await this.saveOnCreationSubscriptions(defaultSubscriptions);\n    await this.saveOnUpgradeSubscriptions(defaultSubscriptions);\n  }\n\n  /**\n   * Gets default subscriptions in the context of current or parent tenant.\n   * @param contextTenant Tells whether to use current or parent tenant as context.\n   */\n  private async getDefaultSubscriptions(\n    contextTenant: DefaultSubscriptionsContextTenant\n  ): Promise<DefaultSubscriptions> {\n    let tenantOptionsParams: object;\n    let overridable: boolean;\n\n    switch (contextTenant) {\n      case DefaultSubscriptionsContextTenant.CURRENT_TENANT:\n        tenantOptionsParams = { evaluate: 'current' };\n        overridable = true;\n        break;\n\n      case DefaultSubscriptionsContextTenant.PARENT_TENANT:\n        tenantOptionsParams = { evaluate: 'inherited' };\n        overridable = false;\n        break;\n    }\n\n    const {\n      onCreationApps,\n      onCreationMicroservices,\n      onUpgradeAppsEnabled,\n      onUpgradeApps,\n      onUpgradeMicroservicesEnabled,\n      onUpgradeMicroservices\n    } = await this.getTenantOptions(tenantOptionsParams);\n\n    const onCreationSubscriptions = this.namesToPartialApps({\n      appsNamesStr: onCreationApps,\n      microservicesNamesStr: onCreationMicroservices\n    });\n\n    const onUpgradeAppsDefault = overridable ? null : onCreationApps;\n    const onUpgradeMicroservicesDefault = overridable ? null : onCreationMicroservices;\n    const onUpgradeSubscriptions = this.namesToPartialApps({\n      appsNamesStr: onUpgradeAppsEnabled ? onUpgradeApps : onUpgradeAppsDefault,\n      microservicesNamesStr: onUpgradeMicroservicesEnabled\n        ? onUpgradeMicroservices\n        : onUpgradeMicroservicesDefault\n    });\n\n    const defaultSubscriptions: DefaultSubscriptions = {\n      onCreationSubscriptions,\n      onUpgradeSubscriptions\n    };\n\n    if (overridable) {\n      defaultSubscriptions.overrideOnCreationSubscriptions =\n        onCreationApps !== null || onCreationMicroservices !== null;\n      defaultSubscriptions.overrideOnUpgradeSubscriptions =\n        onUpgradeAppsEnabled || onUpgradeMicroservicesEnabled;\n    }\n\n    return defaultSubscriptions;\n  }\n\n  private async getTenantOptions(params = {}) {\n    return {\n      onCreationApps: await this.getTenantOption(\n        {\n          category: 'configuration',\n          key: 'default.tenant.applications'\n        },\n        null,\n        params\n      ),\n      onCreationMicroservices: await this.getTenantOption(\n        {\n          category: 'configuration',\n          key: 'default.tenant.microservices'\n        },\n        null,\n        params\n      ),\n      onUpgradeAppsEnabled: await this.getTenantOption(\n        {\n          category: 'configuration',\n          key: 'on-update.tenant.applications.enabled'\n        },\n        false,\n        params\n      ),\n      onUpgradeApps: await this.getTenantOption(\n        {\n          category: 'configuration',\n          key: 'on-update.tenant.applications'\n        },\n        null,\n        params\n      ),\n      onUpgradeMicroservicesEnabled: await this.getTenantOption(\n        {\n          category: 'configuration',\n          key: 'on-update.tenant.microservices.enabled'\n        },\n        false,\n        params\n      ),\n      onUpgradeMicroservices: await this.getTenantOption(\n        {\n          category: 'configuration',\n          key: 'on-update.tenant.microservices'\n        },\n        null,\n        params\n      )\n    };\n  }\n\n  private async saveOnCreationSubscriptions(defaultSubscriptions: DefaultSubscriptions) {\n    if (defaultSubscriptions.overrideOnCreationSubscriptions) {\n      await this.setTenantOption({\n        category: 'configuration',\n        key: 'default.tenant.applications',\n        value: this.partialAppsListToAppsNames(defaultSubscriptions.onCreationSubscriptions)\n      });\n      await this.setTenantOption({\n        category: 'configuration',\n        key: 'default.tenant.microservices',\n        value: this.partialAppsToMicroservicesNames(defaultSubscriptions.onCreationSubscriptions)\n      });\n    } else {\n      await this.unsetTenantOption({\n        category: 'configuration',\n        key: 'default.tenant.applications'\n      });\n      await this.unsetTenantOption({\n        category: 'configuration',\n        key: 'default.tenant.microservices'\n      });\n    }\n  }\n\n  private async saveOnUpgradeSubscriptions(defaultSubscriptions: DefaultSubscriptions) {\n    if (defaultSubscriptions.overrideOnUpgradeSubscriptions) {\n      await this.setTenantOption({\n        category: 'configuration',\n        key: 'on-update.tenant.applications.enabled',\n        value: 'true'\n      });\n      await this.setTenantOption({\n        category: 'configuration',\n        key: 'on-update.tenant.microservices.enabled',\n        value: 'true'\n      });\n      await this.setTenantOption({\n        category: 'configuration',\n        key: 'on-update.tenant.applications',\n        value: this.partialAppsListToAppsNames(defaultSubscriptions.onUpgradeSubscriptions)\n      });\n      await this.setTenantOption({\n        category: 'configuration',\n        key: 'on-update.tenant.microservices',\n        value: this.partialAppsToMicroservicesNames(defaultSubscriptions.onUpgradeSubscriptions)\n      });\n    } else {\n      await this.unsetTenantOption({\n        category: 'configuration',\n        key: 'on-update.tenant.applications.enabled'\n      });\n      await this.unsetTenantOption({\n        category: 'configuration',\n        key: 'on-update.tenant.microservices.enabled'\n      });\n      await this.unsetTenantOption({\n        category: 'configuration',\n        key: 'on-update.tenant.applications'\n      });\n      await this.unsetTenantOption({\n        category: 'configuration',\n        key: 'on-update.tenant.microservices'\n      });\n    }\n  }\n\n  private async getTenantOption(option: ISystemOption, defaultValue = null, params = {}) {\n    let value;\n    try {\n      value = (await this.tenantOptionsService.detail(option, params)).data.value;\n      value = JSON.parse(value);\n    } catch (ex) {\n      value = !isUndefined(value) ? value : defaultValue;\n    }\n    return value;\n  }\n\n  private async setTenantOption(option: ISystemOption) {\n    return this.tenantOptionsService.update(option);\n  }\n\n  private async unsetTenantOption(option: ISystemOption) {\n    try {\n      await this.tenantOptionsService.delete(option);\n    } catch (ex) {\n      if (!ex || !ex.res || ex.res.status !== 404) {\n        throw ex;\n      }\n    }\n  }\n\n  private namesToPartialApps({\n    appsNamesStr,\n    microservicesNamesStr\n  }: {\n    appsNamesStr?: string;\n    microservicesNamesStr?: string;\n  }): PartialAppsList {\n    if (appsNamesStr === null && microservicesNamesStr === null) {\n      return null;\n    }\n\n    return [\n      ...(appsNamesStr || '')\n        .split(',')\n        .filter(name => name.length)\n        .map(name => ({ name: name.trim() })),\n      ...(microservicesNamesStr || '')\n        .split(',')\n        .filter(name => name.length)\n        .map(name => ({\n          name: name.trim(),\n          type: ApplicationType.MICROSERVICE\n        }))\n    ];\n  }\n\n  private partialAppsListToAppsNames(apps: PartialAppsList): string {\n    return apps\n      .filter(app => app.type !== ApplicationType.MICROSERVICE)\n      .map(app => app.name)\n      .join(',');\n  }\n\n  private partialAppsToMicroservicesNames(apps: PartialAppsList): string {\n    return apps\n      .filter(app => app.type === ApplicationType.MICROSERVICE)\n      .map(app => app.name)\n      .join(',');\n  }\n}\n","import { Component } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup } from '@angular/forms';\nimport { IApplication } from '@c8y/client';\nimport { AlertService, gettext } from '@c8y/ngx-components';\nimport { DefaultSubscriptions, PartialAppsList } from './default-subscriptions.model';\nimport { DefaultSubscriptionsService } from './default-subscriptions.service';\n\n/**\n * The component shows the main view for managing default subscriptions configuration.\n */\n@Component({\n  selector: 'c8y-default-subscriptions',\n  templateUrl: './default-subscriptions.component.html'\n})\nexport class DefaultSubscriptionsComponent {\n  /** Default subscriptions inherited from parent tenant. */\n  parentDefaultSubscriptions: DefaultSubscriptions;\n  /** Default subscriptions defined in the current tenant. */\n  currentDefaultSubscriptions: DefaultSubscriptions;\n  /** Form object. */\n  form: FormGroup;\n  /** Whether the configuration is being loaded. */\n  loading: boolean;\n  /** Hint text for disabled checkboxes. */\n  disabledCheckboxHint = gettext('Select \"Override inherited\" to enable.');\n\n  constructor(\n    private fb: FormBuilder,\n    private defaultSubscriptionsService: DefaultSubscriptionsService,\n    private alertService: AlertService\n  ) {}\n\n  /** Initializes the loading of the form and the current settings. */\n  async ngOnInit() {\n    this.loading = true;\n    await this.initForm();\n    await this.loadDefaultSubscriptions();\n    this.loading = false;\n  }\n\n  /** Loads the list of apps, builds the form and hooks value change events for override switches. */\n  async initForm() {\n    this.form = this.fb.group({\n      overrideOnCreationSubscriptions: [''],\n      overrideOnUpgradeSubscriptions: [''],\n      appRows: this.fb.array([])\n    });\n\n    const apps = await this.defaultSubscriptionsService.getSubscribableTenantApps();\n    const appRows = this.form.controls.appRows as FormArray;\n    apps.forEach(app => {\n      appRows.push(\n        this.fb.group({\n          app: [app],\n          subscribedOnCreation: [''],\n          subscribedOnUpgrade: ['']\n        })\n      );\n    });\n\n    this.form\n      .get('overrideOnCreationSubscriptions')\n      .valueChanges.subscribe(value => this.onOverrideOnCreationSubscriptionsChange(value));\n\n    this.form\n      .get('overrideOnUpgradeSubscriptions')\n      .valueChanges.subscribe(value => this.onOverrideOnUpgradeSubscriptionsChange(value));\n  }\n\n  /**\n   * Checks if given application row should be displayed.\n   * The row is displayed when any of its checkboxes is selected or any of the lists is being overridden.\n   */\n  shouldShowAppRow(appRowRawValue): boolean {\n    const { subscribedOnCreation, subscribedOnUpgrade } = appRowRawValue;\n    const { overrideOnCreationSubscriptions, overrideOnUpgradeSubscriptions } = this.form.value;\n\n    return (\n      subscribedOnCreation ||\n      subscribedOnUpgrade ||\n      overrideOnCreationSubscriptions ||\n      overrideOnUpgradeSubscriptions\n    );\n  }\n\n  /** Checks if there are no application rows to be displayed. */\n  isEmptyView(): boolean {\n    return !this.form\n      .getRawValue()\n      .appRows.some(appRowRawValue => this.shouldShowAppRow(appRowRawValue));\n  }\n\n  /**\n   * Checks if given application is subscribed (present in the given list of applications).\n   * @param app Application object to check.\n   * @param subscribedApps The list of application objects to check against.\n   * @returns True, if the application is present in the list.\n   */\n  isSubscribed(app: IApplication, subscribedApps: PartialAppsList): boolean {\n    return subscribedApps && subscribedApps.some(subscribedApp => subscribedApp.name === app.name);\n  }\n\n  /** Saves the current value of form object to backend. */\n  async save() {\n    try {\n      const defaultSubscriptions = this.getDefaultSubscriptionsForSave();\n      await this.defaultSubscriptionsService.saveDefaultSubscriptionsToCurrentTenant(\n        defaultSubscriptions\n      );\n      this.alertService.success(gettext('Saved.'));\n    } catch (ex) {\n      this.alertService.addServerFailure(ex);\n    }\n  }\n\n  private onOverrideOnCreationSubscriptionsChange(overrideOnCreationSubscriptions: boolean) {\n    const appRowsControls = (this.form.controls.appRows as FormArray).controls;\n    if (overrideOnCreationSubscriptions) {\n      this.enableSubscribeOnCreationCheckboxes();\n      return;\n    }\n    this.disableSubscribeOnCreationCheckboxes();\n    this.restoreSubscribeOnCreationFromParent();\n  }\n\n  private enableSubscribeOnCreationCheckboxes() {\n    const appRowsControls = (this.form.controls.appRows as FormArray).controls;\n    appRowsControls.forEach(appRowControl => {\n      appRowControl.get('subscribedOnCreation').enable({ emitEvent: false });\n    });\n  }\n\n  private disableSubscribeOnCreationCheckboxes() {\n    const appRowsControls = (this.form.controls.appRows as FormArray).controls;\n    appRowsControls.forEach(appRowControl => {\n      appRowControl.get('subscribedOnCreation').disable({ emitEvent: false });\n    });\n  }\n\n  private restoreSubscribeOnCreationFromParent() {\n    const appRowsControls = (this.form.controls.appRows as FormArray).controls;\n    appRowsControls.forEach(appRowControl => {\n      appRowControl.patchValue({\n        subscribedOnCreation: this.isSubscribed(\n          appRowControl.value.app,\n          this.parentDefaultSubscriptions.onCreationSubscriptions\n        )\n      });\n    });\n  }\n\n  private onOverrideOnUpgradeSubscriptionsChange(overrideOnUpgradeSubscriptions: boolean) {\n    const appRowsControls = (this.form.controls.appRows as FormArray).controls;\n    if (overrideOnUpgradeSubscriptions) {\n      this.enableSubscribeOnUpgradeCheckboxes();\n      return;\n    }\n    this.disableSubscribeOnUpgradeCheckboxes();\n    this.restoreSubscribeOnUpgradeFromParent();\n  }\n\n  private enableSubscribeOnUpgradeCheckboxes() {\n    const appRowsControls = (this.form.controls.appRows as FormArray).controls;\n    appRowsControls.forEach(appRowControl => {\n      appRowControl.get('subscribedOnUpgrade').enable({ emitEvent: false });\n    });\n  }\n\n  private disableSubscribeOnUpgradeCheckboxes() {\n    const appRowsControls = (this.form.controls.appRows as FormArray).controls;\n    appRowsControls.forEach(appRowControl => {\n      appRowControl.get('subscribedOnUpgrade').disable({ emitEvent: false });\n    });\n  }\n\n  private restoreSubscribeOnUpgradeFromParent() {\n    const appRowsControls = (this.form.controls.appRows as FormArray).controls;\n    appRowsControls.forEach(appRowControl => {\n      appRowControl.patchValue({\n        subscribedOnUpgrade: this.isSubscribed(\n          appRowControl.value.app,\n          this.parentDefaultSubscriptions.onUpgradeSubscriptions\n        )\n      });\n    });\n  }\n\n  private async loadDefaultSubscriptions() {\n    this.parentDefaultSubscriptions = await this.defaultSubscriptionsService.getDefaultSubscriptionsEvaluatedFromParentTenant();\n    this.currentDefaultSubscriptions = await this.defaultSubscriptionsService.getDefaultSubscriptionsFromCurrentTenant();\n\n    const {\n      overrideOnCreationSubscriptions,\n      overrideOnUpgradeSubscriptions\n    } = this.currentDefaultSubscriptions;\n    const onCreationSubscriptions = overrideOnCreationSubscriptions\n      ? this.currentDefaultSubscriptions.onCreationSubscriptions\n      : this.parentDefaultSubscriptions.onCreationSubscriptions;\n    const onUpgradeSubscriptions = overrideOnUpgradeSubscriptions\n      ? this.currentDefaultSubscriptions.onUpgradeSubscriptions\n      : this.parentDefaultSubscriptions.onUpgradeSubscriptions;\n\n    this.form.patchValue({\n      overrideOnCreationSubscriptions,\n      overrideOnUpgradeSubscriptions\n    });\n    (this.form.controls.appRows as FormArray).controls.forEach(appRowControl => {\n      appRowControl.patchValue({\n        subscribedOnCreation: this.isSubscribed(appRowControl.value.app, onCreationSubscriptions),\n        subscribedOnUpgrade: this.isSubscribed(appRowControl.value.app, onUpgradeSubscriptions)\n      });\n    });\n  }\n\n  private getDefaultSubscriptionsForSave(): DefaultSubscriptions {\n    const { value } = this.form;\n    return {\n      overrideOnCreationSubscriptions: value.overrideOnCreationSubscriptions,\n      onCreationSubscriptions: value.overrideOnCreationSubscriptions\n        ? value.appRows.filter(app => app.subscribedOnCreation).map(app => app.app)\n        : null,\n      overrideOnUpgradeSubscriptions: value.overrideOnUpgradeSubscriptions,\n      onUpgradeSubscriptions: value.overrideOnUpgradeSubscriptions\n        ? value.appRows.filter(app => app.subscribedOnUpgrade).map(app => app.app)\n        : null\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { TenantUiService } from '@c8y/ngx-components';\n\n@Injectable()\nexport class DefaultSubscriptionsGuard implements CanActivate {\n  private active: boolean;\n\n  constructor(private tenantUiService: TenantUiService) {}\n\n  /**\n   * Checks if default subscriptions feature should be active,\n   * i.e. whether the current tenant is the management or an enterprise tenant.\n   * **Note: the check is executed only once in the runtime.**\n   *\n   * @returns True, if the feature should be active.\n   */\n  async canActivate(): Promise<boolean> {\n    if (this.active === undefined) {\n      this.active =\n        (await this.tenantUiService.isManagementTenant()) ||\n        (await this.tenantUiService.isEnterpriseTenant());\n    }\n    return this.active;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { gettext, NavigatorNode, NavigatorNodeFactory } from '@c8y/ngx-components';\nimport { DefaultSubscriptionsGuard } from './default-subscriptions.guard';\n\n@Injectable()\nexport class DefaultSubscriptionsNavigationFactory implements NavigatorNodeFactory {\n  private navNode = new NavigatorNode({\n    label: gettext('Default subscriptions'),\n    path: '/default-subscriptions',\n    icon: 'c8y-c8y-data',\n    parent: gettext('Ecosystem'),\n    priority: 100\n  });\n\n  constructor(private defaultSubscriptionsGuard: DefaultSubscriptionsGuard) {}\n\n  /** Returns the navigation node if the feature is active. */\n  async get(): Promise<NavigatorNode> {\n    if (await this.defaultSubscriptionsGuard.canActivate()) {\n      return this.navNode;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CoreModule, HOOK_NAVIGATOR_NODES, HOOK_ROUTE, Route } from '@c8y/ngx-components';\n\nimport { DefaultSubscriptionsComponent } from './default-subscriptions.component';\nimport { DefaultSubscriptionsService } from './default-subscriptions.service';\nimport { DefaultSubscriptionsGuard } from './default-subscriptions.guard';\nimport { DefaultSubscriptionsNavigationFactory } from './default-subscriptions-navigation.factory';\n\n@NgModule({\n  imports: [CoreModule, ReactiveFormsModule],\n  declarations: [DefaultSubscriptionsComponent],\n  entryComponents: [DefaultSubscriptionsComponent],\n  exports: [DefaultSubscriptionsComponent],\n  providers: [\n    DefaultSubscriptionsService,\n    DefaultSubscriptionsGuard,\n    {\n      provide: HOOK_NAVIGATOR_NODES,\n      useClass: DefaultSubscriptionsNavigationFactory,\n      multi: true\n    },\n    {\n      provide: HOOK_ROUTE,\n      useValue: [\n        {\n          path: 'default-subscriptions',\n          component: DefaultSubscriptionsComponent,\n          canActivate: [DefaultSubscriptionsGuard]\n        }\n      ] as Route[],\n      multi: true\n    }\n  ]\n})\nexport class DefaultSubscriptionsModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {DefaultSubscriptionsNavigationFactory as ɵb} from './default-subscriptions-navigation.factory';\nexport {DefaultSubscriptionsGuard as ɵa} from './default-subscriptions.guard';"]}