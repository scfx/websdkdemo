import { Injectable, InjectionToken, Optional, Inject, Component, NgModule } from '@angular/core';
import { RouterModule } from '@angular/router';
import { BsDatepickerModule } from 'ngx-bootstrap/datepicker';
import { TenantUiService, NavigatorNode, gettext, FilteringFormRendererContext, Status, AppStateService, AlertService, ModalService, PasswordService, CoreModule, HOOK_NAVIGATOR_NODES, HOOK_ROUTE } from '@c8y/ngx-components';
import { __awaiter } from 'tslib';
import { Location } from '@angular/common';
import { TranslateService } from '@ngx-translate/core';
import { BehaviorSubject, from } from 'rxjs';
import { expand, takeWhile, reduce, shareReplay } from 'rxjs/operators';
import { saveAs } from 'file-saver';
import { TenantStatus, TenantService, UserService } from '@c8y/client';

import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@c8y/ngx-components';
import * as ɵngcc2 from '@angular/forms';
import * as ɵngcc3 from 'ngx-bootstrap/datepicker';
import * as ɵngcc4 from '@ngx-translate/core';
import * as ɵngcc5 from '@c8y/client';
import * as ɵngcc6 from '@angular/common';
import * as ɵngcc7 from '@angular/router';

const _c0 = function () { return { customTodayClass: "today", returnFocusToInput: true }; };
function TenantListComponent_c8y_action_bar_item_3_Template(rf, ctx) { if (rf & 1) {
    const _r9 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "c8y-action-bar-item", 1);
    ɵngcc0.ɵɵelementStart(1, "button", 2);
    ɵngcc0.ɵɵlistener("click", function TenantListComponent_c8y_action_bar_item_3_Template_button_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r8 = ɵngcc0.ɵɵnextContext(); return ctx_r8.downloadNewsletterEmails(); });
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelement(3, "i", 13);
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵpipe(5, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵproperty("placement", "right");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(2, 3, "Downloads the list of emails of users subscribed for newsletter on the current tenant and its subtenants."));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(5, 5, "Email addresses"), " ");
} }
function TenantListComponent_ng_container_15_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelement(1, "c8y-loading");
    ɵngcc0.ɵɵelementContainerEnd();
} }
function TenantListComponent_ng_container_17_Template(rf, ctx) { if (rf & 1) {
    const _r11 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "div", 14);
    ɵngcc0.ɵɵelement(2, "h1", 15);
    ɵngcc0.ɵɵelementStart(3, "h3", 16);
    ɵngcc0.ɵɵtext(4, "There are no tenants defined.");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(5, "p", 16);
    ɵngcc0.ɵɵtext(6, "Create the first tenant.");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(7, "div");
    ɵngcc0.ɵɵelementStart(8, "button", 17);
    ɵngcc0.ɵɵlistener("click", function TenantListComponent_ng_container_17_Template_button_click_8_listener() { ɵngcc0.ɵɵrestoreView(_r11); const ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10.createTenant(); });
    ɵngcc0.ɵɵpipe(9, "translate");
    ɵngcc0.ɵɵtext(10);
    ɵngcc0.ɵɵpipe(11, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(12, "p", 18);
    ɵngcc0.ɵɵelementStart(13, "small", 16);
    ɵngcc0.ɵɵdisableBindings();
    ɵngcc0.ɵɵtext(14, " Find out more in the ");
    ɵngcc0.ɵɵelementStart(15, "a", 19);
    ɵngcc0.ɵɵtext(16, " User guide`KEEP_ORIGINAL` ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(17, ". ");
    ɵngcc0.ɵɵenableBindings();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(8);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(9, 2, "Create tenant"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(11, 4, "Create tenant"), " ");
} }
function TenantListComponent_ng_container_19_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "div", 14);
    ɵngcc0.ɵɵelement(2, "h1", 20);
    ɵngcc0.ɵɵelementStart(3, "h3", 16);
    ɵngcc0.ɵɵtext(4, "No tenants to display.");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(5, "p", 16);
    ɵngcc0.ɵɵtext(6, "Refine your search terms or check your spelling.");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} }
const _c1 = function (a1) { return ["/tenants", a1]; };
function TenantListComponent_ng_container_22_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "span", 21);
    ɵngcc0.ɵɵelementStart(2, "a", 22);
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const context_r12 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("title", context_r12.value);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("routerLink", ɵngcc0.ɵɵpureFunction1(3, _c1, context_r12.item.id));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(context_r12.value);
} }
function TenantListComponent_ng_container_24_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "span", 21);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const context_r13 = ctx.$implicit;
    const ctx_r5 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("title", context_r13.value || ctx_r5.currentTenant.name);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", context_r13.value || ctx_r5.currentTenant.name, " ");
} }
function TenantListComponent_ng_container_26_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "span", 21);
    ɵngcc0.ɵɵpipe(2, "c8yDate");
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵpipe(4, "c8yDate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const context_r14 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(2, 2, context_r14.value));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(4, 4, context_r14.value), " ");
} }
function TenantListComponent_ng_container_28_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 21);
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵelement(2, "i", 24);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(1, 1, "Active`tenant`"));
} }
function TenantListComponent_ng_container_28_span_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 21);
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵelement(2, "i", 25);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(1, 1, "Suspended`tenant`"));
} }
function TenantListComponent_ng_container_28_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, TenantListComponent_ng_container_28_span_1_Template, 3, 3, "span", 23);
    ɵngcc0.ɵɵtemplate(2, TenantListComponent_ng_container_28_span_2_Template, 3, 3, "span", 23);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const context_r15 = ctx.$implicit;
    const ctx_r7 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", context_r15.item.status === ctx_r7.TenantStatus.ACTIVE);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", context_r15.item.status === ctx_r7.TenantStatus.SUSPENDED);
} }
class TenantListGuard {
    constructor(tenantUiService) {
        this.tenantUiService = tenantUiService;
    }
    /**
     * Checks if tenant list should be active,
     * i.e. whether the current tenant can read other tenants.
     * **Note: the check is executed only once in the runtime.**
     *
     * @returns True, if the feature should be active.
     */
    canActivate() {
        if (this.active === undefined) {
            this.active = this.tenantUiService.canReadTenants();
        }
        return this.active;
    }
}
TenantListGuard.ɵfac = function TenantListGuard_Factory(t) { return new (t || TenantListGuard)(ɵngcc0.ɵɵinject(ɵngcc1.TenantUiService)); };
TenantListGuard.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: TenantListGuard, factory: TenantListGuard.ɵfac });
TenantListGuard.ctorParameters = () => [
    { type: TenantUiService }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TenantListGuard, [{
        type: Injectable
    }], function () { return [{ type: ɵngcc1.TenantUiService }]; }, null); })();

const TENANTS_MODULE_CONFIG = new InjectionToken('TenantsModuleConfig');

class TenantsNavigationFactory {
    constructor(tenantListGuard, config) {
        this.tenantListGuard = tenantListGuard;
        this.config = config;
        this.navs = [];
    }
    get() {
        var _a, _b;
        return __awaiter(this, void 0, void 0, function* () {
            const canActivateTenantList = yield this.tenantListGuard.canActivate();
            if (!this.navs.length) {
                const subtenantsNavigatorNode = (_b = (_a = this.config) === null || _a === void 0 ? void 0 : _a.subtenantsNavigatorNode) !== null && _b !== void 0 ? _b : true;
                if (subtenantsNavigatorNode !== false) {
                    this.navs.push(new NavigatorNode(Object.assign({ parent: gettext('Tenants'), label: gettext('Subtenants'), icon: 'c8y-sub-tenants', path: 'tenants', routerLinkExact: false, priority: 4000, hidden: !canActivateTenantList }, (subtenantsNavigatorNode === true ? {} : subtenantsNavigatorNode))));
                }
            }
            return this.navs;
        });
    }
}
TenantsNavigationFactory.ɵfac = function TenantsNavigationFactory_Factory(t) { return new (t || TenantsNavigationFactory)(ɵngcc0.ɵɵinject(TenantListGuard), ɵngcc0.ɵɵinject(TENANTS_MODULE_CONFIG, 8)); };
TenantsNavigationFactory.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: TenantsNavigationFactory, factory: TenantsNavigationFactory.ɵfac });
TenantsNavigationFactory.ctorParameters = () => [
    { type: TenantListGuard },
    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [TENANTS_MODULE_CONFIG,] }] }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TenantsNavigationFactory, [{
        type: Injectable
    }], function () { return [{ type: TenantListGuard }, { type: undefined, decorators: [{
                type: Optional
            }, {
                type: Inject,
                args: [TENANTS_MODULE_CONFIG]
            }] }]; }, null); })();

class StatusFilteringFormRendererComponent {
    constructor(context) {
        this.context = context;
        this.model = (this.context.property.externalFilterQuery || {}).model || {};
    }
    applyFilter() {
        this.context.applyFilter({
            externalFilterQuery: {
                model: this.model
            },
            filterPredicate: (tenant) => Boolean((!this.model.active && !this.model.suspended) ||
                (this.model.active && tenant.status === TenantStatus.ACTIVE) ||
                (this.model.suspended && tenant.status === TenantStatus.SUSPENDED))
        });
    }
    resetFilter() {
        this.context.resetFilter();
    }
}
StatusFilteringFormRendererComponent.ɵfac = function StatusFilteringFormRendererComponent_Factory(t) { return new (t || StatusFilteringFormRendererComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FilteringFormRendererContext)); };
StatusFilteringFormRendererComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: StatusFilteringFormRendererComponent, selectors: [["ng-component"]], decls: 29, vars: 24, consts: [["filterForm", "ngForm"], [1, "m-b-8", "p-t-8"], [1, "m-b-0"], [1, "c8y-checkbox"], ["type", "checkbox", "name", "active", 3, "ngModel", "ngModelChange"], ["type", "checkbox", "name", "suspended", 3, "ngModel", "ngModelChange"], [1, "data-grid__dropdown__footer", "d-flex", "separator-top"], [1, "btn", "btn-default", "btn-sm", "m-r-8", "flex-grow", 3, "title", "click"], [1, "btn", "btn-primary", "btn-sm", "flex-grow", 3, "disabled", "title", "click"]], template: function StatusFilteringFormRendererComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "form", null, 0);
        ɵngcc0.ɵɵelementStart(2, "div", 1);
        ɵngcc0.ɵɵelementStart(3, "label");
        ɵngcc0.ɵɵtext(4);
        ɵngcc0.ɵɵpipe(5, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(6, "c8y-form-group", 2);
        ɵngcc0.ɵɵelementStart(7, "label", 3);
        ɵngcc0.ɵɵelementStart(8, "input", 4);
        ɵngcc0.ɵɵlistener("ngModelChange", function StatusFilteringFormRendererComponent_Template_input_ngModelChange_8_listener($event) { return ctx.model.active = $event; });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(9, "span");
        ɵngcc0.ɵɵelementStart(10, "span");
        ɵngcc0.ɵɵtext(11);
        ɵngcc0.ɵɵpipe(12, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(13, "c8y-form-group", 2);
        ɵngcc0.ɵɵelementStart(14, "label", 3);
        ɵngcc0.ɵɵelementStart(15, "input", 5);
        ɵngcc0.ɵɵlistener("ngModelChange", function StatusFilteringFormRendererComponent_Template_input_ngModelChange_15_listener($event) { return ctx.model.suspended = $event; });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(16, "span");
        ɵngcc0.ɵɵelementStart(17, "span");
        ɵngcc0.ɵɵtext(18);
        ɵngcc0.ɵɵpipe(19, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(20, "div", 6);
        ɵngcc0.ɵɵelementStart(21, "button", 7);
        ɵngcc0.ɵɵlistener("click", function StatusFilteringFormRendererComponent_Template_button_click_21_listener() { return ctx.resetFilter(); });
        ɵngcc0.ɵɵpipe(22, "translate");
        ɵngcc0.ɵɵtext(23);
        ɵngcc0.ɵɵpipe(24, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(25, "button", 8);
        ɵngcc0.ɵɵlistener("click", function StatusFilteringFormRendererComponent_Template_button_click_25_listener() { return ctx.applyFilter(); });
        ɵngcc0.ɵɵpipe(26, "translate");
        ɵngcc0.ɵɵtext(27);
        ɵngcc0.ɵɵpipe(28, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        const _r0 = ɵngcc0.ɵɵreference(1);
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(5, 10, "Filter by status"));
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵproperty("ngModel", ctx.model.active);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(12, 12, "Active`tenant`"));
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵproperty("ngModel", ctx.model.suspended);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(19, 14, "Suspended`tenant`"));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(22, 16, "Reset"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(24, 18, "Reset"), " ");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(26, 20, "Apply"));
        ɵngcc0.ɵɵproperty("disabled", _r0.invalid);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(28, 22, "Apply"), " ");
    } }, directives: [ɵngcc2.ɵNgNoValidate, ɵngcc2.NgControlStatusGroup, ɵngcc2.NgForm, ɵngcc1.FormGroupComponent, ɵngcc2.CheckboxControlValueAccessor, ɵngcc2.NgControlStatus, ɵngcc2.NgModel], pipes: [ɵngcc1.C8yTranslatePipe], encapsulation: 2 });
StatusFilteringFormRendererComponent.ctorParameters = () => [
    { type: FilteringFormRendererContext }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(StatusFilteringFormRendererComponent, [{
        type: Component,
        args: [{
                template: "<form #filterForm=\"ngForm\">\n  <div class=\"m-b-8 p-t-8\">\n    <label>{{ 'Filter by status' | translate }}</label>\n    <c8y-form-group class=\"m-b-0\">\n      <label class=\"c8y-checkbox\">\n        <input type=\"checkbox\" name=\"active\" [(ngModel)]=\"model.active\" />\n        <span></span>\n        <span>{{ 'Active`tenant`' | translate }}</span>\n      </label>\n    </c8y-form-group>\n    <c8y-form-group class=\"m-b-0\">\n      <label class=\"c8y-checkbox\">\n        <input type=\"checkbox\" name=\"suspended\" [(ngModel)]=\"model.suspended\" />\n        <span></span>\n        <span>{{ 'Suspended`tenant`' | translate }}</span>\n      </label>\n    </c8y-form-group>\n  </div>\n</form>\n\n<div class=\"data-grid__dropdown__footer d-flex separator-top\">\n  <button\n    class=\"btn btn-default btn-sm m-r-8 flex-grow\"\n    (click)=\"resetFilter()\"\n    title=\"{{ 'Reset' | translate }}\"\n  >\n    {{ 'Reset' | translate }}\n  </button>\n  <button\n    class=\"btn btn-primary btn-sm flex-grow\"\n    [disabled]=\"filterForm.invalid\"\n    (click)=\"applyFilter()\"\n    title=\"{{ 'Apply' | translate }}\"\n  >\n    {{ 'Apply' | translate }}\n  </button>\n</div>\n"
            }]
    }], function () { return [{ type: ɵngcc1.FilteringFormRendererContext }]; }, null); })();

class CreationTimeFilteringFormRendererComponent {
    constructor(context) {
        this.context = context;
        this.model = (this.context.property.externalFilterQuery || {}).model || {};
    }
    applyFilter() {
        this.context.applyFilter({
            externalFilterQuery: {
                model: this.model
            },
            filterPredicate: (tenant) => {
                const creationTime = new Date(tenant.creationTime);
                let dateFrom;
                let dateTo;
                if (this.model.dateFrom) {
                    dateFrom = this.model.dateFrom;
                    dateFrom.setHours(0, 0, 0, 0);
                }
                if (this.model.dateTo) {
                    dateTo = this.model.dateTo;
                    dateTo.setHours(23, 59, 59, 999);
                }
                return Boolean((!dateFrom && !dateTo) ||
                    (dateFrom && !dateTo && dateFrom <= creationTime) ||
                    (!dateFrom && dateTo && creationTime <= dateTo) ||
                    (dateFrom && dateTo && dateFrom <= creationTime && creationTime <= dateTo));
            }
        });
    }
    resetFilter() {
        this.context.resetFilter();
    }
}
CreationTimeFilteringFormRendererComponent.ɵfac = function CreationTimeFilteringFormRendererComponent_Factory(t) { return new (t || CreationTimeFilteringFormRendererComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FilteringFormRendererContext)); };
CreationTimeFilteringFormRendererComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CreationTimeFilteringFormRendererComponent, selectors: [["ng-component"]], decls: 21, vars: 30, consts: [["filterForm", "ngForm"], [1, "m-b-8", "p-t-8"], [1, "datepicker", "d-block", "m-b-16", 2, "max-height", "32px"], ["name", "dateFrom", "bsDatepicker", "", 1, "form-control", "fit-w", "text-left", 3, "ngModel", "placeholder", "bsConfig", "maxDate", "ngModelChange"], [1, "datepicker", "m-l-0", "d-block", 2, "max-height", "32px"], ["name", "dateTo", "bsDatepicker", "", 1, "form-control", "fit-w", "text-left", 3, "ngModel", "placeholder", "bsConfig", "minDate", "ngModelChange"], [1, "data-grid__dropdown__footer", "d-flex", "separator-top"], [1, "btn", "btn-default", "btn-sm", "m-r-8", "flex-grow", 3, "title", "click"], [1, "btn", "btn-primary", "btn-sm", "flex-grow", 3, "disabled", "title", "click"]], template: function CreationTimeFilteringFormRendererComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "form", null, 0);
        ɵngcc0.ɵɵelementStart(2, "div", 1);
        ɵngcc0.ɵɵelementStart(3, "label");
        ɵngcc0.ɵɵtext(4);
        ɵngcc0.ɵɵpipe(5, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(6, "c8y-form-group", 2);
        ɵngcc0.ɵɵelementStart(7, "input", 3);
        ɵngcc0.ɵɵlistener("ngModelChange", function CreationTimeFilteringFormRendererComponent_Template_input_ngModelChange_7_listener($event) { return ctx.model.dateFrom = $event; });
        ɵngcc0.ɵɵpipe(8, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(9, "c8y-form-group", 4);
        ɵngcc0.ɵɵelementStart(10, "input", 5);
        ɵngcc0.ɵɵlistener("ngModelChange", function CreationTimeFilteringFormRendererComponent_Template_input_ngModelChange_10_listener($event) { return ctx.model.dateTo = $event; });
        ɵngcc0.ɵɵpipe(11, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(12, "div", 6);
        ɵngcc0.ɵɵelementStart(13, "button", 7);
        ɵngcc0.ɵɵlistener("click", function CreationTimeFilteringFormRendererComponent_Template_button_click_13_listener() { return ctx.resetFilter(); });
        ɵngcc0.ɵɵpipe(14, "translate");
        ɵngcc0.ɵɵtext(15);
        ɵngcc0.ɵɵpipe(16, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(17, "button", 8);
        ɵngcc0.ɵɵlistener("click", function CreationTimeFilteringFormRendererComponent_Template_button_click_17_listener() { return ctx.applyFilter(); });
        ɵngcc0.ɵɵpipe(18, "translate");
        ɵngcc0.ɵɵtext(19);
        ɵngcc0.ɵɵpipe(20, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        const _r0 = ɵngcc0.ɵɵreference(1);
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(5, 14, "Filter by creation time"));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵpropertyInterpolate("placeholder", ɵngcc0.ɵɵpipeBind1(8, 16, "Created from`date`"));
        ɵngcc0.ɵɵproperty("ngModel", ctx.model.dateFrom)("bsConfig", ɵngcc0.ɵɵpureFunction0(28, _c0))("maxDate", ctx.model.dateTo);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵpropertyInterpolate("placeholder", ɵngcc0.ɵɵpipeBind1(11, 18, "Created to`date`"));
        ɵngcc0.ɵɵproperty("ngModel", ctx.model.dateTo)("bsConfig", ɵngcc0.ɵɵpureFunction0(29, _c0))("minDate", ctx.model.dateFrom);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(14, 20, "Reset"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(16, 22, "Reset"), " ");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(18, 24, "Apply"));
        ɵngcc0.ɵɵproperty("disabled", _r0.invalid);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(20, 26, "Apply"), " ");
    } }, directives: [ɵngcc2.ɵNgNoValidate, ɵngcc2.NgControlStatusGroup, ɵngcc2.NgForm, ɵngcc1.FormGroupComponent, ɵngcc3.BsDatepickerInputDirective, ɵngcc2.DefaultValueAccessor, ɵngcc3.BsDatepickerDirective, ɵngcc2.NgControlStatus, ɵngcc2.NgModel], pipes: [ɵngcc1.C8yTranslatePipe], encapsulation: 2 });
CreationTimeFilteringFormRendererComponent.ctorParameters = () => [
    { type: FilteringFormRendererContext }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CreationTimeFilteringFormRendererComponent, [{
        type: Component,
        args: [{
                template: "<form #filterForm=\"ngForm\">\n  <div class=\"m-b-8 p-t-8\">\n    <label>{{ 'Filter by creation time' | translate }}</label>\n    <c8y-form-group class=\"datepicker d-block m-b-16\" style=\"max-height: 32px\">\n      <input\n        name=\"dateFrom\"\n        [(ngModel)]=\"model.dateFrom\"\n        class=\"form-control fit-w text-left\"\n        placeholder=\"{{ 'Created from`date`' | translate }}\"\n        bsDatepicker\n        [bsConfig]=\"{ customTodayClass: 'today', returnFocusToInput: true }\"\n        [maxDate]=\"model.dateTo\"\n      />\n    </c8y-form-group>\n    <c8y-form-group class=\"datepicker m-l-0 d-block\" style=\"max-height: 32px\">\n      <input\n        name=\"dateTo\"\n        [(ngModel)]=\"model.dateTo\"\n        class=\"form-control fit-w text-left\"\n        placeholder=\"{{ 'Created to`date`' | translate }}\"\n        bsDatepicker\n        [bsConfig]=\"{ customTodayClass: 'today', returnFocusToInput: true }\"\n        [minDate]=\"model.dateFrom\"\n      />\n    </c8y-form-group>\n  </div>\n</form>\n\n<div class=\"data-grid__dropdown__footer d-flex separator-top\">\n  <button\n    class=\"btn btn-default btn-sm m-r-8 flex-grow\"\n    (click)=\"resetFilter()\"\n    title=\"{{ 'Reset' | translate }}\"\n  >\n    {{ 'Reset' | translate }}\n  </button>\n  <button\n    class=\"btn btn-primary btn-sm flex-grow\"\n    [disabled]=\"filterForm.invalid\"\n    (click)=\"applyFilter()\"\n    title=\"{{ 'Apply' | translate }}\"\n  >\n    {{ 'Apply' | translate }}\n  </button>\n</div>\n"
            }]
    }], function () { return [{ type: ɵngcc1.FilteringFormRendererContext }]; }, null); })();

class TenantListComponent {
    constructor(appState, alertService, modalService, translateService, tenantService, tenantUiService, location, passwordService, userService) {
        this.appState = appState;
        this.alertService = alertService;
        this.modalService = modalService;
        this.translateService = translateService;
        this.tenantService = tenantService;
        this.tenantUiService = tenantUiService;
        this.location = location;
        this.passwordService = passwordService;
        this.userService = userService;
        this.tenants$ = new BehaviorSubject(undefined);
        this.TOP_TENANT_NAME = 'management';
        this.title = null;
        this.loadMoreItemsLabel = gettext('Load more tenants');
        this.loadingItemsLabel = gettext('Loading tenants…');
        this.displayOptions = {
            bordered: false,
            striped: true,
            filter: true,
            gridHeader: true
        };
        this.columns = this.getColumns();
        this.pagination = this.getPagination();
        this.showSearch = true;
        this.actionControls = this.getActionControls();
        this.TenantStatus = TenantStatus;
    }
    ngOnInit() {
        return __awaiter(this, void 0, void 0, function* () {
            this.currentTenant = this.appState.currentTenant.value;
            this.isManagementTenant = yield this.tenantUiService.isManagementTenant();
            this.loadTenants();
        });
    }
    loadTenants() {
        this.tenants$.next(undefined);
        from(this.tenantService.list({ pageSize: 2000, withTotalPages: true, withApps: false }))
            .pipe(expand(resultList => resultList.paging.nextPage !== null && resultList.paging.next()), takeWhile(resultList => resultList.paging.nextPage !== null, true), reduce((tenants, resultList) => [
            ...tenants,
            ...resultList.data
        ], []), shareReplay(1))
            .subscribe(tenants => this.tenants$.next(tenants));
    }
    getColumns() {
        return [
            {
                name: 'company',
                header: gettext('Tenant'),
                path: 'company',
                filterable: true,
                sortable: true,
                sortOrder: 'asc'
            },
            {
                name: 'id',
                header: gettext('ID'),
                path: 'id',
                filterable: true,
                sortable: true
            },
            {
                name: 'domain',
                header: gettext('Domain'),
                path: 'domain',
                filterable: true,
                sortable: true
            },
            {
                name: 'parent',
                header: gettext('Parent tenant'),
                path: 'parent',
                filterable: true,
                sortable: true
            },
            {
                name: 'contactName',
                header: gettext('Contact name'),
                path: 'contactName',
                filterable: true,
                sortable: true
            },
            {
                name: 'creationTime',
                header: gettext('Created'),
                path: 'creationTime',
                filterable: true,
                filteringFormRendererComponent: CreationTimeFilteringFormRendererComponent,
                sortable: true
            },
            {
                name: 'externalReference',
                header: gettext('External reference'),
                path: 'customProperties.externalReference',
                filterable: true,
                sortable: true
            },
            {
                name: 'status',
                header: gettext('Status'),
                path: 'status',
                filterable: true,
                filteringFormRendererComponent: StatusFilteringFormRendererComponent,
                sortable: true
            }
        ];
    }
    getPagination() {
        return {
            pageSize: 10,
            currentPage: 1
        };
    }
    getActionControls() {
        return [
            {
                type: "EDIT" /* Edit */,
                text: gettext('Edit`tenant`'),
                callback: tenant => this.goToDetails(tenant)
            },
            {
                type: 'activateTenantAction',
                icon: 'power-off',
                text: gettext('Activate`tenant`'),
                callback: (tenant) => this.activateTenant(tenant),
                showIf: (tenant) => this.isSuspended(tenant)
            },
            {
                type: 'suspendTenantAction',
                icon: 'power-off',
                text: gettext('Suspend`tenant`'),
                callback: (tenant) => this.suspendTenant(tenant),
                showIf: (tenant) => this.isActive(tenant)
            },
            {
                type: "DELETE" /* Delete */,
                text: gettext('Delete`tenant`'),
                callback: tenant => this.delete(tenant),
                showIf: () => this.isManagementTenant
            }
        ];
    }
    createTenant() {
        this.location.go('/tenants/new');
    }
    goToDetails(tenant) {
        this.location.go(`/tenants/${tenant.id}`);
    }
    activateTenant(tenant) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                const { data: savedTenant } = yield this.tenantService.update({
                    id: tenant.id,
                    status: TenantStatus.ACTIVE
                });
                Object.assign(tenant, savedTenant);
                this.alertService.success(gettext('Tenant activated.'));
            }
            catch (ex) {
                if (ex) {
                    this.alertService.addServerFailure(ex);
                }
            }
        });
    }
    suspendTenant(tenant) {
        return __awaiter(this, void 0, void 0, function* () {
            const title = gettext('Suspend tenant');
            const confirmationText = gettext('You are about to suspend tenant "{{ company }}" (ID "{{ id }}").');
            const proceed = gettext('Do you want to proceed?');
            const body = [
                this.translateService.instant(confirmationText, {
                    company: tenant.company,
                    id: tenant.id
                }),
                this.translateService.instant(proceed)
            ].join(' ');
            const labels = {
                ok: gettext('Suspend`tenant`')
            };
            try {
                yield this.modalService.confirm(title, body, Status.DANGER, labels);
                const confirmed = yield this.passwordService.confirmPassword().toPromise();
                if (confirmed === true) {
                    const { data: savedTenant } = yield this.tenantService.update({
                        id: tenant.id,
                        status: TenantStatus.SUSPENDED
                    });
                    Object.assign(tenant, savedTenant);
                    this.alertService.success(gettext('Tenant suspended.'));
                }
            }
            catch (ex) {
                if (ex) {
                    this.alertService.addServerFailure(ex);
                }
            }
        });
    }
    delete(tenant) {
        return __awaiter(this, void 0, void 0, function* () {
            const title = gettext('Delete tenant');
            const confirmationText = gettext('You are about to delete tenant "{{ company }}" (ID "{{ id }}").');
            const hint = gettext('This operation is irreversible.');
            const proceed = gettext('Do you want to proceed?');
            const body = [
                this.translateService.instant(confirmationText, {
                    company: tenant.company,
                    id: tenant.id
                }),
                this.translateService.instant(hint),
                this.translateService.instant(proceed)
            ].join(' ');
            const labels = {
                ok: gettext('Delete`tenant`')
            };
            try {
                yield this.modalService.confirm(title, body, Status.DANGER, labels);
                const confirmed = yield this.passwordService.confirmPassword().toPromise();
                if (confirmed === true) {
                    yield this.tenantService.delete(tenant);
                    const tenantsWithoutRemovedOne = this.tenants$.value.filter(t => t !== tenant);
                    this.tenants$.next(tenantsWithoutRemovedOne);
                    this.alertService.success(gettext('Tenant is being deleted in the background. This might take a while…'));
                }
            }
            catch (ex) {
                if (ex) {
                    this.alertService.addServerFailure(ex);
                }
            }
        });
    }
    isActive(tenant) {
        return tenant.status === TenantStatus.ACTIVE;
    }
    isSuspended(tenant) {
        return tenant.status === TenantStatus.SUSPENDED;
    }
    downloadNewsletterEmails() {
        return __awaiter(this, void 0, void 0, function* () {
            const { res, data } = yield this.userService.getNewsletterEmails();
            const contentType = res.headers.get('content-type');
            const contentDisposition = res.headers.get('content-disposition');
            const filename = /filename="(.*)"/.exec(contentDisposition)[1];
            const blob = new Blob([data], { type: contentType });
            saveAs(blob, filename);
        });
    }
}
TenantListComponent.ɵfac = function TenantListComponent_Factory(t) { return new (t || TenantListComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.AppStateService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.AlertService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ModalService), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.TranslateService), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.TenantService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.TenantUiService), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.Location), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.PasswordService), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.UserService)); };
TenantListComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: TenantListComponent, selectors: [["c8y-tenant-list"]], decls: 29, vars: 33, consts: [[3, "placement", 4, "ngIf"], [3, "placement"], [1, "btn", "btn-link", 3, "title", "click"], ["c8yIcon", "plus-circle"], [1, "content-fullpage", "d-flex", "d-col", "shadow1"], [1, "d-contents", 3, "title", "loadMoreItemsLabel", "loadingItemsLabel", "displayOptions", "columns", "rows", "pagination", "showSearch", "actionControls", "onReload"], [1, "c8y-empty-state", "j-c-center"], [4, "ngIf"], ["name", "company"], [4, "c8yCellRendererDef"], ["name", "parent"], ["name", "creationTime"], ["name", "status"], ["c8yIcon", "download"], [1, "text-center"], ["c8yIcon", "gears"], ["translate", ""], [1, "btn", "btn-primary", 3, "title", "click"], ["c8y-guide-docs", ""], ["c8y-guide-href", "users-guide/enterprise-edition/#managing-tenants"], ["c8yIcon", "search", 1, "c8y-icon-duocolor"], [3, "title"], [3, "routerLink"], [3, "title", 4, "ngIf"], ["c8yIcon", "check-circle", 1, "text-success"], ["c8yIcon", "ban", 1, "text-danger"]], template: function TenantListComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "c8y-title");
        ɵngcc0.ɵɵtext(1);
        ɵngcc0.ɵɵpipe(2, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(3, TenantListComponent_c8y_action_bar_item_3_Template, 6, 7, "c8y-action-bar-item", 0);
        ɵngcc0.ɵɵpipe(4, "async");
        ɵngcc0.ɵɵelementStart(5, "c8y-action-bar-item", 1);
        ɵngcc0.ɵɵelementStart(6, "button", 2);
        ɵngcc0.ɵɵlistener("click", function TenantListComponent_Template_button_click_6_listener() { return ctx.createTenant(); });
        ɵngcc0.ɵɵpipe(7, "translate");
        ɵngcc0.ɵɵelement(8, "i", 3);
        ɵngcc0.ɵɵtext(9);
        ɵngcc0.ɵɵpipe(10, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(11, "div", 4);
        ɵngcc0.ɵɵelementStart(12, "c8y-data-grid", 5);
        ɵngcc0.ɵɵlistener("onReload", function TenantListComponent_Template_c8y_data_grid_onReload_12_listener() { return ctx.loadTenants(); });
        ɵngcc0.ɵɵpipe(13, "async");
        ɵngcc0.ɵɵelementStart(14, "div", 6);
        ɵngcc0.ɵɵtemplate(15, TenantListComponent_ng_container_15_Template, 2, 0, "ng-container", 7);
        ɵngcc0.ɵɵpipe(16, "async");
        ɵngcc0.ɵɵtemplate(17, TenantListComponent_ng_container_17_Template, 18, 6, "ng-container", 7);
        ɵngcc0.ɵɵpipe(18, "async");
        ɵngcc0.ɵɵtemplate(19, TenantListComponent_ng_container_19_Template, 7, 0, "ng-container", 7);
        ɵngcc0.ɵɵpipe(20, "async");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(21, "c8y-column", 8);
        ɵngcc0.ɵɵtemplate(22, TenantListComponent_ng_container_22_Template, 4, 5, "ng-container", 9);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(23, "c8y-column", 10);
        ɵngcc0.ɵɵtemplate(24, TenantListComponent_ng_container_24_Template, 3, 2, "ng-container", 9);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(25, "c8y-column", 11);
        ɵngcc0.ɵɵtemplate(26, TenantListComponent_ng_container_26_Template, 5, 6, "ng-container", 9);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(27, "c8y-column", 12);
        ɵngcc0.ɵɵtemplate(28, TenantListComponent_ng_container_28_Template, 3, 2, "ng-container", 9);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        let tmp_15_0;
        let tmp_16_0;
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 17, "Tenants"), "\n");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", !!ɵngcc0.ɵɵpipeBind1(4, 19, ctx.appState.state$).newsletter);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("placement", "right");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(7, 21, "Create tenant"));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(10, 23, "Create tenant"), " ");
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("title", ctx.title)("loadMoreItemsLabel", ctx.loadMoreItemsLabel)("loadingItemsLabel", ctx.loadingItemsLabel)("displayOptions", ctx.displayOptions)("columns", ctx.columns)("rows", ɵngcc0.ɵɵpipeBind1(13, 25, ctx.tenants$))("pagination", ctx.pagination)("showSearch", ctx.showSearch)("actionControls", ctx.actionControls);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", !ɵngcc0.ɵɵpipeBind1(16, 27, ctx.tenants$));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ((tmp_15_0 = ɵngcc0.ɵɵpipeBind1(18, 29, ctx.tenants$)) == null ? null : tmp_15_0.length) === 0);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ((tmp_16_0 = ɵngcc0.ɵɵpipeBind1(20, 31, ctx.tenants$)) == null ? null : tmp_16_0.length) > 0);
    } }, directives: [ɵngcc1.TitleComponent, ɵngcc6.NgIf, ɵngcc1.ActionBarItemComponent, ɵngcc1.IconDirective, ɵngcc1.DataGridComponent, ɵngcc1.ColumnDirective, ɵngcc1.CellRendererDefDirective, ɵngcc1.LoadingComponent, ɵngcc1.C8yTranslateDirective, ɵngcc1.GuideDocsComponent, ɵngcc1.GuideHrefDirective, ɵngcc7.RouterLinkWithHref], pipes: [ɵngcc1.C8yTranslatePipe, ɵngcc6.AsyncPipe, ɵngcc1.DatePipe], encapsulation: 2 });
TenantListComponent.ctorParameters = () => [
    { type: AppStateService },
    { type: AlertService },
    { type: ModalService },
    { type: TranslateService },
    { type: TenantService },
    { type: TenantUiService },
    { type: Location },
    { type: PasswordService },
    { type: UserService }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TenantListComponent, [{
        type: Component,
        args: [{
                selector: 'c8y-tenant-list',
                template: "<c8y-title>\n  {{ 'Tenants' | translate }}\n</c8y-title>\n\n<c8y-action-bar-item *ngIf=\"!!(appState.state$ | async).newsletter\" [placement]=\"'right'\">\n  <button\n    class=\"btn btn-link\"\n    title=\"{{ 'Downloads the list of emails of users subscribed for newsletter on the current tenant and its subtenants.' | translate }}\"\n    (click)=\"downloadNewsletterEmails()\"\n  >\n    <i c8yIcon=\"download\"></i>\n    {{ 'Email addresses' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<c8y-action-bar-item [placement]=\"'right'\">\n  <button class=\"btn btn-link\" title=\"{{ 'Create tenant' | translate }}\" (click)=\"createTenant()\">\n    <i c8yIcon=\"plus-circle\"></i>\n    {{ 'Create tenant' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<div class=\"content-fullpage d-flex d-col shadow1\">\n  <c8y-data-grid\n    [title]=\"title\"\n    [loadMoreItemsLabel]=\"loadMoreItemsLabel\"\n    [loadingItemsLabel]=\"loadingItemsLabel\"\n    [displayOptions]=\"displayOptions\"\n    [columns]=\"columns\"\n    [rows]=\"tenants$ | async\"\n    [pagination]=\"pagination\"\n    [showSearch]=\"showSearch\"\n    [actionControls]=\"actionControls\"\n    (onReload)=\"loadTenants()\"\n    class=\"d-contents\"\n  >\n    <div class=\"c8y-empty-state j-c-center\">\n      <ng-container *ngIf=\"!(tenants$ | async)\">\n        <c8y-loading></c8y-loading>\n      </ng-container>\n\n      <ng-container *ngIf=\"(tenants$ | async)?.length === 0\">\n        <div class=\"text-center\">\n          <h1 c8yIcon=\"gears\"></h1>\n          <h3 translate>There are no tenants defined.</h3>\n          <p translate>Create the first tenant.</p>\n          <div>\n            <button\n              class=\"btn btn-primary\"\n              title=\"{{ 'Create tenant' | translate }}\"\n              (click)=\"createTenant()\"\n            >\n              {{ 'Create tenant' | translate }}\n            </button>\n          </div>\n          <p c8y-guide-docs>\n            <small translate ngNonBindable>\n              Find out more in the\n              <a c8y-guide-href=\"users-guide/enterprise-edition/#managing-tenants\">\n                User guide`KEEP_ORIGINAL` </a\n              >.\n            </small>\n          </p>\n        </div>\n      </ng-container>\n\n      <ng-container *ngIf=\"(tenants$ | async)?.length > 0\">\n        <div class=\"text-center\">\n          <h1 class=\"c8y-icon-duocolor\" c8yIcon=\"search\"></h1>\n          <h3 translate>No tenants to display.</h3>\n          <p translate>Refine your search terms or check your spelling.</p>\n        </div>\n      </ng-container>\n    </div>\n\n    <c8y-column name=\"company\">\n      <ng-container *c8yCellRendererDef=\"let context\">\n        <span title=\"{{ context.value }}\">\n          <a [routerLink]=\"['/tenants', context.item.id]\">{{ context.value }}</a>\n        </span>\n      </ng-container>\n    </c8y-column>\n\n    <c8y-column name=\"parent\">\n      <ng-container *c8yCellRendererDef=\"let context\">\n        <span title=\"{{ context.value || currentTenant.name }}\">\n          {{ context.value || currentTenant.name }}\n        </span>\n      </ng-container>\n    </c8y-column>\n\n    <c8y-column name=\"creationTime\">\n      <ng-container *c8yCellRendererDef=\"let context\">\n        <span title=\"{{ context.value | c8yDate }}\">\n          {{ context.value | c8yDate }}\n        </span>\n      </ng-container>\n    </c8y-column>\n\n    <c8y-column name=\"status\">\n      <ng-container *c8yCellRendererDef=\"let context\">\n        <span\n          *ngIf=\"context.item.status === TenantStatus.ACTIVE\"\n          title=\"{{ 'Active`tenant`' | translate }}\"\n        >\n          <i c8yIcon=\"check-circle\" class=\"text-success\"></i>\n        </span>\n        <span\n          *ngIf=\"context.item.status === TenantStatus.SUSPENDED\"\n          title=\"{{ 'Suspended`tenant`' | translate }}\"\n        >\n          <i c8yIcon=\"ban\" class=\"text-danger\"></i>\n        </span>\n      </ng-container>\n    </c8y-column>\n  </c8y-data-grid>\n</div>\n"
            }]
    }], function () { return [{ type: ɵngcc1.AppStateService }, { type: ɵngcc1.AlertService }, { type: ɵngcc1.ModalService }, { type: ɵngcc4.TranslateService }, { type: ɵngcc5.TenantService }, { type: ɵngcc1.TenantUiService }, { type: ɵngcc6.Location }, { type: ɵngcc1.PasswordService }, { type: ɵngcc5.UserService }]; }, null); })();

const ɵ0 = [
    {
        path: 'tenants',
        component: TenantListComponent,
        canActivate: [TenantListGuard]
    }
];
class TenantsModule {
    static config(config = {}) {
        return {
            ngModule: TenantsModule,
            providers: [
                {
                    provide: TENANTS_MODULE_CONFIG,
                    useValue: config
                }
            ]
        };
    }
}
TenantsModule.ɵfac = function TenantsModule_Factory(t) { return new (t || TenantsModule)(); };
TenantsModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: TenantsModule });
TenantsModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [
        TenantListGuard,
        {
            provide: HOOK_NAVIGATOR_NODES,
            useClass: TenantsNavigationFactory,
            multi: true
        },
        {
            provide: HOOK_ROUTE,
            useValue: ɵ0,
            multi: true
        }
    ], imports: [[
            RouterModule,
            BsDatepickerModule,
            CoreModule
        ]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TenantsModule, [{
        type: NgModule,
        args: [{
                imports: [
                    RouterModule,
                    BsDatepickerModule,
                    CoreModule
                ],
                exports: [],
                declarations: [
                    TenantListComponent,
                    CreationTimeFilteringFormRendererComponent,
                    StatusFilteringFormRendererComponent
                ],
                entryComponents: [
                    TenantListComponent,
                    CreationTimeFilteringFormRendererComponent,
                    StatusFilteringFormRendererComponent
                ],
                providers: [
                    TenantListGuard,
                    {
                        provide: HOOK_NAVIGATOR_NODES,
                        useClass: TenantsNavigationFactory,
                        multi: true
                    },
                    {
                        provide: HOOK_ROUTE,
                        useValue: ɵ0,
                        multi: true
                    }
                ]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TenantsModule, { declarations: function () { return [TenantListComponent, CreationTimeFilteringFormRendererComponent, StatusFilteringFormRendererComponent]; }, imports: function () { return [RouterModule,
        BsDatepickerModule,
        CoreModule]; } }); })();

/**
 * Generated bundle index. Do not edit.
 */

export { CreationTimeFilteringFormRendererComponent, StatusFilteringFormRendererComponent, TENANTS_MODULE_CONFIG, TenantListComponent, TenantListGuard, TenantsModule, TenantsNavigationFactory, ɵ0 };

//# sourceMappingURL=c8y-ngx-components-tenants.js.map