{"version":3,"file":"c8y-ngx-components-operations-bulk-operations-service.js","sources":["../../operations/bulk-operations-service/bulk-operations.service.ts","../../operations/bulk-operations-service/bulk-operations-service.module.ts","../../operations/bulk-operations-service/bulk-operation.model.ts","../../operations/bulk-operations-service/c8y-ngx-components-operations-bulk-operations-service.ts"],"sourcesContent":["import { Location } from '@angular/common';\nimport { Inject, Injectable, InjectionToken, Optional } from '@angular/core';\nimport { flatten, has, isUndefined } from 'lodash-es';\nimport { Subject } from 'rxjs';\n\nimport {\n  IdReference,\n  IManagedObject,\n  InventoryService,\n  IOperation,\n  IOperationBulk,\n  IResult,\n  OperationBulkService,\n  OperationService\n} from '@c8y/client';\n\nimport { OperationDetails } from './operation-details.model';\nimport { OperationType } from './operation-type.model';\nimport { BulkOperationType } from './bulk-operation.model';\n\nexport const baseUrl = 'devicecontrol/bulk/creation/';\nexport const HOOK_LIST_BULK_TYPE = new InjectionToken<OperationType | OperationType[]>(\n  'LIST_BULK_TYPE'\n);\n\n@Injectable()\nexport class BulkOperationsService {\n  readonly DD_LOW_COUNT: number = 10;\n  firmwareId: Subject<IdReference> = new Subject<IdReference>();\n\n  private bulkTypes: OperationType[];\n\n  constructor(\n    private operationBulkService: OperationBulkService,\n    private operationService: OperationService,\n    private inventoryService: InventoryService,\n    private location: Location,\n\n    @Optional() @Inject(HOOK_LIST_BULK_TYPE) bulkTypes: Array<OperationType | OperationType[]>\n  ) {\n    this.bulkTypes = flatten(bulkTypes);\n\n    this.bulkTypes = this.bulkTypes.map(type => {\n      if (isUndefined(type.selected)) {\n        type.selected = false;\n      }\n      return type;\n    });\n  }\n\n  getBulkOperations(customFilter = {}) {\n    const filter = {\n      withTotalPages: true,\n      withDeleted: true,\n      pageSize: 50,\n      ...customFilter\n    };\n\n    return this.operationBulkService.list(filter);\n  }\n\n  getBulkOperationById(bulkOperationId: string | number) {\n    return this.operationBulkService.detail(bulkOperationId);\n  }\n\n  createBulkOperation(bulkOperation: Partial<IOperationBulk>) {\n    return this.operationBulkService.create(bulkOperation);\n  }\n\n  deleteBulkOperation(bulkOperationId) {\n    return this.operationBulkService.delete(bulkOperationId);\n  }\n\n  updateBulkOperation(bulkOperation: Partial<IOperationBulk>) {\n    return this.operationBulkService.update(bulkOperation);\n  }\n\n  getOperation(id: string): Promise<IResult<IOperation>> {\n    return this.operationService.detail(id);\n  }\n\n  returnToBulkOperationOverview() {\n    this.location.back();\n  }\n\n  setBulkTypes(list: OperationType[]) {\n    this.bulkTypes = list;\n  }\n\n  getBulkTypes(): OperationType[] {\n    return this.bulkTypes;\n  }\n\n  setFirmwareId(id: IdReference) {\n    this.firmwareId.next(id);\n  }\n\n  createGroup(deviceQueryDataString: string) {\n    const dynamicGroup: Partial<IManagedObject> = {\n      name: 'Bulk operations group',\n      type: 'c8y_DynamicGroup',\n      c8y_IsDynamicGroup: { invisible: {} },\n      c8y_DeviceQueryString: deviceQueryDataString\n    };\n\n    return this.inventoryService.create(dynamicGroup);\n  }\n\n  async scheduleBulkOperation(deviceQueryString: string, details: OperationDetails) {\n    const dynamicGroup = await this.createGroup(deviceQueryString);\n\n    const bulkOperation: IOperationBulk = {\n      groupId: dynamicGroup.data.id,\n      operationPrototype: details.prototype,\n      creationRamp: details.schedule.delayInSeconds,\n      startDate: details.schedule.scheduledDate.toISOString(),\n      note: details.note\n    };\n\n    await this.createBulkOperation(bulkOperation);\n  }\n\n  getSingleOperationsByStatus(status, bulkOperationId) {\n    const filter = {\n      withTotalPages: true,\n      bulkOperationId,\n      status: (status && status.toUpperCase()) || ''\n    };\n\n    return this.operationService.list(filter);\n  }\n\n  createSingleOperation(operation: IOperation) {\n    return this.operationService.create(operation);\n  }\n\n  updateSingleOperation(partialUpdateObject: Partial<IOperation>) {\n    return this.operationService.update(partialUpdateObject);\n  }\n\n  getManagedObject(deviceId: IdReference) {\n    return this.inventoryService.detail(deviceId);\n  }\n\n  retrieveBulkOperationType(operation: IOperation): BulkOperationType {\n    let type: BulkOperationType;\n\n    this.bulkTypes.some(t => {\n      if (t.fragments.some(fragment => has(operation, fragment))) {\n        type = t.type;\n        return true;\n      }\n    });\n\n    return type;\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { BulkOperationsService } from './bulk-operations.service';\n\n/**\n * This module provides a shared bulk operations service.\n */\n@NgModule({\n  imports: [],\n  providers: [BulkOperationsService]\n})\nexport class BulkOperationsServiceModule {}\n","export enum BulkOperationType {\n  SOFTWARE = 'software',\n  FIRMWARE = 'firmware',\n  CONFIGURATION = 'configuration',\n  DEVICE_PROFILE = 'device-profile'\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}