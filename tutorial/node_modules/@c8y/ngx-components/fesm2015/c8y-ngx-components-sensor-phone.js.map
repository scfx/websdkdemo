{"version":3,"file":"c8y-ngx-components-sensor-phone.js","sources":["../../sensor-phone/sensor-phone.service.ts","../../sensor-phone/sensor-phone-modal.component.ts","../../sensor-phone/connect-smartphone.factory.ts","../../sensor-phone/sensor-phone.module.ts","../../sensor-phone/real-time-mock.service.ts","../../sensor-phone/c8y-ngx-components-sensor-phone.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { DeviceRegistrationService, InventoryService } from '@c8y/client';\nimport { AppStateService, gettext } from '@c8y/ngx-components';\nimport { head } from 'lodash-es';\n\n@Injectable()\nexport class SensorPhoneService {\n  readonly HTTP_STATUS_CODE = {\n    OK: 200,\n    CREATED: 201\n  };\n  private domainName: string;\n  private tenantId: string;\n  private PHONE_GROUP_FRAGMENT = 'c8y_IsSensorPhoneGroup';\n  private readonly PHONE_GROUP_NAME = gettext('Phones');\n\n  constructor(\n    private ui: AppStateService,\n    private inventoryService: InventoryService,\n    private deviceRegistrationService: DeviceRegistrationService\n  ) {\n    this.ui.currentTenant.subscribe(data => {\n      if (data) {\n        this.domainName = data.domainName;\n        this.tenantId = data.name;\n      }\n    });\n  }\n\n  getHost() {\n    return this.domainName.substring(this.domainName.indexOf('.') + 1);\n  }\n\n  getTenantName() {\n    return this.domainName.split('.')[0];\n  }\n\n  getTenantId() {\n    return this.tenantId;\n  }\n\n  async checkPhoneGroupExists() {\n    const { data, res } = await this.inventoryService.list({\n      fragmentType: this.PHONE_GROUP_FRAGMENT\n    });\n    if (data && res && res.status === this.HTTP_STATUS_CODE.OK) {\n      return head(data);\n    }\n    return null;\n  }\n\n  async addPhoneGroup() {\n    const group = await this.checkPhoneGroupExists();\n    if (group) {\n      return group;\n    }\n    return await this.createPhoneGroup();\n  }\n\n  async createPhoneGroup() {\n    const newPhoneGroup = {\n      c8y_Global: {},\n      c8y_IsDeviceGroup: {},\n      type: 'c8y_DeviceGroup',\n      name: this.PHONE_GROUP_NAME,\n      [this.PHONE_GROUP_FRAGMENT]: {}\n    };\n\n    const { data, res } = await this.inventoryService.create(newPhoneGroup);\n    if (data && res && res.status === this.HTTP_STATUS_CODE.CREATED) {\n      return data;\n    }\n    return null;\n  }\n\n  generateRegistrationData(deviceId) {\n    const res = 'c8y://' + this.getTenantName() + '.' + this.getHost() + '/?deviceId=' + deviceId;\n    return res;\n  }\n\n  async createPhoneRegistrationRequest(deviceId) {\n    const group = await this.addPhoneGroup();\n    const device = { id: deviceId, groupId: group.id };\n\n    const { res } = await this.deviceRegistrationService.create(device);\n    if (res.status !== this.HTTP_STATUS_CODE.CREATED) {\n      throw res;\n    }\n  }\n\n  async acceptPhoneReqistrationRequest(deviceId) {\n    const { res } = await this.deviceRegistrationService.accept(deviceId);\n    if (res.status !== this.HTTP_STATUS_CODE.OK) {\n      throw res;\n    }\n  }\n}\n","import { Component, ViewChild, AfterViewInit, ElementRef, Renderer2 } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { C8yStepper, gettext, retryWithDelay } from '@c8y/ngx-components';\nimport { SensorPhoneService } from './sensor-phone.service';\nimport { map, tap, throttleTime } from 'rxjs/operators';\nimport { DeviceRegistrationService, DeviceRegistrationStatus, InventoryService } from '@c8y/client';\nimport { Router } from '@angular/router';\nimport { defer } from 'rxjs';\n\n@Component({\n  selector: 'c8y-sensor-phone',\n  templateUrl: 'sensor-phone-modal.component.html'\n})\nexport class SensorPhoneModalComponent implements AfterViewInit {\n  @ViewChild(C8yStepper, { static: false })\n  stepper: C8yStepper;\n  @ViewChild(C8yStepper, { read: ElementRef, static: false })\n  container: ElementRef;\n  pendingDeviceBootstrap: boolean = true;\n  success;\n  errorMessage = gettext('Failed to register a smartphone.');\n  registrationData = null;\n  tenantId;\n  instance;\n  deviceId: string;\n  dashboardLink: string = '';\n  constructor(\n    private bsModalRef: BsModalRef,\n    private sensorPhoneService: SensorPhoneService,\n    private renderer: Renderer2,\n    private deviceRegistrationService: DeviceRegistrationService,\n    private router: Router,\n    private inventoryService: InventoryService\n  ) {\n  }\n\n  ngAfterViewInit() {\n    this.stepper.selectionChange\n      .pipe(throttleTime(100))\n      .subscribe((stepper: Partial<C8yStepper>) => this.onStepperSelectionChange(stepper));\n    this.tenantId = this.sensorPhoneService.getTenantName();\n    this.instance = this.sensorPhoneService.getHost();\n  }\n\n  onStepperSelectionChange(stepper: Partial<C8yStepper>) {\n    const PHONE_REGISTRATION_STEP_INDEX = 2;\n    if (stepper.selectedIndex === PHONE_REGISTRATION_STEP_INDEX) {\n      this.registerPhone();\n    }\n  }\n\n  async registerPhone() {\n    try {\n      this.deviceId = this.generateDeviceId();\n      this.registrationData = this.sensorPhoneService.generateRegistrationData(this.deviceId);\n      await this.sensorPhoneService.createPhoneRegistrationRequest(this.deviceId);\n      await this.waitForPhoneToConnect();\n      await this.sensorPhoneService.acceptPhoneReqistrationRequest(this.deviceId);\n      const { deviceMo, dashboardMo } = await this.waitForDeviceAndDashboardMos();\n      this.onDeviceAndDashboardMosCreated(deviceMo, dashboardMo);\n    } catch (error) {\n      this.onFailure();\n    }\n  }\n\n  waitForPhoneToConnect() {\n    return defer(() => this.deviceRegistrationService.detail(this.deviceId))\n      .pipe(\n        map(res => res.data),\n        tap(phoneRegistration => {\n          if (phoneRegistration.status === DeviceRegistrationStatus.WAITING_FOR_CONNECTION) {\n            throw new Error('Phone is not connected yet.');\n          } else {\n            this.pendingDeviceBootstrap = false;\n          }\n        }),\n        retryWithDelay(6000, 4)\n      ).toPromise();\n  }\n\n  waitForDeviceAndDashboardMos() {\n    return defer(() => this.inventoryService.list({ owner: `device_${this.deviceId}` }))\n      .pipe(\n        map(res => res.data),\n        map(mos => {\n          const deviceMo = mos.find(mo => !!mo.c8y_IsDevice);\n          const dashboardMo = mos.find(mo => !!mo.c8y_Dashboard);\n          if (!(deviceMo && dashboardMo)) {\n            throw new Error('Both device and dashboard MO must be present.');\n          } else {\n            return { deviceMo, dashboardMo };\n          }\n        }),\n        retryWithDelay(6000, 4)\n      ).toPromise();\n  }\n\n  onDeviceAndDashboardMosCreated(deviceMo, dashboardMo) {\n    this.dashboardLink = `/device/${deviceMo.id}/dashboard/${dashboardMo.id}`;\n    this.stepper.next();\n    if (this.container) {\n      this.renderer.setStyle(this.container.nativeElement, 'display', 'none');\n      this.success = true;\n    }\n  }\n\n  generateDeviceId() {\n    return 'phone' + Math.floor(Math.random() * 100000);\n  }\n\n  openDashboard() {\n    if (this.dashboardLink) {\n      this.router.navigate([this.dashboardLink]);\n      this.cancel();\n    }\n  }\n\n  cancel() {\n    this.bsModalRef.hide();\n    this.deleteDeviceRequest();\n  }\n\n  retry() {\n    this.success = undefined;\n    if (this.container) {\n      this.renderer.setStyle(this.container.nativeElement, 'display', 'block');\n    }\n    this.deleteDeviceRequest();\n    this.stepper.selectedIndex = 2;\n  }\n\n  onFailure() {\n    this.success = false;\n    this.stepper.next();\n    if (this.container) {\n      this.renderer.setStyle(this.container.nativeElement, 'display', 'none');\n    }\n  }\n\n  async deleteDeviceRequest() {\n    if (this.deviceId) {\n      try {\n        await this.deviceRegistrationService.delete(this.deviceId);\n      } catch (error) {\n        //\n      }\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { DocLink, ExtensionFactory, gettext, OptionsService } from '@c8y/ngx-components';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { of } from 'rxjs';\nimport { SensorPhoneModalComponent } from './sensor-phone-modal.component';\n\n@Injectable()\nexport class ConnectSmartphoneFactory implements ExtensionFactory<DocLink> {\n  constructor(\n    private optionsService: OptionsService,\n    private bsModalService: BsModalService\n  ) {}\n  get() {\n    if (this.optionsService.get('sensorPhone', false)) {\n      return of([\n        {\n          icon: 'c8y-icon c8y-icon-mobile-add',\n          type: 'quicklink',\n          label: gettext('Connect smartphone'),\n          url: undefined,\n          click: () => {\n            this.bsModalService.show(SensorPhoneModalComponent, {\n              backdrop: 'static',\n              class: 'lg'\n            });\n          }\n        } as DocLink\n      ]);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CoreModule, HOOK_DOCS } from '@c8y/ngx-components';\nimport { ConnectSmartphoneFactory } from './connect-smartphone.factory';\nimport { SensorPhoneModalComponent } from './sensor-phone-modal.component';\nimport { QRCodeModule } from 'angularx-qrcode';\nimport { SensorPhoneService } from './sensor-phone.service';\n\n@NgModule({\n  imports: [CoreModule, QRCodeModule],\n  declarations: [SensorPhoneModalComponent],\n  entryComponents: [SensorPhoneModalComponent],\n  providers: [\n    {\n      provide: HOOK_DOCS,\n      useClass: ConnectSmartphoneFactory,\n      multi: true\n    },\n    SensorPhoneService\n  ]\n})\nexport class SensorPhoneModule {}\n","export class RealTimeMock {\n  deviceId;\n  bootstrapCallback;\n  managedObjCallback;\n  subscribe(channel, callback) {\n    if (channel === '/bootstrap') {\n      this.bootstrapCallback = callback;\n    } else {\n      this.managedObjCallback = callback;\n    }\n  }\n  unsubscribe() {\n    /* empty */\n  }\n\n  triggerBootstrap(res) {\n    this.bootstrapCallback({ data: res });\n  }\n  triggerManagedObject(res) {\n    this.managedObjCallback({ data: res });\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}