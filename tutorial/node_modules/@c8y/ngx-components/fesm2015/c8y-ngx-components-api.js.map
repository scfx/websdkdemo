{"version":3,"file":"c8y-ngx-components-api.js","sources":["../../api/api.service.ts","../../api/data.module.ts","../../api/c8y-ngx-components-api.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { FetchClient, IFetchOptions } from '@c8y/client';\nimport { Subject, Observable } from 'rxjs';\nimport { ApiCall, ApiCallOptions } from './api.model';\nimport { filter } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  calls: Observable<ApiCall>;\n  private callsSubject = new Subject<ApiCall>();\n\n  constructor(private client: FetchClient) {\n    this.calls = this.callsSubject.asObservable();\n    this.hookIntoClientFetch();\n  }\n\n  hookResponse(hookFilter: (call: ApiCall) => boolean) {\n    return this.callsSubject.pipe(\n      filter(({ phase }) => phase === 'finish'),\n      filter(hookFilter)\n    );\n  }\n\n  hookRequest(hookFilter: (call: ApiCall) => boolean) {\n    return this.callsSubject.pipe(\n      filter(({ phase }) => phase === 'start'),\n      filter(hookFilter)\n    );\n  }\n\n  async onFinish(call: ApiCall) {\n    this.callsSubject.next({ phase: 'finish', ...call });\n  }\n\n  onStart(call: ApiCall) {\n    this.callsSubject.next({ phase: 'start', ...call });\n  }\n\n  async resolveData(call: ApiCall): Promise<any> {\n    const { response, method } = call;\n    if ('data' in response) {\n      return Promise.resolve({ data: response.data, method });\n    } else {\n      const cb = (data) => ({ data, method});\n      return (response as Response).clone().json().then(cb, cb);\n    }\n  }\n\n  private hookIntoClientFetch() {\n    const fetch = this.client.fetch.bind(this.client);\n    this.client.fetch = async (url, options: ApiCallOptions & IFetchOptions = { method: 'GET'}) => {\n      const { method } = options;\n      this.onStart({ options, method, url });\n      let fetchPromise = fetch(url, options);\n      if (typeof options.responseInterceptor === 'function') {\n        fetchPromise = fetchPromise.then(options.responseInterceptor);\n      }\n      fetchPromise.then(\n        (response: Response) => this.onFinish({ response, url, options, method }),\n        (response: Response) => this.onFinish({ response, url, options, method })\n      );\n      return fetchPromise;\n    };\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BasicAuth, FetchClient, Realtime, CookieAuth } from '@c8y/client';\nimport { ApiService } from './api.service';\nimport * as services from './services';\n\nfunction toProvider(provide) {\n  let deps: any[] = [FetchClient, Realtime];\n  if (provide === FetchClient)  {\n    deps = [CookieAuth];\n  }\n  if (provide === BasicAuth || provide === CookieAuth)  {\n    deps = [];\n  }\n  if (provide === Realtime) {\n    deps = [FetchClient];\n  }\n  return {provide, useClass: provide, deps};\n}\n\nconst providers: any[] = (Object.keys(services).map((k) => toProvider(services[k])) as any[])\n  .concat([\n    { provide: ApiService, useClass: ApiService, deps: [FetchClient] }\n  ]);\n// @dynamic\n@NgModule({\n  providers\n})\nexport class DataModule {\n  static providers() {\n    return providers;\n  }\n  static forRoot() {\n    return {\n      ngModule: DataModule,\n      providers\n    };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}