import { OnInit } from '@angular/core';
import { BehaviorSubject, Observable } from 'rxjs';
import { ApplicationRemotePlugins, IApplication, IApplicationBinary } from '@c8y/client';
import { ActivatedRoute } from '@angular/router';
import { EcosystemService } from '../../ecosystem.service';
import { ApplicationPlugin } from '../../ecosystem.model';
import { BsModalService } from 'ngx-bootstrap/modal';
import { AlertService, ModalService, PluginsService } from '@c8y/ngx-components';
import { TranslateService } from '@ngx-translate/core';
import * as ɵngcc0 from '@angular/core';
export declare class ApplicationPluginsComponent implements OnInit {
    private activatedRoute;
    private ecosystemService;
    private bsModalService;
    private modal;
    private translateService;
    private pluginsService;
    private alertService;
    exportedPlugins$: BehaviorSubject<ApplicationPlugin[]>;
    remotePlugins$: BehaviorSubject<ApplicationRemotePlugins>;
    allAvailablePlugins$: BehaviorSubject<ApplicationPlugin[]>;
    installedPlugins$: Observable<ApplicationPlugin[]>;
    app: IApplication;
    isLoading: boolean;
    pluginsToDelete: string[];
    archives: IApplicationBinary[];
    constructor(activatedRoute: ActivatedRoute, ecosystemService: EcosystemService, bsModalService: BsModalService, modal: ModalService, translateService: TranslateService, pluginsService: PluginsService, alertService: AlertService);
    ngOnInit(): Promise<void>;
    installPlugins(): Promise<void>;
    removePlugins(): Promise<void>;
    private getAllPlugins;
    private updateApplicationRemotes;
    private getRemotePluginsList;
    private extendPluginList;
    private createPluginId;
    private parsePluginId;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ApplicationPluginsComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ApplicationPluginsComponent, "c8y-app-plugins", never, {}, {}, never, never>;
}

//# sourceMappingURL=application-plugins.component.d.ts.map