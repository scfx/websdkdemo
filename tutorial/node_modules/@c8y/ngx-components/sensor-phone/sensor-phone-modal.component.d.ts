import { AfterViewInit, ElementRef, Renderer2 } from '@angular/core';
import { BsModalRef } from 'ngx-bootstrap/modal';
import { C8yStepper } from '@c8y/ngx-components';
import { SensorPhoneService } from './sensor-phone.service';
import { DeviceRegistrationService, InventoryService } from '@c8y/client';
import { Router } from '@angular/router';
import * as ɵngcc0 from '@angular/core';
export declare class SensorPhoneModalComponent implements AfterViewInit {
    private bsModalRef;
    private sensorPhoneService;
    private renderer;
    private deviceRegistrationService;
    private router;
    private inventoryService;
    stepper: C8yStepper;
    container: ElementRef;
    pendingDeviceBootstrap: boolean;
    success: any;
    errorMessage: any;
    registrationData: any;
    tenantId: any;
    instance: any;
    deviceId: string;
    dashboardLink: string;
    constructor(bsModalRef: BsModalRef, sensorPhoneService: SensorPhoneService, renderer: Renderer2, deviceRegistrationService: DeviceRegistrationService, router: Router, inventoryService: InventoryService);
    ngAfterViewInit(): void;
    onStepperSelectionChange(stepper: Partial<C8yStepper>): void;
    registerPhone(): Promise<void>;
    waitForPhoneToConnect(): Promise<import("@c8y/client").IDeviceRegistration>;
    waitForDeviceAndDashboardMos(): Promise<{
        deviceMo: import("@c8y/client").IManagedObject;
        dashboardMo: import("@c8y/client").IManagedObject;
    }>;
    onDeviceAndDashboardMosCreated(deviceMo: any, dashboardMo: any): void;
    generateDeviceId(): string;
    openDashboard(): void;
    cancel(): void;
    retry(): void;
    onFailure(): void;
    deleteDeviceRequest(): Promise<void>;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<SensorPhoneModalComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<SensorPhoneModalComponent, "c8y-sensor-phone", never, {}, {}, never, never>;
}

//# sourceMappingURL=sensor-phone-modal.component.d.ts.map