import { IFetchResponse } from './IFetchResponse';
import { Paging } from './Paging';
import { IResultBase } from './IResultBase';
/**
 * The IResultList<TData> interface splits up the server
 * response in different fragments, namely in:
 *  + data[]
 *  + paging
 *  + res
 *
 * @param TData generic type
 */
export interface IResultList<TData> extends IResultBase<TData> {
    /**
     * Holds the data from server response in a generic way.
     * TData could be of any type, for example:
     * + [[IManagedObject]]
     * + [[IAlarm]]
     * + [[IAuditRecord]]
     * + ...
     *
     * Response data as array.
     */
    data: TData[];
    /**
     * Server response of type [[IFetchResponse]].
     */
    res: IFetchResponse;
    /**
     * Paging allows you to query the next and previous data chunks
     * in a convenient way. You can also go to a specific page or just read
     * page information about the current data chunk. For a detailed view see [[Paging]]
     */
    paging?: Paging<TData>;
}
