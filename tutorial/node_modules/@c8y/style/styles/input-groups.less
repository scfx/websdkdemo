//
// Input groups
// --------------------------
// Base styles
// -------------------------
.input-group {
  position: relative; // For dropdowns
  display: flex;
  flex-wrap: nowrap;
  align-items: stretch;
  width: 100%;

  // Undo padding and float of grid classes
  &[class*='col-'] {
    float: none;
    padding-left: 0;
    padding-right: 0;
  }

  > .form-control,
  > .c8y-select-wrapper,
  > .form-group,
  > div[c8y-device-group-selector] {
    position: relative;
    z-index: 2;
    flex: 1 1 auto;
    width: 1%;
    margin-bottom: 0;
    max-height: @input-height-base!important;
  }

  c8y-software-type {
    flex-grow: 1 !important;
    c8y-typeahead .input-group input {
      flex-grow: 1 !important;
    }
  }

  &.typeahead > div:not(.input-group-btn) {
    flex: 1;
    .form-control {
      width: 100%;
    }
  }
}

.input-group-addon {
  display: flex;
  align-items: center;
  font-family: @form-control-font-family;
  font-weight: @form-control-font-weight;
  font-size: @font-size-base;
  line-height: @form-control-line-height;
  color: @input-color;
  padding: @form-control-padding-base-vertical @form-control-padding-base-horizontal;
  background-color: @input-border;
  border-radius: @input-border-radius;
  .form-group-sm &,
  &.input-sm {
    padding: @form-control-padding-small-vertical @form-control-padding-small-horizontal;
    font-size: @font-size-small;
  }
  label.c8y-checkbox,
  label.c8y-radio {
    line-height: 1;
    margin: 0;
    input[type='checkbox'] + span::before,
    input[type='radio'] + span::before {
      margin: 0;
    }
  }
}

.input-group-btn {
  display: flex;
  align-items: stretch;
}
.input-group-addon,
.input-group-btn,
.form-control {
  &:not(:first-child):not(:last-child) {
    border-radius: 0;
  }
}
.form-control + .input-group-btn {
  margin-left: -1px;
}

// search with round corners
.input-group.input-group-search {
  .form-control {
    &,
    &:first-child,
    &:last-child {
      border-radius: calc(~'@{input-height-base} * 0.5');
      padding-right: calc(~'@{input-height-base} + @{form-control-padding-base-horizontal}');
      padding-left: calc(~'@{form-control-padding-base-horizontal} * 2');
    }
  }
  .input-group-btn,
  .input-group-addon {
    position: absolute;
    right: 0;
    display: flex;
    align-items: center;
    min-width: @input-height-base;
    height: @input-height-base;
    background-color: transparent;
    border: 0;
    z-index: 2;
    .btn {
      width: 100%;
      height: 100%;
    }
  }
}

// dropdown without round corners
.input-group.input-group-dropdown {
  .input-group-btn,
  .input-group-addon {
    position: absolute;
    right: 0;
    display: flex;
    align-items: center;
    min-width: @input-height-base;
    height: @input-height-base;
    background-color: transparent;
    border: 0;
    z-index: 2;
    .btn {
      width: 100%;
      height: 100%;
    }
  }
}

// Reset rounded corners
.input-group .form-control:first-child,
.input-group-addon:first-child,
.input-group-btn:first-child > .btn,
.input-group-btn:first-child > .btn-group > .btn,
.input-group-btn:first-child > .dropdown-toggle,
.input-group-btn:last-child > .btn:not(:last-child):not(.dropdown-toggle),
.input-group-btn:last-child > .btn-group:not(:last-child) > .btn {
  border-bottom-right-radius: 0;
  border-top-right-radius: 0;
}

.input-group .form-control:last-child,
.input-group-addon:last-child,
.input-group-btn:last-child > .btn,
.input-group-btn:last-child > .btn-group > .btn,
.input-group-btn:last-child > .dropdown-toggle,
.input-group-btn:first-child > .btn:not(:first-child),
.input-group-btn:first-child > .btn-group:not(:first-child) > .btn {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

//Input group editable
// supports a save button and a cancel button
// inside a input-group
.input-group-editable {
  .input-group-btn {
    .btn-clean {
      position: relative;
      padding: 6px;
      &::after {
        position: absolute;
        top: 50%;
        right: 0;
        display: block;
        margin-top: -10px;
        width: 1px;
        height: 20px;
        background-color: fade(@black, 10%);
        content: '';
      }
    }
    &:last-child {
      .btn-clean::after {
        display: none;
      }
    }
  }
}

.input-group-editable {
  textarea.form-control {
    max-height: unset !important;
    height: @input-height-base;
  }
  input[type='number']:not(:focus) {
    -moz-appearance: textfield; /*For FireFox*/

    &::-webkit-inner-spin-button {
      /*For Webkits like Chrome and Safari*/
      -webkit-appearance: none;
      margin: 0;
    }
  }

  .form-control:not(.ng-dirty) {
    transition: all 0.25s ease;
    &[disabled] {
      transition: none;
      padding-left: 0;
      opacity: @component-disabled-opacity;
      box-shadow: none;
    }
    ~ .input-group-btn {
      display: none;
    }
  }
  &:not(:hover) {
    textarea.form-control {
      resize: none;
    }

    .form-control:not(:focus):not(.ng-dirty) {
      z-index: 2;
      padding-left: 0;
      margin-right: 12px;
      background-color: transparent;
      box-shadow: none;
      overflow: hidden;
      text-overflow: ellipsis;
      flex: 0 1 auto;
      width: fit-content;
      max-width: 100%;
      + span:after {
        display: inline-block;
        margin-left: -16px;
        color: @component-brand-primary;
        content: @dlt-c8y-icon-pencil;
        font: normal normal normal 14px/1 @icon-font-family;
        font-size: 12px;
        line-height: 32px;
        text-rendering: auto;
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
        opacity: 0.5;
        z-index: 5;
        .form-group-lg & {
          line-height: 40px;
        }
      }
      &[disabled] {
        + span:after {
          display: none;
        }
      }
    }
  }
  &:hover {
    .form-control:not(:focus):not(.ng-dirty) {
      flex: 0 1 auto;
      width: fit-content;
      max-width: 100%;
    }
  }
}

// Sizing options
//
// Remix the default form control sizing classes into new ones for easier
// manipulation.
.input-group-lg > .form-control,
.input-group-lg > .input-group-addon,
.input-group-lg > .input-group-btn > .btn {
  .input-lg();
}

.input-group-sm > .form-control,
.input-group-sm > .input-group-addon,
.input-group-sm > .input-group-btn > .btn {
  .input-sm();
}

// Text input groups
// -------------------------
.input-group-addon {
  padding: @padding-base-vertical @padding-base-horizontal;
  font-size: @font-size-base;
  font-weight: normal;
  line-height: 1;
  color: @input-color;
  text-align: center;
  background-color: @input-group-addon-bg;
  border: 1px solid @input-group-addon-border-color;
  border-radius: @border-radius-base; // Sizing
  &.input-sm {
    padding: @padding-small-vertical @padding-small-horizontal;
    font-size: @font-size-small;
    border-radius: @border-radius-small;
  }
  &.input-lg {
    padding: @padding-large-vertical @padding-large-horizontal;
    font-size: @font-size-large;
    border-radius: @border-radius-large;
  } // Nuke default margins from checkboxes and radios to vertically center within.
  input[type='radio'],
  input[type='checkbox'] {
    margin-top: 0;
  }
}

// Button input groups
// -------------------------
.input-group-btn {
  position: relative; // Jankily prevent input button groups from wrapping with `white-space` and
  // `font-size` in combination with `inline-block` on buttons.
  font-size: 0;
  white-space: nowrap; // Negative margin for spacing, position for bringing hovered/focused/actived
  // element above the siblings.
  > .btn {
    position: relative;
    padding: 5px 12px;
    + .btn {
      margin-left: -1px;
      border-left-color: fade(@black, 15%);
    } // Bring the "active" button to the front
    &:hover,
    &:focus,
    &:active {
      z-index: 2;
    }
    &.btn-default {
      border-color: @input-border;
    }
    &.btn-link[disabled] {
      pointer-events: auto !important;
      cursor: @cursor-disabled !important;
      color: @component-disabled-color !important;
      opacity: @input-disabled-opacity !important;
    }
  }
  // No negative margins to show the complet input border
  &:first-child {
    > .btn,
    > .btn-group {
      margin-right: 0;
      border-right-color: fade(@black, 15%);
    }
    > .btn:last-child {
      border-right: 0;
    }
  }
  &:last-child {
    > .btn,
    > .btn-group {
      z-index: 2;
      border-left-color: fade(@black, 15%);
    }
    > .btn:first-child {
      border-left: 0;
    }
  }
}

// input-group-array for formly array.type.component

.input-group-array {
  display: flex;
  .form-group {
    position: relative;
  }
  .form-group,
  .input-group-btn {
    margin-bottom: 4px;
  }
  .input-group-btn {
    margin-top: 24px;
  }
  formly-field {
    flex-grow: 1;
  }
  + .input-group-array {
    .input-group-btn {
      margin-top: 0;
    }
    .form-group > label {
      display: none;
    }
  }
}
