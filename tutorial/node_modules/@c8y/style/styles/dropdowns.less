//
// Dropdown menus
// --------------------------------------------------
// Dropdown arrow/caret
.caret {
  position: relative;
  display: inline-block;
  margin-top: -2px;
  width: 0.8em;
  vertical-align: inherit;
  &:after {
    position: absolute;
    top: 50%;
    left: 4px;
    z-index: 2;
    color: @form-control-icon-color;
    content: @c8y-glyph-caret;
    font-size: 18px;
    transform: translate(0, -50%);
    pointer-events: none;

    .c8y-glyph();
  }
}

.dropdown-caret:after {
  position: absolute;
  top: 50%;
  right: 5px;
  z-index: 2;
  color: @form-control-icon-color;
  content: @c8y-glyph-caret;
  font-size: 18px;
  transform: translate(0, -50%);
  pointer-events: none;

  .c8y-glyph();
}

// The dropdown wrapper (div)
.dropup,
.dropdown {
  position: relative;
  display: inline-block;
  // transfer the dropdown styles to components

  .component-vars(dropdown);
}

// Prevent the focus on the dropdown toggle when closing dropdowns
.dropdown-toggle:focus {
  outline: 0;
}

// The dropdown menu (ul)
.dropdown-menu {
  position: absolute;
  top: 100%;
  left: 0;
  z-index: @zindex-dropdown;
  display: none; // none by default, but block on "open" of the menu
  float: left;
  margin: -3px 0 0;
  padding: 0;
  min-width: 160px;
  border: 0; //
  border-color: transparent;
  border-radius: @dropdown-border-radius;
  border-top-left-radius: 0;
  border-top-right-radius: 0;
  background-color: @dropdown-background;
  background-clip: padding-box;
  list-style: none;
  text-align: left;
  text-transform: none;
  font-size: @font-size-base;

  .boxShadowHelper(2);

  &--modal {
    z-index: @zindex-modal + 1 !important;
  }

  &.pull-right {
    right: 0;
    left: auto;
  }
  .divider {
    overflow: hidden;
    margin: 0 !important;
    height: 2px;
    background: linear-gradient(to top, @dropdown-border, @dropdown-border) @dropdown-background;
  }
  // Links within the dropdown menu

  > li {
    a:not(.btn),
    button:not(.btn) {
      &:not(.btn-add-block) {
        display: block;
        padding: 9px 15px 10px;
        width: 100%;
        border: 0;
        border-top: 1px solid @dropdown-border;
        border-radius: 0;
        background-color: @dropdown-background;
        background-image: none;
        color: @dropdown-actions-color;
        text-align: left;
        white-space: nowrap;
        &:hover {
          color: @dropdown-actions-color-hover;
          text-decoration: none;
        }
        &:focus {
          outline: none;
          box-shadow: inset 0 0 0 1px @dropdown-actions-color-hover;
        }
      }
    }
  }

  > li:first-child a,
  > li:first-child > button,
  .divider + li > a {
    border-top-color: transparent !important;
  }
  // forms in dropdown-menu
  > .dropdown-form {
    padding: 16px;
    min-width: 250px;
    background-color: @dropdown-background;
  }
  .form-group.datepicker {
    .uib-datepicker-popup {
      min-width: 281px;
    }
  }
}

.dropdown.open .dropdown-menu-grid-4 {
  display: grid !important;

  grid-template-columns: 1fr 1fr 1fr 1fr;
  li > a {
    padding: 9px 8px;
    border-width: 0;
    text-align: center;
    transition: box-shadow 0.25s ease;
    &:hover,
    &.active {
      box-shadow: inset 0 0 0 2px @dropdown-actions-color-hover;
      color: @dropdown-actions-color-hover;
    }
  }
}

// animation opening
.dropdown-menu:not(.uib-datepicker-popup) {
  .make-el-increment(100, li, 0.05s, 100, top, 40px);
  li {
    position: relative;
    transition: top 0.15s ease;
  }
}

.dropdown.open,
.uib-dropdown-open {
  > .dropdown-menu {
    display: block;
    height: auto;
    transition: box-shadow 0.25s ease 0.35s, background 0.25s ease 0.35s;

    .boxShadowHelper(2, border);
    &.visible-overflow {
      overflow: visible;
    }
    li {
      top: 0 !important;
    }
  }
  // Remove the outline when :focus is triggered
  > a {
    outline: 0;
  }
  &.dropup {
    .dropdown-menu {
      li {
        top: auto !important;
        bottom: 0 !important;
      }
    }
  }
}

// Hover/Focus state
.dropdown-menu > li > a:not(.btn) {
  &:hover,
  &:focus {
    //background-color: @dropdown-link-hover-bg;
    color: @dropdown-actions-color-hover;
    text-decoration: none;
  }
}

// Active state
.dropdown-menu > .active > a:not(.btn), .dropdown-menu > .active > button:not(.btn) {
  &,
  &:hover,
  &:focus {
    outline: 0;
    //background-color: @dropdown-link-active-bg;
    color: @dropdown-active-color!important;
    text-decoration: none;
  }
}

// Disabled state
//
// Gray out text and ensure the hover/focus state remains gray
.dropdown-menu > .disabled > a:not(.btn),
.dropdown-menu button[disabled]:not(.btn) {
  &,
  &:hover,
  &:focus {
    color: @dropdown-disabled-color!important;
  } // Nuke hover/focus effects
  &:hover,
  &:focus {
    background-color: @dropdown-background;
    background-image: none; // Remove CSS gradient
    color: @dropdown-disabled-color!important;
    text-decoration: none;
    cursor: @cursor-disabled;

    .reset-filter();
  }
}

// Menu positioning
//
// Add extra class to `.dropdown-menu` to flip the alignment of the dropdown
// menu with the parent.
.dropdown-menu-right {
  right: 0;
  left: auto; // Reset the default from `.dropdown-menu`
}

//
// This is only for left-aligning a dropdown menu within a `.navbar-right` or
// `.pull-right` nav component.
.dropdown-menu-left {
  right: auto;
  left: 0;
}

// Dropdown section headers
.dropdown-header {
  display: block;
  padding: 4px 15px 3px;
  border-top: 1px solid fade(@black, 5%);
  background-color: @dropdown-background;
  color: @dropdown-brand-primary;
  white-space: nowrap; // as with > li > a
  font-size: @font-size-small;
  line-height: @line-height-base;
}

// Backdrop to catch body clicks on mobile, etc.
.dropdown-backdrop {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: (@zindex-dropdown - 10);
}

// Right aligned dropdowns
.pull-right > .dropdown-menu {
  right: 0;
  left: auto;
}

// Allow for dropdowns to go bottom up (aka, dropup-menu)
//
// Just add .dropup after the standard .dropdown class and you're set.
.dropup,
.navbar-fixed-bottom .dropdown {
  // Reverse the caret
  .caret {
    border-top: 0;
    border-bottom: @caret-width-base solid;
    content: '';
  } // Different positioning for bottom up menu
  .dropdown-menu {
    top: auto;
    bottom: 100%;
    margin-top: 0;
    margin-bottom: 1px;
  }
}

// Component alignment
//
// Reiterate per navbar.less and the modified component alignment there.
@media (min-width: @grid-float-breakpoint) {
  .navbar-right {
    .dropdown-menu {
      .dropdown-menu-right();
    }

    .dropdown-menu-left {
      .dropdown-menu-left();
    }
  }
}

// wrapper for the toolbar
.more-wrapper {
  .dropdown-menu > li > .btn.btn-link {
    display: block;
    padding: 10px 15px 9px !important;
    width: 100%;
    border-top: 1px solid @dropdown-border;
    background-color: @dropdown-background;
    color: @dropdown-actions-color;
    text-align: left;
    white-space: nowrap; // prevent links from randomly breaking onto new lines
    font-weight: normal;
    line-height: @line-height-base;
  }
}

.dropup,
.navbar-fixed-bottom .dropdown {
  // Reverse the caret
  .caret {
    border-top: 0;
    border-bottom: @caret-width-base solid;
    content: '';
  }
  // Different positioning for bottom up menu
  .dropdown-menu {
    top: auto;
    bottom: 100%;
    margin-top: 0;
    margin-bottom: 1px;
  }
}

// c8y dropdown
.c8y-dropdown {
  position: relative;
  display: inline-block;
  margin: 0;
  &:not(.btn) {
    padding: 10px;
    border: 0;
    border-radius: 0;
    background-color: transparent;
    background-image: none;
    color: @dropdown-actions-color;
  }
  // to use inside cards
  &:hover,
  .open & {
    text-decoration: none;
    > span {
      position: relative;
      z-index: 10;
    }
  }
  [class^="dlt-c8y-icon-"],
  [class*=" dlt-c8y-icon-"]{
    position: relative;
  }
  &:before {
    position: absolute;
    top: 100%;
    right: 0;
    bottom: 0;
    left: 0;
    z-index: 0;
    background-color: @dropdown-background;
    content: '';

    .transition(none);
  }
  + .dropdown-menu {
    display: block;
    overflow: hidden;
    margin: -3px 0 0 0;
    height: 0;
    border: 0;
    background-color: transparent;

    .box-shadow(none);
    > li {
      a:not(.btn),
      button:not(.btn) {
        display: block;
        padding: 9px 16px 10px;
        width: 100%;
        border: 0;
        border-top: 1px solid @dropdown-border;
        border-radius: 0;
        background-color: @dropdown-background;
        background-image: none;
        color: @dropdown-actions-color;
        text-align: left;
        white-space: nowrap;
        &:hover {
          color: @dropdown-actions-color-hover;
          text-decoration: none;
        }
      }
    }
  }
  .dropup & {
    + .dropdown-menu {
      .make-el-increment(100, li, 0.05s, 100, bottom, 40px);
      li {
        top: auto;
        transition: bottom 0.15s ease;
      }
    }
  }
}

.dropdown.open,
[dropdown].open,
.dropdown[dropdown-append-to-body='true'],
.btn-group.open {
  .c8y-dropdown:not([aria-expanded='false']),
  .c8y-dropdown[aria-expanded='true'] {
    &:not(.btn) {
      color: @dropdown-actions-color-hover;
      opacity: 1;

      .box-shadow(none);
      .transition(none);
      &:before {
        top: 0;
        background-color: @dropdown-background;

        .boxShadowHelper(2, border);
      }
    }
    + .dropdown-menu {
      height: auto;

      .boxShadowHelper(2, border);
    }
  }
  &.dropup {
    .c8y-dropdown {
      position: relative;
      z-index: 1002;
    }
  }
}

.dropup.open,
[dropup].open {
  .c8y-dropdown {
    &:not(.btn) {
      color: currentColor;
      opacity: 1;

      .box-shadow(none);
      .transition(none);
      &:before {
        top: 0;
        background-color: @dropdown-background;

        .boxShadowHelper(2, border);
      }
    }
    + .dropdown-menu {
      z-index: @zindex-navbar-fixed + 1;
      height: auto;

      .boxShadowHelper(2, border);
    }
  }
}

body {
  > .dropdown-menu {
    overflow: hidden;
    margin: -3px 0 0 0;
    height: 0;
    border: 0;
    background-color: transparent;
    // &.multiselect-container {
    //   background-color: @dropdown-background;
    // }
    > li {
      position: relative;
      a:not(.btn),
      button:not(.btn) {
        display: block;
        padding: 10px 15px 9px;
        width: 100%;
        border: 0;
        border-top: 1px solid @dropdown-border;
        border-radius: 0;
        background-color: @dropdown-background;
        background-image: none;
        text-align: left;
        white-space: nowrap;
        &:hover {
          color: @dropdown-actions-color-hover;
          text-decoration: none;
        }
      }
    }
  }
  &.uib-dropdown-open {
    > .dropdown-menu {
      z-index: @zindex-modal + 1 !important; // higher than action bar so it is displayed when dropdown is attached to body
      height: auto;

      .boxShadowHelper(2, border);
    }
  }
  > bs-dropdown-container {
    z-index: @zindex-modal + 1 !important; // fix z-index for ngx-bootstrap dropdown attached to body
  }
}

// fix for AngularJS typeahead dropdown
[uib-typeahead-popup].dropdown-menu {
  max-height: 200px;
  overflow: auto;
  width: 100%;
  .c8y-scrollbar();
  &:not(.uib-datepicker-popup) li {
    position: static;
  }
}
