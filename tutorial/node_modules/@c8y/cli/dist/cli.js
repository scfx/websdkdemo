"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const CumulocityCommandLine_1 = require("./cli/CumulocityCommandLine");
const util_1 = require("util");
try {
    // redirecting console output to angular if @angular/devkit
    // is available.
    // tslint:disable-next-line:no-var-requires
    const { createConsoleLogger } = require('@angular-devkit/core/node');
    const logger = createConsoleLogger(process.argv.indexOf('--verbose') > -1, process.stdout, process.stderr);
    console.info = console.log = (arg, ...args) => {
        logger.info(util_1.format(arg, ...args));
    };
    console.warn = (arg, ...args) => {
        logger.warn(util_1.format(arg, ...args));
    };
    console.error = (arg, ...args) => {
        logger.error(util_1.format(arg, ...args));
    };
    // debug is shown only with verbose option
    console.debug = (arg, ...args) => {
        logger.debug(util_1.format(arg, ...args));
    };
}
catch (_a) {
    // intended empty
}
const cmd = new CumulocityCommandLine_1.CumulocityCommandLine(process.argv);
process.on('unhandledRejection', err => {
    console.error(err);
    process.exit(1);
});
//# sourceMappingURL=cli.js.map