"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.config = void 0;
const autoprefixer = require("autoprefixer");
const mini_css_extract_plugin_1 = require("mini-css-extract-plugin");
function config(env) {
    const devMode = env.mode !== 'production';
    const { sourceMapLess: sourceMap } = env;
    const lessLoader = relativeUrls => ({
        loader: 'less-loader',
        options: {
            sourceMap,
            lessOptions: {
                relativeUrls
            }
        }
    });
    const sassLoader = () => ({
        loader: 'sass-loader',
        options: {
            implementation: 'sass',
            sourceMap: true
        }
    });
    const cssLoader = (url, importLoaders) => ({
        loader: 'css-loader',
        options: {
            importLoaders: importLoaders + (devMode ? 0 : 1),
            sourceMap,
            url
        }
    });
    const postcssLoader = () => !devMode && {
        loader: 'postcss-loader',
        options: {
            sourceMap,
            postcssOptions: {
                plugins: [autoprefixer()]
            }
        }
    };
    const styleLoader = () => (devMode ? 'style-loader' : mini_css_extract_plugin_1.loader);
    const rules = [
        {
            test: /\.css$/,
            oneOf: [
                {
                    issuer: /cumulocity\.json/,
                    exclude: /node_modules/,
                    use: [styleLoader(), cssLoader(false, 0), postcssLoader()].filter(Boolean)
                },
                {
                    issuer: /\.ts$/,
                    use: [postcssLoader()].filter(Boolean),
                    type: 'asset/source'
                },
                {
                    use: [styleLoader(), cssLoader(true, 0), postcssLoader()].filter(Boolean)
                }
            ]
        },
        {
            test: /\.less$/,
            oneOf: [
                {
                    issuer: /cumulocity\.json/,
                    exclude: /node_modules/,
                    use: [
                        styleLoader(),
                        cssLoader(false, 2),
                        postcssLoader(),
                        lessLoader(false),
                        'c8y-less'
                    ].filter(Boolean)
                },
                {
                    issuer: /\.ts$/,
                    use: [postcssLoader(), lessLoader(true)].filter(Boolean),
                    type: 'asset/source'
                },
                {
                    use: [styleLoader(), cssLoader(true, 1), postcssLoader(), lessLoader(true)].filter(Boolean)
                }
            ]
        },
        {
            test: /\.scss$/,
            oneOf: [
                {
                    issuer: /\.ts$/,
                    use: [postcssLoader(), require.resolve('resolve-url-loader'), sassLoader()].filter(Boolean),
                    type: 'asset/source'
                },
                {
                    use: [styleLoader(), cssLoader(true, 1), postcssLoader(), sassLoader()].filter(Boolean)
                }
            ]
        }
    ];
    return {
        module: { rules }
    };
}
exports.config = config;
//# sourceMappingURL=styles.js.map