/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
/**
 * Default dropdown configuration
 */
import * as ɵngcc0 from '@angular/core';
var BsDropdownConfig = /** @class */ (function () {
    function BsDropdownConfig() {
        /**
         * default dropdown auto closing behavior
         */
        this.autoClose = true;
        /**
         * default dropdown auto closing behavior
         */
        this.insideClick = false;
        /**
         * turn on/off animation
         */
        this.isAnimated = false;
    }
    /** @nocollapse */ BsDropdownConfig.ɵprov = i0.ɵɵdefineInjectable({ factory: function BsDropdownConfig_Factory() { return new BsDropdownConfig(); }, token: BsDropdownConfig, providedIn: "root" });
BsDropdownConfig.ɵfac = function BsDropdownConfig_Factory(t) { return new (t || BsDropdownConfig)(); };
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BsDropdownConfig, [{
        type: Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return []; }, null); })();
    return BsDropdownConfig;
}());
export { BsDropdownConfig };
if (false) {
    /**
     * default dropdown auto closing behavior
     * @type {?}
     */
    BsDropdownConfig.prototype.autoClose;
    /**
     * default dropdown auto closing behavior
     * @type {?}
     */
    BsDropdownConfig.prototype.insideClick;
    /**
     * turn on/off animation
     * @type {?}
     */
    BsDropdownConfig.prototype.isAnimated;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnMtZHJvcGRvd24uY29uZmlnLmpzIiwic291cmNlcyI6WyJuZ3gtYm9vdHN0cmFwL2Ryb3Bkb3duL2JzLWRyb3Bkb3duLmNvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQztBQUNvQztBQUNsQztBQUVEOztBQUZEO0FBR2MsSUFIZDtBQUNnQjtBQUVaO0FBQ2tCO0FBQVksUUFDaEMsY0FBUyxHQUFHLElBQUksQ0FBQztBQUNuQjtBQUFZO0FBQ0U7QUFDWCxRQURELGdCQUFXLEdBQUcsS0FBSyxDQUFDO0FBQ3RCO0FBQVk7QUFDRTtBQUVaLFFBRkEsZUFBVSxHQUFHLEtBQUssQ0FBQztBQUNyQixLQUFDLEFBUFE7b0RBSFIsVUFBVSxTQUFDLHNCQUNWLFVBQVUsRUFBRSxNQUFNLGtCQUNuQixqSUFDUzs7Ozs7OztnREFNRjtBQUFDLDJCQVpUO0FBQUUsQ0FhRCxBQVZELElBVUM7QUFDRCxTQVJhLGdCQUFnQjtBQUM1QjtBQUFhO0FBQVE7QUFFdEI7QUFBaUI7QUFBUSxJQUR2QixxQ0FBaUI7QUFDbkI7QUFBUTtBQUNGO0FBQ047QUFBUSxJQUROLHVDQUFvQjtBQUN0QjtBQUFRO0FBQ0Y7QUFDTDtBQUNNLElBRkwsc0NBQW1CO0FBQ3JCO0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbi8qKiBEZWZhdWx0IGRyb3Bkb3duIGNvbmZpZ3VyYXRpb24gKi9cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnXG59KVxuZXhwb3J0IGNsYXNzIEJzRHJvcGRvd25Db25maWcge1xuICAvKiogZGVmYXVsdCBkcm9wZG93biBhdXRvIGNsb3NpbmcgYmVoYXZpb3IgKi9cbiAgYXV0b0Nsb3NlID0gdHJ1ZTtcbiAgLyoqIGRlZmF1bHQgZHJvcGRvd24gYXV0byBjbG9zaW5nIGJlaGF2aW9yICovXG4gIGluc2lkZUNsaWNrID0gZmFsc2U7XG4gIC8qKiB0dXJuIG9uL29mZiBhbmltYXRpb24gKi9cbiAgaXNBbmltYXRlZCA9IGZhbHNlO1xufVxuIl19