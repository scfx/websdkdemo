/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { BsDatepickerConfig } from './bs-datepicker.config';
import * as i0 from "@angular/core";
import * as ɵngcc0 from '@angular/core';
export class BsDaterangepickerInlineConfig extends BsDatepickerConfig {
    constructor() {
        super(...arguments);
        // DatepickerRenderOptions
        this.displayMonths = 2;
        /**
         * turn on/off animation
         */
        this.isAnimated = false;
    }
}
BsDaterangepickerInlineConfig.ɵfac = /*@__PURE__*/ function () { let ɵBsDaterangepickerInlineConfig_BaseFactory; return function BsDaterangepickerInlineConfig_Factory(t) { return (ɵBsDaterangepickerInlineConfig_BaseFactory || (ɵBsDaterangepickerInlineConfig_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(BsDaterangepickerInlineConfig)))(t || BsDaterangepickerInlineConfig); }; }();
/** @nocollapse */ BsDaterangepickerInlineConfig.ɵprov = i0.ɵɵdefineInjectable({ factory: function BsDaterangepickerInlineConfig_Factory() { return new BsDaterangepickerInlineConfig(); }, token: BsDaterangepickerInlineConfig, providedIn: "root" });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BsDaterangepickerInlineConfig, [{
        type: Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], null, null); })();
if (false) {
    /** @type {?} */
    BsDaterangepickerInlineConfig.prototype.displayMonths;
    /**
     * turn on/off animation
     * @type {?}
     */
    BsDaterangepickerInlineConfig.prototype.isAnimated;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnMtZGF0ZXJhbmdlcGlja2VyLWlubGluZS5jb25maWcuanMiLCJzb3VyY2VzIjpbIm5neC1ib290c3RyYXAvZGF0ZXBpY2tlci9icy1kYXRlcmFuZ2VwaWNrZXItaW5saW5lLmNvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUM1RDs7QUFJQSxNQUFNLE9BQU8sNkJBQThCLFNBQVEsa0JBQWtCO0FBQ3JFLElBSkE7QUFDRTtBQUVLO0FBQW1DLFFBRXRDLGtCQUFhLEdBQUcsQ0FBQyxDQUFDO0FBQ3RCO0FBQVk7QUFDQTtBQUNaLFFBREksZUFBVSxHQUFHLEtBQUssQ0FBQztBQUN2QixLQUFDO0FBQ0Q7eURBVEMsVUFBVSxTQUFDLGtCQUNWLFVBQVUsRUFBRSxNQUFNLGNBQ25CLDRQQUNJO0FBQUM7Ozs7OzswQkFNK0Q7QUFBQztBQUFhO0FBQXFCLElBSnBHLHNEQUFrQjtBQUN0QjtBQUFRO0FBQ0o7QUFBaUI7QUFFbEIsSUFGQyxtREFBbUI7QUFDdkI7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEJzRGF0ZXBpY2tlckNvbmZpZyB9IGZyb20gJy4vYnMtZGF0ZXBpY2tlci5jb25maWcnO1xuXG5ASW5qZWN0YWJsZSh7XG4gIHByb3ZpZGVkSW46ICdyb290J1xufSlcbmV4cG9ydCBjbGFzcyBCc0RhdGVyYW5nZXBpY2tlcklubGluZUNvbmZpZyBleHRlbmRzIEJzRGF0ZXBpY2tlckNvbmZpZyB7XG4gICAgLy8gRGF0ZXBpY2tlclJlbmRlck9wdGlvbnNcbiAgICBkaXNwbGF5TW9udGhzID0gMjtcbiAgICAvKiogdHVybiBvbi9vZmYgYW5pbWF0aW9uICovXG4gICAgaXNBbmltYXRlZCA9IGZhbHNlO1xufVxuIl19