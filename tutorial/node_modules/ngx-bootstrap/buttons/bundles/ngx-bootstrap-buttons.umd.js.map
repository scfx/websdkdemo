{"version":3,"file":"ngx-bootstrap-buttons.umd.js","sources":["ngx-bootstrap/buttons/button-checkbox.directive.ts","ngx-bootstrap/buttons/button-radio.directive.ts","ngx-bootstrap/buttons/button-radio-group.directive.ts","ngx-bootstrap/buttons/buttons.module.ts"],"names":["NG_VALUE_ACCESSOR","forwardRef","Directive","Input","HostBinding","HostListener","ElementRef","ChangeDetectorRef","Renderer2","Optional","Inject","RADIO_CONTROL_VALUE_ACCESSOR","ContentChildren","NgModule"],"mappings":"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","sourcesContent":["// tslint:disable:no-use-before-declare\nimport {\n  Directive,\n  forwardRef,\n  HostBinding,\n  HostListener,\n  Input,\n  OnInit,\n  Provider\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n// TODO: config: activeClass - Class to apply to the checked buttons\nexport const CHECKBOX_CONTROL_VALUE_ACCESSOR: Provider = {\n  provide: NG_VALUE_ACCESSOR,\n  /* tslint:disable-next-line: no-use-before-declare */\n  useExisting: forwardRef(() => ButtonCheckboxDirective),\n  multi: true\n};\n\n/**\n * Add checkbox functionality to any element\n */\n@Directive({\n  selector: '[btnCheckbox]',\n  providers: [CHECKBOX_CONTROL_VALUE_ACCESSOR]\n})\nexport class ButtonCheckboxDirective implements ControlValueAccessor, OnInit {\n  /** Truthy value, will be set to ngModel */\n  @Input() btnCheckboxTrue = true;\n  /** Falsy value, will be set to ngModel */\n  @Input() btnCheckboxFalse = false;\n\n  @HostBinding('class.active')\n  @HostBinding('attr.aria-pressed')\n  state = false;\n\n  protected value: boolean | string;\n  protected isDisabled: boolean;\n\n  protected onChange = Function.prototype;\n  protected onTouched = Function.prototype;\n\n  // view -> model\n  @HostListener('click')\n  onClick(): void {\n    if (this.isDisabled) {\n      return;\n    }\n\n    this.toggle(!this.state);\n    this.onChange(this.value);\n  }\n\n  ngOnInit(): void {\n    this.toggle(this.trueValue === this.value);\n  }\n\n  protected get trueValue(): boolean {\n    return typeof this.btnCheckboxTrue !== 'undefined'\n      ? this.btnCheckboxTrue\n      : true;\n  }\n\n  protected get falseValue(): boolean {\n    return typeof this.btnCheckboxFalse !== 'undefined'\n      ? this.btnCheckboxFalse\n      : false;\n  }\n\n  toggle(state: boolean): void {\n    this.state = state;\n    this.value = this.state ? this.trueValue : this.falseValue;\n  }\n\n  // ControlValueAccessor\n  // model -> view\n  writeValue(value: boolean | string | null): void {\n    this.state = this.trueValue === value;\n    this.value = value ? this.trueValue : this.falseValue;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.isDisabled = isDisabled;\n  }\n\n  registerOnChange(fn: () => {}): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => {}): void {\n    this.onTouched = fn;\n  }\n}\n","import {\n  ChangeDetectorRef,\n  Directive,\n  ElementRef,\n  forwardRef,\n  HostBinding,\n  HostListener,\n  Inject,\n  Input,\n  OnInit,\n  Optional,\n  Provider,\n  Renderer2\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ButtonRadioGroupDirective } from './button-radio-group.directive';\n\nexport const RADIO_CONTROL_VALUE_ACCESSOR: Provider = {\n  provide: NG_VALUE_ACCESSOR,\n  /* tslint:disable-next-line: no-use-before-declare */\n  useExisting: forwardRef(() => ButtonRadioDirective),\n  multi: true\n};\n\n/**\n * Create radio buttons or groups of buttons.\n * A value of a selected button is bound to a variable specified via ngModel.\n */\n@Directive({\n  selector: '[btnRadio]',\n  providers: [RADIO_CONTROL_VALUE_ACCESSOR]\n})\nexport class ButtonRadioDirective implements ControlValueAccessor, OnInit {\n  onChange = Function.prototype;\n  onTouched = Function.prototype;\n\n  /** Radio button value, will be set to `ngModel` */\n  @Input() btnRadio: string;\n  /** If `true` — radio button can be unchecked */\n  @Input() uncheckable: boolean;\n  /** Current value of radio component or group */\n  @Input()\n  get value() {\n    return this.group ? this.group.value : this._value;\n  }\n\n  set value(value: null | string) {\n    if (this.group) {\n      this.group.value = value;\n\n      return;\n    }\n    this._value = value;\n  }\n  /** If `true` — radio button is disabled */\n  @Input()\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  set disabled(disabled: boolean) {\n    this.setDisabledState(disabled);\n  }\n\n  @HostBinding('attr.aria-disabled')\n  get controlOrGroupDisabled() {\n    return this.disabled || (this.group && this.group.disabled) ? true : undefined;\n  }\n\n  @HostBinding('class.disabled')\n  get hasDisabledClass() {\n    // Although the radio is disabled the active radio should still stand out.\n    // The disabled class will prevent this so don't add it on the active radio\n    return this.controlOrGroupDisabled && !this.isActive;\n  }\n\n  @HostBinding('class.active')\n  @HostBinding('attr.aria-checked')\n  get isActive(): boolean {\n    return this.btnRadio === this.value;\n  }\n\n  @HostBinding('attr.role') readonly role: string = 'radio';\n\n  @HostBinding('attr.tabindex')\n  get tabindex(): undefined | number {\n    if (this.controlOrGroupDisabled) {\n      // Disabled radio buttons should not receive focus\n      return undefined;\n    } else if (this.isActive || this.group == null) {\n      return 0;\n    } else {\n      return -1;\n    }\n  }\n\n  get hasFocus(): boolean {\n    return this._hasFocus;\n  }\n\n  private _value: null | string;\n  private _disabled: boolean;\n  private _hasFocus = false;\n\n  constructor(\n    private el: ElementRef,\n    private cdr: ChangeDetectorRef,\n    private renderer: Renderer2,\n    @Optional()\n    @Inject(forwardRef(() => ButtonRadioGroupDirective))\n    private group: ButtonRadioGroupDirective\n  ) {}\n\n  @HostListener('click')\n  toggleIfAllowed(): void {\n    if (!this.canToggle()) {\n      return;\n    }\n\n    this.value = this.uncheckable && this.btnRadio === this.value ? undefined : this.btnRadio;\n    this._onChange(this.value);\n  }\n\n  @HostListener('keydown.space', ['$event'])\n  onSpacePressed(event: KeyboardEvent) {\n    this.toggleIfAllowed();\n    event.preventDefault();\n  }\n\n  focus() {\n    this.el.nativeElement.focus();\n  }\n\n  @HostListener('focus')\n  onFocus() {\n    this._hasFocus = true;\n  }\n\n  @HostListener('blur')\n  onBlur() {\n    this._hasFocus = false;\n    this.onTouched();\n  }\n\n  canToggle(): boolean {\n    return !this.controlOrGroupDisabled && (this.uncheckable || this.btnRadio !== this.value);\n  }\n\n  ngOnInit(): void {\n    this.uncheckable = typeof this.uncheckable !== 'undefined';\n  }\n\n  _onChange(value: string): void {\n    if (this.group) {\n      this.group.value = value;\n\n      return;\n    }\n    this.onTouched();\n    this.onChange(value);\n  }\n\n  // ControlValueAccessor\n  // model -> view\n  writeValue(value: string): void {\n    this.value = value;\n    this.cdr.markForCheck();\n  }\n\n  registerOnChange(fn: () => {}): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => {}): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(disabled: boolean): void {\n    this._disabled = disabled;\n    if (disabled) {\n      this.renderer.setAttribute(this.el.nativeElement, 'disabled', 'disabled');\n\n      return;\n    }\n    this.renderer.removeAttribute(this.el.nativeElement, 'disabled');\n  }\n}\n","import {\n  ChangeDetectorRef,\n  ContentChildren,\n  Directive,\n  forwardRef,\n  HostBinding,\n  HostListener,\n  Provider,\n  QueryList\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ButtonRadioDirective } from './button-radio.directive';\n\nexport const RADIO_CONTROL_VALUE_ACCESSOR: Provider = {\n  provide: NG_VALUE_ACCESSOR,\n  /* tslint:disable-next-line: no-use-before-declare */\n  useExisting: forwardRef(() => ButtonRadioGroupDirective),\n  multi: true\n};\n\n/**\n * A group of radio buttons.\n * A value of a selected button is bound to a variable specified via ngModel.\n */\n@Directive({\n  selector: '[btnRadioGroup]',\n  providers: [RADIO_CONTROL_VALUE_ACCESSOR]\n})\nexport class ButtonRadioGroupDirective implements ControlValueAccessor {\n  onChange = Function.prototype;\n  onTouched = Function.prototype;\n\n  @HostBinding('attr.role') readonly role: string = 'radiogroup';\n\n  @ContentChildren(forwardRef(() => ButtonRadioDirective))\n  radioButtons: QueryList<ButtonRadioDirective>;\n\n  get value() {\n    return this._value;\n  }\n  set value(value: string | null) {\n    this._value = value;\n    this.onChange(value);\n  }\n\n  private _value: string | null;\n\n  private _disabled: boolean;\n\n  @HostBinding('attr.tabindex')\n  get tabindex(): null | number {\n    if (this._disabled) {\n      return null;\n    } else {\n      return 0;\n    }\n  }\n\n  constructor(private cdr: ChangeDetectorRef) {}\n\n  writeValue(value: string | null): void {\n    this._value = value;\n    this.cdr.markForCheck();\n  }\n\n  registerOnChange(fn: () => {}): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => {}): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(disabled: boolean): void {\n    if (this.radioButtons) {\n      this._disabled = disabled;\n      this.radioButtons.forEach(buttons => {\n        buttons.setDisabledState(disabled);\n      });\n      this.cdr.markForCheck();\n    }\n  }\n\n  @HostListener('focus')\n  onFocus() {\n    if (this._disabled) {\n      return;\n    }\n    const activeRadio = this.getActiveOrFocusedRadio();\n    if (activeRadio) {\n      activeRadio.focus();\n    } else {\n      const firstEnabled = this.radioButtons.find(r => !r.disabled);\n      if (firstEnabled) {\n        firstEnabled.focus();\n      }\n    }\n  }\n\n  @HostListener('blur')\n  onBlur() {\n    if (this.onTouched) {\n      this.onTouched();\n    }\n  }\n\n  @HostListener('keydown.ArrowRight', ['$event'])\n  @HostListener('keydown.ArrowDown', ['$event'])\n  selectNext(event: KeyboardEvent) {\n    this.selectInDirection('next');\n    event.preventDefault();\n  }\n\n  @HostListener('keydown.ArrowLeft', ['$event'])\n  @HostListener('keydown.ArrowUp', ['$event'])\n  selectPrevious(event: KeyboardEvent) {\n    this.selectInDirection('previous');\n    event.preventDefault();\n  }\n\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  private selectInDirection(direction: 'next' | 'previous') {\n    if (this._disabled) {\n      return;\n    }\n    function nextIndex(currentIndex: number, buttonRadioDirectives: ButtonRadioDirective[]) {\n      const step = direction === 'next' ? 1 : -1;\n      let calcIndex = (currentIndex + step) % buttonRadioDirectives.length;\n      if (calcIndex < 0) {\n        calcIndex = buttonRadioDirectives.length - 1;\n      }\n\n      return calcIndex;\n    }\n    const activeRadio = this.getActiveOrFocusedRadio();\n\n    if (activeRadio) {\n      const buttonRadioDirectives = this.radioButtons.toArray();\n      const currentActiveIndex = buttonRadioDirectives.indexOf(activeRadio);\n      for (\n        let i = nextIndex(currentActiveIndex, buttonRadioDirectives);\n        i !== currentActiveIndex;\n        i = nextIndex(i, buttonRadioDirectives)\n      ) {\n        if (buttonRadioDirectives[i].canToggle()) {\n          buttonRadioDirectives[i].toggleIfAllowed();\n          buttonRadioDirectives[i].focus();\n          break;\n        }\n      }\n    }\n  }\n\n  private getActiveOrFocusedRadio(): ButtonRadioDirective | undefined {\n    return this.radioButtons.find(button => button.isActive) || this.radioButtons.find(button => button.hasFocus);\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { ButtonCheckboxDirective } from './button-checkbox.directive';\nimport { ButtonRadioDirective } from './button-radio.directive';\nimport { ButtonRadioGroupDirective } from './button-radio-group.directive';\n\n@NgModule({\n  declarations: [ButtonCheckboxDirective, ButtonRadioDirective, ButtonRadioGroupDirective],\n  exports: [ButtonCheckboxDirective, ButtonRadioDirective, ButtonRadioGroupDirective]\n})\nexport class ButtonsModule {\n  static forRoot(): ModuleWithProviders<ButtonsModule> {\n    return { ngModule: ButtonsModule, providers: [] };\n  }\n}\n"]}