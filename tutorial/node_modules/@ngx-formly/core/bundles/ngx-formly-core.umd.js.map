{"version":3,"file":"ngx-formly-core.umd.js","sources":["node_modules/tslib/tslib.es6.js","@ngx-formly/core/lib/utils.ts","@ngx-formly/core/lib/services/formly.config.ts","@ngx-formly/core/lib/services/formly.form.builder.ts","@ngx-formly/core/lib/extensions/field-form/utils.ts","@ngx-formly/core/lib/components/formly.form.ts","@ngx-formly/core/lib/components/formly.field.ts","@ngx-formly/core/lib/components/formly.attributes.ts","@ngx-formly/core/lib/templates/field.type.ts","@ngx-formly/core/lib/templates/field-array.type.ts","@ngx-formly/core/lib/templates/field.wrapper.ts","@ngx-formly/core/lib/templates/formly.group.ts","@ngx-formly/core/lib/templates/formly.validation-message.ts","@ngx-formly/core/lib/templates/field-template.type.ts","@ngx-formly/core/lib/extensions/field-expression/utils.ts","@ngx-formly/core/lib/extensions/field-expression/field-expression.ts","@ngx-formly/core/lib/extensions/field-validation/field-validation.ts","@ngx-formly/core/lib/extensions/field-form/field-form.ts","@ngx-formly/core/lib/extensions/core/core.ts","@ngx-formly/core/lib/core.module.ts"],"names":["tslib_1.__values","isObservable","AbstractControl","InjectionToken","Injectable","Subject","ChangeDetectorRef","ComponentFactoryResolver","Injector","FormArray","FormGroup","FormControl","EventEmitter","switchMap","take","distinctUntilChanged","debounceTime","tslib_1.__spread","Component","NgZone","Attribute","FormGroupDirective","Optional","Input","Output","ViewChild","Renderer2","ElementRef","ViewContainerRef","Directive","Inject","DOCUMENT","tslib_1.__extends","startWith","of","ChangeDetectionStrategy","DomSanitizer","Observable","Validators","map","updateValidity","updateControlValidity","ANALYZE_FOR_ENTRY_COMPONENTS","NgModule","CommonModule"],"mappings":"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A,AACA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAGA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA5C,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AACA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AACA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AACA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACAC,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AAAA,AAAA,AACA,AAGA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAAC,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAIA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAGA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAEA,AAAA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AACA,AAAA,AAAA,AACA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AC5OA,AAAA,AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAYA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAGA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AA4KA,AA1KA,AAAA,AAAA,AAAA,AAAA,AAAA,AAuBA,AAtcA,AAbnBA,AAmBA,ACngjxFA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AAEA,AAAA,AACA,AAAA,AANA,AAaA,AAZA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAGA,AAAA,AAAA,AAAA,AAAA,AA7BA,AAAA,AAAA,AAAAG,AAAA,AAAA,AAAA,AAOA,AAAA,AAAA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAGA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAAP,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACAQ,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAGA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAUA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAtiuDA,AAtvOAC,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAWA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAtBA,AAAA,AACA,AAAA,AAJAC,AAAA,AA2EAC,AAAA,AAAA,AAAA,AA1EAC,AAAA,AA2EAC,AAAA,AAjDAC,AAAA,AAEAA,AAAA,AAUAA,AAAA,AAIAA,AAAA,AAIAC,AAAA,AACAC,AAAA,AAAA,AAAA,AAkMA,AAAA,AAxOA,AC+BA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AAEA,AAAA,AALA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAzBA,AAAA,AAAA,AAAA,AAAA,AAcA,AAAA,AAAA,AAAAboBA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AA8BA,AA9BA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAAX,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AA2BA,AA1BA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AACA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AACA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAUA,AATA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,A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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { FormlyFieldConfig } from './core';\nimport { isObservable } from 'rxjs';\nimport { AbstractControl } from '@angular/forms';\nimport { FormlyFieldConfigCache } from './components/formly.field.config';\n\nexport function getFieldId(formId: string, field: FormlyFieldConfig, index: string|number) {\n  if (field.id) return field.id;\n  let type = field.type;\n  if (!type && field.template) type = 'template';\n  return [formId, type, field.key, index].join('_');\n}\n\nexport function getKeyPath(field: FormlyFieldConfigCache): string[] {\n  if (!field.key) {\n    return [];\n  }\n\n  /* We store the keyPath in the field for performance reasons. This function will be called frequently. */\n  if (!field._keyPath || field._keyPath.key !== field.key) {\n    let path: string[] = [];\n    if (typeof field.key === 'string') {\n      const key = field.key.indexOf('[') === -1\n        ? field.key\n        : field.key.replace(/\\[(\\w+)\\]/g, '.$1');\n      path = key.indexOf('.') !== -1 ? key.split('.') : [key];\n    } else if (Array.isArray(field.key)) {\n      path = field.key.slice(0);\n    } else {\n      path = [`${field.key}`];\n    }\n\n    field._keyPath = { key: field.key, path };\n  }\n\n  return field._keyPath.path.slice(0);\n}\n\nexport const FORMLY_VALIDATORS = ['required', 'pattern', 'minLength', 'maxLength', 'min', 'max'];\n\nexport function assignFieldValue(field: FormlyFieldConfigCache, value: any) {\n  let paths = getKeyPath(field);\n  if (paths.length === 0) {\n    return;\n  }\n\n  let root = field;\n  while (root.parent) {\n    root = root.parent;\n    paths = [...getKeyPath(root), ...paths];\n  }\n\n  if (value === undefined && field.resetOnHide) {\n    const k = paths.pop();\n    const m = paths.reduce((model, path) => model[path] || {}, root.model);\n    delete m[k];\n    return;\n  }\n\n  assignModelValue(root.model, paths, value);\n}\n\nexport function assignModelValue(model: any, paths: string[], value: any) {\n  for (let i = 0; i < (paths.length - 1); i++) {\n    const path = paths[i];\n    if (!model[path] || !isObject(model[path])) {\n      model[path] = /^\\d+$/.test(paths[i + 1]) ? [] : {};\n    }\n\n    model = model[path];\n  }\n\n  model[paths[paths.length - 1]] = clone(value);\n}\n\nexport function getFieldInitialValue(field: FormlyFieldConfig) {\n  let value = field.options['_initialModel'];\n  let paths = getKeyPath(field);\n  while (field.parent) {\n    field = field.parent;\n    paths = [...getKeyPath(field), ...paths];\n  }\n\n  for (const path of paths) {\n    if (!value) {\n      return undefined;\n    }\n    value = value[path];\n  }\n\n  return value;\n}\n\nexport function getFieldValue(field: FormlyFieldConfig): any {\n  let model = field.parent.model;\n  for (const path of getKeyPath(field)) {\n    if (!model) {\n      return model;\n    }\n    model = model[path];\n  }\n\n  return model;\n}\n\nexport function reverseDeepMerge(dest: any, ...args: any[]) {\n  args.forEach(src => {\n    for (let srcArg in src) {\n      if (isNullOrUndefined(dest[srcArg]) || isBlankString(dest[srcArg])) {\n        dest[srcArg] = clone(src[srcArg]);\n      } else if (objAndSameType(dest[srcArg], src[srcArg])) {\n        reverseDeepMerge(dest[srcArg], src[srcArg]);\n      }\n    }\n  });\n  return dest;\n}\n\nexport function isNullOrUndefined(value: any) {\n  return value === undefined || value === null;\n}\n\nexport function isUndefined(value: any) {\n  return value === undefined;\n}\n\nexport function isBlankString(value: any) {\n  return value === '';\n}\n\nexport function isFunction(value: any) {\n  return typeof(value) === 'function';\n}\n\nexport function objAndSameType(obj1: any, obj2: any) {\n  return isObject(obj1) && isObject(obj2)\n    && Object.getPrototypeOf(obj1) === Object.getPrototypeOf(obj2)\n    && !(Array.isArray(obj1) || Array.isArray(obj2));\n}\n\nexport function isObject(x: any) {\n  return x != null && typeof x === 'object';\n}\n\nexport function isPromise(obj: any): obj is Promise<any> {\n  return !!obj && typeof obj.then === 'function';\n}\n\nexport function clone(value: any): any {\n  if (\n    !isObject(value)\n    || isObservable(value)\n    || /* instanceof SafeHtmlImpl */ value.changingThisBreaksApplicationSecurity\n    || ['RegExp', 'FileList', 'File', 'Blob'].indexOf(value.constructor.name) !== -1\n  ) {\n    return value;\n  }\n\n  // https://github.com/moment/moment/blob/master/moment.js#L252\n  if (value._isAMomentObject && isFunction(value.clone)) {\n    return value.clone();\n  }\n\n  if (value instanceof AbstractControl) {\n    return null;\n  }\n\n  if (value instanceof Date) {\n    return new Date(value.getTime());\n  }\n\n  if (Array.isArray(value)) {\n    return value.slice(0).map(v => clone(v));\n  }\n\n  // best way to clone a js object maybe\n  // https://stackoverflow.com/questions/41474986/how-to-clone-a-javascript-es6-class-instance\n  const proto = Object.getPrototypeOf(value);\n  let c = Object.create(proto);\n  c = Object.setPrototypeOf(c, proto);\n  // need to make a deep copy so we dont use Object.assign\n  // also Object.assign wont copy property descriptor exactly\n  return Object.keys(value).reduce((newVal, prop) => {\n    const propDesc = Object.getOwnPropertyDescriptor(value, prop);\n    if (propDesc.get) {\n      Object.defineProperty(newVal, prop, propDesc);\n    } else {\n      newVal[prop] = clone(value[prop]);\n    }\n\n    return newVal;\n  }, c);\n}\n\nexport function defineHiddenProp(field: any, prop: string, defaultValue: any) {\n  Object.defineProperty(field, prop, { enumerable: false, writable: true, configurable: true });\n  field[prop] = defaultValue;\n}\n\nexport function wrapProperty<T = any>(\n  o: any,\n  prop: string,\n  setFn: (change: {currentValue: T, previousValue?: T, firstChange: boolean}) => void,\n) {\n  if (!o._observers) {\n    defineHiddenProp(o, '_observers', {});\n  }\n\n  if (!o._observers[prop]) {\n    o._observers[prop] = [];\n  }\n\n  let fns: typeof setFn[] = o._observers[prop];\n  if (fns.indexOf(setFn) === -1) {\n    fns.push(setFn);\n    setFn({ currentValue: o[prop], firstChange: true });\n    if (fns.length === 1) {\n      defineHiddenProp(o, `___$${prop}`, o[prop]);\n      Object.defineProperty(o, prop, {\n        configurable: true,\n        get: () => o[`___$${prop}`],\n        set: currentValue => {\n          if (currentValue !== o[`___$${prop}`]) {\n            const previousValue = o[`___$${prop}`];\n            o[`___$${prop}`] = currentValue;\n            fns.forEach(changeFn => changeFn({ previousValue, currentValue, firstChange: false }));\n          }\n        },\n      });\n    }\n  }\n\n  return () => fns.splice(fns.indexOf(setFn), 1);\n}\n\nexport function reduceFormUpdateValidityCalls(form: any, action: Function) {\n  const updateValidity = form._updateTreeValidity.bind(form);\n\n  let updateValidityArgs = { called: false, emitEvent: false };\n  form._updateTreeValidity = ({ emitEvent } = { emitEvent: true }) => updateValidityArgs = { called: true, emitEvent: emitEvent || updateValidityArgs.emitEvent };\n  action();\n\n  updateValidityArgs.called && updateValidity({ emitEvent: updateValidityArgs.emitEvent });\n  form._updateTreeValidity = updateValidity;\n}\n","import { Injectable, InjectionToken, ComponentRef } from '@angular/core';\nimport { ValidationErrors, AbstractControl } from '@angular/forms';\nimport { FieldType } from './../templates/field.type';\nimport { reverseDeepMerge, defineHiddenProp } from './../utils';\nimport { FormlyFieldConfig, FormlyFieldConfigCache } from '../components/formly.field.config';\nimport { Observable } from 'rxjs';\n\nexport const FORMLY_CONFIG = new InjectionToken<FormlyConfig>('FORMLY_CONFIG');\n\n/** @experimental */\nexport interface FormlyExtension {\n  prePopulate?(field: FormlyFieldConfig): void;\n  onPopulate?(field: FormlyFieldConfig): void;\n  postPopulate?(field: FormlyFieldConfig): void;\n}\n\n/**\n * Maintains list of formly field directive types. This can be used to register new field templates.\n */\n@Injectable({ providedIn: 'root' })\nexport class FormlyConfig {\n  types: {[name: string]: TypeOption} = {};\n  validators: { [name: string]: ValidatorOption } = {};\n  wrappers: { [name: string]: WrapperOption } = {};\n  messages: { [name: string]: ValidationMessageOption['message'] } = {};\n  templateManipulators: {\n    preWrapper: ManipulatorWrapper[];\n    postWrapper: ManipulatorWrapper[];\n  } = {\n    preWrapper: [],\n    postWrapper: [],\n  };\n  extras: ConfigOption['extras'] = {\n    checkExpressionOn: 'changeDetectionCheck',\n    lazyRender: false,\n    showError: function(field: FieldType) {\n      return field.formControl && field.formControl.invalid && (field.formControl.touched || (field.options.parentForm && field.options.parentForm.submitted) || !!(field.field.validation && field.field.validation.show));\n    },\n  };\n  extensions: { [name: string]: FormlyExtension } = {};\n\n  addConfig(config: ConfigOption) {\n    if (config.types) {\n      config.types.forEach(type => this.setType(type));\n    }\n    if (config.validators) {\n      config.validators.forEach(validator => this.setValidator(validator));\n    }\n    if (config.wrappers) {\n      config.wrappers.forEach(wrapper => this.setWrapper(wrapper));\n    }\n    if (config.manipulators) {\n      console.warn(`NgxFormly: passing 'manipulators' config is deprecated, use custom extension instead.`);\n      config.manipulators.forEach(manipulator => this.setManipulator(manipulator));\n    }\n    if (config.validationMessages) {\n      config.validationMessages.forEach(validation => this.addValidatorMessage(validation.name, validation.message));\n    }\n    if (config.extensions) {\n      config.extensions.forEach(c => this.extensions[c.name] = c.extension);\n    }\n    if (config.extras) {\n      this.extras = { ...this.extras, ...config.extras };\n    }\n  }\n\n  setType(options: TypeOption | TypeOption[]) {\n    if (Array.isArray(options)) {\n      options.forEach((option) => this.setType(option));\n    } else {\n      if (!this.types[options.name]) {\n        this.types[options.name] = <TypeOption>{ name: options.name };\n      }\n\n      ['component', 'extends', 'defaultOptions', 'wrappers'].forEach(prop => {\n        if (options.hasOwnProperty(prop)) {\n          this.types[options.name][prop] = options[prop];\n        }\n      });\n    }\n  }\n\n  getType(name: string): TypeOption {\n    if (!this.types[name]) {\n      throw new Error(`[Formly Error] The type \"${name}\" could not be found. Please make sure that is registered through the FormlyModule declaration.`);\n    }\n\n    this.mergeExtendedType(name);\n\n    return this.types[name];\n  }\n\n  getMergedField(field: FormlyFieldConfig = {}): any {\n    const type = this.getType(field.type);\n    if (type.defaultOptions) {\n      reverseDeepMerge(field, type.defaultOptions);\n    }\n\n    const extendDefaults = type.extends && this.getType(type.extends).defaultOptions;\n    if (extendDefaults) {\n      reverseDeepMerge(field, extendDefaults);\n    }\n\n    if (field && field.optionsTypes) {\n      field.optionsTypes.forEach(option => {\n        const defaultOptions = this.getType(option).defaultOptions;\n        if (defaultOptions) {\n          reverseDeepMerge(field, defaultOptions);\n        }\n      });\n    }\n\n    const componentRef = this.resolveFieldTypeRef(field);\n    if (componentRef && componentRef.instance && componentRef.instance.defaultOptions) {\n      reverseDeepMerge(field, componentRef.instance.defaultOptions);\n    }\n\n    if (!field.wrappers && type.wrappers) {\n      field.wrappers = [...type.wrappers];\n    }\n  }\n\n  /** @internal */\n  resolveFieldTypeRef(field: FormlyFieldConfigCache = {}): ComponentRef<FieldType> {\n    if (!field.type) {\n      return null;\n    }\n\n    const type = this.getType(field.type);\n    if (!type.component || type['_componentRef']) {\n      return type['_componentRef'];\n    }\n\n    const { _resolver, _injector } = field.parent.options;\n    const componentRef = _resolver\n      .resolveComponentFactory<FieldType>(type.component)\n      .create(_injector);\n\n    defineHiddenProp(type, '_componentRef', componentRef);\n    componentRef.destroy();\n\n    return type['_componentRef'];\n  }\n\n  setWrapper(options: WrapperOption) {\n    this.wrappers[options.name] = options;\n    if (options.types) {\n      options.types.forEach((type) => {\n        this.setTypeWrapper(type, options.name);\n      });\n    }\n  }\n\n  getWrapper(name: string): WrapperOption {\n    if (!this.wrappers[name]) {\n      throw new Error(`[Formly Error] The wrapper \"${name}\" could not be found. Please make sure that is registered through the FormlyModule declaration.`);\n    }\n\n    return this.wrappers[name];\n  }\n\n  setTypeWrapper(type: string, name: string) {\n    if (!this.types[type]) {\n      this.types[type] = <TypeOption>{};\n    }\n    if (!this.types[type].wrappers) {\n      this.types[type].wrappers = [];\n    }\n    if (this.types[type].wrappers.indexOf(name) === -1) {\n      this.types[type].wrappers.push(name);\n    }\n  }\n\n  setValidator(options: ValidatorOption) {\n    this.validators[options.name] = options;\n  }\n\n  getValidator(name: string): ValidatorOption {\n    if (!this.validators[name]) {\n      throw new Error(`[Formly Error] The validator \"${name}\" could not be found. Please make sure that is registered through the FormlyModule declaration.`);\n    }\n\n    return this.validators[name];\n  }\n\n  addValidatorMessage(name: string, message: ValidationMessageOption['message']) {\n    this.messages[name] = message;\n  }\n\n  getValidatorMessage(name: string) {\n    return this.messages[name];\n  }\n\n  setManipulator(manipulator: ManipulatorOption) {\n    new manipulator.class()[manipulator.method](this);\n  }\n\n  private mergeExtendedType(name: string) {\n    if (!this.types[name].extends) {\n      return;\n    }\n\n    const extendedType = this.getType(this.types[name].extends);\n    if (!this.types[name].component) {\n      this.types[name].component = extendedType.component;\n    }\n\n    if (!this.types[name].wrappers) {\n      this.types[name].wrappers = extendedType.wrappers;\n    }\n  }\n}\nexport interface TypeOption {\n  name: string;\n  component?: any;\n  wrappers?: string[];\n  extends?: string;\n  defaultOptions?: FormlyFieldConfig;\n}\n\nexport interface WrapperOption {\n  name: string;\n  component: any;\n  types?: string[];\n}\n\nexport interface FieldValidatorFn {\n  (c: AbstractControl, field: FormlyFieldConfig, options?: { [id: string]: any; }): ValidationErrors | null;\n}\n\nexport interface ValidatorOption {\n  name: string;\n  validation: FieldValidatorFn;\n  options?: { [id: string]: any };\n}\n\nexport interface ExtensionOption {\n  name: string;\n  extension: FormlyExtension;\n}\n\nexport interface ValidationMessageOption {\n  name: string;\n  message: string | ((error: any, field: FormlyFieldConfig) => string | Observable<string>);\n}\n\nexport interface ManipulatorOption {\n  class?: { new (): any };\n  method?: string;\n}\n\nexport interface ManipulatorWrapper {\n  (f: FormlyFieldConfig): string;\n}\n\nexport interface TemplateManipulators {\n  preWrapper?: ManipulatorWrapper[];\n  postWrapper?: ManipulatorWrapper[];\n}\n\nexport interface ConfigOption {\n  types?: TypeOption[];\n  wrappers?: WrapperOption[];\n  validators?: ValidatorOption[];\n  extensions?: ExtensionOption[];\n  validationMessages?: ValidationMessageOption[];\n\n  /** @deprecated use `extensions` instead */\n  manipulators?: ManipulatorOption[];\n  extras?: {\n    /** @deprecated use `extensions` instead */\n    fieldTransform?: any,\n    immutable?: boolean,\n    showError?: (field: FieldType) => boolean;\n\n    /**\n     * Defines the option which formly rely on to check field expression properties.\n     * - `modelChange`: perform a check when the value of the form control changes (Will be set by default in the next major version).\n     * - `changeDetectionCheck`: triggers an immediate check when `ngDoCheck` is called.\n     *\n     * Defaults to `changeDetectionCheck`.\n     */\n    checkExpressionOn?: 'modelChange' | 'changeDetectionCheck',\n\n    /**\n     * Whether to lazily render field components or not when marked as hidden.\n     * - `true`: lazily render field components (Will be set by default in the next major version).\n     * - `false`: render field components and use CSS to control their visibility.\n     *\n     * Defaults to `false`.\n     */\n    lazyRender?: boolean,\n\n    /**\n     * When true, reset the value of hidden fields.\n     *\n     * Defaults to `false`.\n     */\n    resetFieldOnHide?: boolean,\n  };\n}\n","import { Injectable, ComponentFactoryResolver, Injector, ChangeDetectorRef } from '@angular/core';\nimport { FormGroup, FormArray } from '@angular/forms';\nimport { FormlyConfig } from './formly.config';\nimport { FormlyFieldConfig, FormlyFormOptions, FormlyFieldConfigCache, FormlyValueChangeEvent, FormlyFormOptionsCache } from '../components/formly.field.config';\nimport { Subject } from 'rxjs';\nimport { defineHiddenProp, reduceFormUpdateValidityCalls } from '../utils';\n\n@Injectable({ providedIn: 'root' })\nexport class FormlyFormBuilder {\n  constructor(\n    private formlyConfig: FormlyConfig,\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private injector: Injector,\n  ) {}\n\n  buildForm(formControl: FormGroup | FormArray, fieldGroup: FormlyFieldConfig[] = [], model: any, options: FormlyFormOptions) {\n    if (!this.formlyConfig.extensions.core) {\n      throw new Error('NgxFormly: missing `forRoot()` call. use `forRoot()` when registering the `FormlyModule`.');\n    }\n\n    const field = { fieldGroup, model, formControl, options: this._setOptions(options) };\n    reduceFormUpdateValidityCalls(formControl, () => this._buildForm(field));\n    field.options._checkField(field, true);\n  }\n\n  private _buildForm(field: FormlyFieldConfigCache) {\n    this.getExtensions().forEach(extension => extension.prePopulate && extension.prePopulate(field));\n    this.getExtensions().forEach(extension => extension.onPopulate && extension.onPopulate(field));\n\n    if (field.fieldGroup) {\n      field.fieldGroup.forEach((f) => this._buildForm(f));\n    }\n\n    this.getExtensions().forEach(extension => extension.postPopulate && extension.postPopulate(field));\n  }\n\n  private getExtensions() {\n    return Object.keys(this.formlyConfig.extensions).map(name => this.formlyConfig.extensions[name]);\n  }\n\n  private _setOptions(options: FormlyFormOptionsCache) {\n    options = options || {};\n    options.formState = options.formState || {};\n\n    if (!options.showError) {\n      options.showError = this.formlyConfig.extras.showError;\n    }\n\n    if (!options.fieldChanges) {\n      defineHiddenProp(options, 'fieldChanges', new Subject<FormlyValueChangeEvent>());\n    }\n\n    if (!options._resolver) {\n      defineHiddenProp(options, '_resolver', this.componentFactoryResolver);\n    }\n\n    if (!options._injector) {\n      defineHiddenProp(options, '_injector', this.injector);\n    }\n\n    if (!options._hiddenFieldsForCheck) {\n      options._hiddenFieldsForCheck = [];\n    }\n\n    if (!options._markForCheck) {\n      options._markForCheck = (field) => {\n        if (field._componentRefs) {\n          field._componentRefs.forEach(ref => {\n            // NOTE: we cannot use ref.changeDetectorRef, see https://github.com/ngx-formly/ngx-formly/issues/2191\n            const changeDetectorRef = ref.injector.get(ChangeDetectorRef);\n            changeDetectorRef.markForCheck();\n          });\n        }\n\n        if (field.fieldGroup) {\n          field.fieldGroup.forEach(f => options._markForCheck(f));\n        }\n      };\n    }\n\n    if (!options._buildField) {\n      options._buildField = (field: FormlyFieldConfig) => {\n        this.buildForm(field.form, field.fieldGroup, field.model, field.options);\n        return field;\n      };\n    }\n\n    return options;\n  }\n}\n","import { FormArray, FormGroup, FormControl, AbstractControl } from '@angular/forms';\nimport { FormlyFieldConfig } from '../../core';\nimport { getKeyPath, getFieldValue, isNullOrUndefined, defineHiddenProp, wrapProperty } from '../../utils';\nimport { FormlyFieldConfigCache } from '../../components/formly.field.config';\nimport { EventEmitter } from '@angular/core';\n\nexport function unregisterControl(field: FormlyFieldConfig, emitEvent = false) {\n  const form = field.formControl.parent as FormArray | FormGroup;\n  if (!form) {\n    return;\n  }\n\n  const control = field.formControl;\n  const opts = { emitEvent };\n  if (form instanceof FormArray) {\n    const key = form.controls.findIndex(c => c === control);\n    if (key !== -1) {\n      updateControl(form, opts, () => form.removeAt(key));\n    }\n  } else if (form instanceof FormGroup) {\n    const paths = getKeyPath(field);\n    const key = paths[paths.length - 1];\n    if (form.get([key]) === control) {\n      updateControl(form, opts, () => form.removeControl(key));\n    }\n  }\n\n  control.setParent(null);\n}\n\nexport function findControl(field: FormlyFieldConfig): AbstractControl {\n  if (field.formControl) {\n    return field.formControl;\n  }\n\n  if (field['shareFormControl'] === false) {\n    return null;\n  }\n\n  const form = field.parent.formControl as FormGroup;\n\n  return form ? form.get(getKeyPath(field)) : null;\n}\n\nexport function registerControl(field: FormlyFieldConfigCache, control?: any, emitEvent = false) {\n  control = control || field.formControl;\n  if (!control['_fields']) {\n    defineHiddenProp(control, '_fields', []);\n  }\n  if (control['_fields'].indexOf(field) === -1) {\n    control['_fields'].push(field);\n  }\n\n  if (!field.formControl && control) {\n    defineHiddenProp(field, 'formControl', control);\n\n    field.templateOptions.disabled = !!field.templateOptions.disabled;\n    wrapProperty(field.templateOptions, 'disabled', ({ firstChange, currentValue }) => {\n      if (!firstChange) {\n        currentValue ? field.formControl.disable() : field.formControl.enable();\n      }\n    });\n    if (control.registerOnDisabledChange) {\n      control.registerOnDisabledChange(\n        (value: boolean) => {\n          field.templateOptions['___$disabled'] = value;\n          // TODO remove in V6\n          field.options && field.options._markForCheck(field);\n        },\n      );\n    }\n  }\n\n  let parent = field.parent.formControl as FormGroup;\n  if (!parent || !field.key) {\n    return;\n  }\n\n  const paths = getKeyPath(field);\n  const value = getFieldValue(field);\n  if (\n    !(isNullOrUndefined(control.value) && isNullOrUndefined(value))\n    && control.value !== value\n    && control instanceof FormControl\n  ) {\n    control.patchValue(value);\n  }\n\n  for (let i = 0; i < (paths.length - 1); i++) {\n    const path = paths[i];\n    if (!parent.get([path])) {\n      updateControl(\n        parent,\n        { emitEvent },\n        () => parent.setControl(path, new FormGroup({})),\n      );\n    }\n\n    parent = <FormGroup> parent.get([path]);\n  }\n\n  const key = paths[paths.length - 1];\n  if (!field._hide && parent.get([key]) !== control) {\n    updateControl(\n      parent,\n      { emitEvent },\n      () => parent.setControl(key, control),\n    );\n  }\n}\n\nexport function updateValidity(c: AbstractControl) {\n  const status = c.status;\n  c.updateValueAndValidity({ emitEvent: false });\n  if (status !== c.status) {\n    (c.statusChanges as EventEmitter<string>).emit(c.status);\n  }\n}\n\nfunction updateControl(form: FormGroup|FormArray, opts: { emitEvent: boolean }, action: Function) {\n  /**\n   *  workaround for https://github.com/angular/angular/issues/27679\n   */\n  if (form instanceof FormGroup && !form['__patchForEachChild']) {\n    defineHiddenProp(form, '__patchForEachChild', true);\n    (form as any)._forEachChild = (cb: Function) => {\n      Object\n        .keys(form.controls)\n        .forEach(k => form.controls[k] && cb(form.controls[k], k));\n    };\n  }\n\n  /**\n   * workaround for https://github.com/angular/angular/issues/20439\n   */\n  const updateValueAndValidity = form.updateValueAndValidity.bind(form);\n  if (opts.emitEvent === false) {\n    form.updateValueAndValidity = (opts) => {\n      updateValueAndValidity({ ...(opts || {}), emitEvent: false });\n    };\n  }\n\n  action();\n\n  if (opts.emitEvent === false) {\n    form.updateValueAndValidity = updateValueAndValidity;\n  }\n}\n\nexport function clearControl(form: AbstractControl) {\n  form['_fields'] && delete form['_fields'];\n  form.setValidators(null);\n  form.setAsyncValidators(null);\n\n  if (form instanceof FormGroup || form instanceof FormArray) {\n    Object.keys(form.controls)\n      .forEach((k) => clearControl(form.controls[k]));\n  }\n}\n","import { Component, DoCheck, OnChanges, Input, SimpleChanges, Optional, EventEmitter, Output, OnDestroy, Attribute, ViewChild, ElementRef, NgZone } from '@angular/core';\nimport { FormGroup, FormArray, FormGroupDirective, FormControl } from '@angular/forms';\nimport { FormlyFieldConfig, FormlyFormOptions, FormlyFormOptionsCache } from './formly.field.config';\nimport { FormlyFormBuilder } from '../services/formly.form.builder';\nimport { FormlyConfig } from '../services/formly.config';\nimport { assignFieldValue, isNullOrUndefined, wrapProperty, clone, defineHiddenProp, getKeyPath, isObject } from '../utils';\nimport { Subscription, Subject } from 'rxjs';\nimport { debounceTime, switchMap, distinctUntilChanged, take } from 'rxjs/operators';\nimport { clearControl } from '../extensions/field-form/utils';\n\n@Component({\n  selector: 'formly-form',\n  template: `\n    <formly-field *ngFor=\"let field of fields\"\n      hide-deprecation\n      [form]=\"field.form\"\n      [options]=\"field.options\"\n      [model]=\"field.model\"\n      [field]=\"field\">\n    </formly-field>\n    <ng-container #content>\n      <ng-content></ng-content>\n    </ng-container>\n  `,\n  providers: [FormlyFormBuilder],\n})\nexport class FormlyForm implements DoCheck, OnChanges, OnDestroy {\n  @Input() form: FormGroup | FormArray;\n\n  @Input()\n  set model(model: any) { this._model = this.immutable ? clone(model) : model; }\n  get model() {\n    if (!this._model) {\n      this._model = {};\n    }\n\n    return this._model;\n  }\n\n  @Input()\n  set fields(fields: FormlyFieldConfig[]) { this._fields = this.immutable ? clone(fields) : fields; }\n  get fields() { return this._fields || []; }\n\n  @Input()\n  set options(options: FormlyFormOptions) { this._options = this.immutable ? clone(options) : options; }\n  get options() { return this._options; }\n\n  @Output() modelChange = new EventEmitter<any>();\n  @ViewChild('content') set content(content: ElementRef<HTMLElement>) {\n    if (content && content.nativeElement.nextSibling) {\n      console.warn(`NgxFormly: content projection for 'formly-form' component is deprecated since v5.5, you should avoid passing content inside the 'formly-form' tag.`);\n    }\n  }\n\n  private immutable = false;\n  private _model: any;\n  private _modelChangeValue: any = {};\n  private _fields: FormlyFieldConfig[];\n  private _options: FormlyFormOptions;\n  private modelChangeSubs: Subscription[] = [];\n  private modelChange$ = new Subject<void>();\n  private modelChangeSub = this.modelChange$.pipe(\n    switchMap(() => this.ngZone.onStable.asObservable().pipe(take(1))),\n  ).subscribe(() => this.ngZone.runGuarded(() => {\n    // runGuarded is used to keep the expression changes in-sync\n    // https://github.com/ngx-formly/ngx-formly/issues/2095\n    this.checkExpressionChange();\n    this.modelChange.emit(this._modelChangeValue = clone(this.model));\n  }));\n\n  constructor(\n    private formlyBuilder: FormlyFormBuilder,\n    private formlyConfig: FormlyConfig,\n    private ngZone: NgZone,\n    // tslint:disable-next-line\n    @Attribute('immutable') immutable,\n    @Optional() private parentFormGroup: FormGroupDirective,\n  ) {\n    if (immutable !== null) {\n      console.warn(`NgxFormly: passing 'immutable' attribute to 'formly-form' component is deprecated since v5.5, enable immutable mode through NgModule declaration instead.`);\n    }\n\n    this.immutable = (immutable !== null) || !!formlyConfig.extras.immutable;\n  }\n\n  ngDoCheck() {\n    if (this.formlyConfig.extras.checkExpressionOn === 'changeDetectionCheck') {\n      this.checkExpressionChange();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    // https://github.com/ngx-formly/ngx-formly/issues/2294\n    if (changes.model && this.field) {\n      this.field.model = this.model;\n    }\n\n    if (changes.fields && this.form) {\n      clearControl(this.form);\n    }\n\n    if (changes.fields || changes.form || (changes.model && this._modelChangeValue !== changes.model.currentValue)) {\n      this.form = this.form || (new FormGroup({}));\n      this.setOptions();\n      this.options.updateInitialValue();\n      this.clearModelSubscriptions();\n      this.formlyBuilder.buildForm(this.form, this.fields, this.model, this.options);\n      this.trackModelChanges(this.fields);\n    }\n  }\n\n  ngOnDestroy() {\n    this.modelChangeSub.unsubscribe();\n    this.clearModelSubscriptions();\n  }\n\n  changeModel({ key, value, field }: { key: string, value: any, field: FormlyFieldConfig }) {\n    assignFieldValue(field, value);\n    this.modelChange$.next();\n  }\n\n  setOptions() {\n    if (!this.options) {\n      this.options = {};\n    }\n\n    if (!this.options.resetModel) {\n      this.options.resetModel = (model ?: any) => {\n        model = clone(isNullOrUndefined(model) ? (<FormlyFormOptionsCache> this.options)._initialModel : model);\n        if (this.model) {\n          Object.keys(this.model).forEach(k => delete this.model[k]);\n          Object.assign(this.model, model || {});\n        }\n\n        (<FormlyFormOptionsCache> this.options)._buildForm();\n\n        // we should call `NgForm::resetForm` to ensure changing `submitted` state after resetting form\n        // but only when the current component is a root one.\n        if (this.options.parentForm && this.options.parentForm.control === this.form) {\n          this.options.parentForm.resetForm(this.model);\n        } else {\n          this.form.reset(this.model);\n        }\n      };\n    }\n\n    if (!this.options.parentForm && this.parentFormGroup) {\n      defineHiddenProp(this.options, 'parentForm', this.parentFormGroup);\n      wrapProperty(this.options.parentForm, 'submitted', ({ firstChange }) => {\n        if (!firstChange) {\n          this.checkExpressionChange();\n          (<FormlyFormOptionsCache> this.options)._markForCheck({\n            fieldGroup: this.fields,\n            model: this.model,\n            formControl: this.form,\n            options: this.options,\n          });\n        }\n      });\n    }\n\n    if (!this.options.updateInitialValue) {\n      this.options.updateInitialValue = () => (<FormlyFormOptionsCache> this.options)._initialModel = clone(this.model);\n    }\n\n    if (!(<FormlyFormOptionsCache> this.options)._buildForm) {\n      (<FormlyFormOptionsCache> this.options)._buildForm = (emitModelChange = false) => {\n        this.clearModelSubscriptions();\n        this.formlyBuilder.buildForm(this.form, this.fields, this.model, this.options);\n        this.trackModelChanges(this.fields);\n\n        if (emitModelChange) {\n          this.modelChange.emit(this._modelChangeValue = clone(this.model));\n        }\n      };\n    }\n  }\n\n  private checkExpressionChange() {\n    if (this.options && (<FormlyFormOptionsCache> this.options)._checkField) {\n      (<FormlyFormOptionsCache> this.options)._checkField({\n        fieldGroup: this.fields,\n        model: this.model,\n        formControl: this.form,\n        options: this.options,\n      });\n    }\n  }\n\n  private trackModelChanges(fields: FormlyFieldConfig[], rootKey: string[] = []) {\n    fields.forEach(field => {\n      if (field.key && !field.fieldGroup) {\n        const control = field.formControl;\n        let valueChanges = control.valueChanges.pipe(\n          distinctUntilChanged((x, y) => {\n            if (x !== y || Array.isArray(x) || isObject(x)) {\n              return false;\n            }\n\n            return true;\n          }),\n        );\n\n        const { updateOn, debounce } = field.modelOptions;\n        if ((!updateOn || updateOn === 'change') && debounce && debounce.default > 0) {\n          valueChanges = control.valueChanges.pipe(debounceTime(debounce.default));\n        }\n\n        this.modelChangeSubs.push(valueChanges.subscribe((value) => {\n          // workaround for https://github.com/angular/angular/issues/13792\n          if (control instanceof FormControl && control['_fields'] && control['_fields'].length > 1) {\n            control.patchValue(value, { emitEvent: false, onlySelf: true });\n          }\n\n          if (field.parsers && field.parsers.length > 0) {\n            field.parsers.forEach(parserFn => value = parserFn(value));\n          }\n\n          this.changeModel({ key: [...rootKey, ...getKeyPath(field)].join('.'), value, field });\n        }));\n\n        // workaround for v5 (https://github.com/ngx-formly/ngx-formly/issues/2061)\n        const observers = control.valueChanges['observers'];\n        if (observers && observers.length > 1) {\n          observers.unshift(observers.pop());\n        }\n      }\n\n      if (field.fieldGroup && field.fieldGroup.length > 0) {\n        this.trackModelChanges(field.fieldGroup, field.key ? [...rootKey, ...getKeyPath(field)] : rootKey);\n      }\n    });\n  }\n\n  private clearModelSubscriptions() {\n    this.modelChangeSubs.forEach(sub => sub.unsubscribe());\n    this.modelChangeSubs = [];\n  }\n\n  private get field(): any {\n    return this.fields && this.fields[0] && this.fields[0].parent;\n  }\n}\n","import {\n  Component, EventEmitter, Input, Output,\n  ViewContainerRef, ViewChild, ComponentRef, SimpleChanges, Attribute, ComponentFactoryResolver,\n  OnInit, OnChanges, OnDestroy, DoCheck, AfterContentInit, AfterContentChecked, AfterViewInit, AfterViewChecked, Renderer2, ElementRef,\n} from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { FormlyConfig } from '../services/formly.config';\nimport { FormlyFieldConfig, FormlyFormOptions, FormlyFieldConfigCache } from './formly.field.config';\nimport { defineHiddenProp, wrapProperty } from '../utils';\nimport { FieldWrapper } from '../templates/field.wrapper';\nimport { FieldType } from '../templates/field.type';\nimport { isObservable } from 'rxjs';\n\n@Component({\n  selector: 'formly-field',\n  template: `<ng-template #container></ng-template>`,\n})\nexport class FormlyField implements OnInit, OnChanges, DoCheck, AfterContentInit, AfterContentChecked, AfterViewInit, AfterViewChecked, OnDestroy {\n  @Input() field: FormlyFieldConfig;\n\n  warnDeprecation = false;\n\n  @Input() set model(m: any) {\n    this.warnDeprecation && console.warn(`NgxFormly: passing 'model' input to '${this.constructor.name}' component is not required anymore, you may remove it!`);\n  }\n\n  @Input() set form(form: FormGroup) {\n    this.warnDeprecation && console.warn(`NgxFormly: passing 'form' input to '${this.constructor.name}' component is not required anymore, you may remove it!`);\n  }\n\n  @Input() set options(options: FormlyFormOptions) {\n    this.warnDeprecation && console.warn(`NgxFormly: passing 'options' input to '${this.constructor.name}' component is not required anymore, you may remove it!`);\n  }\n\n  @Output() modelChange: EventEmitter<any> = new EventEmitter();\n  // TODO: remove `any`, once dropping angular `V7` support.\n  @ViewChild('container', <any> {read: ViewContainerRef, static: true }) containerRef: ViewContainerRef;\n  private hostObservers: Function[] = [];\n  private componentRefs: any[] = [];\n  private hooksObservers: Function[] = [];\n\n  constructor(\n    private formlyConfig: FormlyConfig,\n    private renderer: Renderer2,\n    private resolver: ComponentFactoryResolver,\n    private elementRef: ElementRef,\n    // tslint:disable-next-line\n    @Attribute('hide-deprecation') hideDeprecation,\n  ) {\n    this.warnDeprecation = hideDeprecation === null;\n  }\n\n  ngAfterContentInit() {\n    this.triggerHook('afterContentInit');\n  }\n\n  ngAfterContentChecked() {\n    this.triggerHook('afterContentChecked');\n  }\n\n  ngAfterViewInit() {\n    this.triggerHook('afterViewInit');\n  }\n\n  ngAfterViewChecked() {\n    this.triggerHook('afterViewChecked');\n  }\n\n  ngDoCheck() {\n    this.triggerHook('doCheck');\n  }\n\n  ngOnInit() {\n    this.triggerHook('onInit');\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.triggerHook('onChanges', changes);\n  }\n\n  ngOnDestroy() {\n    this.resetRefs(this.field);\n    this.hostObservers.forEach(unsubscribe => unsubscribe());\n    this.hooksObservers.forEach(unsubscribe => unsubscribe());\n    this.triggerHook('onDestroy');\n  }\n\n  private renderField(containerRef: ViewContainerRef, f: FormlyFieldConfigCache, wrappers: string[] = []) {\n    if (this.containerRef === containerRef) {\n      this.resetRefs(this.field);\n      this.containerRef.clear();\n      wrappers = this.field ? this.field.wrappers : [];\n    }\n\n    if (wrappers && wrappers.length > 0) {\n      const [wrapper, ...wps] = wrappers;\n      const { component } = this.formlyConfig.getWrapper(wrapper);\n\n      const ref = containerRef.createComponent<FieldWrapper>(this.resolver.resolveComponentFactory(component));\n      this.attachComponentRef(ref, f);\n      wrapProperty<ViewContainerRef>(ref.instance, 'fieldComponent', ({ firstChange, previousValue, currentValue }) => {\n        if (currentValue) {\n          const viewRef = previousValue ? previousValue.detach() : null;\n          if (viewRef && !viewRef.destroyed) {\n            currentValue.insert(viewRef);\n          } else {\n            this.renderField(currentValue, f, wps);\n          }\n\n          !firstChange && ref.changeDetectorRef.detectChanges();\n        }\n      });\n    } else if (f && f.type) {\n      const { component } = this.formlyConfig.getType(f.type);\n      const ref = containerRef.createComponent<FieldWrapper>(this.resolver.resolveComponentFactory(component));\n      this.attachComponentRef(ref, f);\n    }\n  }\n\n  private triggerHook(name: string, changes?: SimpleChanges) {\n    if (this.field && this.field.hooks && this.field.hooks[name]) {\n      if (!changes || changes.field) {\n        const r = this.field.hooks[name](this.field);\n        if (isObservable(r) && ['onInit', 'afterContentInit', 'afterViewInit'].indexOf(name) !== -1) {\n          const sub = r.subscribe();\n          this.hooksObservers.push(() => sub.unsubscribe());\n        }\n      }\n    }\n\n    if (this.field && this.field.lifecycle && this.field.lifecycle[name]) {\n      this.field.lifecycle[name](\n        this.field.form,\n        this.field,\n        this.field.model,\n        this.field.options,\n      );\n    }\n\n    if (name === 'onChanges' && changes.field) {\n      this.resetRefs(changes.field.previousValue);\n      this.render();\n    }\n  }\n\n  private attachComponentRef<T extends FieldType>(ref: ComponentRef<T>, field: FormlyFieldConfigCache) {\n    this.componentRefs.push(ref);\n    field._componentRefs.push(ref);\n    Object.assign(ref.instance, { field });\n  }\n\n  private render() {\n    if (!this.field) {\n      return;\n    }\n\n    this.hostObservers.forEach(unsubscribe => unsubscribe());\n    this.hostObservers = [\n      wrapProperty(this.field, 'hide', ({ firstChange, currentValue }) => {\n        if (!this.formlyConfig.extras.lazyRender) {\n          firstChange && this.renderField(this.containerRef, this.field);\n          if (!firstChange || (firstChange && currentValue)) {\n            this.renderer.setStyle(this.elementRef.nativeElement, 'display', currentValue ? 'none' : '');\n          }\n        } else {\n          if (currentValue) {\n            this.containerRef.clear();\n          } else {\n            this.renderField(this.containerRef, this.field);\n          }\n        }\n      }),\n      wrapProperty(this.field, 'className', ({ firstChange, currentValue }) => {\n        if (!firstChange || (firstChange && currentValue)) {\n          this.renderer.setAttribute(this.elementRef.nativeElement, 'class', currentValue);\n        }\n      }),\n    ];\n  }\n\n  private resetRefs(field: FormlyFieldConfigCache) {\n    if (field) {\n      if (field._componentRefs) {\n        field._componentRefs = field._componentRefs.filter(ref => this.componentRefs.indexOf(ref) === -1);\n      } else {\n        defineHiddenProp(this.field, '_componentRefs', []);\n      }\n    }\n\n    this.componentRefs = [];\n  }\n}\n","import { Directive, ElementRef, Input, OnChanges, SimpleChanges, Renderer2, DoCheck, Inject, OnDestroy } from '@angular/core';\nimport { FormlyFieldConfig, FormlyTemplateOptions } from './formly.field.config';\nimport { wrapProperty, defineHiddenProp, FORMLY_VALIDATORS } from '../utils';\nimport { DOCUMENT } from '@angular/common';\n\n@Directive({\n  selector: '[formlyAttributes]',\n  host: {\n    '(focus)': 'onFocus($event)',\n    '(blur)': 'onBlur($event)',\n    '(change)': 'onChange($event)',\n  },\n})\nexport class FormlyAttributes implements OnChanges, DoCheck, OnDestroy {\n  @Input('formlyAttributes') field: FormlyFieldConfig;\n  @Input() id: string;\n\n  private document: Document;\n  private uiAttributesCache: any = {};\n  private uiAttributes = [\n    ...FORMLY_VALIDATORS,\n    'tabindex',\n    'placeholder',\n    'readonly',\n    'disabled',\n    'step',\n  ];\n\n  /**\n   * HostBinding doesn't register listeners conditionally which may produce some perf issues.\n   *\n   * Formly issue: https://github.com/ngx-formly/ngx-formly/issues/1991\n   */\n  private uiEvents = {\n    listeners: [],\n    events: [\n      'click',\n      'keyup',\n      'keydown',\n      'keypress',\n    ],\n  };\n\n  get to(): FormlyTemplateOptions { return this.field.templateOptions || {}; }\n\n  private get fieldAttrElements(): ElementRef[] { return (this.field && this.field['_elementRefs']) || []; }\n\n  constructor(\n    private renderer: Renderer2,\n    private elementRef: ElementRef,\n    @Inject(DOCUMENT) _document: any,\n  ) {\n    this.document = _document;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.field) {\n      this.field.name && this.setAttribute('name', this.field.name);\n      this.uiEvents.listeners.forEach(listener => listener());\n      this.uiEvents.events.forEach(eventName => {\n        if (this.to && this.to[eventName]) {\n          this.uiEvents.listeners.push(\n            this.renderer.listen(\n              this.elementRef.nativeElement,\n              eventName,\n              (e) => this.to[eventName](this.field, e),\n            ),\n          );\n        }\n      });\n\n      if (this.to && this.to.attributes) {\n        wrapProperty(this.to, 'attributes', ({ currentValue, previousValue }) => {\n          if (previousValue) {\n            Object.keys(previousValue).forEach(attr => this.removeAttribute(attr));\n          }\n\n          if (currentValue) {\n            Object.keys(currentValue).forEach(attr => this.setAttribute(attr, currentValue[attr]));\n          }\n        });\n      }\n\n      this.detachElementRef(changes.field.previousValue);\n      this.attachElementRef(changes.field.currentValue);\n      if (this.fieldAttrElements.length === 1) {\n        !this.id && this.field.id && this.setAttribute('id', this.field.id);\n        wrapProperty(this.field, 'focus', ({ currentValue }) => {\n          this.toggleFocus(currentValue);\n        });\n      }\n    }\n\n    if (changes.id) {\n      this.setAttribute('id', this.id);\n    }\n  }\n\n  /**\n   * We need to re-evaluate all the attributes on every change detection cycle, because\n   * by using a HostBinding we run into certain edge cases. This means that whatever logic\n   * is in here has to be super lean or we risk seriously damaging or destroying the performance.\n   *\n   * Formly issue: https://github.com/ngx-formly/ngx-formly/issues/1317\n   * Material issue: https://github.com/angular/components/issues/14024\n   */\n  ngDoCheck() {\n    this.uiAttributes.forEach(attr => {\n      const value = this.to[attr];\n      if (this.uiAttributesCache[attr] !== value) {\n        this.uiAttributesCache[attr] = value;\n        if (value || value === 0) {\n          this.setAttribute(attr, value === true ? attr : `${value}`);\n        } else {\n          this.removeAttribute(attr);\n        }\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.uiEvents.listeners.forEach(listener => listener());\n    this.detachElementRef(this.field);\n  }\n\n  toggleFocus(value: boolean) {\n    const element = this.fieldAttrElements ? this.fieldAttrElements[0] : null;\n    if (!element || !element.nativeElement.focus) {\n      return;\n    }\n\n    const isFocused = !!this.document.activeElement\n      && this.fieldAttrElements\n        .some(({ nativeElement }) => this.document.activeElement === nativeElement || nativeElement.contains(this.document.activeElement));\n\n    if (value && !isFocused) {\n      element.nativeElement.focus();\n    } else if (!value && isFocused) {\n      element.nativeElement.blur();\n    }\n  }\n\n  onFocus($event: any) {\n    this.field['___$focus'] = true;\n    if (this.to.focus) {\n      this.to.focus(this.field, $event);\n    }\n  }\n\n  onBlur($event: any) {\n    this.field['___$focus'] = false;\n    if (this.to.blur) {\n      this.to.blur(this.field, $event);\n    }\n  }\n\n  onChange($event: any) {\n    if (this.to.change) {\n      this.to.change(this.field, $event);\n    }\n\n    if (this.field.formControl) {\n      this.field.formControl.markAsDirty();\n    }\n  }\n\n  private attachElementRef(f: FormlyFieldConfig) {\n    if (!f) {\n      return;\n    }\n\n    if (f['_elementRefs'] && f['_elementRefs'].indexOf(this.elementRef) === -1) {\n      f['_elementRefs'].push(this.elementRef);\n    } else {\n      defineHiddenProp(f, '_elementRefs', [this.elementRef]);\n    }\n  }\n\n  private detachElementRef(f: FormlyFieldConfig) {\n    const index = f && f['_elementRefs'] ? this.fieldAttrElements.indexOf(this.elementRef) : -1;\n    if (index !== -1) {\n      this.field['_elementRefs'].splice(index, 1);\n    }\n  }\n\n  private setAttribute(attr: string, value: string) {\n    this.renderer.setAttribute(this.elementRef.nativeElement, attr, value);\n  }\n\n  private removeAttribute(attr: string) {\n    this.renderer.removeAttribute(this.elementRef.nativeElement, attr);\n  }\n}\n","import { Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { FormlyFieldConfig } from '../components/formly.field.config';\n\nexport abstract class FieldType<F extends FormlyFieldConfig = FormlyFieldConfig> {\n  @Input() field: F;\n  defaultOptions?: F;\n\n  @Input()\n  get model() { return this.field.model; }\n  set model(m: any) { console.warn(`NgxFormly: passing 'model' input to '${this.constructor.name}' component is not required anymore, you may remove it!`); }\n\n  @Input()\n  get form() { return <FormGroup> this.field.parent.formControl; }\n  set form(form) { console.warn(`NgxFormly: passing 'form' input to '${this.constructor.name}' component is not required anymore, you may remove it!`); }\n\n  @Input()\n  get options() { return this.field.options; }\n  set options(options: F['options']) { console.warn(`NgxFormly: passing 'options' input to '${this.constructor.name}' component is not required anymore, you may remove it!`); }\n\n  get key() { return this.field.key; }\n\n  get formControl() { return this.field.formControl; }\n\n  get to() { return this.field.templateOptions || {}; }\n\n  get showError(): boolean { return this.options.showError(this); }\n\n  get id(): string { return this.field.id; }\n\n  get formState() { return this.options.formState || {}; }\n}\n\n/**\n * @deprecated use `FieldType` instead\n */\nexport abstract class Field extends FieldType {\n  constructor() {\n    super();\n    console.warn(`NgxFormly: 'Field' has been renamed to 'FieldType', extend 'FieldType' instead.`);\n  }\n}\n","import { Inject, Optional } from '@angular/core';\nimport { FormArray } from '@angular/forms';\nimport { FieldType } from './field.type';\nimport { clone, isNullOrUndefined, assignFieldValue } from '../utils';\nimport { FormlyFormBuilder } from '../services/formly.form.builder';\nimport { FormlyFieldConfig } from '../components/formly.field.config';\nimport { FORMLY_CONFIG, FormlyExtension } from '../services/formly.config';\nimport { registerControl, unregisterControl, findControl } from '../extensions/field-form/utils';\nimport { Directive } from '@angular/core';\n\n// TODO remove `selector` in V6\n// tslint:disable-next-line\n@Directive({ selector: '[ÉµfieldArray]' })\nexport abstract class FieldArrayType<F extends FormlyFieldConfig = FormlyFieldConfig> extends FieldType<F> implements FormlyExtension {\n  get formControl() {\n    return this.field.formControl as FormArray;\n  }\n\n  defaultOptions: any = {\n    defaultValue: [],\n  };\n\n  constructor(@Inject(FORMLY_CONFIG) @Optional() builder?: FormlyFormBuilder) {\n    super();\n\n    if (builder instanceof FormlyFormBuilder) {\n      console.warn(`NgxFormly: passing 'FormlyFormBuilder' to '${this.constructor.name}' type is not required anymore, you may remove it!`);\n    }\n  }\n\n  onPopulate(field: FormlyFieldConfig) {\n    if (!field.formControl && field.key) {\n      const control = findControl(field);\n      registerControl(field, control ? control : new FormArray([], { updateOn: field.modelOptions.updateOn }));\n    }\n\n    field.fieldGroup = field.fieldGroup || [];\n\n    const length = field.model ? field.model.length : 0;\n    if (field.fieldGroup.length > length) {\n      for (let i = field.fieldGroup.length - 1; i >= length; --i) {\n        unregisterControl(field.fieldGroup[i]);\n        field.fieldGroup.splice(i, 1);\n      }\n    }\n\n    for (let i = field.fieldGroup.length; i < length; i++) {\n      const f = { ...clone(field.fieldArray), key: `${i}` };\n      field.fieldGroup.push(f);\n    }\n  }\n\n  add(i?: number, initialModel?: any, { markAsDirty } = { markAsDirty: true }) {\n    i = isNullOrUndefined(i) ? this.field.fieldGroup.length : i;\n    if (!this.model) {\n      assignFieldValue(this.field, []);\n    }\n\n    this.model.splice(i, 0, initialModel ? clone(initialModel) : undefined);\n\n    (<any> this.options)._buildForm(true);\n    markAsDirty && this.formControl.markAsDirty();\n  }\n\n  remove(i: number, { markAsDirty } = { markAsDirty: true }) {\n    this.model.splice(i, 1);\n    unregisterControl(this.field.fieldGroup[i], true);\n    this.field.fieldGroup.splice(i, 1);\n    this.field.fieldGroup.forEach((f, key) => f.key = `${key}`);\n\n    (<any> this.options)._buildForm(true);\n    markAsDirty && this.formControl.markAsDirty();\n  }\n}\n","import { ViewContainerRef, ViewChild } from '@angular/core';\nimport { FieldType } from './field.type';\nimport { FormlyFieldConfig } from '../components/formly.field.config';\n\nexport abstract class FieldWrapper<F extends FormlyFieldConfig = FormlyFieldConfig> extends FieldType<F> {\n  // TODO: remove `any`, once dropping angular `V7` support.\n  @ViewChild('fieldComponent', <any>{ read: ViewContainerRef, static: false }) fieldComponent: ViewContainerRef;\n}\n","import { Component } from '@angular/core';\nimport { FieldType } from './field.type';\n\n@Component({\n  selector: 'formly-group',\n  template: `\n    <formly-field *ngFor=\"let f of field.fieldGroup\" [field]=\"f\"></formly-field>\n    <ng-content></ng-content>\n  `,\n  host: {\n    '[class]': 'field.fieldGroupClassName || \"\"',\n  },\n})\nexport class FormlyGroup extends FieldType {\n  defaultOptions = {\n    defaultValue: {},\n  };\n}\n","import { Component, Input, ChangeDetectionStrategy, OnChanges } from '@angular/core';\nimport { FormlyConfig, ValidationMessageOption } from '../services/formly.config';\nimport { FormlyFieldConfig } from '../components/formly.field.config';\nimport { isObject } from '../utils';\nimport { Observable, isObservable, of } from 'rxjs';\nimport { startWith, switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'formly-validation-message',\n  template: `{{ errorMessage$ | async }}`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FormlyValidationMessage implements OnChanges {\n  @Input() field: FormlyFieldConfig;\n  errorMessage$: Observable<string>;\n\n  constructor(private formlyConfig: FormlyConfig) {}\n\n  ngOnChanges() {\n    this.errorMessage$ = this.field.formControl.statusChanges.pipe(\n      startWith(null),\n      switchMap(() => isObservable(this.errorMessage)\n        ? this.errorMessage\n        : of(this.errorMessage),\n      ),\n    );\n  }\n\n  get errorMessage() {\n    const fieldForm = this.field.formControl;\n    for (let error in fieldForm.errors) {\n      if (fieldForm.errors.hasOwnProperty(error)) {\n        let message: ValidationMessageOption['message'] = this.formlyConfig.getValidatorMessage(error);\n\n        if (isObject(fieldForm.errors[error])) {\n          if (fieldForm.errors[error].errorPath) {\n            return;\n          }\n\n          if (fieldForm.errors[error].message) {\n            message = fieldForm.errors[error].message;\n          }\n        }\n\n        if (this.field.validation && this.field.validation.messages && this.field.validation.messages[error]) {\n          message = this.field.validation.messages[error];\n        }\n\n        if (this.field.validators && this.field.validators[error] && this.field.validators[error].message) {\n          message = this.field.validators[error].message;\n        }\n\n        if (this.field.asyncValidators && this.field.asyncValidators[error] && this.field.asyncValidators[error].message) {\n          message = this.field.asyncValidators[error].message;\n        }\n\n        if (typeof message === 'function') {\n          return message(fieldForm.errors[error], this.field);\n        }\n\n        return message;\n      }\n    }\n  }\n}\n","import { Component } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { FieldType } from './field.type';\n\n@Component({\n  selector: 'formly-template',\n  template: `<div [innerHtml]=\"template\"></div>`,\n})\nexport class FormlyTemplateType extends FieldType {\n  get template() {\n    if (this.field && (this.field.template !== this.innerHtml.template)) {\n      this.innerHtml = {\n        template: this.field.template,\n        content: this.to.safeHtml\n          ? this.sanitizer.bypassSecurityTrustHtml(this.field.template)\n          : this.field.template,\n      };\n    }\n\n    return this.innerHtml.content;\n  }\n\n  private innerHtml = { content: null, template: null };\n  constructor(private sanitizer: DomSanitizer) {\n    super();\n  }\n}\n","export function evalStringExpression(expression: string, argNames: string[]) {\n  try {\n    if (expression.indexOf('this.field') !== -1) {\n      console.warn(`NgxFormly: using 'this.field' in expressionProperties is deprecated since v5.1, use 'field' instead.`);\n    }\n\n    return Function(...argNames, `return ${expression};`) as any;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport function evalExpressionValueSetter(expression: string, argNames: string[]) {\n  try {\n    return Function(...argNames, `${expression} = expressionValue;`) as (value: any) => void;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport function evalExpression(expression: string | Function | boolean, thisArg: any, argVal: any[]): any {\n  if (expression instanceof Function) {\n    return expression.apply(thisArg, argVal);\n  } else {\n    return expression ? true : false;\n  }\n}\n","import { FormlyFieldConfig, FormlyValueChangeEvent, FormlyFieldConfigCache } from '../../components/formly.field.config';\nimport { isObject, isNullOrUndefined, isUndefined, isFunction, defineHiddenProp, wrapProperty, reduceFormUpdateValidityCalls, getFieldValue, assignFieldValue } from '../../utils';\nimport { evalExpression, evalStringExpression } from './utils';\nimport { Observable, Subscription } from 'rxjs';\nimport { FormlyExtension } from '../../services/formly.config';\nimport { unregisterControl, registerControl, updateValidity } from '../field-form/utils';\nimport { FormArray } from '@angular/forms';\n\n/** @experimental */\nexport class FieldExpressionExtension implements FormlyExtension {\n  prePopulate(field: FormlyFieldConfigCache) {\n    if (field.parent || field.options._checkField) {\n      return;\n    }\n\n    let checkLocked = false;\n    field.options._checkField = (f, ignoreCache) => {\n      if (!checkLocked) {\n        checkLocked = true;\n        reduceFormUpdateValidityCalls(\n          f.formControl,\n          () => this.checkField(f, ignoreCache),\n        );\n        checkLocked = false;\n      }\n    };\n  }\n\n  postPopulate(field: FormlyFieldConfigCache) {\n    if (!field.parent || field._expressionProperties) {\n      return;\n    }\n\n    // cache built expression\n    defineHiddenProp(field, '_expressionProperties', {});\n\n    if (field.expressionProperties) {\n      for (const key in field.expressionProperties) {\n        const expressionProperty = field.expressionProperties[key];\n\n        if (typeof expressionProperty === 'string' || isFunction(expressionProperty)) {\n          field._expressionProperties[key] = {\n            expression: this._evalExpression(\n              key,\n              expressionProperty,\n              key === 'templateOptions.disabled' && field.parent.expressionProperties && field.parent.expressionProperties.hasOwnProperty('templateOptions.disabled')\n                ? () => field.parent.templateOptions.disabled\n                : undefined,\n            ),\n          };\n          if (key === 'templateOptions.disabled') {\n            Object.defineProperty(field._expressionProperties[key], 'expressionValue', {\n              get: () => field.templateOptions.disabled,\n              set: () => { },\n              enumerable: true,\n              configurable: true,\n            });\n          }\n        } else if (expressionProperty instanceof Observable) {\n          const subscribe = () => (expressionProperty as Observable<any>)\n            .subscribe(v => {\n              this.setExprValue(field, key, v);\n              if (field.options && field.options._markForCheck) {\n                field.options._markForCheck(field);\n              }\n            });\n\n          let subscription: Subscription = subscribe();\n          const onInit = field.hooks.onInit;\n          field.hooks.onInit = () => {\n            if (subscription === null) {\n              subscription = subscribe();\n            }\n            return onInit && onInit(field);\n          };\n\n          const onDestroy = field.hooks.onDestroy;\n          field.hooks.onDestroy = () => {\n            onDestroy && onDestroy(field);\n            subscription.unsubscribe();\n            subscription = null;\n          };\n        }\n      }\n    }\n\n    if (field.hideExpression) {\n      // delete hide value in order to force re-evaluate it in FormlyFormExpression.\n      delete field.hide;\n\n      field.hideExpression = this._evalExpression(\n        'hide',\n        field.hideExpression,\n        () => {\n          let root = field.parent;\n          while (root.parent && !root.hide) {\n            root = root.parent;\n          }\n\n          return root.hide;\n        },\n      );\n    } else {\n      wrapProperty(field, 'hide', ({ currentValue, firstChange }) => {\n        field._hide = currentValue;\n        if (!firstChange || (firstChange && currentValue === true)) {\n          field.options._hiddenFieldsForCheck.push(field);\n        }\n      });\n    }\n  }\n\n  private _evalExpression(prop: string, expression, parentExpression?) {\n    return (model: any, formState: any, field: FormlyFieldConfig) => {\n      try {\n        if (typeof expression === 'string') {\n          expression = evalStringExpression(expression, ['model', 'formState', 'field']);\n        }\n\n        if (typeof expression !== 'function') {\n          expression = () => !!expression;\n        }\n\n        return (parentExpression && parentExpression()) || expression(model, formState, field);\n      } catch (error) {\n        error.message = `[Formly Error] [Expression \"${prop}\"] ${error.message}`;\n        throw error;\n      }\n    };\n  }\n\n  private checkField(field: FormlyFieldConfigCache, ignoreCache = false) {\n    this._checkField(field, ignoreCache);\n\n    field.options._hiddenFieldsForCheck\n      .sort(f => f.hide ? -1 : 1)\n      .forEach(f => this.toggleFormControl(f, !!f.hide, !ignoreCache));\n\n    field.options._hiddenFieldsForCheck = [];\n  }\n\n  private _checkField(field: FormlyFieldConfigCache, ignoreCache = false) {\n    let markForCheck = false;\n    field.fieldGroup.forEach(f => {\n      this.checkFieldExpressionChange(f, ignoreCache) && (markForCheck = true);\n      if (this.checkFieldVisibilityChange(f, ignoreCache)) {\n        field.options._hiddenFieldsForCheck.push(f);\n        markForCheck = true;\n      }\n\n      if (f.fieldGroup && f.fieldGroup.length > 0) {\n        this._checkField(f, ignoreCache);\n      }\n    });\n\n    if (markForCheck && field.options && field.options._markForCheck) {\n      field.options._markForCheck(field);\n    }\n  }\n\n  private checkFieldExpressionChange(field: FormlyFieldConfigCache, ignoreCache): boolean {\n    if (!field || !field._expressionProperties) {\n      return false;\n    }\n\n    let markForCheck = false;\n    const expressionProperties = field._expressionProperties;\n\n    for (const key in expressionProperties) {\n      let expressionValue = evalExpression(expressionProperties[key].expression, { field }, [field.model, field.options.formState, field]);\n      if (key === 'templateOptions.disabled') {\n        expressionValue = !!expressionValue;\n      }\n\n      if (\n        ignoreCache || (\n          expressionProperties[key].expressionValue !== expressionValue\n          && (!isObject(expressionValue) || JSON.stringify(expressionValue) !== JSON.stringify(expressionProperties[key].expressionValue))\n        )\n      ) {\n        markForCheck = true;\n        expressionProperties[key].expressionValue = expressionValue;\n        this.setExprValue(field, key, expressionValue);\n      }\n    }\n\n    return markForCheck;\n  }\n\n  private checkFieldVisibilityChange(field: FormlyFieldConfigCache, ignoreCache): boolean {\n    if (!field || isNullOrUndefined(field.hideExpression)) {\n      return false;\n    }\n\n    const hideExpressionResult: boolean = !!evalExpression(\n      field.hideExpression,\n      { field },\n      [field.model, field.options.formState, field],\n    );\n    let markForCheck = false;\n    if (hideExpressionResult !== field.hide || ignoreCache) {\n      markForCheck = true;\n      // toggle hide\n      field.hide = hideExpressionResult;\n      field.templateOptions.hidden = hideExpressionResult;\n    }\n\n    return markForCheck;\n  }\n\n  private setDisabledState(field: FormlyFieldConfig, value: boolean) {\n    if (field.fieldGroup) {\n      field.fieldGroup\n        .filter(f => !f.expressionProperties || !f.expressionProperties.hasOwnProperty('templateOptions.disabled'))\n        .forEach(f => this.setDisabledState(f, value));\n    }\n\n    if (field.key && field.templateOptions.disabled !== value) {\n      field.templateOptions.disabled = value;\n    }\n  }\n\n  private toggleFormControl(field: FormlyFieldConfigCache, hide: boolean, resetOnHide: boolean) {\n    if (field.formControl && field.key) {\n      defineHiddenProp(field, '_hide', !!(hide || field.hide));\n      const c = field.formControl;\n      if (c['_fields'].length > 1) {\n        updateValidity(c);\n      }\n\n      if (hide === true && c['_fields'].every(f => !!f._hide)) {\n        unregisterControl(field, true);\n        if (resetOnHide && field.resetOnHide) {\n          field.formControl.reset({ value: undefined, disabled: field.formControl.disabled });\n          if (field.fieldGroup) {\n            assignFieldValue(field, undefined);\n\n            if (field.formControl instanceof FormArray) {\n              field.fieldGroup.length = 0;\n            }\n          }\n        }\n      } else if (hide === false) {\n        if (field.resetOnHide && field.parent && !isUndefined(field.defaultValue) && isUndefined(getFieldValue(field))) {\n          assignFieldValue(field, field.defaultValue);\n        }\n        registerControl(field, undefined, true);\n        if (field.resetOnHide && field.fieldArray && (field.fieldGroup || []).length !== (field.model || []).length) {\n          (<any> field.options)._buildForm(true);\n        }\n      }\n    }\n\n    if (field.fieldGroup) {\n      field.fieldGroup\n        .filter(f => !f.hideExpression)\n        .forEach(f => this.toggleFormControl(f, hide, resetOnHide));\n    }\n\n    if (field.options.fieldChanges) {\n      field.options.fieldChanges.next(<FormlyValueChangeEvent> { field, type: 'hidden', value: hide });\n    }\n  }\n\n  private setExprValue(field: FormlyFieldConfigCache, prop: string, value: any) {\n    try {\n      let target = field;\n      const paths = (prop.indexOf('[') === -1 ? prop : prop.replace(/\\[(\\w+)\\]/g, '.$1')).split('.');\n      const lastIndex = paths.length - 1;\n      for (let i = 0; i < lastIndex; i++) {\n        target = target[paths[i]];\n      }\n\n      target[paths[lastIndex]] = value;\n    } catch (error) {\n      error.message = `[Formly Error] [Expression \"${prop}\"] ${error.message}`;\n      throw error;\n    }\n\n    if (prop === 'templateOptions.disabled' && field.key) {\n      this.setDisabledState(field, value);\n    }\n\n    if (prop.indexOf('model.') === 0) {\n      const path = prop.replace(/^model\\./, ''),\n        control = field.key && prop === path ? field.formControl : field.parent.formControl.get(path);\n\n      if (\n        control\n        && !(isNullOrUndefined(control.value) && isNullOrUndefined(value))\n        && control.value !== value\n      ) {\n        control.patchValue(value, { emitEvent: false });\n      }\n    }\n\n    this.emitExpressionChanges(field, prop, value);\n  }\n\n  private emitExpressionChanges(field: FormlyFieldConfigCache, property: string, value: any) {\n    if (!field.options.fieldChanges) {\n      return;\n    }\n\n    field.options.fieldChanges.next({\n      field: field,\n      type: 'expressionChanges',\n      property,\n      value,\n    });\n  }\n}\n","import { FormlyExtension, FormlyConfig, ValidatorOption } from '../../services/formly.config';\nimport { FormlyFieldConfigCache } from '../../components/formly.field.config';\nimport { AbstractControl, Validators, ValidatorFn } from '@angular/forms';\nimport { FORMLY_VALIDATORS, defineHiddenProp, isPromise, wrapProperty, clone, isObject } from '../../utils';\nimport { updateValidity } from '../field-form/utils';\nimport { isObservable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/** @experimental */\nexport class FieldValidationExtension implements FormlyExtension {\n  constructor(private formlyConfig: FormlyConfig) {}\n\n  onPopulate(field: FormlyFieldConfigCache) {\n    this.initFieldValidation(field, 'validators');\n    this.initFieldValidation(field, 'asyncValidators');\n  }\n\n  private initFieldValidation(field: FormlyFieldConfigCache, type: 'validators' | 'asyncValidators') {\n    const validators: ValidatorFn[] = [];\n    if (type === 'validators' && !(field.hasOwnProperty('fieldGroup') && !field.key)) {\n      validators.push(this.getPredefinedFieldValidation(field));\n    }\n\n    if (field[type]) {\n      for (const validatorName in field[type]) {\n        if (validatorName === 'validation' && !Array.isArray(field[type].validation)) {\n          field[type].validation = [field[type].validation];\n          console.warn(`NgxFormly(${field.key}): passing a non array value to the 'validation' is deprecated, pass an array instead`);\n        }\n\n        validatorName === 'validation'\n          ? validators.push(...field[type].validation.map(v => this.wrapNgValidatorFn(field, v)))\n          : validators.push(this.wrapNgValidatorFn(field, field[type][validatorName], validatorName))\n        ;\n      }\n    }\n\n    defineHiddenProp(field, '_' + type, validators);\n  }\n\n  private getPredefinedFieldValidation(field: FormlyFieldConfigCache): ValidatorFn {\n    let VALIDATORS = [];\n    FORMLY_VALIDATORS.forEach(opt => wrapProperty(field.templateOptions, opt, ({ currentValue, firstChange }) => {\n      VALIDATORS = VALIDATORS.filter(o => o !== opt);\n      if (currentValue != null && currentValue !== false) {\n        VALIDATORS.push(opt);\n      }\n      if (!firstChange && field.formControl) {\n        updateValidity(field.formControl);\n      }\n    }));\n\n    return (control: AbstractControl) => {\n      if (VALIDATORS.length === 0) {\n        return null;\n      }\n\n      return Validators.compose(VALIDATORS.map(opt => () => {\n        const value = field.templateOptions[opt];\n        switch (opt) {\n          case 'required':\n            return Validators.required(control);\n          case 'pattern':\n            return Validators.pattern(value)(control);\n          case 'minLength':\n            return Validators.minLength(value)(control);\n          case 'maxLength':\n            return Validators.maxLength(value)(control);\n          case 'min':\n            return Validators.min(value)(control);\n          case 'max':\n            return Validators.max(value)(control);\n        }\n      }))(control);\n    };\n  }\n\n  private wrapNgValidatorFn(field: FormlyFieldConfigCache, validator: any, validatorName?: string) {\n    let validatorOption: ValidatorOption = null;\n    if (typeof validator === 'string') {\n      validatorOption = clone(this.formlyConfig.getValidator(validator));\n    }\n\n    if (typeof validator === 'object' && validator.name) {\n      validatorOption = clone(this.formlyConfig.getValidator(validator.name));\n      if (validator.options) {\n        validatorOption.options = validator.options;\n      }\n    }\n\n    if (typeof validator === 'object' && validator.expression) {\n      const { expression, ...options } = validator;\n      validatorOption = {\n        name: validatorName,\n        validation: expression,\n        options: Object.keys(options).length > 0 ? options : null,\n      };\n    }\n\n    if (typeof validator === 'function') {\n      validatorOption = {\n        name: validatorName,\n        validation: validator,\n      };\n    }\n\n    return (control: AbstractControl) => {\n      const errors: any = validatorOption.validation(control, field, validatorOption.options);\n      if (isPromise(errors)) {\n        return errors.then(v => this.handleAsyncResult(field, validatorName ? !!v : v, validatorOption));\n      }\n\n      if (isObservable(errors)) {\n        return errors.pipe(map(v => this.handleAsyncResult(field, validatorName ? !!v : v, validatorOption)));\n      }\n\n      return this.handleResult(field, validatorName ? !!errors : errors, validatorOption);\n    };\n  }\n\n  private handleAsyncResult(field: FormlyFieldConfigCache, errors: any, options: ValidatorOption) {\n    // workaround for https://github.com/angular/angular/issues/13200\n    if (field.options && field.options._markForCheck) {\n      field.options._markForCheck(field);\n    }\n\n    return this.handleResult(field, errors, options);\n  }\n\n  private handleResult(field: FormlyFieldConfigCache, errors: any, { name, options }: ValidatorOption) {\n    if (typeof errors === 'boolean') {\n      errors = errors ? null : { [name]: options ? options : true };\n    }\n\n    const ctrl = field.formControl;\n    ctrl['_childrenErrors'] && ctrl['_childrenErrors'][name] && ctrl['_childrenErrors'][name]();\n\n    if (isObject(errors)) {\n      Object.keys(errors).forEach(name => {\n        const errorPath = errors[name].errorPath\n          ? errors[name].errorPath\n          : (options || {}).errorPath;\n\n        const childCtrl = errorPath ? field.formControl.get(errorPath) : null;\n        if (childCtrl) {\n          const { errorPath, ...opts } = errors[name];\n          childCtrl.setErrors({ ...(childCtrl.errors || {}), [name]: opts });\n\n          !ctrl['_childrenErrors'] && defineHiddenProp(ctrl, '_childrenErrors', {});\n          ctrl['_childrenErrors'][name] = () => {\n            const { [name]: toDelete, ...childErrors } = childCtrl.errors || {};\n            childCtrl.setErrors(Object.keys(childErrors).length === 0 ? null : childErrors);\n          };\n        }\n      });\n    }\n\n    return errors;\n  }\n}\n","import { FormlyExtension, FormlyConfig } from '../../services/formly.config';\nimport { FormlyFieldConfigCache } from '../../components/formly.field.config';\nimport { FormGroup, FormControl, AbstractControlOptions, Validators, ValidatorFn, AsyncValidatorFn } from '@angular/forms';\nimport { getFieldValue, defineHiddenProp } from '../../utils';\nimport { registerControl, findControl, updateValidity as updateControlValidity } from './utils';\nimport { of } from 'rxjs';\n\n/** @experimental */\nexport class FieldFormExtension implements FormlyExtension {\n  constructor(private config: FormlyConfig) { }\n\n  onPopulate(field: FormlyFieldConfigCache) {\n    if (!field.parent) {\n      return;\n    }\n\n    if (field.fieldGroup && !field.key) {\n      defineHiddenProp(field, 'formControl', field.parent.formControl);\n    } else {\n      this.addFormControl(field);\n    }\n  }\n\n  postPopulate(field: FormlyFieldConfigCache) {\n    if (field.parent) {\n      return;\n    }\n\n    const fieldsToUpdate = this.setValidators(field);\n    if (fieldsToUpdate.length === 0) {\n      return;\n    }\n\n    if (fieldsToUpdate.length === 1) {\n      fieldsToUpdate[0].formControl.updateValueAndValidity();\n    } else {\n      (field.formControl as any)._updateTreeValidity();\n    }\n  }\n\n  private addFormControl(field: FormlyFieldConfigCache) {\n    let control = findControl(field);\n    if (!control) {\n      const controlOptions: AbstractControlOptions = { updateOn: field.modelOptions.updateOn };\n      const value = field.key ? getFieldValue(field) : field.defaultValue;\n\n      const ref = this.config ? this.config.resolveFieldTypeRef(field) : null;\n      if (ref && ref.componentType && ref.componentType['createControl']) {\n        const component = ref.componentType;\n        console.warn(`NgxFormly: '${component.name}::createControl' is deprecated since v5.0, use 'prePopulate' hook instead.`);\n        control = component['createControl'](value, field);\n      } else if (field.fieldGroup) {\n        // TODO: move to postPopulate\n        control = new FormGroup({}, controlOptions);\n      } else {\n        control = new FormControl(value, controlOptions);\n      }\n    }\n\n    registerControl(field, control);\n  }\n\n  private setValidators(field: FormlyFieldConfigCache) {\n    let updateValidity = false;\n    if (field.key || !field.parent || (!field.key && !field.fieldGroup)) {\n      const { formControl: c } = field;\n      const disabled = field.templateOptions ? field.templateOptions.disabled : false;\n      if (disabled && c.enabled) {\n        c.disable({ emitEvent: false, onlySelf: true });\n        if (!c.parent) {\n          updateControlValidity(c);\n        } else {\n          updateValidity = true;\n        }\n      }\n\n      if (null === c.validator || null === c.asyncValidator) {\n        c.setValidators(() => {\n          const v = Validators.compose(this.mergeValidators<ValidatorFn>(field, '_validators'));\n\n          return v ? v(c) : null;\n        });\n        c.setAsyncValidators(() => {\n          const v = Validators.composeAsync(this.mergeValidators<AsyncValidatorFn>(field, '_asyncValidators'));\n\n          return v ? v(c) : of(null);\n        });\n\n        if (!c.parent) {\n          updateControlValidity(c);\n        } else {\n          updateValidity = true;\n        }\n      }\n    }\n\n    const fieldsToUpdate = updateValidity ? [field] : [];\n    (field.fieldGroup || []).forEach(f => {\n      const childrenToUpdate = this.setValidators(f);\n      if (!updateValidity) {\n        fieldsToUpdate.push(...childrenToUpdate);\n      }\n    });\n\n    return fieldsToUpdate;\n  }\n\n  private mergeValidators<T>(field: FormlyFieldConfigCache, type: '_validators' | '_asyncValidators'): T[] {\n    const validators: any = [];\n    const c = field.formControl;\n    if (c && c['_fields'] && c['_fields'].length > 1) {\n      c['_fields']\n        .filter((f: FormlyFieldConfigCache) => !f._hide)\n        .forEach((f: FormlyFieldConfigCache) => validators.push(...f[type]));\n    } else {\n      validators.push(...field[type]);\n    }\n\n    if (field.fieldGroup) {\n      field.fieldGroup\n        .filter(f => !f.key && f.fieldGroup)\n        .forEach(f => validators.push(...this.mergeValidators(f, type)));\n    }\n\n    return validators;\n  }\n}\n","import { FormlyExtension, FormlyConfig, TemplateManipulators } from '../../services/formly.config';\nimport { FormlyFieldConfigCache, FormlyFieldConfig } from '../../components/formly.field.config';\nimport { FormGroup } from '@angular/forms';\nimport { getFieldId, isUndefined, getFieldValue, reverseDeepMerge, assignFieldValue } from '../../utils';\n\n/** @experimental */\nexport class CoreExtension implements FormlyExtension {\n  private formId = 0;\n  constructor(private formlyConfig: FormlyConfig) { }\n\n  prePopulate(field: FormlyFieldConfigCache) {\n    this.getFieldComponentInstance(field).prePopulate();\n    if (field.parent) {\n      return;\n    }\n\n    const fieldTransforms = (field.options && field.options.fieldTransform) || this.formlyConfig.extras.fieldTransform;\n    (Array.isArray(fieldTransforms) ? fieldTransforms : [fieldTransforms]).forEach(fieldTransform => {\n      if (fieldTransform) {\n        console.warn(`NgxFormly: fieldTransform is deprecated since v5.0, use custom extension instead.`);\n        const fieldGroup = fieldTransform(field.fieldGroup, field.model, <FormGroup>field.formControl, field.options);\n        if (!fieldGroup) {\n          throw new Error('fieldTransform must return an array of fields');\n        }\n      }\n    });\n  }\n\n  onPopulate(field: FormlyFieldConfigCache) {\n    this.initFieldOptions(field);\n    this.getFieldComponentInstance(field).onPopulate();\n    if (field.fieldGroup) {\n      field.fieldGroup.forEach((f, index) => {\n        Object.defineProperty(f, 'parent', { get: () => field, configurable: true });\n        Object.defineProperty(f, 'index', { get: () => index, configurable: true });\n        this.formId++;\n      });\n    }\n  }\n\n  postPopulate(field: FormlyFieldConfigCache) {\n    this.getFieldComponentInstance(field).postPopulate();\n  }\n\n  private initFieldOptions(field: FormlyFieldConfigCache) {\n    const root = <FormlyFieldConfigCache> field.parent;\n    if (!root) {\n      return;\n    }\n\n    Object.defineProperty(field, 'form', { get: () => root.formControl, configurable: true });\n    Object.defineProperty(field, 'options', { get: () => root.options, configurable: true });\n    Object.defineProperty(field, 'model', {\n      get: () => field.key && field.fieldGroup ? getFieldValue(field) : root.model,\n      configurable: true,\n    });\n\n    reverseDeepMerge(field, {\n      id: getFieldId(`formly_${this.formId}`, field, field['index']),\n      hooks: {},\n      modelOptions: {},\n      templateOptions: !field.type || !field.key ? {} : {\n        label: '',\n        placeholder: '',\n        focus: false,\n        disabled: false,\n      },\n    });\n\n    if (this.formlyConfig.extras.resetFieldOnHide && field.resetOnHide !== false) {\n      field.resetOnHide = true;\n    }\n\n    if (field.lifecycle) {\n      console.warn(`NgxFormly: 'lifecycle' is deprecated since v5.0, use 'hooks' instead.`);\n    }\n\n    if (\n      field.type !== 'formly-template'\n      && (\n        field.template\n        || (field.expressionProperties && field.expressionProperties.template)\n      )\n    ) {\n      if (field.type) {\n        console.warn(`NgxFormly: passing 'type' property is not allowed when 'template' is set.`);\n      }\n      field.type = 'formly-template';\n    }\n\n    if (!field.type && field.fieldGroup) {\n      field.type = 'formly-group';\n    }\n\n    if (field.type) {\n      this.formlyConfig.getMergedField(field);\n    }\n\n    if (field.parent) {\n      let setDefaultValue = !isUndefined(field.key)\n        && !isUndefined(field.defaultValue)\n        && isUndefined(getFieldValue(field))\n        && (!field.resetOnHide || !(field.hide || field.hideExpression));\n      if (setDefaultValue && field.resetOnHide) {\n        let parent = field.parent;\n        while (parent && !parent.hideExpression && !parent.hide) {\n          parent = parent.parent;\n        }\n        setDefaultValue = !parent || !(parent.hideExpression || parent.hide);\n      }\n\n      if (setDefaultValue) {\n        assignFieldValue(field, field.defaultValue);\n      }\n    }\n\n    this.initFieldWrappers(field);\n  }\n\n  private initFieldWrappers(field: FormlyFieldConfig) {\n    field.wrappers = field.wrappers || [];\n    const fieldTemplateManipulators: TemplateManipulators = {\n      preWrapper: [],\n      postWrapper: [],\n      ...(field.templateOptions.templateManipulators || {}),\n    };\n\n    field.wrappers = [\n      ...this.formlyConfig.templateManipulators.preWrapper.map(m => m(field)),\n      ...fieldTemplateManipulators.preWrapper.map(m => m(field)),\n      ...field.wrappers,\n      ...this.formlyConfig.templateManipulators.postWrapper.map(m => m(field)),\n      ...fieldTemplateManipulators.postWrapper.map(m => m(field)),\n    ].filter((el, i, a) => el && i === a.indexOf(el));\n  }\n\n  private getFieldComponentInstance(field: FormlyFieldConfigCache) {\n    const componentRef = this.formlyConfig.resolveFieldTypeRef(field);\n    const instance: FormlyExtension = componentRef ? componentRef.instance as any : {};\n\n    return {\n      prePopulate: () => instance.prePopulate && instance.prePopulate(field),\n      onPopulate: () => instance.onPopulate && instance.onPopulate(field),\n      postPopulate: () => instance.postPopulate && instance.postPopulate(field),\n    };\n  }\n}\n","import { NgModule, ModuleWithProviders, ANALYZE_FOR_ENTRY_COMPONENTS, Inject, Optional } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormlyForm } from './components/formly.form';\nimport { FormlyField } from './components/formly.field';\nimport { FormlyAttributes } from './components/formly.attributes';\nimport { FormlyConfig, ConfigOption, FORMLY_CONFIG } from './services/formly.config';\nimport { FormlyFormBuilder } from './services/formly.form.builder';\nimport { FormlyGroup } from './templates/formly.group';\nimport { FormlyValidationMessage } from './templates/formly.validation-message';\nimport { FormlyTemplateType } from './templates/field-template.type';\n\nimport { FieldExpressionExtension } from './extensions/field-expression/field-expression';\nimport { FieldValidationExtension } from './extensions/field-validation/field-validation';\nimport { FieldFormExtension } from './extensions/field-form/field-form';\nimport { CoreExtension } from './extensions/core/core';\nimport { FieldArrayType } from './templates/field-array.type';\n\nexport function defaultFormlyConfig(formlyConfig: FormlyConfig): ConfigOption {\n  return {\n    types: [\n      { name: 'formly-group', component: FormlyGroup },\n      { name: 'formly-template', component: FormlyTemplateType },\n    ],\n    extensions: [\n      { name: 'core', extension: new CoreExtension(formlyConfig) },\n      { name: 'field-validation', extension: new FieldValidationExtension(formlyConfig) },\n      { name: 'field-form', extension: new FieldFormExtension(formlyConfig) },\n      { name: 'field-expression', extension: new FieldExpressionExtension() },\n    ],\n  };\n}\n\n@NgModule({\n  declarations: [\n    FormlyForm,\n    FormlyField,\n    FormlyAttributes,\n    FormlyGroup,\n    FormlyValidationMessage,\n    FormlyTemplateType,\n    FieldArrayType as any,\n  ],\n  entryComponents: [FormlyGroup, FormlyTemplateType],\n  exports: [FormlyForm, FormlyField, FormlyAttributes, FormlyGroup, FormlyValidationMessage],\n  imports: [CommonModule],\n})\nexport class FormlyModule {\n  static forRoot(config: ConfigOption = {}): ModuleWithProviders<FormlyModule> {\n    return {\n      ngModule: FormlyModule,\n      providers: [\n        { provide: FORMLY_CONFIG, multi: true, useFactory: defaultFormlyConfig, deps: [FormlyConfig] },\n        { provide: FORMLY_CONFIG, useValue: config, multi: true },\n        { provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: config, multi: true },\n        FormlyConfig,\n        FormlyFormBuilder,\n      ],\n    };\n  }\n\n  static forChild(config: ConfigOption = {}): ModuleWithProviders<FormlyModule> {\n    return {\n      ngModule: FormlyModule,\n      providers: [\n        { provide: FORMLY_CONFIG, multi: true, useFactory: defaultFormlyConfig, deps: [FormlyConfig] },\n        { provide: FORMLY_CONFIG, useValue: config, multi: true },\n        { provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: config, multi: true },\n        FormlyFormBuilder,\n      ],\n    };\n  }\n\n  constructor(\n    configService: FormlyConfig,\n    @Optional() @Inject(FORMLY_CONFIG) configs: ConfigOption[] = [],\n  ) {\n    if (!configs) {\n      return;\n    }\n\n    configs.forEach(config => configService.addConfig(config));\n  }\n}\n"]}