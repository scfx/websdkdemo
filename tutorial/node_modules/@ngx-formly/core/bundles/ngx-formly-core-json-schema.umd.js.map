{"version":3,"file":"ngx-formly-core-json-schema.umd.js","sources":["node_modules/tslib/tslib.es6.js","@ngx-formly/core/json-schema/formly-json-schema.service.ts"],"names":["getFieldInitialValue","reverseDeepMerge","Injectable"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { FormlyFieldConfig } from '@ngx-formly/core';\nimport { JSONSchema7, JSONSchema7TypeName } from 'json-schema';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport {\n  ÉµreverseDeepMerge as reverseDeepMerge,\n  ÉµgetFieldInitialValue as getFieldInitialValue,\n  Éµclone as clone,\n} from '@ngx-formly/core';\n\nexport interface FormlyJsonschemaOptions {\n  /**\n   * allows to intercept the mapping, taking the already mapped\n   * formly field and the original JSONSchema source from which it\n   * was mapped.\n   */\n  map?: (mappedField: FormlyFieldConfig, mapSource: JSONSchema7) => FormlyFieldConfig;\n}\n\nfunction isInteger(value: any) {\n  return Number.isInteger\n    ? Number.isInteger(value)\n    : typeof value === 'number' && Math.floor(value) === value;\n}\n\nfunction isEmpty(v: any) {\n  return v === '' || v === undefined || v === null;\n}\n\nfunction isConst(schema: JSONSchema7) {\n  return schema.hasOwnProperty('const') || (schema.enum && schema.enum.length === 1);\n}\n\nfunction totalMatchedFields(field: FormlyFieldConfig): number {\n  if (!field.fieldGroup) {\n    return field.key && getFieldInitialValue(field) !== undefined ? 1 : 0;\n  }\n\n  return field.fieldGroup.reduce((s, f) => totalMatchedFields(f) + s, 0);\n}\n\ninterface IOptions extends FormlyJsonschemaOptions {\n  schema: JSONSchema7;\n  resetOnHide?: boolean;\n  shareFormControl?: boolean;\n  ignoreDefault?: boolean;\n  readOnly?: boolean;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class FormlyJsonschema {\n  toFieldConfig(schema: JSONSchema7, options?: FormlyJsonschemaOptions): FormlyFieldConfig {\n    return this._toFieldConfig(schema, { schema, ...(options || {}) });\n  }\n\n  private _toFieldConfig(schema: JSONSchema7, options: IOptions): FormlyFieldConfig {\n    schema = this.resolveSchema(schema, options);\n\n    let field: FormlyFieldConfig = {\n      type: this.guessType(schema),\n      defaultValue: schema.default,\n      templateOptions: {\n        label: schema.title,\n        readonly: schema.readOnly,\n        description: schema.description,\n      },\n    };\n\n    if (!options.ignoreDefault && (schema.readOnly || options.readOnly)) {\n      field.templateOptions.disabled = true;\n      options = { ...options, readOnly: true };\n    }\n\n    if (options.resetOnHide) {\n      field['resetOnHide'] = true;\n    }\n\n    if (options.shareFormControl === false) {\n      field['shareFormControl'] = false;\n    }\n\n    if (options.ignoreDefault) {\n      delete field.defaultValue;\n    }\n\n    switch (field.type) {\n      case 'null': {\n        this.addValidator(field, 'null', ({ value }) => value === null);\n        break;\n      }\n      case 'number':\n      case 'integer': {\n        field.parsers = [v => isEmpty(v) ? null : Number(v)];\n        if (schema.hasOwnProperty('minimum')) {\n          field.templateOptions.min = schema.minimum;\n        }\n\n        if (schema.hasOwnProperty('maximum')) {\n          field.templateOptions.max = schema.maximum;\n        }\n\n        if (schema.hasOwnProperty('exclusiveMinimum')) {\n          field.templateOptions.exclusiveMinimum = schema.exclusiveMinimum;\n          this.addValidator(field, 'exclusiveMinimum', ({ value }) => isEmpty(value) || (value > schema.exclusiveMinimum));\n        }\n\n        if (schema.hasOwnProperty('exclusiveMaximum')) {\n          field.templateOptions.exclusiveMaximum = schema.exclusiveMaximum;\n          this.addValidator(field, 'exclusiveMaximum', ({ value }) => isEmpty(value) || (value < schema.exclusiveMaximum));\n        }\n\n        if (schema.hasOwnProperty('multipleOf')) {\n          field.templateOptions.step = schema.multipleOf;\n          this.addValidator(field, 'multipleOf', ({ value }) => {\n            if (isEmpty(value) || typeof value !== 'number' || value === 0 || schema.multipleOf <= 0) {\n              return true;\n            }\n\n            return isInteger(value / schema.multipleOf);\n          });\n        }\n        break;\n      }\n      case 'string': {\n        const schemaType = schema.type as JSONSchema7TypeName;\n        if (Array.isArray(schemaType) && (schemaType.indexOf('null') !== -1)) {\n          field.parsers = [v => isEmpty(v) ? null : v];\n        }\n\n        ['minLength', 'maxLength', 'pattern'].forEach(prop => {\n          if (schema.hasOwnProperty(prop)) {\n            field.templateOptions[prop] = schema[prop];\n          }\n        });\n        break;\n      }\n      case 'object': {\n        field.fieldGroup = [];\n\n        const [propDeps, schemaDeps] = this.resolveDependencies(schema);\n        Object.keys(schema.properties || {}).forEach(key => {\n          const f = this._toFieldConfig(<JSONSchema7> schema.properties[key], options);\n          field.fieldGroup.push(f);\n          f.key = key;\n          if (Array.isArray(schema.required) && schema.required.indexOf(key) !== -1) {\n            f.templateOptions.required = true;\n          }\n          if (f.templateOptions && !f.templateOptions.required && propDeps[key]) {\n            f.expressionProperties = {\n              'templateOptions.required': m => m && propDeps[key].some(k => !isEmpty(m[k])),\n            };\n          }\n\n          if (schemaDeps[key]) {\n            const getConstValue = (s: JSONSchema7) => {\n              return s.hasOwnProperty('const') ? s.const : s.enum[0];\n            };\n\n            const oneOfSchema = schemaDeps[key].oneOf;\n            if (\n              oneOfSchema\n              && oneOfSchema.every(o => o.properties && o.properties[key] && isConst(o.properties[key]))\n            ) {\n              oneOfSchema.forEach(oneOfSchemaItem => {\n                const { [key]: constSchema, ...properties } = oneOfSchemaItem.properties;\n                field.fieldGroup.push({\n                  ...this._toFieldConfig({ ...oneOfSchemaItem, properties }, { ...options, resetOnHide: true }),\n                  hideExpression: m => !m || getConstValue(constSchema) !== m[key],\n                });\n              });\n            } else {\n              field.fieldGroup.push({\n                ...this._toFieldConfig(schemaDeps[key], options),\n                hideExpression: m => !m || isEmpty(m[key]),\n              });\n            }\n\n          }\n        });\n\n        if (schema.oneOf) {\n          field.fieldGroup.push(this.resolveMultiSchema(\n            'oneOf',\n            <JSONSchema7[]> schema.oneOf,\n            { ...options, shareFormControl: false },\n          ));\n        }\n\n        if (schema.anyOf) {\n          field.fieldGroup.push(this.resolveMultiSchema(\n            'anyOf',\n            <JSONSchema7[]> schema.anyOf,\n            options,\n          ));\n        }\n        break;\n      }\n      case 'array': {\n        if (schema.hasOwnProperty('minItems')) {\n          field.templateOptions.minItems = schema.minItems;\n          this.addValidator(field, 'minItems', ({ value }) => isEmpty(value) || (value.length >= schema.minItems));\n        }\n        if (schema.hasOwnProperty('maxItems')) {\n          field.templateOptions.maxItems = schema.maxItems;\n          this.addValidator(field, 'maxItems', ({ value }) => isEmpty(value) || (value.length <= schema.maxItems));\n        }\n        if (schema.hasOwnProperty('uniqueItems')) {\n          field.templateOptions.uniqueItems = schema.uniqueItems;\n          this.addValidator(field, 'uniqueItems', ({ value }) => {\n            if (isEmpty(value) || !schema.uniqueItems) {\n              return true;\n            }\n\n            const uniqueItems = Array.from(\n              new Set(value.map((v: any) => JSON.stringify(v))),\n            );\n\n            return uniqueItems.length === value.length;\n          });\n        }\n\n        // resolve items schema needed for isEnum check\n        if (schema.items && !Array.isArray(schema.items)) {\n          schema.items = this.resolveSchema(<JSONSchema7> schema.items, options);\n        }\n\n        // TODO: remove isEnum check once adding an option to skip extension\n        if (!this.isEnum(schema)) {\n          const _this = this;\n          Object.defineProperty(field, 'fieldArray', {\n            get: function() {\n              if (!Array.isArray(schema.items)) {\n                // When items is a single schema, the additionalItems keyword is meaningless, and it should not be used.\n                return _this._toFieldConfig(<JSONSchema7> schema.items, options);\n              }\n\n              const length = this.fieldGroup ? this.fieldGroup.length : 0;\n              const itemSchema = schema.items[length]\n                ? schema.items[length]\n                : schema.additionalItems;\n\n              return itemSchema\n                ? _this._toFieldConfig(<JSONSchema7> itemSchema, options)\n                : {};\n            },\n            enumerable: true,\n            configurable: true,\n          });\n        }\n\n        break;\n      }\n    }\n\n    if (schema.hasOwnProperty('const')) {\n      field.templateOptions.const = schema.const;\n      this.addValidator(field, 'const', ({ value }) => value === schema.const);\n      if (!field.type) {\n        field.defaultValue = schema.const;\n      }\n    }\n\n    if (this.isEnum(schema)) {\n      field.templateOptions.multiple = field.type === 'array';\n      field.type = 'enum';\n      field.templateOptions.options = this.toEnumOptions(schema);\n    }\n\n    // map in possible formlyConfig options from the widget property\n    if (schema['widget'] && schema['widget'].formlyConfig) {\n      field = reverseDeepMerge(schema['widget'].formlyConfig, field);\n    }\n\n    // if there is a map function passed in, use it to allow the user to\n    // further customize how fields are being mapped\n    return options.map ? options.map(field, schema) : field;\n  }\n\n  private resolveSchema(schema: JSONSchema7, options: IOptions) {\n    if (schema.$ref) {\n      schema = this.resolveDefinition(schema, options);\n    }\n\n    if (schema.allOf) {\n      schema = this.resolveAllOf(schema, options);\n    }\n\n    return schema;\n  }\n\n  private resolveAllOf({ allOf, ...baseSchema }: JSONSchema7, options: IOptions) {\n    if (!allOf.length) {\n      throw Error(`allOf array can not be empty ${allOf}.`);\n    }\n\n    return allOf.reduce((base: JSONSchema7, schema: JSONSchema7) => {\n      schema = this.resolveSchema(schema, options);\n      if (base.required && schema.required) {\n        base.required = [...base.required, ...schema.required];\n      }\n\n      if (schema.uniqueItems) {\n        base.uniqueItems = schema.uniqueItems;\n      }\n\n      // resolve to min value\n      ['maxLength', 'maximum', 'exclusiveMaximum', 'maxItems', 'maxProperties']\n        .forEach(prop => {\n          if (!isEmpty(base[prop]) && !isEmpty(schema[prop])) {\n            base[prop] = base[prop] < schema[prop] ? base[prop] : schema[prop];\n          }\n        });\n\n      // resolve to max value\n      ['minLength', 'minimum', 'exclusiveMinimum', 'minItems', 'minProperties']\n        .forEach(prop => {\n          if (!isEmpty(base[prop]) && !isEmpty(schema[prop])) {\n            base[prop] = base[prop] > schema[prop] ? base[prop] : schema[prop];\n          }\n        });\n\n      return reverseDeepMerge(base, schema);\n    }, baseSchema);\n  }\n\n  private resolveMultiSchema(\n    mode: 'oneOf' | 'anyOf',\n    schemas: JSONSchema7[],\n    options: IOptions,\n  ): FormlyFieldConfig {\n    return {\n      type: 'multischema',\n      fieldGroup: [\n        {\n          type: 'enum',\n          defaultValue: -1,\n          templateOptions: {\n            multiple: mode === 'anyOf',\n            options: schemas\n              .map((s, i) => ({ label: s.title, value: i, disabled: s.readOnly })),\n          },\n        },\n        {\n          fieldGroup: schemas.map((s, i) => ({\n            ...this._toFieldConfig(s, { ...options, resetOnHide: true }),\n            hideExpression: (m, fs, f) => {\n              const control = f.parent.parent.fieldGroup[0].formControl;\n              if (control.value === -1) {\n                const value = f.parent.fieldGroup\n                  .map((f, i) => [f, i] as [FormlyFieldConfig, number])\n                  .filter(([f, i]) => {\n                    console.warn('---', control.value);\n                    return this.isFieldValid(f, schemas[i], options);\n                  })\n                  .sort(([f1], [f2]) => {\n                    const matchedFields1 = totalMatchedFields(f1);\n                    const matchedFields2 = totalMatchedFields(f2);\n                    if (matchedFields1 === matchedFields2) {\n                      if (f1.templateOptions.disabled === f2.templateOptions.disabled) {\n                        return 0;\n                      }\n\n                      return f1.templateOptions.disabled ? 1 : -1;\n                    }\n\n                    return matchedFields2 > matchedFields1 ? 1 : -1;\n                  })\n                  .map(([, i]) => i)\n                ;\n\n                const normalizedValue = [value.length === 0 ? 0 : value[0]];\n                const formattedValue = mode === 'anyOf' ? normalizedValue : normalizedValue[0];\n                control.setValue(formattedValue);\n              }\n\n              return Array.isArray(control.value)\n                ? control.value.indexOf(i) === -1\n                : control.value !== i;\n            },\n          })),\n        },\n      ],\n    };\n  }\n\n  private resolveDefinition(schema: JSONSchema7, options: IOptions): JSONSchema7 {\n    const [uri, pointer] = schema.$ref.split('#/');\n    if (uri) {\n      throw Error(`Remote schemas for ${schema.$ref} not supported yet.`);\n    }\n\n    const definition = !pointer ? null : pointer.split('/').reduce(\n      (def, path) => def && def.hasOwnProperty(path) ? def[path] : null,\n      options.schema,\n    );\n\n    if (!definition) {\n      throw Error(`Cannot find a definition for ${schema.$ref}.`);\n    }\n\n    if (definition.$ref) {\n      return this.resolveDefinition(definition, options);\n    }\n\n    return {\n      ...definition,\n      ...['title', 'description', 'default'].reduce((annotation, p) => {\n        if (schema.hasOwnProperty(p)) {\n          annotation[p] = schema[p];\n        }\n\n        return annotation;\n      }, {}),\n    };\n  }\n\n  private resolveDependencies(schema: JSONSchema7) {\n    const deps = {};\n    const schemaDeps = {};\n\n    Object.keys(schema.dependencies || {}).forEach(prop => {\n      const dependency = schema.dependencies[prop] as JSONSchema7;\n      if (Array.isArray(dependency)) {\n        // Property dependencies\n        dependency.forEach(dep => {\n          if (!deps[dep]) {\n            deps[dep] = [prop];\n          } else {\n            deps[dep].push(prop);\n          }\n        });\n      } else {\n        // schema dependencies\n        schemaDeps[prop] = dependency;\n      }\n    });\n\n    return [deps, schemaDeps];\n  }\n\n  private guessType(schema: JSONSchema7) {\n    const type = schema.type as JSONSchema7TypeName;\n    if (!type && schema.properties) {\n      return 'object';\n    }\n\n    if (Array.isArray(type)) {\n      if (type.length === 1) {\n        return type[0];\n      }\n\n      if (type.length === 2 && type.indexOf('null') !== -1) {\n        return type[type[0] === 'null' ? 1 : 0];\n      }\n    }\n\n    return type;\n  }\n\n  private addValidator(field: FormlyFieldConfig, name: string, validator: (control: AbstractControl) => boolean) {\n    field.validators = field.validators || {};\n    field.validators[name] = validator;\n  }\n\n  private isEnum(schema: JSONSchema7) {\n    return schema.enum\n      || (schema.anyOf && schema.anyOf.every(isConst))\n      || (schema.oneOf && schema.oneOf.every(isConst))\n      || schema.uniqueItems && schema.items && !Array.isArray(schema.items) && this.isEnum(<JSONSchema7> schema.items);\n  }\n\n  private toEnumOptions(schema: JSONSchema7) {\n    if (schema.enum) {\n      return schema.enum.map(value => ({ value, label: value }));\n    }\n\n    const toEnum = (s: JSONSchema7) => {\n      const value = s.hasOwnProperty('const') ? s.const : s.enum[0];\n      const option: any = { value: value, label: s.title || value };\n      if (s.readOnly) {\n        option.disabled = true;\n      }\n\n      return option;\n    };\n\n    if (schema.anyOf) {\n      return schema.anyOf.map(toEnum);\n    }\n\n    if (schema.oneOf) {\n      return schema.oneOf.map(toEnum);\n    }\n\n    return this.toEnumOptions(<JSONSchema7> schema.items);\n  }\n\n  private isFieldValid(field: FormlyFieldConfig, schema: JSONSchema7, options: IOptions): boolean {\n    const { form } = (field.options as any)._buildField({\n      form: new FormGroup({}),\n      fieldGroup: [this._toFieldConfig(schema, { ...options, resetOnHide: true, ignoreDefault: true, map: null })],\n      model: field.model ? clone(field.model) : (field.fieldArray ? [] : {}),\n    });\n\n    return form.valid;\n  }\n}\n"]}