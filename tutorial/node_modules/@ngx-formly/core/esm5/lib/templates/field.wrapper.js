/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { ViewContainerRef, ViewChild } from '@angular/core';
import { FieldType } from './field.type';
/**
 * @abstract
 * @template F
 */
import * as ɵngcc0 from '@angular/core';

var _c0 = ["fieldComponent"];
var FieldWrapper = /** @class */ (function (_super) {
    tslib_1.__extends(FieldWrapper, _super);
    function FieldWrapper() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FieldWrapper.propDecorators = {
        fieldComponent: [{ type: ViewChild, args: ['fieldComponent', (/** @type {?} */ ({ read: ViewContainerRef, static: false })),] }]
    };
FieldWrapper.ɵfac = /*@__PURE__*/ function () { var ɵFieldWrapper_BaseFactory; return function FieldWrapper_Factory(t) { return (ɵFieldWrapper_BaseFactory || (ɵFieldWrapper_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(FieldWrapper)))(t || FieldWrapper); }; }();
FieldWrapper.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: FieldWrapper, viewQuery: function FieldWrapper_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c0, 5, ViewContainerRef);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.fieldComponent = _t.first);
    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });

    return FieldWrapper;
}(FieldType));
export { FieldWrapper };
if (false) {
    /** @type {?} */
    FieldWrapper.prototype.fieldComponent;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmllbGQud3JhcHBlci5qcyIsInNvdXJjZXMiOlsiQG5neC1mb3JtbHkvY29yZS9saWIvdGVtcGxhdGVzL2ZpZWxkLndyYXBwZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzVELE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxjQUFjLENBQUM7QUFDekM7QUFBSTtBQUFhO0FBQWU7Ozs7QUFFaEM7QUFBc0QsSUFBc0Msd0NBQVk7QUFBQyxJQUF6RztBQUEwQjtBQUF5RSxJQUduRyxDQUFDO0FBQ0Q7QUFBb0MsaUNBRmpDLFNBQVMsU0FBQyxnQkFBZ0IsRUFBRSxtQkFBSyxFQUFFLElBQUksRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFLEVBQUE7QUFBTTs7Ozs7Ozs7QUFBTTtBQUFDLElBQzFGLG1CQUFDO0FBQ0EsQ0FEQSxBQUhELENBQTRGLFNBQVMsR0FHcEc7QUFDRCxTQUpzQixZQUFZO0FBQUk7QUFBYTtBQUFxQixJQUV0RSxzQ0FBOEc7QUFDaEg7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFZpZXdDb250YWluZXJSZWYsIFZpZXdDaGlsZCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRmllbGRUeXBlIH0gZnJvbSAnLi9maWVsZC50eXBlJztcbmltcG9ydCB7IEZvcm1seUZpZWxkQ29uZmlnIH0gZnJvbSAnLi4vY29tcG9uZW50cy9mb3JtbHkuZmllbGQuY29uZmlnJztcblxuZXhwb3J0IGFic3RyYWN0IGNsYXNzIEZpZWxkV3JhcHBlcjxGIGV4dGVuZHMgRm9ybWx5RmllbGRDb25maWcgPSBGb3JtbHlGaWVsZENvbmZpZz4gZXh0ZW5kcyBGaWVsZFR5cGU8Rj4ge1xuICAvLyBUT0RPOiByZW1vdmUgYGFueWAsIG9uY2UgZHJvcHBpbmcgYW5ndWxhciBgVjdgIHN1cHBvcnQuXG4gIEBWaWV3Q2hpbGQoJ2ZpZWxkQ29tcG9uZW50JywgPGFueT57IHJlYWQ6IFZpZXdDb250YWluZXJSZWYsIHN0YXRpYzogZmFsc2UgfSkgZmllbGRDb21wb25lbnQ6IFZpZXdDb250YWluZXJSZWY7XG59XG4iXX0=